`-FunctionDecl 0x1221286b8  line:2:5 config_parse_line_max 'int (const char *, const char *, unsigned int, const char *, unsigned int, const char *, int, const char *, void *, void *)'
  |-ParmVarDecl 0x1221280d8 <line:3:17, col:29> col:29 used unit 'const char *'
  |-ParmVarDecl 0x122128158 <line:4:17, col:29> col:29 used filename 'const char *'
  |-ParmVarDecl 0x1221281d8 <line:5:17, col:26> col:26 used line 'unsigned int'
  |-ParmVarDecl 0x122128258 <line:6:17, col:29> col:29 section 'const char *'
  |-ParmVarDecl 0x1221282d8 <line:7:17, col:26> col:26 section_line 'unsigned int'
  |-ParmVarDecl 0x122128358 <line:8:17, col:29> col:29 used lvalue 'const char *'
  |-ParmVarDecl 0x1221283d8 <line:9:17, col:21> col:21 ltype 'int'
  |-ParmVarDecl 0x122128458 <line:10:17, col:29> col:29 used rvalue 'const char *'
  |-ParmVarDecl 0x1221284d8 <line:11:17, col:23> col:23 used data 'void *'
  |-ParmVarDecl 0x122128558 <line:12:17, col:23> col:23 userdata 'void *'
  `-CompoundStmt 0x1221435e0 <col:33, line:46:18>
    |-DeclStmt 0x122140ad0 <line:15:9, col:14>
    | `-VarDecl 0x122140a68 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x122140c88 <line:17:9, col:24> 'int'
    | |-ImplicitCastExpr 0x122140c70 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140c00 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140cb0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140c20 <col:16> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |-CallExpr 0x122140d20 <line:18:9, col:22> 'int'
    | |-ImplicitCastExpr 0x122140d08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140cc8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140d48 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140ce8 <col:16> 'const char *' lvalue ParmVar 0x122128358 'lvalue' 'const char *'
    |-CallExpr 0x122140db8 <line:19:9, col:22> 'int'
    | |-ImplicitCastExpr 0x122140da0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140d60 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140de0 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140d80 <col:16> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |-CallExpr 0x122140e50 <line:20:9, col:20> 'int'
    | |-ImplicitCastExpr 0x122140e38 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122140df8 <col:9> 'int ()' Function 0x122140b48 'assert' 'int ()'
    | `-ImplicitCastExpr 0x122140e78 <col:16> 'void *' <LValueToRValue>
    |   `-DeclRefExpr 0x122140e18 <col:16> 'void *' lvalue ParmVar 0x1221284d8 'data' 'void *'
    |-IfStmt 0x122143580 <line:22:9, line:44:9> has_else
    | |-CallExpr 0x122140fc8 <line:22:13, col:27> 'int'
    | | |-ImplicitCastExpr 0x122140fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x122140f70 <col:13> 'int ()' Function 0x122140eb8 'isempty' 'int ()'
    | | `-ImplicitCastExpr 0x122140ff0 <col:21> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x122140f90 <col:21> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    | |-BinaryOperator 0x1221410f8 <line:24:17, col:23> '<dependent type>' contains-errors '='
    | | |-UnaryOperator 0x1221410c0 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x1221410a8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x122141088 <col:18> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1221410d8 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122143558 <line:25:14, line:44:9>
    |   |-BinaryOperator 0x122141370 <line:28:17, col:48> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x122141118 <col:17> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   | `-CallExpr 0x122141338 <col:21, col:48> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x122141218 <col:21> 'int ()' Function 0x122141160 'parse_size' 'int ()'
    |   |   |-DeclRefExpr 0x122141238 <col:32> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |   |   |-IntegerLiteral 0x122141258 <col:40> 'int' 1024
    |   |   `-UnaryOperator 0x122141320 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x122141300 <col:47> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x122141740 <line:29:17, line:32:17>
    |   | |-BinaryOperator 0x1221413e8 <line:29:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1221413d0 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x122141390 <col:21> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   | | `-IntegerLiteral 0x1221413b0 <col:25> 'int' 0
    |   | `-CompoundStmt 0x122141720 <col:28, line:32:17>
    |   |   |-CallExpr 0x122141698 <line:30:25, col:83> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1221414e8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'
    |   |   | |-DeclRefExpr 0x122141508 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'
    |   |   | |-RecoveryExpr 0x122141678 <col:42> '<dependent type>' contains-errors lvalue
    |   |   | |-DeclRefExpr 0x122141540 <col:51> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |   |   | |-DeclRefExpr 0x122141560 <col:61> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'
    |   |   | |-DeclRefExpr 0x122141580 <col:67> 'int' lvalue Var 0x122140a68 'r' 'int'
    |   |   | |-StringLiteral 0x1221415e0 <col:70> 'char[4]' lvalue "STR"
    |   |   | `-DeclRefExpr 0x122141600 <col:77> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |   |   `-ReturnStmt 0x122141710 <line:31:25, col:32>
    |   |     `-IntegerLiteral 0x1221416f0 <col:32> 'int' 0
    |   `-IfStmt 0x122143528 <line:34:17, line:43:25> has_else
    |     |-BinaryOperator 0x1221417d8 <line:34:21, col:25> 'int' contains-errors '<'
    |     | |-RecoveryExpr 0x1221417b8 <col:21> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x122141778 <col:25> 'int' 79
    |     |-CompoundStmt 0x1221432c8 <col:29, line:38:17>
    |     | |-CallExpr 0x122141968 <line:36:25, col:87> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x1221417f8 <col:25> 'int ()' Function 0x122141430 'log_syntax' 'int ()'
    |     | | |-DeclRefExpr 0x122141818 <col:36> 'const char *' lvalue ParmVar 0x1221280d8 'unit' 'const char *'
    |     | | |-RecoveryExpr 0x122141948 <col:42> '<dependent type>' contains-errors lvalue
    |     | | |-DeclRefExpr 0x122141850 <col:55> 'const char *' lvalue ParmVar 0x122128158 'filename' 'const char *'
    |     | | |-DeclRefExpr 0x122141870 <col:65> 'unsigned int' lvalue ParmVar 0x1221281d8 'line' 'unsigned int'
    |     | | |-IntegerLiteral 0x122141890 <col:71> 'int' 0
    |     | | |-StringLiteral 0x1221418b0 <col:74> 'char[4]' lvalue "STR"
    |     | | `-DeclRefExpr 0x1221418d0 <col:81> 'const char *' lvalue ParmVar 0x122128458 'rvalue' 'const char *'
    |     | `-BinaryOperator 0x1221432a8 <line:37:25, col:31> '<dependent type>' contains-errors '='
    |     |   |-UnaryOperator 0x122143290 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x122143278 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     |   |   `-RecoveryExpr 0x122143258 <col:26> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x122143218 <col:31> 'int' 79
    |     `-IfStmt 0x1221434f8 <line:38:24, line:43:25> has_else
    |       |-RecoveryExpr 0x122143370 <line:38:28, col:55> '_Bool' contains-errors
    |       |-CompoundStmt 0x1221434e0 <col:58, line:42:17>
    |       `-NullStmt 0x1221434f0 <line:43:25>
    `-ReturnStmt 0x1221435d0 <line:46:9, col:16>
      `-IntegerLiteral 0x1221435b0 <col:16> 'int' 0
