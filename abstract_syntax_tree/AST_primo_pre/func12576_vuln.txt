`-FunctionDecl 0x11e128310  line:1:13 invalid sasl_fail 'void (int *, const char *, const char *)' static
  |-ParmVarDecl 0x11e128128 <col:23, col:39> col:39 referenced invalid server 'int *'
  |-ParmVarDecl 0x11e1281a8 <col:47, col:59> col:59 used data 'const char *'
  |-ParmVarDecl 0x11e128228 <col:65, col:77> col:77 from 'const char *'
  `-CompoundStmt 0x11e142188 <line:2:1, line:21:1>
    |-DeclStmt 0x11e1284e8 <line:3:2, col:22>
    | |-VarDecl 0x11e1283e8 <col:2, col:8> col:8 used params 'char *'
    | `-VarDecl 0x11e128468 <col:2, col:17> col:17 used error 'char *'
    |-IfStmt 0x11e1418a8 <line:6:2, line:9:2>
    | |-BinaryOperator 0x11e128588 <line:6:6, col:30> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x11e128520 <col:6, col:14> '<dependent type>' contains-errors lvalue ->sasl_timeout
    | | | `-RecoveryExpr 0x11e128500 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11e128568 <col:30> 'int' 0
    | `-CompoundStmt 0x11e141888 <col:33, line:9:2>
    |   |-CallExpr 0x11e128788 <line:7:3, col:39> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11e128700 <col:3> 'int ()' Function 0x11e128648 'g_source_remove' 'int ()'
    |   | `-CXXDependentScopeMemberExpr 0x11e128740 <col:19, col:27> '<dependent type>' contains-errors lvalue ->sasl_timeout
    |   |   `-RecoveryExpr 0x11e128720 <col:19> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11e141868 <line:8:3, col:26> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x11e141800 <col:3, col:11> '<dependent type>' contains-errors lvalue ->sasl_timeout
    |     | `-RecoveryExpr 0x11e1287d0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x11e1287b0 <col:3> 'int *' lvalue ParmVar 0x11e128128 'server' 'int *'
    |     `-IntegerLiteral 0x11e141848 <col:26> 'int' 0
    |-BinaryOperator 0x11e141b68 <line:11:2, col:49> 'char *' contains-errors '='
    | |-DeclRefExpr 0x11e1418c8 <col:2> 'char *' lvalue Var 0x11e1283e8 'params' 'char *'
    | `-CallExpr 0x11e141b28 <col:11, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e1419c8 <col:11> 'int ()' Function 0x11e141910 'event_get_params' 'int ()'
    |   |-DeclRefExpr 0x11e1419e8 <col:28> 'const char *' lvalue ParmVar 0x11e1281a8 'data' 'const char *'
    |   |-IntegerLiteral 0x11e141a08 <col:34> 'int' 2
    |   |-RecoveryExpr 0x11e141b08 <col:37> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x11e141a90 <col:43, col:44> 'char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x11e141a40 <col:44> 'char *' lvalue Var 0x11e128468 'error' 'char *'
    |-BinaryOperator 0x11e141c70 <line:13:2, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11e141bd0 <col:2, col:10> '<dependent type>' contains-errors lvalue ->sasl_success
    | | `-RecoveryExpr 0x11e141ba8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11e141b88 <col:2> 'int *' lvalue ParmVar 0x11e128128 'server' 'int *'
    | `-RecoveryExpr 0x11e141c50 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11e141e50 <line:15:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e141d70 <col:2> 'int ()' Function 0x11e141cb8 'signal_emit' 'int ()'
    | |-StringLiteral 0x11e141dd0 <col:14> 'char[4]' lvalue "STR"
    | |-IntegerLiteral 0x11e141df0 <col:21> 'int' 2
    | |-RecoveryExpr 0x11e141e10 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x11e141e30 <col:32> 'char *' lvalue Var 0x11e128468 'error' 'char *'
    |-CallExpr 0x11e141fb0 <line:18:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e141f70 <col:2> 'int ()' Function 0x11e141eb8 'cap_finish_negotiation' 'int ()'
    | `-RecoveryExpr 0x11e141f90 <col:25> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11e142148 <line:20:2, col:15> 'int'
      |-ImplicitCastExpr 0x11e142130 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x11e1420b8 <col:2> 'int ()' Function 0x11e142000 'g_free' 'int ()'
      `-ImplicitCastExpr 0x11e142170 <col:9> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x11e1420d8 <col:9> 'char *' lvalue Var 0x11e1283e8 'params' 'char *'
