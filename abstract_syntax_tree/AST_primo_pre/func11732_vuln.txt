`-FunctionDecl 0x14a128280  line:1:6 invalid jas_matrix_divpow2 'void (int *, int)'
  |-ParmVarDecl 0x14a128128 <col:25, col:39> col:39 invalid matrix 'int *'
  |-ParmVarDecl 0x14a1281a8 <col:47, col:51> col:51 used n 'int'
  `-CompoundStmt 0x14a8095a0 <line:2:1, line:21:1>
    |-DeclStmt 0x14a1283b8 <line:3:2, col:7>
    | `-VarDecl 0x14a128350 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x14a128450 <line:4:2, col:7>
    | `-VarDecl 0x14a1283e8 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x14a128500 <line:6:2, col:13>
    | `-VarDecl 0x14a128498 <col:2, col:6> col:6 used rowstep 'int'
    `-IfStmt 0x14a809580 <line:9:2, line:20:2>
      |-BinaryOperator 0x14a808960 <line:9:6, col:69> 'int' contains-errors '&&'
      | |-BinaryOperator 0x14a128718 <col:6, col:35> 'int' contains-errors '>'
      | | |-CallExpr 0x14a1286d0 <col:6, col:31> '<dependent type>' contains-errors
      | | | |-DeclRefExpr 0x14a128690 <col:6> 'int ()' Function 0x14a1285d8 'jas_matrix_numrows' 'int ()'
      | | | `-RecoveryExpr 0x14a1286b0 <col:25> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x14a1286f8 <col:35> 'int' 0
      | `-BinaryOperator 0x14a808940 <col:40, col:69> 'int' contains-errors '>'
      |   |-CallExpr 0x14a8088f8 <col:40, col:65> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x14a8088b8 <col:40> 'int ()' Function 0x14a808800 'jas_matrix_numcols' 'int ()'
      |   | `-RecoveryExpr 0x14a8088d8 <col:59> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x14a808920 <col:69> 'int' 0
      `-CompoundStmt 0x14a809558 <col:72, line:20:2>
        |-CallExpr 0x14a808ae8 <line:10:3, col:23> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14a808a60 <col:3> 'int ()' Function 0x14a8089a8 'assert' 'int ()'
        | `-CXXDependentScopeMemberExpr 0x14a808aa0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->rows_
        |   `-RecoveryExpr 0x14a808a80 <col:10> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x14a808c78 <line:11:3, col:38> 'int' contains-errors '='
        | |-DeclRefExpr 0x14a808b10 <col:3> 'int' lvalue Var 0x14a128498 'rowstep' 'int'
        | `-CallExpr 0x14a808c50 <col:13, col:38> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a808c10 <col:13> 'int ()' Function 0x14a808b58 'jas_matrix_rowstep' 'int ()'
        |   `-RecoveryExpr 0x14a808c30 <col:32> '<dependent type>' contains-errors lvalue
        `-ForStmt 0x14a809520 <line:12:3, line:19:3>
          |-BinaryOperator 0x14a808ed0 <line:12:8, col:56> 'int' contains-errors ','
          | |-BinaryOperator 0x14a808d20 <col:8, col:20> 'int' contains-errors '='
          | | |-DeclRefExpr 0x14a808c98 <col:8> 'int' lvalue Var 0x14a128350 'i' 'int'
          | | `-CXXDependentScopeMemberExpr 0x14a808cd8 <col:12, col:20> '<dependent type>' contains-errors lvalue ->numrows_
          | |   `-RecoveryExpr 0x14a808cb8 <col:12> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x14a808eb0 <col:30, col:56> 'int' contains-errors '='
          |   |-DeclRefExpr 0x14a808e58 <col:30> 'int' lvalue Var 0x14a128498 'rowstep' 'int'
          |   `-ArraySubscriptExpr 0x14a808e90 <col:41, col:56> '<dependent type>' contains-errors lvalue
          |     |-ImplicitCastExpr 0x14a808e78 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>
          |     | `-CXXDependentScopeMemberExpr 0x14a808d78 <col:41, col:49> '<dependent type>' contains-errors lvalue ->rows_
          |     |   `-RecoveryExpr 0x14a808d58 <col:41> '<dependent type>' contains-errors lvalue
          |     `-IntegerLiteral 0x14a808dc0 <col:55> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x14a808f48 <col:59, col:63> 'int' '>'
          | |-ImplicitCastExpr 0x14a808f30 <col:59> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x14a808ef0 <col:59> 'int' lvalue Var 0x14a128350 'i' 'int'
          | `-IntegerLiteral 0x14a808f10 <col:63> 'int' 0
          |-BinaryOperator 0x14a809090 <col:66, line:13:17> 'int' ','
          | |-UnaryOperator 0x14a808f88 <line:12:66, col:68> 'int' prefix '--'
          | | `-DeclRefExpr 0x14a808f68 <col:68> 'int' lvalue Var 0x14a128350 'i' 'int'
          | `-CompoundAssignOperator 0x14a809060 <line:13:5, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          |   |-DeclRefExpr 0x14a809028 <col:5> 'int' lvalue Var 0x14a128498 'rowstep' 'int'
          |   `-ImplicitCastExpr 0x14a809048 <col:17> 'int' <LValueToRValue>
          |     `-DeclRefExpr 0x14a808fb8 <col:17> 'int' lvalue Var 0x14a128498 'rowstep' 'int'
          `-CompoundStmt 0x14a809508 <col:26, line:19:3>
            `-ForStmt 0x14a8094d0 <line:14:4, line:18:4>
              |-<<<NULL>>>
              |-<<<NULL>>>
              |-BinaryOperator 0x14a809220 <line:14:48, col:52> 'int' '>'
              | |-ImplicitCastExpr 0x14a809208 <col:48> 'int' <LValueToRValue>
              | | `-DeclRefExpr 0x14a8091c8 <col:48> 'int' lvalue Var 0x14a1283e8 'j' 'int'
              | `-IntegerLiteral 0x14a8091e8 <col:52> 'int' 0
              |-BinaryOperator 0x14a809300 <col:55, line:15:8> '<dependent type>' contains-errors ','
              | |-UnaryOperator 0x14a809260 <line:14:55, col:57> 'int' prefix '--'
              | | `-DeclRefExpr 0x14a809240 <col:57> 'int' lvalue Var 0x14a1283e8 'j' 'int'
              | `-UnaryOperator 0x14a8092e8 <line:15:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow
              |   `-RecoveryExpr 0x14a8092c8 <col:8> '<dependent type>' contains-errors lvalue
              `-CompoundStmt 0x14a8094c0 <col:14, line:18:4>
