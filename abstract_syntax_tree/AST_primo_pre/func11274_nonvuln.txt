`-FunctionDecl 0x11e940a88  line:1:5 aac_do_ioctl 'int (struct aac_dev *, int, int)'
  |-ParmVarDecl 0x11e928648 <col:18, col:35> col:35 used dev 'struct aac_dev *'
  |-ParmVarDecl 0x11e9286c8 <col:40, col:44> col:44 used cmd 'int'
  |-ParmVarDecl 0x11e928740 <col:49, col:54> col:54 __user 'int'
  `-CompoundStmt 0x11e943968 <line:2:1, line:57:1>
    |-DeclStmt 0x11e940c10 <line:3:2, col:12>
    | `-VarDecl 0x11e940ba8 <col:2, col:6> col:6 used status 'int'
    |-CallExpr 0x11e940de8 <line:5:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e940d50 <col:2> 'int ()' Function 0x11e940c98 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x11e940dd0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x11e940da8 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e940d70 <col:14> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    |-IfStmt 0x11e940ff0 <line:7:2, line:10:2>
    | |-RecoveryExpr 0x11e940e48 <line:7:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11e940e10 <col:6> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    | `-CompoundStmt 0x11e940fd0 <col:29, line:10:2>
    |   |-BinaryOperator 0x11e940f48 <line:8:3, col:13> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e940e70 <col:3> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    |   | `-UnaryOperator 0x11e940f30 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11e940f18 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11e940ef8 <col:13> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x11e940fb8 <line:9:3, col:8> 'cleanup' 0x11e940f68
    |-BinaryOperator 0x11e941238 <line:14:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e941010 <col:2> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    | `-CallExpr 0x11e941200 <col:11, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e941110 <col:11> 'int ()' Function 0x11e941058 'aac_dev_ioctl' 'int ()'
    |   |-DeclRefExpr 0x11e941130 <col:25> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    |   |-DeclRefExpr 0x11e941150 <col:30> 'int' lvalue ParmVar 0x11e9286c8 'cmd' 'int'
    |   `-RecoveryExpr 0x11e9411e0 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e941368 <line:15:2, line:16:8>
    | |-BinaryOperator 0x11e941330 <line:15:6, col:17> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x11e941258 <col:6> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    | | `-UnaryOperator 0x11e941318 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x11e941300 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x11e9412e0 <col:17> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x11e941350 <line:16:3, col:8> 'cleanup' 0x11e940f68
    |-SwitchStmt 0x11e9413c0 <line:18:2, line:51:2>
    | |-ImplicitCastExpr 0x11e9413a8 <line:18:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x11e941388 <col:10> 'int' lvalue ParmVar 0x11e9286c8 'cmd' 'int'
    | `-CompoundStmt 0x11e9436e0 <col:15, line:51:2>
    |   |-BinaryOperator 0x11e9415f8 <line:20:3, col:35> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e941400 <col:3> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    |   | `-CallExpr 0x11e9415c8 <col:12, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e941500 <col:12> 'int ()' Function 0x11e941448 'check_revision' 'int ()'
    |   |   |-DeclRefExpr 0x11e941520 <col:27> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    |   |   `-RecoveryExpr 0x11e9415a8 <col:32> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x11e941618 <line:21:3>
    |   |-BinaryOperator 0x11e941848 <line:24:3, col:35> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e941650 <col:3> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    |   | `-CallExpr 0x11e941818 <col:12, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e941750 <col:12> 'int ()' Function 0x11e941698 'ioctl_send_fib' 'int ()'
    |   |   |-DeclRefExpr 0x11e941770 <col:27> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    |   |   `-RecoveryExpr 0x11e9417f8 <col:32> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x11e941868 <line:25:3>
    |   |-BinaryOperator 0x11e942ea0 <line:27:3, col:40> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e941888 <col:3> 'int' lvalue Var 0x11e940ba8 'status' 'int'
    |   | `-CallExpr 0x11e942e70 <col:12, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e941988 <col:12> 'int ()' Function 0x11e9418d0 'open_getadapter_fib' 'int ()'
    |   |   |-DeclRefExpr 0x11e9419a8 <col:32> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    |   |   `-RecoveryExpr 0x11e942e50 <col:37> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x11e942ec0 <line:28:3>
    |   |-BreakStmt 0x11e943020 <line:31:3>
    |   |-BreakStmt 0x11e943168 <line:34:3>
    |   |-BreakStmt 0x11e9432b0 <line:37:3>
    |   |-BreakStmt 0x11e9433f8 <line:40:3>
    |   |-BreakStmt 0x11e943540 <line:43:3>
    |   |-BreakStmt 0x11e943688 <line:46:3>
    |   |-DefaultStmt 0x11e9436b8 <line:48:2, col:9>
    |   | `-NullStmt 0x11e9436b0 <col:9>
    |   `-BreakStmt 0x11e9436d8 <line:50:3>
    |-LabelStmt 0x11e943900 <line:53:1, line:54:32> 'cleanup'
    | `-CallExpr 0x11e9438d8 <col:2, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e943840 <col:2> 'int ()' Function 0x11e943788 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x11e9438c0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x11e943898 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11e943860 <col:16> 'struct aac_dev *' lvalue ParmVar 0x11e928648 'dev' 'struct aac_dev *'
    `-ReturnStmt 0x11e943958 <line:56:2, col:9>
      `-ImplicitCastExpr 0x11e943940 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e943920 <col:9> 'int' lvalue Var 0x11e940ba8 'status' 'int'
