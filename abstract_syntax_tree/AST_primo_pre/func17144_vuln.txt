`-FunctionDecl 0x15b8091f8  line:1:12 invalid vsock_stream_setsockopt 'int (struct socket *, int, int, int, unsigned int)' static
  |-ParmVarDecl 0x15a128e48 <col:36, col:51> col:51 used sock 'struct socket *'
  |-ParmVarDecl 0x15a128ec8 <line:2:8, col:12> col:12 used level 'int'
  |-ParmVarDecl 0x15a128f48 <line:3:8, col:12> col:12 used optname 'int'
  |-ParmVarDecl 0x15b809000 <line:4:8, col:18> col:18 invalid optval 'int'
  |-ParmVarDecl 0x15b809080 <line:5:8, col:21> col:21 used optlen 'unsigned int'
  `-CompoundStmt 0x15c008800 <line:6:1, line:80:1>
    |-DeclStmt 0x15b809348 <line:7:2, col:9>
    | `-VarDecl 0x15b8092e0 <col:2, col:6> col:6 used err 'int'
    |-DeclStmt 0x15b809548 <line:8:2, col:17>
    | |-RecordDecl 0x15b809360 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x15b8094c8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-DeclStmt 0x15b809748 <line:9:2, col:24>
    | |-RecordDecl 0x15b809560 <col:2, col:9> col:9 struct vsock_sock
    | `-VarDecl 0x15b8096c8 <col:2, col:21> col:21 used vsk 'struct vsock_sock *'
    |-DeclStmt 0x15b809948 <line:10:2, col:41>
    | |-RecordDecl 0x15b809760 <col:8, col:15> col:15 struct vsock_transport
    | `-VarDecl 0x15b8098c8 <col:2, col:32> col:32 used transport 'const struct vsock_transport *'
    |-IfStmt 0x15b809aa0 <line:13:2, line:14:11>
    | |-BinaryOperator 0x15b8099d8 <line:13:6, col:15> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x15b809960 <col:6> 'int' lvalue ParmVar 0x15a128ec8 'level' 'int'
    | | `-RecoveryExpr 0x15b8099b8 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15b809a90 <line:14:3, col:11>
    |   `-UnaryOperator 0x15b809a78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x15b809a60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x15b809a40 <col:11> '<dependent type>' contains-errors lvalue
    |-DoStmt 0x15b80fc80 <line:17:2, line:26:12>
    | |-CompoundStmt 0x15b80fc40 <line:17:5, line:26:2>
    | | |-IfStmt 0x15b809c98 <line:18:3, line:21:3>
    | | | |-RecoveryExpr 0x15b809af8 <line:18:7, col:25> '_Bool' contains-errors
    | | | `-CompoundStmt 0x15b809c78 <col:28, line:21:3>
    | | |   |-BinaryOperator 0x15b809bf0 <line:19:4, col:11> 'int' contains-errors '='
    | | |   | |-DeclRefExpr 0x15b809b18 <col:4> 'int' lvalue Var 0x15b8092e0 'err' 'int'
    | | |   | `-UnaryOperator 0x15b809bd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    | | |   |   `-ImplicitCastExpr 0x15b809bc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | |   |     `-RecoveryExpr 0x15b809ba0 <col:11> '<dependent type>' contains-errors lvalue
    | | |   `-GotoStmt 0x15b809c60 <line:20:4, col:9> 'exit' 0x15b809c10
    | | `-IfStmt 0x15b80fc20 <line:22:3, line:25:3>
    | |   |-RecoveryExpr 0x15b809eb8 <line:22:7, col:53> '_Bool' contains-errors
    | |   `-CompoundStmt 0x15b80fc00 <col:56, line:25:3>
    | |     |-BinaryOperator 0x15b809fb0 <line:23:4, col:11> 'int' contains-errors '='
    | |     | |-DeclRefExpr 0x15b809ed8 <col:4> 'int' lvalue Var 0x15b8092e0 'err' 'int'
    | |     | `-UnaryOperator 0x15b809f98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |     |   `-ImplicitCastExpr 0x15b809f80 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     |     `-RecoveryExpr 0x15b809f60 <col:11> '<dependent type>' contains-errors lvalue
    | |     `-GotoStmt 0x15b809fd0 <line:24:4, col:9> 'exit' 0x15b809c10
    | `-IntegerLiteral 0x15b80fc60 <line:26:11> 'int' 0
    |-NullStmt 0x15b80fca0 <line:28:9>
    |-BinaryOperator 0x15b80fd28 <line:29:2, col:13> 'struct sock *' contains-errors '='
    | |-DeclRefExpr 0x15b80fca8 <col:2> 'struct sock *' lvalue Var 0x15b8094c8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x15b80fd00 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15b80fcc8 <col:7> 'struct socket *' lvalue ParmVar 0x15a128e48 'sock' 'struct socket *'
    |-BinaryOperator 0x15b80ff30 <line:30:2, col:19> 'struct vsock_sock *' '='
    | |-DeclRefExpr 0x15b80fd48 <col:2> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    | `-ImplicitCastExpr 0x15b80ff18 <col:8, col:19> 'struct vsock_sock *' <IntegralToPointer>
    |   `-CallExpr 0x15b80fed8 <col:8, col:19> 'int'
    |     |-ImplicitCastExpr 0x15b80fec0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b80fe48 <col:8> 'int ()' Function 0x15b80fd90 'vsock_sk' 'int ()'
    |     `-ImplicitCastExpr 0x15b80ff00 <col:17> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b80fe68 <col:17> 'struct sock *' lvalue Var 0x15b8094c8 'sk' 'struct sock *'
    |-BinaryOperator 0x15b80ffd0 <line:31:2, col:19> 'const struct vsock_transport *' contains-errors '='
    | |-DeclRefExpr 0x15b80ff50 <col:2> 'const struct vsock_transport *' lvalue Var 0x15b8098c8 'transport' 'const struct vsock_transport *'
    | `-RecoveryExpr 0x15b80ffa8 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15b80ff70 <col:14> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    |-CallExpr 0x15b810128 <line:33:2, col:14> 'int'
    | |-ImplicitCastExpr 0x15b810110 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15b8100d0 <col:2> 'int ()' Function 0x15b810018 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x15b810150 <col:12> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x15b8100f0 <col:12> 'struct sock *' lvalue Var 0x15b8094c8 'sk' 'struct sock *'
    |-SwitchStmt 0x15b8101a0 <line:35:2, line:73:2>
    | |-ImplicitCastExpr 0x15b810188 <line:35:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15b810168 <col:10> 'int' lvalue ParmVar 0x15a128f48 'optname' 'int'
    | `-CompoundStmt 0x15c0085c8 <col:19, line:73:2>
    |   |-CallExpr 0x15b810340 <line:37:3, col:14> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b8102c0 <col:3> 'int ()' Function 0x15b810208 'COPY_IN' 'int ()'
    |   | `-RecoveryExpr 0x15b810320 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x15b8104a8 <line:39:3>
    |   |-CallExpr 0x15b8105f0 <line:44:3, col:60> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b810530 <col:3> 'int ()' Function 0x15b810390 'vsock_update_buffer_size' 'int ()'
    |   | |-DeclRefExpr 0x15b810550 <col:28> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    |   | |-DeclRefExpr 0x15b810570 <col:33> 'const struct vsock_transport *' lvalue Var 0x15b8098c8 'transport' 'const struct vsock_transport *'
    |   | `-RecoveryExpr 0x15b8105c8 <col:44, col:49> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15b810590 <col:44> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    |   |-BreakStmt 0x15b810628 <line:45:3>
    |   |-CallExpr 0x15b810770 <line:50:3, col:60> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b8106b0 <col:3> 'int ()' Function 0x15b810390 'vsock_update_buffer_size' 'int ()'
    |   | |-DeclRefExpr 0x15b8106d0 <col:28> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    |   | |-DeclRefExpr 0x15b8106f0 <col:33> 'const struct vsock_transport *' lvalue Var 0x15b8098c8 'transport' 'const struct vsock_transport *'
    |   | `-RecoveryExpr 0x15b810748 <col:44, col:49> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15b810710 <col:44> 'struct vsock_sock *' lvalue Var 0x15b8096c8 'vsk' 'struct vsock_sock *'
    |   |-BreakStmt 0x15b8107a8 <line:51:3>
    |   |-CompoundStmt 0x15c008548 <line:53:38, line:68:2>
    |   | |-DeclStmt 0x15b810928 <line:54:3, col:33>
    |   | | |-RecordDecl 0x15b8107b0 <col:3, col:10> col:10 struct __kernel_old_timeval
    |   | | `-VarDecl 0x15b8108a8 <col:3, col:31> col:31 invalid tv 'struct __kernel_old_timeval'
    |   | |-CallExpr 0x15b810980 <line:55:3, col:13> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x15b810940 <col:3> 'int ()' Function 0x15b810208 'COPY_IN' 'int ()'
    |   | | `-RecoveryExpr 0x15b810960 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-IfStmt 0x15c008510 <line:56:3, line:66:3> has_else
    |   | | |-RecoveryExpr 0x15b810b40 <line:56:7, line:57:49> '_Bool' contains-errors
    |   | | |-CompoundStmt 0x15c0084d0 <col:52, line:64:3>
    |   | | `-CompoundStmt 0x15c008500 <col:10, line:66:3>
    |   | `-BreakStmt 0x15c008540 <line:67:3>
    |   |-DefaultStmt 0x15c0085a0 <line:70:2, col:9>
    |   | `-NullStmt 0x15c008598 <col:9>
    |   `-BreakStmt 0x15c0085c0 <line:72:3>
    |-LabelStmt 0x15c008798 <line:77:1, line:78:17> 'exit'
    | `-CallExpr 0x15c008758 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x15c008740 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x15c008700 <col:2> 'int ()' Function 0x15c008648 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x15c008780 <col:15> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x15c008720 <col:15> 'struct sock *' lvalue Var 0x15b8094c8 'sk' 'struct sock *'
    `-ReturnStmt 0x15c0087f0 <line:79:2, col:9>
      `-ImplicitCastExpr 0x15c0087d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15c0087b8 <col:9> 'int' lvalue Var 0x15b8092e0 'err' 'int'
