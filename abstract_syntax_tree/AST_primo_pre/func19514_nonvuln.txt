`-FunctionDecl 0x12a00ddf8  line:2:1 invalid mono_reflection_type_get_handle 'int *(int *)'
  |-ParmVarDecl 0x12a00dd28 <col:34, col:54> col:54 referenced invalid ref 'int *'
  `-CompoundStmt 0x12a028040 <line:3:1, line:66:14>
    |-IfStmt 0x12a00df58 <line:5:2, line:6:10>
    | |-UnaryOperator 0x12a00def8 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a00dee0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12a00dec0 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a00df48 <line:6:3, col:10>
    |   `-RecoveryExpr 0x12a00df28 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a00e058 <line:7:2, line:8:15>
    | |-CXXDependentScopeMemberExpr 0x12a00df98 <line:7:6, col:11> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x12a00df78 <col:6> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a00e048 <line:8:3, col:15>
    |   `-CXXDependentScopeMemberExpr 0x12a00e000 <col:10, col:15> '<dependent type>' contains-errors lvalue ->type
    |     `-RecoveryExpr 0x12a00dfe0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1290f4cd0 <line:10:2, line:15:2>
    | |-CallExpr 0x12a00e210 <line:10:6, col:22> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a00e1d0 <col:6> 'int ()' Function 0x12a00e118 'is_usertype' 'int ()'
    | | `-RecoveryExpr 0x12a00e1f0 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1290f4ca8 <col:25, line:15:2>
    |   |-BinaryOperator 0x12a00e3c8 <line:11:3, col:61> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12a00e258 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12a00e238 <col:3> 'int *' lvalue ParmVar 0x12a00dd28 'ref' 'int *'
    |   | `-CallExpr 0x12a00e3a0 <col:9, col:61> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a00e360 <col:9> 'int ()' Function 0x12a00e2a8 'mono_reflection_type_get_underlying_system_type' 'int ()'
    |   |   `-RecoveryExpr 0x12a00e380 <col:58> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1290f4b80 <line:12:3, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1290f4ae0 <col:3> 'int ()' Function 0x1290f4a28 'g_assert' 'int ()'
    |   | `-UnaryOperator 0x1290f4b68 <col:13, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   `-CallExpr 0x1290f4b40 <col:14, col:30> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1290f4b00 <col:14> 'int ()' Function 0x12a00e118 'is_usertype' 'int ()'
    |   |     `-RecoveryExpr 0x1290f4b20 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1290f4c88 <line:13:3, line:14:16>
    |     |-CXXDependentScopeMemberExpr 0x1290f4bc8 <line:13:7, col:12> '<dependent type>' contains-errors lvalue ->type
    |     | `-RecoveryExpr 0x1290f4ba8 <col:7> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x1290f4c78 <line:14:4, col:16>
    |       `-CXXDependentScopeMemberExpr 0x1290f4c30 <col:11, col:16> '<dependent type>' contains-errors lvalue ->type
    |         `-RecoveryExpr 0x1290f4c10 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a027c88 <line:19:2, line:63:2> has_else
    | |-CallExpr 0x1290f4f98 <line:19:6, col:25> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1290f4f18 <col:6> 'int ()' Function 0x1290f4e60 'is_sre_array' 'int ()'
    | | `-RecoveryExpr 0x1290f4f78 <col:20> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1290f53e0 <col:28, line:30:2>
    | `-IfStmt 0x12a027c58 <col:9, line:63:2> has_else
    |   |-RecoveryExpr 0x1290f54f0 <line:30:13, col:32> '_Bool' contains-errors
    |   |-CompoundStmt 0x1290f5570 <col:35, line:38:2>
    |   `-IfStmt 0x12a027c28 <col:9, line:63:2> has_else
    |     |-RecoveryExpr 0x1290f5680 <line:38:13, col:34> '_Bool' contains-errors
    |     |-CompoundStmt 0x1290f57e0 <col:37, line:46:2>
    |     `-IfStmt 0x12a027c08 <col:9, line:63:2>
    |       |-RecoveryExpr 0x1290f58f0 <line:46:13, col:43> '_Bool' contains-errors
    |       `-CompoundStmt 0x12a027be8 <col:46, line:63:2>
    |         |-DeclStmt 0x12a027480 <line:49:3, col:15>
    |         | |-VarDecl 0x1290f5928 <col:3, col:7> col:7 used i 'int'
    |         | `-VarDecl 0x12a027400 <col:3, col:10> col:10 used count 'int'
    |         `-ForStmt 0x12a027970 <line:53:3, line:56:3>
    |           |-BinaryOperator 0x12a027718 <line:53:8, col:12> 'int' '='
    |           | |-DeclRefExpr 0x12a0276d8 <col:8> 'int' lvalue Var 0x1290f5928 'i' 'int'
    |           | `-IntegerLiteral 0x12a0276f8 <col:12> 'int' 0
    |           |-<<<NULL>>>
    |           |-BinaryOperator 0x12a0277a8 <col:15, col:19> 'int' '<'
    |           | |-ImplicitCastExpr 0x12a027778 <col:15> 'int' <LValueToRValue>
    |           | | `-DeclRefExpr 0x12a027738 <col:15> 'int' lvalue Var 0x1290f5928 'i' 'int'
    |           | `-ImplicitCastExpr 0x12a027790 <col:19> 'int' <LValueToRValue>
    |           |   `-DeclRefExpr 0x12a027758 <col:19> 'int' lvalue Var 0x12a027400 'count' 'int'
    |           |-UnaryOperator 0x12a0277e8 <col:26, col:28> 'int' prefix '++'
    |           | `-DeclRefExpr 0x12a0277c8 <col:28> 'int' lvalue Var 0x1290f5928 'i' 'int'
    |           `-CompoundStmt 0x12a027960 <col:31, line:56:3>
    `-CallExpr 0x12a028010 <line:65:2, col:74> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12a027d98 <col:2> 'int ()' Function 0x12a027ce0 'g_error' 'int ()'
      |-StringLiteral 0x12a027e00 <col:11> 'char[4]' lvalue "STR"
      `-CallExpr 0x12a027fe8 <col:18, col:73> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12a027f00 <col:18> 'int ()' Function 0x12a027e48 'mono_type_full_name' 'int ()'
        `-UnaryOperator 0x12a027fd0 <col:39, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-CXXDependentScopeMemberExpr 0x12a027f88 <col:40, col:64> '<dependent type>' contains-errors lvalue ->byval_arg
            `-CallExpr 0x12a027f60 <col:40, col:61> '<dependent type>' contains-errors
              |-DeclRefExpr 0x12a027f20 <col:40> 'int ()' Function 0x1290f4d18 'mono_object_class' 'int ()'
              `-RecoveryExpr 0x12a027f40 <col:58> '<dependent type>' contains-errors lvalue
