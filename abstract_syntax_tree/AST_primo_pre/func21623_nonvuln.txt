`-FunctionDecl 0x14c928118  line:1:1 SYSCALL_DEFINE3 'int ()'
  `-CompoundStmt 0x14c941608 <line:2:1, line:18:1>
    |-DeclStmt 0x14c9287a8 <line:3:2, col:18>
    | |-RecordDecl 0x14c928208 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x14c928308 <col:2, col:14> col:14 invalid path 'struct path'
    |-DeclStmt 0x14c940a68 <line:4:2, col:11>
    | `-VarDecl 0x14c940a00 <col:2, col:6> col:6 used error 'int'
    |-BinaryOperator 0x14c940ca8 <line:6:2, col:35> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c940a80 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'
    | `-CallExpr 0x14c940c78 <col:10, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c940b98 <col:10> 'int ()' Function 0x14c940ae0 'user_path' 'int ()'
    |   |-RecoveryExpr 0x14c940c58 <col:20> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x14c940bf0 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c940bd0 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c940d68 <line:7:2, line:8:8>
    | |-ImplicitCastExpr 0x14c940ce8 <line:7:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c940cc8 <col:6> 'int' lvalue Var 0x14c940a00 'error' 'int'
    | `-GotoStmt 0x14c940d50 <line:8:3, col:8> 'out' 0x14c940d00
    |-BinaryOperator 0x14c940f38 <line:9:2, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c940d88 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'
    | `-CallExpr 0x14c940f10 <col:10, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c940e88 <col:10> 'int ()' Function 0x14c940dd0 'mnt_want_write' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14c940ec8 <col:25, col:30> '<dependent type>' contains-errors lvalue .mnt
    |     `-RecoveryExpr 0x14c940ea8 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c940ff8 <line:10:2, line:11:8>
    | |-ImplicitCastExpr 0x14c940f78 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c940f58 <col:6> 'int' lvalue Var 0x14c940a00 'error' 'int'
    | `-GotoStmt 0x14c940fe0 <line:11:3, col:8> 'out_release' 0x14c940f90
    |-BinaryOperator 0x14c941270 <line:12:2, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c941018 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'
    | `-CallExpr 0x14c941238 <col:10, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c941118 <col:10> 'int ()' Function 0x14c941060 'chown_common' 'int ()'
    |   |-UnaryOperator 0x14c941158 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c941138 <col:24> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14c9411f8 <col:30> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14c941218 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c9413f8 <line:13:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c941370 <col:2> 'int ()' Function 0x14c9412b8 'mnt_drop_write' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x14c9413b0 <col:17, col:22> '<dependent type>' contains-errors lvalue .mnt
    |   `-RecoveryExpr 0x14c941390 <col:17> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14c941580 <line:14:1, line:15:16> 'out_release'
    | `-CallExpr 0x14c941558 <col:2, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c941500 <col:2> 'int ()' Function 0x14c941448 'path_put' 'int ()'
    |   `-UnaryOperator 0x14c941540 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c941520 <col:12> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x14c9415e8 <line:16:1, line:17:9> 'out'
      `-ReturnStmt 0x14c9415d8 <col:2, col:9>
        `-ImplicitCastExpr 0x14c9415c0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14c9415a0 <col:9> 'int' lvalue Var 0x14c940a00 'error' 'int'
