`-FunctionDecl 0x12b80df18  line:1:12 invalid parseDomainScope 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x12b80dd28 <line:2:2, col:13> col:13 referenced invalid op 'int *'
  |-ParmVarDecl 0x12b80dda8 <line:3:2, col:13> col:13 referenced invalid rs 'int *'
  |-ParmVarDecl 0x12b80de28 <line:4:2, col:15> col:15 invalid ctrl 'int *'
  `-CompoundStmt 0x12b827848 <line:5:1, line:22:1>
    |-IfStmt 0x12b80e238 <line:6:2, line:9:2>
    | |-BinaryOperator 0x12b80e098 <line:6:7, col:29> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x12b80dff8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->o_domain_scope
    | | | `-RecoveryExpr 0x12b80dfd8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12b80e078 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b80e218 <col:49, line:9:2>
    |   |-BinaryOperator 0x12b80e1b0 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12b80e100 <col:3, col:7> '<dependent type>' contains-errors lvalue ->sr_text
    |   | | `-RecoveryExpr 0x12b80e0d8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12b80e0b8 <col:3> 'int *' lvalue ParmVar 0x12b80dda8 'rs' 'int *'
    |   | `-StringLiteral 0x12b80e190 <col:17> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12b80e208 <line:8:3, col:10>
    |     `-RecoveryExpr 0x12b80e1e8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b8275d8 <line:12:2, line:15:2>
    | |-UnaryOperator 0x12b827488 <line:12:7, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12b827460 <col:8, col:42> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12b80e3b0 <col:8> 'int ()' Function 0x12b80e2f8 'BER_BVISEMPTY' 'int ()'
    | |   `-UnaryOperator 0x12b827448 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x12b827400 <col:24, col:30> '<dependent type>' contains-errors lvalue ->ldctl_value
    | |       `-RecoveryExpr 0x12b80e3d0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b8275b8 <col:45, line:15:2>
    |   |-BinaryOperator 0x12b827550 <line:13:3, col:17> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12b8274e8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->sr_text
    |   | | `-RecoveryExpr 0x12b8274c0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12b8274a0 <col:3> 'int *' lvalue ParmVar 0x12b80dda8 'rs' 'int *'
    |   | `-StringLiteral 0x12b827530 <col:17> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12b8275a8 <line:14:3, col:10>
    |     `-RecoveryExpr 0x12b827588 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b8277e0 <line:17:2, line:19:5> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b827640 <line:17:2, col:6> '<dependent type>' contains-errors lvalue ->o_domain_scope
    | | `-RecoveryExpr 0x12b827618 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b8275f8 <col:2> 'int *' lvalue ParmVar 0x12b80dd28 'op' 'int *'
    | `-ConditionalOperator 0x12b8277b0 <col:23, line:19:5> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12b8276a8 <line:17:23, col:29> '<dependent type>' contains-errors lvalue ->ldctl_iscritical
    |   | `-RecoveryExpr 0x12b827688 <col:23> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x12b827770 <line:18:5> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12b827790 <line:19:5> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12b827838 <line:21:2, col:9>
      `-RecoveryExpr 0x12b827818 <col:9> '<dependent type>' contains-errors lvalue
