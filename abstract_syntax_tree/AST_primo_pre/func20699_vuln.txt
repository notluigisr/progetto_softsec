`-FunctionDecl 0x12101a688  line:1:12 invalid fts3DoAutoincrmerge 'int (int *, const char *)' static
  |-ParmVarDecl 0x12101a528 <line:2:3, col:14> col:14 referenced invalid p 'int *'
  |-ParmVarDecl 0x12101a5a8 <line:3:3, col:15> col:15 used zParam 'const char *'
  `-CompoundStmt 0x121033fe8 <line:4:2, line:23:1>
    |-DeclStmt 0x12101a7f8 <line:5:3, col:21>
    | `-VarDecl 0x12101a758 <col:3, col:12> col:7 used rc 'int' cinit
    |   `-RecoveryExpr 0x12101a7d8 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12101ab30 <line:7:3, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12101a890 <col:3, col:6> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | | `-RecoveryExpr 0x12101a868 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12101a848 <col:3> 'int *' lvalue ParmVar 0x12101a528 'p' 'int *'
    | `-CallExpr 0x12101ab08 <col:23, col:41> 'int'
    |   |-ImplicitCastExpr 0x12101aaf0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12101aa30 <col:23> 'int ()' Function 0x12101a978 'fts3Getint' 'int ()'
    |   `-UnaryOperator 0x12101aaa0 <col:34, col:35> 'const char **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12101aa50 <col:35> 'const char *' lvalue ParmVar 0x12101a5a8 'zParam' 'const char *'
    |-IfStmt 0x1228f3608 <line:8:3, line:10:3>
    | |-BinaryOperator 0x1228f3500 <line:8:7, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12101abd8 <col:7, col:26> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x12101ab70 <col:7, col:10> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | | | | `-RecoveryExpr 0x12101ab50 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x12101abb8 <col:26> 'int' 1
    | | `-BinaryOperator 0x1228f34e0 <col:31, col:49> 'int' contains-errors '>'
    | |   |-CXXDependentScopeMemberExpr 0x1228f3420 <col:31, col:34> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    | |   | `-RecoveryExpr 0x1228f3400 <col:31> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x1228f34c0 <col:49> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1228f35f0 <col:67, line:10:3>
    |   `-BinaryOperator 0x1228f35d0 <line:9:5, col:25> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x1228f3568 <col:5, col:8> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    |     | `-RecoveryExpr 0x1228f3540 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x1228f3520 <col:5> 'int *' lvalue ParmVar 0x12101a528 'p' 'int *'
    |     `-IntegerLiteral 0x1228f35b0 <col:25> 'int' 8
    |-IfStmt 0x1228f3ae0 <line:11:3, line:15:3>
    | |-UnaryOperator 0x1228f36a8 <line:11:7, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1228f3690 <col:8, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x1228f3648 <col:8, col:11> '<dependent type>' contains-errors lvalue ->bHasStat
    | |     `-RecoveryExpr 0x1228f3628 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1228f3ab8 <col:21, line:15:3>
    |   |-CallExpr 0x1228f3868 <line:12:5, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1228f37a0 <col:5> 'int ()' Function 0x1228f36e8 'assert' 'int ()'
    |   | `-BinaryOperator 0x1228f3848 <col:13, col:23> 'int' contains-errors '=='
    |   |   |-CXXDependentScopeMemberExpr 0x1228f37e0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->bFts4
    |   |   | `-RecoveryExpr 0x1228f37c0 <col:13> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x1228f3828 <col:23> 'int' 0
    |   |-CallExpr 0x1228f39e8 <line:13:5, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1228f3970 <col:5> 'int ()' Function 0x1228f38b8 'sqlite3Fts3CreateStatTable' 'int ()'
    |   | |-UnaryOperator 0x1228f39b0 <col:32, col:33> 'int *' contains-errors prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x1228f3990 <col:33> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |   | `-RecoveryExpr 0x1228f39c8 <col:37> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1228f3a98 <line:14:5, col:21>
    |     |-ImplicitCastExpr 0x1228f3a38 <col:9> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x1228f3a18 <col:9> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |     `-ReturnStmt 0x1228f3a88 <col:14, col:21>
    |       `-ImplicitCastExpr 0x1228f3a70 <col:21> 'int' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x1228f3a50 <col:21> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |-BinaryOperator 0x1228f3da0 <line:16:3, col:50> 'int' contains-errors '='
    | |-DeclRefExpr 0x1228f3b00 <col:3> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-CallExpr 0x1228f3d60 <col:8, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1228f3c00 <col:8> 'int ()' Function 0x1228f3b48 'fts3SqlStmt' 'int ()'
    |   |-RecoveryExpr 0x1228f3c20 <col:20> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1228f3d08 <col:23> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x1228f3d48 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1228f3d28 <col:42> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1228f3c88 <col:49> 'int' 0
    |-IfStmt 0x1228f3e40 <line:17:3, col:19>
    | |-ImplicitCastExpr 0x1228f3de0 <col:7> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1228f3dc0 <col:7> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-ReturnStmt 0x1228f3e30 <col:12, col:19>
    |   `-ImplicitCastExpr 0x1228f3e18 <col:19> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1228f3df8 <col:19> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    |-CallExpr 0x1228f4028 <line:18:3, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f3f40 <col:3> 'int ()' Function 0x1228f3e88 'sqlite3_bind_int' 'int ()'
    | |-RecoveryExpr 0x1228f3fe8 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1228f3f78 <col:27> 'int' 1
    | `-RecoveryExpr 0x1228f4008 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1228f4178 <line:19:3, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f4060 <col:3> 'int ()' Function 0x1228f3e88 'sqlite3_bind_int' 'int ()'
    | |-RecoveryExpr 0x1228f4158 <col:20> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1228f4098 <col:27> 'int' 2
    | `-CXXDependentScopeMemberExpr 0x1228f40d8 <col:30, col:33> '<dependent type>' contains-errors lvalue ->nAutoincrmerge
    |   `-RecoveryExpr 0x1228f40b8 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1228f4310 <line:20:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228f4290 <col:3> 'int ()' Function 0x1228f41d8 'sqlite3_step' 'int ()'
    | `-RecoveryExpr 0x1228f42f0 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x121033f80 <line:21:3, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x1228f4338 <col:3> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
    | `-CallExpr 0x121033f58 <col:8, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121033eb8 <col:8> 'int ()' Function 0x121033e00 'sqlite3_reset' 'int ()'
    |   `-RecoveryExpr 0x121033f38 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x121033fd8 <line:22:3, col:10>
      `-ImplicitCastExpr 0x121033fc0 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x121033fa0 <col:10> 'int' contains-errors lvalue Var 0x12101a758 'rc' 'int'
