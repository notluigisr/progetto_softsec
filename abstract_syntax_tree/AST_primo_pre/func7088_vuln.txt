`-FunctionDecl 0x14601ef50  line:1:13 ax25_kill_by_device 'void (struct net_device *)' static
  |-ParmVarDecl 0x14601ee48 <col:33, col:52> col:52 used dev 'struct net_device *'
  `-CompoundStmt 0x14604e2d0 <line:2:1, line:37:1>
    |-DeclStmt 0x14604b478 <line:5:2, col:17>
    | |-RecordDecl 0x14604b290 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x14604b3f8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-IfStmt 0x14604b6f0 <line:7:2, line:8:3>
    | |-RecoveryExpr 0x14604b6c0 <line:7:6, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x14604b6e0 <line:8:3>
    |-CallExpr 0x14604b8a0 <line:10:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14604b7f0 <col:2> 'int ()' Function 0x14604b738 'spin_lock_bh' 'int ()'
    | `-UnaryOperator 0x14604b888 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14604b868 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14604bb18 <line:11:1, line:12:29> 'again'
    | `-CallExpr 0x14604ba98 <col:2, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14604b9a8 <col:2> 'int ()' Function 0x14604b8f0 'ax25_for_each' 'int ()'
    |   |-RecoveryExpr 0x14604ba40 <col:16> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x14604ba80 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14604ba60 <col:20> '<dependent type>' contains-errors lvalue
    `-CompoundStmt 0x14604e298 <col:31, line:35:2>
      `-IfStmt 0x14604e278 <line:13:3, line:34:3>
        |-BinaryOperator 0x14604bc58 <line:13:7, col:22> 'int' contains-errors '=='
        | |-CXXDependentScopeMemberExpr 0x14604bbf0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ax25_dev
        | | `-RecoveryExpr 0x14604bbd0 <col:7> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x14604bc38 <col:22> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x14604e230 <col:32, line:34:3>
          |-BinaryOperator 0x14604bd80 <line:14:4, col:12> 'struct sock *' contains-errors '='
          | |-DeclRefExpr 0x14604bc78 <col:4> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          | `-CXXDependentScopeMemberExpr 0x14604bd38 <col:9, col:12> '<dependent type>' contains-errors lvalue ->sk
          |   `-RecoveryExpr 0x14604bd18 <col:9> '<dependent type>' contains-errors lvalue
          |-IfStmt 0x14604c118 <line:15:4, line:21:4>
          | |-UnaryOperator 0x14604bdd8 <line:15:8, col:9> 'int' prefix '!' cannot overflow
          | | `-ImplicitCastExpr 0x14604bdc0 <col:9> 'struct sock *' <LValueToRValue>
          | |   `-DeclRefExpr 0x14604bda0 <col:9> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          | `-CompoundStmt 0x14604c0f8 <col:13, line:21:4>
          |   |-CallExpr 0x14604bf80 <line:16:5, col:35> '<dependent type>' contains-errors
          |   | |-DeclRefExpr 0x14604bed0 <col:5> 'int ()' Function 0x14604be18 'spin_unlock_bh' 'int ()'
          |   | `-UnaryOperator 0x14604bf68 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
          |   |   `-RecoveryExpr 0x14604bf48 <col:21> '<dependent type>' contains-errors lvalue
          |   `-GotoStmt 0x14604c0e0 <line:20:5, col:10> 'again' 0x14604bac8
          |-CallExpr 0x14604db10 <line:22:4, col:16> 'int'
          | |-ImplicitCastExpr 0x14604daf8 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x14604dab8 <col:4> 'int ()' Function 0x14604da00 'sock_hold' 'int ()'
          | `-ImplicitCastExpr 0x14604db38 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x14604dad8 <col:14> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          |-CallExpr 0x14604dca8 <line:24:4, col:16> 'int'
          | |-ImplicitCastExpr 0x14604dc90 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x14604dc50 <col:4> 'int ()' Function 0x14604db98 'lock_sock' 'int ()'
          | `-ImplicitCastExpr 0x14604dcd0 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x14604dc70 <col:14> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          |-CallExpr 0x14604e040 <line:29:4, col:19> 'int'
          | |-ImplicitCastExpr 0x14604e028 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x14604dfe8 <col:4> 'int ()' Function 0x14604df30 'release_sock' 'int ()'
          | `-ImplicitCastExpr 0x14604e068 <col:17> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x14604e008 <col:17> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          |-CallExpr 0x14604e1d8 <line:31:4, col:15> 'int'
          | |-ImplicitCastExpr 0x14604e1c0 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x14604e180 <col:4> 'int ()' Function 0x14604e0c8 'sock_put' 'int ()'
          | `-ImplicitCastExpr 0x14604e200 <col:13> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x14604e1a0 <col:13> 'struct sock *' lvalue Var 0x14604b3f8 'sk' 'struct sock *'
          `-GotoStmt 0x14604e218 <line:33:4, col:9> 'again' 0x14604bac8
