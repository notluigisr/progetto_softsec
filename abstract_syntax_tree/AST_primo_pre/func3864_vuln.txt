`-FunctionDecl 0x13500de58  line:1:5 invalid ASN1_TYPE_cmp 'int (const int *, const int *)'
  |-ParmVarDecl 0x13500dcf0 <col:19, col:36> col:36 invalid a 'const int *'
  |-ParmVarDecl 0x13500dd70 <col:39, col:56> col:56 invalid b 'const int *'
  `-CompoundStmt 0x135028028 <line:2:1, line:47:1>
    |-DeclStmt 0x13500dfc8 <line:3:5, col:20>
    | `-VarDecl 0x13500df28 <col:5, col:19> col:9 used result 'int' cinit
    |   `-UnaryOperator 0x13500dfb0 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x13500df90 <col:19> 'int' 1
    |-IfStmt 0x13500e1f8 <line:5:5, line:6:17>
    | |-BinaryOperator 0x13500e190 <line:5:9, col:35> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13500e080 <col:9, col:16> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x13500e018 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x13500e000 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x13500dfe0 <col:10> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x13500e068 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x13500e050 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-RecoveryExpr 0x13500e030 <col:16> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13500e170 <col:21, col:35> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x13500e0c0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->type
    | |   | `-RecoveryExpr 0x13500e0a0 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x13500e128 <col:32, col:35> '<dependent type>' contains-errors lvalue ->type
    | |     `-RecoveryExpr 0x13500e108 <col:32> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13500e1e8 <line:6:9, col:17>
    |   `-UnaryOperator 0x13500e1d0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x13500e1b0 <col:17> 'int' 1
    |-SwitchStmt 0x13500e298 <line:8:5, line:44:5>
    | |-ImplicitCastExpr 0x13500e280 <line:8:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x13500e238 <col:13, col:16> '<dependent type>' contains-errors lvalue ->type
    | |   `-RecoveryExpr 0x13500e218 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x135027f90 <col:22, line:44:5>
    |   |-BinaryOperator 0x135027a68 <line:10:9, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13500e2d8 <col:9> 'int' lvalue Var 0x13500df28 'result' 'int'
    |   | `-CallExpr 0x135027a38 <col:18, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1350278b8 <col:18> 'int ()' Function 0x135027800 'OBJ_cmp' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x135027940 <col:26, col:35> '<dependent type>' contains-errors lvalue .object
    |   |   | `-CXXDependentScopeMemberExpr 0x1350278f8 <col:26, col:29> '<dependent type>' contains-errors lvalue ->value
    |   |   |   `-RecoveryExpr 0x1350278d8 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x1350279f0 <col:43, col:52> '<dependent type>' contains-errors lvalue .object
    |   |     `-CXXDependentScopeMemberExpr 0x1350279a8 <col:43, col:46> '<dependent type>' contains-errors lvalue ->value
    |   |       `-RecoveryExpr 0x135027988 <col:43> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x135027a88 <line:11:9>
    |   |-BinaryOperator 0x135027c48 <line:13:9, col:46> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x135027aa8 <col:9> 'int' lvalue Var 0x13500df28 'result' 'int'
    |   | `-BinaryOperator 0x135027c28 <col:18, col:46> '<dependent type>' contains-errors '-'
    |   |   |-CXXDependentScopeMemberExpr 0x135027b30 <col:18, col:27> '<dependent type>' contains-errors lvalue .boolean
    |   |   | `-CXXDependentScopeMemberExpr 0x135027ae8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->value
    |   |   |   `-RecoveryExpr 0x135027ac8 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x135027be0 <col:37, col:46> '<dependent type>' contains-errors lvalue .boolean
    |   |     `-CXXDependentScopeMemberExpr 0x135027b98 <col:37, col:40> '<dependent type>' contains-errors lvalue ->value
    |   |       `-RecoveryExpr 0x135027b78 <col:37> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x135027c68 <line:14:9>
    |   |-BinaryOperator 0x135027cc8 <line:16:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x135027c88 <col:9> 'int' lvalue Var 0x13500df28 'result' 'int'
    |   | `-IntegerLiteral 0x135027ca8 <col:18> 'int' 0
    |   |-BreakStmt 0x135027ce8 <line:17:9>
    |   |-DefaultStmt 0x135027f68 <line:40:5, col:12>
    |   | `-NullStmt 0x135027f60 <col:12>
    |   `-BreakStmt 0x135027f88 <line:43:9>
    `-ReturnStmt 0x135028018 <line:46:5, col:12>
      `-ImplicitCastExpr 0x135028000 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x135027fe0 <col:12> 'int' lvalue Var 0x13500df28 'result' 'int'
