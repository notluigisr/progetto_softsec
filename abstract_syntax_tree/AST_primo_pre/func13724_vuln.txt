`-FunctionDecl 0x12c928348  line:1:15 invalid optsize 'int (int *, char, const char **)' static
  |-ParmVarDecl 0x12c928128 <col:24, col:35> col:35 invalid L 'int *'
  |-ParmVarDecl 0x12c9281a0 <col:38, col:43> col:43 used opt 'char'
  |-ParmVarDecl 0x12c928258 <col:48, col:61> col:61 used fmt 'const char **'
  `-CompoundStmt 0x12d00a988 <col:66, line:20:1>
    `-SwitchStmt 0x12c928458 <line:2:3, line:19:3>
      |-ImplicitCastExpr 0x12c928440 <line:2:11> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x12c928428 <col:11> 'char' <LValueToRValue>
      |   `-DeclRefExpr 0x12c928408 <col:11> 'char' lvalue ParmVar 0x12c9281a0 'opt' 'char'
      `-CompoundStmt 0x12d00a928 <col:16, line:19:3>
        |-CaseStmt 0x12c9284b0 <line:3:5, col:43>
        | |-ConstantExpr 0x12c928498 <col:10> 'int'
        | | `-CharacterLiteral 0x12c928480 <col:10> 'int' 66
        | `-CaseStmt 0x12c928508 <col:15, col:43>
        |   |-ConstantExpr 0x12c9284f0 <col:20> 'int'
        |   | `-CharacterLiteral 0x12c9284d8 <col:20> 'int' 98
        |   `-ReturnStmt 0x12c928578 <col:25, col:43>
        |     `-ImplicitCastExpr 0x12c928560 <col:32, col:43> 'int' <IntegralCast>
        |       `-UnaryExprOrTypeTraitExpr 0x12c928540 <col:32, col:43> 'unsigned long' sizeof 'char'
        |-CaseStmt 0x12c9285b8 <line:4:5, col:44>
        | |-ConstantExpr 0x12c9285a0 <col:10> 'int'
        | | `-CharacterLiteral 0x12c928588 <col:10> 'int' 72
        | `-CaseStmt 0x12c928610 <col:15, col:44>
        |   |-ConstantExpr 0x12c9285f8 <col:20> 'int'
        |   | `-CharacterLiteral 0x12c9285e0 <col:20> 'int' 104
        |   `-ReturnStmt 0x12c928688 <col:25, col:44>
        |     `-ImplicitCastExpr 0x12c928670 <col:32, col:44> 'int' <IntegralCast>
        |       `-UnaryExprOrTypeTraitExpr 0x12c928650 <col:32, col:44> 'unsigned long' sizeof 'short'
        |-CaseStmt 0x12c9286c8 <line:5:5, col:43>
        | |-ConstantExpr 0x12c9286b0 <col:10> 'int'
        | | `-CharacterLiteral 0x12c928698 <col:10> 'int' 76
        | `-CaseStmt 0x12c928720 <col:15, col:43>
        |   |-ConstantExpr 0x12c928708 <col:20> 'int'
        |   | `-CharacterLiteral 0x12c9286f0 <col:20> 'int' 108
        |   `-ReturnStmt 0x12c928798 <col:25, col:43>
        |     `-ImplicitCastExpr 0x12c928780 <col:32, col:43> 'int' <IntegralCast>
        |       `-UnaryExprOrTypeTraitExpr 0x12c928760 <col:32, col:43> 'unsigned long' sizeof 'long'
        |-CaseStmt 0x12c9287d8 <line:6:5, <invalid sloc>>
        | |-ConstantExpr 0x12c9287c0 <col:10> 'int'
        | | `-CharacterLiteral 0x12c9287a8 <col:10> 'int' 84
        | `-NullStmt 0x12d009e78 <<invalid sloc>>
        |-CaseStmt 0x12d009eb0 <line:7:5, col:35>
        | |-ConstantExpr 0x12d009e98 <col:10> 'int'
        | | `-CharacterLiteral 0x12d009e80 <col:10> 'int' 102
        | `-ReturnStmt 0x12d009f28 <col:16, col:35>
        |   `-ImplicitCastExpr 0x12d009f10 <col:23, col:35> 'int' <IntegralCast>
        |     `-UnaryExprOrTypeTraitExpr 0x12d009ef0 <col:23, col:35> 'unsigned long' sizeof 'float'
        |-CaseStmt 0x12d009f68 <line:8:5, col:36>
        | |-ConstantExpr 0x12d009f50 <col:10> 'int'
        | | `-CharacterLiteral 0x12d009f38 <col:10> 'int' 100
        | `-ReturnStmt 0x12d009fe0 <col:16, col:36>
        |   `-ImplicitCastExpr 0x12d009fc8 <col:23, col:36> 'int' <IntegralCast>
        |     `-UnaryExprOrTypeTraitExpr 0x12d009fa8 <col:23, col:36> 'unsigned long' sizeof 'double'
        |-CaseStmt 0x12d00a020 <line:9:5, col:22>
        | |-ConstantExpr 0x12d00a008 <col:10> 'int'
        | | `-CharacterLiteral 0x12d009ff0 <col:10> 'int' 120
        | `-ReturnStmt 0x12d00a068 <col:15, col:22>
        |   `-IntegerLiteral 0x12d00a048 <col:22> 'int' 1
        |-CaseStmt 0x12d00a0a8 <line:10:5, col:35>
        | |-ConstantExpr 0x12d00a090 <col:10> 'int'
        | | `-CharacterLiteral 0x12d00a078 <col:10> 'int' 99
        | `-ReturnStmt 0x12d00a320 <col:15, col:35>
        |   `-CallExpr 0x12d00a2d8 <col:22, col:35> 'int'
        |     |-ImplicitCastExpr 0x12d00a2c0 <col:22> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x12d00a230 <col:22> 'int ()' Function 0x12d00a178 'getnum' 'int ()'
        |     |-ImplicitCastExpr 0x12d00a308 <col:29> 'const char **' <LValueToRValue>
        |     | `-DeclRefExpr 0x12d00a250 <col:29> 'const char **' lvalue ParmVar 0x12c928258 'fmt' 'const char **'
        |     `-IntegerLiteral 0x12d00a270 <col:34> 'int' 1
        |-CaseStmt 0x12d00a360 <line:11:5, line:17:5>
        | |-ConstantExpr 0x12d00a348 <line:11:10> 'int'
        | | `-CharacterLiteral 0x12d00a330 <col:10> 'int' 105
        | `-CaseStmt 0x12d00a3b8 <col:15, line:17:5>
        |   |-ConstantExpr 0x12d00a3a0 <line:11:20> 'int'
        |   | `-CharacterLiteral 0x12d00a388 <col:20> 'int' 73
        |   `-CompoundStmt 0x12d00a8b0 <col:25, line:17:5>
        |     |-DeclStmt 0x12d00a538 <line:12:7, col:40>
        |     | `-VarDecl 0x12d00a3f8 <col:7, col:39> col:11 used sz 'int' cinit
        |     |   `-CallExpr 0x12d00a4f0 <col:16, col:39> 'int'
        |     |     |-ImplicitCastExpr 0x12d00a4d8 <col:16> 'int (*)()' <FunctionToPointerDecay>
        |     |     | `-DeclRefExpr 0x12d00a460 <col:16> 'int ()' Function 0x12d00a178 'getnum' 'int ()'
        |     |     |-ImplicitCastExpr 0x12d00a520 <col:23> 'const char **' <LValueToRValue>
        |     |     | `-DeclRefExpr 0x12d00a480 <col:23> 'const char **' lvalue ParmVar 0x12c928258 'fmt' 'const char **'
        |     |     `-UnaryExprOrTypeTraitExpr 0x12d00a4b8 <col:28, col:38> 'unsigned long' sizeof 'int'
        |     |-IfStmt 0x12d00a848 <line:13:7, line:15:38>
        |     | |-BinaryOperator 0x12d00a5c8 <line:13:11, col:16> 'int' contains-errors '>'
        |     | | |-DeclRefExpr 0x12d00a550 <col:11> 'int' lvalue Var 0x12d00a3f8 'sz' 'int'
        |     | | `-RecoveryExpr 0x12d00a5a8 <col:16> '<dependent type>' contains-errors lvalue
        |     | `-CallExpr 0x12d00a808 <line:14:9, line:15:38> '<dependent type>' contains-errors
        |     |   |-DeclRefExpr 0x12d00a6c8 <line:14:9> 'int ()' Function 0x12d00a610 'luaL_error' 'int ()'
        |     |   |-RecoveryExpr 0x12d00a6e8 <col:20> '<dependent type>' contains-errors lvalue
        |     |   |-StringLiteral 0x12d00a750 <col:23> 'char[4]' lvalue "STR"
        |     |   |-DeclRefExpr 0x12d00a770 <line:15:24> 'int' lvalue Var 0x12d00a3f8 'sz' 'int'
        |     |   `-RecoveryExpr 0x12d00a7e8 <col:28> '<dependent type>' contains-errors lvalue
        |     `-ReturnStmt 0x12d00a8a0 <line:16:7, col:14>
        |       `-ImplicitCastExpr 0x12d00a888 <col:14> 'int' <LValueToRValue>
        |         `-DeclRefExpr 0x12d00a868 <col:14> 'int' lvalue Var 0x12d00a3f8 'sz' 'int'
        `-DefaultStmt 0x12d00a908 <line:18:5, col:21>
          `-ReturnStmt 0x12d00a8f8 <col:14, col:21>
            `-IntegerLiteral 0x12d00a8d8 <col:21> 'int' 0
