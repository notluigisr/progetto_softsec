`-FunctionDecl 0x138928a88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x138928928 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x1389289a8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x138942360 <col:64, line:44:1>
    |-CallExpr 0x138928f18 <line:3:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138928d70 <col:3> 'int ()' Function 0x138928cb8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x138928d90 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x138928ed0 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x138928e90 <col:30> 'int ()' Function 0x138928dd8 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x138928eb0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x138928ef8 <col:47> 'int' 1
    |-CallExpr 0x139008340 <line:4:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138928f50 <col:3> 'int ()' Function 0x138928cb8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x138928f70 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1390082f8 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1390082b8 <col:30> 'int ()' Function 0x139008200 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x1390082d8 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x139008320 <col:48> 'int' 1
    |-DeclStmt 0x139008590 <line:6:3, col:57>
    | `-VarDecl 0x139008390 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x139008960 <line:11:3, line:12:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139008758 <line:11:3> 'int ()' Function 0x138928cb8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x139008778 <col:21> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x1390088f8 <col:30, col:51> '<dependent type>' contains-errors lvalue .type
    | | `-CXXDependentScopeMemberExpr 0x1390088b0 <col:30, col:38> '<dependent type>' contains-errors lvalue ->quantization
    | |   `-RecoveryExpr 0x139008890 <col:30> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x139008940 <line:12:21> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x139008a48 <line:13:3, line:14:74>
    | `-VarDecl 0x1390089b0 <line:13:3, col:15> col:15 used affine_quantization 'const int *' auto
    |-CallExpr 0x139008ba0 <line:15:3, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139008b40 <col:3> 'int ()' Function 0x139008a88 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x139008b60 <col:18> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x139008b80 <col:27> 'const int *' lvalue Var 0x1390089b0 'affine_quantization' 'const int *'
    |-CallExpr 0x139008c70 <line:16:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139008bd0 <col:3> 'int ()' Function 0x139008a88 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x139008bf0 <col:18> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x139008c48 <col:27, col:48> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x139008c10 <col:27> 'const int *' lvalue Var 0x1390089b0 'affine_quantization' 'const int *'
    |-CallExpr 0x139008dc8 <line:17:3, col:64> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139008ca0 <col:3> 'int ()' Function 0x139008a88 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x139008cc0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x139008da8 <col:27, col:63> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x139008d40 <col:27, col:55> '<dependent type>' contains-errors lvalue ->size
    |   | `-RecoveryExpr 0x139008d18 <col:27, col:48> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x139008ce0 <col:27> 'const int *' lvalue Var 0x1390089b0 'affine_quantization' 'const int *'
    |   `-IntegerLiteral 0x139008d88 <col:63> 'int' 1
    `-IfStmt 0x138942118 <line:19:3, line:40:3> has_else
      |-RecoveryExpr 0x139008e60 <line:19:7, col:22> '_Bool' contains-errors
      |-CompoundStmt 0x139008ec0 <col:38, line:24:3>
      `-CompoundStmt 0x1389420f8 <col:10, line:40:3>
        |-IfStmt 0x139009108 <line:26:5, line:34:5> has_else
        | |-RecoveryExpr 0x139008f38 <line:26:9, col:24> '_Bool' contains-errors
        | |-CompoundStmt 0x139008f98 <col:38, line:29:5>
        | `-CompoundStmt 0x1390090f8 <col:12, line:34:5>
        `-DeclStmt 0x1390091b8 <line:35:5, line:37:50>
          `-VarDecl 0x139009150 <line:35:5, col:18> col:18 used effective_output_scale 'const double'
