`-FunctionDecl 0x12280df68  line:1:10 invalid CalculateOutputIndex 'int (int *, int, const int)'
  |-ParmVarDecl 0x12280dd28 <col:31, col:48> col:48 invalid context 'int *'
  |-ParmVarDecl 0x12280dda8 <col:57, col:61> col:61 used dimension 'int'
  |-ParmVarDecl 0x12280de28 <line:2:31, <invalid sloc>> col:43 invalid 'const int'
  `-CompoundStmt 0x121019970 <line:5:59, line:31:3>
    |-DeclStmt 0x12280e290 <line:6:5, line:7:50>
    | `-VarDecl 0x12280e040 <line:6:5, col:30> col:30 invalid row_partition_tensor 'const int'
    |-DeclStmt 0x1210190d8 <line:8:5, col:68>
    | `-VarDecl 0x12280e2c0 <col:5, col:67> col:10 used partition_type 'int' auto cinit
    |   `-CallExpr 0x121019098 <col:27, col:67> 'int'
    |     |-ImplicitCastExpr 0x121019080 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x121019010 <col:27> 'int ()' Function 0x12280e350 'GetRowPartitionTypeByDimension' 'int ()'
    |     `-ImplicitCastExpr 0x1210190c0 <col:58> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x121019030 <col:58> 'int' lvalue ParmVar 0x12280dda8 'dimension' 'int'
    `-SwitchStmt 0x121019128 <line:9:5, line:30:5>
      |-ImplicitCastExpr 0x121019110 <line:9:13> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x1210190f0 <col:13> 'int' lvalue Var 0x12280e2c0 'partition_type' 'int'
      `-CompoundStmt 0x121019938 <col:29, line:30:5>
        |-CallExpr 0x121019428 <line:11:9, line:13:57> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x121019298 <line:11:9> 'int ()' Function 0x1210191e0 'CalculateOutputIndexValueRowID' 'int ()'
        | |-RecoveryExpr 0x1210192b8 <line:12:13> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x1210192d8 <col:22> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x1210193a8 <col:44> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x1210193c8 <line:13:13> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x1210193e8 <col:38> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x121019408 <col:51> '<dependent type>' contains-errors lvalue
        |-ReturnStmt 0x1210194b0 <line:14:9, col:16>
        | `-RecoveryExpr 0x121019490 <col:16> '<dependent type>' contains-errors lvalue
        |-NullStmt 0x1210194c0 <col:40>
        |-IfStmt 0x1210197b0 <line:16:9, line:21:9>
        | |-BinaryOperator 0x121019720 <line:16:13, col:72> 'int' contains-errors '>'
        | | |-BinaryOperator 0x1210195d8 <col:13, col:43> '<dependent type>' contains-errors '-'
        | | | |-CallExpr 0x121019598 <col:13, col:39> '<dependent type>' contains-errors
        | | | | `-CXXDependentScopeMemberExpr 0x121019550 <col:13, col:34> '<dependent type>' contains-errors lvalue .size
        | | | |   `-RecoveryExpr 0x121019530 <col:13> '<dependent type>' contains-errors lvalue
        | | | `-IntegerLiteral 0x1210195b8 <col:43> 'int' 1
        | | `-CallExpr 0x121019700 <col:47, col:72> '<dependent type>' contains-errors
        | |   `-CXXDependentScopeMemberExpr 0x1210196b8 <col:47, col:67> '<dependent type>' contains-errors lvalue .size
        | |     `-RecoveryExpr 0x121019698 <col:47> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x121019790 <col:75, line:21:9>
        |   |-ReturnStmt 0x121019778 <line:17:11, col:18>
        |   | `-RecoveryExpr 0x121019758 <col:18> '<dependent type>' contains-errors lvalue
        |   `-NullStmt 0x121019788 <line:20:42>
        `-DefaultStmt 0x121019918 <line:26:7, col:14>
          `-NullStmt 0x121019910 <col:14>
