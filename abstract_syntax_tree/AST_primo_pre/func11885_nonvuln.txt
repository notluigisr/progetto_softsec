`-FunctionDecl 0x12e00df18  line:1:6 invalid ok_get 'int (int *, unsigned int, int *)'
  |-ParmVarDecl 0x12e00dd28 <col:13, col:24> col:24 invalid cx 'int *'
  |-ParmVarDecl 0x12e00dda8 <col:28, col:37> col:37 used argc 'unsigned int'
  |-ParmVarDecl 0x12e00de28 <col:43, col:50> col:50 invalid vp 'int *'
  `-CompoundStmt 0x12e027908 <col:54, line:7:1>
    |-CallExpr 0x12e00e1b8 <line:2:3, col:18> 'int'
    | |-ImplicitCastExpr 0x12e00e1a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e00e130 <col:3> 'int ()' Function 0x12e00e078 'METHOD_HEADER' 'int ()'
    | `-IntegerLiteral 0x12e00e150 <col:17> 'int' 0
    |-CallExpr 0x12e027898 <line:5:3, col:55> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x12e0276b8 <col:3, col:15> '<dependent type>' contains-errors lvalue .setBoolean
    | | `-CallExpr 0x12e027698 <col:3, col:13> '<dependent type>' contains-errors
    | |   `-RecoveryExpr 0x12e027670 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e00e1e0 <col:3> 'unsigned int' lvalue ParmVar 0x12e00dda8 'argc' 'unsigned int'
    | `-BinaryOperator 0x12e027878 <col:26, col:52> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x12e027818 <col:26, col:36> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x12e0277f8 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x12e027718 <col:36> 'int' 200
    |   `-BinaryOperator 0x12e027858 <col:43, col:52> 'int' contains-errors '<'
    |     |-RecoveryExpr 0x12e027838 <col:43> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x12e027770 <col:52> 'int' 300
    `-ReturnStmt 0x12e0278f8 <line:6:3, col:10>
      `-RecoveryExpr 0x12e0278d8 <col:10> '<dependent type>' contains-errors lvalue
