`-FunctionDecl 0x12e00dfa8  line:1:1 invalid find_var_in_ht 'int (int *, int, char *, int)'
  |-ParmVarDecl 0x12e00dd28 <line:2:5, col:16> col:16 invalid ht 'int *'
  |-ParmVarDecl 0x12e00dda8 <line:3:5, col:10> col:10 used htname 'int'
  |-ParmVarDecl 0x12e00de28 <line:4:5, col:13> col:13 used varname 'char *'
  |-ParmVarDecl 0x12e00dea8 <line:5:5, col:10> col:10 used no_autoload 'int'
  `-CompoundStmt 0x12e029688 <line:6:1, line:45:1>
    |-IfStmt 0x12e0283c0 <line:9:5, line:24:5>
    | |-BinaryOperator 0x12e00e190 <line:9:9, col:21> 'int' contains-errors '=='
    | | |-UnaryOperator 0x12e00e158 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x12e00e140 <col:10> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12e00e088 <col:10> 'char *' lvalue ParmVar 0x12e00de28 'varname' 'char *'
    | | `-RecoveryExpr 0x12e00e170 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e0283a0 <line:10:5, line:24:5>
    |   |-SwitchStmt 0x12e00e1e8 <line:12:2, line:22:2>
    |   | |-ImplicitCastExpr 0x12e00e1d0 <line:12:10> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12e00e1b0 <col:10> 'int' lvalue ParmVar 0x12e00dda8 'htname' 'int'
    |   | `-CompoundStmt 0x12e028308 <line:13:2, line:22:2>
    |   |   |-CaseStmt 0x12e00e240 <line:14:6, col:56>
    |   |   | |-ConstantExpr 0x12e00e228 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e00e210 <col:11> 'int' 115
    |   |   | `-ReturnStmt 0x12e0279c0 <col:16, col:56>
    |   |   |   `-UnaryOperator 0x12e0279a8 <col:23, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-CXXDependentScopeMemberExpr 0x12e027960 <col:24, col:56> '<dependent type>' contains-errors lvalue ->sv_var
    |   |   |       `-CallExpr 0x12e027938 <col:24, col:53> '<dependent type>' contains-errors
    |   |   |         |-DeclRefExpr 0x12e00e3c0 <col:24> 'int ()' Function 0x12e00e308 'SCRIPT_SV' 'int ()'
    |   |   |         `-CXXDependentScopeMemberExpr 0x12e0278f0 <col:34, col:47> '<dependent type>' contains-errors lvalue .sc_sid
    |   |   |           `-RecoveryExpr 0x12e0278d0 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027a00 <line:15:6, col:24>
    |   |   | |-ConstantExpr 0x12e0279e8 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e0279d0 <col:11> 'int' 103
    |   |   | `-ReturnStmt 0x12e027a90 <col:16, col:24>
    |   |   |   `-UnaryOperator 0x12e027a78 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x12e027a58 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027ad0 <line:16:6, col:24>
    |   |   | |-ConstantExpr 0x12e027ab8 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e027aa0 <col:11> 'int' 118
    |   |   | `-ReturnStmt 0x12e027b60 <col:16, col:24>
    |   |   |   `-UnaryOperator 0x12e027b48 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x12e027b28 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027ba0 <line:17:6, col:32>
    |   |   | |-ConstantExpr 0x12e027b88 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e027b70 <col:11> 'int' 98
    |   |   | `-ReturnStmt 0x12e027cc0 <col:16, col:32>
    |   |   |   `-UnaryOperator 0x12e027ca8 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-CXXDependentScopeMemberExpr 0x12e027c60 <col:24, col:32> '<dependent type>' contains-errors lvalue ->b_bufvar
    |   |   |       `-RecoveryExpr 0x12e027c40 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027d00 <line:18:6, col:32>
    |   |   | |-ConstantExpr 0x12e027ce8 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e027cd0 <col:11> 'int' 119
    |   |   | `-ReturnStmt 0x12e027e20 <col:16, col:32>
    |   |   |   `-UnaryOperator 0x12e027e08 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-CXXDependentScopeMemberExpr 0x12e027dc0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_winvar
    |   |   |       `-RecoveryExpr 0x12e027da0 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027e60 <line:19:6, col:32>
    |   |   | |-ConstantExpr 0x12e027e48 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e027e30 <col:11> 'int' 116
    |   |   | `-ReturnStmt 0x12e027f80 <col:16, col:32>
    |   |   |   `-UnaryOperator 0x12e027f68 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-CXXDependentScopeMemberExpr 0x12e027f20 <col:24, col:32> '<dependent type>' contains-errors lvalue ->tp_winvar
    |   |   |       `-RecoveryExpr 0x12e027f00 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |-CaseStmt 0x12e027fc0 <line:20:6, col:45>
    |   |   | |-ConstantExpr 0x12e027fa8 <col:11> 'int'
    |   |   | | `-CharacterLiteral 0x12e027f90 <col:11> 'int' 108
    |   |   | `-ReturnStmt 0x12e028158 <col:16, col:45>
    |   |   |   `-CallExpr 0x12e028138 <col:23, col:45> 'int'
    |   |   |     `-ImplicitCastExpr 0x12e028120 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   |   |       `-DeclRefExpr 0x12e0280c8 <col:23> 'int ()' Function 0x12e028010 'get_funccal_local_var' 'int ()'
    |   |   `-CaseStmt 0x12e028198 <line:21:6, col:44>
    |   |     |-ConstantExpr 0x12e028180 <col:11> 'int'
    |   |     | `-CharacterLiteral 0x12e028168 <col:11> 'int' 97
    |   |     `-ReturnStmt 0x12e0282f8 <col:16, col:44>
    |   |       `-CallExpr 0x12e0282d8 <col:23, col:44> 'int'
    |   |         `-ImplicitCastExpr 0x12e0282c0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   |           `-DeclRefExpr 0x12e0282a0 <col:23> 'int ()' Function 0x12e0281e8 'get_funccal_args_var' 'int ()'
    |   `-ReturnStmt 0x12e028390 <line:23:2, col:9>
    |     `-RecoveryExpr 0x12e028370 <col:9> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x12e029568 <line:27:5, line:43:5>
      |-CallExpr 0x12e0286b0 <line:27:9, col:26> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x12e028630 <col:9> 'int ()' Function 0x12e028578 'HASHITEM_EMPTY' 'int ()'
      | `-RecoveryExpr 0x12e028690 <col:24> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12e029550 <line:28:5, line:43:5>
        `-IfStmt 0x12e0294f0 <line:33:2, line:40:2>
          |-RecoveryExpr 0x12e028748 <line:33:6, col:27> '_Bool' contains-errors
          `-CompoundStmt 0x12e0294e0 <line:34:2, line:40:2>
