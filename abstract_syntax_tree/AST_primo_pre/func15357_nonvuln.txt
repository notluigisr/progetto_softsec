`-FunctionDecl 0x14a141968  line:1:5 invalid slap_sasl_authorized 'int (int *, struct berval *, struct berval *)'
  |-ParmVarDecl 0x14a128128 <col:27, col:38> col:38 invalid op 'int *'
  |-ParmVarDecl 0x14a128718 <line:2:2, col:17> col:17 used authcDN 'struct berval *'
  |-ParmVarDecl 0x14a141828 <col:26, col:41> col:41 used authzDN 'struct berval *'
  `-CompoundStmt 0x14a143830 <line:3:1, line:65:1>
    |-DeclStmt 0x14a141ae0 <line:4:2, col:34>
    | `-VarDecl 0x14a141a40 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-RecoveryExpr 0x14a141ac0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a141dc8 <line:7:2, line:10:2>
    | |-BinaryOperator 0x14a141c88 <line:7:7, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14a141bd8 <col:7, col:29> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x14a141b30 <col:7, col:8> 'int' prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x14a141b18 <col:8> 'struct berval *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x14a141af8 <col:8> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | | | `-UnaryOperator 0x14a141bc0 <col:19, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x14a141ba8 <col:20, col:29> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-RecoveryExpr 0x14a141b80 <col:20, col:29> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x14a141b48 <col:20> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | | `-UnaryOperator 0x14a141c70 <col:39, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14a141c58 <col:40, col:49> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14a141c30 <col:40, col:49> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14a141bf8 <col:40> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | `-CompoundStmt 0x14a141da8 <col:58, line:10:2>
    |   |-BinaryOperator 0x14a141d20 <line:8:3, col:8> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14a141ca8 <col:3> 'int' contains-errors lvalue Var 0x14a141a40 'rc' 'int'
    |   | `-RecoveryExpr 0x14a141d00 <col:8> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14a141d90 <line:9:3, col:8> 'DONE' 0x14a141d40
    |-IfStmt 0x14a141fc8 <line:13:2, line:15:2>
    | |-BinaryOperator 0x14a141f78 <line:13:7, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14a141ec8 <col:7, col:29> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x14a141e20 <col:7, col:8> 'int' prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x14a141e08 <col:8> 'struct berval *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x14a141de8 <col:8> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | | | `-UnaryOperator 0x14a141eb0 <col:19, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x14a141e98 <col:20, col:29> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-RecoveryExpr 0x14a141e70 <col:20, col:29> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x14a141e38 <col:20> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | | `-UnaryOperator 0x14a141f60 <col:39, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14a141f48 <col:40, col:49> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14a141f20 <col:40, col:49> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14a141ee8 <col:40> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | `-CompoundStmt 0x14a141fb0 <col:58, line:15:2>
    |   `-GotoStmt 0x14a141f98 <line:14:3, col:8> 'DONE' 0x14a141d40
    |-CallExpr 0x14a142488 <line:17:2, line:20:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a142140 <line:17:2> 'int ()' Function 0x14a142088 'Debug' 'int ()'
    | |-RecoveryExpr 0x14a142468 <col:9> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14a1421c0 <line:18:5> 'char[4]' lvalue "STR"
    | |-ConditionalOperator 0x14a1422c0 <line:19:3, col:39> '<dependent type>' contains-errors
    | | |-RecoveryExpr 0x14a142218 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14a1421e0 <col:3> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | | |-RecoveryExpr 0x14a142278 <col:21, col:30> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14a142240 <col:21> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | | `-StringLiteral 0x14a1422a0 <col:39> 'char[4]' lvalue "STR"
    | |-ConditionalOperator 0x14a1423d0 <line:20:3, col:39> '<dependent type>' contains-errors
    | | |-RecoveryExpr 0x14a142328 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14a1422f0 <col:3> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | | |-RecoveryExpr 0x14a142388 <col:21, col:30> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14a142350 <col:21> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | | `-StringLiteral 0x14a1423b0 <col:39> 'char[4]' lvalue "STR"
    | `-IntegerLiteral 0x14a142400 <col:47> 'int' 0
    |-IfStmt 0x14a142788 <line:23:2, line:26:2>
    | |-CallExpr 0x14a142658 <line:23:7, col:34> 'int'
    | | |-ImplicitCastExpr 0x14a142640 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14a1425b0 <col:7> 'int ()' Function 0x14a1424f8 'dn_match' 'int ()'
    | | |-ImplicitCastExpr 0x14a142688 <col:17> 'struct berval *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a1425d0 <col:17> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    | | `-ImplicitCastExpr 0x14a1426a0 <col:26> 'struct berval *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14a1425f0 <col:26> 'struct berval *' lvalue ParmVar 0x14a141828 'authzDN' 'struct berval *'
    | `-CompoundStmt 0x14a142768 <col:38, line:26:2>
    |   |-BinaryOperator 0x14a142730 <line:24:3, col:8> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14a1426b8 <col:3> 'int' contains-errors lvalue Var 0x14a141a40 'rc' 'int'
    |   | `-RecoveryExpr 0x14a142710 <col:8> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x14a142750 <line:25:3, col:8> 'DONE' 0x14a141d40
    |-CompoundStmt 0x14a143218 <line:29:2, line:35:2>
    | `-IfStmt 0x14a1431f8 <line:31:3, line:34:3>
    |   |-BinaryOperator 0x14a143188 <line:31:8, col:42> 'int' contains-errors '&&'
    |   | |-RecoveryExpr 0x14a143118 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x14a143158 <col:15, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14a143070 <col:15> 'int ()' Function 0x14a142fb8 'be_isroot_dn' 'int ()'
    |   |   |-RecoveryExpr 0x14a143138 <col:29> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14a1430a8 <col:34> 'struct berval *' lvalue ParmVar 0x14a128718 'authcDN' 'struct berval *'
    |   `-CompoundStmt 0x14a1431e0 <col:45, line:34:3>
    |     `-GotoStmt 0x14a1431c8 <line:33:4, col:9> 'DONE' 0x14a141d40
    |-IfStmt 0x14a143518 <line:38:2, line:46:2>
    | |-RecoveryExpr 0x14a143230 <line:38:6, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x14a143500 <col:37, line:46:2>
    |   `-IfStmt 0x14a1434e0 <line:41:3, line:45:3>
    |     |-RecoveryExpr 0x14a143430 <line:41:6, col:69> '_Bool' contains-errors
    |     `-CompoundStmt 0x14a1434c8 <col:72, line:45:3>
    |       `-GotoStmt 0x14a1434b0 <line:44:4, col:9> 'DONE' 0x14a141d40
    |-IfStmt 0x14a1436c0 <line:49:2, line:55:2>
    | |-RecoveryExpr 0x14a143538 <line:49:6, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x14a1436a8 <col:39, line:55:2>
    |   `-IfStmt 0x14a143688 <line:52:3, line:54:3>
    |     |-RecoveryExpr 0x14a143638 <line:52:7, col:13> '_Bool' contains-errors
    |     `-CompoundStmt 0x14a143670 <col:28, line:54:3>
    |       `-GotoStmt 0x14a143658 <line:53:4, col:9> 'DONE' 0x14a141d40
    |-LabelStmt 0x14a1437a8 <line:59:1, col:5> 'DONE'
    | `-NullStmt 0x14a1437a0 <col:5>
    `-ReturnStmt 0x14a143820 <line:64:2, col:13>
      `-ImplicitCastExpr 0x14a143808 <col:8, col:13> 'int' contains-errors <LValueToRValue>
        `-ParenExpr 0x14a1437e8 <col:8, col:13> 'int' contains-errors lvalue
          `-DeclRefExpr 0x14a1437c8 <col:10> 'int' contains-errors lvalue Var 0x14a141a40 'rc' 'int'
