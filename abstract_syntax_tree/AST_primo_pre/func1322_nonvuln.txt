`-FunctionDecl 0x1480e5bc8  line:1:1 invalid SWFInput_getSInt16 'int (int)'
  |-ParmVarDecl 0x1480e5af0 <col:20, col:29> col:29 invalid input 'int'
  `-CompoundStmt 0x1480e6010 <line:2:1, line:6:1>
    |-DeclStmt 0x1480e5eb8 <line:3:2, col:35>
    | `-VarDecl 0x1480e5c90 <col:2, col:34> col:6 used num 'int' cinit
    |   `-CallExpr 0x1480e5e90 <col:12, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1480e5e50 <col:12> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'
    |     `-RecoveryExpr 0x1480e5e70 <col:29> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x1480e5f98 <line:4:2, col:35> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x1480e5ed0 <col:2> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int'
    | `-BinaryOperator 0x1480e5f78 <col:9, col:35> '<dependent type>' contains-errors '*'
    |   |-CallExpr 0x1480e5f30 <col:9, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1480e5ef0 <col:9> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'
    |   | `-RecoveryExpr 0x1480e5f10 <col:26> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1480e5f58 <col:35> 'int' 256
    `-ReturnStmt 0x1480e6000 <line:5:2, col:9>
      `-ImplicitCastExpr 0x1480e5fe8 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1480e5fc8 <col:9> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int'
