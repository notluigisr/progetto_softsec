`-FunctionDecl 0x12a928378  line:1:5 invalid OCSP_request_verify 'int (int *, int (*)())'
  |-ParmVarDecl 0x12a928128 <col:25, col:39> col:39 invalid req 'int *'
  |-ParmVarDecl 0x12a928250 <col:44, <invalid sloc>> col:44 invalid STACK_OF 'int (*)()'
  `-CompoundStmt 0x12a942670 <line:3:1, line:35:1>
    |-DeclStmt 0x12a9284c8 <line:5:5, col:24>
    | `-VarDecl 0x12a928460 <col:5, col:22> col:22 referenced invalid nm 'const int *'
    |-DeclStmt 0x12a928578 <line:7:5, col:12>
    | `-VarDecl 0x12a928510 <col:5, col:9> col:9 used ret 'int'
    |-IfStmt 0x12a9418a0 <line:9:5, line:12:5>
    | |-UnaryOperator 0x12a928610 <line:9:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a9285f8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12a9285b0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->optionalSignature
    | |     `-RecoveryExpr 0x12a928590 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a941880 <col:34, line:12:5>
    |   |-CallExpr 0x12a941820 <line:10:9, col:58> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a928750 <col:9> 'int ()' Function 0x12a928698 'ERR_raise' 'int ()'
    |   | |-RecoveryExpr 0x12a9287d0 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12a941800 <col:33> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12a941870 <line:11:9, col:16>
    |     `-IntegerLiteral 0x12a941850 <col:16> 'int' 0
    |-IfStmt 0x12a941cc8 <line:14:5, line:17:5>
    | |-BinaryOperator 0x12a941b68 <line:14:9, col:30> 'int' contains-errors '||'
    | | |-UnaryOperator 0x12a941aa8 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x12a941a90 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x12a941a70 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12a941b48 <col:17, col:30> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x12a941ae0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->type
    | |   | `-RecoveryExpr 0x12a941ac0 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12a941b28 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a941ca8 <col:43, line:17:5>
    |   |-CallExpr 0x12a941c48 <line:15:9, col:70> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a941b88 <col:9> 'int ()' Function 0x12a928698 'ERR_raise' 'int ()'
    |   | |-RecoveryExpr 0x12a941c08 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12a941c28 <col:33> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12a941c98 <line:16:9, col:16>
    |     `-IntegerLiteral 0x12a941c78 <col:16> 'int' 0
    |-BinaryOperator 0x12a941ea8 <line:18:5, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12a941d08 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12a941ce8 <col:5> 'const int *' lvalue Var 0x12a928460 'nm' 'const int *'
    | `-CXXDependentScopeMemberExpr 0x12a941e60 <col:10, col:17> '<dependent type>' contains-errors lvalue .directoryName
    |   `-CXXDependentScopeMemberExpr 0x12a941e18 <col:10, col:15> '<dependent type>' contains-errors lvalue ->d
    |     `-RecoveryExpr 0x12a941df8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a942108 <line:20:5, line:23:5>
    | |-BinaryOperator 0x12a942080 <line:20:9, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x12a942068 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a942028 <col:9> 'int' lvalue Var 0x12a928510 'ret' 'int'
    | | `-IntegerLiteral 0x12a942048 <col:16> 'int' 0
    | `-CompoundStmt 0x12a9420f0 <col:19, line:23:5>
    |   `-ReturnStmt 0x12a9420e0 <line:22:9, col:16>
    |     `-IntegerLiteral 0x12a9420c0 <col:16> 'int' 0
    |-IfStmt 0x12a9423b0 <line:27:5, line:28:16>
    | |-RecoveryExpr 0x12a942360 <line:27:9, col:58> '_Bool' contains-errors
    | `-ReturnStmt 0x12a9423a0 <line:28:9, col:16>
    |   `-IntegerLiteral 0x12a942380 <col:16> 'int' 0
    `-IfStmt 0x12a942440 <line:29:5, line:30:16>
      |-RecoveryExpr 0x12a9423f0 <line:29:9, col:36> '_Bool' contains-errors
      `-ReturnStmt 0x12a942430 <line:30:9, col:16>
        `-IntegerLiteral 0x12a942410 <col:16> 'int' 1
