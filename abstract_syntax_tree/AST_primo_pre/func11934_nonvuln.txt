`-FunctionDecl 0x12c140a00  line:1:1 set_of 'int (union DateData *, int)'
  |-ParmVarDecl 0x12c128648 <col:8, col:24> col:24 used x 'union DateData *'
  |-ParmVarDecl 0x12c1286c8 <col:27, col:31> col:31 used of 'int'
  `-CompoundStmt 0x12c141388 <line:2:1, line:8:1>
    |-CallExpr 0x12c140e10 <line:3:5, col:28> 'int'
    | |-ImplicitCastExpr 0x12c140df8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c140c30 <col:5> 'int ()' Function 0x12c140b78 'assert' 'int ()'
    | `-CallExpr 0x12c140db8 <col:12, col:27> 'int'
    |   |-ImplicitCastExpr 0x12c140da0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12c140d30 <col:12> 'int ()' Function 0x12c140c78 'complex_dat_p' 'int ()'
    |   `-ImplicitCastExpr 0x12c140de0 <col:26> 'union DateData *' <LValueToRValue>
    |     `-DeclRefExpr 0x12c140d50 <col:26> 'union DateData *' lvalue ParmVar 0x12c128648 'x' 'union DateData *'
    |-CallExpr 0x12c140f70 <line:4:5, col:15> 'int'
    | |-ImplicitCastExpr 0x12c140f58 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c140f18 <col:5> 'int ()' Function 0x12c140e60 'get_c_jd' 'int ()'
    | `-ImplicitCastExpr 0x12c140f98 <col:14> 'union DateData *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c140f38 <col:14> 'union DateData *' lvalue ParmVar 0x12c128648 'x' 'union DateData *'
    |-CallExpr 0x12c1410e8 <line:5:5, col:15> 'int'
    | |-ImplicitCastExpr 0x12c1410d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c141090 <col:5> 'int ()' Function 0x12c140fd8 'get_c_df' 'int ()'
    | `-ImplicitCastExpr 0x12c141110 <col:14> 'union DateData *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c1410b0 <col:14> 'union DateData *' lvalue ParmVar 0x12c128648 'x' 'union DateData *'
    |-CallExpr 0x12c141260 <line:6:5, col:18> 'int'
    | |-ImplicitCastExpr 0x12c141248 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c141208 <col:5> 'int ()' Function 0x12c141150 'clear_civil' 'int ()'
    | `-ImplicitCastExpr 0x12c141288 <col:17> 'union DateData *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c141228 <col:17> 'union DateData *' lvalue ParmVar 0x12c128648 'x' 'union DateData *'
    `-BinaryOperator 0x12c141368 <line:7:5, col:15> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x12c141300 <col:5, col:10> '<dependent type>' contains-errors lvalue .of
      | `-RecoveryExpr 0x12c1412d8 <col:5, col:8> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12c1412a0 <col:5> 'union DateData *' lvalue ParmVar 0x12c128648 'x' 'union DateData *'
      `-DeclRefExpr 0x12c141348 <col:15> 'int' lvalue ParmVar 0x12c1286c8 'of' 'int'
