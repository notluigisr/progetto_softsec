`-FunctionDecl 0x12b1282a8  line:1:1 asn1_get_type 'int (unsigned char **, unsigned char *)'
  |-ParmVarDecl 0x12b128140 <col:15, col:31> col:31 used buffer 'unsigned char **'
  |-ParmVarDecl 0x12b1281c0 <line:2:8, col:23> col:23 used bufend 'unsigned char *'
  `-CompoundStmt 0x12b140b90 <line:3:1, line:14:1>
    |-DeclStmt 0x12b128428 <line:4:3, col:11>
    | `-VarDecl 0x12b1283c0 <col:3, col:7> col:7 used type 'int'
    |-BinaryOperator 0x12b128510 <line:7:3, col:12> 'int' '='
    | |-DeclRefExpr 0x12b128440 <col:3> 'int' lvalue Var 0x12b1283c0 'type' 'int'
    | `-ImplicitCastExpr 0x12b1284f8 <col:10, col:12> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x12b1284e0 <col:10, col:12> 'unsigned char' <LValueToRValue>
    |     `-UnaryOperator 0x12b1284c8 <col:10, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x12b1284b0 <col:11, col:12> 'unsigned char *' <LValueToRValue>
    |         `-UnaryOperator 0x12b128498 <col:11, col:12> 'unsigned char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x12b128480 <col:12> 'unsigned char **' <LValueToRValue>
    |             `-DeclRefExpr 0x12b128460 <col:12> 'unsigned char **' lvalue ParmVar 0x12b128140 'buffer' 'unsigned char **'
    |-UnaryOperator 0x12b1285a0 <line:8:3, col:13> 'unsigned char *' postfix '++'
    | `-ParenExpr 0x12b128580 <col:3, col:11> 'unsigned char *' lvalue
    |   `-UnaryOperator 0x12b128568 <col:4, col:5> 'unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x12b128550 <col:5> 'unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x12b128530 <col:5> 'unsigned char **' lvalue ParmVar 0x12b128140 'buffer' 'unsigned char **'
    |-IfStmt 0x12b140b08 <line:10:3, line:11:42>
    | |-BinaryOperator 0x12b128670 <line:10:7, col:22> 'int' '=='
    | | |-ParenExpr 0x12b128630 <col:7, col:17> 'int'
    | | | `-BinaryOperator 0x12b128610 <col:8, col:15> 'int' '&'
    | | |   |-ImplicitCastExpr 0x12b1285f8 <col:8> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12b1285b8 <col:8> 'int' lvalue Var 0x12b1283c0 'type' 'int'
    | | |   `-IntegerLiteral 0x12b1285d8 <col:15> 'int' 31
    | | `-IntegerLiteral 0x12b128650 <col:22> 'int' 31
    | `-BinaryOperator 0x12b140ae8 <line:11:5, col:42> 'int' '='
    |   |-DeclRefExpr 0x12b128690 <col:5> 'int' lvalue Var 0x12b1283c0 'type' 'int'
    |   `-CallExpr 0x12b140a88 <col:12, col:42> 'int'
    |     |-ImplicitCastExpr 0x12b140a70 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12b1287e0 <col:12> 'int ()' Function 0x12b128728 'asn1_get_packed' 'int ()'
    |     |-ImplicitCastExpr 0x12b140ab8 <col:28> 'unsigned char **' <LValueToRValue>
    |     | `-DeclRefExpr 0x12b140a00 <col:28> 'unsigned char **' lvalue ParmVar 0x12b128140 'buffer' 'unsigned char **'
    |     `-ImplicitCastExpr 0x12b140ad0 <col:36> 'unsigned char *' <LValueToRValue>
    |       `-DeclRefExpr 0x12b140a20 <col:36> 'unsigned char *' lvalue ParmVar 0x12b1281c0 'bufend' 'unsigned char *'
    `-ReturnStmt 0x12b140b80 <line:13:3, col:15>
      `-ImplicitCastExpr 0x12b140b68 <col:10, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x12b140b48 <col:10, col:15> 'int' lvalue
          `-DeclRefExpr 0x12b140b28 <col:11> 'int' lvalue Var 0x12b1283c0 'type' 'int'
