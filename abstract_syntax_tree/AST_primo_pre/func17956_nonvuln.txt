`-FunctionDecl 0x13d106bc8  line:1:13 invalid has_join_file 'int (int)' static
  |-ParmVarDecl 0x13d106af0 <col:27, col:41> col:41 invalid sandbox 'int'
  `-CompoundStmt 0x13d121d28 <col:50, line:20:1>
    |-DeclStmt 0x13d106f28 <line:3:2, col:54>
    | `-VarDecl 0x13d106c90 <col:2, col:53> col:6 used fd 'int' cinit
    |   `-CallExpr 0x13d106ef8 <col:11, col:53> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d106e50 <col:11> 'int ()' Function 0x13d106d98 'process_rootfs_open' 'int ()'
    |     |-RecoveryExpr 0x13d106e70 <col:31> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x13d106ed8 <col:40> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13d1205a8 <line:6:2, col:15>
    | |-RecordDecl 0x13d106fe8 <col:2, col:9> col:9 struct stat
    | `-VarDecl 0x13d1070e8 <col:2, col:14> col:14 invalid s 'struct stat'
    |-IfStmt 0x13d120988 <line:7:2, line:8:16>
    | |-BinaryOperator 0x13d120780 <line:7:6, col:24> 'int' contains-errors '=='
    | | |-CallExpr 0x13d120718 <col:6, col:18> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13d1206a0 <col:6> 'int ()' Function 0x13d1205e8 'fstat' 'int ()'
    | | | |-DeclRefExpr 0x13d1206c0 <col:12> 'int' contains-errors lvalue Var 0x13d106c90 'fd' 'int'
    | | | `-UnaryOperator 0x13d120700 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x13d1206e0 <col:17> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x13d120768 <col:23, col:24> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13d120748 <col:24> 'int' 1
    | `-CallExpr 0x13d120948 <line:8:3, col:16> 'int'
    |   |-ImplicitCastExpr 0x13d120930 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13d120880 <col:3> 'int ()' Function 0x13d1207c8 'errExit' 'int ()'
    |   `-ImplicitCastExpr 0x13d120970 <col:11> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x13d1208e0 <col:11> 'char[4]' lvalue "STR"
    |-IfStmt 0x13d120e88 <line:9:2, line:12:2>
    | |-BinaryOperator 0x13d120cc0 <line:9:6, col:59> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13d120bf8 <col:6, col:41> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x13d120b38 <col:6, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-CallExpr 0x13d120b10 <col:7, col:24> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x13d120a88 <col:7> 'int ()' Function 0x13d1209d0 'S_ISREG' 'int ()'
    | | | |   `-CXXDependentScopeMemberExpr 0x13d120ac8 <col:15, col:17> '<dependent type>' contains-errors lvalue .st_mode
    | | | |     `-RecoveryExpr 0x13d120aa8 <col:15> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x13d120bd8 <col:29, col:41> 'int' contains-errors '!='
    | | |   |-CXXDependentScopeMemberExpr 0x13d120b70 <col:29, col:31> '<dependent type>' contains-errors lvalue .st_uid
    | | |   | `-RecoveryExpr 0x13d120b50 <col:29> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x13d120bb8 <col:41> 'int' 0
    | | `-BinaryOperator 0x13d120ca0 <col:46, col:59> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x13d120c38 <col:46, col:48> '<dependent type>' contains-errors lvalue .st_size
    | |   | `-RecoveryExpr 0x13d120c18 <col:46> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x13d120c80 <col:59> 'int' 1
    | `-CompoundStmt 0x13d120e70 <col:62, line:12:2>
    |   `-CallExpr 0x13d120e18 <line:10:3, col:11> 'int' contains-errors
    |     |-ImplicitCastExpr 0x13d120e00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13d120dc0 <col:3> 'int ()' Function 0x13d120d08 'close' 'int ()'
    |     `-ImplicitCastExpr 0x13d120e40 <col:9> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x13d120de0 <col:9> 'int' contains-errors lvalue Var 0x13d106c90 'fd' 'int'
    |-DeclStmt 0x13d120f20 <line:13:2, col:13>
    | `-VarDecl 0x13d120eb8 <col:2, col:7> col:7 used status 'char'
    |-IfStmt 0x13d121c58 <line:14:2, line:17:2>
    | |-BinaryOperator 0x13d121b38 <line:14:6, col:45> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13d121ad8 <col:6, col:30> 'int' contains-errors '=='
    | | | |-CallExpr 0x13d121a88 <col:6, col:25> 'int' contains-errors
    | | | | |-ImplicitCastExpr 0x13d121a70 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | | `-DeclRefExpr 0x13d121018 <col:6> 'int ()' Function 0x13d120f60 'read' 'int ()'
    | | | | |-ImplicitCastExpr 0x13d121ac0 <col:11> 'int' contains-errors <LValueToRValue>
    | | | | | `-DeclRefExpr 0x13d121038 <col:11> 'int' contains-errors lvalue Var 0x13d106c90 'fd' 'int'
    | | | | |-UnaryOperator 0x13d121078 <col:15, col:16> 'char *' prefix '&' cannot overflow
    | | | | | `-DeclRefExpr 0x13d121058 <col:16> 'char' lvalue Var 0x13d120eb8 'status' 'char'
    | | | | `-IntegerLiteral 0x13d121090 <col:24> 'int' 1
    | | | `-IntegerLiteral 0x13d121118 <col:30> 'int' 1
    | | `-BinaryOperator 0x13d121b18 <col:35, col:45> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x13d121158 <col:35> 'char' lvalue Var 0x13d120eb8 'status' 'char'
    | |   `-RecoveryExpr 0x13d121af8 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13d121c38 <col:59, line:17:2>
    |   |-CallExpr 0x13d121bb0 <line:15:3, col:11> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x13d121b98 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13d121b58 <col:3> 'int ()' Function 0x13d120d08 'close' 'int ()'
    |   | `-ImplicitCastExpr 0x13d121bd8 <col:9> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d121b78 <col:9> 'int' contains-errors lvalue Var 0x13d106c90 'fd' 'int'
    |   `-ReturnStmt 0x13d121c28 <line:16:3, col:10>
    |     `-RecoveryExpr 0x13d121c08 <col:10> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13d121cd0 <line:18:2, col:10> 'int' contains-errors
      |-ImplicitCastExpr 0x13d121cb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13d121c78 <col:2> 'int ()' Function 0x13d120d08 'close' 'int ()'
      `-ImplicitCastExpr 0x13d121cf8 <col:8> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13d121c98 <col:8> 'int' contains-errors lvalue Var 0x13d106c90 'fd' 'int'
