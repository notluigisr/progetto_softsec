`-FunctionDecl 0x142928758  line:1:5 xfrm_init_state 'int (struct xfrm_state *)'
  |-ParmVarDecl 0x142928648 <col:21, col:40> col:40 used x 'struct xfrm_state *'
  `-CompoundStmt 0x142940f68 <line:2:1, line:10:1>
    |-DeclStmt 0x142940ad0 <line:3:2, col:9>
    | `-VarDecl 0x142940a68 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x142940d70 <line:5:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x142940ae8 <col:2> 'int' lvalue Var 0x142940a68 'err' 'int'
    | `-CallExpr 0x142940d38 <col:8, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142940c30 <col:8> 'int ()' Function 0x142940b78 '__xfrm_init_state' 'int ()'
    |   |-DeclRefExpr 0x142940c50 <col:26> 'struct xfrm_state *' lvalue ParmVar 0x142928648 'x' 'struct xfrm_state *'
    |   |-RecoveryExpr 0x142940cf8 <col:29> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x142940d18 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x142940f00 <line:6:2, line:7:17>
    | |-UnaryOperator 0x142940dc8 <line:6:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x142940db0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x142940d90 <col:7> 'int' lvalue Var 0x142940a68 'err' 'int'
    | `-BinaryOperator 0x142940ee0 <line:7:3, col:17> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x142940e40 <col:3, col:9> '<dependent type>' contains-errors lvalue .state
    |   | `-RecoveryExpr 0x142940e18 <col:3, col:6> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x142940de0 <col:3> 'struct xfrm_state *' lvalue ParmVar 0x142928648 'x' 'struct xfrm_state *'
    |   `-RecoveryExpr 0x142940ec0 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x142940f58 <line:9:2, col:9>
      `-ImplicitCastExpr 0x142940f40 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x142940f20 <col:9> 'int' lvalue Var 0x142940a68 'err' 'int'
