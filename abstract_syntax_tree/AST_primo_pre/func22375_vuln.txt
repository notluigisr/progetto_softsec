`-FunctionDecl 0x12680de88  line:1:1 invalid addMultirowsForm 'int (int *, int *)'
  |-ParmVarDecl 0x12680dd28 <col:18, col:26> col:26 referenced invalid buf 'int *'
  |-ParmVarDecl 0x12680dda8 <col:31, col:43> col:43 referenced invalid al 'int *'
  `-CompoundStmt 0x126829dd8 <line:2:1, line:53:1>
    |-DeclStmt 0x12680e278 <line:3:5, col:32>
    | |-VarDecl 0x12680df58 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x12680dfd8 <col:5, col:12> col:12 used j 'int'
    | |-VarDecl 0x12680e058 <col:5, col:15> col:15 used k 'int'
    | |-VarDecl 0x12680e0d8 <col:5, col:18> col:18 used col 'int'
    | |-VarDecl 0x12680e158 <col:5, col:23> col:23 used ecol 'int'
    | `-VarDecl 0x12680e1d8 <col:5, col:29> col:29 used pos 'int'
    |-IfStmt 0x126827490 <line:7:5, line:8:2>
    | |-BinaryOperator 0x126827460 <line:7:9, col:38> 'int' contains-errors '||'
    | | |-BinaryOperator 0x126827440 <col:9, col:15> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x12680e2f0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x126827420 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12680e3d0 <col:23, col:38> 'int' contains-errors '=='
    | |   |-CXXDependentScopeMemberExpr 0x12680e368 <col:23, col:27> '<dependent type>' contains-errors lvalue ->nanchor
    | |   | `-RecoveryExpr 0x12680e348 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x12680e3b0 <col:38> 'int' 0
    | `-ReturnStmt 0x126827480 <line:8:2>
    `-ForStmt 0x126829da0 <line:9:5, line:52:5>
      |-BinaryOperator 0x1268274f0 <line:9:10, col:14> 'int' '='
      | |-DeclRefExpr 0x1268274b0 <col:10> 'int' lvalue Var 0x12680df58 'i' 'int'
      | `-IntegerLiteral 0x1268274d0 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x126827598 <col:17, col:25> 'int' contains-errors '<'
      | |-DeclRefExpr 0x126827510 <col:17> 'int' lvalue Var 0x12680df58 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x126827550 <col:21, col:25> '<dependent type>' contains-errors lvalue ->nanchor
      |   `-RecoveryExpr 0x126827530 <col:21> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x1268275d8 <col:34, col:35> 'int' postfix '++'
      | `-DeclRefExpr 0x1268275b8 <col:34> 'int' lvalue Var 0x12680df58 'i' 'int'
      `-CompoundStmt 0x126829d68 <col:39, line:52:5>
        |-BinaryOperator 0x126827830 <line:11:2, col:24> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x1268277c8 <col:2, col:17> '<dependent type>' contains-errors lvalue .rows
        | | `-ArraySubscriptExpr 0x1268277a8 <col:2, col:15> '<dependent type>' contains-errors lvalue
        | |   |-ImplicitCastExpr 0x126827778 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
        | |   | `-CXXDependentScopeMemberExpr 0x126827710 <col:2, col:6> '<dependent type>' contains-errors lvalue ->anchors
        | |   |   `-RecoveryExpr 0x1268276e8 <col:2> '<dependent type>' contains-errors lvalue
        | |   |     `-DeclRefExpr 0x1268276c8 <col:2> 'int *' lvalue ParmVar 0x12680dda8 'al' 'int *'
        | |   `-ImplicitCastExpr 0x126827790 <col:14> 'int' <LValueToRValue>
        | |     `-DeclRefExpr 0x126827758 <col:14> 'int' lvalue Var 0x12680df58 'i' 'int'
        | `-IntegerLiteral 0x126827810 <col:24> 'int' 1
        |-IfStmt 0x126827ae8 <line:12:2, line:13:6>
        | |-BinaryOperator 0x126827ac0 <line:12:6, col:40> 'int' contains-errors '||'
        | | |-BinaryOperator 0x126827a18 <col:6, col:20> 'int' contains-errors '<'
        | | | |-CXXDependentScopeMemberExpr 0x1268279d0 <col:6, col:13> '<dependent type>' contains-errors lvalue .hseq
        | | | | `-RecoveryExpr 0x1268279b0 <col:6> '<dependent type>' contains-errors lvalue
        | | | `-IntegerLiteral 0x1268278b0 <col:20> 'int' 0
        | | `-BinaryOperator 0x126827aa0 <col:25, col:40> 'int' contains-errors '<='
        | |   |-CXXDependentScopeMemberExpr 0x126827a58 <col:25, col:32> '<dependent type>' contains-errors lvalue .rows
        | |   | `-RecoveryExpr 0x126827a38 <col:25> '<dependent type>' contains-errors lvalue
        | |   `-IntegerLiteral 0x126827950 <col:40> 'int' 1
        | `-ContinueStmt 0x126827ae0 <line:13:6>
        |-ForStmt 0x126827fa8 <line:14:2, line:17:2>
        | |-<<<NULL>>>
        | |-<<<NULL>>>
        | |-BinaryOperator 0x126827c38 <line:14:27, col:32> 'int' contains-errors '!='
        | | |-RecoveryExpr 0x126827bf8 <col:27> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x126827c18 <col:32> '<dependent type>' contains-errors lvalue
        | |-BinaryOperator 0x126827d78 <col:38, col:45> '<dependent type>' contains-errors '='
        | | |-RecoveryExpr 0x126827cf0 <col:38> '<dependent type>' contains-errors lvalue
        | | `-CXXDependentScopeMemberExpr 0x126827d30 <col:42, col:45> '<dependent type>' contains-errors lvalue ->next
        | |   `-RecoveryExpr 0x126827d10 <col:42> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x126827f90 <col:51, line:17:2>
        |   `-IfStmt 0x126827f70 <line:15:6, line:16:3>
        |     |-BinaryOperator 0x126827f48 <line:15:10, col:34> 'int' contains-errors '=='
        |     | |-CXXDependentScopeMemberExpr 0x126827e98 <col:10, col:13> '<dependent type>' contains-errors lvalue ->linenumber
        |     | | `-RecoveryExpr 0x126827e78 <col:10> '<dependent type>' contains-errors lvalue
        |     | `-CXXDependentScopeMemberExpr 0x126827f00 <col:27, col:34> '<dependent type>' contains-errors lvalue .y
        |     |   `-RecoveryExpr 0x126827ee0 <col:27> '<dependent type>' contains-errors lvalue
        |     `-BreakStmt 0x126827f68 <line:16:3>
        |-IfStmt 0x126828080 <line:18:2, line:19:6>
        | |-UnaryOperator 0x126828060 <line:18:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
        | | `-ImplicitCastExpr 0x126828048 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        | |   `-RecoveryExpr 0x126828028 <col:7> '<dependent type>' contains-errors lvalue
        | `-ContinueStmt 0x126828078 <line:19:6>
        `-IfStmt 0x1268283c8 <line:20:2, line:30:2> has_else
          |-BinaryOperator 0x1268282e0 <line:20:6, col:31> 'int' contains-errors '=='
          | |-CXXDependentScopeMemberExpr 0x1268281e8 <col:6, col:13> '<dependent type>' contains-errors lvalue .y
          | | `-RecoveryExpr 0x1268281c8 <col:6> '<dependent type>' contains-errors lvalue
          | `-CXXDependentScopeMemberExpr 0x126828298 <col:18, col:31> '<dependent type>' contains-errors lvalue .line
          |   `-CXXDependentScopeMemberExpr 0x126828250 <col:18, col:25> '<dependent type>' contains-errors lvalue .start
          |     `-RecoveryExpr 0x126828230 <col:18> '<dependent type>' contains-errors lvalue
          |-NullStmt 0x1268283c0 <line:21:6>
          `-CompoundStmt 0x1268283a8 <line:22:7, line:30:2>
            `-IfStmt 0x126828388 <line:28:6, line:29:3>
              |-RecoveryExpr 0x126828360 <line:28:10, col:11> '_Bool' contains-errors
              `-ContinueStmt 0x126828380 <line:29:3>
