`-FunctionDecl 0x120128238  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x120128158 <col:6> col:6 used HeaderMapImplTest 'int'
  |-ParmVarDecl 0x1201280d8 <col:25> col:25 DoubleInlineSet 'int'
  `-CompoundStmt 0x103808a40 <col:42, line:7:1>
    |-ImplicitCastExpr 0x120128370 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x120128350 <col:3> 'int' lvalue ParmVar 0x120128158 'HeaderMapImplTest' 'int'
    |-CallExpr 0x103808868 <line:5:3, col:66> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1201284d0 <col:3> 'int ()' Function 0x120128418 'EXPECT_EQ' 'int ()'
    | |-StringLiteral 0x120128530 <col:13> 'char[4]' lvalue "STR"
    | `-CallExpr 0x103808848 <col:20, col:65> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x103808800 <col:20, col:51> '<dependent type>' contains-errors lvalue .getStringView
    |     `-CallExpr 0x1201287a0 <col:20, col:49> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x120128758 <col:20, col:43> '<dependent type>' contains-errors lvalue ->value
    |         `-CallExpr 0x120128738 <col:20, col:40> '<dependent type>' contains-errors
    |           `-CXXDependentScopeMemberExpr 0x1201286f0 <col:20, col:28> '<dependent type>' contains-errors lvalue .ContentType
    |             `-RecoveryExpr 0x1201286d0 <col:20> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x103808a10 <line:6:3, col:32> '<dependent type>' contains-errors
      |-DeclRefExpr 0x103808898 <col:3> 'int ()' Function 0x120128418 'EXPECT_EQ' 'int ()'
      |-IntegerLiteral 0x1038088b8 <col:13> 'unsigned long' 1
      `-CallExpr 0x1038089f0 <col:18, col:31> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x1038089a8 <col:18, col:26> '<dependent type>' contains-errors lvalue .size
          `-RecoveryExpr 0x103808988 <col:18> '<dependent type>' contains-errors lvalue
