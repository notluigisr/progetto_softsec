`-FunctionDecl 0x14f826958  line:1:17 sock_alloc_send_pskb 'struct sk_buff *(struct sock *, unsigned long, unsigned long, int, int *)'
  |-ParmVarDecl 0x14f80e2e8 <col:38, col:51> col:51 used sk 'struct sock *'
  |-ParmVarDecl 0x14f80e368 <col:55, col:69> col:69 used header_len 'unsigned long'
  |-ParmVarDecl 0x14f826600 <line:2:10, col:24> col:24 used data_len 'unsigned long'
  |-ParmVarDecl 0x14f826680 <col:34, col:38> col:38 used noblock 'int'
  |-ParmVarDecl 0x14f826738 <line:3:10, col:15> col:15 used errcode 'int *'
  `-CompoundStmt 0x14f82eb08 <line:4:1, line:80:1>
    |-DeclStmt 0x14f826b60 <line:5:2, col:21>
    | `-VarDecl 0x14f826af8 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x14f826c10 <line:7:2, col:12>
    | `-VarDecl 0x14f826ba8 <col:2, col:7> col:7 used timeo 'long'
    |-DeclStmt 0x14f826ca8 <line:8:2, col:9>
    | `-VarDecl 0x14f826c40 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x14f827040 <line:14:2, col:35> 'long' '='
    | |-DeclRefExpr 0x14f826de8 <col:2> 'long' lvalue Var 0x14f826ba8 'timeo' 'long'
    | `-ImplicitCastExpr 0x14f827028 <col:10, col:35> 'long' <IntegralCast>
    |   `-CallExpr 0x14f826fc8 <col:10, col:35> 'int'
    |     |-ImplicitCastExpr 0x14f826fb0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14f826f20 <col:10> 'int ()' Function 0x14f826e68 'sock_sndtimeo' 'int ()'
    |     |-ImplicitCastExpr 0x14f826ff8 <col:24> 'struct sock *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14f826f40 <col:24> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |     `-ImplicitCastExpr 0x14f827010 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14f826f60 <col:28> 'int' lvalue ParmVar 0x14f826680 'noblock' 'int'
    |-WhileStmt 0x14f82e630 <line:15:2, line:70:2>
    | |-IntegerLiteral 0x14f827060 <line:15:9> 'int' 1
    | `-CompoundStmt 0x14f82e5e0 <col:12, line:70:2>
    |   |-BinaryOperator 0x14f827218 <line:16:3, col:22> 'int' '='
    |   | |-DeclRefExpr 0x14f827080 <col:3> 'int' lvalue Var 0x14f826c40 'err' 'int'
    |   | `-CallExpr 0x14f8271d8 <col:9, col:22> 'int'
    |   |   |-ImplicitCastExpr 0x14f8271c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x14f827180 <col:9> 'int ()' Function 0x14f8270c8 'sock_error' 'int ()'
    |   |   `-ImplicitCastExpr 0x14f827200 <col:20> 'struct sock *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14f8271a0 <col:20> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |   |-IfStmt 0x14f827318 <line:17:3, line:18:9>
    |   | |-BinaryOperator 0x14f827290 <line:17:7, col:14> 'int' '!='
    |   | | |-ImplicitCastExpr 0x14f827278 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14f827238 <col:7> 'int' lvalue Var 0x14f826c40 'err' 'int'
    |   | | `-IntegerLiteral 0x14f827258 <col:14> 'int' 0
    |   | `-GotoStmt 0x14f827300 <line:18:4, col:9> 'failure' 0x14f8272b0
    |   |-BinaryOperator 0x14f827410 <line:20:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f827338 <col:3> 'int' lvalue Var 0x14f826c40 'err' 'int'
    |   | `-UnaryOperator 0x14f8273f8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x14f8273e0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x14f8273c0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14f827520 <line:21:3, line:22:9>
    |   | |-BinaryOperator 0x14f8274e8 <line:21:7, col:25> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x14f827468 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14f827430 <col:7> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |   | | `-RecoveryExpr 0x14f8274c8 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-GotoStmt 0x14f827508 <line:22:4, col:9> 'failure' 0x14f8272b0
    |   |-IfStmt 0x14f82dec0 <line:24:3, line:61:3>
    |   | |-BinaryOperator 0x1588089d8 <line:24:7, col:45> 'int' contains-errors '<'
    |   | | |-CallExpr 0x158808950 <col:7, col:37> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x1588088b8 <col:7> 'int ()' Function 0x158808800 'atomic_read' 'int ()'
    |   | | | `-UnaryOperator 0x158808938 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | |   `-RecoveryExpr 0x158808910 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x1588088d8 <col:20> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |   | | `-RecoveryExpr 0x1588089b0 <col:41, col:45> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x158808978 <col:41> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |   | `-CompoundStmt 0x14f82de98 <col:56, line:61:3>
    |   |   |-BinaryOperator 0x158808bf0 <line:25:4, col:40> 'struct sk_buff *' contains-errors '='
    |   |   | |-DeclRefExpr 0x1588089f8 <col:4> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   | `-CallExpr 0x158808bc0 <col:10, col:40> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x158808af8 <col:10> 'int ()' Function 0x158808a40 'alloc_skb' 'int ()'
    |   |   |   |-DeclRefExpr 0x158808b18 <col:20> 'unsigned long' lvalue ParmVar 0x14f80e368 'header_len' 'unsigned long'
    |   |   |   `-RecoveryExpr 0x158808ba0 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x14f82de40 <line:26:4, line:58:4>
    |   |   | |-ImplicitCastExpr 0x158808c30 <line:26:8> 'struct sk_buff *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x158808c10 <col:8> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   | `-CompoundStmt 0x14f82ddf8 <col:13, line:58:4>
    |   |   |   |-DeclStmt 0x158808cc8 <line:27:5, col:15>
    |   |   |   | `-VarDecl 0x158808c60 <col:5, col:9> col:9 used npages 'int'
    |   |   |   |-DeclStmt 0x158808d60 <line:28:5, col:10>
    |   |   |   | `-VarDecl 0x158808cf8 <col:5, col:9> col:9 used i 'int'
    |   |   |   |-IfStmt 0x158808dd0 <line:31:5, line:32:6>
    |   |   |   | |-UnaryOperator 0x158808db0 <line:31:9, col:10> 'int' prefix '!' cannot overflow
    |   |   |   | | `-ImplicitCastExpr 0x158808d98 <col:10> 'unsigned long' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x158808d78 <col:10> 'unsigned long' lvalue ParmVar 0x14f826600 'data_len' 'unsigned long'
    |   |   |   | `-BreakStmt 0x158808dc8 <line:32:6>
    |   |   |   |-CompoundAssignOperator 0x158808f20 <line:35:5, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |   | |-RecoveryExpr 0x158808ed8 <col:5, col:10> '<dependent type>' contains-errors lvalue
    |   |   |   | | `-DeclRefExpr 0x158808ea0 <col:5> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   |   | `-DeclRefExpr 0x158808f00 <col:22> 'unsigned long' lvalue ParmVar 0x14f826600 'data_len' 'unsigned long'
    |   |   |   |-BinaryOperator 0x158809110 <line:36:5, col:33> '<dependent type>' contains-errors '='
    |   |   |   | |-RecoveryExpr 0x1588090c8 <col:5, col:22> '<dependent type>' contains-errors lvalue
    |   |   |   | | `-CallExpr 0x158809088 <col:5, col:19> 'int'
    |   |   |   | |   |-ImplicitCastExpr 0x158809070 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | |   | `-DeclRefExpr 0x158809030 <col:5> 'int ()' Function 0x158808f78 'skb_shinfo' 'int ()'
    |   |   |   | |   `-ImplicitCastExpr 0x1588090b0 <col:16> 'struct sk_buff *' <LValueToRValue>
    |   |   |   | |     `-DeclRefExpr 0x158809050 <col:16> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   |   | `-DeclRefExpr 0x1588090f0 <col:33> 'int' lvalue Var 0x158808c60 'npages' 'int'
    |   |   |   |-ForStmt 0x14f82ddb8 <line:37:5, line:54:5>
    |   |   |   | |-BinaryOperator 0x158809170 <line:37:10, col:14> 'int' '='
    |   |   |   | | |-DeclRefExpr 0x158809130 <col:10> 'int' lvalue Var 0x158808cf8 'i' 'int'
    |   |   |   | | `-IntegerLiteral 0x158809150 <col:14> 'int' 0
    |   |   |   | |-<<<NULL>>>
    |   |   |   | |-BinaryOperator 0x158809200 <col:17, col:21> 'int' '<'
    |   |   |   | | |-ImplicitCastExpr 0x1588091d0 <col:17> 'int' <LValueToRValue>
    |   |   |   | | | `-DeclRefExpr 0x158809190 <col:17> 'int' lvalue Var 0x158808cf8 'i' 'int'
    |   |   |   | | `-ImplicitCastExpr 0x1588091e8 <col:21> 'int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x1588091b0 <col:21> 'int' lvalue Var 0x158808c60 'npages' 'int'
    |   |   |   | |-UnaryOperator 0x158809240 <col:29, col:30> 'int' postfix '++'
    |   |   |   | | `-DeclRefExpr 0x158809220 <col:29> 'int' lvalue Var 0x158808cf8 'i' 'int'
    |   |   |   | `-CompoundStmt 0x14f82dd90 <col:34, line:54:5>
    |   |   |   |   |-DeclStmt 0x158809448 <line:38:6, col:23>
    |   |   |   |   | |-RecordDecl 0x158809258 <col:6, col:13> col:13 struct page
    |   |   |   |   | `-VarDecl 0x1588093c8 <col:6, col:19> col:19 used page 'struct page *'
    |   |   |   |   |-BinaryOperator 0x158809630 <line:40:6, col:45> 'struct page *' contains-errors '='
    |   |   |   |   | |-DeclRefExpr 0x158809460 <col:6> 'struct page *' lvalue Var 0x1588093c8 'page' 'struct page *'
    |   |   |   |   | `-CallExpr 0x158809600 <col:13, col:45> '<dependent type>' contains-errors
    |   |   |   |   |   |-DeclRefExpr 0x158809560 <col:13> 'int ()' Function 0x1588094a8 'alloc_pages' 'int ()'
    |   |   |   |   |   |-RecoveryExpr 0x1588095b8 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |   |   |   |   | `-DeclRefExpr 0x158809580 <col:25> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |   |   |   |   |   `-IntegerLiteral 0x1588095e0 <col:44> 'int' 0
    |   |   |   |   `-IfStmt 0x14f82db90 <line:41:6, line:46:6>
    |   |   |   |     |-UnaryOperator 0x158809688 <line:41:10, col:11> 'int' prefix '!' cannot overflow
    |   |   |   |     | `-ImplicitCastExpr 0x158809670 <col:11> 'struct page *' <LValueToRValue>
    |   |   |   |     |   `-DeclRefExpr 0x158809650 <col:11> 'struct page *' lvalue Var 0x1588093c8 'page' 'struct page *'
    |   |   |   |     `-CompoundStmt 0x14f82db68 <col:17, line:46:6>
    |   |   |   |       |-BinaryOperator 0x1588097a0 <line:43:7, col:35> '<dependent type>' contains-errors '='
    |   |   |   |       | |-RecoveryExpr 0x158809758 <col:7, col:24> '<dependent type>' contains-errors lvalue
    |   |   |   |       | | `-CallExpr 0x158809718 <col:7, col:21> 'int'
    |   |   |   |       | |   |-ImplicitCastExpr 0x158809700 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   |       | |   | `-DeclRefExpr 0x1588096c0 <col:7> 'int ()' Function 0x158808f78 'skb_shinfo' 'int ()'
    |   |   |   |       | |   `-ImplicitCastExpr 0x158809740 <col:18> 'struct sk_buff *' <LValueToRValue>
    |   |   |   |       | |     `-DeclRefExpr 0x1588096e0 <col:18> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   |   |       | `-DeclRefExpr 0x158809780 <col:35> 'int' lvalue Var 0x158808cf8 'i' 'int'
    |   |   |   |       |-CallExpr 0x14f82db10 <line:44:7, col:20> 'int'
    |   |   |   |       | |-ImplicitCastExpr 0x14f82daf8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   |       | | `-DeclRefExpr 0x14f82dab8 <col:7> 'int ()' Function 0x14f82da00 'kfree_skb' 'int ()'
    |   |   |   |       | `-ImplicitCastExpr 0x14f82db38 <col:17> 'struct sk_buff *' <LValueToRValue>
    |   |   |   |       |   `-DeclRefExpr 0x14f82dad8 <col:17> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |   |   |   |       `-GotoStmt 0x14f82db50 <line:45:7, col:12> 'failure' 0x14f8272b0
    |   |   |   `-BreakStmt 0x14f82ddf0 <line:57:5>
    |   |   `-GotoStmt 0x14f82de80 <line:60:4, col:9> 'failure' 0x14f8272b0
    |   |-IfStmt 0x14f82e208 <line:65:3, line:66:9>
    |   | |-UnaryOperator 0x14f82e1d8 <line:65:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14f82e1c0 <col:8> 'long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14f82e1a0 <col:8> 'long' lvalue Var 0x14f826ba8 'timeo' 'long'
    |   | `-GotoStmt 0x14f82e1f0 <line:66:4, col:9> 'failure' 0x14f8272b0
    |   |-IfStmt 0x14f82e3b0 <line:67:3, line:68:9>
    |   | |-RecoveryExpr 0x14f82e328 <line:67:7, col:29> '_Bool' contains-errors
    |   | `-GotoStmt 0x14f82e398 <line:68:4, col:9> 'interrupted' 0x14f82e348
    |   `-BinaryOperator 0x14f82e5c0 <line:69:3, col:39> 'long' '='
    |     |-DeclRefExpr 0x14f82e3d0 <col:3> 'long' lvalue Var 0x14f826ba8 'timeo' 'long'
    |     `-ImplicitCastExpr 0x14f82e5a8 <col:11, col:39> 'long' <IntegralCast>
    |       `-CallExpr 0x14f82e548 <col:11, col:39> 'int'
    |         |-ImplicitCastExpr 0x14f82e530 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14f82e4d0 <col:11> 'int ()' Function 0x14f82e418 'sock_wait_for_wmem' 'int ()'
    |         |-ImplicitCastExpr 0x14f82e578 <col:30> 'struct sock *' <LValueToRValue>
    |         | `-DeclRefExpr 0x14f82e4f0 <col:30> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |         `-ImplicitCastExpr 0x14f82e590 <col:34> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x14f82e510 <col:34> 'long' lvalue Var 0x14f826ba8 'timeo' 'long'
    |-CallExpr 0x14f82e7a8 <line:72:2, col:25> 'int'
    | |-ImplicitCastExpr 0x14f82e790 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14f82e730 <col:2> 'int ()' Function 0x14f82e678 'skb_set_owner_w' 'int ()'
    | |-ImplicitCastExpr 0x14f82e7d8 <col:18> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x14f82e750 <col:18> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x14f82e7f0 <col:23> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x14f82e770 <col:23> 'struct sock *' lvalue ParmVar 0x14f80e2e8 'sk' 'struct sock *'
    |-ReturnStmt 0x14f82e840 <line:73:2, col:9>
    | `-ImplicitCastExpr 0x14f82e828 <col:9> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x14f82e808 <col:9> 'struct sk_buff *' lvalue Var 0x14f826af8 'skb' 'struct sk_buff *'
    |-LabelStmt 0x14f82ea20 <line:75:1, line:76:29> 'interrupted'
    | `-BinaryOperator 0x14f82ea00 <col:2, col:29> 'int' '='
    |   |-DeclRefExpr 0x14f82e850 <col:2> 'int' lvalue Var 0x14f826c40 'err' 'int'
    |   `-CallExpr 0x14f82e9a8 <col:8, col:29> 'int'
    |     |-ImplicitCastExpr 0x14f82e990 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14f82e950 <col:8> 'int ()' Function 0x14f82e898 'sock_intr_errno' 'int ()'
    |     `-ImplicitCastExpr 0x14f82e9d0 <col:24> 'long' <LValueToRValue>
    |       `-DeclRefExpr 0x14f82e970 <col:24> 'long' lvalue Var 0x14f826ba8 'timeo' 'long'
    `-LabelStmt 0x14f82eae8 <line:77:1, line:78:13> 'failure'
      `-BinaryOperator 0x14f82eac8 <col:2, col:13> 'int' '='
        |-UnaryOperator 0x14f82ea78 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
        | `-ImplicitCastExpr 0x14f82ea60 <col:3> 'int *' <LValueToRValue>
        |   `-DeclRefExpr 0x14f82ea40 <col:3> 'int *' lvalue ParmVar 0x14f826738 'errcode' 'int *'
        `-ImplicitCastExpr 0x14f82eab0 <col:13> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14f82ea90 <col:13> 'int' lvalue Var 0x14f826c40 'err' 'int'
