`-FunctionDecl 0x12a940ea8  line:1:19 check_entry_size_and_hooks 'int (struct arpt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)' static inline
  |-ParmVarDecl 0x12a928648 <col:46, col:65> col:65 used e 'struct arpt_entry *'
  |-ParmVarDecl 0x12a940a28 <line:2:11, col:33> col:33 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x12a940ad8 <line:3:11, col:32> col:32 used base 'const unsigned char *'
  |-ParmVarDecl 0x12a940b58 <line:4:11, col:32> col:32 used limit 'const unsigned char *'
  |-ParmVarDecl 0x12a940c08 <line:5:11, col:31> col:31 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x12a940c88 <line:6:11, col:31> col:31 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x12a940d08 <line:7:11, col:24> col:24 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x12a945718 <line:8:1, line:50:1>
    |-DeclStmt 0x12a941050 <line:9:2, col:16>
    | `-VarDecl 0x12a940fe8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x12a9410e8 <line:10:2, col:9>
    | `-VarDecl 0x12a941080 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x12a941630 <line:12:2, line:16:2>
    | |-RecoveryExpr 0x12a9412d8 <line:12:6, line:13:56> '_Bool' contains-errors
    | `-CompoundStmt 0x12a941610 <col:63, line:16:2>
    |   |-CallExpr 0x12a941508 <line:14:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x12a9414f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12a941420 <col:3> 'int ()' Function 0x12a941368 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x12a941538 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x12a941480 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x12a941550 <col:19> 'struct arpt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12a9414a0 <col:19> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x12a941600 <line:15:3, col:11>
    |     `-UnaryOperator 0x12a9415e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12a9415d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12a9415b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a9419a8 <line:18:2, line:23:2>
    | |-RecoveryExpr 0x12a9417c8 <line:18:6, line:19:65> '_Bool' contains-errors
    | `-CompoundStmt 0x12a941988 <col:68, line:23:2>
    |   |-CallExpr 0x12a9418a8 <line:20:3, line:21:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a9417e8 <line:20:3> 'int ()' Function 0x12a941368 'duprintf' 'int ()'
    |   | |-StringLiteral 0x12a941808 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x12a941828 <line:21:5> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |   | `-RecoveryExpr 0x12a941880 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12a941848 <col:8> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x12a941978 <line:22:3, col:11>
    |     `-UnaryOperator 0x12a941960 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12a941948 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12a941928 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a944578 <line:25:2, col:21> 'int' '='
    | |-DeclRefExpr 0x12a9419c8 <col:2> 'int' lvalue Var 0x12a941080 'err' 'int'
    | `-CallExpr 0x12a944538 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x12a944520 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a9444e0 <col:8> 'int ()' Function 0x12a944428 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x12a944560 <col:20> 'struct arpt_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a944500 <col:20> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |-IfStmt 0x12a944618 <line:26:2, line:27:10>
    | |-ImplicitCastExpr 0x12a9445b8 <line:26:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12a944598 <col:6> 'int' lvalue Var 0x12a941080 'err' 'int'
    | `-ReturnStmt 0x12a944608 <line:27:3, col:10>
    |   `-ImplicitCastExpr 0x12a9445f0 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12a9445d0 <col:10> 'int' lvalue Var 0x12a941080 'err' 'int'
    |-ForStmt 0x12a945428 <line:30:2, line:44:2>
    | |-BinaryOperator 0x12a944690 <line:30:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x12a944638 <col:7> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x12a944678 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12a944658 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12a944728 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12a9446b0 <col:14> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x12a944708 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12a944768 <col:35, col:36> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x12a944748 <col:35> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    | `-CompoundStmt 0x12a945400 <col:40, line:44:2>
    |   |-IfStmt 0x12a9448c8 <line:31:3, line:32:4>
    |   | |-UnaryOperator 0x12a9448a8 <line:31:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x12a944888 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x12a944868 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x12a944838 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x12a944780 <col:9> 'unsigned int' lvalue ParmVar 0x12a940d08 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x12a944850 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x12a944818 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x12a9447f8 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x12a9447a0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x12a9447e0 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x12a9447c0 <col:29> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x12a9448c0 <line:32:4>
    |   |-IfStmt 0x12a944c18 <line:33:3, line:34:43>
    |   | |-BinaryOperator 0x12a944a78 <line:33:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x12a944998 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x12a944938 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x12a944920 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x12a9448e8 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |   | | | `-ImplicitCastExpr 0x12a944980 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12a944960 <col:28> 'const unsigned char *' lvalue ParmVar 0x12a940ad8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x12a944a60 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x12a944a48 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x12a944a28 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x12a9449f8 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x12a9449b8 <col:36> 'const unsigned int *' lvalue ParmVar 0x12a940c08 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x12a944a10 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x12a9449d8 <col:49> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x12a944bf8 <line:34:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x12a944b48 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x12a944b18 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x12a944ad0 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x12a944a98 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x12a940a28 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x12a944b30 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x12a944af8 <col:24> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x12a944bd8 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x12a944ba8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12a944b68 <col:29> 'const unsigned int *' lvalue ParmVar 0x12a940c08 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x12a944bc0 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12a944b88 <col:42> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |   `-IfStmt 0x12a9453d0 <line:35:3, line:43:3>
    |     |-BinaryOperator 0x12a944dc8 <line:35:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x12a944ce8 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x12a944c88 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x12a944c70 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x12a944c38 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |     | | `-ImplicitCastExpr 0x12a944cd0 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x12a944cb0 <col:28> 'const unsigned char *' lvalue ParmVar 0x12a940ad8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x12a944db0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x12a944d98 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x12a944d78 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x12a944d48 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x12a944d08 <col:36> 'const unsigned int *' lvalue ParmVar 0x12a940c88 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x12a944d60 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12a944d28 <col:47> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |     `-CompoundStmt 0x12a9453b0 <col:51, line:43:3>
    |       |-IfStmt 0x12a945210 <line:36:4, line:41:4>
    |       | |-UnaryOperator 0x12a944f60 <line:36:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x12a944f20 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x12a944f08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x12a944ec8 <col:9> 'int ()' Function 0x12a944e10 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x12a944f48 <col:25> 'struct arpt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x12a944ee8 <col:25> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    |       | `-CompoundStmt 0x12a9451f0 <col:29, line:41:4>
    |       |   |-CallExpr 0x12a945108 <line:37:5, line:39:17> 'int'
    |       |   | |-ImplicitCastExpr 0x12a9450f0 <line:37:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x12a945058 <col:5> 'int ()' Function 0x12a944fa0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x12a945130 <col:12, line:39:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x12a9450c0 <line:37:12, line:39:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x12a9451e0 <line:40:5, col:13>
    |       |     `-UnaryOperator 0x12a9451c8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x12a9451b0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x12a945190 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x12a945390 <line:42:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x12a9452e0 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x12a9452b0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x12a945268 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x12a945230 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x12a940a28 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x12a9452c8 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x12a945290 <col:23> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x12a945370 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x12a945340 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x12a945300 <col:28> 'const unsigned int *' lvalue ParmVar 0x12a940c88 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x12a945358 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x12a945320 <col:39> 'unsigned int' lvalue Var 0x12a940fe8 'h' 'unsigned int'
    |-BinaryOperator 0x12a9456c8 <line:48:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12a945680 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12a945648 <col:2> 'struct arpt_entry *' lvalue ParmVar 0x12a928648 'e' 'struct arpt_entry *'
    | `-IntegerLiteral 0x12a9456a8 <col:16> 'int' 0
    `-ReturnStmt 0x12a945708 <line:49:2, col:9>
      `-IntegerLiteral 0x12a9456e8 <col:9> 'int' 0
