`-FunctionDecl 0x158928258  line:1:1 invalid iobuf_writestr 'int (int, const char *)'
  |-ParmVarDecl 0x1589280f0 <col:17, col:25> col:25 invalid a 'int'
  |-ParmVarDecl 0x158928170 <col:28, col:40> col:40 used buf 'const char *'
  `-CompoundStmt 0x158928790 <line:2:1, line:9:1>
    |-DeclStmt 0x158928390 <line:3:3, col:9>
    | `-VarDecl 0x158928328 <col:3, col:7> col:7 used rc 'int'
    |-ForStmt 0x158928728 <line:5:3, line:7:14>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x1589283f8 <line:5:10, col:11> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x1589283e0 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1589283c8 <col:11> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x1589283a8 <col:11> 'const char *' lvalue ParmVar 0x158928170 'buf' 'const char *'
    | |-UnaryOperator 0x158928430 <col:16, col:19> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x158928410 <col:16> 'const char *' lvalue ParmVar 0x158928170 'buf' 'const char *'
    | `-IfStmt 0x158928708 <line:6:5, line:7:14>
    |   |-ParenExpr 0x1589286a0 <line:6:9, col:38> 'int' contains-errors
    |   | `-BinaryOperator 0x158928680 <col:10, col:37> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x158928448 <col:10> 'int' lvalue Var 0x158928328 'rc' 'int'
    |   |   `-CallExpr 0x158928650 <col:13, col:37> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1589285c0 <col:13> 'int ()' Function 0x158928508 'iobuf_writebyte' 'int ()'
    |   |     |-RecoveryExpr 0x1589285e0 <col:30> '<dependent type>' contains-errors lvalue
    |   |     `-UnaryOperator 0x158928638 <col:33, col:34> 'const char' lvalue prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x158928620 <col:34> 'const char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x158928600 <col:34> 'const char *' lvalue ParmVar 0x158928170 'buf' 'const char *'
    |   `-ReturnStmt 0x1589286f8 <line:7:7, col:14>
    |     `-ImplicitCastExpr 0x1589286e0 <col:14> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1589286c0 <col:14> 'int' lvalue Var 0x158928328 'rc' 'int'
    `-ReturnStmt 0x158928780 <line:8:3, col:10>
      `-IntegerLiteral 0x158928760 <col:10> 'int' 0
