`-FunctionDecl 0x11e00de38  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x11e00dd58 <col:8> col:8 HeaderTableTests 'int'
  |-ParmVarDecl 0x11e00dcd8 <col:26> col:26 set_capacity 'int'
  `-CompoundStmt 0x11d923758 <col:40, line:15:1>
    `-ForStmt 0x11d923648 <line:8:3, line:10:3>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x11e00e080 <line:8:22, col:26> 'int' contains-errors '<'
      | |-RecoveryExpr 0x11e00e040 <col:22> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x11e00e060 <col:26> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x11e00e0f0 <col:31, col:32> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x11e00e0d0 <col:31> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x11d923630 <col:36, line:10:3>
        `-CallExpr 0x11d923600 <line:9:5, col:38> '<dependent type>' contains-errors
          |-DeclRefExpr 0x11e00e220 <col:5> 'int ()' Function 0x11e00e168 'EXPECT_EQ' 'int ()'
          |-CallExpr 0x11e00e3b0 <col:15, col:31> '<dependent type>' contains-errors
          | |-CXXDependentScopeMemberExpr 0x11e00e348 <col:15, col:21> '<dependent type>' contains-errors lvalue .add
          | | `-RecoveryExpr 0x11e00e328 <col:15> '<dependent type>' contains-errors lvalue
          | `-RecoveryExpr 0x11e00e390 <col:25> '<dependent type>' contains-errors lvalue
          `-RecoveryExpr 0x11e00e3d8 <col:34> '<dependent type>' contains-errors lvalue
