`-FunctionDecl 0x15680e358  line:1:12 hclge_tm_pg_to_pri_map 'int (struct hclge_dev *)' static
  |-ParmVarDecl 0x15680e248 <col:35, col:53> col:53 used hdev 'struct hclge_dev *'
  `-CompoundStmt 0x156826d78 <line:2:1, line:18:1>
    |-DeclStmt 0x1568266d0 <line:3:2, col:9>
    | `-VarDecl 0x156826668 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x156826808 <line:6:2, line:7:10>
    | |-BinaryOperator 0x1568267b8 <line:6:6, col:27> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x156826738 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x156826700 <col:6> 'struct hclge_dev *' lvalue ParmVar 0x15680e248 'hdev' 'struct hclge_dev *'
    | | `-RecoveryExpr 0x156826798 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1568267f8 <line:7:3, col:10>
    |   `-IntegerLiteral 0x1568267d8 <col:10> 'int' 0
    |-ForStmt 0x156826d10 <line:9:2, line:15:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156826980 <line:9:14, col:32> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x156826960 <col:14> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x1568268f8 <col:18, col:32> '<dependent type>' contains-errors lvalue .num_pg
    | |   `-RecoveryExpr 0x1568268d0 <col:18, col:24> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x156826898 <col:18> 'struct hclge_dev *' lvalue ParmVar 0x15680e248 'hdev' 'struct hclge_dev *'
    | |-UnaryOperator 0x1568269f0 <col:40, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x1568269d0 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x156826cf8 <col:45, line:15:2>
    |   `-IfStmt 0x156826cd8 <line:13:3, line:14:11>
    |     |-ImplicitCastExpr 0x156826c78 <line:13:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x156826c58 <col:7> 'int' lvalue Var 0x156826668 'ret' 'int'
    |     `-ReturnStmt 0x156826cc8 <line:14:4, col:11>
    |       `-ImplicitCastExpr 0x156826cb0 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x156826c90 <col:11> 'int' lvalue Var 0x156826668 'ret' 'int'
    `-ReturnStmt 0x156826d68 <line:17:2, col:9>
      `-IntegerLiteral 0x156826d48 <col:9> 'int' 0
