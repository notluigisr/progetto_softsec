`-FunctionDecl 0x14e140de0  line:1:13 invalid tree_content_replace 'void (struct tree_entry *, const struct object_id *, const int, struct tree_content *)' static
  |-ParmVarDecl 0x14e128648 <line:2:2, col:21> col:21 used root 'struct tree_entry *'
  |-ParmVarDecl 0x14e140a28 <line:3:2, col:26> col:26 used oid 'const struct object_id *'
  |-ParmVarDecl 0x14e140ac0 <line:4:2, col:17> col:17 invalid mode 'const int'
  |-ParmVarDecl 0x14e140c98 <line:5:2, col:23> col:23 used newtree 'struct tree_content *'
  `-CompoundStmt 0x14e142800 <line:6:1, line:14:1>
    |-IfStmt 0x14e141268 <line:7:2, line:8:12>
    | |-UnaryOperator 0x14e141068 <line:7:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14e141040 <col:7, col:19> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14e141000 <col:7> 'int ()' Function 0x14e140f48 'S_ISDIR' 'int ()'
    | |   `-RecoveryExpr 0x14e141020 <col:15> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e141228 <line:8:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x14e141210 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e141160 <col:3> 'int ()' Function 0x14e1410a8 'die' 'int ()'
    |   `-ImplicitCastExpr 0x14e141250 <col:7> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14e1411c0 <col:7> 'char[4]' lvalue "STR"
    |-CallExpr 0x14e1414a0 <line:9:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e141368 <col:2> 'int ()' Function 0x14e1412b0 'oidclr' 'int ()'
    | `-UnaryOperator 0x14e141488 <col:9, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14e141440 <col:10, col:28> '<dependent type>' contains-errors lvalue .oid
    |     `-ArraySubscriptExpr 0x14e141420 <col:10, col:26> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x14e141408 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x14e1413c0 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14e141388 <col:10> 'struct tree_entry *' lvalue ParmVar 0x14e128648 'root' 'struct tree_entry *'
    |       `-IntegerLiteral 0x14e1413e8 <col:25> 'int' 0
    |-CallExpr 0x14e141700 <line:10:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e1415a8 <col:2> 'int ()' Function 0x14e1414f0 'oidcpy' 'int ()'
    | |-UnaryOperator 0x14e1416c8 <col:9, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x14e141680 <col:10, col:28> '<dependent type>' contains-errors lvalue .oid
    | |   `-ArraySubscriptExpr 0x14e141660 <col:10, col:26> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x14e141648 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x14e141600 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x14e1415c8 <col:10> 'struct tree_entry *' lvalue ParmVar 0x14e128648 'root' 'struct tree_entry *'
    | |     `-IntegerLiteral 0x14e141628 <col:25> 'int' 1
    | `-DeclRefExpr 0x14e1416e0 <col:33> 'const struct object_id *' lvalue ParmVar 0x14e140a28 'oid' 'const struct object_id *'
    |-IfStmt 0x14e141918 <line:11:2, line:12:44>
    | |-RecoveryExpr 0x14e141768 <line:11:6, col:12> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e141730 <col:6> 'struct tree_entry *' lvalue ParmVar 0x14e128648 'root' 'struct tree_entry *'
    | `-CallExpr 0x14e1418f0 <line:12:3, col:44> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e141870 <col:3> 'int ()' Function 0x14e1417b8 'release_tree_content_recursive' 'int ()'
    |   `-RecoveryExpr 0x14e1418c8 <col:34, col:40> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e141890 <col:34> 'struct tree_entry *' lvalue ParmVar 0x14e128648 'root' 'struct tree_entry *'
    `-BinaryOperator 0x14e1419b8 <line:13:2, col:15> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x14e141970 <col:2, col:8> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x14e141938 <col:2> 'struct tree_entry *' lvalue ParmVar 0x14e128648 'root' 'struct tree_entry *'
      `-DeclRefExpr 0x14e141998 <col:15> 'struct tree_content *' lvalue ParmVar 0x14e140c98 'newtree' 'struct tree_content *'
