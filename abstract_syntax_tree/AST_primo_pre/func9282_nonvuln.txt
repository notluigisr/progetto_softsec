`-FunctionDecl 0x11f9281c0  line:1:7 invalid print_string 'void (int)'
  |-ParmVarDecl 0x11f9280f0 <col:20, <invalid sloc>> col:23 invalid 'int'
  `-CompoundStmt 0x12800a540 <line:2:2, line:36:2>
    |-ForStmt 0x11f928670 <line:4:3, line:10:3>
    | |-DeclStmt 0x11f928310 <line:4:8, col:17>
    | | `-VarDecl 0x11f928288 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x11f9282f0 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11f9283a0 <col:19, col:23> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11f928328 <col:19> 'int' lvalue Var 0x11f928288 'i' 'int'
    | | `-RecoveryExpr 0x11f928380 <col:23> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x11f9283e0 <col:28, col:30> 'int' prefix '++'
    | | `-DeclRefExpr 0x11f9283c0 <col:30> 'int' lvalue Var 0x11f928288 'i' 'int'
    | `-CompoundStmt 0x11f928648 <line:5:3, line:10:3>
    |   |-DeclStmt 0x11f9284a8 <line:6:4, col:19>
    |   | `-VarDecl 0x11f928408 <col:4, col:9> col:9 used c 'char'
    |   |-IfStmt 0x11f928608 <line:7:4, col:28>
    |   | |-BinaryOperator 0x11f9285e0 <col:8, col:23> 'int' '&&'
    |   | | |-BinaryOperator 0x11f928530 <col:8, col:13> 'int' '>='
    |   | | | |-ImplicitCastExpr 0x11f928518 <col:8> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x11f928500 <col:8> 'char' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x11f9284c0 <col:8> 'char' lvalue Var 0x11f928408 'c' 'char'
    |   | | | `-IntegerLiteral 0x11f9284e0 <col:13> 'int' 32
    |   | | `-BinaryOperator 0x11f9285c0 <col:19, col:23> 'int' '<'
    |   | |   |-ImplicitCastExpr 0x11f9285a8 <col:19> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x11f928590 <col:19> 'char' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x11f928550 <col:19> 'char' lvalue Var 0x11f928408 'c' 'char'
    |   | |   `-IntegerLiteral 0x11f928570 <col:23> 'int' 127
    |   | `-ContinueStmt 0x11f928600 <col:28>
    |   `-BreakStmt 0x11f928640 <line:9:4>
    |-IfStmt 0x12800a230 <line:12:3, line:24:3>
    | |-RecoveryExpr 0x11f928728 <line:12:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12800a210 <line:13:3, line:24:3>
    |   |-IfStmt 0x12800a1b0 <line:14:4, line:21:5> has_else
    |   | |-BinaryOperator 0x12800a040 <line:14:8, col:29> 'int' contains-errors '&&'
    |   | | |-RecoveryExpr 0x11f9287d8 <col:8> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x12800a020 <col:23, col:29> 'int' contains-errors '>'
    |   | |   |-RecoveryExpr 0x12800a000 <col:23> '<dependent type>' contains-errors lvalue
    |   | |   `-IntegerLiteral 0x11f928778 <col:29> 'int' 30
    |   | |-CompoundStmt 0x12800a168 <line:15:4, line:19:4>
    |   | `-NullStmt 0x12800a1a8 <line:21:5>
    |   `-ReturnStmt 0x12800a200 <line:23:4>
    `-IfStmt 0x12800a4f0 <line:25:3, line:34:3> has_else
      |-RecoveryExpr 0x12800a270 <line:25:7, col:28> '_Bool' contains-errors
      |-CompoundStmt 0x12800a4b0 <line:26:3, line:30:3>
      `-CompoundStmt 0x12800a4e0 <line:32:3, line:34:3>
