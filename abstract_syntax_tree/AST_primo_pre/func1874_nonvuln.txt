`-FunctionDecl 0x15400de08  line:1:6 invalid CanFuseConvOrDepthwiseConvShapes 'int (const int)'
  |-ParmVarDecl 0x15400dcf0 <col:39, <invalid sloc>> col:53 invalid 'const int'
  `-CompoundStmt 0x154027e98 <line:3:58, line:31:1>
    |-DeclStmt 0x15400e040 <line:7:3, col:51>
    | `-VarDecl 0x15400ded0 <col:3, col:50> col:14 used elements_rank 'const int' auto cinit
    |   `-CallExpr 0x15400e020 <col:30, col:50> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x15400dfd8 <col:30, col:45> '<dependent type>' contains-errors lvalue .size
    |       `-RecoveryExpr 0x15400dfb8 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x154027868 <line:11:3, line:13:3>
    | |-BinaryOperator 0x154027820 <line:11:7, col:68> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15400e380 <col:7, col:46> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x15400e2e8 <col:7, col:24> 'int' contains-errors '!='
    | | | | |-ImplicitCastExpr 0x15400e2d0 <col:7> 'int' contains-errors <LValueToRValue>
    | | | | | `-DeclRefExpr 0x15400e290 <col:7> 'const int' contains-errors lvalue Var 0x15400ded0 'elements_rank' 'const int'
    | | | | `-IntegerLiteral 0x15400e2b0 <col:24> 'int' 1
    | | | `-BinaryOperator 0x15400e360 <col:29, col:46> 'int' contains-errors '!='
    | | |   |-ImplicitCastExpr 0x15400e348 <col:29> 'int' contains-errors <LValueToRValue>
    | | |   | `-DeclRefExpr 0x15400e308 <col:29> 'const int' contains-errors lvalue Var 0x15400ded0 'elements_rank' 'const int'
    | | |   `-IntegerLiteral 0x15400e328 <col:46> 'int' 0
    | | `-BinaryOperator 0x154027800 <col:51, col:68> 'int' contains-errors '!='
    | |   |-ImplicitCastExpr 0x15400e3e0 <col:51> 'int' contains-errors <LValueToRValue>
    | |   | `-DeclRefExpr 0x15400e3a0 <col:51> 'const int' contains-errors lvalue Var 0x15400ded0 'elements_rank' 'const int'
    | |   `-IntegerLiteral 0x15400e3c0 <col:68> 'int' 4
    | `-CompoundStmt 0x154027858 <col:71, line:13:3>
    |-DeclStmt 0x154027bb8 <line:14:3, col:75>
    | `-VarDecl 0x1540278a0 <col:3, col:74> col:8 used elements_depth 'int' auto cinit
    |   `-ConditionalOperator 0x154027b88 <col:25, col:74> '<dependent type>' contains-errors
    |     |-CallExpr 0x154027ae0 <col:25, col:46> '<dependent type>' contains-errors
    |     | `-CXXDependentScopeMemberExpr 0x154027a98 <col:25, col:40> '<dependent type>' contains-errors lvalue .empty
    |     |   `-RecoveryExpr 0x154027a78 <col:25> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x154027988 <col:50> 'int' 1
    |     `-CallExpr 0x154027b68 <col:54, col:74> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x154027b20 <col:54, col:69> '<dependent type>' contains-errors lvalue .back
    |         `-RecoveryExpr 0x154027b00 <col:54> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x154027ca8 <line:17:3, line:19:3>
      |-BinaryOperator 0x154027c28 <line:17:7, col:25> 'int' contains-errors '=='
      | |-ImplicitCastExpr 0x154027c10 <col:7> 'int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x154027bd0 <col:7> 'int' contains-errors lvalue Var 0x1540278a0 'elements_depth' 'int'
      | `-IntegerLiteral 0x154027bf0 <col:25> 'int' 1
      `-CompoundStmt 0x154027c90 <col:28, line:19:3>
        `-ReturnStmt 0x154027c80 <line:18:5, col:12>
          `-RecoveryExpr 0x154027c60 <col:12> '<dependent type>' contains-errors lvalue
