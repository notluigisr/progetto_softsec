`-FunctionDecl 0x1311281c8  line:1:1 invalid alloc_and_load_pgp_certs 'int (int)'
  |-ParmVarDecl 0x1311280f0 <col:27, col:48> col:48 invalid cert 'int'
  `-CompoundStmt 0x131141fc0 <line:2:1, line:32:1>
    |-DeclStmt 0x131128330 <line:4:3, col:14>
    | `-VarDecl 0x1311282a8 <col:3, col:13> col:7 used ret 'int' cinit
    |   `-IntegerLiteral 0x131128310 <col:13> 'int' 0
    |-IfStmt 0x131128428 <line:6:3, line:7:12>
    | |-BinaryOperator 0x1311283c0 <line:6:7, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x131128348 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1311283a0 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x131128418 <line:7:5, col:12>
    |   `-RecoveryExpr 0x1311283f8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131141868 <line:10:3, line:14:5>
    | |-BinaryOperator 0x131128668 <line:10:7, col:22> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x131128628 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x131128648 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x131141848 <line:11:5, line:14:5>
    |   |-CallExpr 0x1311287d8 <line:12:7, col:22> 'int'
    |   | `-ImplicitCastExpr 0x1311287c0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x131128768 <col:7> 'int ()' Function 0x1311286b0 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x131141838 <line:13:7, col:14>
    |     `-RecoveryExpr 0x131141818 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131141ab0 <line:16:3, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x131141888 <col:3> 'int' lvalue Var 0x1311282a8 'ret' 'int'
    | `-CallExpr 0x131141a78 <col:9, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x131141988 <col:9> 'int ()' Function 0x1311418d0 'gnutls_pcert_import_openpgp' 'int ()'
    |   |-RecoveryExpr 0x131141a58 <col:38> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1311419c0 <col:51> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1311419e0 <col:57> 'int' 0
    |-IfStmt 0x131141c08 <line:17:3, line:21:5>
    | |-BinaryOperator 0x131141b28 <line:17:7, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x131141b10 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131141ad0 <col:7> 'int' lvalue Var 0x1311282a8 'ret' 'int'
    | | `-IntegerLiteral 0x131141af0 <col:13> 'int' 0
    | `-CompoundStmt 0x131141be8 <line:18:5, line:21:5>
    |   |-CallExpr 0x131141b80 <line:19:7, col:22> 'int'
    |   | `-ImplicitCastExpr 0x131141b68 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x131141b48 <col:7> 'int ()' Function 0x1311286b0 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x131141bd8 <line:20:7, col:14>
    |     `-RecoveryExpr 0x131141bb8 <col:14> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x131141fa0 <line:23:3, line:29:5>
      |-BinaryOperator 0x131141c80 <line:23:7, col:13> 'int' '<'
      | |-ImplicitCastExpr 0x131141c68 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x131141c28 <col:7> 'int' lvalue Var 0x1311282a8 'ret' 'int'
      | `-IntegerLiteral 0x131141c48 <col:13> 'int' 0
      `-CompoundStmt 0x131141f80 <line:24:5, line:29:5>
        |-CallExpr 0x131141cd8 <line:25:7, col:22> 'int'
        | `-ImplicitCastExpr 0x131141cc0 <col:7> 'int (*)()' <FunctionToPointerDecay>
        |   `-DeclRefExpr 0x131141ca0 <col:7> 'int ()' Function 0x1311286b0 'gnutls_assert' 'int ()'
        `-CallExpr 0x131141e58 <line:26:7, col:39> '<dependent type>' contains-errors
          |-DeclRefExpr 0x131141dd8 <col:7> 'int ()' Function 0x131141d20 'gnutls_pcert_deinit' 'int ()'
          `-RecoveryExpr 0x131141e38 <col:28> '<dependent type>' contains-errors lvalue
