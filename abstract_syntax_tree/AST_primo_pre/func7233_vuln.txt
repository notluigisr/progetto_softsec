`-FunctionDecl 0x132128310  line:1:13 invalid add_bytes_c 'void (int *, int *, int)' static
  |-ParmVarDecl 0x132128128 <col:25, col:34> col:34 referenced invalid dst 'int *'
  |-ParmVarDecl 0x1321281a8 <col:39, col:48> col:48 invalid src 'int *'
  |-ParmVarDecl 0x132128228 <col:53, col:57> col:57 used w 'int'
  `-CompoundStmt 0x1321430b0 <col:59, line:10:1>
    |-DeclStmt 0x132128450 <line:2:5, col:11>
    | `-VarDecl 0x1321283e8 <col:5, col:10> col:10 used i 'long'
    |-ForStmt 0x132142d38 <line:3:5, line:7:5>
    | |-BinaryOperator 0x1321284c0 <line:3:9, col:11> 'long' '='
    | | |-DeclRefExpr 0x132128468 <col:9> 'long' lvalue Var 0x1321283e8 'i' 'long'
    | | `-ImplicitCastExpr 0x1321284a8 <col:11> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x132128488 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1321285d8 <col:14, col:30> 'int' '<='
    | | |-ImplicitCastExpr 0x1321285c0 <col:14> 'unsigned long' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1321285a8 <col:14> 'long' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1321284e0 <col:14> 'long' lvalue Var 0x1321283e8 'i' 'long'
    | | `-BinaryOperator 0x132128588 <col:17, col:30> 'unsigned long' '-'
    | |   |-ImplicitCastExpr 0x132128570 <col:17> 'unsigned long' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x132128558 <col:17> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x132128500 <col:17> 'int' lvalue ParmVar 0x132128228 'w' 'int'
    | |   `-UnaryExprOrTypeTraitExpr 0x132128538 <col:19, col:30> 'unsigned long' sizeof 'long'
    | |-CompoundAssignOperator 0x132128650 <col:33, col:47> 'long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | | |-DeclRefExpr 0x1321285f8 <col:33> 'long' lvalue Var 0x1321283e8 'i' 'long'
    | | `-UnaryExprOrTypeTraitExpr 0x132128630 <col:36, col:47> 'unsigned long' sizeof 'long'
    | `-CompoundStmt 0x132142d18 <col:49, line:7:5>
    |   |-DeclStmt 0x132142858 <line:4:9, col:33>
    |   | `-VarDecl 0x132128698 <col:9, col:32> col:14 used a 'long' cinit
    |   |   `-ImplicitCastExpr 0x132142840 <col:18, col:32> 'long' contains-errors <LValueToRValue>
    |   |     `-UnaryOperator 0x132142828 <col:18, col:32> 'long' contains-errors lvalue prefix '*' cannot overflow
    |   |       `-CStyleCastExpr 0x132142800 <col:19, col:32> 'long *' contains-errors <Dependent>
    |   |         `-ParenExpr 0x1321287c8 <col:26, col:32> '<dependent type>' contains-errors
    |   |           `-BinaryOperator 0x132128740 <col:27, col:31> '<dependent type>' contains-errors '+'
    |   |             |-RecoveryExpr 0x132128700 <col:27> '<dependent type>' contains-errors lvalue
    |   |             `-DeclRefExpr 0x132128720 <col:31> 'long' lvalue Var 0x1321283e8 'i' 'long'
    |   `-DeclStmt 0x132142a00 <line:5:9, col:33>
    |     `-VarDecl 0x132142888 <col:9, col:32> col:14 used b 'long' cinit
    |       `-ImplicitCastExpr 0x1321429e8 <col:18, col:32> 'long' contains-errors <LValueToRValue>
    |         `-UnaryOperator 0x1321429d0 <col:18, col:32> 'long' contains-errors lvalue prefix '*' cannot overflow
    |           `-CStyleCastExpr 0x1321429a8 <col:19, col:32> 'long *' contains-errors <Dependent>
    |             `-ParenExpr 0x132142988 <col:26, col:32> '<dependent type>' contains-errors
    |               `-BinaryOperator 0x132142930 <col:27, col:31> '<dependent type>' contains-errors '+'
    |                 |-RecoveryExpr 0x1321428f0 <col:27> '<dependent type>' contains-errors lvalue
    |                 `-DeclRefExpr 0x132142910 <col:31> 'long' lvalue Var 0x1321283e8 'i' 'long'
    `-ForStmt 0x132143078 <line:8:5, line:9:28>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x132142df8 <line:8:11, col:13> 'int' '<'
      | |-ImplicitCastExpr 0x132142db0 <col:11> 'long' <LValueToRValue>
      | | `-DeclRefExpr 0x132142d70 <col:11> 'long' lvalue Var 0x1321283e8 'i' 'long'
      | `-ImplicitCastExpr 0x132142de0 <col:13> 'long' <IntegralCast>
      |   `-ImplicitCastExpr 0x132142dc8 <col:13> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x132142d90 <col:13> 'int' lvalue ParmVar 0x132128228 'w' 'int'
      |-UnaryOperator 0x132142e38 <col:16, col:17> 'long' postfix '++'
      | `-DeclRefExpr 0x132142e18 <col:16> 'long' lvalue Var 0x1321283e8 'i' 'long'
      `-CompoundAssignOperator 0x132143048 <line:9:9, col:28> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |-ArraySubscriptExpr 0x132142f40 <col:9, col:16> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x132142f28 <col:9> '<dependent type>' contains-errors <LValueToRValue>
        | | `-RecoveryExpr 0x132142e70 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x132142e50 <col:9> 'int *' lvalue ParmVar 0x132128128 'dst' 'int *'
        | `-BinaryOperator 0x132142f08 <col:13, col:15> 'long' '+'
        |   |-ImplicitCastExpr 0x132142ed8 <col:13> 'long' <LValueToRValue>
        |   | `-DeclRefExpr 0x132142e98 <col:13> 'long' lvalue Var 0x1321283e8 'i' 'long'
        |   `-ImplicitCastExpr 0x132142ef0 <col:15> 'long' <IntegralCast>
        |     `-IntegerLiteral 0x132142eb8 <col:15> 'int' 0
        `-ArraySubscriptExpr 0x132143028 <col:21, col:28> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x132143010 <col:21> '<dependent type>' contains-errors <LValueToRValue>
          | `-RecoveryExpr 0x132142f60 <col:21> '<dependent type>' contains-errors lvalue
          `-BinaryOperator 0x132142ff0 <col:25, col:27> 'long' '+'
            |-ImplicitCastExpr 0x132142fc0 <col:25> 'long' <LValueToRValue>
            | `-DeclRefExpr 0x132142f80 <col:25> 'long' lvalue Var 0x1321283e8 'i' 'long'
            `-ImplicitCastExpr 0x132142fd8 <col:27> 'long' <IntegralCast>
              `-IntegerLiteral 0x132142fa0 <col:27> 'int' 0
