`-FunctionDecl 0x12e9286e8  line:1:1 invalid record_merge_function_type 'int (int, int, int)'
  |-ParmVarDecl 0x12e9284d8 <col:29, col:33> col:33 used merger 'int'
  |-ParmVarDecl 0x12e928570 <col:41, col:49> col:49 referenced invalid type 'int'
  |-ParmVarDecl 0x12e9285f0 <col:55, col:64> col:64 invalid declaration_loc 'int'
  `-CompoundStmt 0x12e943290 <line:2:1, line:28:1>
    |-IfStmt 0x12e928830 <line:3:3, line:4:5>
    | |-BinaryOperator 0x12e928800 <line:3:7, col:17> 'int' '<='
    | | |-ImplicitCastExpr 0x12e9287e8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e9287a8 <col:7> 'int' lvalue ParmVar 0x12e9284d8 'merger' 'int'
    | | `-IntegerLiteral 0x12e9287c8 <col:17> 'int' 0
    | `-ReturnStmt 0x12e928820 <line:4:5>
    |-IfStmt 0x12e928bb8 <line:6:3, line:7:27>
    | |-BinaryOperator 0x12e9288c8 <line:6:7, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12e928850 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12e9288a8 <col:15> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12e928b98 <line:7:5, col:27> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x12e928908 <col:5> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12e9288e8 <col:5> 'int' lvalue ParmVar 0x12e928570 'type' 'int'
    |   `-CallExpr 0x12e928b58 <col:12, col:27> 'int'
    |     |-ImplicitCastExpr 0x12e928b40 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12e928a90 <col:12> 'int ()' Function 0x12e9289d8 'uniqstr_new' 'int ()'
    |     `-ImplicitCastExpr 0x12e928b80 <col:25> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12e928af0 <col:25> 'char[1]' lvalue ""
    |-DeclStmt 0x12e941ca0 <line:10:3, col:22>
    | `-VarDecl 0x12e941c18 <col:3, col:21> col:7 used merger_find 'int' cinit
    |   `-IntegerLiteral 0x12e941c80 <col:21> 'int' 1
    |-ForStmt 0x12e942088 <line:11:3, line:14:20>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e941eb8 <line:12:8, col:49> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12e941e48 <col:8, col:26> 'int' contains-errors '!='
    | | | |-RecoveryExpr 0x12e941e08 <col:8> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x12e941e28 <col:26> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12e941e98 <col:34, col:49> 'int' '!='
    | |   |-ImplicitCastExpr 0x12e941e68 <col:34> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12e941d58 <col:34> 'int' lvalue Var 0x12e941c18 'merger_find' 'int'
    | |   `-ImplicitCastExpr 0x12e941e80 <col:49> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12e941d78 <col:49> 'int' lvalue ParmVar 0x12e9284d8 'merger' 'int'
    | |-BinaryOperator 0x12e941ff8 <line:13:8, col:41> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x12e941f70 <col:8> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x12e941fb0 <col:25, col:41> '<dependent type>' contains-errors lvalue ->next
    | |   `-RecoveryExpr 0x12e941f90 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x12e942058 <line:14:5, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x12e942018 <col:5> 'int' lvalue Var 0x12e941c18 'merger_find' 'int'
    |   `-IntegerLiteral 0x12e942038 <col:20> 'int' 1
    |-CallExpr 0x12e9423b8 <line:15:3, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e9421a0 <col:3> 'int ()' Function 0x12e9420e8 'aver' 'int ()'
    | `-BinaryOperator 0x12e942398 <col:9, col:50> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x12e942328 <col:9, col:27> 'int' contains-errors '!='
    |   | |-RecoveryExpr 0x12e9422e8 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x12e942308 <col:27> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12e942378 <col:35, col:50> 'int' '=='
    |     |-ImplicitCastExpr 0x12e942348 <col:35> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x12e942210 <col:35> 'int' lvalue Var 0x12e941c18 'merger_find' 'int'
    |     `-ImplicitCastExpr 0x12e942360 <col:50> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12e942230 <col:50> 'int' lvalue ParmVar 0x12e9284d8 'merger' 'int'
    `-IfStmt 0x12e9431e8 <line:16:3, line:25:5>
      |-BinaryOperator 0x12e9427b8 <line:16:7, col:78> 'int' contains-errors '&&'
      | |-BinaryOperator 0x12e9426e8 <col:7, col:31> 'int' contains-errors '!='
      | | |-CXXDependentScopeMemberExpr 0x12e942680 <col:7, col:23> '<dependent type>' contains-errors lvalue ->type
      | | | `-RecoveryExpr 0x12e942660 <col:7> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x12e9426c8 <col:31> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x12e9427a0 <col:39, col:78> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-CallExpr 0x12e942770 <col:40, col:78> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x12e942558 <col:40> 'int ()' Function 0x12e9424a0 'UNIQSTR_EQ' 'int ()'
      |     |-CXXDependentScopeMemberExpr 0x12e942728 <col:52, col:68> '<dependent type>' contains-errors lvalue ->type
      |     | `-RecoveryExpr 0x12e942708 <col:52> '<dependent type>' contains-errors lvalue
      |     `-RecoveryExpr 0x12e9425d8 <col:74> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12e9431d8 <line:17:5, line:25:5>
