`-FunctionDecl 0x12f029008  line:1:1 invalid print_active_timers 'int (struct seq_file *, struct hrtimer_clock_base *, int)'
  |-ParmVarDecl 0x12f013248 <col:21, col:38> col:38 used m 'struct seq_file *'
  |-ParmVarDecl 0x12f028e28 <col:41, col:68> col:68 used base 'struct hrtimer_clock_base *'
  |-ParmVarDecl 0x12f028ec0 <line:2:7, col:11> col:11 referenced invalid now 'int'
  `-CompoundStmt 0x12e8fc688 <line:3:1, line:31:1>
    |-DeclStmt 0x12f029348 <line:4:2, col:28>
    | |-RecordDecl 0x12f0290c8 <col:2, col:9> col:9 struct hrtimer
    | |-VarDecl 0x12f029238 <col:2, col:18> col:18 used timer 'struct hrtimer *'
    | `-VarDecl 0x12f0292c0 <col:2, col:25> col:25 referenced invalid tmp 'struct hrtimer'
    |-DeclStmt 0x12f0294b0 <line:5:2, col:27>
    | |-VarDecl 0x12f029378 <col:2, col:23> col:16 used next 'unsigned long' cinit
    | | `-ImplicitCastExpr 0x12f029400 <col:23> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x12f0293e0 <col:23> 'int' 0
    | `-VarDecl 0x12f029430 <col:2, col:26> col:26 used i 'unsigned long'
    |-DeclStmt 0x12f0296b8 <line:6:2, col:30>
    | |-RecordDecl 0x12f0294c8 <col:2, col:9> col:9 struct timerqueue_node
    | `-VarDecl 0x12f029638 <col:2, col:26> col:26 used curr 'struct timerqueue_node *'
    |-DeclStmt 0x12f029750 <line:7:2, col:21>
    | `-VarDecl 0x12f0296e8 <col:2, col:16> col:16 used flags 'unsigned long'
    |-LabelStmt 0x12f029830 <line:9:1, line:10:6> 'next_one'
    | `-BinaryOperator 0x12f0297c0 <col:2, col:6> 'unsigned long' '='
    |   |-DeclRefExpr 0x12f029768 <col:2> 'unsigned long' lvalue Var 0x12f029430 'i' 'unsigned long'
    |   `-ImplicitCastExpr 0x12f0297a8 <col:6> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x12f029788 <col:6> 'int' 0
    |-CallExpr 0x12f029ab0 <line:11:2, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f0299b0 <col:2> 'int ()' Function 0x12f0298f8 'raw_spin_lock_irqsave' 'int ()'
    | |-UnaryOperator 0x12f029a78 <col:24, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12f029a30 <col:25, col:41> '<dependent type>' contains-errors lvalue ->lock
    | |   `-RecoveryExpr 0x12f029a08 <col:25, col:31> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12f0299d0 <col:25> 'struct hrtimer_clock_base *' lvalue ParmVar 0x12f028e28 'base' 'struct hrtimer_clock_base *'
    | `-DeclRefExpr 0x12f029a90 <col:47> 'unsigned long' lvalue Var 0x12f0296e8 'flags' 'unsigned long'
    |-BinaryOperator 0x12f029ca0 <line:13:2, col:41> 'struct timerqueue_node *' contains-errors '='
    | |-DeclRefExpr 0x12f029ae0 <col:2> 'struct timerqueue_node *' lvalue Var 0x12f029638 'curr' 'struct timerqueue_node *'
    | `-CallExpr 0x12f029c78 <col:9, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f029be0 <col:9> 'int ()' Function 0x12f029b28 'timerqueue_getnext' 'int ()'
    |   `-UnaryOperator 0x12f029c60 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12f029c38 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12f029c00 <col:29> 'struct hrtimer_clock_base *' lvalue ParmVar 0x12f028e28 'base' 'struct hrtimer_clock_base *'
    |-WhileStmt 0x12e8fbe18 <line:15:2, line:18:2>
    | |-BinaryOperator 0x12f029d88 <line:15:9, col:21> 'int' '&&'
    | | |-ImplicitCastExpr 0x12f029d70 <col:9> 'struct timerqueue_node *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f029cc0 <col:9> 'struct timerqueue_node *' lvalue Var 0x12f029638 'curr' 'struct timerqueue_node *'
    | | `-BinaryOperator 0x12f029d50 <col:17, col:21> 'int' '<'
    | |   |-ImplicitCastExpr 0x12f029d20 <col:17> 'unsigned long' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12f029ce0 <col:17> 'unsigned long' lvalue Var 0x12f029430 'i' 'unsigned long'
    | |   `-ImplicitCastExpr 0x12f029d38 <col:21> 'unsigned long' <LValueToRValue>
    | |     `-DeclRefExpr 0x12f029d00 <col:21> 'unsigned long' lvalue Var 0x12f029378 'next' 'unsigned long'
    | `-CompoundStmt 0x12e8fbdf8 <col:27, line:18:2>
    |   |-BinaryOperator 0x12e8fbda0 <line:16:3, col:38> 'struct timerqueue_node *' '='
    |   | |-DeclRefExpr 0x12f029da8 <col:3> 'struct timerqueue_node *' lvalue Var 0x12f029638 'curr' 'struct timerqueue_node *'
    |   | `-ImplicitCastExpr 0x12e8fbd88 <col:10, col:38> 'struct timerqueue_node *' <IntegralToPointer>
    |   |   `-CallExpr 0x12e8fbd48 <col:10, col:38> 'int'
    |   |     |-ImplicitCastExpr 0x12e8fbd30 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12e8fbcb8 <col:10> 'int ()' Function 0x12e8fbc00 'timerqueue_iterate_next' 'int ()'
    |   |     `-ImplicitCastExpr 0x12e8fbd70 <col:34> 'struct timerqueue_node *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12e8fbcd8 <col:34> 'struct timerqueue_node *' lvalue Var 0x12f029638 'curr' 'struct timerqueue_node *'
    |   `-UnaryOperator 0x12e8fbde0 <line:17:3, col:4> 'unsigned long' postfix '++'
    |     `-DeclRefExpr 0x12e8fbdc0 <col:3> 'unsigned long' lvalue Var 0x12f029430 'i' 'unsigned long'
    |-IfStmt 0x12e8fc538 <line:20:2, line:29:2>
    | |-ImplicitCastExpr 0x12e8fbe58 <line:20:6> 'struct timerqueue_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x12e8fbe38 <col:6> 'struct timerqueue_node *' lvalue Var 0x12f029638 'curr' 'struct timerqueue_node *'
    | `-CompoundStmt 0x12e8fc500 <col:12, line:29:2>
    |   |-BinaryOperator 0x12e8fc080 <line:23:3, col:10> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12e8fc008 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e8fbfe8 <col:3> 'struct hrtimer' lvalue Var 0x12f0292c0 'tmp' 'struct hrtimer'
    |   | `-UnaryOperator 0x12e8fc068 <col:9, col:10> 'struct hrtimer' lvalue prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x12e8fc050 <col:10> 'struct hrtimer *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12e8fc030 <col:10> 'struct hrtimer *' lvalue Var 0x12f029238 'timer' 'struct hrtimer *'
    |   |-CallExpr 0x12e8fc280 <line:24:3, col:58> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12e8fc180 <col:3> 'int ()' Function 0x12e8fc0c8 'raw_spin_unlock_irqrestore' 'int ()'
    |   | |-UnaryOperator 0x12e8fc248 <col:30, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x12e8fc200 <col:31, col:47> '<dependent type>' contains-errors lvalue ->lock
    |   | |   `-RecoveryExpr 0x12e8fc1d8 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x12e8fc1a0 <col:31> 'struct hrtimer_clock_base *' lvalue ParmVar 0x12f028e28 'base' 'struct hrtimer_clock_base *'
    |   | `-DeclRefExpr 0x12e8fc260 <col:53> 'unsigned long' lvalue Var 0x12f0296e8 'flags' 'unsigned long'
    |   |-CallExpr 0x12e8fc468 <line:26:3, col:37> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12e8fc390 <col:3> 'int ()' Function 0x12e8fc2d8 'print_timer' 'int ()'
    |   | |-DeclRefExpr 0x12e8fc3b0 <col:15> 'struct seq_file *' lvalue ParmVar 0x12f013248 'm' 'struct seq_file *'
    |   | |-DeclRefExpr 0x12e8fc3d0 <col:18> 'struct hrtimer *' lvalue Var 0x12f029238 'timer' 'struct hrtimer *'
    |   | |-UnaryOperator 0x12e8fc410 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x12e8fc3f0 <col:26> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x12e8fc428 <col:31> 'unsigned long' lvalue Var 0x12f029430 'i' 'unsigned long'
    |   | `-RecoveryExpr 0x12e8fc448 <col:34> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x12e8fc4d0 <line:27:3, col:7> 'unsigned long' postfix '++'
    |   | `-DeclRefExpr 0x12e8fc4b0 <col:3> 'unsigned long' lvalue Var 0x12f029378 'next' 'unsigned long'
    |   `-GotoStmt 0x12e8fc4e8 <line:28:3, col:8> 'next_one' 0x12f0297e0
    `-CallExpr 0x12e8fc658 <line:30:2, col:57> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12e8fc558 <col:2> 'int ()' Function 0x12e8fc0c8 'raw_spin_unlock_irqrestore' 'int ()'
      |-UnaryOperator 0x12e8fc620 <col:29, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-CXXDependentScopeMemberExpr 0x12e8fc5d8 <col:30, col:46> '<dependent type>' contains-errors lvalue ->lock
      |   `-RecoveryExpr 0x12e8fc5b0 <col:30, col:36> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x12e8fc578 <col:30> 'struct hrtimer_clock_base *' lvalue ParmVar 0x12f028e28 'base' 'struct hrtimer_clock_base *'
      `-DeclRefExpr 0x12e8fc638 <col:52> 'unsigned long' lvalue Var 0x12f0296e8 'flags' 'unsigned long'
