`-FunctionDecl 0x12f00de88  line:1:1 invalid hb_set_intersect 'int (int *, const int *)'
  |-ParmVarDecl 0x12f00dd28 <col:19, col:35> col:35 referenced invalid set 'int *'
  |-ParmVarDecl 0x12f00dda8 <line:2:5, col:21> col:21 invalid other 'const int *'
  `-CompoundStmt 0x12f00e368 <line:3:1, line:8:1>
    |-IfStmt 0x12f00e240 <line:4:3, line:5:5>
    | |-CallExpr 0x12f00e208 <line:4:7, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12f00e0a0 <col:7> 'int ()' Function 0x12f00dfe8 'unlikely' 'int ()'
    | | `-CallExpr 0x12f00e1e0 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12f00e1a0 <col:17> 'int ()' Function 0x12f00e0e8 'hb_object_is_immutable' 'int ()'
    | |   `-RecoveryExpr 0x12f00e1c0 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f00e230 <line:5:5>
    `-CallExpr 0x12f00e340 <line:7:3, col:25> '<dependent type>' contains-errors
      |-CXXDependentScopeMemberExpr 0x12f00e2a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->intersect
      | `-RecoveryExpr 0x12f00e280 <col:3> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12f00e260 <col:3> 'int *' lvalue ParmVar 0x12f00dd28 'set' 'int *'
      `-UnaryOperator 0x12f00e328 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x12f00e310 <col:20> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x12f00e2f0 <col:20> '<dependent type>' contains-errors lvalue
