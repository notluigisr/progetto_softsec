`-FunctionDecl 0x11d928198  line:1:12 DefragTrackerReuseTest 'int (void)' static
  `-CompoundStmt 0x11d942a48 <line:2:1, line:60:1>
    |-DeclStmt 0x11d928328 <line:3:5, col:16>
    | `-VarDecl 0x11d9282a0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x11d928308 <col:15> 'int' 0
    |-DeclStmt 0x11d9283e0 <line:4:5, col:15>
    | `-VarDecl 0x11d928358 <col:5, col:14> col:9 used id 'int' cinit
    |   `-IntegerLiteral 0x11d9283c0 <col:14> 'int' 1
    |-CallExpr 0x11d928668 <line:8:5, col:16> 'int'
    | `-ImplicitCastExpr 0x11d928650 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x11d928600 <col:5> 'int ()' Function 0x11d928548 'DefragInit' 'int ()'
    |-IfStmt 0x11d941fc8 <line:12:5, line:14:5>
    | |-BinaryOperator 0x11d941f28 <line:12:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11d941ee8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11d941f08 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11d941fb0 <col:21, line:14:5>
    |   `-GotoStmt 0x11d941f98 <line:13:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d942248 <line:18:5, line:20:5>
    | |-BinaryOperator 0x11d9421f8 <line:18:9, col:21> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11d9421b8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11d9421d8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11d942230 <col:27, line:20:5>
    |   `-GotoStmt 0x11d942218 <line:19:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d9422b8 <line:21:5, line:23:5>
    | |-RecoveryExpr 0x11d942268 <line:21:9, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x11d9422a0 <col:30, line:23:5>
    |   `-GotoStmt 0x11d942288 <line:22:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d942328 <line:24:5, line:26:5>
    | |-RecoveryExpr 0x11d9422d8 <line:24:9, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x11d942310 <col:27, line:26:5>
    |   `-GotoStmt 0x11d9422f8 <line:25:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d9424b8 <line:31:5, line:33:5>
    | |-RecoveryExpr 0x11d942468 <line:31:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x11d9424a0 <col:27, line:33:5>
    |   `-GotoStmt 0x11d942488 <line:32:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d942528 <line:34:5, line:36:5>
    | |-RecoveryExpr 0x11d9424d8 <line:34:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x11d942510 <col:31, line:36:5>
    |   `-GotoStmt 0x11d9424f8 <line:35:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d9425f8 <line:43:5, line:45:5>
    | |-RecoveryExpr 0x11d9425a8 <line:43:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x11d9425e0 <col:27, line:45:5>
    |   `-GotoStmt 0x11d9425c8 <line:44:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d942668 <line:46:5, line:48:5>
    | |-RecoveryExpr 0x11d942618 <line:46:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x11d942650 <col:31, line:48:5>
    |   `-GotoStmt 0x11d942638 <line:47:9, col:14> 'end' 0x11d941f48
    |-IfStmt 0x11d9426d8 <line:49:5, line:51:5>
    | |-RecoveryExpr 0x11d942688 <line:49:9, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x11d9426c0 <col:27, line:51:5>
    |   `-GotoStmt 0x11d9426a8 <line:50:9, col:14> 'end' 0x11d941f48
    |-BinaryOperator 0x11d942738 <line:53:5, col:11> 'int' '='
    | |-DeclRefExpr 0x11d9426f8 <col:5> 'int' lvalue Var 0x11d9282a0 'ret' 'int'
    | `-IntegerLiteral 0x11d942718 <col:11> 'int' 1
    |-LabelStmt 0x11d9428a8 <line:54:1, line:57:5> 'end'
    | `-IfStmt 0x11d942888 <line:55:5, line:57:5>
    |   |-RecoveryExpr 0x11d942758 <line:55:9, col:15> '_Bool' contains-errors
    |   `-CompoundStmt 0x11d942878 <col:21, line:57:5>
    |-CallExpr 0x11d9429e0 <line:58:5, col:19> 'int'
    | `-ImplicitCastExpr 0x11d9429c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x11d9429a8 <col:5> 'int ()' Function 0x11d9428f0 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x11d942a38 <line:59:5, col:12>
      `-ImplicitCastExpr 0x11d942a20 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11d942a00 <col:12> 'int' lvalue Var 0x11d9282a0 'ret' 'int'
