`-FunctionDecl 0x12d00e358  line:1:12 unregister_gadget 'int (struct gadget_info *)' static
  |-ParmVarDecl 0x12d00e248 <col:30, col:50> col:50 used gi 'struct gadget_info *'
  `-CompoundStmt 0x12d026f98 <line:2:1, line:14:1>
    |-DeclStmt 0x12d0266d0 <line:3:2, col:9>
    | `-VarDecl 0x12d026668 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x12d0268c8 <line:5:2, line:6:11>
    | |-UnaryOperator 0x12d0267f0 <line:5:6, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12d0267d8 <col:7, col:35> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12d026790 <col:7, col:35> '<dependent type>' contains-errors lvalue .udc_name
    | |     `-CXXDependentScopeMemberExpr 0x12d026748 <col:7, col:21> '<dependent type>' contains-errors lvalue .gadget_driver
    | |       `-RecoveryExpr 0x12d026720 <col:7, col:11> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x12d0266e8 <col:7> 'struct gadget_info *' lvalue ParmVar 0x12d00e248 'gi' 'struct gadget_info *'
    | `-ReturnStmt 0x12d0268b8 <line:6:3, col:11>
    |   `-UnaryOperator 0x12d0268a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12d026888 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12d026868 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d026b28 <line:8:2, col:65> 'int' contains-errors '='
    | |-DeclRefExpr 0x12d0268e8 <col:2> 'int' lvalue Var 0x12d026668 'ret' 'int'
    | `-CallExpr 0x12d026b00 <col:8, col:65> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d026a20 <col:8> 'int ()' Function 0x12d026968 'usb_gadget_unregister_driver' 'int ()'
    |   `-UnaryOperator 0x12d026ae8 <col:37, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12d026aa0 <col:38, col:52> '<dependent type>' contains-errors lvalue .gadget_driver
    |       `-RecoveryExpr 0x12d026a78 <col:38, col:42> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12d026a40 <col:38> 'struct gadget_info *' lvalue ParmVar 0x12d00e248 'gi' 'struct gadget_info *'
    |-IfStmt 0x12d026bc8 <line:9:2, line:10:10>
    | |-ImplicitCastExpr 0x12d026b68 <line:9:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d026b48 <col:6> 'int' lvalue Var 0x12d026668 'ret' 'int'
    | `-ReturnStmt 0x12d026bb8 <line:10:3, col:10>
    |   `-ImplicitCastExpr 0x12d026ba0 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12d026b80 <col:10> 'int' lvalue Var 0x12d026668 'ret' 'int'
    |-CallExpr 0x12d026dd8 <line:11:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d026cc8 <col:2> 'int ()' Function 0x12d026c10 'kfree' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x12d026d90 <col:8, col:36> '<dependent type>' contains-errors lvalue .udc_name
    |   `-CXXDependentScopeMemberExpr 0x12d026d48 <col:8, col:22> '<dependent type>' contains-errors lvalue .gadget_driver
    |     `-RecoveryExpr 0x12d026d20 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12d026ce8 <col:8> 'struct gadget_info *' lvalue ParmVar 0x12d00e248 'gi' 'struct gadget_info *'
    |-BinaryOperator 0x12d026f48 <line:12:2, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d026ea8 <col:2, col:30> '<dependent type>' contains-errors lvalue .udc_name
    | | `-CXXDependentScopeMemberExpr 0x12d026e60 <col:2, col:16> '<dependent type>' contains-errors lvalue .gadget_driver
    | |   `-RecoveryExpr 0x12d026e38 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12d026e00 <col:2> 'struct gadget_info *' lvalue ParmVar 0x12d00e248 'gi' 'struct gadget_info *'
    | `-RecoveryExpr 0x12d026f28 <col:41> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12d026f88 <line:13:2, col:9>
      `-IntegerLiteral 0x12d026f68 <col:9> 'int' 0
