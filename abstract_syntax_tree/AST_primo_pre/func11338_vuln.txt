`-FunctionDecl 0x134128388  line:1:1 invalid create_face_from_contents 'int (int *, char **, int **)'
  |-ParmVarDecl 0x134128128 <col:28, col:41> col:41 invalid job 'int *'
  |-ParmVarDecl 0x1341281d8 <line:2:28, col:36> col:36 used contents 'char **'
  |-ParmVarDecl 0x134128290 <line:3:28, col:37> col:37 invalid error 'int **'
  `-CompoundStmt 0x134141d60 <line:4:1, line:23:1>
    |-IfStmt 0x134141ae0 <line:14:3, line:19:3>
    | |-BinaryOperator 0x134128750 <line:14:7, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x134128730 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1341286f0 <col:19> 'int' 0
    | `-CompoundStmt 0x134141ac0 <col:22, line:19:3>
    |   |-CallExpr 0x134141a30 <line:16:5, line:17:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1341418b8 <line:16:5> 'int ()' Function 0x134141800 'g_set_error' 'int ()'
    |   | |-RecoveryExpr 0x1341418d8 <col:18> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x1341419f0 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x134141910 <col:37> 'int' 0
    |   | |-StringLiteral 0x134141970 <line:17:18> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x134141a10 <col:25> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x134141ab0 <line:18:5, col:12>
    |     `-RecoveryExpr 0x134141a90 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x134141cf8 <line:21:3, col:51> 'char *' contains-errors '='
    | |-UnaryOperator 0x134141b38 <col:3, col:4> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x134141b20 <col:4> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x134141b00 <col:4> 'char **' lvalue ParmVar 0x1341281d8 'contents' 'char **'
    | `-CallExpr 0x134141cd0 <col:15, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x134141c30 <col:15> 'int ()' Function 0x134141b78 'g_steal_pointer' 'int ()'
    |   `-UnaryOperator 0x134141cb8 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x134141c70 <col:33, col:38> '<dependent type>' contains-errors lvalue ->face_contents
    |       `-RecoveryExpr 0x134141c50 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x134141d50 <line:22:3, col:10>
      `-RecoveryExpr 0x134141d30 <col:10> '<dependent type>' contains-errors lvalue
