`-FunctionDecl 0x13e00de88  line:1:5 invalid test_sqr 'int (int *, int *)'
  |-ParmVarDecl 0x13e00dd28 <col:14, col:19> col:19 invalid bp 'int *'
  |-ParmVarDecl 0x13e00dda8 <col:23, col:31> col:31 invalid ctx 'int *'
  `-CompoundStmt 0x13e029cd8 <line:2:2, line:41:2>
    |-DeclStmt 0x13e00dfc0 <line:4:2, col:7>
    | `-VarDecl 0x13e00df58 <col:2, col:6> col:6 used i 'int'
    |-CallExpr 0x13e00e1e0 <line:6:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e00e130 <col:2> 'int ()' Function 0x13e00e078 'BN_init' 'int ()'
    | `-UnaryOperator 0x13e00e1c8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13e00e1a8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e00e2b8 <line:7:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e00e208 <col:2> 'int ()' Function 0x13e00e078 'BN_init' 'int ()'
    | `-UnaryOperator 0x13e00e2a0 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13e00e280 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e00e390 <line:8:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e00e2e0 <col:2> 'int ()' Function 0x13e00e078 'BN_init' 'int ()'
    | `-UnaryOperator 0x13e00e378 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13e00e358 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e027478 <line:9:2, col:12> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e00e3b8 <col:2> 'int ()' Function 0x13e00e078 'BN_init' 'int ()'
    | `-UnaryOperator 0x13e027460 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13e027440 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13e029af0 <line:11:2, line:35:3>
    | |-BinaryOperator 0x13e0274e0 <line:11:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x13e0274a0 <col:7> 'int' lvalue Var 0x13e00df58 'i' 'int'
    | | `-IntegerLiteral 0x13e0274c0 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13e027578 <col:12, col:14> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13e027500 <col:12> 'int' lvalue Var 0x13e00df58 'i' 'int'
    | | `-RecoveryExpr 0x13e027558 <col:14> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13e0275b8 <col:20, col:21> 'int' postfix '++'
    | | `-DeclRefExpr 0x13e027598 <col:20> 'int' lvalue Var 0x13e00df58 'i' 'int'
    | `-CompoundStmt 0x13e029ac0 <line:12:3, line:35:3>
    |   |-CallExpr 0x13e0278c8 <line:13:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13e0276b0 <col:3> 'int ()' Function 0x13e0275f8 'BN_bntest_rand' 'int ()'
    |   | |-UnaryOperator 0x13e027858 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13e027838 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x13e0278a8 <col:21, col:26> 'int' '+'
    |   | | |-IntegerLiteral 0x13e027700 <col:21> 'int' 40
    |   | | `-BinaryOperator 0x13e027888 <col:24, col:26> 'int' '*'
    |   | |   |-ImplicitCastExpr 0x13e027870 <col:24> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13e027720 <col:24> 'int' lvalue Var 0x13e00df58 'i' 'int'
    |   | |   `-IntegerLiteral 0x13e027740 <col:26> 'int' 10
    |   | |-IntegerLiteral 0x13e0277b8 <col:29> 'int' 0
    |   | `-IntegerLiteral 0x13e0277d8 <col:31> 'int' 0
    |   |-CallExpr 0x13e027ca0 <line:15:3, col:19> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13e027b58 <col:3> 'int ()' Function 0x13e027aa0 'BN_sqr' 'int ()'
    |   | |-UnaryOperator 0x13e027c50 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13e027c30 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x13e027c88 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13e027c68 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13e027bd8 <col:16> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13e0283a8 <line:16:3, line:27:4>
    |   | |-BinaryOperator 0x13e027d50 <line:16:7, col:13> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x13e027cd8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x13e027d30 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13e028388 <line:17:4, line:27:4>
    |   |   |-IfStmt 0x13e028298 <line:18:4, line:24:5>
    |   |   | |-UnaryOperator 0x13e027df0 <line:18:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x13e027dd8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |   `-RecoveryExpr 0x13e027db8 <col:9> '<dependent type>' contains-errors lvalue
    |   |   | `-CompoundStmt 0x13e028270 <line:19:5, line:24:5>
    |   |   |   |-CallExpr 0x13e027fc0 <line:20:5, col:19> '<dependent type>' contains-errors
    |   |   |   | |-DeclRefExpr 0x13e027ee8 <col:5> 'int ()' Function 0x13e027e30 'BN_print' 'int ()'
    |   |   |   | |-RecoveryExpr 0x13e027f08 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |   | `-UnaryOperator 0x13e027fa8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   |   `-RecoveryExpr 0x13e027f88 <col:18> '<dependent type>' contains-errors lvalue
    |   |   |   |-CallExpr 0x13e028170 <line:21:5, col:22> '<dependent type>' contains-errors
    |   |   |   | |-DeclRefExpr 0x13e0280d0 <col:5> 'int ()' Function 0x13e028018 'BIO_puts' 'int ()'
    |   |   |   | |-RecoveryExpr 0x13e0280f0 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |   | `-StringLiteral 0x13e028150 <col:17> 'char[4]' lvalue "STR"
    |   |   |   `-CallExpr 0x13e028240 <line:23:5, col:22> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x13e0281e0 <col:5> 'int ()' Function 0x13e028018 'BIO_puts' 'int ()'
    |   |   |     |-RecoveryExpr 0x13e028200 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |     `-StringLiteral 0x13e028220 <col:17> 'char[4]' lvalue "STR"
    |   |   `-CallExpr 0x13e028358 <line:26:4, col:21> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13e0282f8 <col:4> 'int ()' Function 0x13e028018 'BIO_puts' 'int ()'
    |   |     |-RecoveryExpr 0x13e028318 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x13e028338 <col:16> 'char[4]' lvalue "STR"
    |   `-IfStmt 0x13e029aa0 <line:30:3, line:34:7>
    |     |-RecoveryExpr 0x13e029918 <line:30:6, col:39> '_Bool' contains-errors
    |     `-CompoundStmt 0x13e029a88 <line:31:7, line:34:7>
    |       `-ReturnStmt 0x13e029a78 <line:33:7, col:14>
    |         `-IntegerLiteral 0x13e029a58 <col:14> 'int' 0
    `-ReturnStmt 0x13e029cc8 <line:40:2, col:10>
      `-ParenExpr 0x13e029ca8 <col:8, col:10> 'int'
        `-IntegerLiteral 0x13e029c88 <col:9> 'int' 1
