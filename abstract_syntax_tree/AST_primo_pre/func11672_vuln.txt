`-FunctionDecl 0x13389c748  line:1:5 invalid tls1_process_sigalgs 'int (int *, const unsigned char *, int)'
  |-ParmVarDecl 0x13389c528 <col:26, col:31> col:31 invalid s 'int *'
  |-ParmVarDecl 0x13389c5d8 <col:34, col:55> col:55 used data 'const unsigned char *'
  |-ParmVarDecl 0x13389c658 <col:61, col:65> col:65 used dsize 'int'
  `-CompoundStmt 0x13480a2f0 <line:2:2, line:90:2>
    |-DeclStmt 0x13389c920 <line:3:2, col:12>
    | |-VarDecl 0x13389c820 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x13389c8a0 <col:2, col:9> col:9 used idx 'int'
    |-DeclStmt 0x13389c9b8 <line:4:2, col:18>
    | `-VarDecl 0x13389c950 <col:2, col:16> col:16 referenced invalid md 'const int *'
    |-IfStmt 0x1348082d0 <line:8:2, line:9:10>
    | |-BinaryOperator 0x134808280 <line:8:6, col:28> 'int' contains-errors '<'
    | | |-CallExpr 0x134808200 <col:6, col:24> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13389cbc0 <col:6> 'int ()' Function 0x13389cb08 'TLS1_get_version' 'int ()'
    | | | `-RecoveryExpr 0x13389cbe0 <col:23> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x134808260 <col:28> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1348082c0 <line:9:3, col:10>
    |   `-IntegerLiteral 0x1348082a0 <col:10> 'int' 1
    |-IfStmt 0x1348083b8 <line:11:2, line:12:10>
    | |-UnaryOperator 0x134808370 <line:11:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x134808358 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x134808338 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1348083a8 <line:12:3, col:10>
    |   `-IntegerLiteral 0x134808388 <col:10> 'int' 0
    |-IfStmt 0x134808788 <line:22:2, line:23:10>
    | |-RecoveryExpr 0x134808738 <line:22:6, col:10> '_Bool' contains-errors
    | `-ReturnStmt 0x134808778 <line:23:3, col:10>
    |   `-IntegerLiteral 0x134808758 <col:10> 'int' 0
    |-ForStmt 0x134809108 <line:26:2, line:70:3>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1348088f0 <line:26:40, col:44> 'int' '<'
    | | |-ImplicitCastExpr 0x1348088c0 <col:40> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134808880 <col:40> 'int' lvalue Var 0x13389c820 'i' 'int'
    | | `-ImplicitCastExpr 0x1348088d8 <col:44> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1348088a0 <col:44> 'int' lvalue ParmVar 0x13389c658 'dsize' 'int'
    | |-<<<NULL>>>
    | `-CompoundStmt 0x1348090e8 <line:27:3, line:70:3>
    |   |-SwitchStmt 0x134808d40 <line:38:3, line:57:4>
    |   | |-RecoveryExpr 0x134808d20 <line:38:10, col:18> 'int' contains-errors
    |   | `-CompoundStmt 0x134808e08 <line:39:4, line:57:4>
    |   |   |-BreakStmt 0x134808d88 <line:43:4>
    |   |   |-BreakStmt 0x134808db0 <line:48:4>
    |   |   |-BreakStmt 0x134808dd8 <line:53:4>
    |   |   `-DefaultStmt 0x134808de8 <line:55:4, line:56:4>
    |   |     `-ContinueStmt 0x134808de0 <col:4>
    |   `-IfStmt 0x1348090c8 <line:59:3, line:68:4>
    |     |-RecoveryExpr 0x134808e58 <line:59:7, col:31> '_Bool' contains-errors
    |     `-CompoundStmt 0x1348090b0 <line:60:4, line:68:4>
    |       `-IfStmt 0x134809090 <line:62:4, line:67:5>
    |         |-RecoveryExpr 0x134808fc0 <line:62:8> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x134809080 <line:63:5, line:67:5>
    |-IfStmt 0x13480a228 <line:79:2, line:83:3>
    | |-RecoveryExpr 0x13480a148 <line:79:6, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x13480a218 <line:80:3, line:83:3>
    `-ReturnStmt 0x13480a2e0 <line:89:2, col:9>
      `-IntegerLiteral 0x13480a2c0 <col:9> 'int' 1
