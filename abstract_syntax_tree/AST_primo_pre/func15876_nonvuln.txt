`-FunctionDecl 0x140128288  line:1:12 invalid put_fid 'int (int *, int *)' static
  |-ParmVarDecl 0x140128128 <col:20, col:29> col:29 referenced invalid pdu 'int *'
  |-ParmVarDecl 0x1401281a8 <col:34, col:48> col:48 referenced invalid fidp 'int *'
  `-CompoundStmt 0x1401420d0 <line:2:1, line:18:1>
    |-CallExpr 0x140128558 <line:3:5, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1401284a0 <col:5> 'int ()' Function 0x1401283e8 'BUG_ON' 'int ()'
    | `-UnaryOperator 0x140128540 <col:12, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x140128528 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     `-CXXDependentScopeMemberExpr 0x1401284e0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ref
    |       `-RecoveryExpr 0x1401284c0 <col:13> '<dependent type>' contains-errors lvalue
    |-UnaryOperator 0x140128610 <line:4:5, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow
    | `-CXXDependentScopeMemberExpr 0x1401285c8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->ref
    |   `-RecoveryExpr 0x1401285a0 <col:5> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x140128580 <col:5> 'int *' lvalue ParmVar 0x1401281a8 'fidp' 'int *'
    |-IfStmt 0x140142080 <line:6:5, line:16:5>
    | |-BinaryOperator 0x140128728 <line:6:9, col:29> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x1401286a8 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x140128690 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x140128648 <col:10, col:16> '<dependent type>' contains-errors lvalue ->ref
    | | |     `-RecoveryExpr 0x140128628 <col:10> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x1401286e0 <col:23, col:29> '<dependent type>' contains-errors lvalue ->clunked
    | |   `-RecoveryExpr 0x1401286c0 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x140142060 <col:38, line:16:5>
    |   |-IfStmt 0x140141ec0 <line:7:9, line:14:9>
    |   | |-BinaryOperator 0x140141890 <line:7:13, col:34> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x140128768 <col:13, col:19> '<dependent type>' contains-errors lvalue ->fid
    |   | | | `-RecoveryExpr 0x140128748 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x140141848 <col:26, col:34> '<dependent type>' contains-errors lvalue ->root_fid
    |   | |   `-CXXDependentScopeMemberExpr 0x140141800 <col:26, col:31> '<dependent type>' contains-errors lvalue ->s
    |   | |     `-RecoveryExpr 0x1401287b0 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x140141ea8 <col:44, line:14:9>
    |   |   `-IfStmt 0x140141e88 <line:9:13, line:13:13>
    |   |     |-CXXDependentScopeMemberExpr 0x140141918 <line:9:17, col:25> '<dependent type>' contains-errors lvalue ->migration_blocker
    |   |     | `-CXXDependentScopeMemberExpr 0x1401418d0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->s
    |   |     |   `-RecoveryExpr 0x1401418b0 <col:17> '<dependent type>' contains-errors lvalue
    |   |     `-CompoundStmt 0x140141e60 <col:44, line:13:13>
    |   |       |-CallExpr 0x140141b10 <line:10:17, col:62> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x140141a40 <col:17> 'int ()' Function 0x140141988 'migrate_del_blocker' 'int ()'
    |   |       | `-CXXDependentScopeMemberExpr 0x140141ac8 <col:37, col:45> '<dependent type>' contains-errors lvalue ->migration_blocker
    |   |       |   `-CXXDependentScopeMemberExpr 0x140141a80 <col:37, col:42> '<dependent type>' contains-errors lvalue ->s
    |   |       |     `-RecoveryExpr 0x140141a60 <col:37> '<dependent type>' contains-errors lvalue
    |   |       |-CallExpr 0x140141ce8 <line:11:17, col:53> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x140141c18 <col:17> 'int ()' Function 0x140141b60 'error_free' 'int ()'
    |   |       | `-CXXDependentScopeMemberExpr 0x140141ca0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->migration_blocker
    |   |       |   `-CXXDependentScopeMemberExpr 0x140141c58 <col:28, col:33> '<dependent type>' contains-errors lvalue ->s
    |   |       |     `-RecoveryExpr 0x140141c38 <col:28> '<dependent type>' contains-errors lvalue
    |   |       `-BinaryOperator 0x140141e40 <line:12:17, col:45> '<dependent type>' contains-errors '='
    |   |         |-CXXDependentScopeMemberExpr 0x140141da0 <col:17, col:25> '<dependent type>' contains-errors lvalue ->migration_blocker
    |   |         | `-CXXDependentScopeMemberExpr 0x140141d58 <col:17, col:22> '<dependent type>' contains-errors lvalue ->s
    |   |         |   `-RecoveryExpr 0x140141d30 <col:17> '<dependent type>' contains-errors lvalue
    |   |         |     `-DeclRefExpr 0x140141d10 <col:17> 'int *' lvalue ParmVar 0x140128128 'pdu' 'int *'
    |   |         `-RecoveryExpr 0x140141e20 <col:45> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x140142050 <line:15:9, col:34>
    |     `-CallExpr 0x140142020 <col:16, col:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x140141fc0 <col:16> 'int ()' Function 0x140141f08 'free_fid' 'int ()'
    |       |-RecoveryExpr 0x140141fe0 <col:25> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x140142000 <col:30> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1401420c0 <line:17:5, col:12>
      `-IntegerLiteral 0x1401420a0 <col:12> 'int' 0
