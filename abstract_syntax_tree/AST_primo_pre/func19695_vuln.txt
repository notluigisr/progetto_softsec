`-FunctionDecl 0x14a928258  line:1:1 invalid rsock_strbuf 'int (int, long)'
  |-ParmVarDecl 0x14a9280f0 <col:14, col:20> col:20 invalid str 'int'
  |-ParmVarDecl 0x14a928170 <col:25, col:30> col:30 used buflen 'long'
  `-CompoundStmt 0x14b009460 <line:2:1, line:16:1>
    |-DeclStmt 0x14a928390 <line:3:5, col:13>
    | `-VarDecl 0x14a928328 <col:5, col:10> col:10 used len 'long'
    |-IfStmt 0x14a928750 <line:5:5, col:48>
    | |-CallExpr 0x14a928540 <col:9, col:18> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14a928500 <col:9> 'int ()' Function 0x14a928448 'NIL_P' 'int ()'
    | | `-RecoveryExpr 0x14a928520 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14a928740 <col:21, col:48>
    |   `-CallExpr 0x14a9286f8 <col:28, col:48> 'int'
    |     |-ImplicitCastExpr 0x14a9286e0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a928648 <col:28> 'int ()' Function 0x14a928590 'rb_str_new' 'int ()'
    |     |-IntegerLiteral 0x14a928668 <col:39> 'int' 0
    |     `-ImplicitCastExpr 0x14a928728 <col:42> 'long' <LValueToRValue>
    |       `-DeclRefExpr 0x14a928688 <col:42> 'long' lvalue ParmVar 0x14a928170 'buflen' 'long'
    |-CallExpr 0x14b008cf8 <line:7:5, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b008cb8 <col:5> 'int ()' Function 0x14b008c00 'StringValue' 'int ()'
    | `-RecoveryExpr 0x14b008cd8 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14b008e88 <line:8:5, col:26> 'long' contains-errors '='
    | |-DeclRefExpr 0x14b008d20 <col:5> 'long' lvalue Var 0x14a928328 'len' 'long'
    | `-CallExpr 0x14b008e60 <col:11, col:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b008e20 <col:11> 'int ()' Function 0x14b008d68 'RSTRING_LEN' 'int ()'
    |   `-RecoveryExpr 0x14b008e40 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b009290 <line:9:5, line:13:5> has_else
    | |-BinaryOperator 0x14b008f18 <line:9:9, col:16> 'int' '>='
    | | |-ImplicitCastExpr 0x14b008ee8 <col:9> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b008ea8 <col:9> 'long' lvalue Var 0x14a928328 'len' 'long'
    | | `-ImplicitCastExpr 0x14b008f00 <col:16> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x14b008ec8 <col:16> 'long' lvalue ParmVar 0x14a928170 'buflen' 'long'
    | |-CompoundStmt 0x14b009080 <col:24, line:11:5>
    | | `-CallExpr 0x14b009058 <line:10:2, col:19> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14b009018 <col:2> 'int ()' Function 0x14b008f60 'rb_str_modify' 'int ()'
    | |   `-RecoveryExpr 0x14b009038 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b009278 <line:11:12, line:13:5>
    |   `-CallExpr 0x14b009248 <line:12:2, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14b009178 <col:2> 'int ()' Function 0x14b0090c0 'rb_str_modify_expand' 'int ()'
    |     |-RecoveryExpr 0x14b009198 <col:23> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x14b009228 <col:28, col:37> 'long' '-'
    |       |-ImplicitCastExpr 0x14b0091f8 <col:28> 'long' <LValueToRValue>
    |       | `-DeclRefExpr 0x14b0091b8 <col:28> 'long' lvalue ParmVar 0x14a928170 'buflen' 'long'
    |       `-ImplicitCastExpr 0x14b009210 <col:37> 'long' <LValueToRValue>
    |         `-DeclRefExpr 0x14b0091d8 <col:37> 'long' lvalue Var 0x14a928328 'len' 'long'
    |-CallExpr 0x14b009400 <line:14:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b0093a0 <col:5> 'int ()' Function 0x14b0092e8 'rb_str_set_len' 'int ()'
    | |-RecoveryExpr 0x14b0093c0 <col:20> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x14b0093e0 <col:25> 'long' lvalue ParmVar 0x14a928170 'buflen' 'long'
    `-ReturnStmt 0x14b009450 <line:15:5, col:12>
      `-RecoveryExpr 0x14b009430 <col:12> '<dependent type>' contains-errors lvalue
