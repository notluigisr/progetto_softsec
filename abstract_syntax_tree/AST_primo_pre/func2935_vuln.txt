`-FunctionDecl 0x123141968  line:1:1 invalid ikev2_vid_print 'int (int *, char, const struct isakmp_gen *, int)'
  |-ParmVarDecl 0x123128128 <col:17, col:37> col:37 invalid ndo 'int *'
  |-ParmVarDecl 0x1231281a0 <col:42, col:49> col:49 used tpay 'char'
  |-ParmVarDecl 0x123128798 <line:2:3, col:28> col:28 used ext 'const struct isakmp_gen *'
  |-ParmVarDecl 0x123141818 <line:3:3, col:9> col:9 invalid item_len 'int'
  `-CompoundStmt 0x123144fb8 <line:6:1, line:32:1>
    |-DeclStmt 0x123141ae8 <line:7:2, col:21>
    | `-VarDecl 0x123141a80 <col:2, col:20> col:20 invalid e 'struct isakmp_gen'
    |-DeclStmt 0x123141b80 <line:8:2, col:19>
    | `-VarDecl 0x123141b18 <col:2, col:16> col:16 used vid 'const char *'
    |-DeclStmt 0x123141cb0 <line:9:2, col:12>
    | |-VarDecl 0x123141bb0 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x123141c30 <col:2, col:9> col:9 used len 'int'
    |-ImplicitCastExpr 0x123141f48 <line:11:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x123141f18 <col:2, col:16> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x123141e20 <col:2> 'int ()' Function 0x123141d68 'ND_TCHECK' 'int ()'
    |   `-UnaryOperator 0x123141e78 <col:12, col:13> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x123141e60 <col:13> 'const struct isakmp_gen *' <LValueToRValue>
    |       `-DeclRefExpr 0x123141e40 <col:13> 'const struct isakmp_gen *' lvalue ParmVar 0x123128798 'ext' 'const struct isakmp_gen *'
    |-CallExpr 0x123142118 <line:12:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123142040 <col:2> 'int ()' Function 0x123141f88 'UNALIGNED_MEMCPY' 'int ()'
    | |-UnaryOperator 0x123142080 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x123142060 <col:20> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x123142098 <col:23> 'const struct isakmp_gen *' lvalue ParmVar 0x123128798 'ext' 'const struct isakmp_gen *'
    | `-UnaryExprOrTypeTraitExpr 0x1231420f8 <col:28, col:36> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x1231420d8 <col:34, col:36> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x1231420b8 <col:35> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x123142468 <line:13:2, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123142230 <col:2> 'int ()' Function 0x123142178 'ikev2_pay_print' 'int ()'
    | |-RecoveryExpr 0x123142250 <col:18> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1231423a8 <col:23, col:33> 'int'
    | | |-ImplicitCastExpr 0x123142390 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x123142350 <col:23> 'int ()' Function 0x123142298 'NPSTR' 'int ()'
    | | `-ImplicitCastExpr 0x1231423e8 <col:29> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1231423d0 <col:29> 'char' <LValueToRValue>
    | |     `-DeclRefExpr 0x123142370 <col:29> 'char' lvalue ParmVar 0x1231281a0 'tpay' 'char'
    | `-CXXDependentScopeMemberExpr 0x123142420 <col:36, col:38> '<dependent type>' contains-errors lvalue .critical
    |   `-RecoveryExpr 0x123142400 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x123142860 <line:14:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123142580 <col:2> 'int ()' Function 0x1231424c8 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x123142840 <col:11, col:39> '<dependent type>' contains-errors
    |   `-BinaryOperator 0x123142820 <col:12, col:38> '<dependent type>' contains-errors ','
    |     |-BinaryOperator 0x123142620 <col:12, col:16> 'char[4]' contains-errors ','
    |     | |-RecoveryExpr 0x1231425a0 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x123142600 <col:16> 'char[4]' lvalue "STR"
    |     `-BinaryOperator 0x123142800 <col:23, col:38> '<dependent type>' contains-errors '-'
    |       |-CallExpr 0x1231427a8 <col:23, col:34> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x123142720 <col:23> 'int ()' Function 0x123142668 'ntohs' 'int ()'
    |       | `-CXXDependentScopeMemberExpr 0x123142760 <col:29, col:31> '<dependent type>' contains-errors lvalue .len
    |       |   `-RecoveryExpr 0x123142740 <col:29> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x1231427d0 <col:38> 'int' 4
    |-BinaryOperator 0x1231429b0 <line:16:2, col:30> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x123142888 <col:2> 'const char *' lvalue Var 0x123141b18 'vid' 'const char *'
    | `-CStyleCastExpr 0x123142988 <col:8, col:30> 'const char *' contains-errors <Dependent>
    |   `-ParenExpr 0x123142968 <col:24, col:30> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x123142900 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x1231428a8 <col:25> 'const struct isakmp_gen *' lvalue ParmVar 0x123128798 'ext' 'const struct isakmp_gen *'
    |       `-IntegerLiteral 0x1231428c8 <col:29> 'int' 1
    |-BinaryOperator 0x123142ae0 <line:17:2, col:23> 'int' contains-errors '='
    | |-DeclRefExpr 0x1231429d0 <col:2> 'int' lvalue Var 0x123141c30 'len' 'int'
    | `-BinaryOperator 0x123142ac0 <col:8, col:23> '<dependent type>' contains-errors '-'
    |   |-CallExpr 0x123142a78 <col:8, col:19> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1231429f0 <col:8> 'int ()' Function 0x123142668 'ntohs' 'int ()'
    |   | `-CXXDependentScopeMemberExpr 0x123142a30 <col:14, col:16> '<dependent type>' contains-errors lvalue .len
    |   |   `-RecoveryExpr 0x123142a10 <col:14> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x123142aa0 <col:23> 'int' 4
    |-CallExpr 0x123142c88 <line:18:2, col:22> 'int'
    | |-ImplicitCastExpr 0x123142c70 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x123142be0 <col:2> 'int ()' Function 0x123142b28 'ND_TCHECK2' 'int ()'
    | |-ImplicitCastExpr 0x123142cd0 <col:13, col:14> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x123142cb8 <col:13, col:14> 'char' <LValueToRValue>
    | |   `-UnaryOperator 0x123142c38 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x123142c20 <col:14> 'const char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x123142c00 <col:14> 'const char *' lvalue Var 0x123141b18 'vid' 'const char *'
    | `-ImplicitCastExpr 0x123142ce8 <col:19> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x123142c50 <col:19> 'int' lvalue Var 0x123141c30 'len' 'int'
    |-ForStmt 0x1231432b0 <line:19:2, line:22:2>
    | |-BinaryOperator 0x123142d40 <line:19:6, col:8> 'int' '='
    | | |-DeclRefExpr 0x123142d00 <col:6> 'int' lvalue Var 0x123141bb0 'i' 'int'
    | | `-IntegerLiteral 0x123142d20 <col:8> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x123142dd0 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x123142da0 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x123142d60 <col:11> 'int' lvalue Var 0x123141bb0 'i' 'int'
    | | `-ImplicitCastExpr 0x123142db8 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x123142d80 <col:13> 'int' lvalue Var 0x123141c30 'len' 'int'
    | |-UnaryOperator 0x123142e10 <col:18, col:19> 'int' postfix '++'
    | | `-DeclRefExpr 0x123142df0 <col:18> 'int' lvalue Var 0x123141bb0 'i' 'int'
    | `-CompoundStmt 0x123143298 <col:23, line:22:2>
    |   `-IfStmt 0x123143268 <line:20:3, line:21:29> has_else
    |     |-CallExpr 0x123142fd0 <line:20:6, col:23> 'int'
    |     | |-ImplicitCastExpr 0x123142fb8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x123142f08 <col:6> 'int ()' Function 0x123142e50 'ND_ISPRINT' 'int ()'
    |     | `-ImplicitCastExpr 0x123143010 <col:17, col:22> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x123142ff8 <col:17, col:22> 'char' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x123142f98 <col:17, col:22> 'const char' lvalue
    |     |       |-ImplicitCastExpr 0x123142f68 <col:17> 'const char *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x123142f28 <col:17> 'const char *' lvalue Var 0x123141b18 'vid' 'const char *'
    |     |       `-ImplicitCastExpr 0x123142f80 <col:21> 'int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x123142f48 <col:21> 'int' lvalue Var 0x123141bb0 'i' 'int'
    |     |-CallExpr 0x123143178 <col:26, col:55> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x123143028 <col:26> 'int ()' Function 0x1231424c8 'ND_PRINT' 'int ()'
    |     | `-ParenExpr 0x123143158 <col:35, col:54> 'const char' contains-errors
    |     |   `-BinaryOperator 0x123143138 <col:36, col:53> 'const char' contains-errors ','
    |     |     |-BinaryOperator 0x123143088 <col:36, col:41> 'char[4]' contains-errors ','
    |     |     | |-RecoveryExpr 0x123143048 <col:36> '<dependent type>' contains-errors lvalue
    |     |     | `-StringLiteral 0x123143068 <col:41> 'char[4]' lvalue "STR"
    |     |     `-ArraySubscriptExpr 0x123143118 <col:48, col:53> 'const char' lvalue
    |     |       |-ImplicitCastExpr 0x1231430e8 <col:48> 'const char *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x1231430a8 <col:48> 'const char *' lvalue Var 0x123141b18 'vid' 'const char *'
    |     |       `-ImplicitCastExpr 0x123143100 <col:52> 'int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x1231430c8 <col:52> 'int' lvalue Var 0x123141bb0 'i' 'int'
    |     `-CallExpr 0x123143240 <line:21:8, col:29> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1231431a0 <col:8> 'int ()' Function 0x1231424c8 'ND_PRINT' 'int ()'
    |       `-ParenExpr 0x123143220 <col:17, col:28> 'char[4]' contains-errors
    |         `-BinaryOperator 0x123143200 <col:18, col:23> 'char[4]' contains-errors ','
    |           |-RecoveryExpr 0x1231431c0 <col:18> '<dependent type>' contains-errors lvalue
    |           `-StringLiteral 0x1231431e0 <col:23> 'char[4]' lvalue "STR"
    |-IfStmt 0x1231437c8 <line:23:2, line:27:2>
    | |-BinaryOperator 0x123143408 <line:23:6, col:32> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x123143370 <col:6, col:15> 'int' contains-errors '<'
    | | | |-IntegerLiteral 0x1231432e8 <col:6> 'int' 2
    | | | `-CXXDependentScopeMemberExpr 0x123143328 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | |   `-RecoveryExpr 0x123143308 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1231433e8 <col:28, col:32> 'int' '<'
    | |   |-IntegerLiteral 0x123143390 <col:28> 'int' 4
    | |   `-ImplicitCastExpr 0x1231433d0 <col:32> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1231433b0 <col:32> 'int' lvalue Var 0x123141c30 'len' 'int'
    | `-CompoundStmt 0x1231437a8 <col:37, line:27:2>
    |   |-CallExpr 0x1231434c8 <line:24:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x123143428 <col:3> 'int ()' Function 0x1231424c8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1231434a8 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x123143488 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x123143448 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x123143468 <col:17> 'char[4]' lvalue "STR"
    |   `-IfStmt 0x123143788 <line:25:3, line:26:9>
    |     |-RecoveryExpr 0x123143700 <line:25:7, col:66> '_Bool' contains-errors
    |     `-GotoStmt 0x123143770 <line:26:4, col:9> 'trunc' 0x123143720
    `-LabelStmt 0x123144f98 <line:29:1, line:30:35> 'trunc'
      `-CallExpr 0x123144f70 <col:2, col:35> '<dependent type>' contains-errors
        |-DeclRefExpr 0x123144e00 <col:2> 'int ()' Function 0x1231424c8 'ND_PRINT' 'int ()'
        `-ParenExpr 0x123144f50 <col:11, col:34> 'int' contains-errors
          `-BinaryOperator 0x123144f30 <col:12, col:33> 'int' contains-errors ','
            |-BinaryOperator 0x123144e60 <col:12, col:16> 'char[4]' contains-errors ','
            | |-RecoveryExpr 0x123144e20 <col:12> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x123144e40 <col:16> 'char[4]' lvalue "STR"
            `-CallExpr 0x123144ed8 <col:23, col:33> 'int'
              |-ImplicitCastExpr 0x123144ec0 <col:23> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x123144e80 <col:23> 'int ()' Function 0x123142298 'NPSTR' 'int ()'
              `-ImplicitCastExpr 0x123144f18 <col:29> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x123144f00 <col:29> 'char' <LValueToRValue>
                  `-DeclRefExpr 0x123144ea0 <col:29> 'char' lvalue ParmVar 0x1231281a0 'tpay' 'char'
