`-FunctionDecl 0x15c144d28  line:1:5 __sys_connect_file 'int (struct file *, struct sockaddr)'
  |-ParmVarDecl 0x15c128648 <col:24, col:37> col:37 used file 'struct file *'
  |-ParmVarDecl 0x15c144c00 <col:43, col:59> col:59 invalid __user 'struct sockaddr'
  `-CompoundStmt 0x15c148658 <line:3:1, line:24:1>
    |-DeclStmt 0x15c145018 <line:4:2, col:21>
    | |-RecordDecl 0x15c144e28 <col:2, col:9> col:9 struct socket
    | `-VarDecl 0x15c144f98 <col:2, col:17> col:17 used sock 'struct socket *'
    |-DeclStmt 0x15c1451a8 <line:5:2, col:33>
    | |-RecordDecl 0x15c145030 <col:2, col:9> col:9 struct sockaddr_storage
    | `-VarDecl 0x15c145128 <col:2, col:26> col:26 referenced invalid address 'struct sockaddr_storage'
    |-DeclStmt 0x15c145240 <line:6:2, col:9>
    | `-VarDecl 0x15c1451d8 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x15c1454f8 <line:8:2, col:34> 'struct socket *' '='
    | |-DeclRefExpr 0x15c145258 <col:2> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    | `-ImplicitCastExpr 0x15c1454e0 <col:9, col:34> 'struct socket *' <IntegralToPointer>
    |   `-CallExpr 0x15c145498 <col:9, col:34> 'int'
    |     |-ImplicitCastExpr 0x15c145480 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15c1453a0 <col:9> 'int ()' Function 0x15c1452e8 'sock_from_file' 'int ()'
    |     |-ImplicitCastExpr 0x15c1454c8 <col:24> 'struct file *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15c1453c0 <col:24> 'struct file *' lvalue ParmVar 0x15c128648 'file' 'struct file *'
    |     `-UnaryOperator 0x15c145430 <col:30, col:31> 'int *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x15c1453e0 <col:31> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    |-IfStmt 0x15c1455d0 <line:9:2, line:10:8>
    | |-UnaryOperator 0x15c145550 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15c145538 <col:7> 'struct socket *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15c145518 <col:7> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    | `-GotoStmt 0x15c1455b8 <line:10:3, col:8> 'out' 0x15c145568
    |-BinaryOperator 0x15c145848 <line:11:2, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c1455f0 <col:2> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    | `-CallExpr 0x15c145810 <col:8, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c1456f0 <col:8> 'int ()' Function 0x15c145638 'move_addr_to_kernel' 'int ()'
    |   |-RecoveryExpr 0x15c1457d0 <col:28> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x15c1457f0 <col:39> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x15c145760 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x15c145740 <col:49> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c1458f8 <line:12:2, line:13:8>
    | |-BinaryOperator 0x15c1458c0 <line:12:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x15c1458a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15c145868 <col:6> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    | | `-IntegerLiteral 0x15c145888 <col:12> 'int' 0
    | `-GotoStmt 0x15c1458e0 <line:13:3, col:8> 'out' 0x15c145568
    |-BinaryOperator 0x15c148118 <line:15:2, line:16:72> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c145918 <line:15:2> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    | `-CallExpr 0x15c1480e0 <line:16:6, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c145a18 <col:6> 'int ()' Function 0x15c145960 'security_socket_connect' 'int ()'
    |   |-DeclRefExpr 0x15c145a38 <col:30> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    |   |-CStyleCastExpr 0x15c148098 <col:36, col:56> 'struct sockaddr *' contains-errors <Dependent>
    |   | `-UnaryOperator 0x15c145a78 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x15c145a58 <col:56> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x15c1480c0 <col:65> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c148188 <line:17:2, line:18:8>
    | |-ImplicitCastExpr 0x15c148158 <line:17:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15c148138 <col:6> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    | `-GotoStmt 0x15c148170 <line:18:3, col:8> 'out' 0x15c145568
    |-BinaryOperator 0x15c1485d0 <line:20:2, line:21:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c1481a8 <line:20:2> 'int' lvalue Var 0x15c1451d8 'err' 'int'
    | `-CallExpr 0x15c148590 <col:8, line:21:38> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x15c148228 <line:20:8, col:19> '<dependent type>' contains-errors lvalue ->connect
    |   | `-RecoveryExpr 0x15c148200 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15c1481c8 <col:8> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    |   |-DeclRefExpr 0x15c148270 <col:27> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    |   |-CStyleCastExpr 0x15c148508 <col:33, col:53> 'struct sockaddr *' contains-errors <Dependent>
    |   | `-UnaryOperator 0x15c1482b0 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x15c148290 <col:53> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x15c148530 <col:62> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x15c148570 <line:21:6, col:28> '<dependent type>' contains-errors '|'
    |     |-CXXDependentScopeMemberExpr 0x15c148390 <col:6, col:18> '<dependent type>' contains-errors lvalue ->f_flags
    |     | `-RecoveryExpr 0x15c148368 <col:6, col:12> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x15c148330 <col:6> 'struct socket *' lvalue Var 0x15c144f98 'sock' 'struct socket *'
    |     `-RecoveryExpr 0x15c148550 <col:28> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x15c148638 <line:22:1, line:23:9> 'out'
      `-ReturnStmt 0x15c148628 <col:2, col:9>
        `-ImplicitCastExpr 0x15c148610 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x15c1485f0 <col:9> 'int' lvalue Var 0x15c1451d8 'err' 'int'
