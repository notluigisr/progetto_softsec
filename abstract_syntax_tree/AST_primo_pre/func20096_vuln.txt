`-FunctionDecl 0x15600df10  line:1:6 invalid cJSON_ReplaceItemInArray 'void (int *, int, int *)'
  |-ParmVarDecl 0x15600dd28 <col:32, col:39> col:39 referenced invalid array 'int *'
  |-ParmVarDecl 0x15600dda8 <col:46, col:50> col:50 used which 'int'
  |-ParmVarDecl 0x15600de28 <col:57, col:64> col:64 referenced invalid newitem 'int *'
  `-CompoundStmt 0x156028178 <line:2:1, line:20:1>
    |-WhileStmt 0x15600e228 <line:4:2, line:7:2>
    | |-BinaryOperator 0x15600e158 <line:4:10, col:23> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x15600e100 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x15600e138 <col:15, col:23> 'int' '>'
    | |   |-ImplicitCastExpr 0x15600e120 <col:15> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15600e068 <col:15> 'int' lvalue ParmVar 0x15600dda8 'which' 'int'
    | |   `-IntegerLiteral 0x15600e088 <col:23> 'int' 0
    | `-CompoundStmt 0x15600e210 <col:27, line:7:2>
    |   `-UnaryOperator 0x15600e1f8 <line:6:3, col:5> 'int' prefix '--'
    |     `-DeclRefExpr 0x15600e1d8 <col:5> 'int' lvalue ParmVar 0x15600dda8 'which' 'int'
    |-IfStmt 0x15600e2f0 <line:8:2, line:9:3>
    | |-UnaryOperator 0x15600e2c8 <line:8:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15600e2b0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15600e290 <col:9> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15600e2e0 <line:9:3>
    |-BinaryOperator 0x156027888 <line:10:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15600e358 <col:2, col:11> '<dependent type>' contains-errors lvalue ->next
    | | `-RecoveryExpr 0x15600e330 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15600e310 <col:2> 'int *' lvalue ParmVar 0x15600de28 'newitem' 'int *'
    | `-CXXDependentScopeMemberExpr 0x156027840 <col:18, col:21> '<dependent type>' contains-errors lvalue ->next
    |   `-RecoveryExpr 0x156027820 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x156027a20 <line:11:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1560278f0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->prev
    | | `-RecoveryExpr 0x1560278c8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1560278a8 <col:2> 'int *' lvalue ParmVar 0x15600de28 'newitem' 'int *'
    | `-CXXDependentScopeMemberExpr 0x1560279d8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->prev
    |   `-RecoveryExpr 0x1560279b8 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156027bc0 <line:12:2, line:13:25>
    | |-CXXDependentScopeMemberExpr 0x156027a60 <line:12:7, col:16> '<dependent type>' contains-errors lvalue ->next
    | | `-RecoveryExpr 0x156027a40 <col:7> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x156027ba0 <line:13:3, col:25> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x156027b38 <col:3, col:18> '<dependent type>' contains-errors lvalue ->prev
    |   | `-CXXDependentScopeMemberExpr 0x156027af0 <col:3, col:12> '<dependent type>' contains-errors lvalue ->next
    |   |   `-RecoveryExpr 0x156027ac8 <col:3> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x156027aa8 <col:3> 'int *' lvalue ParmVar 0x15600de28 'newitem' 'int *'
    |   `-RecoveryExpr 0x156027b80 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156027ea8 <line:14:2, line:17:25> has_else
    | |-BinaryOperator 0x156027ca0 <line:14:7, col:19> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x156027c80 <col:7> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x156027c18 <col:12, col:19> '<dependent type>' contains-errors lvalue ->child
    | |   `-RecoveryExpr 0x156027bf8 <col:12> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x156027d70 <line:15:3, col:18> '<dependent type>' contains-errors '='
    | | |-CXXDependentScopeMemberExpr 0x156027d08 <col:3, col:10> '<dependent type>' contains-errors lvalue ->child
    | | | `-RecoveryExpr 0x156027ce0 <col:3> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x156027cc0 <col:3> 'int *' lvalue ParmVar 0x15600dd28 'array' 'int *'
    | | `-RecoveryExpr 0x156027d50 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x156027e88 <line:17:3, col:25> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x156027e20 <col:3, col:18> '<dependent type>' contains-errors lvalue ->next
    |   | `-CXXDependentScopeMemberExpr 0x156027dd8 <col:3, col:12> '<dependent type>' contains-errors lvalue ->prev
    |   |   `-RecoveryExpr 0x156027db0 <col:3> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x156027d90 <col:3> 'int *' lvalue ParmVar 0x15600de28 'newitem' 'int *'
    |   `-RecoveryExpr 0x156027e68 <col:25> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x156028150 <line:19:2, col:18> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1560280d0 <col:2> 'int ()' Function 0x156028018 'cJSON_Delete' 'int ()'
      `-RecoveryExpr 0x156028130 <col:16> '<dependent type>' contains-errors lvalue
