`-FunctionDecl 0x1489284c0  line:1:13 invalid huffman_decode_row 'void (int *, int *, int, int, int, int *)' static
  |-ParmVarDecl 0x148928128 <col:32, col:44> col:44 invalid I 'int *'
  |-ParmVarDecl 0x1489281a8 <col:47, col:70> col:70 referenced invalid DE 'int *'
  |-ParmVarDecl 0x148928228 <line:2:32, col:36> col:36 bits 'int'
  |-ParmVarDecl 0x1489282a8 <col:42, col:46> col:46 used row 'int'
  |-ParmVarDecl 0x148928328 <col:51, col:55> col:55 offset 'int'
  |-ParmVarDecl 0x1489283a8 <col:63, col:68> col:68 used minimum 'int *'
  `-CompoundStmt 0x148942318 <line:3:1, line:50:1>
    |-DeclStmt 0x148941868 <line:9:3, col:10>
    | `-VarDecl 0x148941800 <col:3, col:7> col:7 used col 'int'
    `-ForStmt 0x1489422e0 <line:14:3, line:49:3>
      |-BinaryOperator 0x148941a88 <line:14:8, col:14> 'int' '='
      | |-DeclRefExpr 0x148941a48 <col:8> 'int' lvalue Var 0x148941800 'col' 'int'
      | `-IntegerLiteral 0x148941a68 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x148941bb0 <col:17, col:27> 'int' contains-errors '<'
      | |-DeclRefExpr 0x148941aa8 <col:17> 'int' lvalue Var 0x148941800 'col' 'int'
      | `-CXXDependentScopeMemberExpr 0x148941b68 <col:23, col:27> '<dependent type>' contains-errors lvalue ->columns
      |   `-RecoveryExpr 0x148941b48 <col:23> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x148941bf0 <col:36, col:39> 'int' postfix '++'
      | `-DeclRefExpr 0x148941bd0 <col:36> 'int' lvalue Var 0x148941800 'col' 'int'
      `-CompoundStmt 0x1489422c0 <line:15:3, line:49:3>
        |-DeclStmt 0x148941c88 <line:16:5, col:14>
        | `-VarDecl 0x148941c20 <col:5, col:9> col:9 used color 'int'
        `-ForStmt 0x148942288 <line:18:5, line:48:5>
          |-BinaryOperator 0x148941ce0 <line:18:10, col:18> 'int' '='
          | |-DeclRefExpr 0x148941ca0 <col:10> 'int' lvalue Var 0x148941c20 'color' 'int'
          | `-IntegerLiteral 0x148941cc0 <col:18> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x148941d58 <col:21, col:29> 'int' '<'
          | |-ImplicitCastExpr 0x148941d40 <col:21> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x148941d00 <col:21> 'int' lvalue Var 0x148941c20 'color' 'int'
          | `-IntegerLiteral 0x148941d20 <col:29> 'int' 3
          |-UnaryOperator 0x148941d98 <col:32, col:37> 'int' postfix '++'
          | `-DeclRefExpr 0x148941d78 <col:32> 'int' lvalue Var 0x148941c20 'color' 'int'
          `-CompoundStmt 0x148942268 <line:19:5, line:48:5>
            |-IfStmt 0x148942090 <line:23:7, line:32:7> has_else
            | |-RecoveryExpr 0x148941f10 <line:23:11, col:22> '_Bool' contains-errors
            | |-CompoundStmt 0x148942050 <line:24:7, line:28:7>
            | `-CompoundStmt 0x148942080 <line:30:7, line:32:7>
            `-SwitchStmt 0x1489420e0 <line:34:7, line:47:7>
              |-RecoveryExpr 0x1489420c0 <line:34:15, col:19> 'int' contains-errors
              `-CompoundStmt 0x148942240 <line:35:7, line:47:7>
                |-BreakStmt 0x148942188 <line:40:9>
                |-BreakStmt 0x148942210 <line:43:9>
                `-DefaultStmt 0x148942220 <line:44:7, col:14>
                  `-NullStmt 0x148942218 <col:14>
