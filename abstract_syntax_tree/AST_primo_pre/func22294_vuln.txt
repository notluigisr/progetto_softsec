`-FunctionDecl 0x15c128268  line:1:5 main 'int (int, char **)'
  |-ParmVarDecl 0x15c1280d8 <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl 0x15c128188 <col:20, col:27> col:27 used argv 'char **'
  `-CompoundStmt 0x15c809050 <line:2:1, line:40:1>
    |-DeclStmt 0x15c1283e8 <line:3:5, col:11>
    | `-VarDecl 0x15c128380 <col:5, col:9> col:9 used fd 'int'
    |-DeclStmt 0x15c128480 <line:4:5, col:12>
    | `-VarDecl 0x15c128418 <col:5, col:9> col:9 used ret 'int'
    |-BinaryOperator 0x15c1286a8 <line:7:5, col:28> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c128498 <col:5> 'int' lvalue Var 0x15c128380 'fd' 'int'
    | `-CallExpr 0x15c128680 <col:10, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c1285e0 <col:10> 'int ()' Function 0x15c128528 'mkstemp' 'int ()'
    |   `-RecoveryExpr 0x15c128660 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c1418a8 <line:8:5, col:21> 'int'
    | |-ImplicitCastExpr 0x15c141890 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15c1287a8 <col:5> 'int ()' Function 0x15c1286f0 'g_assert' 'int ()'
    | `-BinaryOperator 0x15c141838 <col:14, col:20> 'int' '>='
    |   |-ImplicitCastExpr 0x15c141820 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15c1287c8 <col:14> 'int' lvalue Var 0x15c128380 'fd' 'int'
    |   `-IntegerLiteral 0x15c141800 <col:20> 'int' 0
    |-BinaryOperator 0x15c141ac8 <line:9:5, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x15c1418d0 <col:5> 'int' lvalue Var 0x15c128418 'ret' 'int'
    | `-CallExpr 0x15c141a98 <col:11, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c1419d0 <col:11> 'int ()' Function 0x15c141918 'ftruncate' 'int ()'
    |   |-DeclRefExpr 0x15c1419f0 <col:21> 'int' lvalue Var 0x15c128380 'fd' 'int'
    |   `-RecoveryExpr 0x15c141a78 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c141b98 <line:10:5, col:22> 'int'
    | |-ImplicitCastExpr 0x15c141b80 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15c141ae8 <col:5> 'int ()' Function 0x15c1286f0 'g_assert' 'int ()'
    | `-BinaryOperator 0x15c141b60 <col:14, col:21> 'int' '=='
    |   |-ImplicitCastExpr 0x15c141b48 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15c141b08 <col:14> 'int' lvalue Var 0x15c128418 'ret' 'int'
    |   `-IntegerLiteral 0x15c141b28 <col:21> 'int' 0
    |-CallExpr 0x15c141cf8 <line:11:5, col:13> 'int'
    | |-ImplicitCastExpr 0x15c141ce0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15c141ca0 <col:5> 'int ()' Function 0x15c141be8 'close' 'int ()'
    | `-ImplicitCastExpr 0x15c141d20 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x15c141cc0 <col:11> 'int' lvalue Var 0x15c128380 'fd' 'int'
    |-CallExpr 0x15c141f88 <line:14:5, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c141e18 <col:5> 'int ()' Function 0x15c141d60 'g_test_init' 'int ()'
    | |-UnaryOperator 0x15c141e90 <col:17, col:18> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x15c141e38 <col:18> 'int' lvalue ParmVar 0x15c1280d8 'argc' 'int'
    | |-UnaryOperator 0x15c141f00 <col:24, col:25> 'char ***' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x15c141ea8 <col:25> 'char **' lvalue ParmVar 0x15c128188 'argv' 'char **'
    | `-RecoveryExpr 0x15c141f68 <col:31> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c142138 <line:16:5, col:22> 'int'
    | |-ImplicitCastExpr 0x15c142120 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15c1420a0 <col:5> 'int ()' Function 0x15c141fe8 'qtest_start' 'int ()'
    | `-ImplicitCastExpr 0x15c142160 <col:17> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x15c142100 <col:17> 'char[4]' lvalue "STR"
    |-CallExpr 0x15c142300 <line:17:5, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c142258 <col:5> 'int ()' Function 0x15c1421a0 'qtest_irq_intercept_in' 'int ()'
    | |-RecoveryExpr 0x15c1422e0 <col:28> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x15c142290 <col:42> 'char[4]' lvalue "STR"
    |-CallExpr 0x15c1424b8 <line:18:5, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c142410 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c142430 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c142498 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c142590 <line:19:5, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c1424e8 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c142508 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c142570 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c142668 <line:20:5, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c1425c0 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c1425e0 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c142648 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c142740 <line:21:5, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c142698 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c1426b8 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c142720 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c808820 <line:22:5, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c142770 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c142790 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c808800 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c8088f8 <line:23:5, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c808850 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c808870 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c8088d8 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c8089d0 <line:24:5, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c808928 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c808948 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c8089b0 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15c808aa8 <line:25:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15c808a00 <col:5> 'int ()' Function 0x15c142358 'qtest_add_func' 'int ()'
    | |-StringLiteral 0x15c808a20 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x15c808a88 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15c808db0 <line:33:5, col:22> 'int' '='
    | |-DeclRefExpr 0x15c808c58 <col:5> 'int' lvalue Var 0x15c128418 'ret' 'int'
    | `-CallExpr 0x15c808d90 <col:11, col:22> 'int'
    |   `-ImplicitCastExpr 0x15c808d78 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x15c808d58 <col:11> 'int ()' Function 0x15c808ca0 'g_test_run' 'int ()'
    |-CallExpr 0x15c808ee8 <line:36:5, col:15> 'int'
    | `-ImplicitCastExpr 0x15c808ed0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15c808eb0 <col:5> 'int ()' Function 0x15c808df8 'qtest_end' 'int ()'
    `-ReturnStmt 0x15c809040 <line:39:5, col:12>
      `-ImplicitCastExpr 0x15c809028 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15c809008 <col:12> 'int' lvalue Var 0x15c128418 'ret' 'int'
