`-FunctionDecl 0x15280de58  line:1:21 encode_twos_comp 'long (long, int)' static inline
  |-ParmVarDecl 0x15280dcf0 <col:38, col:43> col:43 used n 'long'
  |-ParmVarDecl 0x15280dd70 <col:46, col:50> col:50 used prec 'int'
  `-CompoundStmt 0x1528288d0 <line:2:1, line:15:1>
    |-DeclStmt 0x15280dfd8 <line:3:2, col:14>
    | `-VarDecl 0x15280df70 <col:2, col:8> col:8 used result 'long'
    |-CallExpr 0x15280e1e8 <line:4:2, col:18> 'int'
    | |-ImplicitCastExpr 0x15280e1d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15280e100 <col:2> 'int ()' Function 0x15280e048 'assert' 'int ()'
    | `-BinaryOperator 0x15280e178 <col:9, col:17> 'int' '>='
    |   |-ImplicitCastExpr 0x15280e160 <col:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15280e120 <col:9> 'int' lvalue ParmVar 0x15280dd70 'prec' 'int'
    |   `-IntegerLiteral 0x15280e140 <col:17> 'int' 2
    |-CallExpr 0x15280e388 <line:5:2, col:19> 'int'
    | |-ImplicitCastExpr 0x15280e370 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15280e2f0 <col:2> 'int ()' Function 0x15280e238 'jas_eprintf' 'int ()'
    | `-ImplicitCastExpr 0x15280e3b0 <col:14> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x15280e350 <col:14> 'char[4]' lvalue "STR"
    |-IfStmt 0x152828858 <line:7:2, line:13:2> has_else
    | |-BinaryOperator 0x152828450 <line:7:6, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x152828420 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x15280e3c8 <col:6> 'long' lvalue ParmVar 0x15280dcf0 'n' 'long'
    | | `-ImplicitCastExpr 0x152828438 <col:10> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x152828400 <col:10> 'int' 0
    | |-CompoundStmt 0x1528287a0 <col:13, line:11:2>
    | | |-BinaryOperator 0x1528284e0 <line:8:3, col:13> 'long' '='
    | | | |-DeclRefExpr 0x152828470 <col:3> 'long' lvalue Var 0x15280df70 'result' 'long'
    | | | `-UnaryOperator 0x1528284c8 <col:12, col:13> 'long' prefix '-'
    | | |   `-ImplicitCastExpr 0x1528284b0 <col:13> 'long' <LValueToRValue>
    | | |     `-DeclRefExpr 0x152828490 <col:13> 'long' lvalue ParmVar 0x15280dcf0 'n' 'long'
    | | |-BinaryOperator 0x152828640 <line:9:3, col:38> 'long' '='
    | | | |-DeclRefExpr 0x152828500 <col:3> 'long' lvalue Var 0x15280df70 'result' 'long'
    | | | `-ImplicitCastExpr 0x152828628 <col:12, col:38> 'long' <IntegralCast>
    | | |   `-BinaryOperator 0x152828608 <col:12, col:38> 'unsigned long' '+'
    | | |     |-ParenExpr 0x1528285b0 <col:12, col:34> 'unsigned long'
    | | |     | `-BinaryOperator 0x152828590 <col:13, col:22> 'unsigned long' '^'
    | | |     |   |-ImplicitCastExpr 0x152828578 <col:13> 'unsigned long' <IntegralCast>
    | | |     |   | `-ImplicitCastExpr 0x152828560 <col:13> 'long' <LValueToRValue>
    | | |     |   |   `-DeclRefExpr 0x152828520 <col:13> 'long' lvalue Var 0x15280df70 'result' 'long'
    | | |     |   `-IntegerLiteral 0x152828540 <col:22> 'unsigned long' 4294967295
    | | |     `-ImplicitCastExpr 0x1528285f0 <col:38> 'unsigned long' <IntegralCast>
    | | |       `-IntegerLiteral 0x1528285d0 <col:38> 'int' 1
    | | `-CompoundAssignOperator 0x152828770 <line:10:3, col:27> 'long' '&=' ComputeLHSTy='long' ComputeResultTy='long'
    | |   |-DeclRefExpr 0x152828660 <col:3> 'long' lvalue Var 0x15280df70 'result' 'long'
    | |   `-ImplicitCastExpr 0x152828758 <col:13, col:27> 'long' <IntegralCast>
    | |     `-BinaryOperator 0x152828738 <col:13, col:27> 'int' '-'
    | |       |-ParenExpr 0x1528286f8 <col:13, col:23> 'int'
    | |       | `-BinaryOperator 0x1528286d8 <col:14, col:19> 'int' '<<'
    | |       |   |-IntegerLiteral 0x152828680 <col:14> 'int' 1
    | |       |   `-ImplicitCastExpr 0x1528286c0 <col:19> 'int' <LValueToRValue>
    | |       |     `-DeclRefExpr 0x1528286a0 <col:19> 'int' lvalue ParmVar 0x15280dd70 'prec' 'int'
    | |       `-IntegerLiteral 0x152828718 <col:27> 'int' 1
    | `-CompoundStmt 0x152828840 <line:11:9, line:13:2>
    |   `-BinaryOperator 0x152828820 <line:12:3, col:12> 'long' '='
    |     |-DeclRefExpr 0x1528287c8 <col:3> 'long' lvalue Var 0x15280df70 'result' 'long'
    |     `-ImplicitCastExpr 0x152828808 <col:12> 'long' <LValueToRValue>
    |       `-DeclRefExpr 0x1528287e8 <col:12> 'long' lvalue ParmVar 0x15280dcf0 'n' 'long'
    `-ReturnStmt 0x1528288c0 <line:14:2, col:9>
      `-ImplicitCastExpr 0x1528288a8 <col:9> 'long' <LValueToRValue>
        `-DeclRefExpr 0x152828888 <col:9> 'long' lvalue Var 0x15280df70 'result' 'long'
