`-FunctionDecl 0x14d0275e8  line:1:12 invalid sas_configure_parent 'int (struct domain_device *, struct domain_device *, int *, int)' static
  |-ParmVarDecl 0x14d00e248 <col:33, col:55> col:55 used parent 'struct domain_device *'
  |-ParmVarDecl 0x14d00e338 <line:2:5, col:27> col:27 used child 'struct domain_device *'
  |-ParmVarDecl 0x14d027418 <line:3:5, col:9> col:9 invalid sas_addr 'int *'
  |-ParmVarDecl 0x14d027498 <col:19, col:23> col:23 used include 'int'
  `-CompoundStmt 0x14d0297a0 <line:4:1, line:35:1>
    |-DeclStmt 0x14d027910 <line:5:2, col:53>
    | |-RecordDecl 0x14d0276b0 <col:2, col:9> col:9 struct expander_device
    | `-VarDecl 0x14d027818 <col:2, col:47> col:26 used ex_parent 'struct expander_device *' cinit
    |   `-UnaryOperator 0x14d0278e0 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14d0278b8 <col:39, col:47> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14d027880 <col:39> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    |-DeclStmt 0x14d0279c8 <line:6:2, col:13>
    | `-VarDecl 0x14d027940 <col:2, col:12> col:6 used res 'int' cinit
    |   `-IntegerLiteral 0x14d0279a8 <col:12> 'int' 0
    |-DeclStmt 0x14d027a60 <line:7:2, col:7>
    | `-VarDecl 0x14d0279f8 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x14d027cf8 <line:9:2, line:14:2>
    | |-RecoveryExpr 0x14d027ab0 <line:9:6, col:14> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d027a78 <col:6> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    | `-CompoundStmt 0x14d027cd8 <col:22, line:14:2>
    |   |-BinaryOperator 0x14d027c18 <line:10:3, line:11:16> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14d027ad8 <line:10:3> 'int' lvalue Var 0x14d027940 'res' 'int'
    |   | `-CallExpr 0x14d027bd8 <col:9, line:11:16> '<dependent type>' contains-errors
    |   |   |-RecoveryExpr 0x14d027af8 <line:10:9> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d027b50 <col:30, col:38> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14d027b18 <col:30> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    |   |   |-DeclRefExpr 0x14d027b78 <col:46> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    |   |   |-RecoveryExpr 0x14d027b98 <col:54> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14d027bb8 <line:11:9> 'int' lvalue ParmVar 0x14d027498 'include' 'int'
    |   `-IfStmt 0x14d027cb8 <line:12:3, line:13:11>
    |     |-ImplicitCastExpr 0x14d027c58 <line:12:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x14d027c38 <col:7> 'int' lvalue Var 0x14d027940 'res' 'int'
    |     `-ReturnStmt 0x14d027ca8 <line:13:4, col:11>
    |       `-ImplicitCastExpr 0x14d027c90 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x14d027c70 <col:11> 'int' lvalue Var 0x14d027940 'res' 'int'
    |-IfStmt 0x14d028198 <line:16:2, line:20:2>
    | |-BinaryOperator 0x14d027d98 <line:16:6, col:37> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14d027d50 <col:6, col:17> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14d027d18 <col:6> 'struct expander_device *' contains-errors lvalue Var 0x14d027818 'ex_parent' 'struct expander_device *'
    | | `-IntegerLiteral 0x14d027d78 <col:37> 'int' 0
    | `-CompoundStmt 0x14d028178 <col:40, line:20:2>
    |   |-CallExpr 0x14d028118 <line:17:3, line:18:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d027f10 <line:17:3> 'int ()' Function 0x14d027e58 'pr_debug' 'int ()'
    |   | |-StringLiteral 0x14d027f70 <col:12> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x14d0280f0 <line:18:5, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14d028070 <col:5> 'int ()' Function 0x14d027fb8 'SAS_ADDR' 'int ()'
    |   |   `-RecoveryExpr 0x14d0280c8 <col:14, col:22> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14d028090 <col:14> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    |   `-ReturnStmt 0x14d028168 <line:19:3, col:10>
    |     `-IntegerLiteral 0x14d028148 <col:10> 'int' 0
    |-ForStmt 0x14d029720 <line:22:2, line:32:2>
    | |-BinaryOperator 0x14d0281f8 <line:22:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x14d0281b8 <col:7> 'int' lvalue Var 0x14d0279f8 'i' 'int'
    | | `-IntegerLiteral 0x14d0281d8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d028298 <col:14, col:29> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d028218 <col:14> 'int' lvalue Var 0x14d0279f8 'i' 'int'
    | | `-RecoveryExpr 0x14d028270 <col:18, col:29> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d028238 <col:18> 'struct expander_device *' contains-errors lvalue Var 0x14d027818 'ex_parent' 'struct expander_device *'
    | |-UnaryOperator 0x14d0282d8 <col:39, col:40> 'int' postfix '++'
    | | `-DeclRefExpr 0x14d0282b8 <col:39> 'int' lvalue Var 0x14d0279f8 'i' 'int'
    | `-CompoundStmt 0x14d029700 <col:44, line:32:2>
    |   |-DeclStmt 0x14d0291c0 <line:23:3, col:45>
    |   | |-RecordDecl 0x14d0282f0 <col:3, col:10> col:10 struct ex_phy
    |   | `-VarDecl 0x14d029058 <col:3, col:44> col:18 used phy 'struct ex_phy *' cinit
    |   |   `-UnaryOperator 0x14d029190 <col:24, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x14d029170 <col:25, col:44> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x14d029140 <col:25, col:36> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x14d0290f8 <col:25, col:36> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x14d0290c0 <col:25> 'struct expander_device *' contains-errors lvalue Var 0x14d027818 'ex_parent' 'struct expander_device *'
    |   |       `-ImplicitCastExpr 0x14d029158 <col:43> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x14d029120 <col:43> 'int' lvalue Var 0x14d0279f8 'i' 'int'
    |   `-IfStmt 0x14d0296e0 <line:25:3, line:31:3>
    |     |-RecoveryExpr 0x14d029400 <line:25:7, line:27:33> '_Bool' contains-errors
    |     `-CompoundStmt 0x14d0296c0 <col:36, line:31:3>
    |       |-BinaryOperator 0x14d029600 <line:28:4, col:56> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x14d029420 <col:4> 'int' lvalue Var 0x14d027940 'res' 'int'
    |       | `-CallExpr 0x14d0295c0 <col:10, col:56> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x14d029520 <col:10> 'int ()' Function 0x14d029468 'sas_configure_phy' 'int ()'
    |       |   |-DeclRefExpr 0x14d029540 <col:28> 'struct domain_device *' lvalue ParmVar 0x14d00e248 'parent' 'struct domain_device *'
    |       |   |-DeclRefExpr 0x14d029560 <col:36> 'int' lvalue Var 0x14d0279f8 'i' 'int'
    |       |   |-RecoveryExpr 0x14d029580 <col:39> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14d0295a0 <col:49> 'int' lvalue ParmVar 0x14d027498 'include' 'int'
    |       `-IfStmt 0x14d0296a0 <line:29:4, line:30:12>
    |         |-ImplicitCastExpr 0x14d029640 <line:29:8> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x14d029620 <col:8> 'int' lvalue Var 0x14d027940 'res' 'int'
    |         `-ReturnStmt 0x14d029690 <line:30:5, col:12>
    |           `-ImplicitCastExpr 0x14d029678 <col:12> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x14d029658 <col:12> 'int' lvalue Var 0x14d027940 'res' 'int'
    `-ReturnStmt 0x14d029790 <line:34:2, col:9>
      `-ImplicitCastExpr 0x14d029778 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d029758 <col:9> 'int' lvalue Var 0x14d027940 'res' 'int'
