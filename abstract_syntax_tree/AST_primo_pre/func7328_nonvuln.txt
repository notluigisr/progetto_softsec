`-FunctionDecl 0x14480de38  line:1:1 TEST_P 'int (int, int)'
  |-ParmVarDecl 0x14480dd58 <col:8> col:8 Http2MetadataIntegrationTest 'int'
  |-ParmVarDecl 0x14480dcd8 <col:38> col:38 ProxyMultipleMetadata 'int'
  `-CompoundStmt 0x144124fc8 <col:61, line:36:2>
    |-CallExpr 0x14480e0c8 <line:2:3, col:14> 'int'
    | `-ImplicitCastExpr 0x14480e0b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14480e060 <col:3> 'int ()' Function 0x14480dfa8 'initialize' 'int ()'
    |-DeclStmt 0x1441243e8 <line:6:3, col:83>
    | `-VarDecl 0x144124200 <col:3, col:82> col:8 used response 'int' auto cinit
    |   `-CallExpr 0x1441243b8 <col:19, col:82> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x144124350 <col:19, col:34> '<dependent type>' contains-errors lvalue ->makeRequestWithBody
    |     | `-RecoveryExpr 0x144124330 <col:19> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x144124398 <col:54> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1441242e0 <col:80> 'int' 10
    |-CallExpr 0x144124518 <line:7:3, col:30> 'int'
    | `-ImplicitCastExpr 0x144124500 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1441244e0 <col:3> 'int ()' Function 0x144124428 'waitForNextUpstreamRequest' 'int ()'
    |-DeclStmt 0x1441245d8 <line:9:3, col:21>
    | `-VarDecl 0x144124550 <col:3, col:20> col:13 used size 'const int' cinit
    |   `-IntegerLiteral 0x1441245b8 <col:20> 'int' 4
    |-RecoveryExpr 0x144124620 <line:10:3> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x144124ac0 <line:11:3, line:17:3>
    | |-DeclStmt 0x1441246e0 <line:11:8, col:17>
    | | `-VarDecl 0x144124658 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x1441246c0 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x144124768 <col:19, col:23> 'int' '<'
    | | |-ImplicitCastExpr 0x144124738 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1441246f8 <col:19> 'int' lvalue Var 0x144124658 'i' 'int'
    | | `-ImplicitCastExpr 0x144124750 <col:23> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x144124718 <col:23> 'const int' lvalue Var 0x144124550 'size' 'const int'
    | |-UnaryOperator 0x144124800 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x1441247e0 <col:29> 'int' lvalue Var 0x144124658 'i' 'int'
    | `-CompoundStmt 0x144124aa0 <col:34, line:17:3>
    |   |-RecoveryExpr 0x144124848 <line:12:5> '<dependent type>' contains-errors lvalue
    |   `-DeclStmt 0x144124a68 <line:13:5, col:44>
    |     `-VarDecl 0x144124880 <col:5, col:40> col:9 value_size 'int' cinit
    |       `-BinaryOperator 0x144124a48 <col:22, col:40> '<dependent type>' contains-errors '%'
    |         |-CallExpr 0x144124a08 <col:22, col:36> '<dependent type>' contains-errors
    |         | `-CXXDependentScopeMemberExpr 0x1441249c0 <col:22, col:29> '<dependent type>' contains-errors lvalue .random
    |         |   `-RecoveryExpr 0x1441249a0 <col:22> '<dependent type>' contains-errors lvalue
    |         `-RecoveryExpr 0x144124a28 <col:40> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x144124c38 <line:28:3, col:30> '<dependent type>' contains-errors
    | `-RecoveryExpr 0x144124c10 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x144124bd8 <col:3> 'int' contains-errors lvalue Var 0x144124200 'response' 'int'
    |-CallExpr 0x144124dd8 <line:29:3, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x144124d38 <col:3> 'int ()' Function 0x144124c80 'ASSERT_TRUE' 'int ()'
    | `-CallExpr 0x144124db8 <col:15, col:34> '<dependent type>' contains-errors
    |   `-RecoveryExpr 0x144124d90 <col:15, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x144124d58 <col:15> 'int' contains-errors lvalue Var 0x144124200 'response' 'int'
    `-ForStmt 0x144124f90 <line:30:3, line:36:1>
      |-DeclStmt 0x144124ea0 <line:30:8, col:17>
      | `-VarDecl 0x144124e18 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x144124e80 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x144124f28 <col:19, col:23> 'int' '<'
      | |-ImplicitCastExpr 0x144124ef8 <col:19> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x144124eb8 <col:19> 'int' lvalue Var 0x144124e18 'i' 'int'
      | `-ImplicitCastExpr 0x144124f10 <col:23> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x144124ed8 <col:23> 'const int' lvalue Var 0x144124550 'size' 'const int'
      |-UnaryOperator 0x144124f68 <col:29, col:30> 'int' postfix '++'
      | `-DeclRefExpr 0x144124f48 <col:29> 'int' lvalue Var 0x144124e18 'i' 'int'
      `-CompoundStmt 0x144124f80 <col:34, line:36:1>
