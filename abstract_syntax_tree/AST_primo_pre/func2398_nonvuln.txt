`-FunctionDecl 0x12a00dda8  line:1:14 ec_pre_comp_dup 'void *(void *)' static
  |-ParmVarDecl 0x12a00dcd8 <col:30, col:36> col:36 used src_ 'void *'
  `-CompoundStmt 0x12a00e280 <line:2:1, line:10:1>
    |-CallExpr 0x12a00e200 <line:7:5, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a00e020 <col:5> 'int ()' Function 0x12a00df68 'CRYPTO_add' 'int ()'
    | |-UnaryOperator 0x12a00e1c8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12a00e180 <col:17, col:22> '<dependent type>' contains-errors lvalue ->references
    | |   `-RecoveryExpr 0x12a00e160 <col:17> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x12a00e0b8 <col:34> 'int' 1
    | `-RecoveryExpr 0x12a00e1e0 <col:37> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12a00e270 <line:9:5, col:12>
      `-ImplicitCastExpr 0x12a00e258 <col:12> 'void *' <LValueToRValue>
        `-DeclRefExpr 0x12a00e238 <col:12> 'void *' lvalue ParmVar 0x12a00dcd8 'src_' 'void *'
