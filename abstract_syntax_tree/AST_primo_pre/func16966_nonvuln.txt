`-FunctionDecl 0x131128318  line:1:16 invalid list_app_in_dir_for_cat 'int *(int *, int *, const char *)' static
  |-ParmVarDecl 0x131128128 <col:40, col:54> col:54 invalid dir 'int *'
  |-ParmVarDecl 0x1311281a8 <col:59, col:67> col:67 referenced invalid list 'int *'
  |-ParmVarDecl 0x131128228 <col:73, col:85> col:85 used id 'const char *'
  `-CompoundStmt 0x1311425a0 <line:2:1, line:29:1>
    |-DeclStmt 0x131128490 <line:3:5, col:21>
    | `-VarDecl 0x131128428 <col:5, col:18> col:18 used cat 'const char **'
    |-ForStmt 0x131142538 <line:6:5, line:27:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-RecoveryExpr 0x131128578 <line:6:29> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x1311286b8 <col:32, col:39> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x131128630 <col:32> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x131128670 <col:36, col:39> '<dependent type>' contains-errors lvalue ->next
    | |   `-RecoveryExpr 0x131128650 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x131142520 <line:7:5, line:27:5>
    |   `-SwitchStmt 0x131141a40 <line:9:9, line:26:9>
    |     |-CXXDependentScopeMemberExpr 0x1311419f8 <line:9:17, col:23> '<dependent type>' contains-errors lvalue ->type
    |     | `-RecoveryExpr 0x1311419d8 <col:17> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1311424e0 <line:10:9, line:26:9>
    |       |-CaseStmt 0x131141aa0 <line:11:9, line:12:74>
    |       | |-DeclRefExpr 0x131141a80 <line:11:14> 'int ()' Function 0x131141800 'MENU_CACHE_ITEM' 'int ()'
    |       | `-BinaryOperator 0x131141d88 <line:12:13, col:74> '<dependent type>' contains-errors '='
    |       |   |-RecoveryExpr 0x131141ae8 <col:13> '<dependent type>' contains-errors lvalue
    |       |   | `-DeclRefExpr 0x131141ac8 <col:13> 'int *' lvalue ParmVar 0x1311281a8 'list' 'int *'
    |       |   `-CallExpr 0x131141d50 <col:20, col:74> '<dependent type>' contains-errors
    |       |     |-RecoveryExpr 0x131141b10 <col:20> '<dependent type>' contains-errors lvalue
    |       |     |-CallExpr 0x131141d28 <col:44, col:63> '<dependent type>' contains-errors
    |       |     | |-DeclRefExpr 0x131141c10 <col:44> 'int ()' Function 0x131141b58 'MENU_CACHE_DIR' 'int ()'
    |       |     | `-RecoveryExpr 0x131141d08 <col:59> '<dependent type>' contains-errors lvalue
    |       |     |-RecoveryExpr 0x131141c70 <col:66> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x131141c90 <col:72> 'const char *' lvalue ParmVar 0x131128228 'id' 'const char *'
    |       |-BreakStmt 0x131141da8 <line:13:13>
    |       |-CaseStmt 0x131141de8 <line:14:9, line:15:41>
    |       | |-DeclRefExpr 0x131141dc8 <line:14:14> 'int ()' Function 0x131141800 'MENU_CACHE_ITEM' 'int ()'
    |       | `-BinaryOperator 0x131142068 <line:15:13, col:41> 'const char **' contains-errors '='
    |       |   |-DeclRefExpr 0x131141e10 <col:13> 'const char **' lvalue Var 0x131128428 'cat' 'const char **'
    |       |   `-CXXDependentScopeMemberExpr 0x131142020 <col:19, col:41> '<dependent type>' contains-errors lvalue ->categories
    |       |     `-CallExpr 0x131141ff8 <col:19, col:38> '<dependent type>' contains-errors
    |       |       |-DeclRefExpr 0x131141f10 <col:19> 'int ()' Function 0x131141e58 'MENU_CACHE_APP' 'int ()'
    |       |       `-RecoveryExpr 0x131141fd8 <col:34> '<dependent type>' contains-errors lvalue
    |       |-IfStmt 0x1311424b0 <line:16:13, line:21:17>
    |       | |-ImplicitCastExpr 0x1311420a8 <line:16:17> 'const char **' <LValueToRValue>
    |       | | `-DeclRefExpr 0x131142088 <col:17> 'const char **' lvalue Var 0x131128428 'cat' 'const char **'
    |       | `-WhileStmt 0x131142490 <col:22, line:21:17>
    |       |   |-ImplicitCastExpr 0x131142110 <line:16:29, col:30> 'const char *' <LValueToRValue>
    |       |   | `-UnaryOperator 0x1311420f8 <col:29, col:30> 'const char *' lvalue prefix '*' cannot overflow
    |       |   |   `-ImplicitCastExpr 0x1311420e0 <col:30> 'const char **' <LValueToRValue>
    |       |   |     `-DeclRefExpr 0x1311420c0 <col:30> 'const char **' lvalue Var 0x131128428 'cat' 'const char **'
    |       |   `-IfStmt 0x131142470 <line:17:17, line:21:17>
    |       |     |-BinaryOperator 0x1311421c8 <line:17:21, col:31> 'int' '=='
    |       |     | |-ImplicitCastExpr 0x131142198 <col:21, col:25> 'const char *' <LValueToRValue>
    |       |     | | `-UnaryOperator 0x131142160 <col:21, col:25> 'const char *' lvalue prefix '*' cannot overflow
    |       |     | |   `-UnaryOperator 0x131142148 <col:22, col:25> 'const char **' postfix '++'
    |       |     | |     `-DeclRefExpr 0x131142128 <col:22> 'const char **' lvalue Var 0x131128428 'cat' 'const char **'
    |       |     | `-ImplicitCastExpr 0x1311421b0 <col:31> 'const char *' <LValueToRValue>
    |       |     |   `-DeclRefExpr 0x131142178 <col:31> 'const char *' lvalue ParmVar 0x131128228 'id' 'const char *'
    |       |     `-CompoundStmt 0x131142458 <line:18:17, line:21:17>
    |       |       `-BreakStmt 0x131142450 <line:20:21>
    |       |-BreakStmt 0x1311424d0 <line:22:13>
    |       `-BreakStmt 0x1311424d8 <line:25:13>
    `-ReturnStmt 0x131142590 <line:28:5, col:12>
      `-RecoveryExpr 0x131142570 <col:12> '<dependent type>' contains-errors lvalue
