`-FunctionDecl 0x13380ddf8  line:1:14 invalid get_line 'char *(int *)' static
  |-ParmVarDecl 0x13380dd28 <col:23, col:41> col:41 invalid self 'int *'
  `-CompoundStmt 0x13380e3c8 <line:2:1, line:11:1>
    |-DeclStmt 0x13380e0e8 <line:3:2, col:29>
    | `-VarDecl 0x13380dec0 <col:2, col:28> col:8 used ptr 'char *' cinit
    |   `-CallExpr 0x13380e0c0 <col:14, col:28> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13380e080 <col:14> 'int ()' Function 0x13380dfc8 'next_line' 'int ()'
    |     `-RecoveryExpr 0x13380e0a0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13380e360 <line:5:2, line:8:2>
    | |-UnaryOperator 0x13380e138 <line:5:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13380e120 <col:7> 'char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x13380e100 <col:7> 'char *' contains-errors lvalue Var 0x13380dec0 'ptr' 'char *'
    | `-CompoundStmt 0x13380e340 <col:12, line:8:2>
    |   |-CallExpr 0x13380e270 <line:6:3, col:19> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13380e230 <col:3> 'int ()' Function 0x13380e178 'fill_buffer' 'int ()'
    |   | `-RecoveryExpr 0x13380e250 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x13380e320 <line:7:3, col:23> 'char *' contains-errors '='
    |     |-DeclRefExpr 0x13380e298 <col:3> 'char *' contains-errors lvalue Var 0x13380dec0 'ptr' 'char *'
    |     `-CallExpr 0x13380e2f8 <col:9, col:23> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13380e2b8 <col:9> 'int ()' Function 0x13380dfc8 'next_line' 'int ()'
    |       `-RecoveryExpr 0x13380e2d8 <col:19> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13380e3b8 <line:10:2, col:9>
      `-ImplicitCastExpr 0x13380e3a0 <col:9> 'char *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13380e380 <col:9> 'char *' contains-errors lvalue Var 0x13380dec0 'ptr' 'char *'
