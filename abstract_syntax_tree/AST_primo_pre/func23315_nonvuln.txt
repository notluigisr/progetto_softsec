`-FunctionDecl 0x14800df18  line:1:1 invalid alt_merge_opt_map 'int (int, int *, int *)'
  |-ParmVarDecl 0x14800dcf0 <col:19, col:32> col:32 invalid enc 'int'
  |-ParmVarDecl 0x14800dda8 <col:37, col:45> col:45 referenced invalid to 'int *'
  |-ParmVarDecl 0x14800de28 <col:49, col:57> col:57 invalid add 'int *'
  `-CompoundStmt 0x148028260 <line:2:1, line:25:1>
    |-DeclStmt 0x14800e0f0 <line:3:3, col:13>
    | |-VarDecl 0x14800dff0 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x14800e070 <col:3, col:10> col:10 used val 'int'
    |-IfStmt 0x14800e1c0 <line:6:3, col:23>
    | |-BinaryOperator 0x14800e190 <col:7, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14800e128 <col:7, col:11> '<dependent type>' contains-errors lvalue ->value
    | | | `-RecoveryExpr 0x14800e108 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14800e170 <col:20> 'int' 0
    | `-ReturnStmt 0x14800e1b0 <col:23>
    |-IfStmt 0x148027638 <line:7:3, line:10:3>
    | |-BinaryOperator 0x148027420 <line:7:7, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14800e268 <col:7, col:21> 'int' contains-errors '=='
    | | | |-CXXDependentScopeMemberExpr 0x14800e200 <col:7, col:12> '<dependent type>' contains-errors lvalue ->value
    | | | | `-RecoveryExpr 0x14800e1e0 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x14800e248 <col:21> 'int' 0
    | | `-BinaryOperator 0x148027400 <col:26, col:49> 'int' contains-errors '<'
    | |   |-CXXDependentScopeMemberExpr 0x14800e2f0 <col:26, col:34> '<dependent type>' contains-errors lvalue .max
    | |   | `-CXXDependentScopeMemberExpr 0x14800e2a8 <col:26, col:30> '<dependent type>' contains-errors lvalue ->mmd
    | |   |   `-RecoveryExpr 0x14800e288 <col:26> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x14800e3a0 <col:40, col:49> '<dependent type>' contains-errors lvalue .min
    | |     `-CXXDependentScopeMemberExpr 0x14800e358 <col:40, col:45> '<dependent type>' contains-errors lvalue ->mmd
    | |       `-RecoveryExpr 0x14800e338 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148027618 <col:54, line:10:3>
    |   |-CallExpr 0x1480275e0 <line:8:5, col:21> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1480275a0 <col:5> 'int ()' Function 0x1480274e8 'clear_opt_map' 'int ()'
    |   | `-RecoveryExpr 0x1480275c0 <col:19> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x148027608 <line:9:5>
    |-CallExpr 0x148027858 <line:12:3, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x148027738 <col:3> 'int ()' Function 0x148027680 'alt_merge_mml' 'int ()'
    | |-UnaryOperator 0x1480277c0 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x148027778 <col:18, col:22> '<dependent type>' contains-errors lvalue ->mmd
    | |   `-RecoveryExpr 0x148027758 <col:18> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x148027840 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x1480277f8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->mmd
    |     `-RecoveryExpr 0x1480277d8 <col:28> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1480278c8 <line:14:3, col:9> 'int' '='
    | |-DeclRefExpr 0x148027888 <col:3> 'int' lvalue Var 0x14800e070 'val' 'int'
    | `-IntegerLiteral 0x1480278a8 <col:9> 'int' 0
    |-ForStmt 0x148027f28 <line:15:3, line:21:3>
    | |-BinaryOperator 0x148027928 <line:15:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x1480278e8 <col:8> 'int' lvalue Var 0x14800dff0 'i' 'int'
    | | `-IntegerLiteral 0x148027908 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1480279c0 <col:15, col:19> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x148027948 <col:15> 'int' lvalue Var 0x14800dff0 'i' 'int'
    | | `-RecoveryExpr 0x1480279a0 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x148027a00 <col:34, col:35> 'int' postfix '++'
    | | `-DeclRefExpr 0x1480279e0 <col:34> 'int' lvalue Var 0x14800dff0 'i' 'int'
    | `-CompoundStmt 0x148027f08 <col:39, line:21:3>
    |   |-IfStmt 0x148027c30 <line:16:5, line:17:20>
    |   | |-ArraySubscriptExpr 0x148027ad0 <line:16:9, col:19> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x148027aa0 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x148027a38 <col:9, col:14> '<dependent type>' contains-errors lvalue ->map
    |   | | |   `-RecoveryExpr 0x148027a18 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-ImplicitCastExpr 0x148027ab8 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x148027a80 <col:18> 'int' lvalue Var 0x14800dff0 'i' 'int'
    |   | `-BinaryOperator 0x148027c10 <line:17:7, col:20> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x148027bd0 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x148027ba0 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-CXXDependentScopeMemberExpr 0x148027b38 <col:7, col:11> '<dependent type>' contains-errors lvalue ->map
    |   |   | |   `-RecoveryExpr 0x148027b10 <col:7> '<dependent type>' contains-errors lvalue
    |   |   | |     `-DeclRefExpr 0x148027af0 <col:7> 'int *' lvalue ParmVar 0x14800dda8 'to' 'int *'
    |   |   | `-ImplicitCastExpr 0x148027bb8 <col:15> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x148027b80 <col:15> 'int' lvalue Var 0x14800dff0 'i' 'int'
    |   |   `-IntegerLiteral 0x148027bf0 <col:20> 'int' 1
    |   `-IfStmt 0x148027ee8 <line:19:5, line:20:39>
    |     |-ArraySubscriptExpr 0x148027d08 <line:19:9, col:18> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x148027cd8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x148027c70 <col:9, col:13> '<dependent type>' contains-errors lvalue ->map
    |     | |   `-RecoveryExpr 0x148027c50 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-ImplicitCastExpr 0x148027cf0 <col:17> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x148027cb8 <col:17> 'int' lvalue Var 0x14800dff0 'i' 'int'
    |     `-CompoundAssignOperator 0x148027eb8 <line:20:7, col:39> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-DeclRefExpr 0x148027d28 <col:7> 'int' lvalue Var 0x14800e070 'val' 'int'
    |       `-CallExpr 0x148027e88 <col:14, col:39> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x148027e28 <col:14> 'int ()' Function 0x148027d70 'map_position_value' 'int ()'
    |         |-RecoveryExpr 0x148027e48 <col:33> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x148027e68 <col:38> 'int' lvalue Var 0x14800dff0 'i' 'int'
    |-BinaryOperator 0x148028010 <line:22:3, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x148027fa8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->value
    | | `-RecoveryExpr 0x148027f80 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x148027f60 <col:3> 'int *' lvalue ParmVar 0x14800dda8 'to' 'int *'
    | `-DeclRefExpr 0x148027ff0 <col:15> 'int' lvalue Var 0x14800e070 'val' 'int'
    `-CallExpr 0x148028230 <line:24:3, col:45> '<dependent type>' contains-errors
      |-DeclRefExpr 0x148028110 <col:3> 'int ()' Function 0x148028058 'alt_merge_opt_anc_info' 'int ()'
      |-UnaryOperator 0x148028198 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-CXXDependentScopeMemberExpr 0x148028150 <col:27, col:31> '<dependent type>' contains-errors lvalue ->anc
      |   `-RecoveryExpr 0x148028130 <col:27> '<dependent type>' contains-errors lvalue
      `-UnaryOperator 0x148028218 <col:36, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-CXXDependentScopeMemberExpr 0x1480281d0 <col:37, col:42> '<dependent type>' contains-errors lvalue ->anc
          `-RecoveryExpr 0x1480281b0 <col:37> '<dependent type>' contains-errors lvalue
