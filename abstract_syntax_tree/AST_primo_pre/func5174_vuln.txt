`-FunctionDecl 0x131928388  line:1:12 clone_file 'int (const char *, const char *, const char **, int)' static
  |-ParmVarDecl 0x1319280d8 <col:23, col:35> col:35 used from 'const char *'
  |-ParmVarDecl 0x131928158 <col:41, col:53> col:53 used to 'const char *'
  |-ParmVarDecl 0x131928208 <line:2:23, col:36> col:36 used err_status 'const char **'
  |-ParmVarDecl 0x131928288 <col:48, col:52> col:52 used copy_if_rename_fails 'int'
  `-CompoundStmt 0x1319438a8 <col:74, line:58:1>
    |-DeclStmt 0x1319285f0 <line:4:5, col:21>
    | `-VarDecl 0x131928588 <col:5, col:10> col:10 invalid buf 'char'
    |-UnaryExprOrTypeTraitExpr 0x131928660 <line:5:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x131928640 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x131928738 <line:6:5, col:20>
    | `-VarDecl 0x131928698 <col:5, col:19> col:9 used result 'int' cinit
    |   `-UnaryOperator 0x131928720 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x131928700 <col:19> 'int' 1
    |-IfStmt 0x132008a38 <line:8:5, line:9:16>
    | |-BinaryOperator 0x1320089e8 <line:8:9, col:29> 'int' '=='
    | | |-CallExpr 0x132008968 <col:9, col:24> 'int'
    | | | |-ImplicitCastExpr 0x132008950 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1320088b8 <col:9> 'int ()' Function 0x132008800 'rename' 'int ()'
    | | | |-ImplicitCastExpr 0x132008998 <col:16> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1320088d8 <col:16> 'const char *' lvalue ParmVar 0x1319280d8 'from' 'const char *'
    | | | `-ImplicitCastExpr 0x1320089b0 <col:22> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1320088f8 <col:22> 'const char *' lvalue ParmVar 0x131928158 'to' 'const char *'
    | | `-IntegerLiteral 0x1320089c8 <col:29> 'int' 0
    | `-ReturnStmt 0x132008a28 <line:9:9, col:16>
    |   `-IntegerLiteral 0x132008a08 <col:16> 'int' 0
    |-IfStmt 0x132008cf8 <line:10:5, line:13:5>
    | |-RecoveryExpr 0x132008b68 <line:10:9, col:48> '_Bool' contains-errors
    | `-CompoundStmt 0x132008cd8 <col:70, line:13:5>
    |   |-BinaryOperator 0x132008c70 <line:11:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x132008bc0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x132008ba8 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x132008b88 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x132008c58 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x132008c40 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x132008c20 <col:23> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x132008cc8 <line:12:9, col:17>
    |     `-UnaryOperator 0x132008cb0 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x132008c90 <col:17> 'int' 1
    |-IfStmt 0x132009070 <line:16:5, line:19:5>
    | |-RecoveryExpr 0x132008f08 <line:16:9, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x132009050 <col:42, line:19:5>
    |   |-BinaryOperator 0x132008fc8 <line:17:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x132008f60 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x132008f48 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x132008f28 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x132008fb0 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x132008f98 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x132008f78 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x132009038 <line:18:9, col:14> 'done' 0x132008fe8
    |-IfStmt 0x1320092b8 <line:21:5, line:24:5>
    | |-RecoveryExpr 0x1320091a0 <line:21:9, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x132009298 <col:38, line:24:5>
    |   |-BinaryOperator 0x132009260 <line:22:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x1320091f8 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1320091e0 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1320091c0 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x132009248 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x132009230 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x132009210 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x132009280 <line:23:9, col:14> 'done' 0x132008fe8
    |-IfStmt 0x132009528 <line:26:5, line:27:14>
    | |-BinaryOperator 0x1320094f0 <line:26:9, col:53> 'int' '<'
    | | |-CallExpr 0x132009450 <col:9, col:49> 'int'
    | | | |-ImplicitCastExpr 0x132009438 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1320093b8 <col:9> 'int ()' Function 0x132009300 'transfer_file_attrs' 'int ()'
    | | | |-ImplicitCastExpr 0x132009488 <col:29> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1320093d8 <col:29> 'const char *' lvalue ParmVar 0x1319280d8 'from' 'const char *'
    | | | |-ImplicitCastExpr 0x1320094a0 <col:35> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1320093f8 <col:35> 'const char *' lvalue ParmVar 0x131928158 'to' 'const char *'
    | | | `-ImplicitCastExpr 0x1320094b8 <col:39> 'const char **' <LValueToRValue>
    | | |   `-DeclRefExpr 0x132009418 <col:39> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    | | `-IntegerLiteral 0x1320094d0 <col:53> 'int' 0
    | `-GotoStmt 0x132009510 <line:27:9, col:14> 'done' 0x132008fe8
    |-WhileStmt 0x131942a68 <line:29:5, line:34:5>
    | |-RecoveryExpr 0x132009750 <line:29:12, col:53> '_Bool' contains-errors
    | `-CompoundStmt 0x131942a50 <col:56, line:34:5>
    |   `-IfStmt 0x131942a30 <line:30:9, line:33:9>
    |     |-RecoveryExpr 0x131942918 <line:30:13, col:43> '_Bool' contains-errors
    |     `-CompoundStmt 0x131942a10 <col:48, line:33:9>
    |       |-BinaryOperator 0x1319429d8 <line:31:13, col:27> 'const char *' '='
    |       | |-UnaryOperator 0x131942970 <col:13, col:14> 'const char *' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x131942958 <col:14> 'const char **' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x131942938 <col:14> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |       | `-ImplicitCastExpr 0x1319429c0 <col:27> 'const char *' <NoOp>
    |       |   `-ImplicitCastExpr 0x1319429a8 <col:27> 'char *' <ArrayToPointerDecay>
    |       |     `-StringLiteral 0x131942988 <col:27> 'char[4]' lvalue "STR"
    |       `-GotoStmt 0x1319429f8 <line:32:13, col:18> 'done' 0x132008fe8
    |-IfStmt 0x131942ca0 <line:35:5, line:38:5>
    | |-RecoveryExpr 0x131942b88 <line:35:9, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x131942c80 <col:26, line:38:5>
    |   |-BinaryOperator 0x131942c48 <line:36:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x131942be0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x131942bc8 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x131942ba8 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x131942c30 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x131942c18 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x131942bf8 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x131942c68 <line:37:9, col:14> 'done' 0x132008fe8
    |-IfStmt 0x131942ef8 <line:39:5, line:42:5>
    | |-RecoveryExpr 0x131942de0 <line:39:9, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x131942ed8 <col:29, line:42:5>
    |   |-BinaryOperator 0x131942ea0 <line:40:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x131942e38 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x131942e20 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x131942e00 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x131942e88 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x131942e70 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x131942e50 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x131942ec0 <line:41:9, col:14> 'done' 0x132008fe8
    |-IfStmt 0x131943250 <line:43:5, line:46:5>
    | |-RecoveryExpr 0x131943138 <line:43:9, col:32> '_Bool' contains-errors
    | `-CompoundStmt 0x131943230 <col:35, line:46:5>
    |   |-BinaryOperator 0x1319431f8 <line:44:9, col:23> 'const char *' '='
    |   | |-UnaryOperator 0x131943190 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x131943178 <col:10> 'const char **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x131943158 <col:10> 'const char **' lvalue ParmVar 0x131928208 'err_status' 'const char **'
    |   | `-ImplicitCastExpr 0x1319431e0 <col:23> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x1319431c8 <col:23> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x1319431a8 <col:23> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x131943218 <line:45:9, col:14> 'done' 0x132008fe8
    |-BinaryOperator 0x1319432b0 <line:47:5, col:14> 'int' '='
    | |-DeclRefExpr 0x131943270 <col:5> 'int' lvalue Var 0x131928698 'result' 'int'
    | `-IntegerLiteral 0x131943290 <col:14> 'int' 0
    |-LabelStmt 0x1319433f8 <line:48:2, col:6> 'done'
    | `-NullStmt 0x1319433f0 <col:6>
    |-IfStmt 0x1319434f0 <line:51:5, line:52:19>
    | |-RecoveryExpr 0x131943458 <line:51:9, col:43> '_Bool' contains-errors
    | `-BinaryOperator 0x1319434d0 <line:52:9, col:19> 'int' '='
    |   |-DeclRefExpr 0x131943478 <col:9> 'int' lvalue Var 0x131928698 'result' 'int'
    |   `-UnaryOperator 0x1319434b8 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x131943498 <col:19> 'int' 1
    |-IfStmt 0x131943700 <line:53:5, line:54:18>
    | |-BinaryOperator 0x131943568 <line:53:9, col:19> 'int' '!='
    | | |-ImplicitCastExpr 0x131943550 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131943510 <col:9> 'int' lvalue Var 0x131928698 'result' 'int'
    | | `-IntegerLiteral 0x131943530 <col:19> 'int' 0
    | `-CallExpr 0x1319436c0 <line:54:9, col:18> 'int'
    |   |-ImplicitCastExpr 0x1319436a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x131943668 <col:9> 'int ()' Function 0x1319435b0 'unlink' 'int ()'
    |   `-ImplicitCastExpr 0x1319436e8 <col:16> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x131943688 <col:16> 'const char *' lvalue ParmVar 0x131928158 'to' 'const char *'
    |-IfStmt 0x131943840 <line:55:5, line:56:20>
    | |-BinaryOperator 0x131943778 <line:55:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x131943760 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131943720 <col:9> 'int' lvalue Var 0x131928698 'result' 'int'
    | | `-IntegerLiteral 0x131943740 <col:19> 'int' 0
    | `-CallExpr 0x131943800 <line:56:9, col:20> 'int'
    |   |-ImplicitCastExpr 0x1319437d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x131943798 <col:9> 'int ()' Function 0x1319435b0 'unlink' 'int ()'
    |   `-ImplicitCastExpr 0x131943828 <col:16> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x1319437b8 <col:16> 'const char *' lvalue ParmVar 0x1319280d8 'from' 'const char *'
    `-ReturnStmt 0x131943898 <line:57:5, col:12>
      `-ImplicitCastExpr 0x131943880 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x131943860 <col:12> 'int' lvalue Var 0x131928698 'result' 'int'
