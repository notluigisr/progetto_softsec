`-FunctionDecl 0x14d122548  line:1:5 usbip_recv_xbuff 'int (struct usbip_device *, struct urb *)'
  |-ParmVarDecl 0x14d10a048 <col:22, col:43> col:43 used ud 'struct usbip_device *'
  |-ParmVarDecl 0x14d122428 <col:47, col:59> col:59 used urb 'struct urb *'
  `-CompoundStmt 0x14d128f78 <line:2:1, line:36:1>
    |-DeclStmt 0x14d1226c8 <line:3:2, col:9>
    | `-VarDecl 0x14d122660 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x14d122760 <line:4:2, col:10>
    | `-VarDecl 0x14d1226f8 <col:2, col:6> col:6 used size 'int'
    |-IfStmt 0x14d122dd0 <line:6:2, line:18:2> has_else
    | |-BinaryOperator 0x14d122848 <line:6:6, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14d1227b0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14d122778 <col:6> 'struct usbip_device *' lvalue ParmVar 0x14d10a048 'ud' 'struct usbip_device *'
    | | `-RecoveryExpr 0x14d122828 <col:18> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14d122b18 <col:30, line:12:2>
    | | |-IfStmt 0x14d122a58 <line:8:3, line:9:11>
    | | | |-CallExpr 0x14d122a00 <line:8:7, col:27> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x14d122980 <col:7> 'int ()' Function 0x14d1228c8 'usb_pipein' 'int ()'
    | | | | `-RecoveryExpr 0x14d1229d8 <col:18, col:23> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x14d1229a0 <col:18> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    | | | `-ReturnStmt 0x14d122a48 <line:9:4, col:11>
    | | |   `-IntegerLiteral 0x14d122a28 <col:11> 'int' 0
    | | `-BinaryOperator 0x14d122af8 <line:11:3, col:15> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x14d122a78 <col:3> 'int' lvalue Var 0x14d1226f8 'size' 'int'
    | |   `-RecoveryExpr 0x14d122ad0 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14d122a98 <col:10> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    | `-CompoundStmt 0x14d122db0 <line:12:9, line:18:2>
    |   |-IfStmt 0x14d122cf0 <line:14:3, line:15:11>
    |   | |-CallExpr 0x14d122c98 <line:14:7, col:28> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x14d122c18 <col:7> 'int ()' Function 0x14d122b60 'usb_pipeout' 'int ()'
    |   | | `-RecoveryExpr 0x14d122c70 <col:19, col:24> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14d122c38 <col:19> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    |   | `-ReturnStmt 0x14d122ce0 <line:15:4, col:11>
    |   |   `-IntegerLiteral 0x14d122cc0 <col:11> 'int' 0
    |   `-BinaryOperator 0x14d122d90 <line:17:3, col:15> 'int' contains-errors '='
    |     |-DeclRefExpr 0x14d122d10 <col:3> 'int' lvalue Var 0x14d1226f8 'size' 'int'
    |     `-RecoveryExpr 0x14d122d68 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14d122d30 <col:10> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    |-IfStmt 0x14d122ee0 <line:21:2, line:22:10>
    | |-UnaryOperator 0x14d122e98 <line:21:6, col:16> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x14d122e78 <col:7, col:16> 'int'
    | |   `-BinaryOperator 0x14d122e58 <col:8, col:15> 'int' '>'
    | |     |-ImplicitCastExpr 0x14d122e40 <col:8> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x14d122e00 <col:8> 'int' lvalue Var 0x14d1226f8 'size' 'int'
    | |     `-IntegerLiteral 0x14d122e20 <col:15> 'int' 0
    | `-ReturnStmt 0x14d122ed0 <line:22:3, col:10>
    |   `-IntegerLiteral 0x14d122eb0 <col:10> 'int' 0
    |-BinaryOperator 0x14d123138 <line:24:2, col:61> 'int' contains-errors '='
    | |-DeclRefExpr 0x14d122f00 <col:2> 'int' lvalue Var 0x14d122660 'ret' 'int'
    | `-CallExpr 0x14d123100 <col:8, col:61> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d123000 <col:8> 'int ()' Function 0x14d122f48 'usbip_recv' 'int ()'
    |   |-RecoveryExpr 0x14d123058 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d123020 <col:19> 'struct usbip_device *' lvalue ParmVar 0x14d10a048 'ud' 'struct usbip_device *'
    |   |-RecoveryExpr 0x14d1230b8 <col:35, col:40> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d123080 <col:35> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    |   `-DeclRefExpr 0x14d1230e0 <col:57> 'int' lvalue Var 0x14d1226f8 'size' 'int'
    |-IfStmt 0x14d128f10 <line:25:2, line:33:2>
    | |-BinaryOperator 0x14d1231c8 <line:25:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x14d123198 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d123158 <col:6> 'int' lvalue Var 0x14d122660 'ret' 'int'
    | | `-ImplicitCastExpr 0x14d1231b0 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d123178 <col:13> 'int' lvalue Var 0x14d1226f8 'size' 'int'
    | `-CompoundStmt 0x14d128ef0 <col:19, line:33:2>
    |   |-CallExpr 0x14d128a40 <line:26:3, col:37> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d1232c8 <col:3> 'int ()' Function 0x14d123210 'dev_err' 'int ()'
    |   | |-UnaryOperator 0x14d123390 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14d123348 <col:12, col:22> '<dependent type>' contains-errors lvalue ->dev
    |   | |   `-RecoveryExpr 0x14d123320 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14d1232e8 <col:12> 'struct urb *' lvalue ParmVar 0x14d122428 'urb' 'struct urb *'
    |   | |-StringLiteral 0x14d128a00 <col:27> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x14d128a20 <col:34> 'int' lvalue Var 0x14d122660 'ret' 'int'
    |   `-IfStmt 0x14d128ec0 <line:27:3, line:32:3> has_else
    |     |-BinaryOperator 0x14d128b30 <line:27:7, col:19> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x14d128ab0 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x14d128a78 <col:7> 'struct usbip_device *' lvalue ParmVar 0x14d10a048 'ud' 'struct usbip_device *'
    |     | `-RecoveryExpr 0x14d128b10 <col:19> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x14d128d08 <col:31, line:29:3>
    |     | `-CallExpr 0x14d128cd8 <line:28:4, col:44> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14d128c30 <col:4> 'int ()' Function 0x14d128b78 'usbip_event_add' 'int ()'
    |     |   |-DeclRefExpr 0x14d128c50 <col:20> 'struct usbip_device *' lvalue ParmVar 0x14d10a048 'ud' 'struct usbip_device *'
    |     |   `-RecoveryExpr 0x14d128cb8 <col:24> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x14d128ea0 <line:29:10, line:32:3>
    |       |-CallExpr 0x14d128dc8 <line:30:4, col:44> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14d128d20 <col:4> 'int ()' Function 0x14d128b78 'usbip_event_add' 'int ()'
    |       | |-DeclRefExpr 0x14d128d40 <col:20> 'struct usbip_device *' lvalue ParmVar 0x14d10a048 'ud' 'struct usbip_device *'
    |       | `-RecoveryExpr 0x14d128da8 <col:24> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x14d128e90 <line:31:4, col:12>
    |         `-UnaryOperator 0x14d128e78 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |           `-ImplicitCastExpr 0x14d128e60 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x14d128e40 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14d128f68 <line:35:2, col:9>
      `-ImplicitCastExpr 0x14d128f50 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d128f30 <col:9> 'int' lvalue Var 0x14d122660 'ret' 'int'
