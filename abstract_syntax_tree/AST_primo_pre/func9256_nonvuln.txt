`-FunctionDecl 0x124145bd8  line:1:12 invalid udf_encode_fh 'int (struct inode *, int *, int *, struct inode *)' static
  |-ParmVarDecl 0x124128648 <col:26, col:40> col:40 used inode 'struct inode *'
  |-ParmVarDecl 0x124128718 <col:47, col:54> col:54 invalid fh 'int *'
  |-ParmVarDecl 0x124128798 <col:58, col:63> col:63 used lenp 'int *'
  |-ParmVarDecl 0x124145a88 <line:2:5, col:19> col:19 used parent 'struct inode *'
  `-CompoundStmt 0x124148a80 <line:3:1, line:33:1>
    |-DeclStmt 0x124145d88 <line:4:2, col:17>
    | `-VarDecl 0x124145cb8 <col:2, col:13> col:6 used len 'int' cinit
    |   `-ImplicitCastExpr 0x124145d70 <col:12, col:13> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x124145d58 <col:12, col:13> 'int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x124145d40 <col:13> 'int *' <LValueToRValue>
    |         `-DeclRefExpr 0x124145d20 <col:13> 'int *' lvalue ParmVar 0x124128798 'lenp' 'int *'
    |-DeclStmt 0x124146168 <line:5:2, col:59>
    | |-RecordDecl 0x124145da0 <col:2, col:9> col:9 struct kernel_lb_addr
    | `-VarDecl 0x124145e98 <col:2, col:24> col:24 referenced invalid location 'struct kernel_lb_addr'
    |-DeclStmt 0x124146438 <line:6:2, col:36>
    | |-RecordDecl 0x124146180 <col:2, col:9> col:9 struct fid
    | `-VarDecl 0x1241462e8 <col:2, col:34> col:14 used fid 'struct fid *' cinit
    |   `-CStyleCastExpr 0x1241463f8 <col:20, col:34> 'struct fid *' contains-errors <Dependent>
    |     `-RecoveryExpr 0x124146350 <col:34> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x124146508 <line:7:2, col:38>
    | `-VarDecl 0x124146468 <col:2, col:13> col:6 used type 'int' cinit
    |   `-RecoveryExpr 0x1241464e8 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124146898 <line:9:2, line:15:2> has_else
    | |-BinaryOperator 0x1241465f0 <line:9:6, col:24> 'int' '&&'
    | | |-ImplicitCastExpr 0x1241465d8 <col:6> 'struct inode *' <LValueToRValue>
    | | | `-DeclRefExpr 0x124146520 <col:6> 'struct inode *' lvalue ParmVar 0x124145a88 'parent' 'struct inode *'
    | | `-ParenExpr 0x1241465b8 <col:16, col:24> 'int'
    | |   `-BinaryOperator 0x124146598 <col:17, col:23> 'int' '<'
    | |     |-ImplicitCastExpr 0x124146580 <col:17> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x124146540 <col:17> 'int' lvalue Var 0x124145cb8 'len' 'int'
    | |     `-IntegerLiteral 0x124146560 <col:23> 'int' 5
    | |-CompoundStmt 0x1241466e8 <col:27, line:12:2>
    | | |-BinaryOperator 0x124146680 <line:10:3, col:11> 'int' '='
    | | | |-UnaryOperator 0x124146648 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x124146630 <col:4> 'int *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x124146610 <col:4> 'int *' lvalue ParmVar 0x124128798 'lenp' 'int *'
    | | | `-IntegerLiteral 0x124146660 <col:11> 'int' 5
    | | `-ReturnStmt 0x1241466d8 <line:11:3, col:10>
    | |   `-RecoveryExpr 0x1241466b8 <col:10> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x124146878 <line:12:9, line:15:2>
    |   |-BinaryOperator 0x124146760 <line:12:13, col:19> 'int' '<'
    |   | |-ImplicitCastExpr 0x124146748 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x124146708 <col:13> 'int' lvalue Var 0x124145cb8 'len' 'int'
    |   | `-IntegerLiteral 0x124146728 <col:19> 'int' 3
    |   `-CompoundStmt 0x124146858 <col:22, line:15:2>
    |     |-BinaryOperator 0x1241467f0 <line:13:3, col:11> 'int' '='
    |     | |-UnaryOperator 0x1241467b8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x1241467a0 <col:4> 'int *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x124146780 <col:4> 'int *' lvalue ParmVar 0x124128798 'lenp' 'int *'
    |     | `-IntegerLiteral 0x1241467d0 <col:11> 'int' 3
    |     `-ReturnStmt 0x124146848 <line:14:3, col:10>
    |       `-RecoveryExpr 0x124146828 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x124146938 <line:17:2, col:10> 'int' '='
    | |-UnaryOperator 0x124146900 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1241468e8 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1241468c8 <col:3> 'int *' lvalue ParmVar 0x124128798 'lenp' 'int *'
    | `-IntegerLiteral 0x124146918 <col:10> 'int' 3
    |-BinaryOperator 0x124148068 <line:18:2, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1241469b8 <col:2, col:11> '<dependent type>' contains-errors lvalue .block
    | | `-RecoveryExpr 0x124146990 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x124146958 <col:2> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    | `-CXXDependentScopeMemberExpr 0x124148020 <col:19, col:28> '<dependent type>' contains-errors lvalue .logicalBlockNum
    |   `-RecoveryExpr 0x124148000 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x124148198 <line:19:2, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1241480e8 <col:2, col:11> '<dependent type>' contains-errors lvalue .partref
    | | `-RecoveryExpr 0x1241480c0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x124148088 <col:2> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    | `-CXXDependentScopeMemberExpr 0x124148150 <col:21, col:30> '<dependent type>' contains-errors lvalue .partitionReferenceNum
    |   `-RecoveryExpr 0x124148130 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x124148280 <line:20:2, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x124148218 <col:2, col:11> '<dependent type>' contains-errors lvalue .parent_partref
    | | `-RecoveryExpr 0x1241481f0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1241481b8 <col:2> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    | `-IntegerLiteral 0x124148260 <col:28> 'int' 0
    |-BinaryOperator 0x1241483a8 <line:21:2, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x124148300 <col:2, col:11> '<dependent type>' contains-errors lvalue .generation
    | | `-RecoveryExpr 0x1241482d8 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1241482a0 <col:2> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    | `-RecoveryExpr 0x124148380 <col:24, col:31> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x124148348 <col:24> 'struct inode *' lvalue ParmVar 0x124128648 'inode' 'struct inode *'
    |-IfStmt 0x124148a18 <line:23:2, line:30:2>
    | |-ImplicitCastExpr 0x1241483e8 <line:23:6> 'struct inode *' <LValueToRValue>
    | | `-DeclRefExpr 0x1241483c8 <col:6> 'struct inode *' lvalue ParmVar 0x124145a88 'parent' 'struct inode *'
    | `-CompoundStmt 0x1241489d8 <col:14, line:30:2>
    |   |-BinaryOperator 0x124148508 <line:24:3, col:29> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x124148420 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x124148400 <col:3> 'struct kernel_lb_addr' lvalue Var 0x124145e98 'location' 'struct kernel_lb_addr'
    |   | `-RecoveryExpr 0x1241484e0 <col:14, col:29> '<dependent type>' contains-errors lvalue
    |   |   `-CallExpr 0x1241484a0 <col:14, col:26> 'int'
    |   |     |-ImplicitCastExpr 0x124148488 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x124148448 <col:14> 'int ()' Function 0x124145fa8 'UDF_I' 'int ()'
    |   |     `-ImplicitCastExpr 0x1241484c8 <col:20> 'struct inode *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x124148468 <col:20> 'struct inode *' lvalue ParmVar 0x124145a88 'parent' 'struct inode *'
    |   |-BinaryOperator 0x124148638 <line:25:3, col:36> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x124148588 <col:3, col:12> '<dependent type>' contains-errors lvalue .parent_block
    |   | | `-RecoveryExpr 0x124148560 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124148528 <col:3> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    |   | `-CXXDependentScopeMemberExpr 0x1241485f0 <col:27, col:36> '<dependent type>' contains-errors lvalue .logicalBlockNum
    |   |   `-RecoveryExpr 0x1241485d0 <col:27> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x124148768 <line:26:3, col:38> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1241486b8 <col:3, col:12> '<dependent type>' contains-errors lvalue .parent_partref
    |   | | `-RecoveryExpr 0x124148690 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124148658 <col:3> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    |   | `-CXXDependentScopeMemberExpr 0x124148720 <col:29, col:38> '<dependent type>' contains-errors lvalue .partitionReferenceNum
    |   |   `-RecoveryExpr 0x124148700 <col:29> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x124148890 <line:27:3, col:39> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1241487e8 <col:3, col:12> '<dependent type>' contains-errors lvalue .parent_generation
    |   | | `-RecoveryExpr 0x1241487c0 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x124148788 <col:3> 'struct fid *' contains-errors lvalue Var 0x1241462e8 'fid' 'struct fid *'
    |   | `-RecoveryExpr 0x124148868 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x124148830 <col:32> 'struct inode *' lvalue ParmVar 0x124128648 'inode' 'struct inode *'
    |   |-BinaryOperator 0x124148920 <line:28:3, col:11> 'int' '='
    |   | |-UnaryOperator 0x1241488e8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1241488d0 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1241488b0 <col:4> 'int *' lvalue ParmVar 0x124128798 'lenp' 'int *'
    |   | `-IntegerLiteral 0x124148900 <col:11> 'int' 5
    |   `-BinaryOperator 0x1241489b8 <line:29:3, col:10> 'int' contains-errors '='
    |     |-DeclRefExpr 0x124148940 <col:3> 'int' contains-errors lvalue Var 0x124146468 'type' 'int'
    |     `-RecoveryExpr 0x124148998 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x124148a70 <line:32:2, col:9>
      `-ImplicitCastExpr 0x124148a58 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x124148a38 <col:9> 'int' contains-errors lvalue Var 0x124146468 'type' 'int'
