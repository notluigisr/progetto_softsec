`-FunctionDecl 0x12880df18  line:1:5 invalid tls12_get_sigandhash 'int (unsigned char *, const int *, const int *)'
  |-ParmVarDecl 0x12880dd08 <col:26, col:41> col:41 used p 'unsigned char *'
  |-ParmVarDecl 0x12880dda0 <col:44, col:60> col:60 invalid pk 'const int *'
  |-ParmVarDecl 0x12880de20 <col:64, col:78> col:78 invalid md 'const int *'
  `-CompoundStmt 0x129009b28 <line:2:1, line:15:1>
    |-DeclStmt 0x12880e0f0 <line:3:5, col:22>
    | |-VarDecl 0x12880dff0 <col:5, col:9> col:9 used sig_id 'int'
    | `-VarDecl 0x12880e070 <col:5, col:17> col:17 used md_id 'int'
    |-IfStmt 0x12880e188 <line:4:5, line:5:16>
    | |-UnaryOperator 0x12880e140 <line:4:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12880e128 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12880e108 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12880e178 <line:5:9, col:16>
    |   `-IntegerLiteral 0x12880e158 <col:16> 'int' 0
    |-BinaryOperator 0x129009570 <line:6:5, col:74> 'int' contains-errors '='
    | |-DeclRefExpr 0x12880e1a8 <col:5> 'int' lvalue Var 0x12880e070 'md_id' 'int'
    | `-CallExpr 0x129009538 <col:13, col:74> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12880e320 <col:13> 'int ()' Function 0x12880e268 'tls12_find_id' 'int ()'
    |   |-CallExpr 0x1290092f8 <col:27, col:41> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1290092b8 <col:27> 'int ()' Function 0x129009200 'EVP_MD_type' 'int ()'
    |   | `-RecoveryExpr 0x1290092d8 <col:39> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1290094d0 <col:44> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x129009510 <col:54, col:73> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x129009418 <col:54> 'int ()' Function 0x129009360 'OSSL_NELEM' 'int ()'
    |     `-RecoveryExpr 0x1290094f0 <col:65> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129009650 <line:7:5, line:8:16>
    | |-BinaryOperator 0x129009600 <line:7:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1290095e8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x129009590 <col:9> 'int' lvalue Var 0x12880e070 'md_id' 'int'
    | | `-UnaryOperator 0x1290095d0 <col:18, col:19> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1290095b0 <col:19> 'int' 1
    | `-ReturnStmt 0x129009640 <line:8:9, col:16>
    |   `-IntegerLiteral 0x129009620 <col:16> 'int' 0
    |-BinaryOperator 0x1290097d8 <line:9:5, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x129009670 <col:5> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'
    | `-CallExpr 0x1290097b0 <col:14, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129009770 <col:14> 'int ()' Function 0x1290096b8 'tls12_get_sigid' 'int ()'
    |   `-RecoveryExpr 0x129009790 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1290098b8 <line:10:5, line:11:16>
    | |-BinaryOperator 0x129009868 <line:10:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x129009850 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1290097f8 <col:9> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'
    | | `-UnaryOperator 0x129009838 <col:19, col:20> 'int' prefix '-'
    | |   `-IntegerLiteral 0x129009818 <col:20> 'int' 1
    | `-ReturnStmt 0x1290098a8 <line:11:9, col:16>
    |   `-IntegerLiteral 0x129009888 <col:16> 'int' 0
    |-BinaryOperator 0x1290099c8 <line:12:5, col:27> 'unsigned char' '='
    | |-ArraySubscriptExpr 0x129009930 <col:5, col:8> 'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x129009918 <col:5> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1290098d8 <col:5> 'unsigned char *' lvalue ParmVar 0x12880dd08 'p' 'unsigned char *'
    | | `-IntegerLiteral 0x1290098f8 <col:7> 'int' 0
    | `-CStyleCastExpr 0x1290099a0 <col:12, col:27> 'unsigned char' <IntegralCast>
    |   `-ImplicitCastExpr 0x129009988 <col:27> 'int' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x129009950 <col:27> 'int' lvalue Var 0x12880e070 'md_id' 'int'
    |-BinaryOperator 0x129009ad8 <line:13:5, col:27> 'unsigned char' '='
    | |-ArraySubscriptExpr 0x129009a40 <col:5, col:8> 'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x129009a28 <col:5> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1290099e8 <col:5> 'unsigned char *' lvalue ParmVar 0x12880dd08 'p' 'unsigned char *'
    | | `-IntegerLiteral 0x129009a08 <col:7> 'int' 1
    | `-CStyleCastExpr 0x129009ab0 <col:12, col:27> 'unsigned char' <IntegralCast>
    |   `-ImplicitCastExpr 0x129009a98 <col:27> 'int' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x129009a60 <col:27> 'int' lvalue Var 0x12880dff0 'sig_id' 'int'
    `-ReturnStmt 0x129009b18 <line:14:5, col:12>
      `-IntegerLiteral 0x129009af8 <col:12> 'int' 1
