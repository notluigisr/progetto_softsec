`-FunctionDecl 0x12a1281f0  line:1:6 invalid AllocateDataSet 'void (int *)'
  |-ParmVarDecl 0x12a128128 <col:22, col:30> col:30 invalid it8 'int *'
  `-CompoundStmt 0x12a141da0 <line:2:1, line:16:1>
    |-IfStmt 0x12a128550 <line:5:5, col:20>
    | |-CXXDependentScopeMemberExpr 0x12a1284f8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->Data
    | | `-RecoveryExpr 0x12a1284d8 <col:9> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a128540 <col:20>
    `-IfStmt 0x12a141d80 <line:11:5, line:14:5>
      |-BinaryOperator 0x12a141bd8 <line:11:9, col:20> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x12a141b70 <col:9, col:12> '<dependent type>' contains-errors lvalue ->Data
      | | `-RecoveryExpr 0x12a141b50 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x12a141bb8 <col:20> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12a141d68 <col:26, line:14:5>
        `-CallExpr 0x12a141d38 <line:13:9, col:28> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12a141cd8 <col:9> 'int ()' Function 0x12a141c20 'SynError' 'int ()'
          |-RecoveryExpr 0x12a141cf8 <col:18> '<dependent type>' contains-errors lvalue
          `-StringLiteral 0x12a141d18 <col:23> 'char[4]' lvalue "STR"
