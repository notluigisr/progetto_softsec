`-FunctionDecl 0x13380e358  line:1:5 nfc_llcp_send_connect 'int (struct nfc_llcp_sock *)'
  |-ParmVarDecl 0x13380e248 <col:27, col:49> col:49 used sock 'struct nfc_llcp_sock *'
  `-CompoundStmt 0x134809ac0 <line:2:1, line:63:1>
    |-DeclStmt 0x133826838 <line:3:2, col:30>
    | |-RecordDecl 0x133826650 <col:2, col:9> col:9 struct nfc_llcp_local
    | `-VarDecl 0x1338267b8 <col:2, col:25> col:25 used local 'struct nfc_llcp_local *'
    |-DeclStmt 0x133826a38 <line:4:2, col:21>
    | |-RecordDecl 0x133826850 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x1338269b8 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x133826bd8 <line:8:2, col:9>
    | `-VarDecl 0x133826b70 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x133826dc8 <line:12:2, col:16> 'int'
    | |-ImplicitCastExpr 0x133826db0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x133826d00 <col:2> 'int ()' Function 0x133826c48 'pr_debug' 'int ()'
    | `-ImplicitCastExpr 0x133826df0 <col:11> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x133826d60 <col:11> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x133826e88 <line:14:2, col:16> 'struct nfc_llcp_local *' contains-errors '='
    | |-DeclRefExpr 0x133826e08 <col:2> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'
    | `-RecoveryExpr 0x133826e60 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x133826e28 <col:10> 'struct nfc_llcp_sock *' lvalue ParmVar 0x13380e248 'sock' 'struct nfc_llcp_sock *'
    |-IfStmt 0x133826fe8 <line:15:2, line:16:11>
    | |-BinaryOperator 0x133826f20 <line:15:6, col:15> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x133826ea8 <col:6> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'
    | | `-RecoveryExpr 0x133826f00 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x133826fd8 <line:16:3, col:11>
    |   `-UnaryOperator 0x133826fc0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x133826fa8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x133826f88 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133827258 <line:18:2, line:24:2>
    | |-RecoveryExpr 0x133827068 <line:18:6, col:28> '_Bool' contains-errors
    | `-CompoundStmt 0x133827248 <col:34, line:24:2>
    |-IfStmt 0x134809320 <line:41:2, line:44:2>
    | |-RecoveryExpr 0x134809260 <line:41:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x134809308 <col:19, line:44:2>
    |   `-GotoStmt 0x1348092f0 <line:43:3, col:8> 'error_tlv' 0x1348092a0
    |-CallExpr 0x134809678 <line:50:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1348095c0 <col:2> 'int ()' Function 0x134809508 'skb_queue_tail' 'int ()'
    | |-UnaryOperator 0x134809640 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x134809618 <col:18, col:25> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1348095e0 <col:18> 'struct nfc_llcp_local *' lvalue Var 0x1338267b8 'local' 'struct nfc_llcp_local *'
    | `-DeclRefExpr 0x134809658 <col:35> 'struct sk_buff *' lvalue Var 0x1338269b8 'skb' 'struct sk_buff *'
    |-BinaryOperator 0x1348096e8 <line:52:2, col:8> 'int' '='
    | |-DeclRefExpr 0x1348096a8 <col:2> 'int' lvalue Var 0x133826b70 'err' 'int'
    | `-IntegerLiteral 0x1348096c8 <col:8> 'int' 0
    |-LabelStmt 0x134809918 <line:54:1, line:56:20> 'error_tlv'
    | `-IfStmt 0x1348098f8 <line:55:2, line:56:20>
    |   |-ImplicitCastExpr 0x134809728 <line:55:6> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x134809708 <col:6> 'int' lvalue Var 0x133826b70 'err' 'int'
    |   `-CallExpr 0x134809898 <line:56:3, col:20> 'int'
    |     |-ImplicitCastExpr 0x134809880 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x134809820 <col:3> 'int ()' Function 0x134809768 'pr_err' 'int ()'
    |     |-ImplicitCastExpr 0x1348098c8 <col:10> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x134809840 <col:10> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x1348098e0 <col:17> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x134809860 <col:17> 'int' lvalue Var 0x133826b70 'err' 'int'
    `-ReturnStmt 0x134809ab0 <line:62:2, col:9>
      `-ImplicitCastExpr 0x134809a98 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134809a78 <col:9> 'int' lvalue Var 0x133826b70 'err' 'int'
