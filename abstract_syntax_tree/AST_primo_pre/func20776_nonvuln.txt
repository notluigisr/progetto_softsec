`-FunctionDecl 0x14900df18  line:1:20 invalid set_default_type 'const char *(int *, void *, const char *)' static
  |-ParmVarDecl 0x14900dd28 <col:37, col:48> col:48 invalid cmd 'int *'
  |-ParmVarDecl 0x14900dda8 <col:53, col:59> col:59 d_ 'void *'
  |-ParmVarDecl 0x14900de28 <line:2:36, col:48> col:48 used arg 'const char *'
  `-CompoundStmt 0x149027c78 <line:3:1, line:11:1>
    |-IfStmt 0x149027c10 <line:4:5, line:8:5>
    | |-ParenExpr 0x14900e2b8 <line:4:9, col:42> 'int'
    | | `-BinaryOperator 0x14900e298 <col:10, col:41> 'int' '!='
    | |   |-CallExpr 0x14900e218 <col:10, col:36> 'int'
    | |   | |-ImplicitCastExpr 0x14900e200 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x14900e130 <col:10> 'int ()' Function 0x14900e078 'ap_cstr_casecmp' 'int ()'
    | |   | |-ImplicitCastExpr 0x14900e248 <col:26> 'const char *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x14900e150 <col:26> 'const char *' lvalue ParmVar 0x14900de28 'arg' 'const char *'
    | |   | `-ImplicitCastExpr 0x14900e260 <col:31> 'char *' <ArrayToPointerDecay>
    | |   |   `-StringLiteral 0x14900e1b0 <col:31> 'char[4]' lvalue "STR"
    | |   `-IntegerLiteral 0x14900e278 <col:41> 'int' 0
    | `-CompoundStmt 0x149027c00 <col:45, line:8:5>
    `-ReturnStmt 0x149027c68 <line:10:5, col:12>
      `-RecoveryExpr 0x149027c48 <col:12> '<dependent type>' contains-errors lvalue
