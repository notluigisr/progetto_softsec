`-FunctionDecl 0x13d140a88  line:1:5 open_tmpfile 'int (char *, const char *, struct file_struct *)'
  |-ParmVarDecl 0x13d1280d8 <col:18, col:24> col:24 used fnametmp 'char *'
  |-ParmVarDecl 0x13d128158 <col:34, col:46> col:46 used fname 'const char *'
  |-ParmVarDecl 0x13d128748 <col:53, col:73> col:73 used file 'struct file_struct *'
  `-CompoundStmt 0x13d1417e0 <line:2:1, line:37:1>
    |-DeclStmt 0x13d140c10 <line:3:2, col:8>
    | `-VarDecl 0x13d140ba8 <col:2, col:6> col:6 used fd 'int'
    |-IfStmt 0x13d140ed0 <line:6:2, line:7:11>
    | |-UnaryOperator 0x13d140e70 <line:6:6, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13d140e38 <col:7, col:41> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13d140d50 <col:7> 'int ()' Function 0x13d140c98 'get_tmpname' 'int ()'
    | |   |-DeclRefExpr 0x13d140d70 <col:19> 'char *' lvalue ParmVar 0x13d1280d8 'fnametmp' 'char *'
    | |   |-DeclRefExpr 0x13d140d90 <col:29> 'const char *' lvalue ParmVar 0x13d128158 'fname' 'const char *'
    | |   `-RecoveryExpr 0x13d140e18 <col:36> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13d140ec0 <line:7:3, col:11>
    |   `-UnaryOperator 0x13d140ea8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x13d140e88 <col:11> 'int' 1
    |-IfStmt 0x13d141010 <line:9:2, line:15:2> has_else
    | |-BinaryOperator 0x13d140f68 <line:9:6, col:16> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13d140f48 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13d140f08 <col:16> 'int' 0
    | |-CompoundStmt 0x13d140fd8 <col:19, line:12:2>
    | `-CompoundStmt 0x13d141000 <col:9, line:15:2>
    |-IfStmt 0x13d141778 <line:30:2, line:34:2>
    | |-BinaryOperator 0x13d1412a0 <line:30:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x13d141288 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d141230 <col:6> 'int' lvalue Var 0x13d140ba8 'fd' 'int'
    | | `-UnaryOperator 0x13d141270 <col:12, col:13> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13d141250 <col:13> 'int' 1
    | `-CompoundStmt 0x13d141758 <col:16, line:34:2>
    |   |-CallExpr 0x13d1416d0 <line:31:3, line:32:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13d1413a0 <line:31:3> 'int ()' Function 0x13d1412e8 'rsyserr' 'int ()'
    |   | |-RecoveryExpr 0x13d141638 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x13d141658 <col:24> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x13d141430 <col:31> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x13d141690 <line:32:4, col:23> 'int'
    |   |   |-ImplicitCastExpr 0x13d141678 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x13d141530 <col:4> 'int ()' Function 0x13d141478 'full_fname' 'int ()'
    |   |   `-ImplicitCastExpr 0x13d1416b8 <col:15> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13d141550 <col:15> 'char *' lvalue ParmVar 0x13d1280d8 'fnametmp' 'char *'
    |   `-ReturnStmt 0x13d141748 <line:33:3, col:11>
    |     `-UnaryOperator 0x13d141730 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x13d141710 <col:11> 'int' 1
    `-ReturnStmt 0x13d1417d0 <line:36:2, col:9>
      `-ImplicitCastExpr 0x13d1417b8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13d141798 <col:9> 'int' lvalue Var 0x13d140ba8 'fd' 'int'
