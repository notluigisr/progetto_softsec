`-FunctionDecl 0x1339281f8  line:1:12 invalid remarkupvals 'int (int *)' static
  |-ParmVarDecl 0x133928128 <col:26, col:40> col:40 invalid g 'int *'
  `-CompoundStmt 0x133942228 <col:43, line:24:1>
    |-DeclStmt 0x133928428 <line:4:3, col:15>
    | `-VarDecl 0x1339283a0 <col:3, col:14> col:7 used work 'int' cinit
    |   `-IntegerLiteral 0x133928408 <col:14> 'int' 0
    |-WhileStmt 0x1339421c0 <line:5:3, line:22:3>
    | |-RecoveryExpr 0x1339284d8 <line:5:10, col:27> '_Bool' contains-errors
    | `-CompoundStmt 0x133942198 <col:33, line:22:3>
    |   |-UnaryOperator 0x133928518 <line:6:5, col:9> 'int' postfix '++'
    |   | `-DeclRefExpr 0x1339284f8 <col:5> 'int' lvalue Var 0x1339283a0 'work' 'int'
    |   |-CallExpr 0x1339418a0 <line:7:5, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x133928690 <col:5> 'int ()' Function 0x1339285d8 'lua_assert' 'int ()'
    |   | `-UnaryOperator 0x133941888 <col:16, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   `-CallExpr 0x133941860 <col:17, col:31> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x133928790 <col:17> 'int ()' Function 0x1339286d8 'isblack' 'int ()'
    |   |     `-RecoveryExpr 0x133941840 <col:25> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x133942168 <line:8:5, line:21:5> has_else
    |     |-BinaryOperator 0x133941bb0 <line:8:9, col:48> 'int' contains-errors '&&'
    |     | |-CallExpr 0x133941ae0 <col:9, col:22> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x1339419a8 <col:9> 'int ()' Function 0x1339418f0 'isgray' 'int ()'
    |     | | `-RecoveryExpr 0x133941ac0 <col:16> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x133941b90 <col:27, col:48> 'int' contains-errors '!='
    |     |   |-CXXDependentScopeMemberExpr 0x133941b28 <col:27, col:35> '<dependent type>' contains-errors lvalue ->openupval
    |     |   | `-RecoveryExpr 0x133941b08 <col:27> '<dependent type>' contains-errors lvalue
    |     |   `-RecoveryExpr 0x133941b70 <col:48> '<dependent type>' contains-errors lvalue
    |     |-NullStmt 0x133942160 <line:9:7>
    |     `-CompoundStmt 0x133942150 <line:10:10, line:21:5>
    `-ReturnStmt 0x133942218 <line:23:3, col:10>
      `-ImplicitCastExpr 0x133942200 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1339421e0 <col:10> 'int' lvalue Var 0x1339283a0 'work' 'int'
