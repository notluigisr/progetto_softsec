`-FunctionDecl 0x15a00dfc8  line:1:16 unpack 'const char *(char *, const char *, const char *, int)'
  |-ParmVarDecl 0x15a00dcf0 <col:23, col:30> col:30 used to 'char *'
  |-ParmVarDecl 0x15a00dd70 <col:34, col:47> col:47 used from 'const char *'
  |-ParmVarDecl 0x15a00ddf0 <col:53, col:66> col:66 used from_end 'const char *'
  |-ParmVarDecl 0x15a00de70 <line:2:23, col:28> col:28 param_data 'int'
  | `-UnusedAttr 0x15a00ded8 <col:54> unused
  `-CompoundStmt 0x15a0287a0 <line:3:3, line:5:3>
    `-ReturnStmt 0x15a028790 <line:4:5, col:43>
      `-ImplicitCastExpr 0x15a00e338 <col:12, col:43> 'const char *' <IntegralToPointer>
        `-CallExpr 0x15a00e2b8 <col:12, col:43> 'int'
          |-ImplicitCastExpr 0x15a00e2a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x15a00e1f0 <col:12> 'int ()' Function 0x15a00e138 'unpack_int32' 'int ()'
          |-ImplicitCastExpr 0x15a00e2f0 <col:25> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x15a00e210 <col:25> 'char *' lvalue ParmVar 0x15a00dcf0 'to' 'char *'
          |-ImplicitCastExpr 0x15a00e308 <col:29> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x15a00e230 <col:29> 'const char *' lvalue ParmVar 0x15a00dd70 'from' 'const char *'
          `-ImplicitCastExpr 0x15a00e320 <col:35> 'const char *' <LValueToRValue>
            `-DeclRefExpr 0x15a00e250 <col:35> 'const char *' lvalue ParmVar 0x15a00ddf0 'from_end' 'const char *'
