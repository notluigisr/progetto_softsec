`-FunctionDecl 0x120122898  line:1:23 nft_flow_rule_create 'struct nft_flow_rule *(struct net *, const struct nft_rule *)'
  |-ParmVarDecl 0x10480e2e8 <col:44, col:56> col:56 used net 'struct net *'
  |-ParmVarDecl 0x1201226c8 <line:2:9, col:32> col:32 used rule 'const struct nft_rule *'
  `-CompoundStmt 0x106809300 <line:3:1, line:56:1>
    |-DeclStmt 0x120122b88 <line:4:2, col:29>
    | |-RecordDecl 0x120122998 <col:2, col:9> col:9 struct nft_offload_ctx
    | `-VarDecl 0x120122b08 <col:2, col:26> col:26 used ctx 'struct nft_offload_ctx *'
    |-DeclStmt 0x120122c90 <line:5:2, col:28>
    | `-VarDecl 0x120122c28 <col:2, col:24> col:24 used flow 'struct nft_flow_rule *'
    |-DeclStmt 0x120122de0 <line:6:2, col:26>
    | |-VarDecl 0x120122cc0 <col:2, col:20> col:6 used num_actions 'int' cinit
    | | `-IntegerLiteral 0x120122d28 <col:20> 'int' 0
    | `-VarDecl 0x120122d60 <col:2, col:23> col:23 used err 'int'
    |-DeclStmt 0x120122fe8 <line:7:2, col:23>
    | |-RecordDecl 0x120122df8 <col:2, col:9> col:9 struct nft_expr
    | `-VarDecl 0x120122f68 <col:2, col:19> col:19 used expr 'struct nft_expr *'
    |-BinaryOperator 0x120123230 <line:9:2, col:28> 'struct nft_expr *' '='
    | |-DeclRefExpr 0x120123000 <col:2> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    | `-ImplicitCastExpr 0x120123218 <col:9, col:28> 'struct nft_expr *' <IntegralToPointer>
    |   `-CallExpr 0x1201231d8 <col:9, col:28> 'int'
    |     |-ImplicitCastExpr 0x1201231c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x120123150 <col:9> 'int ()' Function 0x120123098 'nft_expr_first' 'int ()'
    |     `-ImplicitCastExpr 0x120123200 <col:24> 'const struct nft_rule *' <LValueToRValue>
    |       `-DeclRefExpr 0x120123170 <col:24> 'const struct nft_rule *' lvalue ParmVar 0x1201226c8 'rule' 'const struct nft_rule *'
    |-WhileStmt 0x1201251a8 <line:10:2, line:15:2>
    | |-CallExpr 0x1201233a8 <line:10:9, col:33> 'int'
    | | |-ImplicitCastExpr 0x120123390 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x120123330 <col:9> 'int ()' Function 0x120123278 'nft_expr_more' 'int ()'
    | | |-ImplicitCastExpr 0x1201233d8 <col:23> 'const struct nft_rule *' <LValueToRValue>
    | | | `-DeclRefExpr 0x120123350 <col:23> 'const struct nft_rule *' lvalue ParmVar 0x1201226c8 'rule' 'const struct nft_rule *'
    | | `-ImplicitCastExpr 0x1201233f0 <col:29> 'struct nft_expr *' <LValueToRValue>
    | |   `-DeclRefExpr 0x120123370 <col:29> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    | `-CompoundStmt 0x120125188 <col:36, line:15:2>
    |   |-IfStmt 0x120123560 <line:11:3, line:12:15>
    |   | |-BinaryOperator 0x120123508 <line:11:7, col:34> '<dependent type>' contains-errors '&'
    |   | | |-CXXDependentScopeMemberExpr 0x120123468 <col:7, col:18> '<dependent type>' contains-errors lvalue ->offload_flags
    |   | | | `-RecoveryExpr 0x120123440 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x120123408 <col:7> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |   | | `-RecoveryExpr 0x1201234e8 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-UnaryOperator 0x120123548 <line:12:4, col:15> 'int' postfix '++'
    |   |   `-DeclRefExpr 0x120123528 <col:4> 'int' lvalue Var 0x120122cc0 'num_actions' 'int'
    |   `-BinaryOperator 0x120125168 <line:14:3, col:28> 'struct nft_expr *' '='
    |     |-DeclRefExpr 0x120123580 <col:3> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |     `-ImplicitCastExpr 0x120125150 <col:10, col:28> 'struct nft_expr *' <IntegralToPointer>
    |       `-CallExpr 0x120125110 <col:10, col:28> 'int'
    |         |-ImplicitCastExpr 0x1201250f8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x1201250b8 <col:10> 'int ()' Function 0x120125000 'nft_expr_next' 'int ()'
    |         `-ImplicitCastExpr 0x120125138 <col:24> 'struct nft_expr *' <LValueToRValue>
    |           `-DeclRefExpr 0x1201250d8 <col:24> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |-IfStmt 0x120125438 <line:17:2, line:18:29>
    | |-BinaryOperator 0x120125220 <line:17:6, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x120125208 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1201251c8 <col:6> 'int' lvalue Var 0x120122cc0 'num_actions' 'int'
    | | `-IntegerLiteral 0x1201251e8 <col:21> 'int' 0
    | `-ReturnStmt 0x120125428 <line:18:3, col:29>
    |   `-CallExpr 0x120125400 <col:10, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x120125320 <col:10> 'int ()' Function 0x120125268 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x1201253e8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1201253d0 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1201253b0 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x120125608 <line:20:2, col:40> 'struct nft_flow_rule *' '='
    | |-DeclRefExpr 0x120125458 <col:2> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    | `-ImplicitCastExpr 0x1201255f0 <col:9, col:40> 'struct nft_flow_rule *' <IntegralToPointer>
    |   `-CallExpr 0x1201255b0 <col:9, col:40> 'int'
    |     |-ImplicitCastExpr 0x120125598 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x120125558 <col:9> 'int ()' Function 0x1201254a0 'nft_flow_rule_alloc' 'int ()'
    |     `-ImplicitCastExpr 0x1201255d8 <col:29> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x120125578 <col:29> 'int' lvalue Var 0x120122cc0 'num_actions' 'int'
    |-IfStmt 0x120125790 <line:21:2, line:22:25>
    | |-UnaryOperator 0x120125660 <line:21:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x120125648 <col:7> 'struct nft_flow_rule *' <LValueToRValue>
    | |   `-DeclRefExpr 0x120125628 <col:7> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    | `-ReturnStmt 0x120125780 <line:22:3, col:25>
    |   `-CallExpr 0x120125758 <col:10, col:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x120125678 <col:10> 'int ()' Function 0x120125268 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x120125740 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x120125728 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x120125708 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x120125880 <line:24:2, col:28> 'struct nft_expr *' '='
    | |-DeclRefExpr 0x1201257b0 <col:2> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    | `-ImplicitCastExpr 0x120125868 <col:9, col:28> 'struct nft_expr *' <IntegralToPointer>
    |   `-CallExpr 0x120125828 <col:9, col:28> 'int'
    |     |-ImplicitCastExpr 0x120125810 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1201257d0 <col:9> 'int ()' Function 0x120123098 'nft_expr_first' 'int ()'
    |     `-ImplicitCastExpr 0x120125850 <col:24> 'const struct nft_rule *' <LValueToRValue>
    |       `-DeclRefExpr 0x1201257f0 <col:24> 'const struct nft_rule *' lvalue ParmVar 0x1201226c8 'rule' 'const struct nft_rule *'
    |-IfStmt 0x120125bf8 <line:27:2, line:30:2>
    | |-UnaryOperator 0x120125a60 <line:27:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x120125a48 <col:7> 'struct nft_offload_ctx *' <LValueToRValue>
    | |   `-DeclRefExpr 0x120125a28 <col:7> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    | `-CompoundStmt 0x120125bd8 <col:12, line:30:2>
    |   |-BinaryOperator 0x120125b50 <line:28:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x120125a78 <col:3> 'int' lvalue Var 0x120122d60 'err' 'int'
    |   | `-UnaryOperator 0x120125b38 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x120125b20 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x120125b00 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x120125bc0 <line:29:3, col:8> 'err_out' 0x120125b70
    |-BinaryOperator 0x120125c98 <line:31:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x120125c50 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x120125c18 <col:2> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    | `-DeclRefExpr 0x120125c78 <col:13> 'struct net *' lvalue ParmVar 0x10480e2e8 'net' 'struct net *'
    |-BinaryOperator 0x120125db8 <line:32:2, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x120125d18 <col:2, col:11> '<dependent type>' contains-errors lvalue .type
    | | `-RecoveryExpr 0x120125cf0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x120125cb8 <col:2> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    | `-RecoveryExpr 0x120125d98 <col:18> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x106808b50 <line:34:2, line:44:2>
    | |-CallExpr 0x120125e50 <line:34:9, col:33> 'int'
    | | |-ImplicitCastExpr 0x120125e38 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x120125dd8 <col:9> 'int ()' Function 0x120123278 'nft_expr_more' 'int ()'
    | | |-ImplicitCastExpr 0x120125e80 <col:23> 'const struct nft_rule *' <LValueToRValue>
    | | | `-DeclRefExpr 0x120125df8 <col:23> 'const struct nft_rule *' lvalue ParmVar 0x1201226c8 'rule' 'const struct nft_rule *'
    | | `-ImplicitCastExpr 0x120125e98 <col:29> 'struct nft_expr *' <LValueToRValue>
    | |   `-DeclRefExpr 0x120125e18 <col:29> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    | `-CompoundStmt 0x106808b20 <col:36, line:44:2>
    |   |-IfStmt 0x120125fd8 <line:35:3, line:38:3>
    |   | |-UnaryOperator 0x120125f70 <line:35:7, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x120125f58 <col:8, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-CXXDependentScopeMemberExpr 0x120125f10 <col:8, col:19> '<dependent type>' contains-errors lvalue ->offload
    |   | |     `-RecoveryExpr 0x120125ee8 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x120125eb0 <col:8> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |   | `-CompoundStmt 0x120125fc0 <col:28, line:38:3>
    |   |   `-GotoStmt 0x120125fa8 <line:37:4, col:9> 'err_out' 0x120125b70
    |   |-BinaryOperator 0x106808960 <line:39:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x106808800 <col:3> 'int' lvalue Var 0x120122d60 'err' 'int'
    |   | `-CallExpr 0x106808928 <col:9, col:43> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x106808880 <col:9, col:20> '<dependent type>' contains-errors lvalue ->offload
    |   |   | `-RecoveryExpr 0x106808858 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x106808820 <col:9> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |   |   |-DeclRefExpr 0x1068088c8 <col:28> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    |   |   |-DeclRefExpr 0x1068088e8 <col:33> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    |   |   `-DeclRefExpr 0x106808908 <col:39> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |   |-IfStmt 0x106808a10 <line:40:3, line:41:9>
    |   | |-BinaryOperator 0x1068089d8 <line:40:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1068089c0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x106808980 <col:7> 'int' lvalue Var 0x120122d60 'err' 'int'
    |   | | `-IntegerLiteral 0x1068089a0 <col:13> 'int' 0
    |   | `-GotoStmt 0x1068089f8 <line:41:4, col:9> 'err_out' 0x120125b70
    |   `-BinaryOperator 0x106808b00 <line:43:3, col:28> 'struct nft_expr *' '='
    |     |-DeclRefExpr 0x106808a30 <col:3> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |     `-ImplicitCastExpr 0x106808ae8 <col:10, col:28> 'struct nft_expr *' <IntegralToPointer>
    |       `-CallExpr 0x106808aa8 <col:10, col:28> 'int'
    |         |-ImplicitCastExpr 0x106808a90 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x106808a50 <col:10> 'int ()' Function 0x120125000 'nft_expr_next' 'int ()'
    |         `-ImplicitCastExpr 0x106808ad0 <col:24> 'struct nft_expr *' <LValueToRValue>
    |           `-DeclRefExpr 0x106808a70 <col:24> 'struct nft_expr *' lvalue Var 0x120122f68 'expr' 'struct nft_expr *'
    |-CallExpr 0x106808cc8 <line:45:2, col:39> 'int'
    | |-ImplicitCastExpr 0x106808cb0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x106808c50 <col:2> 'int ()' Function 0x106808b98 'nft_flow_rule_transfer_vlan' 'int ()'
    | |-ImplicitCastExpr 0x106808cf8 <col:30> 'struct nft_offload_ctx *' <LValueToRValue>
    | | `-DeclRefExpr 0x106808c70 <col:30> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    | `-ImplicitCastExpr 0x106808d10 <col:35> 'struct nft_flow_rule *' <LValueToRValue>
    |   `-DeclRefExpr 0x106808c90 <col:35> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    |-BinaryOperator 0x106808e30 <line:47:2, col:25> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x106808d60 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x106808d28 <col:2> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    | `-CXXDependentScopeMemberExpr 0x106808de8 <col:16, col:25> '<dependent type>' contains-errors lvalue .l3num
    |   `-RecoveryExpr 0x106808dc0 <col:16, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x106808d88 <col:16> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    |-CallExpr 0x106808f88 <line:48:2, col:11> 'int'
    | |-ImplicitCastExpr 0x106808f70 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x106808f30 <col:2> 'int ()' Function 0x106808e78 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x106808fb0 <col:8> 'struct nft_offload_ctx *' <LValueToRValue>
    |   `-DeclRefExpr 0x106808f50 <col:8> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    |-ReturnStmt 0x106809000 <line:50:2, col:9>
    | `-ImplicitCastExpr 0x106808fe8 <col:9> 'struct nft_flow_rule *' <LValueToRValue>
    |   `-DeclRefExpr 0x106808fc8 <col:9> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    |-LabelStmt 0x1068090a8 <line:51:1, line:52:11> 'err_out'
    | `-CallExpr 0x106809068 <col:2, col:11> 'int'
    |   |-ImplicitCastExpr 0x106809050 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x106809010 <col:2> 'int ()' Function 0x106808e78 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x106809090 <col:8> 'struct nft_offload_ctx *' <LValueToRValue>
    |     `-DeclRefExpr 0x106809030 <col:8> 'struct nft_offload_ctx *' lvalue Var 0x120122b08 'ctx' 'struct nft_offload_ctx *'
    |-CallExpr 0x106809200 <line:53:2, col:28> 'int'
    | |-ImplicitCastExpr 0x1068091e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1068091a8 <col:2> 'int ()' Function 0x1068090f0 'nft_flow_rule_destroy' 'int ()'
    | `-ImplicitCastExpr 0x106809228 <col:24> 'struct nft_flow_rule *' <LValueToRValue>
    |   `-DeclRefExpr 0x1068091c8 <col:24> 'struct nft_flow_rule *' lvalue Var 0x120122c28 'flow' 'struct nft_flow_rule *'
    `-ReturnStmt 0x1068092f0 <line:55:2, col:20>
      `-ImplicitCastExpr 0x1068092d8 <col:9, col:20> 'struct nft_flow_rule *' <IntegralToPointer>
        `-CallExpr 0x106809298 <col:9, col:20> 'int'
          |-ImplicitCastExpr 0x106809280 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x106809240 <col:9> 'int ()' Function 0x120125268 'ERR_PTR' 'int ()'
          `-ImplicitCastExpr 0x1068092c0 <col:17> 'int' <LValueToRValue>
            `-DeclRefExpr 0x106809260 <col:17> 'int' lvalue Var 0x120122d60 'err' 'int'
