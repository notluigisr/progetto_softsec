`-FunctionDecl 0x11e1261f8  line:1:16 invalid esp_fifo_pop 'int (int *)' static
  |-ParmVarDecl 0x11e126128 <col:29, col:39> col:39 invalid s 'int *'
  `-CompoundStmt 0x11e1266e8 <line:2:1, line:8:1>
    |-IfStmt 0x11e126510 <line:3:5, line:5:5>
    | |-CallExpr 0x11e1264a0 <line:3:9, col:32> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11e126400 <col:9> 'int ()' Function 0x11e126348 'fifo8_is_empty' 'int ()'
    | | `-UnaryOperator 0x11e126488 <col:24, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-CXXDependentScopeMemberExpr 0x11e126440 <col:25, col:28> '<dependent type>' contains-errors lvalue ->fifo
    | |     `-RecoveryExpr 0x11e126420 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e1264f8 <col:35, line:5:5>
    |   `-ReturnStmt 0x11e1264e8 <line:4:9, col:16>
    |     `-IntegerLiteral 0x11e1264c8 <col:16> 'int' 0
    `-ReturnStmt 0x11e1266d8 <line:7:5, col:30>
      `-CallExpr 0x11e1266b0 <col:12, col:30> '<dependent type>' contains-errors
        |-DeclRefExpr 0x11e126610 <col:12> 'int ()' Function 0x11e126558 'fifo8_pop' 'int ()'
        `-UnaryOperator 0x11e126698 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-CXXDependentScopeMemberExpr 0x11e126650 <col:23, col:26> '<dependent type>' contains-errors lvalue ->fifo
            `-RecoveryExpr 0x11e126630 <col:23> '<dependent type>' contains-errors lvalue
