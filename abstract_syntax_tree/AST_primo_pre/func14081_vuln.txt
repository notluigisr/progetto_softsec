`-FunctionDecl 0x14e88d058  line:1:1 invalid SWFInput_readSBits 'int (int, int)'
  |-ParmVarDecl 0x14e88cef0 <col:20, col:29> col:29 invalid input 'int'
  |-ParmVarDecl 0x14e88cf70 <col:36, col:40> col:40 used number 'int'
  `-CompoundStmt 0x14e068478 <line:2:1, line:9:1>
    |-DeclStmt 0x14e88d380 <line:3:2, col:44>
    | `-VarDecl 0x14e88d128 <col:2, col:43> col:6 used num 'int' cinit
    |   `-CallExpr 0x14e88d350 <col:12, col:43> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14e88d2f0 <col:12> 'int ()' Function 0x14e88d238 'SWFInput_readBits' 'int ()'
    |     |-RecoveryExpr 0x14e88d310 <col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e88d330 <col:37> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'
    `-IfStmt 0x14e068448 <line:5:2, line:8:10> has_else
      |-BinaryOperator 0x14e88d4c8 <line:5:7, col:27> 'int' contains-errors '&'
      | |-ImplicitCastExpr 0x14e88d4b0 <col:7> 'int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x14e88d398 <col:7> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int'
      | `-ParenExpr 0x14e88d490 <col:13, col:27> 'int'
      |   `-BinaryOperator 0x14e88d470 <col:14, col:26> 'int' '<<'
      |     |-IntegerLiteral 0x14e88d3b8 <col:14> 'int' 1
      |     `-ParenExpr 0x14e88d450 <col:17, col:26> 'int'
      |       `-BinaryOperator 0x14e88d430 <col:18, col:25> 'int' '-'
      |         |-ImplicitCastExpr 0x14e88d418 <col:18> 'int' <LValueToRValue>
      |         | `-DeclRefExpr 0x14e88d3d8 <col:18> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'
      |         `-IntegerLiteral 0x14e88d3f8 <col:25> 'int' 1
      |-ReturnStmt 0x14e88d5d8 <line:6:3, col:26>
      | `-BinaryOperator 0x14e88d5b8 <col:10, col:26> 'int' contains-errors '-'
      |   |-ImplicitCastExpr 0x14e88d5a0 <col:10> 'int' contains-errors <LValueToRValue>
      |   | `-DeclRefExpr 0x14e88d4e8 <col:10> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int'
      |   `-ParenExpr 0x14e88d580 <col:16, col:26> 'int'
      |     `-BinaryOperator 0x14e88d560 <col:17, col:20> 'int' '<<'
      |       |-IntegerLiteral 0x14e88d508 <col:17> 'int' 1
      |       `-ImplicitCastExpr 0x14e88d548 <col:20> 'int' <LValueToRValue>
      |         `-DeclRefExpr 0x14e88d528 <col:20> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'
      `-ReturnStmt 0x14e068438 <line:8:3, col:10>
        `-ImplicitCastExpr 0x14e068420 <col:10> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x14e068400 <col:10> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int'
