`-FunctionDecl 0x1261282e8  line:1:1 cookie_sidecheck 'int (int, const char *, int)'
  |-ParmVarDecl 0x1261280d8 <col:18, col:22> col:22 used i 'int'
  |-ParmVarDecl 0x126128170 <col:25, col:39> col:39 used bp2 'const char *'
  |-ParmVarDecl 0x1261281f0 <col:44, col:48> col:48 used initiator 'int'
  `-CompoundStmt 0x126143f00 <line:2:1, line:36:1>
    |-DeclStmt 0x1261285d8 <line:3:2, col:21>
    | |-RecordDecl 0x1261283f0 <col:8, col:15> col:15 struct ip
    | `-VarDecl 0x126128558 <col:2, col:19> col:19 used ip 'const struct ip *'
    |-DeclStmt 0x1261287d8 <line:4:2, col:27>
    | |-RecordDecl 0x1261285f0 <col:8, col:15> col:15 struct ip6_hdr
    | `-VarDecl 0x126128758 <col:2, col:24> col:24 used ip6 'const struct ip6_hdr *'
    |-BinaryOperator 0x126140b08 <line:6:2, col:26> 'const struct ip *' '='
    | |-DeclRefExpr 0x126140a00 <col:2> 'const struct ip *' lvalue Var 0x126128558 'ip' 'const struct ip *'
    | `-CStyleCastExpr 0x126140ae0 <col:7, col:26> 'const struct ip *' <BitCast>
    |   `-ImplicitCastExpr 0x126140ac8 <col:26> 'const char *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x126140a20 <col:26> 'const char *' lvalue ParmVar 0x126128170 'bp2' 'const char *'
    |-SwitchStmt 0x126140d08 <line:7:2, line:33:2>
    | |-CallExpr 0x126140cc8 <line:7:10, col:17> 'int'
    | | |-ImplicitCastExpr 0x126140cb0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x126140c40 <col:10> 'int ()' Function 0x126140b88 'IP_V' 'int ()'
    | | `-ImplicitCastExpr 0x126140cf0 <col:15> 'const struct ip *' <LValueToRValue>
    | |   `-DeclRefExpr 0x126140c60 <col:15> 'const struct ip *' lvalue Var 0x126128558 'ip' 'const struct ip *'
    | `-CompoundStmt 0x126143e80 <col:20, line:33:2>
    |   |-CaseStmt 0x126140d68 <line:8:2, line:10:11>
    |   | |-ConstantExpr 0x126140d50 <line:8:7> 'int'
    |   | | `-IntegerLiteral 0x126140d30 <col:7> 'int' 4
    |   | `-IfStmt 0x126140e38 <line:9:3, line:10:11>
    |   |   |-RecoveryExpr 0x126140de8 <line:9:7, col:33> '_Bool' contains-errors
    |   |   `-ReturnStmt 0x126140e28 <line:10:4, col:11>
    |   |     `-IntegerLiteral 0x126140e08 <col:11> 'int' 0
    |   |-IfStmt 0x126141880 <line:11:3, line:17:3> has_else
    |   | |-ImplicitCastExpr 0x126140e78 <line:11:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x126140e58 <col:7> 'int' lvalue ParmVar 0x1261281f0 'initiator' 'int'
    |   | |-CompoundStmt 0x1261415f8 <col:18, line:14:3>
    |   | | `-IfStmt 0x1261415d8 <line:12:4, line:13:12>
    |   | |   |-RecoveryExpr 0x126141588 <line:12:8, col:92> '_Bool' contains-errors
    |   | |   `-ReturnStmt 0x1261415c8 <line:13:5, col:12>
    |   | |     `-IntegerLiteral 0x1261415a8 <col:12> 'int' 1
    |   | `-CompoundStmt 0x126141868 <line:14:10, line:17:3>
    |   |   `-IfStmt 0x126141848 <line:15:4, line:16:12>
    |   |     |-RecoveryExpr 0x1261417f8 <line:15:8, col:92> '_Bool' contains-errors
    |   |     `-ReturnStmt 0x126141838 <line:16:5, col:12>
    |   |       `-IntegerLiteral 0x126141818 <col:12> 'int' 1
    |   |-BreakStmt 0x1261418b0 <line:18:3>
    |   |-CaseStmt 0x1261418f0 <line:19:2, line:21:11>
    |   | |-ConstantExpr 0x1261418d8 <line:19:7> 'int'
    |   | | `-IntegerLiteral 0x1261418b8 <col:7> 'int' 6
    |   | `-IfStmt 0x1261419c0 <line:20:3, line:21:11>
    |   |   |-RecoveryExpr 0x126141970 <line:20:7, col:33> '_Bool' contains-errors
    |   |   `-ReturnStmt 0x1261419b0 <line:21:4, col:11>
    |   |     `-IntegerLiteral 0x126141990 <col:11> 'int' 0
    |   |-BinaryOperator 0x1261438e8 <line:22:3, col:33> 'const struct ip6_hdr *' '='
    |   | |-DeclRefExpr 0x1261419e0 <col:3> 'const struct ip6_hdr *' lvalue Var 0x126128758 'ip6' 'const struct ip6_hdr *'
    |   | `-CStyleCastExpr 0x1261438c0 <col:9, col:33> 'const struct ip6_hdr *' <BitCast>
    |   |   `-ImplicitCastExpr 0x1261438a8 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
    |   |     `-DeclRefExpr 0x126143800 <col:33> 'const char *' lvalue ParmVar 0x126128170 'bp2' 'const char *'
    |   |-IfStmt 0x126143e20 <line:23:3, line:29:3> has_else
    |   | |-ImplicitCastExpr 0x126143928 <line:23:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x126143908 <col:7> 'int' lvalue ParmVar 0x1261281f0 'initiator' 'int'
    |   | |-CompoundStmt 0x126143b98 <col:18, line:26:3>
    |   | | `-IfStmt 0x126143b78 <line:24:4, line:25:12>
    |   | |   |-RecoveryExpr 0x126143b28 <line:24:8, col:95> '_Bool' contains-errors
    |   | |   `-ReturnStmt 0x126143b68 <line:25:5, col:12>
    |   | |     `-IntegerLiteral 0x126143b48 <col:12> 'int' 1
    |   | `-CompoundStmt 0x126143e08 <line:26:10, line:29:3>
    |   |   `-IfStmt 0x126143de8 <line:27:4, line:28:12>
    |   |     |-RecoveryExpr 0x126143d98 <line:27:8, col:95> '_Bool' contains-errors
    |   |     `-ReturnStmt 0x126143dd8 <line:28:5, col:12>
    |   |       `-IntegerLiteral 0x126143db8 <col:12> 'int' 1
    |   |-BreakStmt 0x126143e50 <line:30:3>
    |   `-DefaultStmt 0x126143e60 <line:31:2, line:32:3>
    |     `-BreakStmt 0x126143e58 <col:3>
    `-ReturnStmt 0x126143ef0 <line:35:2, col:9>
      `-IntegerLiteral 0x126143ed0 <col:9> 'int' 0
