`-FunctionDecl 0x14d80e0c8  line:1:12 invalid cbs_av1_read_uvlc 'int (int *, int *, const char *, int *, int, int)' static
  |-ParmVarDecl 0x14d80dd28 <col:30, col:53> col:53 invalid ctx 'int *'
  |-ParmVarDecl 0x14d80dda8 <col:58, col:73> col:73 invalid gbc 'int *'
  |-ParmVarDecl 0x14d80de28 <line:2:30, col:42> col:42 used name 'const char *'
  |-ParmVarDecl 0x14d80dea8 <col:48, col:58> col:58 invalid write_to 'int *'
  |-ParmVarDecl 0x14d80df28 <line:3:30, col:39> col:39 invalid range_min 'int'
  |-ParmVarDecl 0x14d80dfa8 <col:50, col:59> col:59 invalid range_max 'int'
  `-CompoundStmt 0x14d1237f0 <line:4:1, line:55:1>
    |-DeclStmt 0x14d80e3c8 <line:6:5, col:31>
    | |-VarDecl 0x14d80e1b8 <col:5, col:9> col:9 used position 'int'
    | |-VarDecl 0x14d80e238 <col:5, col:19> col:19 used zeroes 'int'
    | |-VarDecl 0x14d80e2b8 <col:5, col:27> col:27 used i 'int'
    | `-VarDecl 0x14d80e338 <col:5, col:30> col:30 used j 'int'
    |-DeclStmt 0x14d8274e8 <line:7:5, col:18>
    | `-VarDecl 0x14d827480 <col:5, col:17> col:10 used bits 'char[65]'
    |-IfStmt 0x14d827768 <line:9:5, line:10:38>
    | |-CXXDependentScopeMemberExpr 0x14d827520 <line:9:9, col:14> '<dependent type>' contains-errors lvalue ->trace_enable
    | | `-RecoveryExpr 0x14d827500 <col:9> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14d827748 <line:10:9, col:38> 'int' contains-errors '='
    |   |-DeclRefExpr 0x14d827568 <col:9> 'int' lvalue Var 0x14d80e1b8 'position' 'int'
    |   `-CallExpr 0x14d827720 <col:20, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d8276e0 <col:20> 'int ()' Function 0x14d827628 'get_bits_count' 'int ()'
    |     `-RecoveryExpr 0x14d827700 <col:35> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d827808 <line:12:5, col:18> 'int' '='
    | |-DeclRefExpr 0x14d827788 <col:5> 'int' lvalue Var 0x14d80e238 'zeroes' 'int'
    | `-BinaryOperator 0x14d8277e8 <col:14, col:18> 'int' '='
    |   |-DeclRefExpr 0x14d8277a8 <col:14> 'int' lvalue Var 0x14d80e2b8 'i' 'int'
    |   `-IntegerLiteral 0x14d8277c8 <col:18> 'int' 0
    |-WhileStmt 0x14d828138 <line:13:5, line:27:5>
    | |-IntegerLiteral 0x14d827828 <line:13:12> 'int' 1
    | `-CompoundStmt 0x14d828118 <col:15, line:27:5>
    |   |-IfStmt 0x14d827d40 <line:14:9, line:18:9>
    |   | |-BinaryOperator 0x14d827a08 <line:14:13, col:43> 'int' contains-errors '<'
    |   | | |-CallExpr 0x14d827968 <col:13, col:30> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x14d827928 <col:13> 'int ()' Function 0x14d827870 'get_bits_left' 'int ()'
    |   | | | `-RecoveryExpr 0x14d827948 <col:27> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x14d8279e8 <col:34, col:43> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x14d8279d0 <col:34> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x14d827990 <col:34> 'int' lvalue Var 0x14d80e238 'zeroes' 'int'
    |   | |   `-IntegerLiteral 0x14d8279b0 <col:43> 'int' 1
    |   | `-CompoundStmt 0x14d827d20 <col:46, line:18:9>
    |   |   |-CallExpr 0x14d827c98 <line:15:13, line:16:31> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d827b08 <line:15:13> 'int ()' Function 0x14d827a50 'av_log' 'int ()'
    |   |   | |-CXXDependentScopeMemberExpr 0x14d827b48 <col:20, col:25> '<dependent type>' contains-errors lvalue ->log_ctx
    |   |   | | `-RecoveryExpr 0x14d827b28 <col:20> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x14d827c78 <col:34> '<dependent type>' contains-errors lvalue
    |   |   | |-StringLiteral 0x14d827bf0 <col:48, line:16:20> 'char[7]' lvalue "STRSTR"
    |   |   | `-DeclRefExpr 0x14d827c18 <col:27> 'const char *' lvalue ParmVar 0x14d80de28 'name' 'const char *'
    |   |   `-ReturnStmt 0x14d827d10 <line:17:13, col:20>
    |   |     `-RecoveryExpr 0x14d827cf0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14d8280e8 <line:20:9, line:26:9> has_else
    |     |-CallExpr 0x14d827e80 <line:20:13, col:26> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x14d827e40 <col:13> 'int ()' Function 0x14d827d88 'get_bits1' 'int ()'
    |     | `-RecoveryExpr 0x14d827e60 <col:23> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x14d827f90 <col:29, line:23:9>
    |     | |-BinaryOperator 0x14d827f68 <line:21:13, col:25> 'char' '='
    |     | | |-ArraySubscriptExpr 0x14d827f18 <col:13, col:21> 'char' lvalue
    |     | | | |-ImplicitCastExpr 0x14d827f00 <col:13> 'char *' <ArrayToPointerDecay>
    |     | | | | `-DeclRefExpr 0x14d827ea8 <col:13> 'char[65]' lvalue Var 0x14d827480 'bits' 'char[65]'
    |     | | | `-UnaryOperator 0x14d827ee8 <col:18, col:19> 'int' postfix '++'
    |     | | |   `-DeclRefExpr 0x14d827ec8 <col:18> 'int' lvalue Var 0x14d80e2b8 'i' 'int'
    |     | | `-ImplicitCastExpr 0x14d827f50 <col:25> 'char' <IntegralCast>
    |     | |   `-CharacterLiteral 0x14d827f38 <col:25> 'int' 49
    |     | `-BreakStmt 0x14d827f88 <line:22:13>
    |     `-CompoundStmt 0x14d8280c8 <line:23:16, line:26:9>
    |       |-BinaryOperator 0x14d828070 <line:24:13, col:25> 'char' '='
    |       | |-ArraySubscriptExpr 0x14d828020 <col:13, col:21> 'char' lvalue
    |       | | |-ImplicitCastExpr 0x14d828008 <col:13> 'char *' <ArrayToPointerDecay>
    |       | | | `-DeclRefExpr 0x14d827fb0 <col:13> 'char[65]' lvalue Var 0x14d827480 'bits' 'char[65]'
    |       | | `-UnaryOperator 0x14d827ff0 <col:18, col:19> 'int' postfix '++'
    |       | |   `-DeclRefExpr 0x14d827fd0 <col:18> 'int' lvalue Var 0x14d80e2b8 'i' 'int'
    |       | `-ImplicitCastExpr 0x14d828058 <col:25> 'char' <IntegralCast>
    |       |   `-CharacterLiteral 0x14d828040 <col:25> 'int' 48
    |       `-UnaryOperator 0x14d8280b0 <line:25:13, col:15> 'int' prefix '++'
    |         `-DeclRefExpr 0x14d828090 <col:15> 'int' lvalue Var 0x14d80e238 'zeroes' 'int'
    |-IfStmt 0x14d123180 <line:29:5, line:38:5> has_else
    | |-BinaryOperator 0x14d8281b0 <line:29:9, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x14d828198 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d828158 <col:9> 'int' lvalue Var 0x14d80e238 'zeroes' 'int'
    | | `-IntegerLiteral 0x14d828178 <col:19> 'int' 32
    | |-CompoundStmt 0x14d828360 <col:23, line:31:5>
    | `-CompoundStmt 0x14d123170 <col:12, line:38:5>
    |-IfStmt 0x14d1235b0 <line:40:5, line:44:5>
    | |-CXXDependentScopeMemberExpr 0x14d1231d0 <line:40:9, col:14> '<dependent type>' contains-errors lvalue ->trace_enable
    | | `-RecoveryExpr 0x14d1231b0 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d123590 <col:28, line:44:5>
    |   |-BinaryOperator 0x14d1232e0 <line:41:9, col:19> 'char' '='
    |   | |-ArraySubscriptExpr 0x14d123288 <col:9, col:15> 'char' lvalue
    |   | | |-ImplicitCastExpr 0x14d123258 <col:9> 'char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x14d123218 <col:9> 'char[65]' lvalue Var 0x14d827480 'bits' 'char[65]'
    |   | | `-ImplicitCastExpr 0x14d123270 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d123238 <col:14> 'int' lvalue Var 0x14d80e2b8 'i' 'int'
    |   | `-ImplicitCastExpr 0x14d1232c8 <col:19> 'char' <IntegralCast>
    |   |   `-IntegerLiteral 0x14d1232a8 <col:19> 'int' 0
    |   `-CallExpr 0x14d123540 <line:42:9, line:43:48> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d1233e0 <line:42:9> 'int ()' Function 0x14d123328 'ff_cbs_trace_syntax_element' 'int ()'
    |     |-RecoveryExpr 0x14d123400 <col:37> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x14d123420 <col:42> 'int' lvalue Var 0x14d80e1b8 'position' 'int'
    |     |-DeclRefExpr 0x14d123440 <col:52> 'const char *' lvalue ParmVar 0x14d80de28 'name' 'const char *'
    |     |-RecoveryExpr 0x14d123500 <col:58> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x14d123478 <line:43:37> 'char[65]' lvalue Var 0x14d827480 'bits' 'char[65]'
    |     `-RecoveryExpr 0x14d123520 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d123750 <line:46:5, line:51:5>
    | |-RecoveryExpr 0x14d123610 <line:46:9, col:38> '_Bool' contains-errors
    | `-CompoundStmt 0x14d123740 <col:49, line:51:5>
    `-ReturnStmt 0x14d1237e0 <line:54:5, col:12>
      `-IntegerLiteral 0x14d1237c0 <col:12> 'int' 0
