`-FunctionDecl 0x14800df18  line:1:1 invalid vte_sequence_handler_multiple 'int (int *, int *, int)'
  |-ParmVarDecl 0x14800dd28 <col:31, col:44> col:44 invalid terminal 'int *'
  |-ParmVarDecl 0x14800dda8 <line:2:10, col:23> col:23 invalid params 'int *'
  |-ParmVarDecl 0x14800de28 <line:3:10, col:37> col:37 referenced invalid handler 'int'
  `-CompoundStmt 0x13f922f18 <line:4:1, line:18:1>
    |-DeclStmt 0x14800e090 <line:5:2, col:14>
    | `-VarDecl 0x14800dff0 <col:2, col:13> col:7 used val 'long' cinit
    |   `-ImplicitCastExpr 0x14800e078 <col:13> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x14800e058 <col:13> 'int' 1
    |-DeclStmt 0x14800e128 <line:6:2, col:7>
    | `-VarDecl 0x14800e0c0 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x13f922c80 <line:9:2, line:15:2>
    | |-RecoveryExpr 0x14800e278 <line:9:6, col:47> '_Bool' contains-errors
    | `-CompoundStmt 0x13f922c68 <col:50, line:15:2>
    |   `-IfStmt 0x13f922c48 <line:11:3, line:14:3>
    |     |-CallExpr 0x13f9227f0 <line:11:7, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x13f922770 <col:7> 'int ()' Function 0x13f9226b8 'G_VALUE_HOLDS_LONG' 'int ()'
    |     | `-RecoveryExpr 0x13f9227d0 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13f922c28 <col:34, line:14:3>
    |       |-BinaryOperator 0x13f9229e0 <line:12:4, col:32> 'long' contains-errors '='
    |       | |-DeclRefExpr 0x13f922818 <col:4> 'long' lvalue Var 0x14800dff0 'val' 'long'
    |       | `-CallExpr 0x13f9229b8 <col:10, col:32> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x13f922918 <col:10> 'int ()' Function 0x13f922860 'g_value_get_long' 'int ()'
    |       |   `-RecoveryExpr 0x13f922998 <col:27> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x13f922c08 <line:13:4, col:20> 'long' '='
    |         |-DeclRefExpr 0x13f922a00 <col:4> 'long' lvalue Var 0x14800dff0 'val' 'long'
    |         `-ImplicitCastExpr 0x13f922bf0 <col:10, col:20> 'long' <IntegralCast>
    |           `-CallExpr 0x13f922ba8 <col:10, col:20> 'int'
    |             |-ImplicitCastExpr 0x13f922b90 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x13f922b00 <col:10> 'int ()' Function 0x13f922a48 'MAX' 'int ()'
    |             |-ImplicitCastExpr 0x13f922bd8 <col:14> 'long' <LValueToRValue>
    |             | `-DeclRefExpr 0x13f922b20 <col:14> 'long' lvalue Var 0x14800dff0 'val' 'long'
    |             `-IntegerLiteral 0x13f922b40 <col:19> 'int' 1
    `-ForStmt 0x13f922ee0 <line:16:2, line:17:26>
      |-BinaryOperator 0x13f922ce0 <line:16:7, col:11> 'int' '='
      | |-DeclRefExpr 0x13f922ca0 <col:7> 'int' lvalue Var 0x14800e0c0 'i' 'int'
      | `-IntegerLiteral 0x13f922cc0 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13f922d88 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x13f922d70 <col:14> 'long' <IntegralCast>
      | | `-ImplicitCastExpr 0x13f922d40 <col:14> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x13f922d00 <col:14> 'int' lvalue Var 0x14800e0c0 'i' 'int'
      | `-ImplicitCastExpr 0x13f922d58 <col:18> 'long' <LValueToRValue>
      |   `-DeclRefExpr 0x13f922d20 <col:18> 'long' lvalue Var 0x14800dff0 'val' 'long'
      |-UnaryOperator 0x13f922dc8 <col:23, col:24> 'int' postfix '++'
      | `-DeclRefExpr 0x13f922da8 <col:23> 'int' lvalue Var 0x14800e0c0 'i' 'int'
      `-CallExpr 0x13f922eb0 <line:17:3, col:26> '<dependent type>' contains-errors
        |-RecoveryExpr 0x13f922e00 <col:3> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x13f922de0 <col:3> 'int' lvalue ParmVar 0x14800de28 'handler' 'int'
        |-RecoveryExpr 0x13f922e28 <col:12> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x13f922e90 <col:22> '<dependent type>' contains-errors lvalue
