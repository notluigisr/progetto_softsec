`-FunctionDecl 0x13600ddc8  line:1:16 invalid last_seg 'int (int)' static
  |-ParmVarDecl 0x13600dcf0 <col:25, col:33> col:33 referenced invalid len 'int'
  `-CompoundStmt 0x13600e0d0 <line:2:1, line:10:1>
    |-IfStmt 0x13600df58 <line:3:2, line:5:2>
    | |-BinaryOperator 0x13600def0 <line:3:6, col:13> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x13600de78 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13600ded0 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13600df40 <col:32, line:5:2>
    |   `-ReturnStmt 0x13600df30 <line:4:3, col:10>
    |     `-IntegerLiteral 0x13600df10 <col:10> 'int' 0
    `-CompoundAssignOperator 0x13600e028 <line:7:2, col:9> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |-RecoveryExpr 0x13600df98 <col:2> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x13600df78 <col:2> 'int' lvalue ParmVar 0x13600dcf0 'len' 'int'
      `-RecoveryExpr 0x13600e008 <col:9> '<dependent type>' contains-errors lvalue
