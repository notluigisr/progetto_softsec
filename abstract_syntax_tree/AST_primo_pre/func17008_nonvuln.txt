`-FunctionDecl 0x12c9281c8  line:1:21 invalid mp_set_Jxyz_s 'double (int)' static
  |-ParmVarDecl 0x12c9280f0 <col:35, <invalid sloc>> col:52 invalid 'int'
  `-CompoundStmt 0x12d009398 <col:58, line:15:7>
    |-DeclStmt 0x12c928628 <line:3:9, col:110>
    | |-VarDecl 0x12c928338 <col:9, col:22> col:22 used ox 'const double'
    | |-VarDecl 0x12c928430 <col:9, col:52> col:52 used oy 'const double'
    | `-VarDecl 0x12c928528 <col:9, col:82> col:82 used oz 'const double'
    |-DeclStmt 0x12c941e40 <line:4:9, line:7:37>
    | |-VarDecl 0x12c928658 <line:4:9, line:5:36> col:11 used x 'const int' cinit
    | | `-CStyleCastExpr 0x12c941a18 <col:15, col:36> 'int' <FloatingToIntegral>
    | |   `-ParenExpr 0x12c9419f8 <col:20, col:36> 'double'
    | |     `-BinaryOperator 0x12c9419a0 <col:21, col:35> 'double' '+'
    | |       |-ImplicitCastExpr 0x12c941970 <col:21> 'double' <LValueToRValue>
    | |       | `-DeclRefExpr 0x12c9286c0 <col:21> 'const double' lvalue Var 0x12c928338 'ox' 'const double'
    | |       `-ImplicitCastExpr 0x12c941988 <col:26, col:35> 'double' <IntegralToFloating>
    | |         `-CallExpr 0x12c941948 <col:26, col:35> 'int'
    | |           |-ImplicitCastExpr 0x12c941930 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x12c9418b8 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    | |           `-IntegerLiteral 0x12c9418d8 <col:34> 'int' 2
    | |-VarDecl 0x12c941a58 <line:4:9, line:6:36> col:11 used y 'const int' cinit
    | | `-CStyleCastExpr 0x12c941c08 <col:15, col:36> 'int' <FloatingToIntegral>
    | |   `-ParenExpr 0x12c941be8 <col:20, col:36> 'double'
    | |     `-BinaryOperator 0x12c941b90 <col:21, col:35> 'double' '+'
    | |       |-ImplicitCastExpr 0x12c941b60 <col:21> 'double' <LValueToRValue>
    | |       | `-DeclRefExpr 0x12c941ac0 <col:21> 'const double' lvalue Var 0x12c928430 'oy' 'const double'
    | |       `-ImplicitCastExpr 0x12c941b78 <col:26, col:35> 'double' <IntegralToFloating>
    | |         `-CallExpr 0x12c941b38 <col:26, col:35> 'int'
    | |           |-ImplicitCastExpr 0x12c941b20 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | |           | `-DeclRefExpr 0x12c941ae0 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    | |           `-IntegerLiteral 0x12c941b00 <col:34> 'int' 3
    | `-VarDecl 0x12c941c48 <line:4:9, line:7:36> col:11 used z 'const int' cinit
    |   `-CStyleCastExpr 0x12c941df8 <col:15, col:36> 'int' <FloatingToIntegral>
    |     `-ParenExpr 0x12c941dd8 <col:20, col:36> 'double'
    |       `-BinaryOperator 0x12c941d80 <col:21, col:35> 'double' '+'
    |         |-ImplicitCastExpr 0x12c941d50 <col:21> 'double' <LValueToRValue>
    |         | `-DeclRefExpr 0x12c941cb0 <col:21> 'const double' lvalue Var 0x12c928528 'oz' 'const double'
    |         `-ImplicitCastExpr 0x12c941d68 <col:26, col:35> 'double' <IntegralToFloating>
    |           `-CallExpr 0x12c941d28 <col:26, col:35> 'int'
    |             |-ImplicitCastExpr 0x12c941d10 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x12c941cd0 <col:26> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
    |             `-IntegerLiteral 0x12c941cf0 <col:34> 'int' 4
    |-DeclStmt 0x12c941ef0 <line:8:9, col:36>
    | `-VarDecl 0x12c941e70 <col:9, col:17> col:17 invalid val 'const int'
    |-IfStmt 0x12d0092d0 <line:9:9, line:13:9>
    | |-BinaryOperator 0x12c9426a8 <line:9:13, col:84> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12c9425e0 <col:13, col:67> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x12c942588 <col:13, col:59> 'int' contains-errors '&&'
    | | | | |-BinaryOperator 0x12c9424c0 <col:13, col:41> 'int' contains-errors '&&'
    | | | | | |-BinaryOperator 0x12c942468 <col:13, col:33> 'int' contains-errors '&&'
    | | | | | | |-BinaryOperator 0x12c9423a0 <col:13, col:16> 'int' '>='
    | | | | | | | |-ImplicitCastExpr 0x12c942388 <col:13> 'int' <LValueToRValue>
    | | | | | | | | `-DeclRefExpr 0x12c941f08 <col:13> 'const int' lvalue Var 0x12c928658 'x' 'const int'
    | | | | | | | `-IntegerLiteral 0x12c941f28 <col:16> 'int' 0
    | | | | | | `-BinaryOperator 0x12c942448 <col:21, col:33> 'int' contains-errors '<'
    | | | | | |   |-DeclRefExpr 0x12c941f80 <col:21> 'const int' lvalue Var 0x12c928658 'x' 'const int'
    | | | | | |   `-CallExpr 0x12c942428 <col:23, col:33> '<dependent type>' contains-errors
    | | | | | |     `-CXXDependentScopeMemberExpr 0x12c9423e0 <col:23, col:27> '<dependent type>' contains-errors lvalue .width
    | | | | | |       `-RecoveryExpr 0x12c9423c0 <col:23> '<dependent type>' contains-errors lvalue
    | | | | | `-BinaryOperator 0x12c9424a0 <col:38, col:41> 'int' '>='
    | | | | |   |-ImplicitCastExpr 0x12c942488 <col:38> 'int' <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x12c942060 <col:38> 'const int' lvalue Var 0x12c941a58 'y' 'const int'
    | | | | |   `-IntegerLiteral 0x12c942080 <col:41> 'int' 0
    | | | | `-BinaryOperator 0x12c942568 <col:46, col:59> 'int' contains-errors '<'
    | | | |   |-DeclRefExpr 0x12c9420f8 <col:46> 'const int' lvalue Var 0x12c941a58 'y' 'const int'
    | | | |   `-CallExpr 0x12c942548 <col:48, col:59> '<dependent type>' contains-errors
    | | | |     `-CXXDependentScopeMemberExpr 0x12c942500 <col:48, col:52> '<dependent type>' contains-errors lvalue .height
    | | | |       `-RecoveryExpr 0x12c9424e0 <col:48> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x12c9425c0 <col:64, col:67> 'int' '>='
    | | |   |-ImplicitCastExpr 0x12c9425a8 <col:64> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12c9421d8 <col:64> 'const int' lvalue Var 0x12c941c48 'z' 'const int'
    | | |   `-IntegerLiteral 0x12c9421f8 <col:67> 'int' 0
    | | `-BinaryOperator 0x12c942688 <col:72, col:84> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x12c942270 <col:72> 'const int' lvalue Var 0x12c941c48 'z' 'const int'
    | |   `-CallExpr 0x12c942668 <col:74, col:84> '<dependent type>' contains-errors
    | |     `-CXXDependentScopeMemberExpr 0x12c942620 <col:74, col:78> '<dependent type>' contains-errors lvalue .depth
    | |       `-RecoveryExpr 0x12c942600 <col:74> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d0092b8 <col:87, line:13:9>
    |   `-DeclStmt 0x12d009180 <line:11:11, col:71>
    |     `-VarDecl 0x12d009118 <col:11, col:24> col:24 invalid whd 'const int'
    `-ReturnStmt 0x12d009388 <line:14:9, col:25>
      `-ImplicitCastExpr 0x12d009370 <col:16, col:25> 'double' <IntegralToFloating>
        `-CallExpr 0x12d009348 <col:16, col:25> 'int'
          |-ImplicitCastExpr 0x12d009330 <col:16> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12d0092f0 <col:16> 'int ()' Function 0x12c941800 '_mp_arg' 'int ()'
          `-IntegerLiteral 0x12d009310 <col:24> 'int' 1
