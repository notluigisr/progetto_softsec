`-FunctionDecl 0x13c80e0c0  line:1:6 invalid markPredictionBlockBoundary 'void (int *, int, int, int, int, int)'
  |-ParmVarDecl 0x13c80dd28 <col:34, col:47> col:47 referenced invalid img 'int *'
  |-ParmVarDecl 0x13c80dda8 <col:52, col:56> col:56 used x0 'int'
  |-ParmVarDecl 0x13c80de28 <col:59, col:63> col:63 used y0 'int'
  |-ParmVarDecl 0x13c80dea8 <line:2:34, col:38> col:38 used log2CbSize 'int'
  |-ParmVarDecl 0x13c80df28 <line:3:34, col:38> col:38 used filterLeftCbEdge 'int'
  |-ParmVarDecl 0x13c80dfa8 <col:56, col:60> col:60 used filterTopCbEdge 'int'
  `-CompoundStmt 0x13d8090b8 <line:4:1, line:62:1>
    |-CallExpr 0x13c8278b8 <line:5:3, line:6:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c80e2f0 <line:5:3> 'int ()' Function 0x13c80e238 'logtrace' 'int ()'
    | |-RecoveryExpr 0x13c827898 <col:12> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x13c80e370 <col:23> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x13c80e390 <col:29> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
    | |-DeclRefExpr 0x13c80e3b0 <col:32> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
    | |-DeclRefExpr 0x13c80e3d0 <line:6:12> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'
    | |-DeclRefExpr 0x13c827800 <col:24> 'int' lvalue ParmVar 0x13c80df28 'filterLeftCbEdge' 'int'
    | `-DeclRefExpr 0x13c827820 <col:41> 'int' lvalue ParmVar 0x13c80dfa8 'filterTopCbEdge' 'int'
    |-DeclStmt 0x13c827fa8 <line:8:3, col:52>
    | |-EnumDecl 0x13c827910 <col:3, col:8> col:8 PartMode
    | `-VarDecl 0x13c827a28 <col:3, col:17> col:17 invalid partMode 'enum PartMode'
    |-DeclStmt 0x13c8280b8 <line:10:3, col:29>
    | `-VarDecl 0x13c827fd8 <col:3, col:19> col:7 used cbSize 'int' cinit
    |   `-BinaryOperator 0x13c828098 <col:16, col:19> 'int' '<<'
    |     |-IntegerLiteral 0x13c828040 <col:16> 'int' 1
    |     `-ImplicitCastExpr 0x13c828080 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13c828060 <col:19> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'
    |-DeclStmt 0x13c828228 <line:11:3, col:34>
    | `-VarDecl 0x13c8280e8 <col:3, col:33> col:7 used cbSize2 'int' cinit
    |   `-BinaryOperator 0x13c828208 <col:17, col:33> 'int' '<<'
    |     |-IntegerLiteral 0x13c828150 <col:17> 'int' 1
    |     `-ParenExpr 0x13c8281e8 <col:20, col:33> 'int'
    |       `-BinaryOperator 0x13c8281c8 <col:21, col:32> 'int' '-'
    |         |-ImplicitCastExpr 0x13c8281b0 <col:21> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x13c828170 <col:21> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'
    |         `-IntegerLiteral 0x13c828190 <col:32> 'int' 1
    |-DeclStmt 0x13c828398 <line:12:3, col:34>
    | `-VarDecl 0x13c828258 <col:3, col:33> col:7 used cbSize4 'int' cinit
    |   `-BinaryOperator 0x13c828378 <col:17, col:33> 'int' '<<'
    |     |-IntegerLiteral 0x13c8282c0 <col:17> 'int' 1
    |     `-ParenExpr 0x13c828358 <col:20, col:33> 'int'
    |       `-BinaryOperator 0x13c828338 <col:21, col:32> 'int' '-'
    |         |-ImplicitCastExpr 0x13c828320 <col:21> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x13c8282e0 <col:21> 'int' lvalue ParmVar 0x13c80dea8 'log2CbSize' 'int'
    |         `-IntegerLiteral 0x13c828300 <col:32> 'int' 2
    `-SwitchStmt 0x13c8283e8 <line:14:3, line:61:3>
      |-ImplicitCastExpr 0x13c8283d0 <line:14:11> '<dependent type>' contains-errors <LValueToRValue>
      | `-RecoveryExpr 0x13c8283b0 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13d809030 <col:21, line:61:3>
        |-ForStmt 0x13c123300 <line:16:5, line:19:5>
        | |-DeclStmt 0x13c8284c8 <line:16:10, col:17>
        | | `-VarDecl 0x13c828440 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c8284a8 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c828550 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c828520 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c8284e0 <col:18> 'int' lvalue Var 0x13c828440 'k' 'int'
        | | `-ImplicitCastExpr 0x13c828538 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c828500 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c828590 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c828570 <col:27> 'int' lvalue Var 0x13c828440 'k' 'int'
        | `-CompoundStmt 0x13c1232e0 <col:32, line:19:5>
        |   |-CallExpr 0x13c122f10 <line:17:7, col:66> '<dependent type>' contains-errors
        |   | |-CXXDependentScopeMemberExpr 0x13c8285f0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |   | | `-RecoveryExpr 0x13c8285c8 <col:7> '<dependent type>' contains-errors lvalue
        |   | |   `-DeclRefExpr 0x13c8285a8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |   | |-BinaryOperator 0x13c122e80 <col:28, col:31> 'int' '+'
        |   | | |-ImplicitCastExpr 0x13c122e50 <col:28> 'int' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x13c828638 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |   | | `-ImplicitCastExpr 0x13c122e68 <col:31> 'int' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x13c828658 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |   | |-BinaryOperator 0x13c122ed0 <col:39, col:42> 'int' '+'
        |   | | |-ImplicitCastExpr 0x13c122ea0 <col:39> 'int' <LValueToRValue>
        |   | | | `-DeclRefExpr 0x13c8286c8 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |   | | `-ImplicitCastExpr 0x13c122eb8 <col:42> 'int' <LValueToRValue>
        |   | |   `-DeclRefExpr 0x13c8286e8 <col:42> 'int' lvalue Var 0x13c828440 'k' 'int'
        |   | `-RecoveryExpr 0x13c122ef0 <col:45> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x13c1232a8 <line:18:7, col:66> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c122f90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c122f68 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c122f48 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13c123218 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c1231e8 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c122fd8 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13c123200 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c122ff8 <col:31> 'int' lvalue Var 0x13c828440 'k' 'int'
        |     |-BinaryOperator 0x13c123268 <col:33, col:36> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c123238 <col:33> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c123068 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13c123250 <col:36> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c123088 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |     `-RecoveryExpr 0x13c123288 <col:45> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13c123338 <line:20:5>
        |-ForStmt 0x13c123888 <line:23:5, line:25:5>
        | |-DeclStmt 0x13c1233f8 <line:23:10, col:17>
        | | `-VarDecl 0x13c123370 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c1233d8 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c123480 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c123450 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c123410 <col:18> 'int' lvalue Var 0x13c123370 'k' 'int'
        | | `-ImplicitCastExpr 0x13c123468 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c123430 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c1234c0 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c1234a0 <col:27> 'int' lvalue Var 0x13c123370 'k' 'int'
        | `-CompoundStmt 0x13c123870 <col:32, line:25:5>
        |   `-CallExpr 0x13c123838 <line:24:7, col:66> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c123520 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c1234f8 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c1234d8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13c1237a8 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c123778 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c123568 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13c123790 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c123588 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |     |-BinaryOperator 0x13c1237f8 <col:39, col:42> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c1237c8 <col:39> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c1235f8 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13c1237e0 <col:42> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c123618 <col:42> 'int' lvalue Var 0x13c123370 'k' 'int'
        |     `-RecoveryExpr 0x13c123818 <col:45> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13c1238c0 <line:26:5>
        |-ForStmt 0x13c123e18 <line:29:5, line:31:5>
        | |-DeclStmt 0x13c123980 <line:29:10, col:17>
        | | `-VarDecl 0x13c1238f8 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c123960 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c123a08 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c1239d8 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c123998 <col:18> 'int' lvalue Var 0x13c1238f8 'k' 'int'
        | | `-ImplicitCastExpr 0x13c1239f0 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c1239b8 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c123a48 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c123a28 <col:27> 'int' lvalue Var 0x13c1238f8 'k' 'int'
        | `-CompoundStmt 0x13c123e00 <col:32, line:31:5>
        |   `-CallExpr 0x13c123dc0 <line:30:7, col:66> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c123aa8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c123a80 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c123a60 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13c123d30 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c123d00 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c123af0 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13c123d18 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c123b10 <col:31> 'int' lvalue Var 0x13c1238f8 'k' 'int'
        |     |-BinaryOperator 0x13c123d80 <col:33, col:36> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c123d50 <col:33> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c123b80 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13c123d68 <col:36> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c123ba0 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |     `-RecoveryExpr 0x13c123da0 <col:45> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13c123e50 <line:32:5>
        |-ForStmt 0x13c1243a0 <line:35:5, line:37:5>
        | |-DeclStmt 0x13c123f10 <line:35:10, col:17>
        | | `-VarDecl 0x13c123e88 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c123ef0 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c123f98 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c123f68 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c123f28 <col:18> 'int' lvalue Var 0x13c123e88 'k' 'int'
        | | `-ImplicitCastExpr 0x13c123f80 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c123f48 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c123fd8 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c123fb8 <col:27> 'int' lvalue Var 0x13c123e88 'k' 'int'
        | `-CompoundStmt 0x13c124388 <col:32, line:37:5>
        |   `-CallExpr 0x13c124350 <line:36:7, col:66> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c124038 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c124010 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c123ff0 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13c1242c0 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c124290 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c124080 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13c1242a8 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c1240a0 <col:31> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'
        |     |-BinaryOperator 0x13c124310 <col:39, col:42> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c1242e0 <col:39> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c124110 <col:39> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13c1242f8 <col:42> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c124130 <col:42> 'int' lvalue Var 0x13c123e88 'k' 'int'
        |     `-RecoveryExpr 0x13c124330 <col:45> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13c1243d8 <line:38:5>
        |-ForStmt 0x13c1249f0 <line:41:5, line:43:5>
        | |-DeclStmt 0x13c124498 <line:41:10, col:17>
        | | `-VarDecl 0x13c124410 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c124478 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c124520 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c1244f0 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c1244b0 <col:18> 'int' lvalue Var 0x13c124410 'k' 'int'
        | | `-ImplicitCastExpr 0x13c124508 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c1244d0 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c124560 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c124540 <col:27> 'int' lvalue Var 0x13c124410 'k' 'int'
        | `-CompoundStmt 0x13c1249d8 <col:32, line:43:5>
        |   `-CallExpr 0x13c1249a0 <line:42:7, col:74> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c1245c0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c124598 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c124578 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13c124910 <col:28, col:39> 'int' '+'
        |     | |-BinaryOperator 0x13c1248d8 <col:28, col:31> 'int' '+'
        |     | | |-ImplicitCastExpr 0x13c1248a8 <col:28> 'int' <LValueToRValue>
        |     | | | `-DeclRefExpr 0x13c124608 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | | `-ImplicitCastExpr 0x13c1248c0 <col:31> 'int' <LValueToRValue>
        |     | |   `-DeclRefExpr 0x13c124628 <col:31> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |     | `-ImplicitCastExpr 0x13c1248f8 <col:39> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c124698 <col:39> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'
        |     |-BinaryOperator 0x13c124960 <col:47, col:50> 'int' '+'
        |     | |-ImplicitCastExpr 0x13c124930 <col:47> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c1246f0 <col:47> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13c124948 <col:50> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c124710 <col:50> 'int' lvalue Var 0x13c124410 'k' 'int'
        |     `-RecoveryExpr 0x13c124980 <col:53> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13c124a28 <line:44:5>
        |-ForStmt 0x13d808980 <line:47:5, line:49:5>
        | |-DeclStmt 0x13c124ae8 <line:47:10, col:17>
        | | `-VarDecl 0x13c124a60 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13c124ac8 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13c124b70 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13c124b40 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c124b00 <col:18> 'int' lvalue Var 0x13c124a60 'k' 'int'
        | | `-ImplicitCastExpr 0x13c124b58 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13c124b20 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13c124bb0 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13c124b90 <col:27> 'int' lvalue Var 0x13c124a60 'k' 'int'
        | `-CompoundStmt 0x13d808968 <col:32, line:49:5>
        |   `-CallExpr 0x13d808930 <line:48:7, col:66> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13c124c10 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13c124be8 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13c124bc8 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13d8088a0 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13d808870 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c124c58 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13d808888 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c124c78 <col:31> 'int' lvalue Var 0x13c124a60 'k' 'int'
        |     |-BinaryOperator 0x13d8088f0 <col:33, col:36> 'int' '+'
        |     | |-ImplicitCastExpr 0x13d8088c0 <col:33> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13c124ce8 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | `-ImplicitCastExpr 0x13d8088d8 <col:36> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c124d08 <col:36> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'
        |     `-RecoveryExpr 0x13d808910 <col:45> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13d8089b8 <line:50:5>
        |-ForStmt 0x13d808fd0 <line:53:5, line:55:5>
        | |-DeclStmt 0x13d808a78 <line:53:10, col:17>
        | | `-VarDecl 0x13d8089f0 <col:10, col:16> col:14 used k 'int' cinit
        | |   `-IntegerLiteral 0x13d808a58 <col:16> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x13d808b00 <col:18, col:20> 'int' '<'
        | | |-ImplicitCastExpr 0x13d808ad0 <col:18> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13d808a90 <col:18> 'int' lvalue Var 0x13d8089f0 'k' 'int'
        | | `-ImplicitCastExpr 0x13d808ae8 <col:20> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13d808ab0 <col:20> 'int' lvalue Var 0x13c827fd8 'cbSize' 'int'
        | |-UnaryOperator 0x13d808b40 <col:27, col:28> 'int' postfix '++'
        | | `-DeclRefExpr 0x13d808b20 <col:27> 'int' lvalue Var 0x13d8089f0 'k' 'int'
        | `-CompoundStmt 0x13d808fb8 <col:32, line:55:5>
        |   `-CallExpr 0x13d808f80 <line:54:7, col:74> '<dependent type>' contains-errors
        |     |-CXXDependentScopeMemberExpr 0x13d808ba0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->set_deblk_flags
        |     | `-RecoveryExpr 0x13d808b78 <col:7> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x13d808b58 <col:7> 'int *' lvalue ParmVar 0x13c80dd28 'img' 'int *'
        |     |-BinaryOperator 0x13d808eb8 <col:28, col:31> 'int' '+'
        |     | |-ImplicitCastExpr 0x13d808e88 <col:28> 'int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x13d808be8 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'x0' 'int'
        |     | `-ImplicitCastExpr 0x13d808ea0 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13d808c08 <col:31> 'int' lvalue Var 0x13d8089f0 'k' 'int'
        |     |-BinaryOperator 0x13d808f40 <col:33, col:44> 'int' '+'
        |     | |-BinaryOperator 0x13d808f08 <col:33, col:36> 'int' '+'
        |     | | |-ImplicitCastExpr 0x13d808ed8 <col:33> 'int' <LValueToRValue>
        |     | | | `-DeclRefExpr 0x13d808c78 <col:33> 'int' lvalue ParmVar 0x13c80de28 'y0' 'int'
        |     | | `-ImplicitCastExpr 0x13d808ef0 <col:36> 'int' <LValueToRValue>
        |     | |   `-DeclRefExpr 0x13d808c98 <col:36> 'int' lvalue Var 0x13c8280e8 'cbSize2' 'int'
        |     | `-ImplicitCastExpr 0x13d808f28 <col:44> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13d808d08 <col:44> 'int' lvalue Var 0x13c828258 'cbSize4' 'int'
        |     `-RecoveryExpr 0x13d808f60 <col:53> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x13d809008 <line:56:5>
        `-BreakStmt 0x13d809028 <line:60:5>
