`-FunctionDecl 0x1411281c8  line:1:1 Proto_RequestNameToType 'int (const char *)'
  |-ParmVarDecl 0x1411280f0 <col:25, col:38> col:38 used name 'const char *'
  `-CompoundStmt 0x141140ab8 <line:2:1, line:12:1>
    |-DeclStmt 0x141128340 <line:3:4, col:9>
    | `-VarDecl 0x1411282d8 <col:4, col:8> col:8 used i 'int'
    |-ForStmt 0x141140a38 <line:5:4, line:9:4>
    | |-BinaryOperator 0x141128398 <line:5:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x141128358 <col:9> 'int' lvalue Var 0x1411282d8 'i' 'int'
    | | `-IntegerLiteral 0x141128378 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1411285b8 <col:16, col:44> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1411283b8 <col:16> 'int' lvalue Var 0x1411282d8 'i' 'int'
    | | `-CallExpr 0x141128590 <col:20, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1411284f0 <col:20> 'int ()' Function 0x141128438 'G_N_ELEMENTS' 'int ()'
    | |   `-RecoveryExpr 0x141128570 <col:33> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1411285f8 <col:47, col:48> 'int' postfix '++'
    | | `-DeclRefExpr 0x1411285d8 <col:47> 'int' lvalue Var 0x1411282d8 'i' 'int'
    | `-CompoundStmt 0x141140a20 <col:52, line:9:4>
    |   `-IfStmt 0x141140a00 <line:6:7, line:8:7>
    |     |-RecoveryExpr 0x141128788 <line:6:11, col:54> '_Bool' contains-errors
    |     `-CompoundStmt 0x1411287e0 <col:57, line:8:7>
    `-ReturnStmt 0x141140aa8 <line:11:4, col:11>
      `-RecoveryExpr 0x141140a88 <col:11> '<dependent type>' contains-errors lvalue
