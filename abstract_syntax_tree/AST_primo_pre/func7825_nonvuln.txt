`-FunctionDecl 0x1349281a0  line:1:6 logmsg 'void (const char *)'
  |-ParmVarDecl 0x1349280d8 <col:13, col:25> col:25 used msg 'const char *'
  `-CompoundStmt 0x134941fc8 <col:30, line:8:1>
    |-IfStmt 0x134928358 <line:2:2, line:3:3>
    | |-UnaryOperator 0x134928330 <line:2:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x134928318 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1349282f8 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x134928348 <line:3:3>
    |-CallExpr 0x134928630 <line:5:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134928490 <col:2> 'int ()' Function 0x1349283d8 'openlog' 'int ()'
    | |-StringLiteral 0x1349284f0 <col:10> 'char[4]' lvalue "STR"
    | |-BinaryOperator 0x1349285f0 <col:17, col:30> '<dependent type>' contains-errors '|'
    | | |-RecoveryExpr 0x1349285b0 <col:17> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1349285d0 <col:30> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x134928610 <col:39> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x134941e20 <line:6:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x134928748 <col:2> 'int ()' Function 0x134928690 'syslog' 'int ()'
    | |-RecoveryExpr 0x134941e00 <col:9> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x134928780 <col:19> 'char[4]' lvalue "STR"
    | `-DeclRefExpr 0x1349287a0 <col:26> 'const char *' lvalue ParmVar 0x1349280d8 'msg' 'const char *'
    `-CallExpr 0x134941fa8 <line:7:2, col:11> 'int'
      `-ImplicitCastExpr 0x134941f90 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x134941f38 <col:2> 'int ()' Function 0x134941e80 'closelog' 'int ()'
