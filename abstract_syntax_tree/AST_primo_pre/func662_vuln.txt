`-FunctionDecl 0x1359281a8  line:1:1 check_redir 'int (int)'
  |-ParmVarDecl 0x1359280d8 <line:2:6, col:10> col:10 used ti 'int'
  `-CompoundStmt 0x135940ea8 <line:3:1, line:28:1>
    |-DeclStmt 0x1359283b8 <line:4:3, col:36>
    | |-VarDecl 0x1359282b8 <col:3, col:16> col:16 used this_char 'int' register
    | `-VarDecl 0x135928338 <col:3, col:27> col:27 used prev_char 'int' register
    |-IfStmt 0x135940e28 <line:10:3, line:26:14> has_else
    | |-BinaryOperator 0x1359287e0 <line:10:7, line:11:44> 'int' '||'
    | | |-ParenExpr 0x1359286a0 <line:10:7, col:66> 'int'
    | | | `-BinaryOperator 0x135928680 <col:8, col:65> 'int' '&&'
    | | |   |-BinaryOperator 0x135928540 <col:8, col:21> 'int' '=='
    | | |   | |-ImplicitCastExpr 0x135928528 <col:8> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x1359284f0 <col:8> 'int' lvalue Var 0x1359282b8 'this_char' 'int'
    | | |   | `-CharacterLiteral 0x135928510 <col:21> 'int' 38
    | | |   `-ParenExpr 0x135928660 <col:28, col:65> 'int'
    | | |     `-BinaryOperator 0x135928640 <col:29, col:62> 'int' '||'
    | | |       |-BinaryOperator 0x1359285b0 <col:29, col:42> 'int' '=='
    | | |       | |-ImplicitCastExpr 0x135928598 <col:29> 'int' <LValueToRValue>
    | | |       | | `-DeclRefExpr 0x135928560 <col:29> 'int' lvalue Var 0x135928338 'prev_char' 'int'
    | | |       | `-CharacterLiteral 0x135928580 <col:42> 'int' 60
    | | |       `-BinaryOperator 0x135928620 <col:49, col:62> 'int' '=='
    | | |         |-ImplicitCastExpr 0x135928608 <col:49> 'int' <LValueToRValue>
    | | |         | `-DeclRefExpr 0x1359285d0 <col:49> 'int' lvalue Var 0x135928338 'prev_char' 'int'
    | | |         `-CharacterLiteral 0x1359285f0 <col:62> 'int' 62
    | | `-ParenExpr 0x1359287c0 <line:11:7, col:44> 'int'
    | |   `-BinaryOperator 0x1359287a0 <col:8, col:41> 'int' '&&'
    | |     |-BinaryOperator 0x135928710 <col:8, col:21> 'int' '=='
    | |     | |-ImplicitCastExpr 0x1359286f8 <col:8> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x1359286c0 <col:8> 'int' lvalue Var 0x1359282b8 'this_char' 'int'
    | |     | `-CharacterLiteral 0x1359286e0 <col:21> 'int' 124
    | |     `-BinaryOperator 0x135928780 <col:28, col:41> 'int' '=='
    | |       |-ImplicitCastExpr 0x135928768 <col:28> 'int' <LValueToRValue>
    | |       | `-DeclRefExpr 0x135928730 <col:28> 'int' lvalue Var 0x135928338 'prev_char' 'int'
    | |       `-CharacterLiteral 0x135928750 <col:41> 'int' 62
    | |-ReturnStmt 0x135940a40 <line:12:5, col:14>
    | | `-ParenExpr 0x135940a20 <col:12, col:14> 'int'
    | |   `-IntegerLiteral 0x135940a00 <col:13> 'int' 1
    | `-IfStmt 0x135940df8 <line:13:8, line:26:14> has_else
    |   |-BinaryOperator 0x135940b30 <line:13:12, col:45> 'int' '&&'
    |   | |-BinaryOperator 0x135940aa0 <col:12, col:25> 'int' '=='
    |   | | |-ImplicitCastExpr 0x135940a88 <col:12> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x135940a50 <col:12> 'int' lvalue Var 0x1359282b8 'this_char' 'int'
    |   | | `-CharacterLiteral 0x135940a70 <col:25> 'int' 123
    |   | `-BinaryOperator 0x135940b10 <col:32, col:45> 'int' '=='
    |   |   |-ImplicitCastExpr 0x135940af8 <col:32> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x135940ac0 <col:32> 'int' lvalue Var 0x135928338 'prev_char' 'int'
    |   |   `-CharacterLiteral 0x135940ae0 <col:45> 'int' 36
    |   |-ReturnStmt 0x135940b90 <line:14:5, col:14>
    |   | `-ParenExpr 0x135940b70 <col:12, col:14> 'int'
    |   |   `-IntegerLiteral 0x135940b50 <col:13> 'int' 1
    |   `-IfStmt 0x135940dd8 <line:25:8, line:26:14>
    |     |-CallExpr 0x135940d58 <line:25:12, col:46> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x135940cb0 <col:12> 'int ()' Function 0x135940bf8 'char_is_quoted' 'int ()'
    |     | |-RecoveryExpr 0x135940d38 <col:28> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x135940ce8 <col:44> 'int' lvalue ParmVar 0x1359280d8 'ti' 'int'
    |     `-ReturnStmt 0x135940dc8 <line:26:5, col:14>
    |       `-ParenExpr 0x135940da8 <col:12, col:14> 'int'
    |         `-IntegerLiteral 0x135940d88 <col:13> 'int' 1
    `-ReturnStmt 0x135940e98 <line:27:3, col:12>
      `-ParenExpr 0x135940e78 <col:10, col:12> 'int'
        `-IntegerLiteral 0x135940e58 <col:11> 'int' 0
