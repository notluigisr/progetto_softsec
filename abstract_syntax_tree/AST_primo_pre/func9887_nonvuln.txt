`-FunctionDecl 0x153826748  line:1:1 resolve_applies_when 'int (const struct lys_node *, int, const struct lys_node *)'
  |-ParmVarDecl 0x15380e248 <col:22, col:45> col:45 used schema 'const struct lys_node *'
  |-ParmVarDecl 0x15380e2c8 <col:53, col:57> col:57 used mode 'int'
  |-ParmVarDecl 0x153826600 <col:63, col:86> col:86 used stop 'const struct lys_node *'
  `-CompoundStmt 0x153829b60 <line:2:1, line:40:1>
    |-DeclStmt 0x1538268e0 <line:3:5, col:34>
    | `-VarDecl 0x153826878 <col:5, col:28> col:28 used parent 'const struct lys_node *'
    |-CallExpr 0x153826aa8 <line:5:5, col:18> 'int'
    | |-ImplicitCastExpr 0x153826a90 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x153826a20 <col:5> 'int ()' Function 0x153826968 'assert' 'int ()'
    | `-ImplicitCastExpr 0x153826ad0 <col:12> 'const struct lys_node *' <LValueToRValue>
    |   `-DeclRefExpr 0x153826a40 <col:12> 'const struct lys_node *' lvalue ParmVar 0x15380e248 'schema' 'const struct lys_node *'
    |-IfStmt 0x153826d78 <line:7:5, line:9:5>
    | |-RecoveryExpr 0x153826d10 <line:7:9, col:77> '_Bool' contains-errors
    | `-CompoundStmt 0x153826d60 <col:80, line:9:5>
    |   `-ReturnStmt 0x153826d50 <line:8:9, col:16>
    |     `-IntegerLiteral 0x153826d30 <col:16> 'int' 1
    |-BinaryOperator 0x153826df0 <line:11:5, col:14> 'const struct lys_node *' '='
    | |-DeclRefExpr 0x153826d98 <col:5> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    | `-ImplicitCastExpr 0x153826dd8 <col:14> 'const struct lys_node *' <LValueToRValue>
    |   `-DeclRefExpr 0x153826db8 <col:14> 'const struct lys_node *' lvalue ParmVar 0x15380e248 'schema' 'const struct lys_node *'
    |-GotoStmt 0x153826e60 <line:12:5, col:10> 'check_augment' 0x153826e10
    |-WhileStmt 0x153829b10 <line:14:5, line:37:5>
    | |-ImplicitCastExpr 0x153826e98 <line:14:12> 'const struct lys_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x153826e78 <col:12> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    | `-CompoundStmt 0x153829ae0 <col:20, line:37:5>
    |   |-IfStmt 0x153827148 <line:16:9, line:26:9> has_else
    |   | |-UnaryOperator 0x153826ee8 <line:16:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x153826ed0 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x153826eb0 <col:14> 'int' lvalue ParmVar 0x15380e2c8 'mode' 'int'
    |   | |-CompoundStmt 0x153827048 <col:20, line:21:9>
    |   | | `-IfStmt 0x153827028 <line:18:13, line:20:13>
    |   | |   |-RecoveryExpr 0x153826fe8 <line:18:17, col:72> '_Bool' contains-errors
    |   | |   `-CompoundStmt 0x153827010 <col:75, line:20:13>
    |   | |     `-BreakStmt 0x153827008 <line:19:17>
    |   | `-CompoundStmt 0x153827130 <line:21:16, line:26:9>
    |   |   `-IfStmt 0x153827110 <line:23:13, line:25:13>
    |   |     |-BinaryOperator 0x1538270d0 <line:23:17, col:27> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x1538270a0 <col:17> 'const struct lys_node *' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x153827060 <col:17> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |   |     | `-ImplicitCastExpr 0x1538270b8 <col:27> 'const struct lys_node *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x153827080 <col:27> 'const struct lys_node *' lvalue ParmVar 0x153826600 'stop' 'const struct lys_node *'
    |   |     `-CompoundStmt 0x1538270f8 <col:33, line:25:13>
    |   |       `-BreakStmt 0x1538270f0 <line:24:17>
    |   |-IfStmt 0x153827258 <line:28:9, line:30:9>
    |   | |-CallExpr 0x1538271d0 <line:28:13, col:34> 'int'
    |   | | |-ImplicitCastExpr 0x1538271b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x153827178 <col:13> 'int ()' Function 0x153826bc0 'snode_get_when' 'int ()'
    |   | | `-ImplicitCastExpr 0x1538271f8 <col:28> 'const struct lys_node *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x153827198 <col:28> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |   | `-CompoundStmt 0x153827240 <col:37, line:30:9>
    |   |   `-ReturnStmt 0x153827230 <line:29:13, col:20>
    |   |     `-IntegerLiteral 0x153827210 <col:20> 'int' 1
    |   |-LabelStmt 0x1538274e8 <line:31:1, line:35:9> 'check_augment'
    |   | `-IfStmt 0x1538274c8 <line:33:9, line:35:9>
    |   |   |-RecoveryExpr 0x153827460 <line:33:13, col:105> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x1538274b0 <col:108, line:35:9>
    |   |     `-ReturnStmt 0x1538274a0 <line:34:13, col:20>
    |   |       `-IntegerLiteral 0x153827480 <col:20> 'int' 1
    |   `-BinaryOperator 0x153829ac0 <line:36:9, col:35> 'const struct lys_node *' '='
    |     |-DeclRefExpr 0x153827508 <col:9> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    |     `-ImplicitCastExpr 0x153829aa8 <col:18, col:35> 'const struct lys_node *' <IntegralToPointer>
    |       `-CallExpr 0x153829a68 <col:18, col:35> 'int'
    |         |-ImplicitCastExpr 0x153829a50 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x153829a10 <col:18> 'int ()' Function 0x153827550 'lys_parent' 'int ()'
    |         `-ImplicitCastExpr 0x153829a90 <col:29> 'const struct lys_node *' <LValueToRValue>
    |           `-DeclRefExpr 0x153829a30 <col:29> 'const struct lys_node *' lvalue Var 0x153826878 'parent' 'const struct lys_node *'
    `-ReturnStmt 0x153829b50 <line:39:5, col:12>
      `-IntegerLiteral 0x153829b30 <col:12> 'int' 0
