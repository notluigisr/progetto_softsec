`-FunctionDecl 0x1230267e8  line:1:12 do_move_pages 'int (struct mm_struct *, struct page_to_node *, int)' static
  |-ParmVarDecl 0x12300e248 <col:26, col:44> col:44 used mm 'struct mm_struct *'
  |-ParmVarDecl 0x123026628 <col:48, col:69> col:69 used pm 'struct page_to_node *'
  |-ParmVarDecl 0x1230266a8 <line:2:5, col:9> col:9 used migrate_all 'int'
  `-CompoundStmt 0x12302efa0 <line:3:1, line:60:1>
    |-DeclStmt 0x123026970 <line:4:2, col:9>
    | `-VarDecl 0x123026908 <col:2, col:6> col:6 used err 'int'
    |-DeclStmt 0x123026a80 <line:5:2, col:25>
    | `-VarDecl 0x123026a18 <col:2, col:23> col:23 used pp 'struct page_to_node *'
    |-CallExpr 0x123026c40 <line:6:2, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123026bc0 <col:2> 'int ()' Function 0x123026b08 'LIST_HEAD' 'int ()'
    | `-RecoveryExpr 0x123026c20 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x123026de0 <line:8:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123026d48 <col:2> 'int ()' Function 0x123026c90 'down_read' 'int ()'
    | `-UnaryOperator 0x123026dc8 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x123026da0 <col:13, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x123026d68 <col:13> 'struct mm_struct *' lvalue ParmVar 0x12300e248 'mm' 'struct mm_struct *'
    |-CallExpr 0x123026f58 <line:11:2, col:15> 'int'
    | `-ImplicitCastExpr 0x123026f40 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x123026ee8 <col:2> 'int ()' Function 0x123026e30 'migrate_prep' 'int ()'
    |-ForStmt 0x12302eaa8 <line:12:2, line:50:2>
    | |-BinaryOperator 0x123026fd0 <line:12:7, col:12> 'struct page_to_node *' '='
    | | |-DeclRefExpr 0x123026f78 <col:7> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    | | `-ImplicitCastExpr 0x123026fb8 <col:12> 'struct page_to_node *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123026f98 <col:12> 'struct page_to_node *' lvalue ParmVar 0x123026628 'pm' 'struct page_to_node *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1230270a8 <col:16, col:28> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x123027028 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x123026ff0 <col:16> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    | | `-RecoveryExpr 0x123027088 <col:28> '<dependent type>' contains-errors lvalue
    | |-ImplicitCastExpr 0x123027110 <col:42, col:44> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x1230270e8 <col:42, col:44> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1230270c8 <col:42> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    | `-CompoundStmt 0x12302ea18 <col:48, line:50:2>
    |   |-DeclStmt 0x123027318 <line:13:3, col:29>
    |   | |-RecordDecl 0x123027128 <col:3, col:10> col:10 struct vm_area_struct
    |   | `-VarDecl 0x123027298 <col:3, col:26> col:26 used vma 'struct vm_area_struct *'
    |   |-DeclStmt 0x123027518 <line:14:3, col:20>
    |   | |-RecordDecl 0x123027330 <col:3, col:10> col:10 struct page
    |   | `-VarDecl 0x123027498 <col:3, col:16> col:16 used page 'struct page *'
    |   |-BinaryOperator 0x12302d538 <line:17:3, col:25> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x123027568 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x123027530 <col:3> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |   | `-CallExpr 0x12302d510 <col:14, col:25> 'int'
    |   |   |-ImplicitCastExpr 0x12302d4f8 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12302d4b8 <col:14> 'int ()' Function 0x12302d400 'ZERO_PAGE' 'int ()'
    |   |   `-IntegerLiteral 0x12302d4d8 <col:24> 'int' 0
    |   |-BinaryOperator 0x12302d630 <line:19:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12302d558 <col:3> 'int' lvalue Var 0x123026908 'err' 'int'
    |   | `-UnaryOperator 0x12302d618 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12302d600 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12302d5e0 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12302d820 <line:20:3, col:30> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x12302d650 <col:3> 'struct vm_area_struct *' lvalue Var 0x123027298 'vma' 'struct vm_area_struct *'
    |   | `-CallExpr 0x12302d7f0 <col:9, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12302d750 <col:9> 'int ()' Function 0x12302d698 'find_vma' 'int ()'
    |   |   |-DeclRefExpr 0x12302d770 <col:18> 'struct mm_struct *' lvalue ParmVar 0x12300e248 'mm' 'struct mm_struct *'
    |   |   `-RecoveryExpr 0x12302d7c8 <col:22, col:26> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12302d790 <col:22> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |   |-IfStmt 0x12302daa8 <line:21:3, line:22:9>
    |   | |-BinaryOperator 0x12302da20 <line:21:7, col:34> 'int' '||'
    |   | | |-UnaryOperator 0x12302d878 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x12302d860 <col:8> 'struct vm_area_struct *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x12302d840 <col:8> 'struct vm_area_struct *' lvalue Var 0x123027298 'vma' 'struct vm_area_struct *'
    |   | | `-UnaryOperator 0x12302da08 <col:15, col:34> 'int' prefix '!' cannot overflow
    |   | |   `-CallExpr 0x12302d9c8 <col:16, col:34> 'int'
    |   | |     |-ImplicitCastExpr 0x12302d9b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x12302d970 <col:16> 'int ()' Function 0x12302d8b8 'vma_migratable' 'int ()'
    |   | |     `-ImplicitCastExpr 0x12302d9f0 <col:31> 'struct vm_area_struct *' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x12302d990 <col:31> 'struct vm_area_struct *' lvalue Var 0x123027298 'vma' 'struct vm_area_struct *'
    |   | `-GotoStmt 0x12302da90 <line:22:4, col:9> 'set_status' 0x12302da40
    |   |-BinaryOperator 0x12302dd30 <line:24:3, col:45> 'struct page *' contains-errors '='
    |   | |-DeclRefExpr 0x12302dac8 <col:3> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   | `-CallExpr 0x12302dcf8 <col:10, col:45> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12302dbc8 <col:10> 'int ()' Function 0x12302db10 'follow_page' 'int ()'
    |   |   |-DeclRefExpr 0x12302dbe8 <col:22> 'struct vm_area_struct *' lvalue Var 0x123027298 'vma' 'struct vm_area_struct *'
    |   |   |-RecoveryExpr 0x12302dc40 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x12302dc08 <col:27> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |   |   `-RecoveryExpr 0x12302dcd8 <col:37> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12302de28 <line:25:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12302dd50 <col:3> 'int' lvalue Var 0x123026908 'err' 'int'
    |   | `-UnaryOperator 0x12302de10 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12302ddf8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12302ddd8 <col:10> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12302deb0 <line:26:3, line:27:9>
    |   | |-UnaryOperator 0x12302de80 <line:26:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12302de68 <col:8> 'struct page *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12302de48 <col:8> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   | `-GotoStmt 0x12302de98 <line:27:4, col:9> 'set_status' 0x12302da40
    |   |-IfStmt 0x12302e0b0 <line:29:3, line:30:9>
    |   | |-CallExpr 0x12302e008 <line:29:7, col:24> 'int'
    |   | | |-ImplicitCastExpr 0x12302dff0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x12302dfb0 <col:7> 'int ()' Function 0x12302def8 'PageReserved' 'int ()'
    |   | | `-ImplicitCastExpr 0x12302e030 <col:20> 'struct page *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12302dfd0 <col:20> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   | `-GotoStmt 0x12302e098 <line:30:4, col:9> 'put_and_set' 0x12302e048
    |   |-BinaryOperator 0x12302e150 <line:32:3, col:14> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12302e108 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12302e0d0 <col:3> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |   | `-DeclRefExpr 0x12302e130 <col:14> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   |-BinaryOperator 0x12302e308 <line:33:3, col:25> 'int' '='
    |   | |-DeclRefExpr 0x12302e170 <col:3> 'int' lvalue Var 0x123026908 'err' 'int'
    |   | `-CallExpr 0x12302e2c8 <col:9, col:25> 'int'
    |   |   |-ImplicitCastExpr 0x12302e2b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12302e270 <col:9> 'int ()' Function 0x12302e1b8 'page_to_nid' 'int ()'
    |   |   `-ImplicitCastExpr 0x12302e2f0 <col:21> 'struct page *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12302e290 <col:21> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   |-IfStmt 0x12302e3e0 <line:35:3, line:37:9>
    |   | |-BinaryOperator 0x12302e3a8 <line:35:7, col:18> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x12302e328 <col:7> 'int' lvalue Var 0x123026908 'err' 'int'
    |   | | `-RecoveryExpr 0x12302e380 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12302e348 <col:14> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |   | `-GotoStmt 0x12302e3c8 <line:37:4, col:9> 'put_and_set' 0x12302e048
    |   |-IfStmt 0x12302e660 <line:40:3, line:42:9>
    |   | |-BinaryOperator 0x12302e628 <line:40:7, line:41:6> 'int' '&&'
    |   | | |-BinaryOperator 0x12302e5b8 <line:40:7, col:29> 'int' '>'
    |   | | | |-CallExpr 0x12302e558 <col:7, col:25> 'int'
    |   | | | | |-ImplicitCastExpr 0x12302e540 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | | `-DeclRefExpr 0x12302e500 <col:7> 'int ()' Function 0x12302e448 'page_mapcount' 'int ()'
    |   | | | | `-ImplicitCastExpr 0x12302e580 <col:21> 'struct page *' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x12302e520 <col:21> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   | | | `-IntegerLiteral 0x12302e598 <col:29> 'int' 1
    |   | | `-UnaryOperator 0x12302e610 <line:41:5, col:6> 'int' prefix '!' cannot overflow
    |   | |   `-ImplicitCastExpr 0x12302e5f8 <col:6> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x12302e5d8 <col:6> 'int' lvalue ParmVar 0x1230266a8 'migrate_all' 'int'
    |   | `-GotoStmt 0x12302e648 <line:42:4, col:9> 'put_and_set' 0x12302e048
    |   |-LabelStmt 0x12302e938 <line:45:1, line:47:16> 'put_and_set'
    |   | `-CallExpr 0x12302e8f8 <col:3, col:16> 'int'
    |   |   |-ImplicitCastExpr 0x12302e8e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12302e8a0 <col:3> 'int ()' Function 0x12302e7e8 'put_page' 'int ()'
    |   |   `-ImplicitCastExpr 0x12302e920 <col:12> 'struct page *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12302e8c0 <col:12> 'struct page *' lvalue Var 0x123027498 'page' 'struct page *'
    |   `-LabelStmt 0x12302e9f8 <line:48:1, line:49:16> 'set_status'
    |     `-BinaryOperator 0x12302e9d8 <col:3, col:16> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x12302e990 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x12302e958 <col:3> 'struct page_to_node *' lvalue Var 0x123026a18 'pp' 'struct page_to_node *'
    |       `-DeclRefExpr 0x12302e9b8 <col:16> 'int' lvalue Var 0x123026908 'err' 'int'
    |-CallExpr 0x12302ef30 <line:58:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12302ee98 <col:2> 'int ()' Function 0x12302ede0 'up_read' 'int ()'
    | `-UnaryOperator 0x12302ef18 <col:10, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12302eef0 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12302eeb8 <col:11> 'struct mm_struct *' lvalue ParmVar 0x12300e248 'mm' 'struct mm_struct *'
    `-ReturnStmt 0x12302ef90 <line:59:2, col:9>
      `-ImplicitCastExpr 0x12302ef78 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12302ef58 <col:9> 'int' lvalue Var 0x123026908 'err' 'int'
