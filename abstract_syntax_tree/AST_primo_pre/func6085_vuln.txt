`-FunctionDecl 0x13f80dfd8  line:1:12 invalid decode_unit 'int (int *, int *, unsigned int, unsigned int *)' static
  |-ParmVarDecl 0x13f80dd28 <col:24, col:37> col:37 invalid s 'int *'
  |-ParmVarDecl 0x13f80dda8 <col:40, col:52> col:52 referenced invalid pixel 'int *'
  |-ParmVarDecl 0x13f80de28 <col:59, col:68> col:68 used step 'unsigned int'
  |-ParmVarDecl 0x13f80ded8 <col:74, col:84> col:84 used rval 'unsigned int *'
  `-CompoundStmt 0x13f82ae30 <line:2:1, line:58:1>
    |-DeclStmt 0x13f80e2b8 <line:5:5, col:39>
    | `-VarDecl 0x13f80e1e8 <col:5, col:29> col:14 used totfr 'unsigned int' cinit
    |   `-CXXDependentScopeMemberExpr 0x13f80e270 <col:22, col:29> '<dependent type>' contains-errors lvalue ->total_freq
    |     `-RecoveryExpr 0x13f80e250 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13f8275b0 <line:6:5, col:48>
    | |-VarDecl 0x13f80e2e8 <col:5, col:14> col:14 used value 'unsigned int'
    | |-VarDecl 0x13f80e368 <col:5, col:25> col:21 used x 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x13f827400 <col:25> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13f80e3d0 <col:25> 'int' 0
    | |-VarDecl 0x13f827430 <col:5, col:36> col:28 used cumfr 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x13f8274b8 <col:36> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13f827498 <col:36> 'int' 0
    | `-VarDecl 0x13f8274e8 <col:5, col:47> col:39 used cnt_x 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x13f827570 <col:47> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x13f827550 <col:47> 'int' 0
    |-DeclStmt 0x13f827878 <line:7:5, col:28>
    | |-VarDecl 0x13f8275e0 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x13f827660 <col:5, col:12> col:12 used j 'int'
    | |-VarDecl 0x13f8276e0 <col:5, col:15> col:15 used ret 'int'
    | |-VarDecl 0x13f827760 <col:5, col:20> col:20 used c 'int'
    | `-VarDecl 0x13f8277e0 <col:5, col:23> col:23 used cnt_c 'int'
    |-IfStmt 0x13f827a68 <line:9:5, line:10:16>
    | |-RecoveryExpr 0x13f827a00 <line:9:9, col:50> '_Bool' contains-errors
    | `-ReturnStmt 0x13f827a58 <line:10:9, col:16>
    |   `-ImplicitCastExpr 0x13f827a40 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13f827a20 <col:16> 'int' lvalue Var 0x13f8276e0 'ret' 'int'
    |-WhileStmt 0x13f827e38 <line:12:5, line:19:5>
    | |-BinaryOperator 0x13f827af8 <line:12:12, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x13f827ac8 <col:12> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f827a88 <col:12> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'
    | | `-ImplicitCastExpr 0x13f827ae0 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13f827aa8 <col:16> 'int' 16
    | `-CompoundStmt 0x13f827e10 <col:20, line:19:5>
    |   |-BinaryOperator 0x13f827c10 <line:13:9, col:32> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x13f827b18 <col:9> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'
    |   | `-ArraySubscriptExpr 0x13f827bf0 <col:17, col:32> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x13f827bc0 <col:17, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x13f827b58 <col:17, col:24> '<dependent type>' contains-errors lvalue ->lookup
    |   |   |   `-RecoveryExpr 0x13f827b38 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x13f827bd8 <col:31> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13f827ba0 <col:31> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'
    |   |-IfStmt 0x13f827da8 <line:14:9, line:17:13> has_else
    |   | |-BinaryOperator 0x13f827cf8 <line:14:13, col:30> 'int' '>='
    |   | | |-ImplicitCastExpr 0x13f827ce0 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13f827c30 <col:13> 'unsigned int' lvalue Var 0x13f80e2e8 'value' 'unsigned int'
    |   | | `-BinaryOperator 0x13f827cc0 <col:22, col:30> 'unsigned int' '+'
    |   | |   |-ImplicitCastExpr 0x13f827c90 <col:22> 'unsigned int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13f827c50 <col:22> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'
    |   | |   `-ImplicitCastExpr 0x13f827ca8 <col:30> 'unsigned int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13f827c70 <col:30> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'
    |   | |-CompoundAssignOperator 0x13f827d70 <line:15:13, col:22> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | | |-DeclRefExpr 0x13f827d18 <col:13> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x13f827d58 <col:22> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13f827d38 <col:22> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'
    |   | `-BreakStmt 0x13f827da0 <line:17:13>
    |   `-UnaryOperator 0x13f827df8 <line:18:9, col:10> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x13f827dd8 <col:9> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'
    |-BinaryOperator 0x13f827f20 <line:21:5, col:13> 'int' '='
    | |-DeclRefExpr 0x13f827e58 <col:5> 'int' lvalue Var 0x13f827760 'c' 'int'
    | `-ImplicitCastExpr 0x13f827f08 <col:9, col:13> 'int' <IntegralCast>
    |   `-BinaryOperator 0x13f827ee8 <col:9, col:13> 'unsigned int' '*'
    |     |-ImplicitCastExpr 0x13f827eb8 <col:9> 'unsigned int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13f827e78 <col:9> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'
    |     `-ImplicitCastExpr 0x13f827ed0 <col:13> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13f827e98 <col:13> 'int' 16
    |-BinaryOperator 0x13f827f80 <line:22:5, col:13> 'int' '='
    | |-DeclRefExpr 0x13f827f40 <col:5> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'
    | `-IntegerLiteral 0x13f827f60 <col:13> 'int' 0
    |-WhileStmt 0x13f828368 <line:23:5, line:30:5>
    | |-BinaryOperator 0x13f827ff8 <line:23:12, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x13f827fe0 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f827fa0 <col:12> 'int' lvalue Var 0x13f827760 'c' 'int'
    | | `-IntegerLiteral 0x13f827fc0 <col:16> 'int' 256
    | `-CompoundStmt 0x13f828340 <col:21, line:30:5>
    |   |-BinaryOperator 0x13f828110 <line:24:9, col:30> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13f828018 <col:9> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'
    |   | `-ArraySubscriptExpr 0x13f8280f0 <col:17, col:30> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x13f8280c0 <col:17, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x13f828058 <col:17, col:24> '<dependent type>' contains-errors lvalue ->freq
    |   |   |   `-RecoveryExpr 0x13f828038 <col:17> '<dependent type>' contains-errors lvalue
    |   |   `-ImplicitCastExpr 0x13f8280d8 <col:29> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13f8280a0 <col:29> 'int' lvalue Var 0x13f827760 'c' 'int'
    |   |-IfStmt 0x13f8282d8 <line:25:9, line:28:13> has_else
    |   | |-BinaryOperator 0x13f828210 <line:25:13, col:30> 'int' '>='
    |   | | |-ImplicitCastExpr 0x13f8281f8 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13f828130 <col:13> 'unsigned int' lvalue Var 0x13f80e2e8 'value' 'unsigned int'
    |   | | `-BinaryOperator 0x13f8281d8 <col:22, col:30> 'unsigned int' '+'
    |   | |   |-ImplicitCastExpr 0x13f828190 <col:22> 'unsigned int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13f828150 <col:22> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'
    |   | |   `-ImplicitCastExpr 0x13f8281c0 <col:30> 'unsigned int' <IntegralCast>
    |   | |     `-ImplicitCastExpr 0x13f8281a8 <col:30> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x13f828170 <col:30> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'
    |   | |-CompoundAssignOperator 0x13f8282a0 <line:26:13, col:22> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | | |-DeclRefExpr 0x13f828230 <col:13> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x13f828288 <col:22> 'unsigned int' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x13f828270 <col:22> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x13f828250 <col:22> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'
    |   | `-BreakStmt 0x13f8282d0 <line:28:13>
    |   `-UnaryOperator 0x13f828328 <line:29:9, col:10> 'int' postfix '++'
    |     `-DeclRefExpr 0x13f828308 <col:9> 'int' lvalue Var 0x13f827760 'c' 'int'
    |-IfStmt 0x13f8293c8 <line:32:5, line:33:16>
    | |-RecoveryExpr 0x13f829360 <line:32:9, col:58> '_Bool' contains-errors
    | `-ReturnStmt 0x13f8293b8 <line:33:9, col:16>
    |   `-ImplicitCastExpr 0x13f8293a0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13f829380 <col:16> 'int' lvalue Var 0x13f8276e0 'ret' 'int'
    |-BinaryOperator 0x13f829590 <line:35:5, col:30> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13f8294c8 <col:5, col:18> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13f829498 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13f829430 <col:5, col:12> '<dependent type>' contains-errors lvalue ->freq
    | | |   `-RecoveryExpr 0x13f829408 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13f8293e8 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'
    | | `-ImplicitCastExpr 0x13f8294b0 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f829478 <col:17> 'int' lvalue Var 0x13f827760 'c' 'int'
    | `-BinaryOperator 0x13f829570 <col:22, col:30> 'unsigned int' '+'
    |   |-ImplicitCastExpr 0x13f829558 <col:22> 'unsigned int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x13f829528 <col:22> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13f8294e8 <col:22> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'
    |   `-ImplicitCastExpr 0x13f829540 <col:30> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x13f829508 <col:30> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'
    |-BinaryOperator 0x13f829740 <line:36:5, col:32> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13f829690 <col:5, col:20> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13f829660 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13f8295f8 <col:5, col:12> '<dependent type>' contains-errors lvalue ->lookup
    | | |   `-RecoveryExpr 0x13f8295d0 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13f8295b0 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'
    | | `-ImplicitCastExpr 0x13f829678 <col:19> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f829640 <col:19> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'
    | `-BinaryOperator 0x13f829720 <col:24, col:32> 'unsigned int' '+'
    |   |-ImplicitCastExpr 0x13f8296f0 <col:24> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13f8296b0 <col:24> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'
    |   `-ImplicitCastExpr 0x13f829708 <col:32> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x13f8296d0 <col:32> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'
    |-CompoundAssignOperator 0x13f8297b8 <line:37:5, col:14> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x13f829760 <col:5> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'
    | `-ImplicitCastExpr 0x13f8297a0 <col:14> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x13f829780 <col:14> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'
    |-IfStmt 0x13f82abf8 <line:38:5, line:52:5>
    | |-BinaryOperator 0x13f829860 <line:38:9, col:17> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x13f8297e8 <col:9> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'
    | | `-RecoveryExpr 0x13f829840 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f82abd0 <col:22, line:52:5>
    |   |-BinaryOperator 0x13f8298d8 <line:39:9, col:17> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x13f829880 <col:9> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'
    |   | `-ImplicitCastExpr 0x13f8298c0 <col:17> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x13f8298a0 <col:17> 'int' 0
    |   |-ForStmt 0x13f829e08 <line:40:9, line:44:9>
    |   | |-BinaryOperator 0x13f829938 <line:40:14, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x13f8298f8 <col:14> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |   | | `-IntegerLiteral 0x13f829918 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x13f8299b0 <col:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13f829998 <col:21> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13f829958 <col:21> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |   | | `-IntegerLiteral 0x13f829978 <col:25> 'int' 256
    |   | |-UnaryOperator 0x13f8299f0 <col:30, col:31> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x13f8299d0 <col:30> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |   | `-CompoundStmt 0x13f829de0 <col:35, line:44:9>
    |   |   |-DeclStmt 0x13f829c00 <line:41:13, col:52>
    |   |   | `-VarDecl 0x13f829a20 <col:13, col:51> col:22 used nc 'unsigned int' cinit
    |   |   |   `-BinaryOperator 0x13f829be0 <col:27, col:51> '<dependent type>' contains-errors '+'
    |   |   |     |-ParenExpr 0x13f829ba0 <col:27, col:47> '<dependent type>' contains-errors
    |   |   |     | `-BinaryOperator 0x13f829b80 <col:28, col:46> '<dependent type>' contains-errors '>>'
    |   |   |     |   |-ArraySubscriptExpr 0x13f829b40 <col:28, col:41> '<dependent type>' contains-errors lvalue
    |   |   |     |   | |-ImplicitCastExpr 0x13f829b10 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     |   | | `-CXXDependentScopeMemberExpr 0x13f829aa8 <col:28, col:35> '<dependent type>' contains-errors lvalue ->freq
    |   |   |     |   | |   `-RecoveryExpr 0x13f829a88 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |     |   | `-ImplicitCastExpr 0x13f829b28 <col:40> 'int' <LValueToRValue>
    |   |   |     |   |   `-DeclRefExpr 0x13f829af0 <col:40> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |   |   |     |   `-IntegerLiteral 0x13f829b60 <col:46> 'int' 1
    |   |   |     `-IntegerLiteral 0x13f829bc0 <col:51> 'int' 1
    |   |   |-BinaryOperator 0x13f829d38 <line:42:13, col:30> '<dependent type>' contains-errors '='
    |   |   | |-ArraySubscriptExpr 0x13f829cf8 <col:13, col:26> '<dependent type>' contains-errors lvalue
    |   |   | | |-ImplicitCastExpr 0x13f829cc8 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | `-CXXDependentScopeMemberExpr 0x13f829c60 <col:13, col:20> '<dependent type>' contains-errors lvalue ->freq
    |   |   | | |   `-RecoveryExpr 0x13f829c38 <col:13> '<dependent type>' contains-errors lvalue
    |   |   | | |     `-DeclRefExpr 0x13f829c18 <col:13> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'
    |   |   | | `-ImplicitCastExpr 0x13f829ce0 <col:25> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x13f829ca8 <col:25> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |   |   | `-DeclRefExpr 0x13f829d18 <col:30> 'unsigned int' contains-errors lvalue Var 0x13f829a20 'nc' 'unsigned int'
    |   |   `-CompoundAssignOperator 0x13f829db0 <line:43:13, col:22> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   |     |-DeclRefExpr 0x13f829d58 <col:13> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'
    |   |     `-ImplicitCastExpr 0x13f829d98 <col:22> 'unsigned int' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x13f829d78 <col:22> 'unsigned int' contains-errors lvalue Var 0x13f829a20 'nc' 'unsigned int'
    |   `-ForStmt 0x13f82ab98 <line:45:9, line:51:9>
    |     |-BinaryOperator 0x13f829e80 <line:45:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x13f829e40 <col:14> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |     | `-IntegerLiteral 0x13f829e60 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13f829ef8 <col:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x13f829ee0 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13f829ea0 <col:21> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |     | `-IntegerLiteral 0x13f829ec0 <col:25> 'int' 16
    |     |-UnaryOperator 0x13f829f38 <col:29, col:30> 'int' postfix '++'
    |     | `-DeclRefExpr 0x13f829f18 <col:29> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |     `-CompoundStmt 0x13f82ab68 <col:34, line:51:9>
    |       |-DeclStmt 0x13f82a008 <line:46:13, col:29>
    |       | `-VarDecl 0x13f829f68 <col:13, col:28> col:22 used sum 'unsigned int' cinit
    |       |   `-ImplicitCastExpr 0x13f829ff0 <col:28> 'unsigned int' <IntegralCast>
    |       |     `-IntegerLiteral 0x13f829fd0 <col:28> 'int' 0
    |       |-DeclStmt 0x13f82a130 <line:47:13, col:37>
    |       | `-VarDecl 0x13f82a038 <col:13, col:36> col:22 used i16_17 'unsigned int' cinit
    |       |   `-ImplicitCastExpr 0x13f82a118 <col:31, col:36> 'unsigned int' <IntegralCast>
    |       |     `-BinaryOperator 0x13f82a0f8 <col:31, col:36> 'int' '<<'
    |       |       |-ImplicitCastExpr 0x13f82a0e0 <col:31> 'int' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x13f82a0a0 <col:31> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |       |       `-IntegerLiteral 0x13f82a0c0 <col:36> 'int' 4
    |       |-ForStmt 0x13f82a9f0 <line:48:13, line:49:46>
    |       | |-BinaryOperator 0x13f82a188 <line:48:18, col:22> 'int' '='
    |       | | |-DeclRefExpr 0x13f82a148 <col:18> 'int' lvalue Var 0x13f827660 'j' 'int'
    |       | | `-IntegerLiteral 0x13f82a168 <col:22> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x13f82a800 <col:25, col:29> 'int' '<'
    |       | | |-ImplicitCastExpr 0x13f82a1e8 <col:25> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x13f82a1a8 <col:25> 'int' lvalue Var 0x13f827660 'j' 'int'
    |       | | `-IntegerLiteral 0x13f82a1c8 <col:29> 'int' 16
    |       | |-UnaryOperator 0x13f82a840 <col:33, col:34> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x13f82a820 <col:33> 'int' lvalue Var 0x13f827660 'j' 'int'
    |       | `-CompoundAssignOperator 0x13f82a9c0 <line:49:17, col:46> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |   |-DeclRefExpr 0x13f82a858 <col:17> 'unsigned int' lvalue Var 0x13f829f68 'sum' 'unsigned int'
    |       |   `-ArraySubscriptExpr 0x13f82a9a0 <col:24, col:46> '<dependent type>' contains-errors lvalue
    |       |     |-ImplicitCastExpr 0x13f82a988 <col:24, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |       |     | `-CXXDependentScopeMemberExpr 0x13f82a898 <col:24, col:31> '<dependent type>' contains-errors lvalue ->freq
    |       |     |   `-RecoveryExpr 0x13f82a878 <col:24> '<dependent type>' contains-errors lvalue
    |       |     `-BinaryOperator 0x13f82a968 <col:36, col:45> 'unsigned int' '+'
    |       |       |-ImplicitCastExpr 0x13f82a920 <col:36> 'unsigned int' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x13f82a8e0 <col:36> 'unsigned int' lvalue Var 0x13f82a038 'i16_17' 'unsigned int'
    |       |       `-ImplicitCastExpr 0x13f82a950 <col:45> 'unsigned int' <IntegralCast>
    |       |         `-ImplicitCastExpr 0x13f82a938 <col:45> 'int' <LValueToRValue>
    |       |           `-DeclRefExpr 0x13f82a900 <col:45> 'int' lvalue Var 0x13f827660 'j' 'int'
    |       `-BinaryOperator 0x13f82ab48 <line:50:13, col:32> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x13f82ab08 <col:13, col:28> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x13f82aad8 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-CXXDependentScopeMemberExpr 0x13f82aa70 <col:13, col:20> '<dependent type>' contains-errors lvalue ->lookup
    |         | |   `-RecoveryExpr 0x13f82aa48 <col:13> '<dependent type>' contains-errors lvalue
    |         | |     `-DeclRefExpr 0x13f82aa28 <col:13> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'
    |         | `-ImplicitCastExpr 0x13f82aaf0 <col:27> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x13f82aab8 <col:27> 'int' lvalue Var 0x13f8275e0 'i' 'int'
    |         `-DeclRefExpr 0x13f82ab28 <col:32> 'unsigned int' lvalue Var 0x13f829f68 'sum' 'unsigned int'
    |-BinaryOperator 0x13f82acc8 <line:53:5, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13f82ac60 <col:5, col:12> '<dependent type>' contains-errors lvalue ->total_freq
    | | `-RecoveryExpr 0x13f82ac38 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13f82ac18 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'
    | `-DeclRefExpr 0x13f82aca8 <col:25> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'
    |-BinaryOperator 0x13f82ade0 <line:55:5, col:20> 'unsigned int' contains-errors '='
    | |-UnaryOperator 0x13f82ad20 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13f82ad08 <col:6> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f82ace8 <col:6> 'unsigned int *' lvalue ParmVar 0x13f80ded8 'rval' 'unsigned int *'
    | `-BinaryOperator 0x13f82adc0 <col:13, col:20> '<dependent type>' contains-errors '&'
    |   |-DeclRefExpr 0x13f82ad38 <col:13> 'int' lvalue Var 0x13f827760 'c' 'int'
    |   `-CXXDependentScopeMemberExpr 0x13f82ad78 <col:17, col:20> '<dependent type>' contains-errors lvalue ->cbits
    |     `-RecoveryExpr 0x13f82ad58 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f82ae20 <line:57:5, col:12>
      `-IntegerLiteral 0x13f82ae00 <col:12> 'int' 0
