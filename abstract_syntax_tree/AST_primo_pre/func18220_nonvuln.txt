`-FunctionDecl 0x12d00e038  line:1:1 invalid dissect_kafka_describe_configs_request 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x12d00dd28 <col:40, col:50> col:50 invalid tvb 'int *'
  |-ParmVarDecl 0x12d00dda8 <col:55, col:68> col:68 invalid pinfo 'int *'
  |-ParmVarDecl 0x12d00de28 <col:75, col:87> col:87 invalid tree 'int *'
  |-ParmVarDecl 0x12d00dea8 <col:93, col:97> col:97 used offset 'int'
  |-ParmVarDecl 0x12d00df28 <line:2:35, col:55> col:55 invalid api_version 'int'
  `-CompoundStmt 0x12d028730 <line:3:1, line:21:1>
    |-BinaryOperator 0x12d0281d0 <line:10:5, line:11:87> 'int' contains-errors '='
    | |-DeclRefExpr 0x12d027e58 <line:10:5> 'int' lvalue ParmVar 0x12d00dea8 'offset' 'int'
    | `-CallExpr 0x12d028170 <col:14, line:11:87> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d027f58 <line:10:14> 'int ()' Function 0x12d027ea0 'dissect_kafka_array' 'int ()'
    |   |-RecoveryExpr 0x12d0280f8 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x12d027f90 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x12d027fb0 <col:48> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x12d027fd0 <col:55> 'int' lvalue ParmVar 0x12d00dea8 'offset' 'int'
    |   |-IntegerLiteral 0x12d027ff0 <col:63> 'int' 0
    |   |-RecoveryExpr 0x12d028010 <col:66> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x12d028138 <line:11:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12d028118 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12d028150 <col:83> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d028588 <line:13:5, line:16:5>
    | |-BinaryOperator 0x12d028230 <line:13:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x12d0281f0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12d028210 <col:24> 'int' 1
    | `-CompoundStmt 0x12d028568 <col:27, line:16:5>
    |   |-CallExpr 0x12d0284a8 <line:14:9, col:102> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12d028330 <col:9> 'int ()' Function 0x12d028278 'proto_tree_add_item' 'int ()'
    |   | |-RecoveryExpr 0x12d028448 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x12d028468 <col:38> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x12d028380 <col:72> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x12d0283a0 <col:77> 'int' lvalue ParmVar 0x12d00dea8 'offset' 'int'
    |   | |-IntegerLiteral 0x12d0283c0 <col:85> 'int' 1
    |   | `-RecoveryExpr 0x12d028488 <col:88> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x12d028538 <line:15:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x12d0284f8 <col:9> 'int' lvalue ParmVar 0x12d00dea8 'offset' 'int'
    |     `-IntegerLiteral 0x12d028518 <col:19> 'int' 1
    `-ReturnStmt 0x12d028720 <line:20:5, col:12>
      `-ImplicitCastExpr 0x12d028708 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12d0286e8 <col:12> 'int' lvalue ParmVar 0x12d00dea8 'offset' 'int'
