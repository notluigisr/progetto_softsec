`-FunctionDecl 0x15480e1e8  line:1:14 invalid EvalHybridPerChannel 'int (int *, int *, int *, int *, const int *, const int *, const int *, int *)'
  |-ParmVarDecl 0x15480dd28 <col:35, col:50> col:50 invalid context 'int *'
  |-ParmVarDecl 0x15480dda8 <col:59, col:71> col:71 invalid node 'int *'
  |-ParmVarDecl 0x15480de28 <line:2:35, col:62> col:62 invalid params 'int *'
  |-ParmVarDecl 0x15480dea8 <line:3:35, col:43> col:43 invalid data 'int *'
  |-ParmVarDecl 0x15480df28 <col:49, col:69> col:69 invalid input 'const int *'
  |-ParmVarDecl 0x15480dfa8 <line:4:35, col:55> col:55 invalid filter 'const int *'
  |-ParmVarDecl 0x15480e028 <line:5:35, col:55> col:55 invalid bias 'const int *'
  |-ParmVarDecl 0x15480e0a8 <line:6:35, col:49> col:49 invalid output 'int *'
  `-CompoundStmt 0x154829180 <col:57, line:62:1>
    |-DeclStmt 0x15480e3e8 <line:7:3, col:53>
    | |-VarDecl 0x15480e2e8 <col:3, col:9> col:9 used output_activation_min 'float'
    | `-VarDecl 0x15480e368 <col:3, col:32> col:32 used output_activation_max 'float'
    |-CallExpr 0x154827690 <line:8:3, line:9:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154827560 <line:8:3> 'int ()' Function 0x1548274a8 'CalculateActivationRange' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x1548275a0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation
    | | `-RecoveryExpr 0x154827580 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x154827640 <col:48, col:49> 'float *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1548275e8 <col:49> 'float' lvalue Var 0x15480e2e8 'output_activation_min' 'float'
    | `-UnaryOperator 0x154827678 <line:9:28, col:29> 'float *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x154827658 <col:29> 'float' lvalue Var 0x15480e368 'output_activation_max' 'float'
    |-DeclStmt 0x154827a20 <line:10:3, col:72>
    | `-VarDecl 0x1548276e0 <col:3, col:71> col:13 used input_size 'const int' cinit
    |   `-BinaryOperator 0x154827a00 <col:26, col:71> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x154827868 <col:26, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x154827828 <col:26> 'int ()' Function 0x154827770 'NumElements' 'int ()'
    |     | `-RecoveryExpr 0x154827848 <col:38> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x1548279d0 <col:47, col:71> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x154827970 <col:47> 'int ()' Function 0x1548278b8 'SizeOfDimension' 'int ()'
    |       |-RecoveryExpr 0x154827990 <col:63> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x1548279b0 <col:70> 'int' 0
    |-DeclStmt 0x154827b48 <line:11:3, col:51>
    | `-VarDecl 0x154827a50 <col:3, col:50> col:13 used batch_size 'const int' cinit
    |   `-CallExpr 0x154827b18 <col:26, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x154827ab8 <col:26> 'int ()' Function 0x1548278b8 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x154827ad8 <col:42> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x154827af8 <col:49> 'int' 0
    |-DeclStmt 0x154827dc0 <line:12:3, line:13:63>
    | `-VarDecl 0x154827b78 <line:12:3, col:23> col:23 invalid input_quantized 'const int *'
    |-DeclStmt 0x154827f58 <line:15:3, line:16:64>
    | `-VarDecl 0x154827eb8 <line:15:3, col:10> col:10 scaling_factors_ptr 'float *'
    |-ForStmt 0x154828368 <line:20:3, line:26:3>
    | |-DeclStmt 0x154828148 <line:20:8, col:17>
    | | `-VarDecl 0x1548280c0 <col:8, col:16> col:12 used b 'int' cinit
    | |   `-IntegerLiteral 0x154828128 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1548281d0 <col:19, col:23> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x1548281a0 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x154828160 <col:19> 'int' lvalue Var 0x1548280c0 'b' 'int'
    | | `-ImplicitCastExpr 0x1548281b8 <col:23> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x154828180 <col:23> 'const int' contains-errors lvalue Var 0x154827a50 'batch_size' 'const int'
    | |-UnaryOperator 0x154828210 <col:35, col:37> 'int' prefix '++'
    | | `-DeclRefExpr 0x1548281f0 <col:37> 'int' lvalue Var 0x1548280c0 'b' 'int'
    | `-CompoundStmt 0x154828350 <col:40, line:26:3>
    |   `-DeclStmt 0x154828338 <line:21:5, col:38>
    |     `-VarDecl 0x154828240 <col:5, col:28> col:15 offset 'const int' cinit
    |       `-BinaryOperator 0x154828318 <col:24, col:28> 'int' contains-errors '*'
    |         |-ImplicitCastExpr 0x1548282e8 <col:24> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x1548282a8 <col:24> 'int' lvalue Var 0x1548280c0 'b' 'int'
    |         `-ImplicitCastExpr 0x154828300 <col:28> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x1548282c8 <col:28> 'const int' contains-errors lvalue Var 0x1548276e0 'input_size' 'const int'
    |-DeclStmt 0x1548290f8 <line:41:3, line:42:79>
    | `-VarDecl 0x154828fc0 <line:41:3, col:15> col:15 affine_quantization 'const int *' auto
    `-IfStmt 0x154829150 <line:43:3, line:59:3> has_else
      |-RecoveryExpr 0x154829110 <line:43:7, col:22> '_Bool' contains-errors
      |-CompoundStmt 0x154829130 <col:34, line:51:3>
      `-CompoundStmt 0x154829140 <col:10, line:59:3>
