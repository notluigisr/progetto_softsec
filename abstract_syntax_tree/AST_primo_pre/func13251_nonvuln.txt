`-FunctionDecl 0x150928238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x150928158 <col:8> col:8 used QueryPlannerTest 'int'
  |-ParmVarDecl 0x1509280d8 <col:26> col:26 IntersectCanBeVeryBig 'int'
  `-CompoundStmt 0x150941620 <col:49, line:17:1>
    |-CallExpr 0x150940cf8 <line:3:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1509284a0 <col:5> 'int ()' Function 0x1509283e8 'addIndex' 'int ()'
    | `-CallExpr 0x150940cd0 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1509285a0 <col:14> 'int ()' Function 0x1509284e8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x150940ca0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x150928600 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x150928620 <col:28> 'int' 1
    |-CallExpr 0x150940e10 <line:4:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150940d20 <col:5> 'int ()' Function 0x1509283e8 'addIndex' 'int ()'
    | `-CallExpr 0x150940de8 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150940d40 <col:14> 'int ()' Function 0x1509284e8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x150940db8 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x150940d60 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x150940d80 <col:28> 'int' 1
    |-CallExpr 0x150940f28 <line:5:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150940e38 <col:5> 'int ()' Function 0x1509283e8 'addIndex' 'int ()'
    | `-CallExpr 0x150940f00 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150940e58 <col:14> 'int ()' Function 0x1509284e8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x150940ed0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x150940e78 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x150940e98 <col:28> 'int' 1
    |-CallExpr 0x150941040 <line:6:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150940f50 <col:5> 'int ()' Function 0x1509283e8 'addIndex' 'int ()'
    | `-CallExpr 0x150941018 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150940f70 <col:14> 'int ()' Function 0x1509284e8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x150940fe8 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x150940f90 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x150940fb0 <col:28> 'int' 1
    |-CallExpr 0x1509413a0 <line:7:5, line:14:24> 'int'
    | |-ImplicitCastExpr 0x150941388 <line:7:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x150941148 <col:5> 'int ()' Function 0x150941090 'runQuery' 'int ()'
    | `-CallExpr 0x150941348 <line:8:9, line:14:23> 'int'
    |   |-ImplicitCastExpr 0x150941330 <line:8:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x150941248 <col:9> 'int ()' Function 0x150941190 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x150941370 <col:18, line:14:18> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1509412b0 <line:8:18, line:14:18> 'char[22]' lvalue "STRSTRSTRSTRSTRSTRSTR"
    `-CallExpr 0x1509415f8 <line:16:5, col:69> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1509414a8 <col:5> 'int ()' Function 0x1509413f0 'assertNumSolutions' 'int ()'
      `-CallExpr 0x1509415d8 <col:24, col:68> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x150941590 <col:24, col:63> '<dependent type>' contains-errors lvalue .load
          `-RecoveryExpr 0x150941570 <col:24> '<dependent type>' contains-errors lvalue
