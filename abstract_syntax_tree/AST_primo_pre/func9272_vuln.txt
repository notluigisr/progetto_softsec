`-FunctionDecl 0x14d00de88  line:1:1 invalid compile_string_node 'int (int *, int *)'
  |-ParmVarDecl 0x14d00dd28 <col:21, col:27> col:27 invalid node 'int *'
  |-ParmVarDecl 0x14d00dda8 <col:33, col:42> col:42 referenced invalid reg 'int *'
  `-CompoundStmt 0x14d0280e8 <line:2:1, line:37:1>
    |-DeclStmt 0x14d00e1f0 <line:3:3, col:36>
    | |-VarDecl 0x14d00df58 <col:3, col:7> col:7 used r 'int'
    | |-VarDecl 0x14d00dfd8 <col:3, col:10> col:10 used len 'int'
    | |-VarDecl 0x14d00e058 <col:3, col:15> col:15 used prev_len 'int'
    | |-VarDecl 0x14d00e0d8 <col:3, col:25> col:25 used slen 'int'
    | `-VarDecl 0x14d00e158 <col:3, col:31> col:31 used ambig 'int'
    |-IfStmt 0x14d027720 <line:9:3, line:10:12>
    | |-BinaryOperator 0x14d0276d0 <line:9:7, col:22> 'int' contains-errors '<='
    | | |-CXXDependentScopeMemberExpr 0x14d027620 <col:7, col:11> '<dependent type>' contains-errors lvalue ->end
    | | | `-RecoveryExpr 0x14d027600 <col:7> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x14d027688 <col:18, col:22> '<dependent type>' contains-errors lvalue ->s
    | |   `-RecoveryExpr 0x14d027668 <col:18> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14d027710 <line:10:5, col:12>
    |   `-IntegerLiteral 0x14d0276f0 <col:12> 'int' 0
    |-BinaryOperator 0x14d027908 <line:13:3, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x14d0277a0 <col:3> 'int' lvalue Var 0x14d00e158 'ambig' 'int'
    | `-CallExpr 0x14d0278e0 <col:11, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d0278a0 <col:11> 'int ()' Function 0x14d0277e8 'NSTRING_IS_AMBIG' 'int ()'
    |   `-RecoveryExpr 0x14d0278c0 <col:28> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x14d027b60 <line:18:3, col:10> 'int' '='
      |-DeclRefExpr 0x14d027b20 <col:3> 'int' lvalue Var 0x14d00e0d8 'slen' 'int'
      `-IntegerLiteral 0x14d027b40 <col:10> 'int' 1
