`-FunctionDecl 0x135140d38  line:1:12 snd_ctl_elem_write 'int (struct snd_card *, struct snd_ctl_file *, struct snd_ctl_elem_value *)' static
  |-ParmVarDecl 0x135128648 <col:31, col:48> col:48 used card 'struct snd_card *'
  |-ParmVarDecl 0x135140a28 <col:54, col:75> col:75 used file 'struct snd_ctl_file *'
  |-ParmVarDecl 0x135140bf8 <line:2:10, col:37> col:37 used control 'struct snd_ctl_elem_value *'
  `-CompoundStmt 0x1351436f8 <line:3:1, line:33:1>
    |-DeclStmt 0x135141028 <line:4:2, col:27>
    | |-RecordDecl 0x135140e40 <col:2, col:9> col:9 struct snd_kcontrol
    | `-VarDecl 0x135140fa8 <col:2, col:23> col:23 used kctl 'struct snd_kcontrol *'
    |-DeclStmt 0x135141228 <line:5:2, col:34>
    | |-RecordDecl 0x135141040 <col:2, col:9> col:9 struct snd_kcontrol_volatile
    | `-VarDecl 0x1351411a8 <col:2, col:32> col:32 used vd 'struct snd_kcontrol_volatile *'
    |-DeclStmt 0x1351412c0 <line:6:2, col:27>
    | `-VarDecl 0x135141258 <col:2, col:15> col:15 used index_offset 'unsigned int'
    |-DeclStmt 0x135141358 <line:7:2, col:12>
    | `-VarDecl 0x1351412f0 <col:2, col:6> col:6 used result 'int'
    |-CallExpr 0x135141538 <line:9:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1351414a0 <col:2> 'int ()' Function 0x1351413e8 'down_read' 'int ()'
    | `-UnaryOperator 0x135141520 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1351414f8 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1351414c0 <col:13> 'struct snd_card *' lvalue ParmVar 0x135128648 'card' 'struct snd_card *'
    |-BinaryOperator 0x135141748 <line:10:2, col:43> 'struct snd_kcontrol *' contains-errors '='
    | |-DeclRefExpr 0x135141560 <col:2> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    | `-CallExpr 0x135141718 <col:9, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x135141660 <col:9> 'int ()' Function 0x1351415a8 'snd_ctl_find_id' 'int ()'
    |   |-DeclRefExpr 0x135141680 <col:25> 'struct snd_card *' lvalue ParmVar 0x135128648 'card' 'struct snd_card *'
    |   `-UnaryOperator 0x135141700 <col:31, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1351416d8 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1351416a0 <col:32> 'struct snd_ctl_elem_value *' lvalue ParmVar 0x135140bf8 'control' 'struct snd_ctl_elem_value *'
    |-IfStmt 0x1351435c0 <line:11:2, line:30:2> has_else
    | |-BinaryOperator 0x1351417e0 <line:11:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x135141768 <col:6> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    | | `-RecoveryExpr 0x1351417c0 <col:14> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1351418f8 <col:20, line:13:2>
    | | `-BinaryOperator 0x1351418d8 <line:12:3, col:13> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x135141800 <col:3> 'int' lvalue Var 0x1351412f0 'result' 'int'
    | |   `-UnaryOperator 0x1351418c0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |     `-ImplicitCastExpr 0x1351418a8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x135141888 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x135143590 <line:13:9, line:30:2>
    |   |-BinaryOperator 0x1351428f8 <line:14:3, col:53> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x135141910 <col:3> 'unsigned int' lvalue Var 0x135141258 'index_offset' 'unsigned int'
    |   | `-CallExpr 0x1351428c8 <col:18, col:53> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x135142810 <col:18> 'int ()' Function 0x135141958 'snd_ctl_get_ioff' 'int ()'
    |   |   |-DeclRefExpr 0x135142830 <col:35> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    |   |   `-UnaryOperator 0x1351428b0 <col:41, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x135142888 <col:42, col:51> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x135142850 <col:42> 'struct snd_ctl_elem_value *' lvalue ParmVar 0x135140bf8 'control' 'struct snd_ctl_elem_value *'
    |   |-BinaryOperator 0x135142a20 <line:15:3, col:30> 'struct snd_kcontrol_volatile *' contains-errors '='
    |   | |-DeclRefExpr 0x135142918 <col:3> 'struct snd_kcontrol_volatile *' lvalue Var 0x1351411a8 'vd' 'struct snd_kcontrol_volatile *'
    |   | `-UnaryOperator 0x135142a08 <col:8, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-ArraySubscriptExpr 0x1351429e8 <col:9, col:30> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x1351429b8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x135142970 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x135142938 <col:9> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    |   |     `-ImplicitCastExpr 0x1351429d0 <col:18> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x135142998 <col:18> 'unsigned int' lvalue Var 0x135141258 'index_offset' 'unsigned int'
    |   |-IfStmt 0x135143140 <line:16:3, line:23:3> has_else
    |   | |-RecoveryExpr 0x135142cf0 <line:16:7, line:18:46> '_Bool' contains-errors
    |   | |-CompoundStmt 0x135142e08 <col:49, line:20:3>
    |   | | `-BinaryOperator 0x135142de8 <line:19:4, col:14> 'int' contains-errors '='
    |   | |   |-DeclRefExpr 0x135142d10 <col:4> 'int' lvalue Var 0x1351412f0 'result' 'int'
    |   | |   `-UnaryOperator 0x135142dd0 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |     `-ImplicitCastExpr 0x135142db8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       `-RecoveryExpr 0x135142d98 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x135143120 <line:20:10, line:23:3>
    |   |   |-CallExpr 0x135142fd8 <line:21:4, col:55> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x135142f00 <col:4> 'int ()' Function 0x135142e48 'snd_ctl_build_ioff' 'int ()'
    |   |   | |-UnaryOperator 0x135142f80 <col:23, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | | `-RecoveryExpr 0x135142f58 <col:24, col:33> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x135142f20 <col:24> 'struct snd_ctl_elem_value *' lvalue ParmVar 0x135140bf8 'control' 'struct snd_ctl_elem_value *'
    |   |   | |-DeclRefExpr 0x135142f98 <col:37> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    |   |   | `-DeclRefExpr 0x135142fb8 <col:43> 'unsigned int' lvalue Var 0x135141258 'index_offset' 'unsigned int'
    |   |   `-BinaryOperator 0x135143100 <line:22:4, col:36> 'int' contains-errors '='
    |   |     |-DeclRefExpr 0x135143010 <col:4> 'int' lvalue Var 0x1351412f0 'result' 'int'
    |   |     `-CallExpr 0x1351430d0 <col:13, col:36> '<dependent type>' contains-errors
    |   |       |-RecoveryExpr 0x135143068 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |   |       | `-DeclRefExpr 0x135143030 <col:13> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    |   |       |-DeclRefExpr 0x135143090 <col:23> 'struct snd_kcontrol *' lvalue Var 0x135140fa8 'kctl' 'struct snd_kcontrol *'
    |   |       `-DeclRefExpr 0x1351430b0 <col:29> 'struct snd_ctl_elem_value *' lvalue ParmVar 0x135140bf8 'control' 'struct snd_ctl_elem_value *'
    |   `-IfStmt 0x135143570 <line:24:3, line:29:3>
    |     |-BinaryOperator 0x1351431c8 <line:24:7, col:16> 'int' '>'
    |     | |-ImplicitCastExpr 0x1351431b0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x135143170 <col:7> 'int' lvalue Var 0x1351412f0 'result' 'int'
    |     | `-IntegerLiteral 0x135143190 <col:16> 'int' 0
    |     `-CompoundStmt 0x135143550 <col:19, line:29:3>
    |       |-CallExpr 0x135143360 <line:25:4, col:33> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1351432c8 <col:4> 'int ()' Function 0x135143210 'up_read' 'int ()'
    |       | `-UnaryOperator 0x135143348 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-RecoveryExpr 0x135143320 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x1351432e8 <col:13> 'struct snd_card *' lvalue ParmVar 0x135128648 'card' 'struct snd_card *'
    |       `-ReturnStmt 0x135143540 <line:28:4, col:11>
    |         `-IntegerLiteral 0x135143520 <col:11> 'int' 0
    |-CallExpr 0x135143688 <line:31:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1351435f0 <col:2> 'int ()' Function 0x135143210 'up_read' 'int ()'
    | `-UnaryOperator 0x135143670 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x135143648 <col:11, col:17> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x135143610 <col:11> 'struct snd_card *' lvalue ParmVar 0x135128648 'card' 'struct snd_card *'
    `-ReturnStmt 0x1351436e8 <line:32:2, col:9>
      `-ImplicitCastExpr 0x1351436d0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1351436b0 <col:9> 'int' lvalue Var 0x1351412f0 'result' 'int'
