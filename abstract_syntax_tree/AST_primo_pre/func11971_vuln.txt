`-FunctionDecl 0x11f01c398  line:1:5 main 'int (void)'
  `-CompoundStmt 0x11f049ba0 <line:2:1, line:20:1>
    |-DeclStmt 0x11f01c830 <line:3:2, line:16:3>
    | `-VarDecl 0x11f01c690 <line:3:2, col:38> col:16 used test_functions 'void (*[])(void)' static
    |-DeclStmt 0x11f01c8c8 <line:17:2, col:9>
    | `-VarDecl 0x11f01c860 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x11f049b38 <line:18:2, col:31> 'int' '='
    | |-DeclRefExpr 0x11f01c8e0 <col:2> 'int' lvalue Var 0x11f01c860 'ret' 'int'
    | `-CallExpr 0x11f049a98 <col:8, col:31> 'int'
    |   |-ImplicitCastExpr 0x11f049a80 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f049a10 <col:8> 'int ()' Function 0x11f01c958 'test_run' 'int ()'
    |   `-ImplicitCastExpr 0x11f049b20 <col:17> 'void (**)(void)' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x11f049a30 <col:17> 'void (*[])(void)' lvalue Var 0x11f01c690 'test_functions' 'void (*[])(void)'
    `-ReturnStmt 0x11f049b90 <line:19:2, col:9>
      `-ImplicitCastExpr 0x11f049b78 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11f049b58 <col:9> 'int' lvalue Var 0x11f01c860 'ret' 'int'
