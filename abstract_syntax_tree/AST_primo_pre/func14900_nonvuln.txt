`-FunctionDecl 0x15780de38  line:1:14 strcatext 'char *(char *, char *)' static
  |-ParmVarDecl 0x15780dcd8 <col:24, col:30> col:30 used dest 'char *'
  |-ParmVarDecl 0x15780dd58 <col:35, col:41> col:41 used src 'char *'
  `-CompoundStmt 0x15780e340 <line:2:1, line:8:1>
    |-DeclStmt 0x15780dff0 <line:3:2, col:14>
    | `-VarDecl 0x15780df50 <col:2, col:10> col:8 used r 'char *' cinit
    |   `-ImplicitCastExpr 0x15780dfd8 <col:10> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x15780dfb8 <col:10> 'char *' lvalue ParmVar 0x15780dcd8 'dest' 'char *'
    |-WhileStmt 0x15780e0a8 <line:4:2, line:5:7>
    | |-ImplicitCastExpr 0x15780e058 <line:4:9, col:10> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x15780e040 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x15780e028 <col:10> 'char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x15780e008 <col:10> 'char *' lvalue ParmVar 0x15780dcd8 'dest' 'char *'
    | `-UnaryOperator 0x15780e090 <line:5:3, col:7> 'char *' postfix '++'
    |   `-DeclRefExpr 0x15780e070 <col:3> 'char *' lvalue ParmVar 0x15780dcd8 'dest' 'char *'
    |-CallExpr 0x15780e298 <line:6:2, col:20> 'int'
    | |-ImplicitCastExpr 0x15780e280 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15780e1f0 <col:2> 'int ()' Function 0x15780e138 'strcpyext' 'int ()'
    | |-ImplicitCastExpr 0x15780e2c8 <col:12> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x15780e210 <col:12> 'char *' lvalue ParmVar 0x15780dcd8 'dest' 'char *'
    | `-ImplicitCastExpr 0x15780e2e0 <col:17> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x15780e230 <col:17> 'char *' lvalue ParmVar 0x15780dd58 'src' 'char *'
    `-ReturnStmt 0x15780e330 <line:7:2, col:9>
      `-ImplicitCastExpr 0x15780e318 <col:9> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x15780e2f8 <col:9> 'char *' lvalue Var 0x15780df50 'r' 'char *'
