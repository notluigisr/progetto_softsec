`-FunctionDecl 0x11f928288  line:1:12 invalid show_programs 'int (int *, int *)' static
  |-ParmVarDecl 0x11f928128 <col:26, col:41> col:41 invalid w 'int *'
  |-ParmVarDecl 0x11f9281a8 <col:44, col:55> col:55 invalid ifile 'int *'
  `-CompoundStmt 0x11f941f58 <line:2:1, line:17:1>
    |-DeclStmt 0x11f9284f8 <line:4:5, col:19>
    | |-VarDecl 0x11f9283d8 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x11f928458 <col:5, col:18> col:12 used ret 'int' cinit
    |   `-IntegerLiteral 0x11f9284c0 <col:18> 'int' 0
    |-CallExpr 0x11f928718 <line:6:5, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f928670 <col:5> 'int ()' Function 0x11f9285b8 'writer_print_section_header' 'int ()'
    | |-RecoveryExpr 0x11f928690 <col:33> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11f9286f8 <col:36> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x11f941d90 <line:7:5, line:14:5>
    | |-BinaryOperator 0x11f928788 <line:7:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x11f928748 <col:10> 'int' lvalue Var 0x11f9283d8 'i' 'int'
    | | `-IntegerLiteral 0x11f928768 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11f9418d0 <col:17, col:30> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11f9287a8 <col:17> 'int' lvalue Var 0x11f9283d8 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x11f941888 <col:21, col:30> '<dependent type>' contains-errors lvalue ->nb_programs
    | |   `-RecoveryExpr 0x11f941868 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x11f941910 <col:43, col:44> 'int' postfix '++'
    | | `-DeclRefExpr 0x11f9418f0 <col:43> 'int' lvalue Var 0x11f9283d8 'i' 'int'
    | `-CompoundStmt 0x11f941d68 <col:48, line:14:5>
    |   |-IfStmt 0x11f941a60 <line:9:9, line:10:13>
    |   | |-UnaryOperator 0x11f941a40 <line:9:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x11f941a28 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x11f941a08 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-ContinueStmt 0x11f941a58 <line:10:13>
    |   |-BinaryOperator 0x11f941ca8 <line:11:9, col:45> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11f941a80 <col:9> 'int' lvalue Var 0x11f928458 'ret' 'int'
    |   | `-CallExpr 0x11f941c70 <col:15, col:45> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11f941b80 <col:15> 'int ()' Function 0x11f941ac8 'show_program' 'int ()'
    |   |   |-RecoveryExpr 0x11f941ba0 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x11f941bc0 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x11f941c50 <col:38> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x11f941d48 <line:12:9, line:13:13>
    |     |-BinaryOperator 0x11f941d20 <line:12:13, col:19> 'int' '<'
    |     | |-ImplicitCastExpr 0x11f941d08 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x11f941cc8 <col:13> 'int' lvalue Var 0x11f928458 'ret' 'int'
    |     | `-IntegerLiteral 0x11f941ce8 <col:19> 'int' 0
    |     `-BreakStmt 0x11f941d40 <line:13:13>
    |-CallExpr 0x11f941ee8 <line:15:5, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f941ea8 <col:5> 'int ()' Function 0x11f941df0 'writer_print_section_footer' 'int ()'
    | `-RecoveryExpr 0x11f941ec8 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11f941f48 <line:16:5, col:12>
      `-ImplicitCastExpr 0x11f941f30 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11f941f10 <col:12> 'int' lvalue Var 0x11f928458 'ret' 'int'
