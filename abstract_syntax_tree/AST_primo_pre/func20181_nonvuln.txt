`-FunctionDecl 0x14e941830  line:1:13 invalid smack_task_getsecid_obj 'void (struct task_struct *, int *)' static
  |-ParmVarDecl 0x14e928648 <col:37, col:57> col:57 used p 'struct task_struct *'
  |-ParmVarDecl 0x14e928718 <col:60, col:65> col:65 invalid secid 'int *'
  `-CompoundStmt 0x14e941e00 <line:2:1, line:6:1>
    |-DeclStmt 0x14e941d18 <line:3:2, col:53>
    | |-RecordDecl 0x14e9418e8 <col:2, col:9> col:9 struct smack_known
    | `-VarDecl 0x14e941a58 <col:2, col:52> col:22 used skp 'struct smack_known *' cinit
    |   `-ImplicitCastExpr 0x14e941ce8 <col:28, col:52> 'struct smack_known *' <IntegralToPointer>
    |     `-CallExpr 0x14e941ca8 <col:28, col:52> 'int'
    |       |-ImplicitCastExpr 0x14e941c90 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14e941c20 <col:28> 'int ()' Function 0x14e941b68 'smk_of_task_struct_obj' 'int ()'
    |       `-ImplicitCastExpr 0x14e941cd0 <col:51> 'struct task_struct *' <LValueToRValue>
    |         `-DeclRefExpr 0x14e941c40 <col:51> 'struct task_struct *' lvalue ParmVar 0x14e928648 'p' 'struct task_struct *'
    `-BinaryOperator 0x14e941de0 <line:5:2, col:16> '<dependent type>' contains-errors '='
      |-UnaryOperator 0x14e941d68 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x14e941d50 <col:3> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x14e941d30 <col:3> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x14e941db8 <col:11, col:16> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x14e941d80 <col:11> 'struct smack_known *' lvalue Var 0x14e941a58 'skp' 'struct smack_known *'
