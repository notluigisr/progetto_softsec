`-FunctionDecl 0x12f8269d8  line:1:12 gpr_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)' static
  |-ParmVarDecl 0x12f80e248 <col:20, col:40> col:40 used target 'struct task_struct *'
  |-ParmVarDecl 0x12f826628 <line:2:6, col:32> col:32 regset 'const struct user_regset *'
  |-ParmVarDecl 0x12f8266a8 <line:3:6, col:19> col:19 used pos 'unsigned int'
  |-ParmVarDecl 0x12f826728 <col:24, col:37> col:37 used count 'unsigned int'
  |-ParmVarDecl 0x12f8267d8 <line:4:6, col:18> col:18 used kbuf 'const void *'
  |-ParmVarDecl 0x12f826850 <col:24, col:35> col:35 __user 'int'
  `-CompoundStmt 0x12f8298d8 <line:5:1, line:20:1>
    |-DeclStmt 0x12f826b78 <line:6:2, col:9>
    | `-VarDecl 0x12f826b10 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x12f826d08 <line:7:2, col:24>
    | |-RecordDecl 0x12f826b90 <col:2, col:9> col:9 struct pt_regs
    | `-VarDecl 0x12f826c88 <col:2, col:17> col:17 invalid newregs 'struct pt_regs'
    |-BinaryOperator 0x12f827188 <line:9:2, line:11:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f826d20 <line:9:2> 'int' lvalue Var 0x12f826b10 'ret' 'int'
    | `-CallExpr 0x12f827130 <col:8, line:11:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f826e70 <line:9:8> 'int ()' Function 0x12f826db8 'user_regset_copyin' 'int ()'
    |   |-UnaryOperator 0x12f826ee0 <col:27, col:28> 'unsigned int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12f826e90 <col:28> 'unsigned int' lvalue ParmVar 0x12f8266a8 'pos' 'unsigned int'
    |   |-UnaryOperator 0x12f826f18 <col:33, col:34> 'unsigned int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12f826ef8 <col:34> 'unsigned int' lvalue ParmVar 0x12f826728 'count' 'unsigned int'
    |   |-UnaryOperator 0x12f826f80 <col:41, col:42> 'const void **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12f826f30 <col:42> 'const void *' lvalue ParmVar 0x12f8267d8 'kbuf' 'const void *'
    |   |-UnaryOperator 0x12f827118 <col:48, col:49> 'const void **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x12f8270f8 <col:49> 'const void *' lvalue ParmVar 0x12f8267d8 'kbuf' 'const void *'
    |   |-UnaryOperator 0x12f826fe8 <line:10:6, col:7> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x12f826fc8 <col:7> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x12f827000 <line:11:6> 'int' 0
    |   `-UnaryExprOrTypeTraitExpr 0x12f827060 <col:9, col:23> 'unsigned long' contains-errors sizeof
    |     `-ParenExpr 0x12f827040 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x12f827020 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f827228 <line:12:2, line:13:10>
    | |-ImplicitCastExpr 0x12f8271c8 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f8271a8 <col:6> 'int' lvalue Var 0x12f826b10 'ret' 'int'
    | `-ReturnStmt 0x12f827218 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x12f827200 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f8271e0 <col:10> 'int' lvalue Var 0x12f826b10 'ret' 'int'
    |-IfStmt 0x12f827468 <line:15:2, line:16:11>
    | |-UnaryOperator 0x12f8273a8 <line:15:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12f827380 <col:7, col:31> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12f827328 <col:7> 'int ()' Function 0x12f827270 'valid_user_regs' 'int ()'
    | |   `-UnaryOperator 0x12f827368 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x12f827348 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f827458 <line:16:3, col:11>
    |   `-UnaryOperator 0x12f827440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12f827428 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12f827408 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12f829888 <line:18:2, col:26> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12f829840 <col:2, col:22> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12f829800 <col:3, col:22> 'int'
    | |   |-ImplicitCastExpr 0x12f8275e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12f827568 <col:3> 'int ()' Function 0x12f8274b0 'task_pt_regs' 'int ()'
    | |   `-ImplicitCastExpr 0x12f829828 <col:16> 'struct task_struct *' <LValueToRValue>
    | |     `-DeclRefExpr 0x12f827588 <col:16> 'struct task_struct *' lvalue ParmVar 0x12f80e248 'target' 'struct task_struct *'
    | `-RecoveryExpr 0x12f829868 <col:26> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12f8298c8 <line:19:2, col:9>
      `-IntegerLiteral 0x12f8298a8 <col:9> 'int' 0
