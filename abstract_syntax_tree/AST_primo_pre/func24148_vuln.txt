`-FunctionDecl 0x13c1281d8  line:1:1 do_tabs 'int (int *)'
  |-ParmVarDecl 0x13c128108 <col:9, col:14> col:14 used tab_list 'int *'
  `-CompoundStmt 0x13c1411a0 <line:2:1, line:23:1>
    |-DeclStmt 0x13c128370 <line:3:5, col:17>
    | `-VarDecl 0x13c1282e8 <col:5, col:16> col:9 used last 'int' cinit
    |   `-IntegerLiteral 0x13c128350 <col:16> 'int' 1
    |-DeclStmt 0x13c128408 <line:4:5, col:13>
    | `-VarDecl 0x13c1283a0 <col:5, col:9> col:9 used stop 'int'
    |-CallExpr 0x13c1285d8 <line:6:5, col:17> 'int'
    | |-ImplicitCastExpr 0x13c1285c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13c128550 <col:5> 'int ()' Function 0x13c128498 'putchar' 'int ()'
    | `-CharacterLiteral 0x13c128570 <col:13> 'int' 13
    |-WhileStmt 0x13c141108 <line:7:5, line:21:5>
    | |-BinaryOperator 0x13c1286e8 <line:7:12, col:35> 'int' '>'
    | | |-ParenExpr 0x13c1286a8 <col:12, col:31> 'int'
    | | | `-BinaryOperator 0x13c128688 <col:13, col:29> 'int' '='
    | | |   |-DeclRefExpr 0x13c128600 <col:13> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    | | |   `-ImplicitCastExpr 0x13c128670 <col:20, col:29> 'int' <LValueToRValue>
    | | |     `-UnaryOperator 0x13c128658 <col:20, col:29> 'int' lvalue prefix '*' cannot overflow
    | | |       `-UnaryOperator 0x13c128640 <col:21, col:29> 'int *' postfix '++'
    | | |         `-DeclRefExpr 0x13c128620 <col:21> 'int *' lvalue ParmVar 0x13c128108 'tab_list' 'int *'
    | | `-IntegerLiteral 0x13c1286c8 <col:35> 'int' 0
    | `-CompoundStmt 0x13c1410e8 <col:38, line:21:5>
    |   |-IfStmt 0x13c140bc8 <line:8:2, line:14:2>
    |   | |-BinaryOperator 0x13c128778 <line:8:6, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13c128748 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13c128708 <col:6> 'int' lvalue Var 0x13c1282e8 'last' 'int'
    |   | | `-ImplicitCastExpr 0x13c128760 <col:13> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13c128728 <col:13> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    |   | `-CompoundStmt 0x13c140bb0 <col:19, line:14:2>
    |   |   `-WhileStmt 0x13c140b90 <line:9:6, line:13:6>
    |   |     |-BinaryOperator 0x13c140a18 <line:9:13, col:22> 'int' '<'
    |   |     | |-UnaryOperator 0x13c1287b8 <col:13, col:17> 'int' postfix '++'
    |   |     | | `-DeclRefExpr 0x13c128798 <col:13> 'int' lvalue Var 0x13c1282e8 'last' 'int'
    |   |     | `-ImplicitCastExpr 0x13c140a00 <col:22> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x13c1287d0 <col:22> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    |   |     `-CompoundStmt 0x13c140b70 <col:28, line:13:6>
    |   |       |-IfStmt 0x13c140ad8 <line:10:3, line:11:7>
    |   |       | |-BinaryOperator 0x13c140ab0 <line:10:7, col:14> 'int' contains-errors '>'
    |   |       | | |-DeclRefExpr 0x13c140a38 <col:7> 'int' lvalue Var 0x13c1282e8 'last' 'int'
    |   |       | | `-RecoveryExpr 0x13c140a90 <col:14> '<dependent type>' contains-errors lvalue
    |   |       | `-BreakStmt 0x13c140ad0 <line:11:7>
    |   |       `-CallExpr 0x13c140b48 <line:12:3, col:14> 'int'
    |   |         |-ImplicitCastExpr 0x13c140b30 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |         | `-DeclRefExpr 0x13c140af8 <col:3> 'int ()' Function 0x13c128498 'putchar' 'int ()'
    |   |         `-CharacterLiteral 0x13c140b18 <col:11> 'int' 32
    |   `-IfStmt 0x13c1410b8 <line:15:2, line:20:2> has_else
    |     |-BinaryOperator 0x13c140c60 <line:15:6, col:14> 'int' contains-errors '<='
    |     | |-DeclRefExpr 0x13c140be8 <col:6> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    |     | `-RecoveryExpr 0x13c140c40 <col:14> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x13c141078 <col:24, line:18:2>
    |     | |-CallExpr 0x13c140fc8 <line:16:6, col:42> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x13c140d60 <col:6> 'int ()' Function 0x13c140ca8 'tputs' 'int ()'
    |     | | |-CallExpr 0x13c140f78 <col:12, col:31> '<dependent type>' contains-errors
    |     | | | |-DeclRefExpr 0x13c140e60 <col:12> 'int ()' Function 0x13c140da8 'tparm' 'int ()'
    |     | | | |-RecoveryExpr 0x13c140f58 <col:18> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x13c140e98 <col:27> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    |     | | |-IntegerLiteral 0x13c140ee8 <col:34> 'int' 1
    |     | | `-RecoveryExpr 0x13c140fa8 <col:37> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x13c141058 <line:17:6, col:13> 'int' '='
    |     |   |-DeclRefExpr 0x13c141000 <col:6> 'int' lvalue Var 0x13c1282e8 'last' 'int'
    |     |   `-ImplicitCastExpr 0x13c141040 <col:13> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x13c141020 <col:13> 'int' lvalue Var 0x13c1283a0 'stop' 'int'
    |     `-CompoundStmt 0x13c1410a0 <line:18:9, line:20:2>
    |       `-BreakStmt 0x13c141098 <line:19:6>
    `-CallExpr 0x13c141178 <line:22:5, col:17> 'int'
      |-ImplicitCastExpr 0x13c141160 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13c141128 <col:5> 'int ()' Function 0x13c128498 'putchar' 'int ()'
      `-CharacterLiteral 0x13c141148 <col:13> 'int' 13
