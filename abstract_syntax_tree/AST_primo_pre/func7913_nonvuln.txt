`-FunctionDecl 0x12e026670  line:1:20 xfrm_states_delete 'void (struct xfrm_state **, int)' static inline
  |-ParmVarDecl 0x12e00e2a8 <col:39, col:59> col:59 used states 'struct xfrm_state **'
  |-ParmVarDecl 0x12e00e328 <col:67, col:71> col:71 used n 'int'
  `-CompoundStmt 0x12e026c10 <line:2:1, line:6:1>
    |-DeclStmt 0x12e0267f0 <line:3:2, col:7>
    | `-VarDecl 0x12e026788 <col:2, col:6> col:6 used i 'int'
    `-ForStmt 0x12e026bd8 <line:4:2, line:5:34>
      |-BinaryOperator 0x12e026848 <line:4:7, col:11> 'int' '='
      | |-DeclRefExpr 0x12e026808 <col:7> 'int' lvalue Var 0x12e026788 'i' 'int'
      | `-IntegerLiteral 0x12e026828 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x12e0268d8 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x12e0268a8 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12e026868 <col:14> 'int' lvalue Var 0x12e026788 'i' 'int'
      | `-ImplicitCastExpr 0x12e0268c0 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12e026888 <col:18> 'int' lvalue ParmVar 0x12e00e328 'n' 'int'
      |-UnaryOperator 0x12e026918 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x12e0268f8 <col:21> 'int' lvalue Var 0x12e026788 'i' 'int'
      `-CallExpr 0x12e026b98 <line:5:3, col:34> 'int'
        |-ImplicitCastExpr 0x12e026b80 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12e026a60 <col:3> 'int ()' Function 0x12e0269a8 'xfrm_state_delete' 'int ()'
        `-ImplicitCastExpr 0x12e026bc0 <col:21, col:33> 'struct xfrm_state *' <LValueToRValue>
          `-UnaryOperator 0x12e026b30 <col:21, col:33> 'struct xfrm_state *' lvalue prefix '*' cannot overflow
            `-ParenExpr 0x12e026b10 <col:22, col:33> 'struct xfrm_state **'
              `-BinaryOperator 0x12e026af0 <col:23, col:32> 'struct xfrm_state **' '+'
                |-ImplicitCastExpr 0x12e026ac0 <col:23> 'struct xfrm_state **' <LValueToRValue>
                | `-DeclRefExpr 0x12e026a80 <col:23> 'struct xfrm_state **' lvalue ParmVar 0x12e00e2a8 'states' 'struct xfrm_state **'
                `-ImplicitCastExpr 0x12e026ad8 <col:32> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x12e026aa0 <col:32> 'int' lvalue Var 0x12e026788 'i' 'int'
