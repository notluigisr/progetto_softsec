`-FunctionDecl 0x1559283a8  line:1:12 invalid set_registers 'int (int *, int, int, void *)' static
  |-ParmVarDecl 0x155928128 <col:26, col:37> col:37 invalid pegasus 'int *'
  |-ParmVarDecl 0x1559281a8 <col:46, col:52> col:52 invalid indx 'int'
  |-ParmVarDecl 0x155928228 <col:58, col:64> col:64 invalid size 'int'
  |-ParmVarDecl 0x1559282a8 <col:70, col:76> col:76 used data 'void *'
  `-CompoundStmt 0x155941f78 <line:2:1, line:12:1>
    |-DeclStmt 0x1559284f0 <line:3:2, col:9>
    | `-VarDecl 0x155928488 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x155941ad8 <line:5:2, line:7:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x155928508 <line:5:2> 'int' lvalue Var 0x155928488 'ret' 'int'
    | `-CallExpr 0x155941a70 <col:8, line:7:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x155928680 <line:5:8> 'int ()' Function 0x1559285c8 'usb_control_msg' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x1559286c0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->usb
    |   | `-RecoveryExpr 0x1559286a0 <col:24> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1559418a8 <col:38, col:69> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x155941800 <col:38> 'int ()' Function 0x155928730 'usb_sndctrlpipe' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x155941840 <col:54, col:63> '<dependent type>' contains-errors lvalue ->usb
    |   | | `-RecoveryExpr 0x155941820 <col:54> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x155941888 <col:68> 'int' 0
    |   |-RecoveryExpr 0x155941a30 <line:6:10> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x155941a50 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x155941908 <col:52> 'int' 0
    |   |-RecoveryExpr 0x155941928 <line:7:10> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x155941948 <col:16> 'void *' lvalue ParmVar 0x1559282a8 'data' 'void *'
    |   |-RecoveryExpr 0x155941968 <col:22> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x155941988 <col:28> 'int' 100
    |-IfStmt 0x155941f10 <line:8:2, line:10:26>
    | |-BinaryOperator 0x155941b50 <line:8:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x155941b38 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x155941af8 <col:6> 'int' lvalue Var 0x155928488 'ret' 'int'
    | | `-IntegerLiteral 0x155941b18 <col:12> 'int' 0
    | `-CallExpr 0x155941ec0 <line:9:3, line:10:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x155941c50 <line:9:3> 'int ()' Function 0x155941b98 'netif_dbg' 'int ()'
    |   |-RecoveryExpr 0x155941c70 <col:13> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x155941ea0 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x155941cc8 <col:27, col:36> '<dependent type>' contains-errors lvalue ->net
    |   | `-RecoveryExpr 0x155941ca8 <col:27> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x155941d50 <line:10:6> 'char[4]' lvalue "STR"
    |   |-PredefinedExpr 0x155941e18 <col:13> 'const char[14]' lvalue __func__
    |   | `-StringLiteral 0x155941df0 <col:13> 'const char[14]' lvalue "set_registers"
    |   `-DeclRefExpr 0x155941e30 <col:23> 'int' lvalue Var 0x155928488 'ret' 'int'
    `-ReturnStmt 0x155941f68 <line:11:2, col:9>
      `-ImplicitCastExpr 0x155941f50 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x155941f30 <col:9> 'int' lvalue Var 0x155928488 'ret' 'int'
