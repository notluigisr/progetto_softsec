`-FunctionDecl 0x12f128310  line:1:6 invalid gf_filter_is_supported_source '_Bool (int *, const char *, const char *)'
  |-ParmVarDecl 0x12f128128 <col:36, col:47> col:47 invalid filter 'int *'
  |-ParmVarDecl 0x12f1281a8 <col:55, col:67> col:67 used url 'const char *'
  |-ParmVarDecl 0x12f128228 <col:72, col:84> col:84 used parent_url 'const char *'
  `-CompoundStmt 0x12f142fe0 <line:2:1, line:7:1>
    |-DeclStmt 0x12f128480 <line:4:2, col:30>
    | `-VarDecl 0x12f1283e0 <col:2, col:22> col:7 used is_supported '_Bool' cinit
    |   `-RecoveryExpr 0x12f128460 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f142f28 <line:5:2, col:123> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f1285f0 <col:2> 'int ()' Function 0x12f128538 'gf_fs_load_source_dest_internal' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x12f128630 <col:34, col:42> '<dependent type>' contains-errors lvalue ->session
    | | `-RecoveryExpr 0x12f128610 <col:34> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x12f128678 <col:51> 'const char *' lvalue ParmVar 0x12f1281a8 'url' 'const char *'
    | |-RecoveryExpr 0x12f142e70 <col:56> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x12f1286b0 <col:62> 'const char *' lvalue ParmVar 0x12f128228 'parent_url' 'const char *'
    | |-UnaryOperator 0x12f142eb0 <col:74, col:75> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x12f142e90 <col:75> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12f142ec8 <col:78> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12f128718 <col:84> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12f142ee8 <col:92> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12f142f08 <col:101> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12f1287c0 <col:110, col:111> '_Bool *' contains-errors prefix '&' cannot overflow
    |   `-DeclRefExpr 0x12f128768 <col:111> '_Bool' contains-errors lvalue Var 0x12f1283e0 'is_supported' '_Bool'
    `-ReturnStmt 0x12f142fd0 <line:6:2, col:9>
      `-ImplicitCastExpr 0x12f142fb8 <col:9> '_Bool' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12f142f98 <col:9> '_Bool' contains-errors lvalue Var 0x12f1283e0 'is_supported' '_Bool'
