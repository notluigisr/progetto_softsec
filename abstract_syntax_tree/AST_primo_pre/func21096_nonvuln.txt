`-FunctionDecl 0x12f9281f8  line:1:7 invalid janet_array_pop 'int (int *)'
  |-ParmVarDecl 0x12f928128 <col:23, col:35> col:35 invalid array 'int *'
  `-CompoundStmt 0x12f928690 <col:42, line:7:1>
    `-IfStmt 0x12f928660 <line:2:5, line:6:5> has_else
      |-CXXDependentScopeMemberExpr 0x12f9282c8 <line:2:9, col:16> '<dependent type>' contains-errors lvalue ->count
      | `-RecoveryExpr 0x12f9282a8 <col:9> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x12f928440 <col:23, line:4:5>
      | `-ReturnStmt 0x12f928430 <line:3:9, col:42>
      |   `-ArraySubscriptExpr 0x12f928410 <col:16, col:42> '<dependent type>' contains-errors lvalue
      |     |-ImplicitCastExpr 0x12f9283f8 <col:16, col:23> '<dependent type>' contains-errors <LValueToRValue>
      |     | `-CXXDependentScopeMemberExpr 0x12f928330 <col:16, col:23> '<dependent type>' contains-errors lvalue ->data
      |     |   `-RecoveryExpr 0x12f928310 <col:16> '<dependent type>' contains-errors lvalue
      |     `-UnaryOperator 0x12f9283e0 <col:28, col:37> '<dependent type>' contains-errors prefix '--' cannot overflow
      |       `-CXXDependentScopeMemberExpr 0x12f928398 <col:30, col:37> '<dependent type>' contains-errors lvalue ->count
      |         `-RecoveryExpr 0x12f928378 <col:30> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12f928648 <line:4:12, line:6:5>
        `-ReturnStmt 0x12f928638 <line:5:9, col:31>
          `-CallExpr 0x12f928618 <col:16, col:31> 'int'
            `-ImplicitCastExpr 0x12f928600 <col:16> 'int (*)()' <FunctionToPointerDecay>
              `-DeclRefExpr 0x12f9285b0 <col:16> 'int ()' Function 0x12f9284f8 'janet_wrap_nil' 'int ()'
