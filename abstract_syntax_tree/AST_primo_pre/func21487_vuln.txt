`-FunctionDecl 0x14780ddf0  line:1:6 invalid vnc_tight_clear 'void (int *)'
  |-ParmVarDecl 0x14780dd28 <col:22, col:32> col:32 invalid vs 'int *'
  `-CompoundStmt 0x147827ad0 <line:2:1, line:19:1>
    |-DeclStmt 0x14780df20 <line:3:5, col:10>
    | `-VarDecl 0x14780deb8 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x147827688 <line:4:5, line:8:5>
    | |-BinaryOperator 0x14780df78 <line:4:10, col:12> 'int' '='
    | | |-DeclRefExpr 0x14780df38 <col:10> 'int' lvalue Var 0x14780deb8 'i' 'int'
    | | `-IntegerLiteral 0x14780df58 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14780e208 <col:15, col:44> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14780df98 <col:15> 'int' lvalue Var 0x14780deb8 'i' 'int'
    | | `-CallExpr 0x14780e1e0 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14780e110 <col:17> 'int ()' Function 0x14780e058 'ARRAY_SIZE' 'int ()'
    | |   `-CXXDependentScopeMemberExpr 0x14780e198 <col:28, col:38> '<dependent type>' contains-errors lvalue .stream
    | |     `-CXXDependentScopeMemberExpr 0x14780e150 <col:28, col:32> '<dependent type>' contains-errors lvalue ->tight
    | |       `-RecoveryExpr 0x14780e130 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14780e248 <col:47, col:48> 'int' postfix '++'
    | | `-DeclRefExpr 0x14780e228 <col:47> 'int' lvalue Var 0x14780deb8 'i' 'int'
    | `-CompoundStmt 0x147827670 <col:52, line:8:5>
    |   `-IfStmt 0x147827650 <line:5:9, line:7:9>
    |     |-CXXDependentScopeMemberExpr 0x14780e380 <line:5:13, col:33> '<dependent type>' contains-errors lvalue .opaque
    |     | `-ArraySubscriptExpr 0x14780e360 <col:13, col:31> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x14780e330 <col:13, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-CXXDependentScopeMemberExpr 0x14780e2c8 <col:13, col:23> '<dependent type>' contains-errors lvalue .stream
    |     |   |   `-CXXDependentScopeMemberExpr 0x14780e280 <col:13, col:17> '<dependent type>' contains-errors lvalue ->tight
    |     |   |     `-RecoveryExpr 0x14780e260 <col:13> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x14780e348 <col:30> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x14780e310 <col:30> 'int' lvalue Var 0x14780deb8 'i' 'int'
    |     `-CompoundStmt 0x147827638 <col:41, line:7:9>
    |       `-CallExpr 0x147827610 <line:6:13, col:44> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x1478274b8 <col:13> 'int ()' Function 0x147827400 'deflateEnd' 'int ()'
    |         `-UnaryOperator 0x1478275f8 <col:24, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           `-ArraySubscriptExpr 0x1478275d8 <col:25, col:43> '<dependent type>' contains-errors lvalue
    |             |-ImplicitCastExpr 0x1478275a8 <col:25, col:35> '<dependent type>' contains-errors <LValueToRValue>
    |             | `-CXXDependentScopeMemberExpr 0x147827540 <col:25, col:35> '<dependent type>' contains-errors lvalue .stream
    |             |   `-CXXDependentScopeMemberExpr 0x1478274f8 <col:25, col:29> '<dependent type>' contains-errors lvalue ->tight
    |             |     `-RecoveryExpr 0x1478274d8 <col:25> '<dependent type>' contains-errors lvalue
    |             `-ImplicitCastExpr 0x1478275c0 <col:42> 'int' <LValueToRValue>
    |               `-DeclRefExpr 0x147827588 <col:42> 'int' lvalue Var 0x14780deb8 'i' 'int'
    |-CallExpr 0x147827888 <line:10:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1478277a0 <col:5> 'int ()' Function 0x1478276e8 'buffer_free' 'int ()'
    | `-UnaryOperator 0x147827870 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x147827828 <col:18, col:28> '<dependent type>' contains-errors lvalue .tight
    |     `-CXXDependentScopeMemberExpr 0x1478277e0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->tight
    |       `-RecoveryExpr 0x1478277c0 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x147827998 <line:11:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1478278b0 <col:5> 'int ()' Function 0x1478276e8 'buffer_free' 'int ()'
    | `-UnaryOperator 0x147827980 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x147827938 <col:18, col:28> '<dependent type>' contains-errors lvalue .zlib
    |     `-CXXDependentScopeMemberExpr 0x1478278f0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->tight
    |       `-RecoveryExpr 0x1478278d0 <col:18> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x147827aa8 <line:12:5, col:36> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1478279c0 <col:5> 'int ()' Function 0x1478276e8 'buffer_free' 'int ()'
      `-UnaryOperator 0x147827a90 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-CXXDependentScopeMemberExpr 0x147827a48 <col:18, col:28> '<dependent type>' contains-errors lvalue .gradient
          `-CXXDependentScopeMemberExpr 0x147827a00 <col:18, col:22> '<dependent type>' contains-errors lvalue ->tight
            `-RecoveryExpr 0x1478279e0 <col:18> '<dependent type>' contains-errors lvalue
