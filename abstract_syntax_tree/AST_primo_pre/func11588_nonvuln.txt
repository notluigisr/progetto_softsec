`-FunctionDecl 0x144008400  line:1:13 invalid set_iommu_domain 'void (struct intel_iommu *, int, struct dmar_domain *)' static
  |-ParmVarDecl 0x143010a48 <col:30, col:50> col:50 used iommu 'struct intel_iommu *'
  |-ParmVarDecl 0x143010ae0 <col:57, col:61> col:61 invalid did 'int'
  |-ParmVarDecl 0x1440082c8 <line:2:9, col:29> col:29 used domain 'struct dmar_domain *'
  `-CompoundStmt 0x14302b890 <line:3:1, line:17:1>
    |-DeclStmt 0x144008610 <line:4:2, col:30>
    | `-VarDecl 0x1440085a8 <col:2, col:23> col:23 used domains 'struct dmar_domain **'
    |-DeclStmt 0x144008708 <line:5:2, col:20>
    | `-VarDecl 0x144008640 <col:2, col:19> col:6 used idx 'int' cinit
    |   `-BinaryOperator 0x1440086e8 <col:12, col:19> '<dependent type>' contains-errors '>>'
    |     |-RecoveryExpr 0x1440086a8 <col:12> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1440086c8 <col:19> 'int' 8
    |-IfStmt 0x144008e50 <line:7:2, line:10:2>
    | |-UnaryOperator 0x144008808 <line:7:6, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1440087f0 <col:7, col:25> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-ArraySubscriptExpr 0x1440087d0 <col:7, col:25> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x1440087a0 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x144008758 <col:7, col:14> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x144008720 <col:7> 'struct intel_iommu *' lvalue ParmVar 0x143010a48 'iommu' 'struct intel_iommu *'
    | |     `-ImplicitCastExpr 0x1440087b8 <col:22> 'int' contains-errors <LValueToRValue>
    | |       `-DeclRefExpr 0x144008780 <col:22> 'int' contains-errors lvalue Var 0x144008640 'idx' 'int'
    | `-CompoundStmt 0x144008e30 <col:28, line:10:2>
    |   |-RecoveryExpr 0x144008a00 <line:8:3, col:50> '<dependent type>' contains-errors lvalue
    |   | |-UnaryExprOrTypeTraitExpr 0x144008960 <col:3, col:10> 'unsigned long' contains-errors sizeof
    |   | | `-RecoveryExpr 0x144008940 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1440089e0 <col:17, col:50> 'unsigned long' '*'
    |   |   |-ImplicitCastExpr 0x1440089c8 <col:17> 'unsigned long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x144008858 <col:17> 'int' 256
    |   |   `-UnaryExprOrTypeTraitExpr 0x1440089a8 <col:23, col:50> 'unsigned long' sizeof 'struct dmar_domain *'
    |   `-BinaryOperator 0x144008e10 <line:9:3, col:49> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x144008d80 <col:3, col:21> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x144008d50 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-RecoveryExpr 0x144008a68 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x144008a30 <col:3> 'struct intel_iommu *' lvalue ParmVar 0x143010a48 'iommu' 'struct intel_iommu *'
    |     | `-ImplicitCastExpr 0x144008d68 <col:18> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x144008a90 <col:18> 'int' contains-errors lvalue Var 0x144008640 'idx' 'int'
    |     `-CallExpr 0x144008de0 <col:25, col:49> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x144008c60 <col:25> 'int ()' Function 0x144008ba8 'kzalloc' 'int ()'
    |       |-RecoveryExpr 0x144008da0 <col:33> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x144008dc0 <col:39> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x144008f60 <line:12:2, col:30> 'struct dmar_domain **' contains-errors '='
    | |-DeclRefExpr 0x144008e70 <col:2> 'struct dmar_domain **' lvalue Var 0x1440085a8 'domains' 'struct dmar_domain **'
    | `-ArraySubscriptExpr 0x144008f40 <col:12, col:30> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x144008f10 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x144008ec8 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x144008e90 <col:12> 'struct intel_iommu *' lvalue ParmVar 0x143010a48 'iommu' 'struct intel_iommu *'
    |   `-ImplicitCastExpr 0x144008f28 <col:27> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x144008ef0 <col:27> 'int' contains-errors lvalue Var 0x144008640 'idx' 'int'
    `-IfStmt 0x14302b860 <line:13:2, line:16:25> has_else
      |-CallExpr 0x144009118 <line:13:6, col:22> 'int'
      | |-ImplicitCastExpr 0x144009100 <col:6> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x144009060 <col:6> 'int ()' Function 0x144008fa8 'WARN_ON' 'int ()'
      | `-UnaryOperator 0x1440090b8 <col:14, col:15> 'int' prefix '!' cannot overflow
      |   `-ImplicitCastExpr 0x1440090a0 <col:15> 'struct dmar_domain **' <LValueToRValue>
      |     `-DeclRefExpr 0x144009080 <col:15> 'struct dmar_domain **' lvalue Var 0x1440085a8 'domains' 'struct dmar_domain **'
      |-ReturnStmt 0x144009140 <line:14:3>
      `-BinaryOperator 0x14302b840 <line:16:3, col:25> '<dependent type>' contains-errors '='
        |-ArraySubscriptExpr 0x14302b800 <col:3, col:21> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x1440091d0 <col:3> 'struct dmar_domain **' <LValueToRValue>
        | | `-DeclRefExpr 0x144009150 <col:3> 'struct dmar_domain **' lvalue Var 0x1440085a8 'domains' 'struct dmar_domain **'
        | `-BinaryOperator 0x1440091b0 <col:11, col:17> '<dependent type>' contains-errors '&'
        |   |-RecoveryExpr 0x144009170 <col:11> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x144009190 <col:17> 'int' 255
        `-DeclRefExpr 0x14302b820 <col:25> 'struct dmar_domain *' lvalue ParmVar 0x1440082c8 'domain' 'struct dmar_domain *'
