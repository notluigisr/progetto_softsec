`-FunctionDecl 0x144928318  line:1:15 invalid GC_debug_generic_malloc 'int *(int, int, int)'
  |-ParmVarDecl 0x1449280f0 <col:39, col:46> col:46 invalid lb 'int'
  |-ParmVarDecl 0x144928170 <col:50, col:54> col:54 used knd 'int'
  |-ParmVarDecl 0x1449281f0 <col:59> col:59 GC_EXTRA_PARAMS 'int'
  `-CompoundStmt 0x144942150 <line:2:1, line:16:1>
    |-DeclStmt 0x1449286e8 <line:3:5, col:61>
    | `-VarDecl 0x1449283f0 <col:5, col:60> col:12 used result 'void *' cinit
    |   `-CallExpr 0x1449286b8 <col:21, col:60> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1449285b0 <col:21> 'int ()' Function 0x1449284f8 'GC_generic_malloc' 'int ()'
    |     |-BinaryOperator 0x144928698 <col:39, col:44> '<dependent type>' contains-errors '+'
    |     | |-RecoveryExpr 0x1449285d0 <col:39> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x144928678 <col:44> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x144928628 <col:57> 'int' lvalue ParmVar 0x144928170 'knd' 'int'
    |-IfStmt 0x144941ba8 <line:5:5, line:10:5>
    | |-BinaryOperator 0x144928778 <line:5:9, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x144928758 <col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x144928718 <col:17> 'void *' contains-errors lvalue Var 0x1449283f0 'result' 'void *'
    | `-CompoundStmt 0x144941b88 <col:25, line:10:5>
    |   |-CallExpr 0x144941af8 <line:6:9, line:8:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1449418b8 <line:6:9> 'int ()' Function 0x144941800 'GC_err_printf' 'int ()'
    |   | |-StringLiteral 0x144941920 <line:7:17> 'char[4]' lvalue "STR"
    |   | |-CStyleCastExpr 0x144941a90 <line:8:17, col:32> 'unsigned long' contains-errors <Dependent>
    |   | | `-RecoveryExpr 0x144941940 <col:32> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x1449419a0 <col:36> 'int' lvalue ParmVar 0x144928170 'knd' 'int'
    |   | |-RecoveryExpr 0x144941ab8 <col:41> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x144941ad8 <col:44> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x144941b78 <line:9:9, col:16>
    |     `-RecoveryExpr 0x144941b58 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144941de0 <line:11:5, line:13:5>
    | |-UnaryOperator 0x144941c48 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x144941c30 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x144941c10 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x144941dc8 <col:32, line:13:5>
    |   `-CallExpr 0x144941da8 <line:12:9, col:28> 'int'
    |     `-ImplicitCastExpr 0x144941d90 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x144941d40 <col:9> 'int ()' Function 0x144941c88 'GC_start_debugging' 'int ()'
    `-CallExpr 0x144941f88 <line:14:5, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x144941ee0 <col:5> 'int ()' Function 0x144941e28 'ADD_CALL_CHAIN' 'int ()'
      |-DeclRefExpr 0x144941f00 <col:20> 'void *' contains-errors lvalue Var 0x1449283f0 'result' 'void *'
      `-RecoveryExpr 0x144941f68 <col:28> '<dependent type>' contains-errors lvalue
