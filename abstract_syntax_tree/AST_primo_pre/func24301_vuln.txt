`-FunctionDecl 0x15b1284f8  line:1:1 hufUncompress 'int (const char *, int, unsigned short *, int)'
  |-ParmVarDecl 0x15b128170 <col:16, col:38> col:27 used compressed 'const char *'
  |-ParmVarDecl 0x15b1281f0 <line:2:9, col:13> col:13 used nCompressed 'int'
  |-ParmVarDecl 0x15b128320 <line:3:9, col:28> col:24 used raw 'unsigned short *'
  |-ParmVarDecl 0x15b1283a0 <line:4:9, col:13> col:13 used nRaw 'int'
  `-CompoundStmt 0x15b145ce8 <line:5:1, line:64:1>
    |-IfStmt 0x15b140b98 <line:6:5, line:12:5>
    | |-BinaryOperator 0x15b128660 <line:6:9, col:24> 'int' '=='
    | | |-ImplicitCastExpr 0x15b128648 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b128608 <col:9> 'int' lvalue ParmVar 0x15b1281f0 'nCompressed' 'int'
    | | `-IntegerLiteral 0x15b128628 <col:24> 'int' 0
    | `-CompoundStmt 0x15b140b78 <line:7:5, line:12:5>
    |   |-IfStmt 0x15b140b48 <line:8:2, line:9:20>
    |   | |-BinaryOperator 0x15b1286d8 <line:8:6, col:14> 'int' '!='
    |   | | |-ImplicitCastExpr 0x15b1286c0 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15b128680 <col:6> 'int' lvalue ParmVar 0x15b1283a0 'nRaw' 'int'
    |   | | `-IntegerLiteral 0x15b1286a0 <col:14> 'int' 0
    |   | `-CallExpr 0x15b140b28 <line:9:6, col:20> 'int'
    |   |   `-ImplicitCastExpr 0x15b140b10 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x15b140ab8 <col:6> 'int ()' Function 0x15b140a00 'notEnoughData' 'int ()'
    |   `-ReturnStmt 0x15b140b68 <line:11:2>
    |-DeclStmt 0x15b140db0 <line:14:5, col:35>
    | `-VarDecl 0x15b140bd0 <col:5, col:34> col:9 used im 'int' cinit
    |   `-CallExpr 0x15b140d70 <col:14, col:34> 'int'
    |     |-ImplicitCastExpr 0x15b140d58 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b140d18 <col:14> 'int ()' Function 0x15b140c60 'readUInt' 'int ()'
    |     `-ImplicitCastExpr 0x15b140d98 <col:24> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x15b140d38 <col:24> 'const char *' lvalue ParmVar 0x15b128170 'compressed' 'const char *'
    |-DeclStmt 0x15b140f20 <line:15:5, col:39>
    | `-VarDecl 0x15b140de0 <col:5, col:38> col:9 used iM 'int' cinit
    |   `-CallExpr 0x15b140ef8 <col:14, col:38> 'int'
    |     |-ImplicitCastExpr 0x15b140ee0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b140e48 <col:14> 'int ()' Function 0x15b140c60 'readUInt' 'int ()'
    |     `-BinaryOperator 0x15b140ec0 <col:24, col:37> 'const char *' '+'
    |       |-ImplicitCastExpr 0x15b140ea8 <col:24> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15b140e68 <col:24> 'const char *' lvalue ParmVar 0x15b128170 'compressed' 'const char *'
    |       `-IntegerLiteral 0x15b140e88 <col:37> 'int' 4
    |-DeclStmt 0x15b141090 <line:17:5, col:43>
    | `-VarDecl 0x15b140f50 <col:5, col:42> col:9 used nBits 'int' cinit
    |   `-CallExpr 0x15b141068 <col:17, col:42> 'int'
    |     |-ImplicitCastExpr 0x15b141050 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15b140fb8 <col:17> 'int ()' Function 0x15b140c60 'readUInt' 'int ()'
    |     `-BinaryOperator 0x15b141030 <col:27, col:40> 'const char *' '+'
    |       |-ImplicitCastExpr 0x15b141018 <col:27> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15b140fd8 <col:27> 'const char *' lvalue ParmVar 0x15b128170 'compressed' 'const char *'
    |       `-IntegerLiteral 0x15b140ff8 <col:40> 'int' 12
    |-IfStmt 0x15b141568 <line:19:5, line:20:19>
    | |-BinaryOperator 0x15b141410 <line:19:9, col:56> 'int' contains-errors '||'
    | | |-BinaryOperator 0x15b1413b0 <col:9, col:45> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x15b141358 <col:9, col:25> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x15b1412f8 <col:9, col:14> 'int' '<'
    | | | | | |-ImplicitCastExpr 0x15b1412e0 <col:9> 'int' <LValueToRValue>
    | | | | | | `-DeclRefExpr 0x15b1410a8 <col:9> 'int' lvalue Var 0x15b140bd0 'im' 'int'
    | | | | | `-IntegerLiteral 0x15b1410c8 <col:14> 'int' 0
    | | | | `-BinaryOperator 0x15b141338 <col:19, col:25> 'int' contains-errors '>='
    | | | |   |-DeclRefExpr 0x15b141120 <col:19> 'int' lvalue Var 0x15b140bd0 'im' 'int'
    | | | |   `-RecoveryExpr 0x15b141318 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x15b141390 <col:40, col:45> 'int' '<'
    | | |   |-ImplicitCastExpr 0x15b141378 <col:40> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x15b141198 <col:40> 'int' lvalue Var 0x15b140de0 'iM' 'int'
    | | |   `-IntegerLiteral 0x15b1411b8 <col:45> 'int' 0
    | | `-BinaryOperator 0x15b1413f0 <col:50, col:56> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x15b141230 <col:50> 'int' lvalue Var 0x15b140de0 'iM' 'int'
    | |   `-RecoveryExpr 0x15b1413d0 <col:56> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x15b141548 <line:20:2, col:19> 'int'
    |   `-ImplicitCastExpr 0x15b141530 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x15b141510 <col:2> 'int ()' Function 0x15b141458 'invalidTableSize' 'int ()'
    |-DeclStmt 0x15b141680 <line:22:5, col:38>
    | `-VarDecl 0x15b1415a0 <col:5, col:36> col:17 used ptr 'const char *' cinit
    |   `-BinaryOperator 0x15b141660 <col:23, col:36> 'const char *' '+'
    |     |-ImplicitCastExpr 0x15b141648 <col:23> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15b141608 <col:23> 'const char *' lvalue ParmVar 0x15b128170 'compressed' 'const char *'
    |     `-IntegerLiteral 0x15b141628 <col:36> 'int' 20
    `-IfStmt 0x15b145cb8 <line:30:5, line:63:5> has_else
      |-RecoveryExpr 0x15b1416b0 <line:30:9> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x15b1417d8 <line:31:5, line:34:5>
      `-CompoundStmt 0x15b145ca8 <line:36:5, line:63:5>
