`-FunctionDecl 0x14b80e068  line:1:19 invalid _setEdgePixel 'int (const int, unsigned int, unsigned int, int, const int)' static inline
  |-ParmVarDecl 0x14b80dcf0 <col:33, col:50> col:50 invalid src 'const int'
  |-ParmVarDecl 0x14b80dd70 <col:55, col:68> col:68 used x 'unsigned int'
  |-ParmVarDecl 0x14b80ddf0 <col:71, col:84> col:84 used y 'unsigned int'
  |-ParmVarDecl 0x14b80de70 <col:87, col:95> col:95 invalid coverage 'int'
  |-ParmVarDecl 0x14b80def0 <col:105, col:115> col:115 used bgColor 'const int'
  `-CompoundStmt 0x14b827c00 <line:2:1, line:7:1>
    |-DeclStmt 0x14b80e3c0 <line:3:2, col:37>
    | `-VarDecl 0x14b80e150 <col:2, col:16> col:16 invalid f_127 'const int'
    |-DeclStmt 0x14b8275b0 <line:4:2, col:37>
    | `-VarDecl 0x14b827400 <col:2, col:36> col:15 used c 'int' register cinit
    |   `-ArraySubscriptExpr 0x14b827590 <col:19, col:36> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x14b827560 <col:19, col:33> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-ArraySubscriptExpr 0x14b827520 <col:19, col:33> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x14b8274f0 <col:19, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-CXXDependentScopeMemberExpr 0x14b827488 <col:19, col:24> '<dependent type>' contains-errors lvalue ->tpixels
    |     |   |   `-RecoveryExpr 0x14b827468 <col:19> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x14b827508 <col:32> 'unsigned int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x14b8274d0 <col:32> 'unsigned int' lvalue ParmVar 0x14b80ddf0 'y' 'unsigned int'
    |     `-ImplicitCastExpr 0x14b827578 <col:35> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x14b827540 <col:35> 'unsigned int' lvalue ParmVar 0x14b80dd70 'x' 'unsigned int'
    |-BinaryOperator 0x14b827a18 <line:5:2, col:71> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b8275c8 <col:2> 'int' contains-errors lvalue Var 0x14b827400 'c' 'int'
    | `-BinaryOperator 0x14b8279f8 <col:6, col:71> 'int' contains-errors '|'
    |   |-ImplicitCastExpr 0x14b8279e0 <col:6> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x14b8275e8 <col:6> 'int' contains-errors lvalue Var 0x14b827400 'c' 'int'
    |   `-ParenExpr 0x14b8279c0 <col:10, col:71> 'int' contains-errors
    |     `-BinaryOperator 0x14b8279a0 <col:11, col:69> 'int' contains-errors '<<'
    |       |-ParenExpr 0x14b827960 <col:11, col:64> 'int' contains-errors
    |       | `-CStyleCastExpr 0x14b827938 <col:13, col:63> 'int' contains-errors <Dependent>
    |       |   `-ParenExpr 0x14b827918 <col:19, col:63> '<dependent type>' contains-errors
    |       |     `-BinaryOperator 0x14b8278c0 <col:20, col:58> '<dependent type>' contains-errors '+'
    |       |       |-CallExpr 0x14b827878 <col:20, col:54> '<dependent type>' contains-errors
    |       |       | |-DeclRefExpr 0x14b8276e8 <col:20> 'int ()' Function 0x14b827630 'gd_fxtof' 'int ()'
    |       |       | `-CallExpr 0x14b827848 <col:29, col:53> '<dependent type>' contains-errors
    |       |       |   |-DeclRefExpr 0x14b8277e8 <col:29> 'int ()' Function 0x14b827730 'gd_mulfx' 'int ()'
    |       |       |   |-RecoveryExpr 0x14b827808 <col:38> '<dependent type>' contains-errors lvalue
    |       |       |   `-RecoveryExpr 0x14b827828 <col:48> '<dependent type>' contains-errors lvalue
    |       |       `-FloatingLiteral 0x14b8278a0 <col:58> 'float' 5.050000e+01
    |       `-IntegerLiteral 0x14b827980 <col:69> 'int' 24
    `-ReturnStmt 0x14b827bf0 <line:6:2, col:32>
      `-CallExpr 0x14b827b90 <col:9, col:32> 'int' contains-errors
        |-ImplicitCastExpr 0x14b827b78 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x14b827b18 <col:9> 'int ()' Function 0x14b827a60 '_color_blend' 'int ()'
        |-ImplicitCastExpr 0x14b827bc0 <col:22> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x14b827b38 <col:22> 'const int' lvalue ParmVar 0x14b80def0 'bgColor' 'const int'
        `-ImplicitCastExpr 0x14b827bd8 <col:31> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x14b827b58 <col:31> 'int' contains-errors lvalue Var 0x14b827400 'c' 'int'
