`-FunctionDecl 0x128140b40  line:1:13 keyring_describe 'void (const struct key *, struct seq_file *)' static
  |-ParmVarDecl 0x128128648 <col:30, col:48> col:48 used keyring 'const struct key *'
  |-ParmVarDecl 0x128140a28 <col:57, col:74> col:74 used m 'struct seq_file *'
  `-CompoundStmt 0x1281415d8 <line:2:1, line:14:1>
    |-IfStmt 0x128140fe8 <line:3:2, line:6:20> has_else
    | |-RecoveryExpr 0x128140c78 <line:3:6, col:15> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128140c40 <col:6> 'const struct key *' lvalue ParmVar 0x128128648 'keyring' 'const struct key *'
    | |-CallExpr 0x128140e70 <line:4:3, col:35> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128140dd0 <col:3> 'int ()' Function 0x128140d18 'seq_puts' 'int ()'
    | | |-DeclRefExpr 0x128140df0 <col:12> 'struct seq_file *' lvalue ParmVar 0x128140a28 'm' 'struct seq_file *'
    | | `-RecoveryExpr 0x128140e48 <col:15, col:24> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128140e10 <col:15> 'const struct key *' lvalue ParmVar 0x128128648 'keyring' 'const struct key *'
    | `-CallExpr 0x128140f88 <line:6:3, col:20> 'int'
    |   |-ImplicitCastExpr 0x128140f70 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128140ea0 <col:3> 'int ()' Function 0x128140d18 'seq_puts' 'int ()'
    |   |-ImplicitCastExpr 0x128140fb8 <col:12> 'struct seq_file *' <LValueToRValue>
    |   | `-DeclRefExpr 0x128140ec0 <col:12> 'struct seq_file *' lvalue ParmVar 0x128140a28 'm' 'struct seq_file *'
    |   `-ImplicitCastExpr 0x128140fd0 <col:15> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x128140f20 <col:15> 'char[4]' lvalue "STR"
    `-IfStmt 0x1281415b8 <line:8:2, line:13:2>
      |-CallExpr 0x128141150 <line:8:6, col:33> 'int'
      | |-ImplicitCastExpr 0x128141138 <col:6> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x1281410f8 <col:6> 'int ()' Function 0x128141040 'key_is_instantiated' 'int ()'
      | `-ImplicitCastExpr 0x128141178 <col:26> 'const struct key *' <LValueToRValue>
      |   `-DeclRefExpr 0x128141118 <col:26> 'const struct key *' lvalue ParmVar 0x128128648 'keyring' 'const struct key *'
      `-CompoundStmt 0x1281415a0 <col:36, line:13:2>
        `-IfStmt 0x128141570 <line:9:3, line:12:21> has_else
          |-BinaryOperator 0x128141258 <line:9:7, col:42> 'int' contains-errors '!='
          | |-CXXDependentScopeMemberExpr 0x1281411f0 <col:7, col:21> '<dependent type>' contains-errors lvalue .nr_leaves_on_tree
          | | `-RecoveryExpr 0x1281411c8 <col:7, col:16> '<dependent type>' contains-errors lvalue
          | |   `-DeclRefExpr 0x128141190 <col:7> 'const struct key *' lvalue ParmVar 0x128128648 'keyring' 'const struct key *'
          | `-IntegerLiteral 0x128141238 <col:42> 'int' 0
          |-CallExpr 0x128141460 <line:10:4, col:56> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x128141358 <col:4> 'int ()' Function 0x1281412a0 'seq_printf' 'int ()'
          | |-DeclRefExpr 0x128141378 <col:15> 'struct seq_file *' lvalue ParmVar 0x128140a28 'm' 'struct seq_file *'
          | |-StringLiteral 0x128141398 <col:18> 'char[4]' lvalue "STR"
          | `-CXXDependentScopeMemberExpr 0x128141418 <col:25, col:39> '<dependent type>' contains-errors lvalue .nr_leaves_on_tree
          |   `-RecoveryExpr 0x1281413f0 <col:25, col:34> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x1281413b8 <col:25> 'const struct key *' lvalue ParmVar 0x128128648 'keyring' 'const struct key *'
          `-CallExpr 0x128141510 <line:12:4, col:21> 'int'
            |-ImplicitCastExpr 0x1281414f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x128141498 <col:4> 'int ()' Function 0x128140d18 'seq_puts' 'int ()'
            |-ImplicitCastExpr 0x128141540 <col:13> 'struct seq_file *' <LValueToRValue>
            | `-DeclRefExpr 0x1281414b8 <col:13> 'struct seq_file *' lvalue ParmVar 0x128140a28 'm' 'struct seq_file *'
            `-ImplicitCastExpr 0x128141558 <col:16> 'char *' <ArrayToPointerDecay>
              `-StringLiteral 0x1281414d8 <col:16> 'char[4]' lvalue "STR"
