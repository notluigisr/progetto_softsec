`-FunctionDecl 0x125928438  line:1:1 invalid code_exist_check 'int (int, int *, int *, int, int *)'
  |-ParmVarDecl 0x1259280f0 <col:18, col:32> col:32 invalid c 'int'
  |-ParmVarDecl 0x1259281a8 <col:35, col:42> col:42 invalid from 'int *'
  |-ParmVarDecl 0x125928228 <col:48, col:55> col:55 invalid end 'int *'
  |-ParmVarDecl 0x1259282a8 <col:60, col:64> col:64 used ignore_escaped 'int'
  |-ParmVarDecl 0x125928328 <line:2:18, col:27> col:27 invalid env 'int *'
  `-CompoundStmt 0x125941e38 <line:3:1, line:21:1>
    |-DeclStmt 0x125928588 <line:4:3, col:13>
    | `-VarDecl 0x125928520 <col:3, col:7> col:7 used in_esc 'int'
    |-BinaryOperator 0x125928618 <line:9:3, col:12> 'int' '='
    | |-DeclRefExpr 0x1259285d8 <col:3> 'int' lvalue Var 0x125928520 'in_esc' 'int'
    | `-IntegerLiteral 0x1259285f8 <col:12> 'int' 0
    |-WhileStmt 0x125941de8 <line:10:3, line:19:3>
    | |-UnaryOperator 0x1259286b8 <line:10:10, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1259286a0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x125928680 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125941dd0 <col:18, line:19:3>
    |   `-IfStmt 0x125941da0 <line:11:5, line:18:5> has_else
    |     |-BinaryOperator 0x125928740 <line:11:9, col:27> 'int' '&&'
    |     | |-ImplicitCastExpr 0x125928710 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1259286d0 <col:9> 'int' lvalue ParmVar 0x1259282a8 'ignore_escaped' 'int'
    |     | `-ImplicitCastExpr 0x125928728 <col:27> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1259286f0 <col:27> 'int' lvalue Var 0x125928520 'in_esc' 'int'
    |     |-CompoundStmt 0x1259287c0 <col:35, line:13:5>
    |     | `-BinaryOperator 0x1259287a0 <line:12:7, col:16> 'int' '='
    |     |   |-DeclRefExpr 0x125928760 <col:7> 'int' lvalue Var 0x125928520 'in_esc' 'int'
    |     |   `-IntegerLiteral 0x125928780 <col:16> 'int' 0
    |     `-CompoundStmt 0x125941d78 <line:14:10, line:18:5>
    |       |-CallExpr 0x1259419e0 <line:15:7, col:20> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x125941960 <col:7> 'int ()' Function 0x1259418a8 'PFETCH_S' 'int ()'
    |       | `-RecoveryExpr 0x1259419c0 <col:16> '<dependent type>' contains-errors lvalue
    |       |-IfStmt 0x125941ad0 <line:16:7, col:29>
    |       | |-BinaryOperator 0x125941a80 <col:11, col:19> 'int' contains-errors '=='
    |       | | |-RecoveryExpr 0x125941a60 <col:11> '<dependent type>' contains-errors lvalue
    |       | | `-RecoveryExpr 0x125941a20 <col:19> '<dependent type>' contains-errors lvalue
    |       | `-ReturnStmt 0x125941ac0 <col:22, col:29>
    |       |   `-IntegerLiteral 0x125941aa0 <col:29> 'int' 1
    |       `-IfStmt 0x125941d58 <line:17:7, col:49>
    |         |-BinaryOperator 0x125941cd8 <col:11, col:37> 'int' contains-errors '=='
    |         | |-RecoveryExpr 0x125941cb8 <col:11> '<dependent type>' contains-errors lvalue
    |         | `-CallExpr 0x125941c70 <col:19, col:37> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x125941be8 <col:19> 'int ()' Function 0x125941b30 'MC_ESC' 'int ()'
    |         |   `-CXXDependentScopeMemberExpr 0x125941c28 <col:26, col:31> '<dependent type>' contains-errors lvalue ->syntax
    |         |     `-RecoveryExpr 0x125941c08 <col:26> '<dependent type>' contains-errors lvalue
    |         `-BinaryOperator 0x125941d38 <col:40, col:49> 'int' '='
    |           |-DeclRefExpr 0x125941cf8 <col:40> 'int' lvalue Var 0x125928520 'in_esc' 'int'
    |           `-IntegerLiteral 0x125941d18 <col:49> 'int' 1
    `-ReturnStmt 0x125941e28 <line:20:3, col:10>
      `-IntegerLiteral 0x125941e08 <col:10> 'int' 0
