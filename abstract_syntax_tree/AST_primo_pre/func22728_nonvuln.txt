`-FunctionDecl 0x138011c58  line:1:1 invalid XML_SetBillionLaughsAttackProtectionMaximumAmplification 'int (int, float)'
  |-ParmVarDecl 0x138011af0 <line:2:5, col:16> col:16 referenced invalid parser 'int'
  |-ParmVarDecl 0x138011b70 <col:24, col:30> col:30 used maximumAmplificationFactor 'float'
  `-CompoundStmt 0x13880b318 <col:58, line:10:1>
    |-IfStmt 0x138012158 <line:3:3, line:7:3>
    | |-RecoveryExpr 0x1380120d8 <line:3:7, line:5:44> '_Bool' contains-errors
    | `-CompoundStmt 0x138012140 <col:47, line:7:3>
    |   `-ReturnStmt 0x138012130 <line:6:5, col:12>
    |     `-RecoveryExpr 0x138012110 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13880b2b0 <line:8:3, col:53> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13880b248 <col:3, col:24> '<dependent type>' contains-errors lvalue .maximumAmplificationFactor
    | | `-CXXDependentScopeMemberExpr 0x13880b200 <col:3, col:11> '<dependent type>' contains-errors lvalue ->m_accounting
    | |   `-RecoveryExpr 0x138012198 <col:3> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x138012178 <col:3> 'int' lvalue ParmVar 0x138011af0 'parser' 'int'
    | `-DeclRefExpr 0x13880b290 <col:53> 'float' lvalue ParmVar 0x138011b70 'maximumAmplificationFactor' 'float'
    `-ReturnStmt 0x13880b308 <line:9:3, col:10>
      `-RecoveryExpr 0x13880b2e8 <col:10> '<dependent type>' contains-errors lvalue
