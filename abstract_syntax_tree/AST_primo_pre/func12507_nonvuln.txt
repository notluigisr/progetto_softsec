`-FunctionDecl 0x139141888  line:1:6 invalid set_part_state 'int (int *, int *, enum partition_state)'
  |-ParmVarDecl 0x139128128 <col:21, col:33> col:33 invalid alter_info 'int *'
  |-ParmVarDecl 0x1391281a8 <col:45, col:61> col:61 invalid tab_part_info 'int *'
  |-ParmVarDecl 0x139128748 <line:2:21, col:42> col:42 invalid part_state 'enum partition_state'
  `-CompoundStmt 0x139143220 <line:3:1, line:39:1>
    |-DeclStmt 0x1391419e8 <line:4:3, col:21>
    | `-VarDecl 0x139141960 <col:3, col:20> col:8 used part_count 'int' cinit
    |   `-IntegerLiteral 0x1391419c8 <col:20> 'int' 0
    |-DeclStmt 0x139141aa0 <line:5:3, col:26>
    | `-VarDecl 0x139141a18 <col:3, col:25> col:8 used num_parts_found 'int' cinit
    |   `-IntegerLiteral 0x139141a80 <col:25> 'int' 0
    |-DoStmt 0x139142438 <line:8:3, line:23:51>
    | |-CompoundStmt 0x139142360 <line:9:3, line:23:3>
    | | `-IfStmt 0x139142330 <line:11:5, line:22:7> has_else
    | |   |-RecoveryExpr 0x139141fd8 <line:11:9, line:13:39> '_Bool' contains-errors
    | |   |-CompoundStmt 0x139142308 <line:14:5, line:20:5>
    | |   | |-UnaryOperator 0x139142018 <line:16:7, col:22> 'int' postfix '++'
    | |   | | `-DeclRefExpr 0x139141ff8 <col:7> 'int' lvalue Var 0x139141a18 'num_parts_found' 'int'
    | |   | `-CallExpr 0x1391422d0 <line:18:7, line:19:64> '<dependent type>' contains-errors
    | |   |   |-DeclRefExpr 0x139142130 <line:18:7> 'int ()' Function 0x139142078 'DBUG_PRINT' 'int ()'
    | |   |   |-StringLiteral 0x139142190 <col:18> 'char[4]' lvalue "STR"
    | |   |   |-RecoveryExpr 0x1391421b0 <line:19:27> '<dependent type>' contains-errors lvalue
    | |   |   `-CXXDependentScopeMemberExpr 0x139142288 <col:39, col:50> '<dependent type>' contains-errors lvalue ->partition_name
    | |   |     `-RecoveryExpr 0x139142268 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-NullStmt 0x139142328 <line:22:7>
    | `-BinaryOperator 0x139142418 <line:23:12, col:42> 'int' contains-errors '<'
    |   |-UnaryOperator 0x139142398 <col:12, col:14> 'int' prefix '++'
    |   | `-DeclRefExpr 0x139142378 <col:14> 'int' lvalue Var 0x139141960 'part_count' 'int'
    |   `-CXXDependentScopeMemberExpr 0x1391423d0 <col:27, col:42> '<dependent type>' contains-errors lvalue ->num_parts
    |     `-RecoveryExpr 0x1391423b0 <col:27> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x139143200 <line:25:3, line:37:3>
      |-RecoveryExpr 0x1391425b0 <line:25:7, line:26:58> '_Bool' contains-errors
      `-CompoundStmt 0x1391427d0 <line:27:3, line:37:3>
        |-CallExpr 0x139142618 <line:29:5, col:20> '<dependent type>' contains-errors
        | `-RecoveryExpr 0x1391425f0 <col:5, col:13> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x1391425d0 <col:5> 'int ()' Function 0x139141b78 'part_it' 'int ()'
        |-BinaryOperator 0x139142678 <line:30:5, col:17> 'int' '='
        | |-DeclRefExpr 0x139142638 <col:5> 'int' lvalue Var 0x139141960 'part_count' 'int'
        | `-IntegerLiteral 0x139142658 <col:17> 'int' 0
        `-DoStmt 0x1391427b0 <line:31:5, line:35:53>
          |-CompoundStmt 0x1391426e0 <line:32:5, line:35:5>
          `-BinaryOperator 0x139142790 <col:14, col:44> 'int' contains-errors '<'
            |-UnaryOperator 0x139142710 <col:14, col:16> 'int' prefix '++'
            | `-DeclRefExpr 0x1391426f0 <col:16> 'int' lvalue Var 0x139141960 'part_count' 'int'
            `-CXXDependentScopeMemberExpr 0x139142748 <col:29, col:44> '<dependent type>' contains-errors lvalue ->num_parts
              `-RecoveryExpr 0x139142728 <col:29> '<dependent type>' contains-errors lvalue
