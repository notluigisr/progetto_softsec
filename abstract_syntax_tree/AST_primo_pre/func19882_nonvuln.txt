`-FunctionDecl 0x146940a00  line:1:12 cxusb_aver_power_ctrl 'int (struct dvb_usb_device *, int)' static
  |-ParmVarDecl 0x146928648 <col:34, col:57> col:57 used d 'struct dvb_usb_device *'
  |-ParmVarDecl 0x1469286c8 <col:60, col:64> col:64 used onoff 'int'
  `-CompoundStmt 0x146943228 <line:2:1, line:38:1>
    |-DeclStmt 0x146940b80 <line:3:2, col:9>
    | `-VarDecl 0x146940b18 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x146940ee8 <line:4:2, line:5:59>
    | |-UnaryOperator 0x146940bd0 <line:4:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x146940bb8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x146940b98 <col:7> 'int' lvalue ParmVar 0x1469286c8 'onoff' 'int'
    | `-ReturnStmt 0x146940ed8 <line:5:3, col:59>
    |   `-CallExpr 0x146940e88 <col:10, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x146940d10 <col:10> 'int ()' Function 0x146940c58 'cxusb_ctrl_msg' 'int ()'
    |     |-DeclRefExpr 0x146940d30 <col:25> 'struct dvb_usb_device *' lvalue ParmVar 0x146928648 'd' 'struct dvb_usb_device *'
    |     |-RecoveryExpr 0x146940e28 <col:28> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x146940e48 <col:43> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x146940d80 <col:49> 'int' 0
    |     |-RecoveryExpr 0x146940e68 <col:52> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x146940db8 <col:58> 'int' 0
    |-IfStmt 0x146941428 <line:6:2, line:8:12>
    | |-BinaryOperator 0x146941218 <line:6:6, line:7:41> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1469411f8 <line:6:6, col:18> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x146940f40 <col:6, col:9> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x146940f08 <col:6> 'struct dvb_usb_device *' lvalue ParmVar 0x146928648 'd' 'struct dvb_usb_device *'
    | | | `-RecoveryExpr 0x1469411d8 <col:18> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x146941198 <line:7:6, col:41> 'int' contains-errors '<'
    | |   |-CallExpr 0x146941140 <col:6, col:37> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x146941080 <col:6> 'int ()' Function 0x146940fc8 'usb_set_interface' 'int ()'
    | |   | |-RecoveryExpr 0x1469410d8 <col:24, col:27> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x1469410a0 <col:24> 'struct dvb_usb_device *' lvalue ParmVar 0x146928648 'd' 'struct dvb_usb_device *'
    | |   | |-IntegerLiteral 0x146941100 <col:33> 'int' 0
    | |   | `-IntegerLiteral 0x146941120 <col:36> 'int' 0
    | |   `-IntegerLiteral 0x146941178 <col:41> 'int' 0
    | `-CallExpr 0x1469413e8 <line:8:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x1469413d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x146941318 <col:3> 'int ()' Function 0x146941260 'err' 'int ()'
    |   `-ImplicitCastExpr 0x146941410 <col:7> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x146941380 <col:7> 'char[4]' lvalue "STR"
    |-DoStmt 0x1469418b0 <line:9:2, line:11:61>
    | |-CompoundStmt 0x146941448 <line:9:5, col:6>
    | `-RecoveryExpr 0x146941890 <col:15, line:11:60> '_Bool' contains-errors
    |-IfStmt 0x1469431c0 <line:12:2, line:36:2>
    | |-UnaryOperator 0x146941908 <line:12:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1469418f0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1469418d0 <col:7> 'int' lvalue Var 0x146940b18 'ret' 'int'
    | `-CompoundStmt 0x1469431a0 <col:12, line:36:2>
    |   |-DeclStmt 0x1469419a0 <line:14:3, col:8>
    |   | `-VarDecl 0x146941938 <col:3, col:7> col:7 used i 'int'
    |   `-CallExpr 0x146942f10 <line:27:3, col:12> 'int'
    |     |-ImplicitCastExpr 0x146942ef8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x146942eb8 <col:3> 'int ()' Function 0x146942e00 'msleep' 'int ()'
    |     `-IntegerLiteral 0x146942ed8 <col:10> 'int' 20
    `-ReturnStmt 0x146943218 <line:37:2, col:9>
      `-ImplicitCastExpr 0x146943200 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1469431e0 <col:9> 'int' lvalue Var 0x146940b18 'ret' 'int'
