`-FunctionDecl 0x15100de58  line:1:12 invalid SRP_Verify_N_and_g 'int (const int *, const int *)' static
  |-ParmVarDecl 0x15100dcf0 <col:31, col:45> col:45 invalid N 'const int *'
  |-ParmVarDecl 0x15100dd70 <col:48, col:62> col:62 invalid g 'const int *'
  `-CompoundStmt 0x1500fe7d0 <line:2:2, line:27:2>
    |-DeclStmt 0x1500fe4f0 <line:6:2, line:18:20>
    | `-VarDecl 0x15100e2e0 <line:6:2, line:18:19> line:6:6 used ret 'int' cinit
    |   `-BinaryOperator 0x1500fe4d0 <line:7:3, line:18:19> 'int' contains-errors '&&'
    |     |-BinaryOperator 0x1500fe440 <line:7:3, line:17:19> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x1500fe3d0 <line:7:3, line:16:32> 'int' contains-errors '&&'
    |     | | |-BinaryOperator 0x1500fe308 <line:7:3, line:13:8> 'int' contains-errors '&&'
    |     | | | |-BinaryOperator 0x1500fe288 <line:7:3, line:12:65> 'int' contains-errors '&&'
    |     | | | | |-BinaryOperator 0x151028980 <line:7:3, line:9:31> 'int' contains-errors '&&'
    |     | | | | | |-BinaryOperator 0x151028910 <line:7:3, line:9:8> 'int' contains-errors '&&'
    |     | | | | | | |-BinaryOperator 0x151028890 <line:7:3, line:8:65> 'int' contains-errors '&&'
    |     | | | | | | | |-BinaryOperator 0x1510287a8 <line:7:3, col:58> 'int' contains-errors '&&'
    |     | | | | | | | | |-BinaryOperator 0x151028788 <col:3, col:39> 'int' contains-errors '&&'
    |     | | | | | | | | | |-BinaryOperator 0x151028708 <col:3, col:21> 'int' contains-errors '&&'
    |     | | | | | | | | | | |-BinaryOperator 0x1510286a8 <col:3, col:8> 'int' contains-errors '!='
    |     | | | | | | | | | | | |-RecoveryExpr 0x15100e348 <col:3> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | | | | `-RecoveryExpr 0x151028688 <col:8> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | | | `-BinaryOperator 0x1510286e8 <col:16, col:21> 'int' contains-errors '!='
    |     | | | | | | | | | |   |-RecoveryExpr 0x15100e3a0 <col:16> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | | |   `-RecoveryExpr 0x1510286c8 <col:21> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | | `-BinaryOperator 0x151028768 <col:29, col:39> 'int' contains-errors '!='
    |     | | | | | | | | |   |-RecoveryExpr 0x151028728 <col:29> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | |   `-RecoveryExpr 0x151028748 <col:39> '<dependent type>' contains-errors lvalue
    |     | | | | | | | | `-CallExpr 0x151027bb0 <col:47, col:58> '<dependent type>' contains-errors
    |     | | | | | | | |   |-DeclRefExpr 0x151027b70 <col:47> 'int ()' Function 0x151027ab8 'BN_is_odd' 'int ()'
    |     | | | | | | | |   `-RecoveryExpr 0x151027b90 <col:57> '<dependent type>' contains-errors lvalue
    |     | | | | | | | `-CallExpr 0x151028848 <line:8:3, col:65> '<dependent type>' contains-errors
    |     | | | | | | |   |-DeclRefExpr 0x151027cd8 <col:3> 'int ()' Function 0x151027c20 'BN_is_prime' 'int ()'
    |     | | | | | | |   |-RecoveryExpr 0x151027cf8 <col:15> '<dependent type>' contains-errors lvalue
    |     | | | | | | |   |-RecoveryExpr 0x1510287c8 <col:17> '<dependent type>' contains-errors lvalue
    |     | | | | | | |   |-RecoveryExpr 0x1510287e8 <col:49> '<dependent type>' contains-errors lvalue
    |     | | | | | | |   |-RecoveryExpr 0x151028808 <col:54> '<dependent type>' contains-errors lvalue
    |     | | | | | | |   `-RecoveryExpr 0x151028828 <col:61> '<dependent type>' contains-errors lvalue
    |     | | | | | | `-BinaryOperator 0x1510288f0 <line:9:3, col:8> 'int' contains-errors '!='
    |     | | | | | |   |-RecoveryExpr 0x1510288b0 <col:3> '<dependent type>' contains-errors lvalue
    |     | | | | | |   `-RecoveryExpr 0x1510288d0 <col:8> '<dependent type>' contains-errors lvalue
    |     | | | | | `-CallExpr 0x151028950 <col:16, col:31> '<dependent type>' contains-errors
    |     | | | | |   |-DeclRefExpr 0x151027f30 <col:16> 'int ()' Function 0x151027e78 'BN_rshift1' 'int ()'
    |     | | | | |   |-RecoveryExpr 0x151028930 <col:27> '<dependent type>' contains-errors lvalue
    |     | | | | |   `-RecoveryExpr 0x151027f68 <col:30> '<dependent type>' contains-errors lvalue
    |     | | | | `-CallExpr 0x1500fe240 <line:12:3, col:65> '<dependent type>' contains-errors
    |     | | | |   |-DeclRefExpr 0x151027fd8 <col:3> 'int ()' Function 0x151027c20 'BN_is_prime' 'int ()'
    |     | | | |   |-RecoveryExpr 0x1510289a0 <col:15> '<dependent type>' contains-errors lvalue
    |     | | | |   |-RecoveryExpr 0x1510289c0 <col:17> '<dependent type>' contains-errors lvalue
    |     | | | |   |-RecoveryExpr 0x1510289e0 <col:49> '<dependent type>' contains-errors lvalue
    |     | | | |   |-RecoveryExpr 0x1500fe200 <col:54> '<dependent type>' contains-errors lvalue
    |     | | | |   `-RecoveryExpr 0x1500fe220 <col:61> '<dependent type>' contains-errors lvalue
    |     | | | `-BinaryOperator 0x1500fe2e8 <line:13:3, col:8> 'int' contains-errors '!='
    |     | | |   |-RecoveryExpr 0x1500fe2a8 <col:3> '<dependent type>' contains-errors lvalue
    |     | | |   `-RecoveryExpr 0x1500fe2c8 <col:8> '<dependent type>' contains-errors lvalue
    |     | | `-CallExpr 0x1500fe388 <line:16:3, col:32> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x151028228 <col:3> 'int ()' Function 0x151028170 'BN_mod_exp' 'int ()'
    |     | |   |-RecoveryExpr 0x1500fe328 <col:14> '<dependent type>' contains-errors lvalue
    |     | |   |-RecoveryExpr 0x151028260 <col:17> '<dependent type>' contains-errors lvalue
    |     | |   |-RecoveryExpr 0x1500fe348 <col:20> '<dependent type>' contains-errors lvalue
    |     | |   |-RecoveryExpr 0x151028298 <col:23> '<dependent type>' contains-errors lvalue
    |     | |   `-RecoveryExpr 0x1500fe368 <col:26> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x1500fe410 <line:17:3, col:19> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x151028418 <col:3> 'int ()' Function 0x151028360 'BN_add_word' 'int ()'
    |     |   |-RecoveryExpr 0x1500fe3f0 <col:15> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x151028450 <col:18> 'int' 1
    |     `-BinaryOperator 0x1500fe4b0 <line:18:3, col:19> 'int' contains-errors '=='
    |       |-CallExpr 0x1500fe480 <col:3, col:14> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1510285a0 <col:3> 'int ()' Function 0x1510284e8 'BN_cmp' 'int ()'
    |       | |-RecoveryExpr 0x1500fe460 <col:10> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x1510285d8 <col:13> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x151028628 <col:19> 'int' 0
    `-ReturnStmt 0x1500fe7c0 <line:26:2, col:9>
      `-ImplicitCastExpr 0x1500fe7a8 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1500fe788 <col:9> 'int' contains-errors lvalue Var 0x15100e2e0 'ret' 'int'
