`-FunctionDecl 0x14d827568  line:1:16 invalid strupper_talloc_n_handle 'int *(struct smb_iconv_handle *, int *, const char *, int)'
  |-ParmVarDecl 0x14d80e268 <col:41, col:66> col:66 used iconv_handle 'struct smb_iconv_handle *'
  |-ParmVarDecl 0x14d80e318 <line:2:6, col:18> col:18 invalid ctx 'int *'
  |-ParmVarDecl 0x14d80e398 <col:23, col:35> col:35 used src 'const char *'
  |-ParmVarDecl 0x14d827418 <col:40, col:47> col:47 invalid n 'int'
  `-CompoundStmt 0x14d82a180 <line:3:1, line:40:1>
    |-RecoveryExpr 0x14d827710 <line:4:2, col:14> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x14d8276f0 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14d8276d0 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14d827668 <col:14> 'int' 0
    |-DeclStmt 0x14d8277c0 <line:5:2, col:12>
    | `-VarDecl 0x14d827758 <col:2, col:8> col:8 used dest 'char *'
    |-IfStmt 0x14d827888 <line:7:2, line:9:2>
    | |-UnaryOperator 0x14d827810 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d8277f8 <col:7> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d8277d8 <col:7> 'const char *' lvalue ParmVar 0x14d80e398 'src' 'const char *'
    | `-CompoundStmt 0x14d827870 <col:12, line:9:2>
    |   `-ReturnStmt 0x14d827860 <line:8:3, col:10>
    |     `-RecoveryExpr 0x14d827840 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d827c18 <line:13:2, line:15:2>
    | |-BinaryOperator 0x14d827b98 <line:13:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x14d827b20 <col:6> 'char *' lvalue Var 0x14d827758 'dest' 'char *'
    | | `-RecoveryExpr 0x14d827b78 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d827c00 <col:20, line:15:2>
    |   `-ReturnStmt 0x14d827bf0 <line:14:3, col:10>
    |     `-RecoveryExpr 0x14d827bd0 <col:10> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14d8282f8 <line:17:2, line:30:2>
    | |-BinaryOperator 0x14d827cc0 <line:17:9, col:17> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x14d827c58 <col:9, col:10> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | | `-RecoveryExpr 0x14d827c38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14d827ca8 <col:16, col:17> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x14d827c90 <col:17> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d827c70 <col:17> 'const char *' lvalue ParmVar 0x14d80e398 'src' 'const char *'
    | `-CompoundStmt 0x14d8282d0 <col:22, line:30:2>
    |   |-UnaryExprOrTypeTraitExpr 0x14d827d38 <line:18:3, col:10> 'unsigned long' contains-errors sizeof
    |   | `-RecoveryExpr 0x14d827d18 <col:10> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x14d827de0 <line:20:3, col:10> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x14d827d58 <col:3> 'const char *' lvalue ParmVar 0x14d80e398 'src' 'const char *'
    |   | `-RecoveryExpr 0x14d827dc0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14d8282b0 <line:25:3, line:28:3>
    |     |-RecoveryExpr 0x14d8280c8 <line:25:7, col:18> '_Bool' contains-errors
    |     `-CompoundStmt 0x14d828298 <col:21, line:28:3>
    |       `-CallExpr 0x14d828258 <line:26:4, col:20> 'int'
    |         |-ImplicitCastExpr 0x14d828240 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14d8281c8 <col:4> 'int ()' Function 0x14d828110 'talloc_free' 'int ()'
    |         `-ImplicitCastExpr 0x14d828280 <col:16> 'char *' <LValueToRValue>
    |           `-DeclRefExpr 0x14d8281e8 <col:16> 'char *' lvalue Var 0x14d827758 'dest' 'char *'
    |-CallExpr 0x14d82a090 <line:37:2, col:34> 'int'
    | |-ImplicitCastExpr 0x14d82a078 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d82a018 <col:2> 'int ()' Function 0x14d829f60 'talloc_set_name_const' 'int ()'
    | |-ImplicitCastExpr 0x14d82a0c0 <col:24> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x14d82a038 <col:24> 'char *' lvalue Var 0x14d827758 'dest' 'char *'
    | `-ImplicitCastExpr 0x14d82a0d8 <col:30> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d82a058 <col:30> 'char *' lvalue Var 0x14d827758 'dest' 'char *'
    `-ReturnStmt 0x14d82a170 <line:39:2, col:9>
      `-ImplicitCastExpr 0x14d82a128 <col:9> 'int *' <BitCast>
        `-ImplicitCastExpr 0x14d82a110 <col:9> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x14d82a0f0 <col:9> 'char *' lvalue Var 0x14d827758 'dest' 'char *'
