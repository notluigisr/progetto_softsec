`-FunctionDecl 0x129928a00  line:1:17 invalid auditCreateOrUpdateUser 'void (const int)' static
  |-ParmVarDecl 0x1299288f0 <col:41, <invalid sloc>> col:54 invalid 'const int'
  `-CompoundStmt 0x129942528 <col:78, line:36:5>
    |-RecoveryExpr 0x129928ae0 <line:3:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129928e60 <line:7:9, line:9:9>
    | |-CallExpr 0x129928df0 <line:7:13, col:35> '<dependent type>' contains-errors
    | | |-CXXDependentScopeMemberExpr 0x129928da8 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasField
    | | | `-RecoveryExpr 0x129928d88 <col:13> '<dependent type>' contains-errors lvalue
    | | `-StringLiteral 0x129928d40 <col:30> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x129928e50 <col:38, line:9:9>
    |-RecoveryExpr 0x129928eb0 <line:11:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129942450 <line:12:9, line:17:9>
    | |-CallExpr 0x129942000 <line:12:13, col:35> '<dependent type>' contains-errors
    | | |-CXXDependentScopeMemberExpr 0x129928f98 <col:13, col:21> '<dependent type>' contains-errors lvalue .hasField
    | | | `-RecoveryExpr 0x129928f78 <col:13> '<dependent type>' contains-errors lvalue
    | | `-StringLiteral 0x129928f30 <col:30> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x129942430 <col:38, line:17:9>
    |   |-DeclStmt 0x1299422e0 <line:13:13, line:14:49>
    |   | `-VarDecl 0x129942040 <line:13:13, col:18> col:18 used r 'int' auto
    |   `-CallExpr 0x129942388 <line:15:13, col:30> 'int'
    |     |-ImplicitCastExpr 0x129942370 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1299422f8 <col:13> 'int ()' Function 0x129928ba8 'uassertStatusOK' 'int ()'
    |     `-ImplicitCastExpr 0x1299423b0 <col:29> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x129942318 <col:29> 'int' lvalue Var 0x129942040 'r' 'int'
    `-DeclStmt 0x129942510 <line:19:9, line:36:5>
      `-VarDecl 0x129942488 <line:19:9, col:20> col:20 invalid hasPwd 'const int'
