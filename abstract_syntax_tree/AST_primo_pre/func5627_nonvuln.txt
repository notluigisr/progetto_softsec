`-FunctionDecl 0x1239281c8  line:1:15 invalid TIFFClampDoubleToUInt32 'int (double)' static
  |-ParmVarDecl 0x1239280f0 <col:40, col:47> col:47 used val 'double'
  `-CompoundStmt 0x123928518 <line:2:1, line:8:1>
    |-IfStmt 0x123928338 <line:3:5, line:4:16>
    | |-BinaryOperator 0x1239282e8 <line:3:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1239282b8 <col:9> 'double' <LValueToRValue>
    | | | `-DeclRefExpr 0x123928278 <col:9> 'double' lvalue ParmVar 0x1239280f0 'val' 'double'
    | | `-ImplicitCastExpr 0x1239282d0 <col:15> 'double' <IntegralToFloating>
    | |   `-IntegerLiteral 0x123928298 <col:15> 'int' 0
    | `-ReturnStmt 0x123928328 <line:4:9, col:16>
    |   `-IntegerLiteral 0x123928308 <col:16> 'int' 0
    `-IfStmt 0x1239284e0 <line:5:5, line:6:16>
      |-BinaryOperator 0x123928478 <line:5:9, col:37> 'int' '||'
      | |-BinaryOperator 0x1239283c8 <col:9, col:15> 'int' '>'
      | | |-ImplicitCastExpr 0x123928398 <col:9> 'double' <LValueToRValue>
      | | | `-DeclRefExpr 0x123928358 <col:9> 'double' lvalue ParmVar 0x1239280f0 'val' 'double'
      | | `-ImplicitCastExpr 0x1239283b0 <col:15> 'double' <IntegralToFloating>
      | |   `-IntegerLiteral 0x123928378 <col:15> 'unsigned int' 4294967295
      | `-BinaryOperator 0x123928458 <col:30, col:37> 'int' '!='
      |   |-ImplicitCastExpr 0x123928428 <col:30> 'double' <LValueToRValue>
      |   | `-DeclRefExpr 0x1239283e8 <col:30> 'double' lvalue ParmVar 0x1239280f0 'val' 'double'
      |   `-ImplicitCastExpr 0x123928440 <col:37> 'double' <LValueToRValue>
      |     `-DeclRefExpr 0x123928408 <col:37> 'double' lvalue ParmVar 0x1239280f0 'val' 'double'
      `-ReturnStmt 0x1239284d0 <line:6:9, col:16>
        `-ImplicitCastExpr 0x1239284b8 <col:16> 'int' <IntegralCast>
          `-IntegerLiteral 0x123928498 <col:16> 'unsigned int' 4294967295
