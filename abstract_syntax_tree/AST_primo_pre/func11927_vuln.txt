`-FunctionDecl 0x15b928298  line:1:1 invalid GetNumWrongData 'int (const int *, const int)'
  |-ParmVarDecl 0x15b9280f0 <col:17, col:30> col:30 invalid curPtr 'const int *'
  |-ParmVarDecl 0x15b928170 <col:38, col:48> col:48 used maxnum 'const int'
  `-CompoundStmt 0x15b941828 <line:2:1, line:13:1>
    |-DeclStmt 0x15b9283f0 <line:3:5, col:18>
    | `-VarDecl 0x15b928368 <col:5, col:17> col:9 used count 'int' cinit
    |   `-IntegerLiteral 0x15b9283d0 <col:17> 'int' 0
    |-IfStmt 0x15b9284e8 <line:5:5, line:7:5>
    | |-BinaryOperator 0x15b928460 <line:5:9, col:14> 'int' '=='
    | | |-IntegerLiteral 0x15b928408 <col:9> 'int' 1
    | | `-ImplicitCastExpr 0x15b928448 <col:14> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15b928428 <col:14> 'const int' lvalue ParmVar 0x15b928170 'maxnum' 'const int'
    | `-CompoundStmt 0x15b9284d0 <col:22, line:7:5>
    |   `-ReturnStmt 0x15b9284c0 <line:6:9, col:18>
    |     `-ParenExpr 0x15b9284a0 <col:16, col:18> 'int'
    |       `-IntegerLiteral 0x15b928480 <col:17> 'int' 1
    |-WhileStmt 0x15b928798 <line:8:5, line:10:5>
    | |-BinaryOperator 0x15b928728 <line:8:12, col:67> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x15b928678 <col:12, col:53> 'int' contains-errors '!='
    | | | |-UnaryOperator 0x15b928588 <col:12, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | | `-ParenExpr 0x15b928568 <col:13, col:28> '<dependent type>' contains-errors
    | | | |   `-BinaryOperator 0x15b928548 <col:14, col:23> '<dependent type>' contains-errors '+'
    | | | |     |-RecoveryExpr 0x15b928508 <col:14> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x15b928528 <col:23> 'int' lvalue Var 0x15b928368 'count' 'int'
    | | | `-UnaryOperator 0x15b928660 <col:33, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | |   `-ParenExpr 0x15b928640 <col:34, col:53> '<dependent type>' contains-errors
    | | |     `-BinaryOperator 0x15b928620 <col:35, col:52> '<dependent type>' contains-errors '+'
    | | |       |-BinaryOperator 0x15b9285e0 <col:35, col:44> '<dependent type>' contains-errors '+'
    | | |       | |-RecoveryExpr 0x15b9285a0 <col:35> '<dependent type>' contains-errors lvalue
    | | |       | `-DeclRefExpr 0x15b9285c0 <col:44> 'int' lvalue Var 0x15b928368 'count' 'int'
    | | |       `-IntegerLiteral 0x15b928600 <col:52> 'int' 1
    | | `-BinaryOperator 0x15b928708 <col:58, col:67> 'int' '>'
    | |   |-ImplicitCastExpr 0x15b9286d8 <col:58> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15b928698 <col:58> 'const int' lvalue ParmVar 0x15b928170 'maxnum' 'const int'
    | |   `-ImplicitCastExpr 0x15b9286f0 <col:67> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x15b9286b8 <col:67> 'int' lvalue Var 0x15b928368 'count' 'int'
    | `-CompoundStmt 0x15b928780 <col:74, line:10:5>
    |   `-UnaryOperator 0x15b928768 <line:9:9, col:14> 'int' postfix '++'
    |     `-DeclRefExpr 0x15b928748 <col:9> 'int' lvalue Var 0x15b928368 'count' 'int'
    `-ReturnStmt 0x15b941818 <line:12:5, col:18>
      `-ImplicitCastExpr 0x15b941800 <col:12, col:18> 'int' <LValueToRValue>
        `-ParenExpr 0x15b9287d8 <col:12, col:18> 'int' lvalue
          `-DeclRefExpr 0x15b9287b8 <col:13> 'int' lvalue Var 0x15b928368 'count' 'int'
