`-FunctionDecl 0x14c80dda8  line:1:1 path_is_relative 'int (const char *)'
  |-ParmVarDecl 0x14c80dcd8 <col:18, col:30> col:30 used filename 'const char *'
  `-CompoundStmt 0x14c80e068 <line:2:1, line:14:1>
    `-IfStmt 0x14c80e038 <line:3:3, line:13:12> has_else
      |-BinaryOperator 0x14c80dfb8 <line:3:7, col:34> 'int' '&&'
      | |-ImplicitCastExpr 0x14c80dfa0 <col:7> 'const char *' <LValueToRValue>
      | | `-DeclRefExpr 0x14c80dea0 <col:7> 'const char *' lvalue ParmVar 0x14c80dcd8 'filename' 'const char *'
      | `-BinaryOperator 0x14c80df80 <col:19, col:34> 'int' '=='
      |   |-ImplicitCastExpr 0x14c80df68 <col:19, col:29> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x14c80df50 <col:19, col:29> 'char' <LValueToRValue>
      |   |   `-ArraySubscriptExpr 0x14c80df18 <col:19, col:29> 'const char' lvalue
      |   |     |-ImplicitCastExpr 0x14c80df00 <col:19> 'const char *' <LValueToRValue>
      |   |     | `-DeclRefExpr 0x14c80dec0 <col:19> 'const char *' lvalue ParmVar 0x14c80dcd8 'filename' 'const char *'
      |   |     `-IntegerLiteral 0x14c80dee0 <col:28> 'int' 0
      |   `-CharacterLiteral 0x14c80df38 <col:34> 'int' 47
      |-ReturnStmt 0x14c80dff8 <line:4:5, col:12>
      | `-IntegerLiteral 0x14c80dfd8 <col:12> 'int' 0
      `-ReturnStmt 0x14c80e028 <line:13:5, col:12>
        `-IntegerLiteral 0x14c80e008 <col:12> 'int' 1
