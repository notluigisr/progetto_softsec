`-FunctionDecl 0x15000de68  line:1:1 get_status_ccid 'int (int, unsigned int *)'
  |-ParmVarDecl 0x15000dcd8 <col:18, col:22> col:22 used slot 'int'
  |-ParmVarDecl 0x15000dd88 <col:28, col:42> col:42 used status 'unsigned int *'
  `-CompoundStmt 0x150028780 <line:2:1, line:18:1>
    |-DeclStmt 0x15000dfe8 <line:3:3, col:9>
    | `-VarDecl 0x15000df80 <col:3, col:7> col:7 used rc 'int'
    |-DeclStmt 0x15000e080 <line:4:3, col:11>
    | `-VarDecl 0x15000e018 <col:3, col:7> col:7 used bits 'int'
    |-IfStmt 0x15000e328 <line:7:3, line:8:12>
    | |-ImplicitCastExpr 0x15000e2c8 <line:7:7> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15000e2a8 <col:7> 'int' lvalue Var 0x15000df80 'rc' 'int'
    | `-ReturnStmt 0x15000e318 <line:8:5, col:12>
    |   `-ImplicitCastExpr 0x15000e300 <col:12> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x15000e2e0 <col:12> 'int' lvalue Var 0x15000df80 'rc' 'int'
    |-IfStmt 0x150028720 <line:10:3, line:15:15> has_else
    | |-BinaryOperator 0x15000e3a0 <line:10:7, col:15> 'int' '=='
    | | |-ImplicitCastExpr 0x15000e388 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15000e348 <col:7> 'int' lvalue Var 0x15000e018 'bits' 'int'
    | | `-IntegerLiteral 0x15000e368 <col:15> 'int' 0
    | |-NullStmt 0x150028718 <line:11:5>
    | `-IfStmt 0x1500286e8 <line:12:8, line:15:15> has_else
    |   |-BinaryOperator 0x1500284f8 <line:12:12, col:20> 'int' '=='
    |   | |-ImplicitCastExpr 0x1500284e0 <col:12> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1500284a0 <col:12> 'int' lvalue Var 0x15000e018 'bits' 'int'
    |   | `-IntegerLiteral 0x1500284c0 <col:20> 'int' 1
    |   |-BinaryOperator 0x150028620 <line:13:5, col:15> 'unsigned int' contains-errors '='
    |   | |-UnaryOperator 0x1500285e8 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1500285d0 <col:6> 'unsigned int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x150028518 <col:6> 'unsigned int *' lvalue ParmVar 0x15000dd88 'status' 'unsigned int *'
    |   | `-RecoveryExpr 0x150028600 <col:15> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1500286c8 <line:15:5, col:15> 'unsigned int' '='
    |     |-UnaryOperator 0x150028678 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x150028660 <col:6> 'unsigned int *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x150028640 <col:6> 'unsigned int *' lvalue ParmVar 0x15000dd88 'status' 'unsigned int *'
    |     `-ImplicitCastExpr 0x1500286b0 <col:15> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x150028690 <col:15> 'int' 0
    `-ReturnStmt 0x150028770 <line:17:3, col:10>
      `-IntegerLiteral 0x150028750 <col:10> 'int' 0
