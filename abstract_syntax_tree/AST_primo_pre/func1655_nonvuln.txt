`-FunctionDecl 0x12a00dd10  line:1:13 test_bug12744 'void ()' static
  `-CompoundStmt 0x12a028710 <line:2:1, line:30:1>
    |-DeclStmt 0x12a00dee0 <line:5:3, col:9>
    | `-VarDecl 0x12a00de78 <col:3, col:7> col:7 used rc 'int'
    |-CallExpr 0x12a00e0d8 <line:6:3, col:17> 'int'
    | |-ImplicitCastExpr 0x12a00e0c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a00e010 <col:3> 'int ()' Function 0x12a00df58 'myheader' 'int ()'
    | `-ImplicitCastExpr 0x12a00e100 <col:12> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12a00e070 <col:12> 'char[4]' lvalue "STR"
    |-CallExpr 0x12a00e3b8 <line:9:3, col:20> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a00e338 <col:3> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
    | `-RecoveryExpr 0x12a00e398 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a027d50 <line:11:3, line:16:3>
    | |-UnaryOperator 0x12a027b80 <line:11:7, line:12:67> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12a027b20 <line:11:8, line:12:67> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12a0278e0 <line:11:8> 'int ()' Function 0x12a027828 'mysql_real_connect' 'int ()'
    | |   |-RecoveryExpr 0x12a027a40 <col:27> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027a60 <col:35> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027a80 <col:45> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027aa0 <col:55> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027ac0 <line:12:27> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027ae0 <col:39> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12a027b00 <col:49> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x12a0279a8 <col:66> 'int' 0
    | `-CompoundStmt 0x12a027d38 <line:13:3, line:16:3>
    |   `-CallExpr 0x12a027d10 <line:15:5, col:17> 'int'
    |     |-ImplicitCastExpr 0x12a027cf8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a027cb8 <col:5> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
    |     `-IntegerLiteral 0x12a027cd8 <col:16> 'int' 0
    |-CallExpr 0x12a028080 <line:20:3, col:21> 'int'
    | |-ImplicitCastExpr 0x12a028068 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a027fd0 <col:3> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
    | `-BinaryOperator 0x12a028048 <col:14, col:20> 'int' '=='
    |   |-ImplicitCastExpr 0x12a028030 <col:14> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12a027ff0 <col:14> 'int' lvalue Var 0x12a00de78 'rc' 'int'
    |   `-IntegerLiteral 0x12a028010 <col:20> 'int' 0
    |-CallExpr 0x12a028320 <line:25:3, col:16> 'int'
    | |-ImplicitCastExpr 0x12a028308 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a0282c8 <col:3> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
    | `-ImplicitCastExpr 0x12a028348 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12a0282e8 <col:14> 'int' lvalue Var 0x12a00de78 'rc' 'int'
    |-CallExpr 0x12a0284d8 <line:27:3, col:16> 'int'
    | |-ImplicitCastExpr 0x12a0284c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a028480 <col:3> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
    | `-ImplicitCastExpr 0x12a028500 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12a0284a0 <col:14> 'int' lvalue Var 0x12a00de78 'rc' 'int'
    `-CallExpr 0x12a0286e8 <line:29:3, col:21> 'int'
      |-ImplicitCastExpr 0x12a0286d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12a028638 <col:3> 'int ()' Function 0x12a00e280 'DIE_UNLESS' 'int ()'
      `-BinaryOperator 0x12a0286b0 <col:14, col:20> 'int' '=='
        |-ImplicitCastExpr 0x12a028698 <col:14> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12a028658 <col:14> 'int' lvalue Var 0x12a00de78 'rc' 'int'
        `-IntegerLiteral 0x12a028678 <col:20> 'int' 0
