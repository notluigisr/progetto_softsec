`-FunctionDecl 0x131120f28  line:1:12 parse_import_ptr 'int (struct MACH0_)' static
  |-ParmVarDecl 0x131120e18 <col:29, col:48> col:43 invalid obj_t 'struct MACH0_'
  `-CompoundStmt 0x133008c40 <col:88, line:41:1>
    |-DeclStmt 0x131139470 <line:2:2, col:25>
    | |-VarDecl 0x131139260 <col:2, col:6> col:6 used i 'int'
    | |-VarDecl 0x1311392e0 <col:2, col:9> col:9 used j 'int'
    | |-VarDecl 0x131139360 <col:2, col:12> col:12 used sym 'int'
    | `-VarDecl 0x1311393e0 <col:2, col:17> col:17 used wordsize 'int'
    |-BinaryOperator 0x131139780 <line:4:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x1311394a0 <col:2> 'int' lvalue Var 0x1311393e0 'wordsize' 'int'
    | `-BinaryOperator 0x131139760 <col:13, col:37> '<dependent type>' contains-errors '/'
    |   |-CallExpr 0x131139738 <col:13, col:33> '<dependent type>' contains-errors
    |   | |-CallExpr 0x1311396f0 <col:13, col:28> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1311395d0 <col:13> 'int ()' Function 0x131139518 'MACH0_' 'int ()'
    |   | | `-RecoveryExpr 0x1311396d0 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x131139718 <col:30> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x131139670 <col:37> 'int' 8
    |-IfStmt 0x131139a00 <line:5:2, line:7:2>
    | |-BinaryOperator 0x131139998 <line:5:6, col:29> 'int' contains-errors '||'
    | | |-BinaryOperator 0x1311398d0 <col:6, col:12> 'int' contains-errors '<'
    | | | |-RecoveryExpr 0x1311398b0 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x1311397b8 <col:12> 'int' 0
    | | `-BinaryOperator 0x131139978 <col:17, col:29> 'int' contains-errors '>='
    | |   |-RecoveryExpr 0x1311398f0 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x131139930 <col:24, col:29> '<dependent type>' contains-errors lvalue ->nsymtab
    | |     `-RecoveryExpr 0x131139910 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1311399e8 <col:38, line:7:2>
    |   `-ReturnStmt 0x1311399d8 <line:6:3, col:10>
    |     `-IntegerLiteral 0x1311399b8 <col:10> 'int' 0
    |-IfStmt 0x131139b38 <line:8:2, line:12:2> has_else
    | |-RecoveryExpr 0x131139ac8 <line:8:6, col:52> '_Bool' contains-errors
    | |-CompoundStmt 0x131139b00 <col:83, line:10:2>
    | `-CompoundStmt 0x131139b28 <col:9, line:12:2>
    `-SwitchStmt 0x131139c00 <line:18:2, line:24:2>
      |-ImplicitCastExpr 0x131139be8 <line:18:10> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x131139bc8 <col:10> 'int' lvalue Var 0x1311393e0 'wordsize' 'int'
      `-CompoundStmt 0x131139f68 <col:20, line:24:2>
        |-CallExpr 0x131139d98 <line:19:3, col:9> 'int'
        | |-ImplicitCastExpr 0x131139d80 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x131139d08 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'
        | `-IntegerLiteral 0x131139d28 <col:8> 'int' 8
        |-CallExpr 0x131139e18 <line:20:3, col:10> 'int'
        | |-ImplicitCastExpr 0x131139e00 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x131139dc0 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'
        | `-IntegerLiteral 0x131139de0 <col:8> 'int' 16
        |-CallExpr 0x131139e98 <line:21:3, col:10> 'int'
        | |-ImplicitCastExpr 0x131139e80 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x131139e40 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'
        | `-IntegerLiteral 0x131139e60 <col:8> 'int' 32
        |-CallExpr 0x131139f18 <line:22:3, col:10> 'int'
        | |-ImplicitCastExpr 0x131139f00 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x131139ec0 <col:3> 'int ()' Function 0x131139c50 'CASE' 'int ()'
        | `-IntegerLiteral 0x131139ee0 <col:8> 'int' 64
        `-DefaultStmt 0x131139f48 <line:23:3, col:10>
          `-NullStmt 0x131139f40 <col:10>
