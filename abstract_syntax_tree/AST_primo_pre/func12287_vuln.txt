`-FunctionDecl 0x14380c7a8  line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'
  |-ParmVarDecl 0x14380c6d8 <col:27> col:27 wddx 'int'
  `-CompoundStmt 0x143832ea0 <line:2:1, line:40:1>
    |-DeclStmt 0x14380c998 <line:5:2, col:11>
    | `-VarDecl 0x14380c930 <col:2, col:8> col:8 used key 'char *'
    |-DeclStmt 0x14380ca30 <line:6:2, col:17>
    | `-VarDecl 0x14380c9c8 <col:2, col:7> col:7 used key_length 'int'
    |-DeclStmt 0x14380cb58 <line:7:2, col:15>
    | `-VarDecl 0x14380caf0 <col:2, col:14> col:7 used tmp 'char[128]'
    |-DeclStmt 0x14380cbf0 <line:8:2, col:11>
    | `-VarDecl 0x14380cb88 <col:2, col:8> col:8 used idx 'long'
    |-DeclStmt 0x14380cc88 <line:9:2, col:15>
    | `-VarDecl 0x14380cc20 <col:2, col:6> col:6 used hash_type 'int'
    |-DeclStmt 0x14380cd20 <line:10:2, col:9>
    | `-VarDecl 0x14380ccb8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x143830248 <line:12:2, line:14:2>
    | |-BinaryOperator 0x14380cdb0 <line:12:6, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14380cd90 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14380cd50 <col:16> 'int' 0
    | `-CompoundStmt 0x143830230 <col:19, line:14:2>
    |   `-ReturnStmt 0x143830220 <line:13:3, col:10>
    |     `-RecoveryExpr 0x143830200 <col:10> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x143830400 <line:16:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143830380 <col:2> 'int ()' Function 0x1438302c8 'MAKE_STD_ZVAL' 'int ()'
    | `-RecoveryExpr 0x1438303e0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x143832d38 <line:18:2, line:35:2>
    | |-RecoveryExpr 0x1438305c0 <line:18:6, col:70> '_Bool' contains-errors
    | `-CompoundStmt 0x143832d28 <col:79, line:35:2>
    `-ReturnStmt 0x143832e90 <line:39:2, col:9>
      `-ImplicitCastExpr 0x143832e78 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x143832e58 <col:9> 'int' lvalue Var 0x14380ccb8 'ret' 'int'
