`-FunctionDecl 0x14300df18  line:1:12 invalid mov_read_mdat 'int (int *, int *, int)' static
  |-ParmVarDecl 0x14300dd28 <col:26, col:38> col:38 referenced invalid c 'int *'
  |-ParmVarDecl 0x14300dda8 <col:41, col:54> col:54 invalid pb 'int *'
  |-ParmVarDecl 0x14300de28 <col:58, col:66> col:66 invalid atom 'int'
  `-CompoundStmt 0x14300e1d0 <line:2:1, line:7:1>
    |-IfStmt 0x14300e0b0 <line:3:5, line:4:16>
    | |-BinaryOperator 0x14300e060 <line:3:9, col:22> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14300dff8 <col:9, col:14> '<dependent type>' contains-errors lvalue .size
    | | | `-RecoveryExpr 0x14300dfd8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14300e040 <col:22> 'int' 0
    | `-ReturnStmt 0x14300e0a0 <line:4:9, col:16>
    |   `-IntegerLiteral 0x14300e080 <col:16> 'int' 0
    |-BinaryOperator 0x14300e180 <line:5:5, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14300e118 <col:5, col:8> '<dependent type>' contains-errors lvalue ->found_mdat
    | | `-RecoveryExpr 0x14300e0f0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14300e0d0 <col:5> 'int *' lvalue ParmVar 0x14300dd28 'c' 'int *'
    | `-IntegerLiteral 0x14300e160 <col:19> 'int' 1
    `-ReturnStmt 0x14300e1c0 <line:6:5, col:12>
      `-IntegerLiteral 0x14300e1a0 <col:12> 'int' 0
