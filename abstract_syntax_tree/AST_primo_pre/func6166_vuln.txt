`-FunctionDecl 0x150140a00  line:1:15 insn_get_seg_base 'unsigned long (struct pt_regs *, int)'
  |-ParmVarDecl 0x150128648 <col:33, col:49> col:49 used regs 'struct pt_regs *'
  |-ParmVarDecl 0x1501286c8 <col:55, col:59> col:59 used seg_reg_idx 'int'
  `-CompoundStmt 0x150144450 <line:2:1, line:37:1>
    |-DeclStmt 0x150140ce8 <line:3:2, col:26>
    | |-RecordDecl 0x150140b00 <col:2, col:9> col:9 struct desc_struct
    | `-VarDecl 0x150140c68 <col:2, col:22> col:22 used desc 'struct desc_struct *'
    |-DeclStmt 0x150140d80 <line:4:2, col:11>
    | `-VarDecl 0x150140d18 <col:2, col:8> col:8 used sel 'short'
    |-BinaryOperator 0x150141000 <line:6:2, col:46> 'short' '='
    | |-DeclRefExpr 0x150140d98 <col:2> 'short' lvalue Var 0x150140d18 'sel' 'short'
    | `-ImplicitCastExpr 0x150140fe8 <col:8, col:46> 'short' <IntegralCast>
    |   `-CallExpr 0x150140f88 <col:8, col:46> 'int'
    |     |-ImplicitCastExpr 0x150140f70 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x150140ee0 <col:8> 'int ()' Function 0x150140e28 'get_segment_selector' 'int ()'
    |     |-ImplicitCastExpr 0x150140fb8 <col:29> 'struct pt_regs *' <LValueToRValue>
    |     | `-DeclRefExpr 0x150140f00 <col:29> 'struct pt_regs *' lvalue ParmVar 0x150128648 'regs' 'struct pt_regs *'
    |     `-ImplicitCastExpr 0x150140fd0 <col:35> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x150140f20 <col:35> 'int' lvalue ParmVar 0x1501286c8 'seg_reg_idx' 'int'
    |-IfStmt 0x150141110 <line:7:2, line:8:11>
    | |-BinaryOperator 0x150141090 <line:7:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x150141078 <col:6> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x150141060 <col:6> 'short' <LValueToRValue>
    | | |   `-DeclRefExpr 0x150141020 <col:6> 'short' lvalue Var 0x150140d18 'sel' 'short'
    | | `-IntegerLiteral 0x150141040 <col:12> 'int' 0
    | `-ReturnStmt 0x150141100 <line:8:3, col:11>
    |   `-ImplicitCastExpr 0x1501410e8 <col:10, col:11> 'unsigned long' <IntegralCast>
    |     `-UnaryOperator 0x1501410d0 <col:10, col:11> 'long' prefix '-'
    |       `-IntegerLiteral 0x1501410b0 <col:11> 'long' 1
    |-IfStmt 0x1501413c8 <line:10:2, line:12:34>
    | |-CallExpr 0x150141268 <line:10:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x150141250 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x150141210 <col:6> 'int ()' Function 0x150141158 'v8086_mode' 'int ()'
    | | `-ImplicitCastExpr 0x150141290 <col:17> 'struct pt_regs *' <LValueToRValue>
    | |   `-DeclRefExpr 0x150141230 <col:17> 'struct pt_regs *' lvalue ParmVar 0x150128648 'regs' 'struct pt_regs *'
    | `-ReturnStmt 0x1501413b8 <line:12:3, col:34>
    |   `-CStyleCastExpr 0x150141390 <col:10, col:34> 'unsigned long' <IntegralCast>
    |     `-ParenExpr 0x150141370 <col:25, col:34> 'int'
    |       `-BinaryOperator 0x150141318 <col:26, col:33> 'int' '<<'
    |         |-ImplicitCastExpr 0x150141300 <col:26> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x1501412e8 <col:26> 'short' <LValueToRValue>
    |         |   `-DeclRefExpr 0x1501412a8 <col:26> 'short' lvalue Var 0x150140d18 'sel' 'short'
    |         `-IntegerLiteral 0x1501412c8 <col:33> 'int' 4
    |-IfStmt 0x150143f08 <line:14:2, line:26:2>
    | |-CallExpr 0x150141520 <line:14:6, col:26> 'int'
    | | |-ImplicitCastExpr 0x150141508 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1501414c8 <col:6> 'int ()' Function 0x150141410 'user_64bit_mode' 'int ()'
    | | `-ImplicitCastExpr 0x150141548 <col:22> 'struct pt_regs *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1501414e8 <col:22> 'struct pt_regs *' lvalue ParmVar 0x150128648 'regs' 'struct pt_regs *'
    | `-CompoundStmt 0x150143ee0 <col:29, line:26:2>
    |   |-DeclStmt 0x1501415e0 <line:16:3, col:21>
    |   | `-VarDecl 0x150141578 <col:3, col:17> col:17 used base 'unsigned long'
    |   |-IfStmt 0x150143e68 <line:18:3, line:24:11> has_else
    |   | |-BinaryOperator 0x150141670 <line:18:7, col:22> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x1501415f8 <col:7> 'int' lvalue ParmVar 0x1501286c8 'seg_reg_idx' 'int'
    |   | | `-RecoveryExpr 0x150141650 <col:22> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x150141818 <line:19:4, col:28> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x150141770 <col:4> 'int ()' Function 0x1501416b8 'rdmsrl' 'int ()'
    |   | | |-RecoveryExpr 0x1501417f8 <col:11> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1501417a8 <col:24> 'unsigned long' lvalue Var 0x150141578 'base' 'unsigned long'
    |   | `-IfStmt 0x150143e38 <line:20:8, line:24:11> has_else
    |   |   |-BinaryOperator 0x1501418c0 <line:20:12, col:27> 'int' contains-errors '=='
    |   |   | |-DeclRefExpr 0x150141848 <col:12> 'int' lvalue ParmVar 0x1501286c8 'seg_reg_idx' 'int'
    |   |   | `-RecoveryExpr 0x1501418a0 <col:27> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x150141988 <line:22:4, col:35> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1501418e0 <col:4> 'int ()' Function 0x1501416b8 'rdmsrl' 'int ()'
    |   |   | |-RecoveryExpr 0x150141968 <col:11> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x150141918 <col:31> 'unsigned long' lvalue Var 0x150141578 'base' 'unsigned long'
    |   |   `-BinaryOperator 0x150143e18 <line:24:4, col:11> 'unsigned long' '='
    |   |     |-DeclRefExpr 0x1501419b8 <col:4> 'unsigned long' lvalue Var 0x150141578 'base' 'unsigned long'
    |   |     `-ImplicitCastExpr 0x150143e00 <col:11> 'unsigned long' <IntegralCast>
    |   |       `-IntegerLiteral 0x1501419d8 <col:11> 'int' 0
    |   `-ReturnStmt 0x150143ed0 <line:25:3, col:10>
    |     `-ImplicitCastExpr 0x150143eb8 <col:10> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x150143e98 <col:10> 'unsigned long' lvalue Var 0x150141578 'base' 'unsigned long'
    |-IfStmt 0x150143fd8 <line:29:2, line:30:11>
    | |-UnaryOperator 0x150143f60 <line:29:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x150143f48 <col:7> 'short' <LValueToRValue>
    | |   `-DeclRefExpr 0x150143f28 <col:7> 'short' lvalue Var 0x150140d18 'sel' 'short'
    | `-ReturnStmt 0x150143fc8 <line:30:3, col:11>
    |   `-ImplicitCastExpr 0x150143fb0 <col:10, col:11> 'unsigned long' <IntegralCast>
    |     `-UnaryOperator 0x150143f98 <col:10, col:11> 'long' prefix '-'
    |       `-IntegerLiteral 0x150143f78 <col:11> 'long' 1
    |-BinaryOperator 0x1501441c0 <line:32:2, col:21> 'struct desc_struct *' '='
    | |-DeclRefExpr 0x150143ff8 <col:2> 'struct desc_struct *' lvalue Var 0x150140c68 'desc' 'struct desc_struct *'
    | `-ImplicitCastExpr 0x1501441a8 <col:9, col:21> 'struct desc_struct *' <IntegralToPointer>
    |   `-CallExpr 0x150144150 <col:9, col:21> 'int'
    |     |-ImplicitCastExpr 0x150144138 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1501440f8 <col:9> 'int ()' Function 0x150144040 'get_desc' 'int ()'
    |     `-ImplicitCastExpr 0x150144190 <col:18> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x150144178 <col:18> 'short' <LValueToRValue>
    |         `-DeclRefExpr 0x150144118 <col:18> 'short' lvalue Var 0x150140d18 'sel' 'short'
    |-IfStmt 0x150144290 <line:33:2, line:34:11>
    | |-UnaryOperator 0x150144218 <line:33:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x150144200 <col:7> 'struct desc_struct *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1501441e0 <col:7> 'struct desc_struct *' lvalue Var 0x150140c68 'desc' 'struct desc_struct *'
    | `-ReturnStmt 0x150144280 <line:34:3, col:11>
    |   `-ImplicitCastExpr 0x150144268 <col:10, col:11> 'unsigned long' <IntegralCast>
    |     `-UnaryOperator 0x150144250 <col:10, col:11> 'long' prefix '-'
    |       `-IntegerLiteral 0x150144230 <col:11> 'long' 1
    `-ReturnStmt 0x150144440 <line:36:2, col:27>
      `-ImplicitCastExpr 0x150144428 <col:9, col:27> 'unsigned long' <IntegralCast>
        `-CallExpr 0x1501443e8 <col:9, col:27> 'int'
          |-ImplicitCastExpr 0x1501443d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x150144390 <col:9> 'int ()' Function 0x1501442d8 'get_desc_base' 'int ()'
          `-ImplicitCastExpr 0x150144410 <col:23> 'struct desc_struct *' <LValueToRValue>
            `-DeclRefExpr 0x1501443b0 <col:23> 'struct desc_struct *' lvalue Var 0x150140c68 'desc' 'struct desc_struct *'
