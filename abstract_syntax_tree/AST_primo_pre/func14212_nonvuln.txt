`-FunctionDecl 0x157928230  line:1:13 _cmd_window_show_opt 'void (const char *, int)' static
  |-ParmVarDecl 0x1579280d8 <col:34, col:46> col:46 used data 'const char *'
  |-ParmVarDecl 0x157928158 <col:52, col:56> col:56 used right 'int'
  `-CompoundStmt 0x161008898 <line:2:1, line:43:1>
    |-IfStmt 0x1579285e8 <line:6:2, col:62>
    | |-BinaryOperator 0x157928410 <col:6, col:15> 'int' '=='
    | | |-ImplicitCastExpr 0x1579283f8 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1579283e0 <col:6, col:7> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x1579283b0 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x157928398 <col:7> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x157928378 <col:7> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'
    | | `-CharacterLiteral 0x1579283c8 <col:15> 'int' 0
    | `-CallExpr 0x1579285c0 <col:21, col:62> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x157928540 <col:21> 'int ()' Function 0x157928488 'cmd_return_error' 'int ()'
    |   `-RecoveryExpr 0x1579285a0 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x160008f98 <line:8:2, line:16:2> has_else
    | |-CallExpr 0x157928788 <line:8:6, col:27> 'int'
    | | |-ImplicitCastExpr 0x157928770 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1579286e8 <col:6> 'int ()' Function 0x157928630 'is_numeric' 'int ()'
    | | |-ImplicitCastExpr 0x1579287b8 <col:17> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x157928708 <col:17> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'
    | | `-CharacterLiteral 0x157928728 <col:23> 'int' 0
    | |-CompoundStmt 0x160008dc0 <col:30, line:14:2>
    | | `-IfStmt 0x160008da0 <line:10:3, line:13:3>
    | |   |-BinaryOperator 0x160008b20 <line:10:7, col:17> 'int' contains-errors '=='
    | |   | |-RecoveryExpr 0x160008ae0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x160008b00 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-CompoundStmt 0x160008d88 <col:23, line:13:3>
    | |     `-CallExpr 0x160008d48 <line:11:4, line:12:35> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x160008c20 <line:11:4> 'int ()' Function 0x160008b68 'printformat_window' 'int ()'
    | |       |-RecoveryExpr 0x160008ce8 <col:23> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x160008d08 <col:35> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x160008d28 <line:12:9> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x160008c88 <col:31> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'
    | `-CompoundStmt 0x160008f88 <line:14:9, line:16:2>
    |-IfStmt 0x160009148 <line:18:2, line:19:3>
    | |-RecoveryExpr 0x160009118 <line:18:6, col:48> '_Bool' contains-errors
    | `-ReturnStmt 0x160009138 <line:19:3>
    |-IfStmt 0x1600094e0 <line:21:2, line:27:2>
    | |-RecoveryExpr 0x160009268 <line:21:6, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x1600094c8 <col:34, line:27:2>
    |   `-IfStmt 0x1600094a8 <line:22:3, line:26:3>
    |     |-UnaryOperator 0x160009448 <line:22:7, col:31> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x160009408 <col:8, col:31> 'int'
    |     |   |-ImplicitCastExpr 0x1600093f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x160009368 <col:8> 'int ()' Function 0x1600092b0 'settings_get_bool' 'int ()'
    |     |   `-ImplicitCastExpr 0x160009430 <col:26> 'char *' <ArrayToPointerDecay>
    |     |     `-StringLiteral 0x1600093d0 <col:26> 'char[4]' lvalue "STR"
    |     `-CompoundStmt 0x160009490 <col:34, line:26:3>
    |       `-ReturnStmt 0x160009480 <line:25:4>
    `-IfStmt 0x1600096e0 <line:30:2, line:33:2>
      |-RecoveryExpr 0x160009678 <line:30:6, col:16> '_Bool' contains-errors
      `-CompoundStmt 0x1600096c8 <col:22, line:33:2>
        `-ReturnStmt 0x1600096b8 <line:32:3>
