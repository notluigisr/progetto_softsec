`-FunctionDecl 0x147827438  line:1:1 invalid xfs_readlink_by_handle 'int (struct file *, int *)'
  |-ParmVarDecl 0x14780e248 <line:2:2, col:16> col:16 used parfilp 'struct file *'
  |-ParmVarDecl 0x14780e318 <line:3:2, col:24> col:24 invalid hreq 'int *'
  `-CompoundStmt 0x14782f7b8 <line:4:1, line:46:1>
    |-DeclStmt 0x1478276d8 <line:5:2, col:24>
    | |-RecordDecl 0x1478274f0 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x147827658 <col:2, col:18> col:18 used dentry 'struct dentry *'
    |-DeclStmt 0x147827770 <line:7:2, col:14>
    | `-VarDecl 0x147827708 <col:2, col:10> col:10 used link 'void *'
    |-DeclStmt 0x147827808 <line:8:2, col:13>
    | `-VarDecl 0x1478277a0 <col:2, col:8> col:8 used error 'int'
    |-IfStmt 0x147827c20 <line:10:2, line:11:26>
    | |-UnaryOperator 0x147827a40 <line:10:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x147827a18 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x147827980 <col:7> 'int ()' Function 0x1478278c8 'capable' 'int ()'
    | |   `-RecoveryExpr 0x1478279f8 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x147827c10 <line:11:3, col:26>
    |   `-UnaryOperator 0x147827bf8 <col:10, col:26> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-CallExpr 0x147827bd0 <col:11, col:26> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x147827b38 <col:11> 'int ()' Function 0x147827a80 'XFS_ERROR' 'int ()'
    |       `-RecoveryExpr 0x147827bb0 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x147827dd0 <line:13:2, col:48> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x147827c40 <col:2> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    | `-CallExpr 0x147827da0 <col:11, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x147827d40 <col:11> 'int ()' Function 0x147827c88 'xfs_handlereq_to_dentry' 'int ()'
    |   |-DeclRefExpr 0x147827d60 <col:35> 'struct file *' lvalue ParmVar 0x14780e248 'parfilp' 'struct file *'
    |   `-RecoveryExpr 0x147827d80 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x147828120 <line:14:2, line:15:24>
    | |-CallExpr 0x147827f58 <line:14:6, col:19> 'int'
    | | |-ImplicitCastExpr 0x147827f40 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x147827ed0 <col:6> 'int ()' Function 0x147827e18 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x147827f80 <col:13> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x147827ef0 <col:13> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    | `-ReturnStmt 0x147828110 <line:15:3, col:24>
    |   `-CallExpr 0x1478280d0 <col:10, col:24> 'int'
    |     |-ImplicitCastExpr 0x1478280b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x147828078 <col:10> 'int ()' Function 0x147827fc0 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x1478280f8 <col:18> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x147828098 <col:18> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    |-IfStmt 0x1478292e8 <line:18:2, line:21:2>
    | |-UnaryOperator 0x147828310 <line:18:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1478282e8 <col:7, col:38> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x147828220 <col:7> 'int ()' Function 0x147828168 'S_ISLNK' 'int ()'
    | |   `-CXXDependentScopeMemberExpr 0x1478282a0 <col:15, col:32> '<dependent type>' contains-errors lvalue ->i_mode
    | |     `-RecoveryExpr 0x147828278 <col:15, col:23> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x147828240 <col:15> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    | `-CompoundStmt 0x1478292c8 <col:41, line:21:2>
    |   |-BinaryOperator 0x147829240 <line:19:3, col:28> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x147828328 <col:3> 'int' lvalue Var 0x1478277a0 'error' 'int'
    |   | `-UnaryOperator 0x147829228 <col:11, col:28> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-CallExpr 0x147829200 <col:12, col:28> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x147828348 <col:12> 'int ()' Function 0x147827a80 'XFS_ERROR' 'int ()'
    |   |     `-RecoveryExpr 0x1478283e0 <col:22> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1478292b0 <line:20:3, col:8> 'out_dput' 0x147829260
    |-IfStmt 0x147829648 <line:23:2, line:26:2>
    | |-RecoveryExpr 0x1478294b8 <line:23:6, col:57> '_Bool' contains-errors
    | `-CompoundStmt 0x147829628 <col:60, line:26:2>
    |   |-BinaryOperator 0x1478295f0 <line:24:3, col:28> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1478294d8 <col:3> 'int' lvalue Var 0x1478277a0 'error' 'int'
    |   | `-UnaryOperator 0x1478295d8 <col:11, col:28> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-CallExpr 0x1478295b0 <col:12, col:28> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1478294f8 <col:12> 'int ()' Function 0x147827a80 'XFS_ERROR' 'int ()'
    |   |     `-RecoveryExpr 0x147829590 <col:22> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x147829610 <line:25:3, col:8> 'out_dput' 0x147829260
    |-BinaryOperator 0x1478298d8 <line:28:2, col:41> 'void *' contains-errors '='
    | |-DeclRefExpr 0x147829668 <col:2> 'void *' lvalue Var 0x147827708 'link' 'void *'
    | `-CallExpr 0x1478298a8 <col:9, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x147829768 <col:9> 'int ()' Function 0x1478296b0 'kmalloc' 'int ()'
    |   |-BinaryOperator 0x147829868 <col:17, col:28> '<dependent type>' contains-errors '+'
    |   | |-RecoveryExpr 0x147829848 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x1478297a0 <col:28> 'int' 1
    |   `-RecoveryExpr 0x147829888 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1478299b8 <line:29:2, line:32:2>
    | |-UnaryOperator 0x147829930 <line:29:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x147829918 <col:7> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1478298f8 <col:7> 'void *' lvalue Var 0x147827708 'link' 'void *'
    | `-CompoundStmt 0x1478299a0 <col:13, line:32:2>
    |   `-GotoStmt 0x147829988 <line:31:3, col:8> 'out_dput' 0x147829260
    |-BinaryOperator 0x147829ce8 <line:34:2, col:52> 'int' contains-errors '='
    | |-DeclRefExpr 0x1478299d8 <col:2> 'int' lvalue Var 0x1478277a0 'error' 'int'
    | `-UnaryOperator 0x147829cd0 <col:10, col:52> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-CallExpr 0x147829ca0 <col:11, col:52> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x147829ad8 <col:11> 'int ()' Function 0x147829a20 'xfs_readlink' 'int ()'
    |     |-CallExpr 0x147829c58 <col:24, col:45> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x147829bd8 <col:24> 'int ()' Function 0x147829b20 'XFS_I' 'int ()'
    |     | `-RecoveryExpr 0x147829c30 <col:30, col:38> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x147829bf8 <col:30> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    |     `-DeclRefExpr 0x147829c80 <col:48> 'void *' lvalue Var 0x147827708 'link' 'void *'
    |-IfStmt 0x147829da8 <line:35:2, line:36:8>
    | |-ImplicitCastExpr 0x147829d28 <line:35:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x147829d08 <col:6> 'int' lvalue Var 0x1478277a0 'error' 'int'
    | `-GotoStmt 0x147829d90 <line:36:3, col:8> 'out_kfree' 0x147829d40
    |-IfStmt 0x147829fc0 <line:38:2, line:39:8>
    | |-ImplicitCastExpr 0x147829f90 <line:38:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x147829f70 <col:6> 'int' lvalue Var 0x1478277a0 'error' 'int'
    | `-GotoStmt 0x147829fa8 <line:39:3, col:8> 'out_kfree' 0x147829d40
    |-LabelStmt 0x14782a158 <line:41:2, line:42:12> 'out_kfree'
    | `-CallExpr 0x14782a118 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x14782a100 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14782a0c0 <col:2> 'int ()' Function 0x14782a008 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14782a140 <col:8> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x14782a0e0 <col:8> 'void *' lvalue Var 0x147827708 'link' 'void *'
    |-LabelStmt 0x14782f750 <line:43:2, line:44:13> 'out_dput'
    | `-CallExpr 0x14782f710 <col:2, col:13> 'int'
    |   |-ImplicitCastExpr 0x14782f6f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14782f6b8 <col:2> 'int ()' Function 0x14782f600 'dput' 'int ()'
    |   `-ImplicitCastExpr 0x14782f738 <col:7> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x14782f6d8 <col:7> 'struct dentry *' lvalue Var 0x147827658 'dentry' 'struct dentry *'
    `-ReturnStmt 0x14782f7a8 <line:45:2, col:9>
      `-ImplicitCastExpr 0x14782f790 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14782f770 <col:9> 'int' lvalue Var 0x1478277a0 'error' 'int'
