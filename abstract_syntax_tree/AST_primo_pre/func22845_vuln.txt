`-FunctionDecl 0x123140bf8  line:1:1 arch_get_unmapped_area 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'
  |-ParmVarDecl 0x123128648 <col:24, col:37> col:37 used filp 'struct file *'
  |-ParmVarDecl 0x1231286c8 <col:43, col:57> col:57 used addr 'unsigned long'
  |-ParmVarDecl 0x123128748 <line:2:3, col:17> col:17 used len 'unsigned long'
  |-ParmVarDecl 0x123140a00 <col:22, col:36> col:36 used pgoff 'unsigned long'
  |-ParmVarDecl 0x123140a80 <col:43, col:57> col:57 used flags 'unsigned long'
  `-CompoundStmt 0x123144ae0 <line:3:1, line:44:1>
    |-DeclStmt 0x123140fd8 <line:4:2, col:36>
    | |-RecordDecl 0x123140d10 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x123140e78 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x123140f78 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x123140f58 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1231411d8 <line:5:2, col:28>
    | |-RecordDecl 0x123140ff0 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x123141158 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x123141290 <line:6:2, col:18>
    | `-VarDecl 0x123141208 <col:2, col:17> col:6 used do_align 'int' cinit
    |   `-IntegerLiteral 0x123141270 <col:17> 'int' 0
    |-DeclStmt 0x1231414c8 <line:7:2, col:41>
    | `-VarDecl 0x1231412c0 <col:2, col:40> col:6 used aliasing 'int' cinit
    |   `-CallExpr 0x1231414a8 <col:17, col:40> 'int'
    |     `-ImplicitCastExpr 0x123141490 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x123141440 <col:17> 'int ()' Function 0x123141388 'cache_is_vipt_aliasing' 'int ()'
    |-DeclStmt 0x123141658 <line:8:2, col:35>
    | |-RecordDecl 0x1231414e0 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x1231415d8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x1231430b0 <line:15:2, line:20:2>
    | |-BinaryOperator 0x1231417b8 <line:15:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x123141740 <col:6> 'unsigned long' lvalue ParmVar 0x123140a80 'flags' 'unsigned long'
    | | `-RecoveryExpr 0x123141798 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x123143090 <col:25, line:20:2>
    |   |-IfStmt 0x123143010 <line:16:3, line:18:12>
    |   | |-RecoveryExpr 0x123141940 <line:16:7, line:17:51> '_Bool' contains-errors
    |   | `-ReturnStmt 0x123143000 <line:18:4, col:12>
    |   |   `-UnaryOperator 0x1231419e0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1231419c8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1231419a8 <col:12> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x123143080 <line:19:3, col:10>
    |     `-ImplicitCastExpr 0x123143068 <col:10> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x123143050 <col:10> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x123143030 <col:10> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |-IfStmt 0x123143210 <line:22:2, line:23:11>
    | |-BinaryOperator 0x123143148 <line:22:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x1231430d0 <col:6> 'unsigned long' lvalue ParmVar 0x123128748 'len' 'unsigned long'
    | | `-RecoveryExpr 0x123143128 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123143200 <line:23:3, col:11>
    |   `-UnaryOperator 0x1231431e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1231431d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1231431b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123143de0 <line:25:2, line:35:2>
    | |-ImplicitCastExpr 0x123143250 <line:25:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x123143230 <col:6> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    | `-CompoundStmt 0x123143db8 <col:12, line:35:2>
    |   |-IfStmt 0x123143680 <line:26:3, line:29:26> has_else
    |   | |-ImplicitCastExpr 0x123143288 <line:26:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x123143268 <col:7> 'int' lvalue Var 0x123141208 'do_align' 'int'
    |   | |-BinaryOperator 0x123143490 <line:27:4, col:35> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x1231432a0 <col:4> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x123143478 <col:11, col:35> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x123143418 <col:11, col:35> 'int'
    |   | |     |-ImplicitCastExpr 0x123143400 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x1231433a0 <col:11> 'int ()' Function 0x1231432e8 'COLOUR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x123143448 <col:24> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x1231433c0 <col:24> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |   | |     `-ImplicitCastExpr 0x123143460 <col:30> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x1231433e0 <col:30> 'unsigned long' lvalue ParmVar 0x123140a00 'pgoff' 'unsigned long'
    |   | `-BinaryOperator 0x123143660 <line:29:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x1231434b0 <col:4> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x123143648 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x123143608 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x1231435f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1231435b0 <col:11> 'int ()' Function 0x1231434f8 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x123143630 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x1231435d0 <col:22> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |   |-BinaryOperator 0x1231438a0 <line:31:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x1231436b0 <col:3> 'struct vm_area_struct *' lvalue Var 0x123141158 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x123143888 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x123143828 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x123143810 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1231437b0 <col:9> 'int ()' Function 0x1231436f8 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x123143858 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1231437d0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x123140e78 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x123143870 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1231437f0 <col:22> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |   `-IfStmt 0x123143d98 <line:32:3, line:34:11>
    |     |-BinaryOperator 0x123143d18 <line:32:7, line:33:43> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x123143c18 <line:32:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x123143bf8 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x123143bd8 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x1231438d8 <col:19> 'unsigned long' lvalue ParmVar 0x123128748 'len' 'unsigned long'
    |     | | `-DeclRefExpr 0x123143918 <col:26> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |     | `-ParenExpr 0x123143cf8 <line:33:7, col:43> 'int' contains-errors
    |     |   `-BinaryOperator 0x123143cd8 <col:8, col:35> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x123143c50 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x123143c38 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x123143958 <col:9> 'struct vm_area_struct *' lvalue Var 0x123141158 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x123143cb8 <col:16, col:35> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x123143c98 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x123143c68 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x1231439a8 <col:16> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x123143c80 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x1231439c8 <col:23> 'unsigned long' lvalue ParmVar 0x123128748 'len' 'unsigned long'
    |     |       `-RecoveryExpr 0x123143a70 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x123143a38 <col:30> 'struct vm_area_struct *' lvalue Var 0x123141158 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x123143d88 <line:34:4, col:11>
    |       `-ImplicitCastExpr 0x123143d70 <col:11> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x123143d58 <col:11> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x123143d38 <col:11> 'unsigned long' lvalue ParmVar 0x1231286c8 'addr' 'unsigned long'
    |-BinaryOperator 0x123143eb0 <line:37:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123143e48 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x123143e20 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x123143e00 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x1231415d8 'info' 'struct vm_unmapped_area_info'
    | `-IntegerLiteral 0x123143e90 <col:15> 'int' 0
    |-BinaryOperator 0x123143f80 <line:38:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123143f18 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x123143ef0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x123143ed0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x1231415d8 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x123143f60 <col:16> 'unsigned long' lvalue ParmVar 0x123128748 'len' 'unsigned long'
    |-BinaryOperator 0x1231446a8 <line:39:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123144600 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x123143fc0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x123143fa0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x1231415d8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x123144680 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x123144648 <col:19> 'struct mm_struct *' contains-errors lvalue Var 0x123140e78 'mm' 'struct mm_struct *'
    |-BinaryOperator 0x1231447b0 <line:40:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123144710 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x1231446e8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1231446c8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x1231415d8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x123144790 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x123144ad0 <line:43:2, col:31>
      `-CallExpr 0x123144aa8 <col:9, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x123144a50 <col:9> 'int ()' Function 0x123144998 'vm_unmapped_area' 'int ()'
        `-UnaryOperator 0x123144a90 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x123144a70 <col:27> '<dependent type>' contains-errors lvalue
