`-FunctionDecl 0x13800df78  line:1:5 invalid walk_items_for_table_list 'int (int, int, void *, int)'
  |-ParmVarDecl 0x13800dcf0 <col:31, col:46> col:46 invalid processor 'int'
  |-ParmVarDecl 0x13800dd70 <line:2:31, col:36> col:36 invalid walk_subquery 'int'
  |-ParmVarDecl 0x13800ddf0 <col:51, col:57> col:57 used argument 'void *'
  |-ParmVarDecl 0x13800de70 <line:3:31, <invalid sloc>> col:35 invalid 'int'
  `-CompoundStmt 0x138809d00 <line:4:1, line:22:1>
    |-DeclStmt 0x13800e290 <line:6:3, col:10>
    | `-VarDecl 0x13800e228 <col:3, col:7> col:7 used res 'int'
    |-WhileStmt 0x138809cb0 <line:7:3, line:20:3>
    | |-BinaryOperator 0x138809638 <line:7:10, col:31> '<dependent type>' contains-errors '='
    | | |-BinaryOperator 0x138809618 <col:10, col:22> '<dependent type>' contains-errors '*'
    | | | |-RecoveryExpr 0x1388095d8 <col:10> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x1388095f8 <col:22> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x138809590 <col:29, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13800e2f8 <col:29> 'int ()' Function 0x13800e0f8 'li' 'int ()'
    | `-CompoundStmt 0x138809c90 <line:8:3, line:20:3>
    |   |-IfStmt 0x138809940 <line:9:5, line:13:5>
    |   | |-CXXDependentScopeMemberExpr 0x1388096d8 <line:9:9, col:16> '<dependent type>' contains-errors lvalue ->on_expr
    |   | | `-RecoveryExpr 0x1388096b8 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x138809928 <line:10:5, line:13:5>
    |   |   `-IfStmt 0x138809908 <line:11:7, line:12:16>
    |   |     |-RecoveryExpr 0x1388098a0 <line:11:11, col:73> '_Bool' contains-errors
    |   |     `-ReturnStmt 0x1388098f8 <line:12:9, col:16>
    |   |       `-ImplicitCastExpr 0x1388098e0 <col:16> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x1388098c0 <col:16> 'int' lvalue Var 0x13800e228 'res' 'int'
    |   `-IfStmt 0x138809c70 <line:14:5, line:19:5>
    |     |-CXXDependentScopeMemberExpr 0x1388099e0 <line:14:9, col:16> '<dependent type>' contains-errors lvalue ->nested_join
    |     | `-RecoveryExpr 0x1388099c0 <col:9> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x138809c58 <line:15:5, line:19:5>
    |       `-IfStmt 0x138809c38 <line:16:7, line:18:16>
    |         |-RecoveryExpr 0x138809bd0 <line:16:11, line:17:73> '_Bool' contains-errors
    |         `-ReturnStmt 0x138809c28 <line:18:9, col:16>
    |           `-ImplicitCastExpr 0x138809c10 <col:16> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x138809bf0 <col:16> 'int' lvalue Var 0x13800e228 'res' 'int'
    `-ReturnStmt 0x138809cf0 <line:21:3, col:10>
      `-IntegerLiteral 0x138809cd0 <col:10> 'int' 0
