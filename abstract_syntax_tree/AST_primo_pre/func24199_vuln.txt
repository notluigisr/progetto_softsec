`-FunctionDecl 0x13f0267a8  line:1:12 scm_fp_copy 'int (struct cmsghdr *, struct scm_fp_list **)' static
  |-ParmVarDecl 0x13f00e248 <col:24, col:40> col:40 used cmsg 'struct cmsghdr *'
  |-ParmVarDecl 0x13f026688 <col:46, col:67> col:67 used fplp 'struct scm_fp_list **'
  `-CompoundStmt 0x13f02fa00 <line:2:1, line:43:1>
    |-DeclStmt 0x13f026b98 <line:3:2, col:34>
    | `-VarDecl 0x13f0268f8 <col:2, col:33> col:7 used fdp 'int *' cinit
    |   `-CStyleCastExpr 0x13f026b70 <col:13, col:33> 'int *' <IntegralToPointer>
    |     `-CallExpr 0x13f026b18 <col:19, col:33> 'int'
    |       |-ImplicitCastExpr 0x13f026b00 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13f026a90 <col:19> 'int ()' Function 0x13f0269d8 'CMSG_DATA' 'int ()'
    |       `-ImplicitCastExpr 0x13f026b40 <col:29> 'struct cmsghdr *' <LValueToRValue>
    |         `-DeclRefExpr 0x13f026ab0 <col:29> 'struct cmsghdr *' lvalue ParmVar 0x13f00e248 'cmsg' 'struct cmsghdr *'
    |-DeclStmt 0x13f026d08 <line:4:2, col:33>
    | `-VarDecl 0x13f026c38 <col:2, col:29> col:22 used fpl 'struct scm_fp_list *' cinit
    |   `-ImplicitCastExpr 0x13f026cf0 <col:28, col:29> 'struct scm_fp_list *' <LValueToRValue>
    |     `-UnaryOperator 0x13f026cd8 <col:28, col:29> 'struct scm_fp_list *' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x13f026cc0 <col:29> 'struct scm_fp_list **' <LValueToRValue>
    |         `-DeclRefExpr 0x13f026ca0 <col:29> 'struct scm_fp_list **' lvalue ParmVar 0x13f026688 'fplp' 'struct scm_fp_list **'
    |-DeclStmt 0x13f026f68 <line:5:2, col:19>
    | |-RecordDecl 0x13f026d20 <col:2, col:9> col:9 struct file
    | `-VarDecl 0x13f026ee8 <col:2, col:16> col:16 used fpp 'struct file **'
    |-DeclStmt 0x13f027098 <line:6:2, col:12>
    | |-VarDecl 0x13f026f98 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x13f027018 <col:2, col:9> col:9 used num 'int'
    |-IfStmt 0x13f027360 <line:10:2, line:11:10>
    | |-BinaryOperator 0x13f027310 <line:10:6, col:13> 'int' '<='
    | | |-ImplicitCastExpr 0x13f0272f8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f0272b8 <col:6> 'int' lvalue Var 0x13f027018 'num' 'int'
    | | `-IntegerLiteral 0x13f0272d8 <col:13> 'int' 0
    | `-ReturnStmt 0x13f027350 <line:11:3, col:10>
    |   `-IntegerLiteral 0x13f027330 <col:10> 'int' 0
    |-IfStmt 0x13f0274c0 <line:13:2, line:14:11>
    | |-BinaryOperator 0x13f0273f8 <line:13:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x13f027380 <col:6> 'int' lvalue Var 0x13f027018 'num' 'int'
    | | `-RecoveryExpr 0x13f0273d8 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13f0274b0 <line:14:3, col:11>
    |   `-UnaryOperator 0x13f027498 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13f027480 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13f027460 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f02a878 <line:16:2, line:24:2>
    | |-UnaryOperator 0x13f027518 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13f027500 <col:7> 'struct scm_fp_list *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f0274e0 <col:7> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    | `-CompoundStmt 0x13f02a848 <line:17:2, line:24:2>
    |   |-IfStmt 0x13f02a608 <line:19:3, line:20:12>
    |   | |-UnaryOperator 0x13f02a548 <line:19:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x13f02a530 <col:8> 'struct scm_fp_list *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13f02a510 <col:8> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |   | `-ReturnStmt 0x13f02a5f8 <line:20:4, col:12>
    |   |   `-UnaryOperator 0x13f02a5e0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x13f02a5c8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13f02a5a8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13f02a6b0 <line:21:3, col:11> 'struct scm_fp_list *' '='
    |   | |-UnaryOperator 0x13f02a660 <col:3, col:4> 'struct scm_fp_list *' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x13f02a648 <col:4> 'struct scm_fp_list **' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13f02a628 <col:4> 'struct scm_fp_list **' lvalue ParmVar 0x13f026688 'fplp' 'struct scm_fp_list **'
    |   | `-ImplicitCastExpr 0x13f02a698 <col:11> 'struct scm_fp_list *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13f02a678 <col:11> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |   |-BinaryOperator 0x13f02a750 <line:22:3, col:16> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13f02a708 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13f02a6d0 <col:3> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |   | `-IntegerLiteral 0x13f02a730 <col:16> 'int' 0
    |   `-BinaryOperator 0x13f02a828 <line:23:3, col:14> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x13f02a7a8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13f02a770 <col:3> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |     `-RecoveryExpr 0x13f02a808 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13f02a9e0 <line:25:2, col:27> 'struct file **' contains-errors '='
    | |-DeclRefExpr 0x13f02a898 <col:2> 'struct file **' lvalue Var 0x13f026ee8 'fpp' 'struct file **'
    | `-UnaryOperator 0x13f02a9c8 <col:8, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x13f02a9a8 <col:9, col:27> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x13f02a978 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x13f02a8f0 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x13f02a8b8 <col:9> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |     `-ImplicitCastExpr 0x13f02a990 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13f02a950 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13f02a918 <col:17> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    |-IfStmt 0x13f02abc8 <line:27:2, line:28:11>
    | |-BinaryOperator 0x13f02ab00 <line:27:6, col:30> 'int' contains-errors '>'
    | | |-BinaryOperator 0x13f02aa80 <col:6, col:19> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x13f02aa38 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x13f02aa00 <col:6> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    | | | `-DeclRefExpr 0x13f02aa60 <col:19> 'int' lvalue Var 0x13f027018 'num' 'int'
    | | `-RecoveryExpr 0x13f02aad8 <col:25, col:30> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13f02aaa0 <col:25> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    | `-ReturnStmt 0x13f02abb8 <line:28:3, col:11>
    |   `-UnaryOperator 0x13f02aba0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13f02ab88 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13f02ab68 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x13f02b348 <line:32:2, line:41:2>
    | |-BinaryOperator 0x13f02ac28 <line:32:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x13f02abe8 <col:7> 'int' lvalue Var 0x13f026f98 'i' 'int'
    | | `-IntegerLiteral 0x13f02ac08 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13f02acb8 <col:12, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x13f02ac88 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f02ac48 <col:12> 'int' lvalue Var 0x13f026f98 'i' 'int'
    | | `-ImplicitCastExpr 0x13f02aca0 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f02ac68 <col:15> 'int' lvalue Var 0x13f027018 'num' 'int'
    | |-UnaryOperator 0x13f02acf8 <col:20, col:21> 'int' postfix '++'
    | | `-DeclRefExpr 0x13f02acd8 <col:20> 'int' lvalue Var 0x13f026f98 'i' 'int'
    | `-CompoundStmt 0x13f02b318 <line:33:2, line:41:2>
    |   |-DeclStmt 0x13f02ae38 <line:34:3, col:18>
    |   | `-VarDecl 0x13f02ad28 <col:3, col:17> col:7 used fd 'int' cinit
    |   |   `-ImplicitCastExpr 0x13f02ae20 <col:12, col:17> 'int' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x13f02ae00 <col:12, col:17> 'int' lvalue
    |   |       |-ImplicitCastExpr 0x13f02add0 <col:12> 'int *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x13f02ad90 <col:12> 'int *' lvalue Var 0x13f0268f8 'fdp' 'int *'
    |   |       `-ImplicitCastExpr 0x13f02ade8 <col:16> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13f02adb0 <col:16> 'int' lvalue Var 0x13f026f98 'i' 'int'
    |   |-DeclStmt 0x13f02af40 <line:35:3, col:20>
    |   | `-VarDecl 0x13f02aed8 <col:3, col:16> col:16 used file 'struct file *'
    |   |-BinaryOperator 0x13f02b280 <line:39:3, col:12> 'struct file *' '='
    |   | |-UnaryOperator 0x13f02b230 <col:3, col:7> 'struct file *' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x13f02b218 <col:4, col:7> 'struct file **' postfix '++'
    |   | |   `-DeclRefExpr 0x13f02b1f8 <col:4> 'struct file **' lvalue Var 0x13f026ee8 'fpp' 'struct file **'
    |   | `-ImplicitCastExpr 0x13f02b268 <col:12> 'struct file *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13f02b248 <col:12> 'struct file *' lvalue Var 0x13f02aed8 'file' 'struct file *'
    |   `-UnaryOperator 0x13f02b300 <line:40:3, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-RecoveryExpr 0x13f02b2d8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13f02b2a0 <col:3> 'struct scm_fp_list *' lvalue Var 0x13f026c38 'fpl' 'struct scm_fp_list *'
    `-ReturnStmt 0x13f02b3b8 <line:42:2, col:9>
      `-ImplicitCastExpr 0x13f02b3a0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13f02b380 <col:9> 'int' lvalue Var 0x13f027018 'num' 'int'
