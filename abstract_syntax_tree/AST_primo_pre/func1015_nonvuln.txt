`-FunctionDecl 0x136128758  line:1:12 ext4_acquire_dquot 'int (struct dquot *)' static
  |-ParmVarDecl 0x136128648 <col:31, col:45> col:45 used dquot 'struct dquot *'
  `-CompoundStmt 0x136145a50 <line:2:1, line:15:1>
    |-DeclStmt 0x136144d68 <line:3:2, col:14>
    | |-VarDecl 0x136144c68 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x136144ce8 <col:2, col:11> col:11 used err 'int'
    |-IfStmt 0x136145560 <line:8:2, line:9:24>
    | |-CallExpr 0x1361453a0 <line:8:6, col:19> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x136145320 <col:6> 'int ()' Function 0x136145268 'IS_ERR' 'int ()'
    | | `-RecoveryExpr 0x136145380 <col:13> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x136145550 <line:9:3, col:24>
    |   `-CallExpr 0x136145528 <col:10, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1361454a8 <col:10> 'int ()' Function 0x1361453f0 'PTR_ERR' 'int ()'
    |     `-RecoveryExpr 0x136145508 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136145718 <line:10:2, col:27> 'int' '='
    | |-DeclRefExpr 0x136145580 <col:2> 'int' lvalue Var 0x136144c68 'ret' 'int'
    | `-CallExpr 0x1361456d8 <col:8, col:27> 'int'
    |   |-ImplicitCastExpr 0x1361456c0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x136145680 <col:8> 'int ()' Function 0x1361455c8 'dquot_acquire' 'int ()'
    |   `-ImplicitCastExpr 0x136145700 <col:22> 'struct dquot *' <LValueToRValue>
    |     `-DeclRefExpr 0x1361456a0 <col:22> 'struct dquot *' lvalue ParmVar 0x136128648 'dquot' 'struct dquot *'
    |-BinaryOperator 0x136145900 <line:11:2, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x136145738 <col:2> 'int' lvalue Var 0x136144ce8 'err' 'int'
    | `-CallExpr 0x1361458d8 <col:8, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x136145838 <col:8> 'int ()' Function 0x136145780 'ext4_journal_stop' 'int ()'
    |   `-RecoveryExpr 0x1361458b8 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1361459e8 <line:12:2, line:13:9>
    | |-UnaryOperator 0x136145958 <line:12:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x136145940 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x136145920 <col:7> 'int' lvalue Var 0x136144c68 'ret' 'int'
    | `-BinaryOperator 0x1361459c8 <line:13:3, col:9> 'int' '='
    |   |-DeclRefExpr 0x136145970 <col:3> 'int' lvalue Var 0x136144c68 'ret' 'int'
    |   `-ImplicitCastExpr 0x1361459b0 <col:9> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x136145990 <col:9> 'int' lvalue Var 0x136144ce8 'err' 'int'
    `-ReturnStmt 0x136145a40 <line:14:2, col:9>
      `-ImplicitCastExpr 0x136145a28 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136145a08 <col:9> 'int' lvalue Var 0x136144c68 'ret' 'int'
