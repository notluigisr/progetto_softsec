`-FunctionDecl 0x139026748  line:1:12 dn_nl_deladdr 'int (struct sk_buff *, struct nlmsghdr *)' static
  |-ParmVarDecl 0x13900e248 <col:26, col:42> col:42 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x139026628 <col:47, col:64> col:64 used nlh 'struct nlmsghdr *'
  `-CompoundStmt 0x13902efe8 <line:2:1, line:43:1>
    |-DeclStmt 0x139026c10 <line:3:2, col:37>
    | |-RecordDecl 0x139026848 <col:2, col:9> col:9 struct net
    | `-VarDecl 0x1390269b8 <col:2, col:36> col:14 used net 'struct net *' cinit
    |   `-CallExpr 0x139026bd0 <col:20, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x139026b50 <col:20> 'int ()' Function 0x139026a98 'sock_net' 'int ()'
    |     `-RecoveryExpr 0x139026ba8 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x139026b70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x13900e248 'skb' 'struct sk_buff *'
    |-DeclStmt 0x139026e78 <line:4:2, col:30>
    | |-RecordDecl 0x139026c28 <col:2, col:9> col:9 struct nlattr
    | `-VarDecl 0x139026df8 <col:2, col:17> col:17 invalid tb 'struct nlattr *'
    |-DeclStmt 0x139027078 <line:5:2, col:22>
    | |-RecordDecl 0x139026e90 <col:2, col:9> col:9 struct dn_dev
    | `-VarDecl 0x139026ff8 <col:2, col:17> col:17 used dn_db 'struct dn_dev *'
    |-DeclStmt 0x139027278 <line:6:2, col:23>
    | |-RecordDecl 0x139027090 <col:2, col:9> col:9 struct ifaddrmsg
    | `-VarDecl 0x1390271f8 <col:2, col:20> col:20 used ifm 'struct ifaddrmsg *'
    |-DeclStmt 0x139027478 <line:7:2, col:23>
    | |-RecordDecl 0x139027290 <col:2, col:9> col:9 struct dn_ifaddr
    | `-VarDecl 0x1390273f8 <col:2, col:20> col:20 used ifa 'struct dn_ifaddr *'
    |-DeclStmt 0x139027548 <line:8:2, col:25>
    | `-VarDecl 0x1390274e0 <col:2, col:19> col:19 invalid __rcu 'struct dn_ifaddr'
    |-DeclStmt 0x13902d080 <line:9:2, col:19>
    | `-VarDecl 0x139027578 <col:2, col:13> col:6 used err 'int' cinit
    |   `-UnaryOperator 0x13902d068 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13902d050 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13902d030 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13902d2f8 <line:11:2, line:12:11>
    | |-UnaryOperator 0x13902d238 <line:11:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13902d210 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13902d178 <col:7> 'int ()' Function 0x13902d0c0 'capable' 'int ()'
    | |   `-RecoveryExpr 0x13902d1f0 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13902d2e8 <line:12:3, col:11>
    |   `-UnaryOperator 0x13902d2d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13902d2b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13902d298 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13902d598 <line:14:2, line:15:8>
    | |-UnaryOperator 0x13902d518 <line:14:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x13902d4e8 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13902d3f8 <col:7> 'int ()' Function 0x13902d340 'net_eq' 'int ()'
    | |   |-DeclRefExpr 0x13902d418 <col:14> 'struct net *' contains-errors lvalue Var 0x1390269b8 'net' 'struct net *'
    | |   `-UnaryOperator 0x13902d4d0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x13902d4b0 <col:20> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x13902d580 <line:15:3, col:8> 'errout' 0x13902d530
    |-IfStmt 0x13902d848 <line:18:2, line:19:8>
    | |-BinaryOperator 0x13902d810 <line:18:6, col:12> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x13902d7f8 <col:6> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x13902d7b8 <col:6> 'int' contains-errors lvalue Var 0x139027578 'err' 'int'
    | | `-IntegerLiteral 0x13902d7d8 <col:12> 'int' 0
    | `-GotoStmt 0x13902d830 <line:19:3, col:8> 'errout' 0x13902d530
    |-BinaryOperator 0x13902d940 <line:21:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x13902d868 <col:2> 'int' contains-errors lvalue Var 0x139027578 'err' 'int'
    | `-UnaryOperator 0x13902d928 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x13902d910 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x13902d8f0 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13902db40 <line:22:2, col:22> 'struct ifaddrmsg *' '='
    | |-DeclRefExpr 0x13902d960 <col:2> 'struct ifaddrmsg *' lvalue Var 0x1390271f8 'ifm' 'struct ifaddrmsg *'
    | `-ImplicitCastExpr 0x13902db28 <col:8, col:22> 'struct ifaddrmsg *' <IntegralToPointer>
    |   `-CallExpr 0x13902dae8 <col:8, col:22> 'int'
    |     |-ImplicitCastExpr 0x13902dad0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13902da60 <col:8> 'int ()' Function 0x13902d9a8 'nlmsg_data' 'int ()'
    |     `-ImplicitCastExpr 0x13902db10 <col:19> 'struct nlmsghdr *' <LValueToRValue>
    |       `-DeclRefExpr 0x13902da80 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x139026628 'nlh' 'struct nlmsghdr *'
    |-IfStmt 0x13902dd80 <line:23:2, line:24:8>
    | |-RecoveryExpr 0x13902dd48 <line:23:6, col:51> '_Bool' contains-errors
    | `-GotoStmt 0x13902dd68 <line:24:3, col:8> 'errout' 0x13902d530
    `-LabelStmt 0x13902efc8 <line:41:1, line:42:9> 'errout'
      `-ReturnStmt 0x13902efb8 <col:2, col:9>
        `-ImplicitCastExpr 0x13902efa0 <col:9> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x13902ef80 <col:9> 'int' contains-errors lvalue Var 0x139027578 'err' 'int'
