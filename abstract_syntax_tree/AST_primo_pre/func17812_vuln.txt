`-FunctionDecl 0x132941868  line:1:5 invalid dma_skb_copy_datagram_iovec 'int (struct dma_chan *, struct sk_buff *, int, struct iovec *, int, struct dma_pinned_list *)'
  |-ParmVarDecl 0x132928e48 <col:33, col:50> col:50 used chan 'struct dma_chan *'
  |-ParmVarDecl 0x132941228 <line:2:4, col:20> col:20 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x1329412a8 <col:25, col:29> col:29 used offset 'int'
  |-ParmVarDecl 0x132941478 <col:37, col:51> col:51 used to 'struct iovec *'
  |-ParmVarDecl 0x132941510 <line:3:4, col:11> col:11 referenced invalid len 'int'
  |-ParmVarDecl 0x1329416e8 <col:16, col:40> col:40 used pinned_list 'struct dma_pinned_list *'
  `-CompoundStmt 0x133009d38 <line:4:1, line:83:1>
    |-DeclStmt 0x132941be8 <line:5:2, col:30>
    | `-VarDecl 0x132941958 <col:2, col:29> col:6 used start 'int' cinit
    |   `-CallExpr 0x132941ba8 <col:14, col:29> 'int'
    |     |-ImplicitCastExpr 0x132941b90 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x132941b20 <col:14> 'int ()' Function 0x132941a68 'skb_headlen' 'int ()'
    |     `-ImplicitCastExpr 0x132941bd0 <col:26> 'struct sk_buff *' <LValueToRValue>
    |       `-DeclRefExpr 0x132941b40 <col:26> 'struct sk_buff *' lvalue ParmVar 0x132941228 'skb' 'struct sk_buff *'
    |-DeclStmt 0x132941da8 <line:6:2, col:30>
    | |-VarDecl 0x132941c18 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x132941c98 <col:2, col:24> col:9 used copy 'int' cinit
    |   `-BinaryOperator 0x132941d70 <col:16, col:24> 'int' '-'
    |     |-ImplicitCastExpr 0x132941d40 <col:16> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x132941d00 <col:16> 'int' lvalue Var 0x132941958 'start' 'int'
    |     `-ImplicitCastExpr 0x132941d58 <col:24> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x132941d20 <col:24> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |-DeclStmt 0x132941eb0 <line:7:2, col:27>
    | `-VarDecl 0x132941e48 <col:2, col:18> col:18 used frag_iter 'struct sk_buff *'
    |-IfStmt 0x1329439e8 <line:11:2, line:22:2>
    | |-BinaryOperator 0x132941f20 <line:11:6, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x132941f08 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132941ec8 <col:6> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | | `-IntegerLiteral 0x132941ee8 <col:13> 'int' 0
    | `-CompoundStmt 0x1329439b0 <col:16, line:22:2>
    |   |-IfStmt 0x132942000 <line:12:3, line:13:11>
    |   | |-BinaryOperator 0x132941f80 <line:12:7, col:14> 'int' contains-errors '>'
    |   | | |-DeclRefExpr 0x132941f40 <col:7> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   | | `-RecoveryExpr 0x132941f60 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x132941fe0 <line:13:4, col:11> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x132941fa0 <col:4> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   |   `-RecoveryExpr 0x132941fc0 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x132943788 <line:16:3, line:17:9>
    |   | |-BinaryOperator 0x132943700 <line:16:7, col:16> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x1329436e0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x1329436a0 <col:16> 'int' 0
    |   | `-GotoStmt 0x132943770 <line:17:4, col:9> 'fault' 0x132943720
    |   |-CompoundAssignOperator 0x132943810 <line:18:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x1329437c8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1329437a8 <col:3> 'int' lvalue ParmVar 0x132941510 'len' 'int'
    |   | `-DeclRefExpr 0x1329437f0 <col:10> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   |-IfStmt 0x132943908 <line:19:3, line:20:9>
    |   | |-BinaryOperator 0x132943880 <line:19:7, col:14> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x132943840 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x132943860 <col:14> 'int' 0
    |   | `-GotoStmt 0x1329438f0 <line:20:4, col:9> 'end' 0x1329438a0
    |   `-CompoundAssignOperator 0x132943980 <line:21:3, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x132943928 <col:3> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |     `-ImplicitCastExpr 0x132943968 <col:13> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x132943948 <col:13> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |-ForStmt 0x1330090b0 <line:25:2, line:49:2>
    | |-BinaryOperator 0x132943a48 <line:25:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x132943a08 <col:7> 'int' lvalue Var 0x132941c18 'i' 'int'
    | | `-IntegerLiteral 0x132943a28 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x132943c28 <col:14, col:35> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x132943a68 <col:14> 'int' lvalue Var 0x132941c18 'i' 'int'
    | | `-RecoveryExpr 0x132943c00 <col:18, col:35> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x132943bc0 <col:18, col:32> 'int'
    | |     |-ImplicitCastExpr 0x132943ba8 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x132943b68 <col:18> 'int ()' Function 0x132943ab0 'skb_shinfo' 'int ()'
    | |     `-ImplicitCastExpr 0x132943be8 <col:29> 'struct sk_buff *' <LValueToRValue>
    | |       `-DeclRefExpr 0x132943b88 <col:29> 'struct sk_buff *' lvalue ParmVar 0x132941228 'skb' 'struct sk_buff *'
    | |-UnaryOperator 0x132943c68 <col:45, col:46> 'int' postfix '++'
    | | `-DeclRefExpr 0x132943c48 <col:45> 'int' lvalue Var 0x132941c18 'i' 'int'
    | `-CompoundStmt 0x133009068 <col:50, line:49:2>
    |   |-DeclStmt 0x132943d00 <line:26:3, col:10>
    |   | `-VarDecl 0x132943c98 <col:3, col:7> col:7 used end 'int'
    |   |-DeclStmt 0x132943ee0 <line:27:3, col:54>
    |   | `-VarDecl 0x132943d30 <col:3, col:21> col:21 invalid frag 'const int *'
    |   |-CallExpr 0x132944098 <line:29:3, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x132943fd8 <col:3> 'int ()' Function 0x132943f20 'WARN_ON' 'int ()'
    |   | `-BinaryOperator 0x132944078 <col:11, col:28> 'int' contains-errors '>'
    |   |   |-DeclRefExpr 0x132943ff8 <col:11> 'int' lvalue Var 0x132941958 'start' 'int'
    |   |   `-BinaryOperator 0x132944058 <col:19, col:28> '<dependent type>' contains-errors '+'
    |   |     |-DeclRefExpr 0x132944018 <col:19> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |     `-RecoveryExpr 0x132944038 <col:28> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x132944268 <line:31:3, col:35> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1329440c0 <col:3> 'int' lvalue Var 0x132943c98 'end' 'int'
    |   | `-BinaryOperator 0x132944248 <col:9, col:35> '<dependent type>' contains-errors '+'
    |   |   |-DeclRefExpr 0x1329440e0 <col:9> 'int' lvalue Var 0x132941958 'start' 'int'
    |   |   `-CallExpr 0x132944220 <col:17, col:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1329441e0 <col:17> 'int ()' Function 0x132944128 'skb_frag_size' 'int ()'
    |   |     `-RecoveryExpr 0x132944200 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x132944338 <line:32:3, col:16> 'int' '='
    |   | |-DeclRefExpr 0x132944288 <col:3> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   | `-BinaryOperator 0x132944318 <col:10, col:16> 'int' '-'
    |   |   |-ImplicitCastExpr 0x1329442e8 <col:10> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1329442a8 <col:10> 'int' lvalue Var 0x132943c98 'end' 'int'
    |   |   `-ImplicitCastExpr 0x132944300 <col:16> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1329442c8 <col:16> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |-IfStmt 0x133008fd0 <line:33:3, line:47:3>
    |   | |-BinaryOperator 0x1329443b0 <line:33:7, col:14> 'int' '>'
    |   | | |-ImplicitCastExpr 0x132944398 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x132944358 <col:7> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   | | `-IntegerLiteral 0x132944378 <col:14> 'int' 0
    |   | `-CompoundStmt 0x133008f90 <col:17, line:47:3>
    |   |   |-DeclStmt 0x133008938 <line:34:4, col:43>
    |   |   | |-RecordDecl 0x1329443d0 <col:4, col:11> col:11 struct page
    |   |   | `-VarDecl 0x132944538 <col:4, col:42> col:17 used page 'struct page *' cinit
    |   |   |   `-CallExpr 0x1330088f8 <col:24, col:42> '<dependent type>' contains-errors
    |   |   |     |-DeclRefExpr 0x1330088b8 <col:24> 'int ()' Function 0x133008800 'skb_frag_page' 'int ()'
    |   |   |     `-RecoveryExpr 0x1330088d8 <col:38> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x133008a10 <line:36:4, line:37:12>
    |   |   | |-BinaryOperator 0x133008990 <line:36:8, col:15> 'int' contains-errors '>'
    |   |   | | |-DeclRefExpr 0x133008950 <col:8> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   |   | | `-RecoveryExpr 0x133008970 <col:15> '<dependent type>' contains-errors lvalue
    |   |   | `-BinaryOperator 0x1330089f0 <line:37:5, col:12> 'int' contains-errors '='
    |   |   |   |-DeclRefExpr 0x1330089b0 <col:5> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   |   |   `-RecoveryExpr 0x1330089d0 <col:12> '<dependent type>' contains-errors lvalue
    |   |   |-IfStmt 0x133008db8 <line:41:4, line:42:10>
    |   |   | |-BinaryOperator 0x133008d80 <line:41:8, col:17> 'int' contains-errors '<'
    |   |   | | |-RecoveryExpr 0x133008d60 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-IntegerLiteral 0x133008d20 <col:17> 'int' 0
    |   |   | `-GotoStmt 0x133008da0 <line:42:5, col:10> 'fault' 0x132943720
    |   |   |-CompoundAssignOperator 0x133008e40 <line:43:4, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-RecoveryExpr 0x133008df8 <col:4> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x133008dd8 <col:4> 'int' lvalue ParmVar 0x132941510 'len' 'int'
    |   |   | `-DeclRefExpr 0x133008e20 <col:11> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   |   |-IfStmt 0x133008ee8 <line:44:4, line:45:10>
    |   |   | |-BinaryOperator 0x133008eb0 <line:44:8, col:15> 'int' contains-errors '=='
    |   |   | | |-RecoveryExpr 0x133008e70 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-IntegerLiteral 0x133008e90 <col:15> 'int' 0
    |   |   | `-GotoStmt 0x133008ed0 <line:45:5, col:10> 'end' 0x1329438a0
    |   |   `-CompoundAssignOperator 0x133008f60 <line:46:4, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-DeclRefExpr 0x133008f08 <col:4> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    |   |     `-ImplicitCastExpr 0x133008f48 <col:14> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x133008f28 <col:14> 'int' lvalue Var 0x132941c98 'copy' 'int'
    |   `-BinaryOperator 0x133009048 <line:48:3, col:11> 'int' '='
    |     |-DeclRefExpr 0x133008ff0 <col:3> 'int' lvalue Var 0x132941958 'start' 'int'
    |     `-ImplicitCastExpr 0x133009030 <col:11> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x133009010 <col:11> 'int' lvalue Var 0x132943c98 'end' 'int'
    |-CallExpr 0x133009240 <line:51:2, col:31> 'int'
    | |-ImplicitCastExpr 0x133009228 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1330091c8 <col:2> 'int ()' Function 0x133009110 'skb_walk_frags' 'int ()'
    | |-ImplicitCastExpr 0x133009270 <col:17> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x1330091e8 <col:17> 'struct sk_buff *' lvalue ParmVar 0x132941228 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x133009288 <col:22> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x133009208 <col:22> 'struct sk_buff *' lvalue Var 0x132941e48 'frag_iter' 'struct sk_buff *'
    |-CompoundStmt 0x133009bd0 <col:33, line:73:2>
    | |-DeclStmt 0x133009320 <line:52:3, col:10>
    | | `-VarDecl 0x1330092b8 <col:3, col:7> col:7 used end 'int'
    | |-CallExpr 0x1330093f8 <line:54:3, col:31> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x133009338 <col:3> 'int ()' Function 0x132943f20 'WARN_ON' 'int ()'
    | | `-BinaryOperator 0x1330093d8 <col:11, col:28> 'int' contains-errors '>'
    | |   |-DeclRefExpr 0x133009358 <col:11> 'int' lvalue Var 0x132941958 'start' 'int'
    | |   `-BinaryOperator 0x1330093b8 <col:19, col:28> '<dependent type>' contains-errors '+'
    | |     |-DeclRefExpr 0x133009378 <col:19> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    | |     `-RecoveryExpr 0x133009398 <col:28> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x1330094e0 <line:56:3, col:28> 'int' contains-errors '='
    | | |-DeclRefExpr 0x133009420 <col:3> 'int' lvalue Var 0x1330092b8 'end' 'int'
    | | `-BinaryOperator 0x1330094c0 <col:9, col:28> '<dependent type>' contains-errors '+'
    | |   |-DeclRefExpr 0x133009440 <col:9> 'int' lvalue Var 0x132941958 'start' 'int'
    | |   `-RecoveryExpr 0x133009498 <col:17, col:28> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x133009460 <col:17> 'struct sk_buff *' lvalue Var 0x132941e48 'frag_iter' 'struct sk_buff *'
    | |-BinaryOperator 0x1330095b0 <line:57:3, col:16> 'int' '='
    | | |-DeclRefExpr 0x133009500 <col:3> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | | `-BinaryOperator 0x133009590 <col:10, col:16> 'int' '-'
    | |   |-ImplicitCastExpr 0x133009560 <col:10> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x133009520 <col:10> 'int' lvalue Var 0x1330092b8 'end' 'int'
    | |   `-ImplicitCastExpr 0x133009578 <col:16> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x133009540 <col:16> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    | |-IfStmt 0x133009b38 <line:58:3, line:71:3>
    | | |-BinaryOperator 0x133009628 <line:58:7, col:14> 'int' '>'
    | | | |-ImplicitCastExpr 0x133009610 <col:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1330095d0 <col:7> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | | | `-IntegerLiteral 0x1330095f0 <col:14> 'int' 0
    | | `-CompoundStmt 0x133009b00 <col:17, line:71:3>
    | |   |-IfStmt 0x133009708 <line:59:4, line:60:12>
    | |   | |-BinaryOperator 0x133009688 <line:59:8, col:15> 'int' contains-errors '>'
    | |   | | |-DeclRefExpr 0x133009648 <col:8> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | |   | | `-RecoveryExpr 0x133009668 <col:15> '<dependent type>' contains-errors lvalue
    | |   | `-BinaryOperator 0x1330096e8 <line:60:5, col:12> 'int' contains-errors '='
    | |   |   |-DeclRefExpr 0x1330096a8 <col:5> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | |   |   `-RecoveryExpr 0x1330096c8 <col:12> '<dependent type>' contains-errors lvalue
    | |   |-IfStmt 0x133009928 <line:65:4, line:66:10>
    | |   | |-RecoveryExpr 0x1330098f0 <line:65:8, col:17> '_Bool' contains-errors
    | |   | `-GotoStmt 0x133009910 <line:66:5, col:10> 'fault' 0x132943720
    | |   |-CompoundAssignOperator 0x1330099b0 <line:67:4, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |-RecoveryExpr 0x133009968 <col:4> '<dependent type>' contains-errors lvalue
    | |   | | `-DeclRefExpr 0x133009948 <col:4> 'int' lvalue ParmVar 0x132941510 'len' 'int'
    | |   | `-DeclRefExpr 0x133009990 <col:11> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | |   |-IfStmt 0x133009a58 <line:68:4, line:69:10>
    | |   | |-BinaryOperator 0x133009a20 <line:68:8, col:15> 'int' contains-errors '=='
    | |   | | |-RecoveryExpr 0x1330099e0 <col:8> '<dependent type>' contains-errors lvalue
    | |   | | `-IntegerLiteral 0x133009a00 <col:15> 'int' 0
    | |   | `-GotoStmt 0x133009a40 <line:69:5, col:10> 'end' 0x1329438a0
    | |   `-CompoundAssignOperator 0x133009ad0 <line:70:4, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |     |-DeclRefExpr 0x133009a78 <col:4> 'int' lvalue ParmVar 0x1329412a8 'offset' 'int'
    | |     `-ImplicitCastExpr 0x133009ab8 <col:14> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x133009a98 <col:14> 'int' lvalue Var 0x132941c98 'copy' 'int'
    | `-BinaryOperator 0x133009bb0 <line:72:3, col:11> 'int' '='
    |   |-DeclRefExpr 0x133009b58 <col:3> 'int' lvalue Var 0x132941958 'start' 'int'
    |   `-ImplicitCastExpr 0x133009b98 <col:11> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x133009b78 <col:11> 'int' lvalue Var 0x1330092b8 'end' 'int'
    |-LabelStmt 0x133009cf0 <line:75:1, line:79:2> 'end'
    | `-IfStmt 0x133009cd0 <line:76:2, line:79:2>
    |   |-UnaryOperator 0x133009c48 <line:76:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x133009c30 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x133009c10 <col:7> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x133009cc0 <col:12, line:79:2>
    `-LabelStmt 0x133009d18 <line:81:1, col:6> 'fault'
      `-NullStmt 0x133009d10 <col:6>
