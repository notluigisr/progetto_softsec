`-FunctionDecl 0x15100dee8  line:1:1 invalid xsltCheckTopLevelElement 'int (int, int, int)'
  |-ParmVarDecl 0x15100dcf0 <col:26, col:44> col:44 referenced invalid style 'int'
  |-ParmVarDecl 0x15100dd70 <col:51, col:62> col:62 invalid inst 'int'
  |-ParmVarDecl 0x15100ddf0 <col:68, col:72> col:72 used err 'int'
  `-CompoundStmt 0x150923218 <col:77, line:29:1>
    |-IfStmt 0x15100e180 <line:3:5, line:4:18>
    | |-RecoveryExpr 0x15100e0f8 <line:3:9, col:63> '_Bool' contains-errors
    | `-ReturnStmt 0x15100e170 <line:4:9, col:18>
    |   `-ParenExpr 0x15100e150 <col:15, col:18> 'int'
    |     `-UnaryOperator 0x15100e138 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x15100e118 <col:17> 'int' 1
    |-IfStmt 0x150922988 <line:7:5, line:14:5>
    | |-BinaryOperator 0x15100e298 <line:7:9, col:19> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x15100e258 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15100e278 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x150922968 <col:25, line:14:5>
    |   |-IfStmt 0x1509228f8 <line:8:9, line:12:2>
    |   | |-ImplicitCastExpr 0x15100e2d8 <line:8:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15100e2b8 <col:13> 'int' lvalue ParmVar 0x15100ddf0 'err' 'int'
    |   | `-CompoundStmt 0x1509228d8 <col:18, line:12:2>
    |   |   |-CallExpr 0x1509227f0 <line:9:6, line:10:12> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1509226b8 <line:9:6> 'int ()' Function 0x150922600 'xsltTransformError' 'int ()'
    |   |   | |-RecoveryExpr 0x1509227d0 <col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x1509226f0 <col:31> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x150922710 <col:38> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x150922770 <line:10:7> 'char[4]' lvalue "STR"
    |   |   `-UnaryOperator 0x1509228c0 <line:11:6, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |     `-CXXDependentScopeMemberExpr 0x150922878 <col:6, col:13> '<dependent type>' contains-errors lvalue ->errors
    |   |       `-RecoveryExpr 0x150922850 <col:6> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x150922830 <col:6> 'int' lvalue ParmVar 0x15100dcf0 'style' 'int'
    |   `-ReturnStmt 0x150922958 <line:13:2, col:10>
    |     `-ParenExpr 0x150922938 <col:8, col:10> 'int'
    |       `-IntegerLiteral 0x150922918 <col:9> 'int' 0
    |-IfStmt 0x1509231a8 <line:15:5, line:27:5>
    | |-RecoveryExpr 0x150922f18 <line:15:9, line:19:47> '_Bool' contains-errors
    | `-CompoundStmt 0x150923188 <col:50, line:27:5>
    |   |-IfStmt 0x150923118 <line:20:2, line:25:2>
    |   | |-ImplicitCastExpr 0x150922f58 <line:20:6> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x150922f38 <col:6> 'int' lvalue ParmVar 0x15100ddf0 'err' 'int'
    |   | `-CompoundStmt 0x150923100 <col:11, line:25:2>
    |   |   `-UnaryOperator 0x1509230e8 <line:24:6, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |     `-CXXDependentScopeMemberExpr 0x1509230a0 <col:6, col:13> '<dependent type>' contains-errors lvalue ->errors
    |   |       `-RecoveryExpr 0x150923078 <col:6> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x150923058 <col:6> 'int' lvalue ParmVar 0x15100dcf0 'style' 'int'
    |   `-ReturnStmt 0x150923178 <line:26:2, col:10>
    |     `-ParenExpr 0x150923158 <col:8, col:10> 'int'
    |       `-IntegerLiteral 0x150923138 <col:9> 'int' 0
    `-ReturnStmt 0x150923208 <line:28:5, col:13>
      `-ParenExpr 0x1509231e8 <col:11, col:13> 'int'
        `-IntegerLiteral 0x1509231c8 <col:12> 'int' 1
