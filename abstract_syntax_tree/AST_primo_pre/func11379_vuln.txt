`-FunctionDecl 0x148128688  line:1:14 invalid verify_callback 'int (int, int *)'
  |-ParmVarDecl 0x1481284f0 <col:30, col:34> col:34 used preverify_ok 'int'
  |-ParmVarDecl 0x1481285a8 <col:48, col:64> col:64 invalid callback_ctx 'int *'
  `-CompoundStmt 0x1481441c0 <col:78, line:33:1>
    |-IfStmt 0x148142350 <line:11:5, line:14:5>
    | |-BinaryOperator 0x1481420e0 <line:11:8, col:56> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x148141fa0 <col:8, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x148141f88 <col:9, col:24> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x148141f40 <col:9, col:24> '<dependent type>' contains-errors lvalue .verify_chain
    | | |     `-CXXDependentScopeMemberExpr 0x148141ef8 <col:9, col:17> '<dependent type>' contains-errors lvalue ->option
    | | |       `-CXXDependentScopeMemberExpr 0x148141eb0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->opt
    | | |         `-RecoveryExpr 0x148141e90 <col:9> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x1481420c8 <col:40, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x1481420b0 <col:41, col:56> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x148142068 <col:41, col:56> '<dependent type>' contains-errors lvalue .verify_peer
    | |       `-CXXDependentScopeMemberExpr 0x148142020 <col:41, col:49> '<dependent type>' contains-errors lvalue ->option
    | |         `-CXXDependentScopeMemberExpr 0x148141fd8 <col:41, col:44> '<dependent type>' contains-errors lvalue ->opt
    | |           `-RecoveryExpr 0x148141fb8 <col:41> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148142330 <col:69, line:14:5>
    |   |-CallExpr 0x1481422d0 <line:12:9, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1481421e0 <col:9> 'int ()' Function 0x148142128 's_log' 'int ()'
    |   | |-RecoveryExpr 0x1481422b0 <col:15> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x148142260 <col:25> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x148142320 <line:13:9, col:16>
    |     `-IntegerLiteral 0x148142300 <col:16> 'int' 1
    |-IfStmt 0x148144090 <line:15:5, line:27:5>
    | |-CallExpr 0x148142520 <line:15:8, col:51> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x148142450 <col:8> 'int ()' Function 0x148142398 'verify_checks' 'int ()'
    | | |-RecoveryExpr 0x148142500 <col:22> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x148142488 <col:25> 'int' lvalue ParmVar 0x1481284f0 'preverify_ok' 'int'
    | | `-RecoveryExpr 0x1481424a8 <col:39> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148144070 <col:54, line:27:5>
    |   |-IfStmt 0x148144020 <line:17:9, line:25:9>
    |   | |-RecoveryExpr 0x148142658 <line:17:12> '_Bool' contains-errors
    |   | `-CompoundStmt 0x148144000 <col:18, line:25:9>
    |   |   |-DeclStmt 0x1481428b0 <line:18:13, line:19:30>
    |   |   | `-VarDecl 0x148142690 <line:18:13, col:17> col:17 used ok 'int'
    |   |   `-IfStmt 0x148142be0 <line:21:13, line:24:13>
    |   |     |-UnaryOperator 0x148142a00 <line:21:16, col:17> 'int' prefix '!' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1481429e8 <col:17> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1481429c8 <col:17> 'int' lvalue Var 0x148142690 'ok' 'int'
    |   |     `-CompoundStmt 0x148142bc0 <col:21, line:24:13>
    |   |       |-CallExpr 0x148142b50 <line:22:17, col:31> 'int'
    |   |       | |-ImplicitCastExpr 0x148142b38 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | | `-DeclRefExpr 0x148142af8 <col:17> 'int ()' Function 0x148142a40 'sslerror' 'int ()'
    |   |       | `-ImplicitCastExpr 0x148142b78 <col:26> 'char *' <ArrayToPointerDecay>
    |   |       |   `-StringLiteral 0x148142b18 <col:26> 'char[4]' lvalue "STR"
    |   |       `-ReturnStmt 0x148142bb0 <line:23:17, col:24>
    |   |         `-IntegerLiteral 0x148142b90 <col:24> 'int' 0
    |   `-ReturnStmt 0x148144060 <line:26:9, col:16>
    |     `-IntegerLiteral 0x148144040 <col:16> 'int' 1
    |-IfStmt 0x148144100 <line:28:5, line:29:16>
    | |-RecoveryExpr 0x1481440b0 <line:28:8, col:41> '_Bool' contains-errors
    | `-ReturnStmt 0x1481440f0 <line:29:9, col:16>
    |   `-IntegerLiteral 0x1481440d0 <col:16> 'int' 0
    |-IfStmt 0x148144170 <line:30:5, line:31:16>
    | |-RecoveryExpr 0x148144120 <line:30:8, col:30> '_Bool' contains-errors
    | `-ReturnStmt 0x148144160 <line:31:9, col:16>
    |   `-IntegerLiteral 0x148144140 <col:16> 'int' 1
    `-ReturnStmt 0x1481441b0 <line:32:5, col:12>
      `-IntegerLiteral 0x148144190 <col:12> 'int' 0
