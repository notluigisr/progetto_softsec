`-FunctionDecl 0x13281e638  line:1:1 invalid gre_sre_ip_print 'int (int *, int, int, const char *, int)'
  |-ParmVarDecl 0x13281e328 <col:18, col:38> col:38 invalid ndo 'int *'
  |-ParmVarDecl 0x13281e3a8 <col:43, col:51> col:51 invalid sreoff 'int'
  |-ParmVarDecl 0x13281e428 <col:59, col:67> col:67 referenced invalid srelen 'int'
  |-ParmVarDecl 0x13281e4a8 <line:2:18, col:32> col:32 used bp 'const char *'
  |-ParmVarDecl 0x13281e528 <col:36, col:42> col:42 referenced invalid len 'int'
  `-CompoundStmt 0x1308a5ce0 <line:3:1, line:35:1>
    |-DeclStmt 0x13281e7c0 <line:4:2, col:23>
    | `-VarDecl 0x13281e720 <col:2, col:21> col:16 used up 'const char *' cinit
    |   `-ImplicitCastExpr 0x13281e7a8 <col:21> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13281e788 <col:21> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'
    |-DeclStmt 0x13281e868 <line:5:2, col:27>
    | `-VarDecl 0x13281e800 <col:2, col:7> col:7 invalid buf 'char'
    |-IfStmt 0x1308a4e78 <line:7:2, line:10:2>
    | |-BinaryOperator 0x13281e8c0 <line:7:6, col:15> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x13281e880 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13281e8a0 <col:15> 'int' 3
    | `-CompoundStmt 0x1308a4e58 <col:18, line:10:2>
    |   |-CallExpr 0x1308a4de0 <line:8:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1308a4cb8 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1308a4dc0 <col:12, col:31> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x1308a4da0 <col:13, col:25> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x1308a4d60 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x1308a4cd8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x1308a4d40 <col:18> 'char[4]' lvalue "STR"
    |   |     `-RecoveryExpr 0x1308a4d80 <col:25> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1308a4e48 <line:9:3, col:12>
    |     `-ParenExpr 0x1308a4e28 <col:10, col:12> 'int'
    |       `-IntegerLiteral 0x1308a4e08 <col:11> 'int' 1
    |-IfStmt 0x1308a5070 <line:11:2, line:14:2>
    | |-BinaryOperator 0x1308a4ed8 <line:11:6, col:15> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x1308a4e98 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1308a4eb8 <col:15> 'int' 3
    | `-CompoundStmt 0x1308a5050 <col:18, line:14:2>
    |   |-CallExpr 0x1308a4fd8 <line:12:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1308a4ef8 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1308a4fb8 <col:12, col:31> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x1308a4f98 <col:13, col:25> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x1308a4f58 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x1308a4f18 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x1308a4f38 <col:18> 'char[4]' lvalue "STR"
    |   |     `-RecoveryExpr 0x1308a4f78 <col:25> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1308a5040 <line:13:3, col:12>
    |     `-ParenExpr 0x1308a5020 <col:10, col:12> 'int'
    |       `-IntegerLiteral 0x1308a5000 <col:11> 'int' 1
    |-IfStmt 0x1308a52a8 <line:15:2, line:18:2>
    | |-BinaryOperator 0x1308a50d0 <line:15:6, col:16> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x1308a5090 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1308a50b0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1308a5288 <col:24, line:18:2>
    |   |-CallExpr 0x1308a5210 <line:16:3, col:40> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1308a50f0 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1308a51f0 <col:12, col:39> '<dependent type>' contains-errors
    |   |   `-BinaryOperator 0x1308a51d0 <col:13, col:33> '<dependent type>' contains-errors ','
    |   |     |-BinaryOperator 0x1308a5190 <col:13, col:25> '<dependent type>' contains-errors ','
    |   |     | |-BinaryOperator 0x1308a5150 <col:13, col:18> 'char[4]' contains-errors ','
    |   |     | | |-RecoveryExpr 0x1308a5110 <col:13> '<dependent type>' contains-errors lvalue
    |   |     | | `-StringLiteral 0x1308a5130 <col:18> 'char[4]' lvalue "STR"
    |   |     | `-RecoveryExpr 0x1308a5170 <col:25> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x1308a51b0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1308a5278 <line:17:3, col:12>
    |     `-ParenExpr 0x1308a5258 <col:10, col:12> 'int'
    |       `-IntegerLiteral 0x1308a5238 <col:11> 'int' 1
    |-WhileStmt 0x1308a5c70 <line:20:2, line:33:2>
    | |-BinaryOperator 0x1308a5308 <line:20:9, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x1308a52c8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1308a52e8 <col:19> 'int' 0
    | `-CompoundStmt 0x1308a5c30 <col:22, line:33:2>
    |   |-IfStmt 0x1308a55b0 <line:21:3, line:22:13>
    |   | |-UnaryOperator 0x1308a5548 <line:21:7, col:24> 'int' prefix '!' cannot overflow
    |   | | `-CallExpr 0x1308a54e8 <col:8, col:24> 'int'
    |   | |   |-ImplicitCastExpr 0x1308a54d0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x1308a5408 <col:8> 'int ()' Function 0x1308a5350 'ND_TTEST2' 'int ()'
    |   | |   |-ImplicitCastExpr 0x1308a5530 <col:18, col:19> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1308a5518 <col:18, col:19> 'char' <LValueToRValue>
    |   | |   |   `-UnaryOperator 0x1308a5460 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
    |   | |   |     `-ImplicitCastExpr 0x1308a5448 <col:19> 'const char *' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x1308a5428 <col:19> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'
    |   | |   `-IntegerLiteral 0x1308a5478 <col:23> 'int' 4
    |   | `-ReturnStmt 0x1308a55a0 <line:22:4, col:13>
    |   |   `-ParenExpr 0x1308a5580 <col:11, col:13> 'int'
    |   |     `-IntegerLiteral 0x1308a5560 <col:12> 'int' 0
    |   |-IfStmt 0x1308a5680 <line:23:3, line:24:13>
    |   | |-BinaryOperator 0x1308a5610 <line:23:7, col:13> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x1308a55d0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x1308a55f0 <col:13> 'int' 4
    |   | `-ReturnStmt 0x1308a5670 <line:24:4, col:13>
    |   |   `-ParenExpr 0x1308a5650 <col:11, col:13> 'int'
    |   |     `-IntegerLiteral 0x1308a5630 <col:12> 'int' 0
    |   |-CallExpr 0x1308a5840 <line:26:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1308a5780 <col:3> 'int ()' Function 0x1308a56c8 'addrtostr' 'int ()'
    |   | |-DeclRefExpr 0x1308a57a0 <col:13> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'
    |   | |-RecoveryExpr 0x1308a57c0 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-UnaryExprOrTypeTraitExpr 0x1308a5820 <col:22, col:32> 'unsigned long' contains-errors sizeof
    |   |   `-ParenExpr 0x1308a5800 <col:28, col:32> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x1308a57e0 <col:29> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x1308a5aa8 <line:30:3, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   | |-DeclRefExpr 0x1308a5a68 <col:3> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'
    |   | `-IntegerLiteral 0x1308a5a88 <col:9> 'int' 4
    |   |-CompoundAssignOperator 0x1308a5b40 <line:31:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x1308a5af8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1308a5ad8 <col:3> 'int' lvalue ParmVar 0x13281e528 'len' 'int'
    |   | `-IntegerLiteral 0x1308a5b20 <col:10> 'int' 4
    |   `-CompoundAssignOperator 0x1308a5c00 <line:32:3, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x1308a5b90 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1308a5b70 <col:3> 'int' lvalue ParmVar 0x13281e428 'srelen' 'int'
    |     `-IntegerLiteral 0x1308a5bb8 <col:13> 'int' 4
    `-ReturnStmt 0x1308a5cd0 <line:34:2, col:11>
      `-ParenExpr 0x1308a5cb0 <col:9, col:11> 'int'
        `-IntegerLiteral 0x1308a5c90 <col:10> 'int' 1
