`-FunctionDecl 0x12d885118  line:1:1 invalid dnp3_append_2item_text 'int (int *, int *, const char *)'
  |-ParmVarDecl 0x12d884f28 <col:24, col:36> col:36 invalid item1 'int *'
  |-ParmVarDecl 0x12d884fa8 <col:43, col:55> col:55 invalid item2 'int *'
  |-ParmVarDecl 0x12d885028 <col:62, col:75> col:75 used text 'const char *'
  `-CompoundStmt 0x12d8854e0 <line:2:1, line:5:1>
    |-CallExpr 0x12d8853f0 <line:3:3, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d885330 <col:3> 'int ()' Function 0x12d885278 'proto_item_append_text' 'int ()'
    | |-RecoveryExpr 0x12d885350 <col:26> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x12d8853b0 <col:33> 'char[4]' lvalue "STR"
    | `-DeclRefExpr 0x12d8853d0 <col:40> 'const char *' lvalue ParmVar 0x12d885028 'text' 'const char *'
    `-CallExpr 0x12d8854a8 <line:4:3, col:44> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12d885428 <col:3> 'int ()' Function 0x12d885278 'proto_item_append_text' 'int ()'
      |-RecoveryExpr 0x12d885448 <col:26> '<dependent type>' contains-errors lvalue
      |-StringLiteral 0x12d885468 <col:33> 'char[4]' lvalue "STR"
      `-DeclRefExpr 0x12d885488 <col:40> 'const char *' lvalue ParmVar 0x12d885028 'text' 'const char *'
