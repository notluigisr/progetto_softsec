`-FunctionDecl 0x14980dda8  line:1:1 PS_SERIALIZER_DECODE_FUNC 'int (int)'
  |-ParmVarDecl 0x14980dcd8 <col:27> col:27 php 'int'
  `-CompoundStmt 0x14982c530 <line:2:1, line:61:1>
    |-DeclStmt 0x14980dfb8 <line:3:2, col:19>
    | |-VarDecl 0x14980deb8 <col:2, col:14> col:14 used p 'const char *'
    | `-VarDecl 0x14980df38 <col:2, col:18> col:18 used q 'const char *'
    |-DeclStmt 0x14980e050 <line:4:2, col:12>
    | `-VarDecl 0x14980dfe8 <col:2, col:8> col:8 used name 'char *'
    |-DeclStmt 0x14980e1b0 <line:5:2, col:35>
    | `-VarDecl 0x14980e080 <col:2, col:29> col:14 used endptr 'const char *' cinit
    |   `-BinaryOperator 0x14980e190 <col:23, col:29> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x14980e150 <col:23> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14980e170 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14980e260 <line:7:2, col:13>
    | `-VarDecl 0x14980e1f8 <col:2, col:6> col:6 used namelen 'int'
    |-DeclStmt 0x14980e2f8 <line:8:2, col:15>
    | `-VarDecl 0x14980e290 <col:2, col:6> col:6 used has_value 'int'
    |-CallExpr 0x149827938 <line:11:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1498278b8 <col:2> 'int ()' Function 0x149827800 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'
    | `-RecoveryExpr 0x149827918 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1498279d8 <line:13:2, col:6> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x149827960 <col:2> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    | `-RecoveryExpr 0x1498279b8 <col:6> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14982c4c8 <line:15:2, line:55:2>
    | |-BinaryOperator 0x149827a68 <line:15:9, col:13> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x149827a38 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1498279f8 <col:9> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    | | `-ImplicitCastExpr 0x149827a50 <col:13> 'const char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x149827a18 <col:13> 'const char *' contains-errors lvalue Var 0x14980e080 'endptr' 'const char *'
    | `-CompoundStmt 0x14982c460 <col:21, line:55:2>
    |   |-BinaryOperator 0x149827b28 <line:17:3, col:7> 'const char *' '='
    |   | |-DeclRefExpr 0x149827ad0 <col:3> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    |   | `-ImplicitCastExpr 0x149827b10 <col:7> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x149827af0 <col:7> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |   |-WhileStmt 0x149827da0 <line:18:3, line:20:3>
    |   | |-BinaryOperator 0x149827c50 <line:18:10, col:16> 'int' contains-errors '!='
    |   | | |-UnaryOperator 0x149827c18 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x149827c00 <col:11> 'const char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x149827b48 <col:11> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    |   | | `-RecoveryExpr 0x149827c30 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x149827d88 <col:30, line:20:3>
    |   |   `-IfStmt 0x149827d68 <line:19:4, col:28>
    |   |     |-BinaryOperator 0x149827ce0 <col:8, col:15> 'int' contains-errors '>='
    |   |     | |-UnaryOperator 0x149827c90 <col:8, col:10> 'const char *' prefix '++'
    |   |     | | `-DeclRefExpr 0x149827c70 <col:10> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    |   |     | `-ImplicitCastExpr 0x149827cc8 <col:15> 'const char *' contains-errors <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x149827ca8 <col:15> 'const char *' contains-errors lvalue Var 0x14980e080 'endptr' 'const char *'
    |   |     `-GotoStmt 0x149827d50 <col:23, col:28> 'break_outer_loop' 0x149827d00
    |   |-IfStmt 0x149828050 <line:21:3, line:26:3> has_else
    |   | |-BinaryOperator 0x149827f00 <line:21:7, col:15> 'int' contains-errors '=='
    |   | | |-ArraySubscriptExpr 0x149827ec0 <col:7, col:10> 'const char' lvalue
    |   | | | |-ImplicitCastExpr 0x149827ea8 <col:7> 'const char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x149827dc0 <col:7> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |   | | | `-IntegerLiteral 0x149827de0 <col:9> 'int' 0
    |   | | `-RecoveryExpr 0x149827ee0 <col:15> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x149827fb8 <col:32, line:24:3>
    |   | | |-UnaryOperator 0x149827f40 <line:22:4, col:5> 'const char *' postfix '++'
    |   | | | `-DeclRefExpr 0x149827f20 <col:4> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |   | | `-BinaryOperator 0x149827f98 <line:23:4, col:16> 'int' '='
    |   | |   |-DeclRefExpr 0x149827f58 <col:4> 'int' lvalue Var 0x14980e290 'has_value' 'int'
    |   | |   `-IntegerLiteral 0x149827f78 <col:16> 'int' 0
    |   | `-CompoundStmt 0x149828038 <line:24:10, line:26:3>
    |   |   `-BinaryOperator 0x149828018 <line:25:4, col:16> 'int' '='
    |   |     |-DeclRefExpr 0x149827fd8 <col:4> 'int' lvalue Var 0x14980e290 'has_value' 'int'
    |   |     `-IntegerLiteral 0x149827ff8 <col:16> 'int' 1
    |   |-BinaryOperator 0x149828148 <line:28:3, col:17> 'int' '='
    |   | |-DeclRefExpr 0x149828080 <col:3> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'
    |   | `-ImplicitCastExpr 0x149828130 <col:13, col:17> 'int' <IntegralCast>
    |   |   `-BinaryOperator 0x149828110 <col:13, col:17> 'long' '-'
    |   |     |-ImplicitCastExpr 0x1498280e0 <col:13> 'const char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1498280a0 <col:13> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    |   |     `-ImplicitCastExpr 0x1498280f8 <col:17> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1498280c0 <col:17> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |   |-BinaryOperator 0x1498287b0 <line:29:3, col:29> 'char *' '='
    |   | |-DeclRefExpr 0x149828168 <col:3> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'
    |   | `-ImplicitCastExpr 0x149828378 <col:10, col:29> 'char *' <IntegralToPointer>
    |   |   `-CallExpr 0x149828318 <col:10, col:29> 'int'
    |   |     |-ImplicitCastExpr 0x149828300 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x149828268 <col:10> 'int ()' Function 0x1498281b0 'estrndup' 'int ()'
    |   |     |-ImplicitCastExpr 0x149828348 <col:19> 'const char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x149828288 <col:19> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |   |     `-ImplicitCastExpr 0x149828360 <col:22> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1498282a8 <col:22> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'
    |   |-UnaryOperator 0x149829600 <line:30:3, col:4> 'const char *' postfix '++'
    |   | `-DeclRefExpr 0x1498287d0 <col:3> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    |   |-IfStmt 0x149829da0 <line:32:3, line:36:3>
    |   | |-RecoveryExpr 0x149829988 <line:32:7, col:79> '_Bool' contains-errors
    |   | `-CompoundStmt 0x149829d88 <col:88, line:36:3>
    |   |   `-IfStmt 0x149829d68 <line:33:4, line:35:4>
    |   |     |-RecoveryExpr 0x149829cc8 <line:33:8, col:109> '_Bool' contains-errors
    |   |     `-CompoundStmt 0x149829d50 <col:112, line:35:4>
    |   |       `-GotoStmt 0x149829d38 <line:34:5, col:10> 'skip' 0x149829ce8
    |   |-IfStmt 0x14982c158 <line:38:3, line:49:3>
    |   | |-ImplicitCastExpr 0x149829de0 <line:38:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x149829dc0 <col:7> 'int' lvalue Var 0x14980e290 'has_value' 'int'
    |   | `-CompoundStmt 0x14982c140 <col:18, line:49:3>
    |   |   `-IfStmt 0x14982c0f0 <line:40:4, line:47:4> has_else
    |   |     |-RecoveryExpr 0x14982a190 <line:40:8, col:118> '_Bool' contains-errors
    |   |     |-CompoundStmt 0x14982a2f0 <col:121, line:42:4>
    |   |     `-CompoundStmt 0x14982c0d8 <col:11, line:47:4>
    |   |       `-CallExpr 0x14982a538 <line:44:5, col:15> 'int'
    |   |         |-ImplicitCastExpr 0x14982a520 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   |         | `-DeclRefExpr 0x14982a4e0 <col:5> 'int ()' Function 0x14982a428 'efree' 'int ()'
    |   |         `-ImplicitCastExpr 0x14982a560 <col:11> 'char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x14982a500 <col:11> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'
    |   |-CallExpr 0x14982c2d0 <line:50:3, col:28> 'int'
    |   | |-ImplicitCastExpr 0x14982c2b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14982c258 <col:3> 'int ()' Function 0x14982c1a0 'PS_ADD_VARL' 'int ()'
    |   | |-ImplicitCastExpr 0x14982c300 <col:15> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14982c278 <col:15> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'
    |   | `-ImplicitCastExpr 0x14982c318 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14982c298 <col:21> 'int' lvalue Var 0x14980e1f8 'namelen' 'int'
    |   |-LabelStmt 0x14982c3c8 <line:51:1, line:52:13> 'skip'
    |   | `-CallExpr 0x14982c388 <col:3, col:13> 'int'
    |   |   |-ImplicitCastExpr 0x14982c370 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x14982c330 <col:3> 'int ()' Function 0x14982a428 'efree' 'int ()'
    |   |   `-ImplicitCastExpr 0x14982c3b0 <col:9> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14982c350 <col:9> 'char *' lvalue Var 0x14980dfe8 'name' 'char *'
    |   `-BinaryOperator 0x14982c440 <line:54:3, col:7> 'const char *' '='
    |     |-DeclRefExpr 0x14982c3e8 <col:3> 'const char *' lvalue Var 0x14980deb8 'p' 'const char *'
    |     `-ImplicitCastExpr 0x14982c428 <col:7> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x14982c408 <col:7> 'const char *' lvalue Var 0x14980df38 'q' 'const char *'
    `-LabelStmt 0x14982c510 <line:56:1, col:17> 'break_outer_loop'
      `-NullStmt 0x14982c508 <col:17>
