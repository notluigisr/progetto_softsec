`-FunctionDecl 0x136128318  line:1:19 invalid uECC_vli_nativeToBytes 'int (int *, int, const int *)'
  |-ParmVarDecl 0x136128128 <col:42, col:51> col:51 referenced invalid bytes 'int *'
  |-ParmVarDecl 0x1361281a8 <line:2:42, col:46> col:46 used num_bytes 'int'
  |-ParmVarDecl 0x136128228 <line:3:42, col:61> col:61 invalid native 'const int *'
  `-CompoundStmt 0x136808cc8 <col:69, line:9:1>
    `-ForStmt 0x136808c90 <line:5:5, line:8:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x1361284a8 <line:5:17, col:21> 'int' contains-errors '<'
      | |-RecoveryExpr 0x136128488 <col:17> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x136128448 <col:21> 'int' lvalue ParmVar 0x1361281a8 'num_bytes' 'int'
      |-UnaryOperator 0x136128518 <col:32, col:34> '<dependent type>' contains-errors prefix '++' cannot overflow
      | `-RecoveryExpr 0x1361284f8 <col:34> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x136808c78 <col:37, line:8:5>
        `-DeclStmt 0x136128710 <line:6:9, col:39>
          `-VarDecl 0x136128548 <col:9, col:38> col:18 used b 'unsigned int' cinit
            `-BinaryOperator 0x1361286f0 <col:22, col:38> '<dependent type>' contains-errors '-'
              |-BinaryOperator 0x1361286b0 <col:22, col:34> 'int' '-'
              | |-ImplicitCastExpr 0x136128698 <col:22> 'int' <LValueToRValue>
              | | `-DeclRefExpr 0x1361285b0 <col:22> 'int' lvalue ParmVar 0x1361281a8 'num_bytes' 'int'
              | `-IntegerLiteral 0x1361285d0 <col:34> 'int' 1
              `-RecoveryExpr 0x1361286d0 <col:38> '<dependent type>' contains-errors lvalue
