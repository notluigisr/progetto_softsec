`-FunctionDecl 0x126928bc0  line:1:13 invalid do_under_overlay_for_page 'void (int)' static
  |-ParmVarDecl 0x126928af0 <line:2:5, <invalid sloc>> col:9 invalid 'int'
  `-CompoundStmt 0x127008ed8 <line:11:1, line:67:1>
    |-DeclStmt 0x126928d88 <line:12:5, col:30>
    | `-VarDecl 0x126928c88 <col:5, col:22> col:9 used pageno 'int' cinit
    |   `-BinaryOperator 0x126928d68 <col:18, col:22> '<dependent type>' contains-errors '+'
    |     |-IntegerLiteral 0x126928cf0 <col:18> 'int' 1
    |     `-RecoveryExpr 0x126928d48 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126928f50 <line:13:5, line:16:5>
    | |-UnaryOperator 0x126928f10 <line:13:9, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x126928ee8 <col:11, col:31> '<dependent type>' contains-errors
    | |   |-CXXDependentScopeMemberExpr 0x126928ea0 <col:11, col:19> '<dependent type>' contains-errors lvalue .count
    | |   | `-RecoveryExpr 0x126928e80 <col:11> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x126928e00 <col:25> 'int' contains-errors lvalue Var 0x126928c88 'pageno' 'int'
    | `-CompoundStmt 0x126928f38 <line:14:5, line:16:5>
    |   `-ReturnStmt 0x126928f28 <line:15:9>
    |-RecoveryExpr 0x126928fa0 <line:18:5> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126929060 <line:19:5, col:23>
    | `-VarDecl 0x126928fd8 <col:5, col:22> col:9 used min_suffix 'int' cinit
    |   `-IntegerLiteral 0x126929040 <col:22> 'int' 1
    `-IfStmt 0x127008eb8 <line:52:5, line:66:5>
      |-RecoveryExpr 0x127008e10 <line:52:9, col:25> '_Bool' contains-errors
      `-CompoundStmt 0x127008ea0 <line:53:5, line:66:5>
        `-IfStmt 0x127008e70 <line:54:9, line:65:9> has_else
          |-RecoveryExpr 0x127008e30 <line:54:13> '_Bool' contains-errors
          |-CompoundStmt 0x127008e50 <line:55:9, line:58:9>
          `-CompoundStmt 0x127008e60 <line:60:9, line:65:9>
