`-FunctionDecl 0x15100e358  line:1:5 nfc_stop_poll 'int (struct nfc_dev *)'
  |-ParmVarDecl 0x15100e248 <col:19, col:35> col:35 used dev 'struct nfc_dev *'
  `-CompoundStmt 0x151027448 <line:2:1, line:26:1>
    |-DeclStmt 0x1510266f0 <line:3:2, col:12>
    | `-VarDecl 0x151026668 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x1510266d0 <col:11> 'int' 0
    |-CallExpr 0x151026a50 <line:5:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151026830 <col:2> 'int ()' Function 0x151026778 'pr_debug' 'int ()'
    | |-StringLiteral 0x151026890 <col:11> 'char[4]' lvalue "STR"
    | `-CallExpr 0x151026a28 <col:18, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151026990 <col:18> 'int ()' Function 0x1510268d8 'dev_name' 'int ()'
    |   `-UnaryOperator 0x151026a10 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1510269e8 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1510269b0 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    |-CallExpr 0x151026bf8 <line:7:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151026b60 <col:2> 'int ()' Function 0x151026aa8 'device_lock' 'int ()'
    | `-UnaryOperator 0x151026be0 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x151026bb8 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x151026b80 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    |-IfStmt 0x151026e00 <line:9:2, line:12:2>
    | |-RecoveryExpr 0x151026c58 <line:9:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x151026c20 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    | `-CompoundStmt 0x151026de0 <col:26, line:12:2>
    |   |-BinaryOperator 0x151026d58 <line:10:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x151026c80 <col:3> 'int' lvalue Var 0x151026668 'rc' 'int'
    |   | `-UnaryOperator 0x151026d40 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x151026d28 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x151026d08 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x151026dc8 <line:11:3, col:8> 'error' 0x151026d78
    |-IfStmt 0x151026fe0 <line:14:2, line:17:2>
    | |-UnaryOperator 0x151026e98 <line:14:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x151026e80 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x151026e58 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x151026e20 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    | `-CompoundStmt 0x151026fc0 <col:21, line:17:2>
    |   |-BinaryOperator 0x151026f88 <line:15:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x151026eb0 <col:3> 'int' lvalue Var 0x151026668 'rc' 'int'
    |   | `-UnaryOperator 0x151026f70 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x151026f58 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x151026f38 <col:9> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x151026fa8 <line:16:3, col:8> 'error' 0x151026d78
    |-CallExpr 0x1510270c8 <line:19:2, col:25> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x151027060 <col:2, col:12> '<dependent type>' contains-errors lvalue ->stop_poll
    | | `-RecoveryExpr 0x151027038 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x151027000 <col:2> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    | `-DeclRefExpr 0x1510270a8 <col:22> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    |-BinaryOperator 0x151027220 <line:21:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1510271a0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x151027168 <col:2> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    | `-RecoveryExpr 0x151027200 <col:17> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1510273e0 <line:23:1, line:24:25> 'error'
    | `-CallExpr 0x1510273b8 <col:2, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x151027320 <col:2> 'int ()' Function 0x151027268 'device_unlock' 'int ()'
    |   `-UnaryOperator 0x1510273a0 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x151027378 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x151027340 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'
    `-ReturnStmt 0x151027438 <line:25:2, col:9>
      `-ImplicitCastExpr 0x151027420 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x151027400 <col:9> 'int' lvalue Var 0x151026668 'rc' 'int'
