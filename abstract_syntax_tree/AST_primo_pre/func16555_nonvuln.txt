`-FunctionDecl 0x146928288  line:1:17 invalid luaL_where 'int (int *, int)'
  |-ParmVarDecl 0x146928128 <col:28, col:39> col:39 invalid L 'int *'
  |-ParmVarDecl 0x1469281a8 <col:42, col:46> col:46 used level 'int'
  `-CompoundStmt 0x1469419b8 <line:2:1, line:6:1>
    |-DeclStmt 0x1469283c0 <line:3:3, col:11>
    | `-VarDecl 0x146928358 <col:3, col:7> col:7 used size 'int'
    `-CallExpr 0x146941978 <line:5:3, col:57> '<dependent type>' contains-errors
      |-DeclRefExpr 0x146928700 <col:3> 'int ()' Function 0x146928648 'lj_debug_addloc' 'int ()'
      |-RecoveryExpr 0x146928720 <col:19> '<dependent type>' contains-errors lvalue
      |-StringLiteral 0x146928780 <col:22> 'char[1]' lvalue ""
      |-RecoveryExpr 0x1469418c8 <col:26> '<dependent type>' contains-errors lvalue
      `-ConditionalOperator 0x146941948 <col:33, col:53> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1469287b0 <col:33> 'int' lvalue Var 0x146928358 'size' 'int'
        |-BinaryOperator 0x146941908 <col:40, col:46> '<dependent type>' contains-errors '+'
        | |-RecoveryExpr 0x1469418e8 <col:40> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x146941800 <col:46> 'int' lvalue Var 0x146928358 'size' 'int'
        `-RecoveryExpr 0x146941928 <col:53> '<dependent type>' contains-errors lvalue
