`-FunctionDecl 0x127128318  line:1:5 invalid bcf_read 'int (int *, const int *, int *)'
  |-ParmVarDecl 0x127128128 <col:14, col:23> col:23 invalid fp 'int *'
  |-ParmVarDecl 0x1271281a8 <col:27, col:44> col:44 invalid h 'const int *'
  |-ParmVarDecl 0x127128228 <col:47, col:55> col:55 invalid v 'int *'
  `-CompoundStmt 0x127808f50 <line:2:1, line:8:1>
    |-IfStmt 0x127128728 <line:3:5, col:57>
    | |-BinaryOperator 0x1271284e0 <col:9, col:30> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x127128440 <col:9, col:20> '<dependent type>' contains-errors lvalue .format
    | | | `-CXXDependentScopeMemberExpr 0x1271283f8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->format
    | | |   `-RecoveryExpr 0x1271283d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1271284c0 <col:30> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x127128718 <col:35, col:57>
    |   `-CallExpr 0x1271286e0 <col:42, col:57> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127128660 <col:42> 'int ()' Function 0x1271285a8 'vcf_read' 'int ()'
    |     |-RecoveryExpr 0x127128680 <col:51> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x1271286a0 <col:54> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x1271286c0 <col:56> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1278089d8 <line:4:5, col:45>
    | `-VarDecl 0x127128760 <col:5, col:44> col:9 used ret 'int' cinit
    |   `-CallExpr 0x1278089a8 <col:15, col:44> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1278088b8 <col:15> 'int ()' Function 0x127808800 'bcf_read1_core' 'int ()'
    |     |-CXXDependentScopeMemberExpr 0x127808940 <col:30, col:37> '<dependent type>' contains-errors lvalue .bgzf
    |     | `-CXXDependentScopeMemberExpr 0x1278088f8 <col:30, col:34> '<dependent type>' contains-errors lvalue ->fp
    |     |   `-RecoveryExpr 0x1278088d8 <col:30> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x127808988 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x127808c18 <line:5:5, col:46>
    | |-BinaryOperator 0x127808a48 <col:9, col:16> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x127808a30 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x1278089f0 <col:9> 'int' contains-errors lvalue Var 0x127128760 'ret' 'int'
    | | `-IntegerLiteral 0x127808a10 <col:16> 'int' 0
    | `-BinaryOperator 0x127808bf8 <col:19, col:46> 'int' contains-errors '='
    |   |-DeclRefExpr 0x127808a68 <col:19> 'int' contains-errors lvalue Var 0x127128760 'ret' 'int'
    |   `-CallExpr 0x127808bc8 <col:25, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127808b68 <col:25> 'int ()' Function 0x127808ab0 'bcf_record_check' 'int ()'
    |     |-RecoveryExpr 0x127808b88 <col:42> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x127808ba8 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x127808db0 <line:6:5, col:46>
    | |-BinaryOperator 0x127808d48 <col:10, col:24> 'int' contains-errors '||'
    | | |-BinaryOperator 0x127808c90 <col:10, col:15> 'int' contains-errors '!='
    | | | |-ImplicitCastExpr 0x127808c78 <col:10> 'int' contains-errors <LValueToRValue>
    | | | | `-DeclRefExpr 0x127808c38 <col:10> 'int' contains-errors lvalue Var 0x127128760 'ret' 'int'
    | | | `-IntegerLiteral 0x127808c58 <col:15> 'int' 0
    | | `-UnaryOperator 0x127808d30 <col:20, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x127808d18 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x127808cd0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->keep_samples
    | |       `-RecoveryExpr 0x127808cb0 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x127808da0 <col:39, col:46>
    |   `-ImplicitCastExpr 0x127808d88 <col:46> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x127808d68 <col:46> 'int' contains-errors lvalue Var 0x127128760 'ret' 'int'
    `-ReturnStmt 0x127808f40 <line:7:5, col:33>
      `-CallExpr 0x127808f10 <col:12, col:33> '<dependent type>' contains-errors
        |-DeclRefExpr 0x127808eb0 <col:12> 'int ()' Function 0x127808df8 'bcf_subset_format' 'int ()'
        |-RecoveryExpr 0x127808ed0 <col:30> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x127808ef0 <col:32> '<dependent type>' contains-errors lvalue
