`-FunctionDecl 0x13c80de58  line:1:1 invalid unicode_to_char 'int (const int *, int)'
  |-ParmVarDecl 0x13c80dcf0 <col:18, col:33> col:33 invalid unicode 'const int *'
  |-ParmVarDecl 0x13c80dd70 <line:2:4, col:13> col:13 used len 'int'
  `-CompoundStmt 0x13c122d08 <line:3:1, line:22:1>
    |-DeclStmt 0x13c80dfd8 <line:4:2, col:35>
    | `-VarDecl 0x13c80df58 <col:2, col:21> col:21 referenced invalid uMap 'int *' static
    |-IfStmt 0x13c80e360 <line:5:2, line:10:2>
    | |-BinaryOperator 0x13c80e068 <line:5:6, col:14> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13c80dff0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13c80e048 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c80e340 <col:23, line:10:2>
    |   |-BinaryOperator 0x13c80e270 <line:7:3, col:41> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13c80e0d8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13c80e0b8 <col:3> 'int *' lvalue Var 0x13c80df58 'uMap' 'int *'
    |   | `-CallExpr 0x13c80e248 <col:10, col:41> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x13c80e1e0 <col:10, col:24> '<dependent type>' contains-errors lvalue ->getUnicodeMap
    |   |   | `-RecoveryExpr 0x13c80e1c0 <col:10> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x13c80e228 <col:38> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x13c80e320 <line:8:3, col:20> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x13c80e2d8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->incRefCnt
    |       `-RecoveryExpr 0x13c80e2b0 <col:3> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13c80e290 <col:3> 'int *' lvalue Var 0x13c80df58 'uMap' 'int *'
    |-DeclStmt 0x13c122688 <line:13:2, col:14>
    | `-VarDecl 0x13c122620 <col:2, col:13> col:8 used buf 'char[8]'
    |-DeclStmt 0x13c1227b8 <line:14:2, col:10>
    | |-VarDecl 0x13c1226b8 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x13c122738 <col:2, col:9> col:9 used n 'int'
    `-ForStmt 0x13c122b40 <line:16:2, line:19:2>
      |-BinaryOperator 0x13c122810 <line:16:7, col:11> 'int' '='
      | |-DeclRefExpr 0x13c1227d0 <col:7> 'int' lvalue Var 0x13c1226b8 'i' 'int'
      | `-IntegerLiteral 0x13c1227f0 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13c1228a0 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x13c122870 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x13c122830 <col:14> 'int' lvalue Var 0x13c1226b8 'i' 'int'
      | `-ImplicitCastExpr 0x13c122888 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x13c122850 <col:18> 'int' lvalue ParmVar 0x13c80dd70 'len' 'int'
      |-UnaryOperator 0x13c1228e0 <col:23, col:25> 'int' prefix '++'
      | `-DeclRefExpr 0x13c1228c0 <col:25> 'int' lvalue Var 0x13c1226b8 'i' 'int'
      `-CompoundStmt 0x13c122b28 <col:28, line:19:2>
        `-BinaryOperator 0x13c122ac8 <line:17:3, col:52> 'int' contains-errors '='
          |-DeclRefExpr 0x13c1228f8 <col:3> 'int' lvalue Var 0x13c122738 'n' 'int'
          `-CallExpr 0x13c122a90 <col:7, col:52> '<dependent type>' contains-errors
            |-CXXDependentScopeMemberExpr 0x13c122938 <col:7, col:13> '<dependent type>' contains-errors lvalue ->mapUnicode
            | `-RecoveryExpr 0x13c122918 <col:7> '<dependent type>' contains-errors lvalue
            |-ArraySubscriptExpr 0x13c1229f0 <col:24, col:33> '<dependent type>' contains-errors lvalue
            | |-ImplicitCastExpr 0x13c1229c0 <col:24> '<dependent type>' contains-errors <LValueToRValue>
            | | `-RecoveryExpr 0x13c122980 <col:24> '<dependent type>' contains-errors lvalue
            | `-ImplicitCastExpr 0x13c1229d8 <col:32> 'int' <LValueToRValue>
            |   `-DeclRefExpr 0x13c1229a0 <col:32> 'int' lvalue Var 0x13c1226b8 'i' 'int'
            |-DeclRefExpr 0x13c122a10 <col:36> 'char[8]' lvalue Var 0x13c122620 'buf' 'char[8]'
            `-UnaryExprOrTypeTraitExpr 0x13c122a70 <col:41, col:51> 'unsigned long' sizeof
              `-ParenExpr 0x13c122a50 <col:47, col:51> 'char[8]' lvalue
                `-DeclRefExpr 0x13c122a30 <col:48> 'char[8]' lvalue Var 0x13c122620 'buf' 'char[8]' non_odr_use_unevaluated
