`-FunctionDecl 0x125928318  line:1:12 invalid _hostfs_access 'int (int *, const char *, int)' static
  |-ParmVarDecl 0x125928128 <col:27, col:40> col:40 referenced invalid device 'int *'
  |-ParmVarDecl 0x1259281a8 <col:48, col:60> col:60 used pathname 'const char *'
  |-ParmVarDecl 0x125928228 <col:70, col:74> col:74 used mode 'int'
  `-CompoundStmt 0x1259423d0 <line:2:1, line:23:1>
    |-DeclStmt 0x125928490 <line:3:5, col:17>
    | `-VarDecl 0x1259283f0 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x125928478 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x125928458 <col:16> 'int' 1
    |-BinaryOperator 0x125928748 <line:4:5, col:39> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x125928728 <col:5, col:15> '<dependent type>' contains-errors '*'
    | | |-RecoveryExpr 0x1259284c8 <col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x1259284a8 <col:5> 'int *' lvalue ParmVar 0x125928128 'device' 'int *'
    | | `-RecoveryExpr 0x125928708 <col:15> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1259286c0 <col:20, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125928680 <col:20> 'int ()' Function 0x1259285c8 '_cast_device' 'int ()'
    |   `-RecoveryExpr 0x1259286a0 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125941800 <line:5:5, col:32>
    | `-VarDecl 0x125928790 <col:5, col:10> col:10 invalid host_path 'char'
    |-DeclStmt 0x125941920 <line:6:5, col:56>
    | `-VarDecl 0x125941830 <col:5, col:20> col:20 invalid MASK 'const int'
    |-DeclStmt 0x1259419f0 <line:7:5, col:20>
    | `-VarDecl 0x125941950 <col:5, col:19> col:9 used retval 'int' cinit
    |   `-UnaryOperator 0x1259419d8 <col:18, col:19> 'int' prefix '-'
    |     `-IntegerLiteral 0x1259419b8 <col:19> 'int' 1
    |-IfStmt 0x125941c80 <line:9:5, line:10:33>
    | |-RecoveryExpr 0x125941ad8 <line:9:9, col:52> '_Bool' contains-errors
    | `-CallExpr 0x125941c58 <line:10:9, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125941bd8 <col:9> 'int ()' Function 0x125941b20 'OE_RAISE_ERRNO' 'int ()'
    |   `-RecoveryExpr 0x125941c38 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125941f90 <line:12:5, line:13:32>
    | |-BinaryOperator 0x125941ec8 <line:12:9, col:53> 'int' contains-errors '!='
    | | |-CallExpr 0x125941e90 <col:9, col:48> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125941d80 <col:9> 'int ()' Function 0x125941cc8 '_make_host_path' 'int ()'
    | | | |-RecoveryExpr 0x125941e70 <col:25> '<dependent type>' contains-errors lvalue
    | | | |-DeclRefExpr 0x125941db8 <col:29> 'const char *' lvalue ParmVar 0x1259281a8 'pathname' 'const char *'
    | | | `-RecoveryExpr 0x125941dd8 <col:39> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x125941e30 <col:53> 'int' 0
    | `-CallExpr 0x125941f68 <line:13:9, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125941ee8 <col:9> 'int ()' Function 0x125941b20 'OE_RAISE_ERRNO' 'int ()'
    |   `-RecoveryExpr 0x125941f48 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125942280 <line:15:5, line:16:33>
    | |-BinaryOperator 0x1259421b8 <line:15:9, col:62> 'int' contains-errors '!='
    | | |-CallExpr 0x125942128 <col:9, col:57> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125942090 <col:9> 'int ()' Function 0x125941fd8 'oe_syscall_access_ocall' 'int ()'
    | | | |-UnaryOperator 0x1259420d0 <col:33, col:34> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x1259420b0 <col:34> 'int' lvalue Var 0x125941950 'retval' 'int'
    | | | |-RecoveryExpr 0x1259420e8 <col:42> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x125942108 <col:53> 'int' lvalue ParmVar 0x125928228 'mode' 'int'
    | | `-RecoveryExpr 0x125942198 <col:62> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x125942258 <line:16:9, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1259421d8 <col:9> 'int ()' Function 0x125941b20 'OE_RAISE_ERRNO' 'int ()'
    |   `-RecoveryExpr 0x125942238 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1259422f8 <line:18:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1259422a0 <col:5> 'int' lvalue Var 0x1259283f0 'ret' 'int'
    | `-ImplicitCastExpr 0x1259422e0 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1259422c0 <col:11> 'int' lvalue Var 0x125941950 'retval' 'int'
    `-LabelStmt 0x1259423b0 <line:20:1, line:22:12> 'done'
      `-ReturnStmt 0x125942350 <col:5, col:12>
        `-ImplicitCastExpr 0x125942338 <col:12> 'int' <LValueToRValue>
          `-DeclRefExpr 0x125942318 <col:12> 'int' lvalue Var 0x1259283f0 'ret' 'int'
