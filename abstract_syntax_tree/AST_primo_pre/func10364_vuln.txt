`-FunctionDecl 0x1391281f8  line:1:16 invalid shift 'int *(int *)' static
  |-ParmVarDecl 0x139128128 <col:22, col:32> col:32 invalid J 'int *'
  `-CompoundStmt 0x139141d28 <line:2:1, line:9:1>
    |-LabelStmt 0x1391418d8 <line:4:1, line:5:73> 'loop'
    | `-IfStmt 0x1391418b8 <col:2, col:73>
    |   |-CallExpr 0x139128610 <col:6, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x139128568 <col:6> 'int ()' Function 0x1391284b0 'jsP_accept' 'int ()'
    |   | |-RecoveryExpr 0x139128588 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1391285f0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x1391418a0 <col:29, col:73>
    |     `-GotoStmt 0x139141888 <col:62, col:67> 'loop' 0x139141838
    |-IfStmt 0x139141af0 <line:6:2, col:73>
    | |-CallExpr 0x1391419a0 <col:6, col:26> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1391418f8 <col:6> 'int ()' Function 0x1391284b0 'jsP_accept' 'int ()'
    | | |-RecoveryExpr 0x139141918 <col:17> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x139141980 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139141ad8 <col:29, col:73>
    |   `-GotoStmt 0x139141ac0 <col:62, col:67> 'loop' 0x139141838
    `-IfStmt 0x139141d08 <line:7:2, col:75>
      |-CallExpr 0x139141bb8 <col:6, col:27> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x139141b10 <col:6> 'int ()' Function 0x1391284b0 'jsP_accept' 'int ()'
      | |-RecoveryExpr 0x139141b30 <col:17> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x139141b98 <col:20> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x139141cf0 <col:30, col:75>
        `-GotoStmt 0x139141cd8 <col:64, col:69> 'loop' 0x139141838
