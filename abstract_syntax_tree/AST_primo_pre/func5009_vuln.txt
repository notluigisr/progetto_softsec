`-FunctionDecl 0x120928288  line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x120928128 <col:19, col:34> col:34 referenced invalid context 'int *'
  |-ParmVarDecl 0x1209281a8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x120942430 <col:61, line:21:1>
    |-DeclStmt 0x1209283c0 <line:2:3, col:29>
    | `-VarDecl 0x120928358 <col:3, col:23> col:23 referenced invalid params 'const int *'
    |-CallExpr 0x120941800 <line:3:3, col:75> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x120928530 <col:3> 'int ()' Function 0x120928478 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x120928550 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1209287b0 <col:30, col:74> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120928650 <col:30> 'int ()' Function 0x120928598 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x120928670 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120928690 <col:52> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120928790 <col:58> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1209286e8 <col:67, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1209286c8 <col:68> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1209418b0 <line:4:3, col:30>
    | `-VarDecl 0x120941848 <col:3, col:23> col:23 referenced invalid indices 'const int *'
    |-CallExpr 0x120941aa8 <line:5:3, col:77> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1209418c8 <col:3> 'int ()' Function 0x120928478 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x1209418e8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x120941a68 <col:30, col:76> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120941908 <col:30> 'int ()' Function 0x120928598 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x120941928 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120941948 <col:52> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120941a48 <col:58> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1209419a0 <col:68, col:69> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x120941980 <col:69> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x120941dc0 <line:7:3, line:8:73> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x120941af0 <line:7:3> 'int ()' Function 0x120928478 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x120941b10 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x120941d80 <line:8:21, col:72> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120941c10 <col:21> 'int ()' Function 0x120941b58 'GetOutputSafe' 'int ()'
    |   |-RecoveryExpr 0x120941c30 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120941c50 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x120941d28 <col:50> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x120941d68 <col:65, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x120941d48 <col:66> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x120941e70 <line:10:3, line:20:3>
      |-ImplicitCastExpr 0x120941e58 <line:10:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x120941e10 <col:11, col:20> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x120941df0 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x120942418 <col:26, line:20:3>
        `-DefaultStmt 0x1209423f8 <line:15:5, line:18:43>
          `-CallExpr 0x1209423c0 <line:16:7, line:18:43> '<dependent type>' contains-errors
            |-CXXDependentScopeMemberExpr 0x120942160 <line:16:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
            | `-RecoveryExpr 0x120942138 <col:7> '<dependent type>' contains-errors lvalue
            |   `-DeclRefExpr 0x120942118 <col:7> 'int *' lvalue ParmVar 0x120928128 'context' 'int *'
            |-RecoveryExpr 0x1209421a8 <line:17:11> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x120942210 <col:20> 'char[4]' lvalue "STR"
            `-CallExpr 0x120942398 <line:18:11, col:42> '<dependent type>' contains-errors
              |-DeclRefExpr 0x120942310 <col:11> 'int ()' Function 0x120942258 'TfLiteTypeGetName' 'int ()'
              `-CXXDependentScopeMemberExpr 0x120942350 <col:29, col:38> '<dependent type>' contains-errors lvalue ->type
                `-RecoveryExpr 0x120942330 <col:29> '<dependent type>' contains-errors lvalue
