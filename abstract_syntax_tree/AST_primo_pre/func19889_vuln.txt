`-FunctionDecl 0x1381281a8  line:1:8 PHP_FUNCTION 'int (int)' static
  |-ParmVarDecl 0x1381280d8 <col:21> col:21 preg_split 'int'
  `-CompoundStmt 0x138140f60 <line:2:1, line:23:1>
    |-DeclStmt 0x138128320 <line:3:2, col:16>
    | `-VarDecl 0x1381282b8 <col:2, col:11> col:11 used regex 'char *'
    |-DeclStmt 0x1381283b8 <line:4:2, col:18>
    | `-VarDecl 0x138128350 <col:2, col:11> col:11 used subject 'char *'
    |-DeclStmt 0x138128450 <line:5:2, col:20>
    | `-VarDecl 0x1381283e8 <col:2, col:11> col:11 used regex_len 'int'
    |-DeclStmt 0x1381284e8 <line:6:2, col:22>
    | `-VarDecl 0x138128480 <col:2, col:11> col:11 used subject_len 'int'
    |-DeclStmt 0x1381285d0 <line:7:2, col:25>
    | `-VarDecl 0x138128518 <col:2, col:24> col:11 used limit_val 'long' cinit
    |   `-ImplicitCastExpr 0x1381285b8 <col:23, col:24> 'long' <IntegralCast>
    |     `-UnaryOperator 0x1381285a0 <col:23, col:24> 'int' prefix '-'
    |       `-IntegerLiteral 0x138128580 <col:24> 'int' 1
    |-DeclStmt 0x1381286a0 <line:8:2, col:20>
    | `-VarDecl 0x138128600 <col:2, col:19> col:11 used flags 'long' cinit
    |   `-ImplicitCastExpr 0x138128688 <col:19> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x138128668 <col:19> 'int' 0
    |-IfStmt 0x138140bd0 <line:12:2, line:15:2>
    | |-RecoveryExpr 0x138140ba0 <line:12:6, line:13:57> '_Bool' contains-errors
    | `-CompoundStmt 0x138140bc0 <col:66, line:15:2>
    `-IfStmt 0x138140d90 <line:18:2, line:20:2>
      |-RecoveryExpr 0x138140d60 <line:18:6, col:75> '_Bool' contains-errors
      `-CompoundStmt 0x138140d80 <col:81, line:20:2>
