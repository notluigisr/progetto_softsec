`-FunctionDecl 0x153140ae8  line:1:14 ptr_to_id 'char *(char *, char *, void *, struct printf_spec)' static
  |-ParmVarDecl 0x1531280d8 <col:24, col:30> col:30 used buf 'char *'
  |-ParmVarDecl 0x153128158 <col:35, col:41> col:41 used end 'char *'
  |-ParmVarDecl 0x1531281d8 <col:46, col:52> col:52 referenced ptr 'void *'
  |-ParmVarDecl 0x153128758 <col:57, col:76> col:76 referenced invalid spec 'struct printf_spec'
  `-CompoundStmt 0x153141648 <line:2:1, line:19:1>
    |-DeclStmt 0x153140c78 <line:3:2, col:23>
    | `-VarDecl 0x153140c10 <col:2, col:16> col:16 used hashval 'unsigned long'
    |-IfStmt 0x153141260 <line:5:2, line:9:2>
    | |-CallExpr 0x153140ea0 <line:5:6, col:42> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x153140dc0 <col:6> 'int ()' Function 0x153140d08 'unlikely' 'int ()'
    | | `-UnaryOperator 0x153140e88 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x153140e70 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x153140e50 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x153141240 <col:45, line:9:2>
    |   |-BinaryOperator 0x153141010 <line:6:3, col:36> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x153140f10 <col:3, col:8> '<dependent type>' contains-errors lvalue .field_width
    |   | | `-RecoveryExpr 0x153140ee8 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x153140ec8 <col:3> 'struct printf_spec' lvalue ParmVar 0x153128758 'spec' 'struct printf_spec'
    |   | `-BinaryOperator 0x153140ff0 <col:22, col:36> 'unsigned long' '*'
    |   |   |-ImplicitCastExpr 0x153140fd8 <col:22> 'unsigned long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x153140f58 <col:22> 'int' 2
    |   |   `-UnaryExprOrTypeTraitExpr 0x153140fb8 <col:26, col:36> 'unsigned long' sizeof
    |   |     `-ParenExpr 0x153140f98 <col:32, col:36> 'void *' lvalue
    |   |       `-DeclRefExpr 0x153140f78 <col:33> 'void *' lvalue ParmVar 0x1531281d8 'ptr' 'void *' non_odr_use_unevaluated
    |   `-ReturnStmt 0x153141230 <line:8:3, col:38>
    |     `-CallExpr 0x1531411f0 <col:10, col:38> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x153141110 <col:10> 'int ()' Function 0x153141058 'string' 'int ()'
    |       |-DeclRefExpr 0x153141130 <col:17> 'char *' lvalue ParmVar 0x1531280d8 'buf' 'char *'
    |       |-DeclRefExpr 0x153141150 <col:22> 'char *' lvalue ParmVar 0x153128158 'end' 'char *'
    |       |-StringLiteral 0x1531411b0 <col:27> 'char[4]' lvalue "STR"
    |       `-RecoveryExpr 0x1531411d0 <col:34> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x153141638 <line:18:2, col:61>
      `-CallExpr 0x1531415f8 <col:9, col:61> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1531414c8 <col:9> 'int ()' Function 0x153141410 'pointer_string' 'int ()'
        |-DeclRefExpr 0x1531414e8 <col:24> 'char *' lvalue ParmVar 0x1531280d8 'buf' 'char *'
        |-DeclRefExpr 0x153141508 <col:29> 'char *' lvalue ParmVar 0x153128158 'end' 'char *'
        |-CStyleCastExpr 0x1531415b0 <col:34, col:48> 'const void *' <IntegralToPointer>
        | `-ImplicitCastExpr 0x153141598 <col:48> 'unsigned long' <LValueToRValue> part_of_explicit_cast
        |   `-DeclRefExpr 0x153141528 <col:48> 'unsigned long' lvalue Var 0x153140c10 'hashval' 'unsigned long'
        `-RecoveryExpr 0x1531415d8 <col:57> '<dependent type>' contains-errors lvalue
