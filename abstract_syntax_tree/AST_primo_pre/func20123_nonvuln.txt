`-FunctionDecl 0x157027670  line:1:6 referenced mark_progress 'void (struct st_command *, int)'
  |-ParmVarDecl 0x15700e248 <col:20, col:39> col:39 command 'struct st_command *'
  | `-UnusedAttr 0x15700e2b0 <col:62> unused
  |-ParmVarDecl 0x15700e320 <line:2:20, col:24> col:24 used line 'int'
  `-CompoundStmt 0x15702c750 <line:3:1, line:41:1>
    |-DeclStmt 0x157027828 <line:4:3, col:37>
    | `-VarDecl 0x1570277a0 <col:3, col:20> col:20 referenced invalid progress_start 'int' static
    |-DeclStmt 0x1570279e0 <line:7:3, col:21>
    | |-VarDecl 0x1570278e0 <col:3, col:14> col:8 used buf 'char[32]'
    | `-VarDecl 0x157027960 <col:3, col:18> col:18 used end 'char *'
    |-IfStmt 0x157027b08 <line:9:3, line:10:21>
    | |-UnaryOperator 0x157027a30 <line:9:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x157027a18 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1570279f8 <col:8> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x157027ae8 <line:10:5, col:21> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x157027a68 <col:5> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x157027a48 <col:5> 'int' lvalue Var 0x1570277a0 'progress_start' 'int'
    |   `-RecoveryExpr 0x157027ac8 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x157028088 <line:13:3, line:14:14>
    | |-CallExpr 0x157027e78 <line:13:7, col:53> 'int'
    | | |-ImplicitCastExpr 0x157027e60 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x157027c60 <col:7> 'int ()' Function 0x157027ba8 'init_dynamic_string' 'int ()'
    | | |-UnaryOperator 0x157027e10 <col:27, col:28> 'void (*)(struct st_command *, int)' prefix '&' cannot overflow
    | | | `-DeclRefExpr 0x157027d88 <col:28> 'void (struct st_command *, int)' Function 0x157027670 'mark_progress' 'void (struct st_command *, int)'
    | | |-ImplicitCastExpr 0x157027eb8 <col:41> 'char *' <ArrayToPointerDecay>
    | | | `-StringLiteral 0x157027cf0 <col:41> 'char[1]' lvalue ""
    | | |-IntegerLiteral 0x157027d08 <col:45> 'int' 256
    | | `-IntegerLiteral 0x157027d28 <col:50> 'int' 256
    | `-CallExpr 0x157028048 <line:14:5, col:14> 'int'
    |   |-ImplicitCastExpr 0x157028030 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x157027fb0 <col:5> 'int ()' Function 0x157027ef8 'die' 'int ()'
    |   `-ImplicitCastExpr 0x157028070 <col:9> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x157028010 <col:9> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x1570282d0 <line:17:3, col:35> 'char *' contains-errors '='
    | |-DeclRefExpr 0x1570280a8 <col:3> 'char *' lvalue Var 0x157027960 'end' 'char *'
    | `-CallExpr 0x157028298 <col:8, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1570281a8 <col:8> 'int ()' Function 0x1570280f0 'longlong2str' 'int ()'
    |   |-RecoveryExpr 0x157028278 <col:21> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x1570281e0 <col:28> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    |   `-IntegerLiteral 0x157028200 <col:33> 'int' 10
    |-CallExpr 0x15702b898 <line:18:3, col:54> 'int'
    | |-ImplicitCastExpr 0x15702b880 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1570283d0 <col:3> 'int ()' Function 0x157028318 'dynstr_append_mem' 'int ()'
    | |-UnaryOperator 0x1570285a8 <col:21, col:22> 'void (*)(struct st_command *, int)' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x157028588 <col:22> 'void (struct st_command *, int)' Function 0x157027670 'mark_progress' 'void (struct st_command *, int)'
    | |-ImplicitCastExpr 0x15702b8d0 <col:35> 'char *' <ArrayToPointerDecay>
    | | `-DeclRefExpr 0x157028420 <col:35> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    | `-CStyleCastExpr 0x15702b858 <col:40, col:53> 'int' <IntegralCast>
    |   `-ParenExpr 0x15702b838 <col:45, col:53> 'long'
    |     `-BinaryOperator 0x15702b818 <col:46, col:50> 'long' '-'
    |       |-ImplicitCastExpr 0x1570285d8 <col:46> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x157028440 <col:46> 'char *' lvalue Var 0x157027960 'end' 'char *'
    |       `-ImplicitCastExpr 0x15702b800 <col:50> 'char *' <ArrayToPointerDecay>
    |         `-DeclRefExpr 0x157028460 <col:50> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    |-CallExpr 0x15702ba00 <line:19:3, col:43> 'int'
    | |-ImplicitCastExpr 0x15702b9e8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15702b8e8 <col:3> 'int ()' Function 0x157028318 'dynstr_append_mem' 'int ()'
    | |-UnaryOperator 0x15702b9d0 <col:21, col:22> 'void (*)(struct st_command *, int)' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x15702b9b0 <col:22> 'void (struct st_command *, int)' Function 0x157027670 'mark_progress' 'void (struct st_command *, int)'
    | |-ImplicitCastExpr 0x15702ba38 <col:35> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x15702b938 <col:35> 'char[4]' lvalue "STR"
    | `-IntegerLiteral 0x15702b958 <col:42> 'int' 1
    |-BinaryOperator 0x15702bc68 <line:22:3, col:34> 'char *' '='
    | |-DeclRefExpr 0x15702ba50 <col:3> 'char *' lvalue Var 0x157027960 'end' 'char *'
    | `-ImplicitCastExpr 0x15702bc50 <col:8, col:34> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x15702bbe8 <col:8, col:34> 'int'
    |     |-ImplicitCastExpr 0x15702bbd0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15702bb50 <col:8> 'int ()' Function 0x15702ba98 'int10_to_str' 'int ()'
    |     |-ImplicitCastExpr 0x15702bc20 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15702bb70 <col:21> 'int' lvalue ParmVar 0x15700e320 'line' 'int'
    |     |-ImplicitCastExpr 0x15702bc38 <col:27> 'char *' <ArrayToPointerDecay>
    |     | `-DeclRefExpr 0x15702bb90 <col:27> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    |     `-IntegerLiteral 0x15702bbb0 <col:32> 'int' 10
    |-CallExpr 0x15702bf40 <line:23:3, col:54> 'int'
    | |-ImplicitCastExpr 0x15702bf28 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15702bc88 <col:3> 'int ()' Function 0x157028318 'dynstr_append_mem' 'int ()'
    | |-UnaryOperator 0x15702be60 <col:21, col:22> 'void (*)(struct st_command *, int)' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x15702be40 <col:22> 'void (struct st_command *, int)' Function 0x157027670 'mark_progress' 'void (struct st_command *, int)'
    | |-ImplicitCastExpr 0x15702bf78 <col:35> 'char *' <ArrayToPointerDecay>
    | | `-DeclRefExpr 0x15702bcd8 <col:35> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    | `-CStyleCastExpr 0x15702bf00 <col:40, col:53> 'int' <IntegralCast>
    |   `-ParenExpr 0x15702bee0 <col:45, col:53> 'long'
    |     `-BinaryOperator 0x15702bec0 <col:46, col:50> 'long' '-'
    |       |-ImplicitCastExpr 0x15702be90 <col:46> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x15702bcf8 <col:46> 'char *' lvalue Var 0x157027960 'end' 'char *'
    |       `-ImplicitCastExpr 0x15702bea8 <col:50> 'char *' <ArrayToPointerDecay>
    |         `-DeclRefExpr 0x15702bd18 <col:50> 'char[32]' lvalue Var 0x1570278e0 'buf' 'char[32]'
    |-CallExpr 0x15702c0a8 <line:24:3, col:43> 'int'
    | |-ImplicitCastExpr 0x15702c090 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15702bf90 <col:3> 'int ()' Function 0x157028318 'dynstr_append_mem' 'int ()'
    | |-UnaryOperator 0x15702c078 <col:21, col:22> 'void (*)(struct st_command *, int)' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x15702c058 <col:22> 'void (struct st_command *, int)' Function 0x157027670 'mark_progress' 'void (struct st_command *, int)'
    | |-ImplicitCastExpr 0x15702c0e0 <col:35> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x15702bfe0 <col:35> 'char[4]' lvalue "STR"
    | `-IntegerLiteral 0x15702c000 <col:42> 'int' 1
    `-CallExpr 0x15702c390 <line:27:3, col:50> '<dependent type>' contains-errors
      |-DeclRefExpr 0x15702c1d8 <col:3> 'int ()' Function 0x15702c120 'dynstr_append' 'int ()'
      |-UnaryOperator 0x15702c310 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-RecoveryExpr 0x15702c2f0 <col:18> '<dependent type>' contains-errors lvalue
      `-CXXDependentScopeMemberExpr 0x15702c348 <col:31, col:41> '<dependent type>' contains-errors lvalue ->file_name
        `-RecoveryExpr 0x15702c328 <col:31> '<dependent type>' contains-errors lvalue
