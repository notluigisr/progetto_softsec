`-FunctionDecl 0x1431281c8  line:1:13 invalid is_iso_latin1_printable 'int (unsigned char)' static
  |-ParmVarDecl 0x1431280f0 <col:37, col:51> col:51 used ch 'unsigned char'
  `-CompoundStmt 0x143128518 <line:2:1, line:4:1>
    `-ReturnStmt 0x143128508 <line:3:5, col:55>
      `-ParenExpr 0x1431284e8 <col:12, col:55> 'int'
        `-BinaryOperator 0x1431284c8 <col:13, col:54> 'int' '||'
          |-ParenExpr 0x1431283f8 <col:13, col:39> 'int'
          | `-BinaryOperator 0x1431283d8 <col:14, col:38> 'int' '&&'
          |   |-ParenExpr 0x143128308 <col:14, col:23> 'int'
          |   | `-BinaryOperator 0x1431282e8 <col:15, col:21> 'int' '>='
          |   |   |-ImplicitCastExpr 0x1431282d0 <col:15> 'int' <IntegralCast>
          |   |   | `-ImplicitCastExpr 0x1431282b8 <col:15> 'unsigned char' <LValueToRValue>
          |   |   |   `-DeclRefExpr 0x143128278 <col:15> 'unsigned char' lvalue ParmVar 0x1431280f0 'ch' 'unsigned char'
          |   |   `-IntegerLiteral 0x143128298 <col:21> 'int' 32
          |   `-ParenExpr 0x1431283b8 <col:28, col:38> 'int'
          |     `-BinaryOperator 0x143128398 <col:29, col:35> 'int' '<='
          |       |-ImplicitCastExpr 0x143128380 <col:29> 'int' <IntegralCast>
          |       | `-ImplicitCastExpr 0x143128368 <col:29> 'unsigned char' <LValueToRValue>
          |       |   `-DeclRefExpr 0x143128328 <col:29> 'unsigned char' lvalue ParmVar 0x1431280f0 'ch' 'unsigned char'
          |       `-IntegerLiteral 0x143128348 <col:35> 'int' 126
          `-ParenExpr 0x1431284a8 <col:44, col:54> 'int'
            `-BinaryOperator 0x143128488 <col:45, col:51> 'int' '>='
              |-ImplicitCastExpr 0x143128470 <col:45> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x143128458 <col:45> 'unsigned char' <LValueToRValue>
              |   `-DeclRefExpr 0x143128418 <col:45> 'unsigned char' lvalue ParmVar 0x1431280f0 'ch' 'unsigned char'
              `-IntegerLiteral 0x143128438 <col:51> 'int' 160
