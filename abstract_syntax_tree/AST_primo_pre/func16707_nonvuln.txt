`-FunctionDecl 0x12d026600  line:1:13 sco_conn_del 'void (struct hci_conn *, int)' static
  |-ParmVarDecl 0x12d00e248 <col:26, col:43> col:43 used hcon 'struct hci_conn *'
  |-ParmVarDecl 0x12d00e2c8 <col:49, col:53> col:53 used err 'int'
  `-CompoundStmt 0x12d029850 <line:2:1, line:30:1>
    |-DeclStmt 0x12d026948 <line:3:2, col:40>
    | |-RecordDecl 0x12d026700 <col:2, col:9> col:9 struct sco_conn
    | `-VarDecl 0x12d026868 <col:2, col:32> col:19 used conn 'struct sco_conn *' cinit
    |   `-RecoveryExpr 0x12d026908 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d0268d0 <col:26> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'
    |-DeclStmt 0x12d026b48 <line:4:2, col:17>
    | |-RecordDecl 0x12d026960 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12d026ac8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-IfStmt 0x12d026bc0 <line:6:2, line:7:3>
    | |-UnaryOperator 0x12d026b98 <line:6:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12d026b80 <col:7> 'struct sco_conn *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12d026b60 <col:7> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    | `-ReturnStmt 0x12d026bb0 <line:7:3>
    |-CallExpr 0x12d026e38 <line:9:2, col:31> 'int' contains-errors
    | |-ImplicitCastExpr 0x12d026e20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d026d10 <col:2> 'int ()' Function 0x12d026c58 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12d026e78 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12d026d70 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x12d026e90 <col:16> 'struct hci_conn *' <LValueToRValue>
    | | `-DeclRefExpr 0x12d026d90 <col:16> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'
    | |-ImplicitCastExpr 0x12d026ea8 <col:22> 'struct sco_conn *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12d026db0 <col:22> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    | `-ImplicitCastExpr 0x12d026ec0 <col:28> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12d026dd0 <col:28> 'int' lvalue ParmVar 0x12d00e2c8 'err' 'int'
    |-CallExpr 0x12d027010 <line:12:2, col:20> 'int' contains-errors
    | |-ImplicitCastExpr 0x12d026ff8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d026fb8 <col:2> 'int ()' Function 0x12d026f00 'sco_conn_lock' 'int ()'
    | `-ImplicitCastExpr 0x12d027038 <col:16> 'struct sco_conn *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x12d026fd8 <col:16> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    |-BinaryOperator 0x12d0270d0 <line:13:2, col:13> 'struct sock *' contains-errors '='
    | |-DeclRefExpr 0x12d027050 <col:2> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x12d0270a8 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12d027070 <col:7> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    |-CallExpr 0x12d027228 <line:14:2, col:22> 'int' contains-errors
    | |-ImplicitCastExpr 0x12d027210 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d0271d0 <col:2> 'int ()' Function 0x12d027118 'sco_conn_unlock' 'int ()'
    | `-ImplicitCastExpr 0x12d027250 <col:18> 'struct sco_conn *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x12d0271f0 <col:18> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    |-IfStmt 0x12d0295e0 <line:16:2, line:26:2>
    | |-ImplicitCastExpr 0x12d027288 <line:16:6> 'struct sock *' <LValueToRValue>
    | | `-DeclRefExpr 0x12d027268 <col:6> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    | `-CompoundStmt 0x12d029598 <col:10, line:26:2>
    |   |-CallExpr 0x12d0273d8 <line:17:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x12d0273c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d027380 <col:3> 'int ()' Function 0x12d0272c8 'sock_hold' 'int ()'
    |   | `-ImplicitCastExpr 0x12d027400 <col:13> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d0273a0 <col:13> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   |-CallExpr 0x12d027550 <line:18:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x12d027538 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d0274f8 <col:3> 'int ()' Function 0x12d027440 'lock_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x12d027578 <col:13> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d027518 <col:13> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   |-CallExpr 0x12d028f10 <line:19:3, col:26> 'int'
    |   | |-ImplicitCastExpr 0x12d028ef8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d028eb8 <col:3> 'int ()' Function 0x12d028e00 'sco_sock_clear_timer' 'int ()'
    |   | `-ImplicitCastExpr 0x12d028f38 <col:24> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d028ed8 <col:24> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   |-CallExpr 0x12d0290a8 <line:20:3, col:23> 'int'
    |   | |-ImplicitCastExpr 0x12d029090 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d029030 <col:3> 'int ()' Function 0x12d028f78 'sco_chan_del' 'int ()'
    |   | |-ImplicitCastExpr 0x12d0290d8 <col:16> 'struct sock *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12d029050 <col:16> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   | `-ImplicitCastExpr 0x12d0290f0 <col:20> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d029070 <col:20> 'int' lvalue ParmVar 0x12d00e2c8 'err' 'int'
    |   |-CallExpr 0x12d029240 <line:21:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x12d029228 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d0291e8 <col:3> 'int ()' Function 0x12d029130 'release_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x12d029268 <col:16> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d029208 <col:16> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   |-CallExpr 0x12d0293b8 <line:22:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x12d0293a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12d029360 <col:3> 'int ()' Function 0x12d0292a8 'sock_put' 'int ()'
    |   | `-ImplicitCastExpr 0x12d0293e0 <col:12> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12d029380 <col:12> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'
    |   `-CallExpr 0x12d029570 <line:25:3, col:47> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d0294d8 <col:3> 'int ()' Function 0x12d029420 'cancel_delayed_work_sync' 'int ()'
    |     `-UnaryOperator 0x12d029558 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12d029530 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12d0294f8 <col:29> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
    |-BinaryOperator 0x12d0296b8 <line:28:2, col:19> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12d029638 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12d029600 <col:2> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'
    | `-RecoveryExpr 0x12d029698 <col:19> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12d029810 <line:29:2, col:12> 'int' contains-errors
      |-ImplicitCastExpr 0x12d0297f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12d0297b8 <col:2> 'int ()' Function 0x12d029700 'kfree' 'int ()'
      `-ImplicitCastExpr 0x12d029838 <col:8> 'struct sco_conn *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12d0297d8 <col:8> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'
