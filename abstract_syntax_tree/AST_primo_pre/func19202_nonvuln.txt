`-FunctionDecl 0x16000df18  line:1:5 invalid qemu_chr_fe_write_all 'int (int *, const int *, int)'
  |-ParmVarDecl 0x16000dd28 <col:27, col:40> col:40 invalid be 'int *'
  |-ParmVarDecl 0x16000dda8 <col:44, col:59> col:59 invalid buf 'const int *'
  |-ParmVarDecl 0x16000de28 <col:64, col:68> col:68 used len 'int'
  `-CompoundStmt 0x16000e3c8 <line:2:1, line:10:1>
    |-IfStmt 0x16000e138 <line:5:5, line:7:5>
    | |-UnaryOperator 0x16000e0d8 <line:5:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x16000e0c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x16000e0a0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x16000e120 <col:13, line:7:5>
    |   `-ReturnStmt 0x16000e110 <line:6:9, col:16>
    |     `-IntegerLiteral 0x16000e0f0 <col:16> 'int' 0
    `-ReturnStmt 0x16000e3b8 <line:9:5, col:42>
      `-CallExpr 0x16000e380 <col:12, col:42> '<dependent type>' contains-errors
        |-DeclRefExpr 0x16000e2b0 <col:12> 'int ()' Function 0x16000e1f8 'qemu_chr_write_all' 'int ()'
        |-RecoveryExpr 0x16000e360 <col:31> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x16000e2e8 <col:34> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x16000e308 <col:39> 'int' lvalue ParmVar 0x16000de28 'len' 'int'
