`-FunctionDecl 0x144928310  line:1:6 invalid jsP_dumpsyntax 'void (int *, int *, int)'
  |-ParmVarDecl 0x144928128 <col:21, col:31> col:31 invalid J 'int *'
  |-ParmVarDecl 0x1449281a8 <col:34, col:42> col:42 invalid prog 'int *'
  |-ParmVarDecl 0x144928228 <col:48, col:52> col:52 used dominify 'int'
  `-CompoundStmt 0x144941c80 <line:2:1, line:12:1>
    |-BinaryOperator 0x144928428 <line:3:2, col:11> 'int' '='
    | |-DeclRefExpr 0x1449283d0 <col:2> 'int' lvalue ParmVar 0x144928228 'dominify' 'int'
    | `-ImplicitCastExpr 0x144928410 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1449283f0 <col:11> 'int' lvalue ParmVar 0x144928228 'dominify' 'int'
    |-IfStmt 0x144941a28 <line:4:2, line:9:2> has_else
    | |-BinaryOperator 0x144928508 <line:4:6, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x144928468 <col:6, col:12> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x144928448 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1449284e8 <col:20> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1449286f8 <line:5:3, col:20> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x144928680 <col:3> 'int ()' Function 0x1449285c8 'pstmlist' 'int ()'
    | | |-UnaryOperator 0x1449286c0 <col:12, col:13> 'int' prefix '-'
    | | | `-IntegerLiteral 0x1449286a0 <col:13> 'int' 1
    | | `-RecoveryExpr 0x1449286d8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x144941a08 <line:6:7, line:9:2>
    |   |-CallExpr 0x144941870 <line:7:3, col:15> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x144941810 <col:3> 'int ()' Function 0x144928750 'pstm' 'int ()'
    |   | |-IntegerLiteral 0x144941830 <col:8> 'int' 0
    |   | `-RecoveryExpr 0x144941850 <col:11> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x1449419e8 <line:8:3, col:6> 'int'
    |     `-ImplicitCastExpr 0x1449419d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x144941980 <col:3> 'int ()' Function 0x1449418c8 'nl' 'int ()'
    `-IfStmt 0x144941c60 <line:10:2, line:11:15>
      |-BinaryOperator 0x144941ae8 <line:10:6, col:15> 'int' '>'
      | |-ImplicitCastExpr 0x144941ad0 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x144941ab0 <col:6> 'int' lvalue ParmVar 0x144928228 'dominify' 'int'
      | `-IntegerLiteral 0x144941a70 <col:15> 'int' 1
      `-CallExpr 0x144941c38 <line:11:3, col:15> 'int'
        |-ImplicitCastExpr 0x144941c20 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x144941be8 <col:3> 'int ()' Function 0x144941b30 'putchar' 'int ()'
        `-CharacterLiteral 0x144941c08 <col:11> 'int' 10
