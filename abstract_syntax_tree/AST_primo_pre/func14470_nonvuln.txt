`-FunctionDecl 0x149128288  line:1:1 invalid add_opt_anc_info 'int (int *, int)'
  |-ParmVarDecl 0x149128128 <col:18, col:30> col:30 referenced invalid to 'int *'
  |-ParmVarDecl 0x1491281a8 <col:34, col:38> col:38 used anc 'int'
  `-CompoundStmt 0x149128758 <line:2:1, line:7:1>
    `-IfStmt 0x149128728 <line:3:3, line:6:25> has_else
      |-CallExpr 0x149128528 <line:3:7, col:25> 'int'
      | |-ImplicitCastExpr 0x149128510 <col:7> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x1491284a0 <col:7> 'int ()' Function 0x1491283e8 'is_left_anchor' 'int ()'
      | `-ImplicitCastExpr 0x149128550 <col:22> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1491284c0 <col:22> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int'
      |-CompoundAssignOperator 0x149128618 <line:4:5, col:24> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      | |-CXXDependentScopeMemberExpr 0x1491285b0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->left_anchor
      | | `-RecoveryExpr 0x149128588 <col:5> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x149128568 <col:5> 'int *' lvalue ParmVar 0x149128128 'to' 'int *'
      | `-DeclRefExpr 0x1491285f8 <col:24> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int'
      `-CompoundAssignOperator 0x1491286f8 <line:6:5, col:25> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |-CXXDependentScopeMemberExpr 0x149128690 <col:5, col:9> '<dependent type>' contains-errors lvalue ->right_anchor
        | `-RecoveryExpr 0x149128668 <col:5> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x149128648 <col:5> 'int *' lvalue ParmVar 0x149128128 'to' 'int *'
        `-DeclRefExpr 0x1491286d8 <col:25> 'int' lvalue ParmVar 0x1491281a8 'anc' 'int'
