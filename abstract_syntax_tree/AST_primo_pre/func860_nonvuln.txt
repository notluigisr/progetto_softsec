`-FunctionDecl 0x12c941bd8  line:1:12 invalid invoke_bpf_prog 'int (const struct btf_func_model *, int **, struct bpf_prog *, int, int)' static
  |-ParmVarDecl 0x12c928648 <col:28, col:57> col:57 m 'const struct btf_func_model *'
  |-ParmVarDecl 0x12c928750 <col:60, col:65> col:65 referenced invalid pprog 'int **'
  |-ParmVarDecl 0x12c941968 <line:2:7, col:24> col:24 used p 'struct bpf_prog *'
  |-ParmVarDecl 0x12c9419e8 <col:27, col:31> col:31 used stack_size 'int'
  |-ParmVarDecl 0x12c941a68 <col:43, col:48> col:48 invalid mod_ret 'int'
  `-CompoundStmt 0x12c946530 <line:3:1, line:53:1>
    |-DeclStmt 0x12c941de8 <line:6:2, col:13>
    | `-VarDecl 0x12c941d60 <col:2, col:12> col:6 cnt 'int' cinit
    |   `-IntegerLiteral 0x12c941dc8 <col:12> 'int' 0
    |-IfStmt 0x12c942508 <line:10:2, line:13:12>
    | |-CallExpr 0x12c942428 <line:10:6, line:12:31> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12c942198 <line:10:6> 'int ()' Function 0x12c9420e0 'emit_call' 'int ()'
    | | |-UnaryOperator 0x12c942380 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x12c942360 <col:17> '<dependent type>' contains-errors lvalue
    | | |-ConditionalOperator 0x12c9423d8 <line:11:9, line:12:9> '<dependent type>' contains-errors
    | | | |-CXXDependentScopeMemberExpr 0x12c942248 <line:11:9, col:17> '<dependent type>' contains-errors lvalue ->sleepable
    | | | | `-RecoveryExpr 0x12c942220 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x12c9421e8 <col:9> 'struct bpf_prog *' lvalue ParmVar 0x12c941968 'p' 'struct bpf_prog *'
    | | | |-RecoveryExpr 0x12c942398 <col:29> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x12c9423b8 <line:12:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12c942408 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12c9424f8 <line:13:4, col:12>
    |   `-UnaryOperator 0x12c9424e0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12c9424c8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12c9424a8 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c942798 <line:15:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c942608 <col:2> 'int ()' Function 0x12c942550 'emit_mov_reg' 'int ()'
    | |-UnaryOperator 0x12c942720 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x12c942700 <col:16> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12c942738 <col:22> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12c942758 <col:28> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12c942778 <col:39> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c945b88 <line:18:2, col:24> 'int'
    | |-ImplicitCastExpr 0x12c945b70 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c945ab8 <col:2> 'int ()' Function 0x12c945a00 'EMIT3' 'int ()'
    | |-IntegerLiteral 0x12c945ad8 <col:8> 'int' 72
    | |-IntegerLiteral 0x12c945af8 <col:14> 'int' 133
    | `-IntegerLiteral 0x12c945b18 <col:20> 'int' 192
    |-CallExpr 0x12c945ea8 <line:24:2, col:37> 'int'
    | |-ImplicitCastExpr 0x12c945e90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c945dc0 <col:2> 'int ()' Function 0x12c945d08 'EMIT4' 'int ()'
    | |-IntegerLiteral 0x12c945de0 <col:8> 'int' 72
    | |-IntegerLiteral 0x12c945e00 <col:14> 'int' 141
    | |-IntegerLiteral 0x12c945e20 <col:20> 'int' 125
    | `-UnaryOperator 0x12c945e78 <col:26, col:27> 'int' prefix '-'
    |   `-ImplicitCastExpr 0x12c945e60 <col:27> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12c945e40 <col:27> 'int' lvalue ParmVar 0x12c9419e8 'stack_size' 'int'
    `-ReturnStmt 0x12c946520 <line:52:2, col:9>
      `-IntegerLiteral 0x12c946500 <col:9> 'int' 0
