`-FunctionDecl 0x120928258  line:1:1 invalid imapx_uids_array_cmp 'int (int, int)'
  |-ParmVarDecl 0x1209280f0 <col:23, col:37> col:37 invalid ap 'int'
  |-ParmVarDecl 0x120928170 <line:2:23, col:37> col:37 invalid bp 'int'
  `-CompoundStmt 0x12100a6c8 <line:3:1, line:8:1>
    |-DeclStmt 0x120928420 <line:4:2, col:39>
    | `-VarDecl 0x120928358 <col:2, col:37> col:16 used a 'const char **' cinit
    |   `-CStyleCastExpr 0x1209283f8 <col:20, col:37> 'const char **' contains-errors <Dependent>
    |     `-RecoveryExpr 0x1209283c0 <col:37> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x120928518 <line:5:2, col:39>
    | `-VarDecl 0x120928450 <col:2, col:37> col:16 used b 'const char **' cinit
    |   `-CStyleCastExpr 0x1209284f0 <col:20, col:37> 'const char **' contains-errors <Dependent>
    |     `-RecoveryExpr 0x1209284b8 <col:37> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12100a6b8 <line:7:2, col:49>
      `-CallExpr 0x12100a680 <col:9, col:49> '<dependent type>' contains-errors
        |-DeclRefExpr 0x120928690 <col:9> 'int ()' Function 0x1209285d8 'imapx_refresh_info_uid_cmp' 'int ()'
        |-UnaryOperator 0x12100a618 <col:37, col:38> 'const char *' contains-errors lvalue prefix '*' cannot overflow
        | `-ImplicitCastExpr 0x12100a600 <col:38> 'const char **' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x1209286b0 <col:38> 'const char **' contains-errors lvalue Var 0x120928358 'a' 'const char **'
        |-UnaryOperator 0x12100a648 <col:41, col:42> 'const char *' contains-errors lvalue prefix '*' cannot overflow
        | `-ImplicitCastExpr 0x12100a630 <col:42> 'const char **' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x120928700 <col:42> 'const char **' contains-errors lvalue Var 0x120928450 'b' 'const char **'
        `-RecoveryExpr 0x12100a660 <col:45> '<dependent type>' contains-errors lvalue
