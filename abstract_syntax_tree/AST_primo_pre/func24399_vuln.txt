`-FunctionDecl 0x144128878  line:1:1 invalid onig_new_deluxe 'int (int **, const int *, const int *, int *, int *)'
  |-ParmVarDecl 0x144128560 <col:17, col:27> col:27 invalid reg 'int **'
  |-ParmVarDecl 0x1441285e0 <col:32, col:45> col:45 invalid pattern 'const int *'
  |-ParmVarDecl 0x144128660 <col:54, col:67> col:67 invalid pattern_end 'const int *'
  |-ParmVarDecl 0x1441286e0 <line:2:17, col:34> col:34 invalid ci 'int *'
  |-ParmVarDecl 0x144128760 <col:38, col:53> col:53 referenced invalid einfo 'int *'
  `-CompoundStmt 0x144143248 <line:3:1, line:40:1>
    |-DeclStmt 0x1441289c8 <line:4:3, col:8>
    | `-VarDecl 0x144128960 <col:3, col:7> col:7 used r 'int'
    |-IfStmt 0x1441422e0 <line:9:3, line:17:3> has_else
    | |-BinaryOperator 0x144141da0 <line:9:7, col:30> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x144141cf0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->pattern_enc
    | | | `-RecoveryExpr 0x144141cd0 <col:7> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x144141d58 <col:26, col:30> '<dependent type>' contains-errors lvalue ->target_enc
    | |   `-RecoveryExpr 0x144141d38 <col:26> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x144142280 <col:42, line:13:3>
    | | |-BinaryOperator 0x144142180 <line:10:5, line:11:39> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x144141dc0 <line:10:5> 'int' lvalue Var 0x144128960 'r' 'int'
    | | | `-CallExpr 0x144142130 <col:9, line:11:39> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x144141ec0 <line:10:9> 'int ()' Function 0x144141e08 'conv_encoding' 'int ()'
    | | |   |-CXXDependentScopeMemberExpr 0x144141f00 <col:23, col:27> '<dependent type>' contains-errors lvalue ->pattern_enc
    | | |   | `-RecoveryExpr 0x144141ee0 <col:23> '<dependent type>' contains-errors lvalue
    | | |   |-CXXDependentScopeMemberExpr 0x144141f68 <col:40, col:44> '<dependent type>' contains-errors lvalue ->target_enc
    | | |   | `-RecoveryExpr 0x144141f48 <col:40> '<dependent type>' contains-errors lvalue
    | | |   |-RecoveryExpr 0x144141fb0 <col:56> '<dependent type>' contains-errors lvalue
    | | |   |-RecoveryExpr 0x144141fd0 <col:65> '<dependent type>' contains-errors lvalue
    | | |   |-UnaryOperator 0x1441420e0 <line:11:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | `-RecoveryExpr 0x1441420c0 <col:24> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x144142118 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x1441420f8 <col:31> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x144142260 <line:12:5, col:24>
    | |   |-BinaryOperator 0x1441421f8 <col:9, col:14> 'int' '!='
    | |   | |-ImplicitCastExpr 0x1441421e0 <col:9> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x1441421a0 <col:9> 'int' lvalue Var 0x144128960 'r' 'int'
    | |   | `-IntegerLiteral 0x1441421c0 <col:14> 'int' 0
    | |   `-ReturnStmt 0x144142250 <col:17, col:24>
    | |     `-ImplicitCastExpr 0x144142238 <col:24> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x144142218 <col:24> 'int' lvalue Var 0x144128960 'r' 'int'
    | `-CompoundStmt 0x1441422d0 <line:14:8, line:17:3>
    |-IfStmt 0x144142600 <line:20:3, line:23:3>
    | |-CallExpr 0x144142538 <line:20:7, col:19> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x144142470 <col:7> 'int ()' Function 0x1441423b8 'IS_NULL' 'int ()'
    | | `-UnaryOperator 0x144142520 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x144142508 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x144142490 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1441425e8 <col:22, line:23:3>
    |   `-GotoStmt 0x1441425d0 <line:22:5, col:10> 'err2' 0x144142580
    |-BinaryOperator 0x144142a10 <line:25:3, line:26:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x144142620 <line:25:3> 'int' lvalue Var 0x144128960 'r' 'int'
    | `-CallExpr 0x1441429c8 <col:7, line:26:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144142720 <line:25:7> 'int ()' Function 0x144142668 'onig_reg_init' 'int ()'
    |   |-UnaryOperator 0x1441429b0 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x144142998 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x144142740 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x1441427b0 <col:27, col:31> '<dependent type>' contains-errors lvalue ->option
    |   | `-RecoveryExpr 0x144142790 <col:27> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x144142818 <col:39, col:43> '<dependent type>' contains-errors lvalue ->case_fold_flag
    |   | `-RecoveryExpr 0x1441427f8 <col:39> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x144142880 <col:59, col:63> '<dependent type>' contains-errors lvalue ->target_enc
    |   | `-RecoveryExpr 0x144142860 <col:59> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x1441428e8 <line:26:21, col:25> '<dependent type>' contains-errors lvalue ->syntax
    |     `-RecoveryExpr 0x1441428c8 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144142b10 <line:27:3, col:20>
    | |-BinaryOperator 0x144142a88 <col:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x144142a70 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x144142a30 <col:7> 'int' lvalue Var 0x144128960 'r' 'int'
    | | `-IntegerLiteral 0x144142a50 <col:12> 'int' 0
    | `-GotoStmt 0x144142af8 <col:15, col:20> 'err' 0x144142aa8
    |-IfStmt 0x144143078 <line:30:3, line:34:3>
    | |-BinaryOperator 0x144142dd0 <line:30:7, col:12> 'int' '!='
    | | |-ImplicitCastExpr 0x144142db8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x144142d78 <col:7> 'int' lvalue Var 0x144128960 'r' 'int'
    | | `-IntegerLiteral 0x144142d98 <col:12> 'int' 0
    | `-CompoundStmt 0x144143060 <col:15, line:34:3>
    |   `-LabelStmt 0x144142fc0 <line:31:3, line:32:19> 'err'
    |     `-CallExpr 0x144142f98 <col:5, col:19> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x144142ed0 <col:5> 'int ()' Function 0x144142e18 'onig_free' 'int ()'
    |       `-UnaryOperator 0x144142f80 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x144142f68 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x144142ef0 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1441431e0 <line:36:2, col:6> 'err2'
    | `-NullStmt 0x1441431d8 <col:6>
    `-ReturnStmt 0x144143238 <line:39:3, col:10>
      `-ImplicitCastExpr 0x144143220 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x144143200 <col:10> 'int' lvalue Var 0x144128960 'r' 'int'
