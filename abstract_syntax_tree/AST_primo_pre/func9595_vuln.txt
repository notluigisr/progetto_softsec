`-FunctionDecl 0x14e00de38  line:1:1 yystpcpy 'int (char *, const char *)'
  |-ParmVarDecl 0x14e00dcd8 <col:11, col:17> col:17 used yydest 'char *'
  |-ParmVarDecl 0x14e00dd58 <col:25, col:37> col:37 used yysrc 'const char *'
  `-CompoundStmt 0x14e026910 <line:2:1, line:10:1>
    |-DeclStmt 0x14e00dff0 <line:3:3, col:21>
    | `-VarDecl 0x14e00df50 <col:3, col:15> col:9 used yyd 'char *' cinit
    |   `-ImplicitCastExpr 0x14e00dfd8 <col:15> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e00dfb8 <col:15> 'char *' lvalue ParmVar 0x14e00dcd8 'yydest' 'char *'
    |-DeclStmt 0x14e00e0c0 <line:4:3, col:26>
    | `-VarDecl 0x14e00e020 <col:3, col:21> col:15 used yys 'const char *' cinit
    |   `-ImplicitCastExpr 0x14e00e0a8 <col:21> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e00e088 <col:21> 'const char *' lvalue ParmVar 0x14e00dd58 'yysrc' 'const char *'
    |-WhileStmt 0x14e00e228 <line:6:3, line:7:5>
    | |-BinaryOperator 0x14e00e200 <line:6:10, col:31> 'int' '!='
    | | |-ImplicitCastExpr 0x14e00e1e8 <col:10, col:26> 'int' <IntegralCast>
    | | | `-ParenExpr 0x14e00e1b0 <col:10, col:26> 'char'
    | | |   `-BinaryOperator 0x14e00e190 <col:11, col:24> 'char' '='
    | | |     |-UnaryOperator 0x14e00e110 <col:11, col:15> 'char' lvalue prefix '*' cannot overflow
    | | |     | `-UnaryOperator 0x14e00e0f8 <col:12, col:15> 'char *' postfix '++'
    | | |     |   `-DeclRefExpr 0x14e00e0d8 <col:12> 'char *' lvalue Var 0x14e00df50 'yyd' 'char *'
    | | |     `-ImplicitCastExpr 0x14e00e178 <col:20, col:24> 'char' <LValueToRValue>
    | | |       `-UnaryOperator 0x14e00e160 <col:20, col:24> 'const char' lvalue prefix '*' cannot overflow
    | | |         `-UnaryOperator 0x14e00e148 <col:21, col:24> 'const char *' postfix '++'
    | | |           `-DeclRefExpr 0x14e00e128 <col:21> 'const char *' lvalue Var 0x14e00e020 'yys' 'const char *'
    | | `-CharacterLiteral 0x14e00e1d0 <col:31> 'int' 0
    | `-ContinueStmt 0x14e00e220 <line:7:5>
    `-ReturnStmt 0x14e026900 <line:9:3, col:16>
      `-ImplicitCastExpr 0x14e00e2c0 <col:10, col:16> 'int' <PointerToIntegral>
        `-BinaryOperator 0x14e00e2a0 <col:10, col:16> 'char *' '-'
          |-ImplicitCastExpr 0x14e00e288 <col:10> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x14e00e248 <col:10> 'char *' lvalue Var 0x14e00df50 'yyd' 'char *'
          `-IntegerLiteral 0x14e00e268 <col:16> 'int' 1
