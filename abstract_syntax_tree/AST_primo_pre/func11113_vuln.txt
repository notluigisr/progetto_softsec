`-FunctionDecl 0x148127688  line:1:1 invalid hb_set_set 'int (int *, const int *)'
  |-ParmVarDecl 0x148127528 <col:13, col:29> col:29 referenced invalid set 'int *'
  |-ParmVarDecl 0x1481275a8 <line:2:6, col:22> col:22 invalid other 'const int *'
  `-CompoundStmt 0x148127b68 <line:3:1, line:8:1>
    |-IfStmt 0x148127a40 <line:4:3, line:5:5>
    | |-CallExpr 0x148127a08 <line:4:7, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1481278a0 <col:7> 'int ()' Function 0x1481277e8 'unlikely' 'int ()'
    | | `-CallExpr 0x1481279e0 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1481279a0 <col:17> 'int ()' Function 0x1481278e8 'hb_object_is_immutable' 'int ()'
    | |   `-RecoveryExpr 0x1481279c0 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x148127a30 <line:5:5>
    `-CallExpr 0x148127b40 <line:7:3, col:19> '<dependent type>' contains-errors
      |-CXXDependentScopeMemberExpr 0x148127aa8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->set
      | `-RecoveryExpr 0x148127a80 <col:3> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x148127a60 <col:3> 'int *' lvalue ParmVar 0x148127528 'set' 'int *'
      `-UnaryOperator 0x148127b28 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x148127b10 <col:14> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x148127af0 <col:14> '<dependent type>' contains-errors lvalue
