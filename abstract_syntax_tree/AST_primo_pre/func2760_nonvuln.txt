`-FunctionDecl 0x156012070  line:1:13 invalid append_socket_pair 'void (int *, int *, const int *)' static
  |-ParmVarDecl 0x156011d08 <col:32, col:37> col:37 used array 'int *'
  |-ParmVarDecl 0x156011da0 <col:44, col:52> col:52 invalid n 'int *'
  |-ParmVarDecl 0x156011f30 <col:55, col:78> col:65 used pair 'const int *'
  `-CompoundStmt 0x15602b718 <col:81, line:12:1>
    |-CallExpr 0x156012318 <line:2:9, col:21> 'int'
    | |-ImplicitCastExpr 0x156012300 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x156012290 <col:9> 'int ()' Function 0x1560121d8 'assert' 'int ()'
    | `-ImplicitCastExpr 0x156012340 <col:16> 'int *' <LValueToRValue>
    |   `-DeclRefExpr 0x1560122b0 <col:16> 'int *' lvalue ParmVar 0x156011d08 'array' 'int *'
    |-CallExpr 0x156012398 <line:3:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156012358 <col:9> 'int ()' Function 0x1560121d8 'assert' 'int ()'
    | `-RecoveryExpr 0x156012378 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15602b228 <line:5:9, line:6:17>
    | |-UnaryOperator 0x15602b200 <line:5:13, col:14> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1560123e0 <col:14> 'const int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1560123c0 <col:14> 'const int *' lvalue ParmVar 0x156011f30 'pair' 'const int *'
    | `-ReturnStmt 0x15602b218 <line:6:17>
    |-IfStmt 0x15602b490 <line:8:9, line:9:39>
    | |-BinaryOperator 0x15602b2f8 <line:8:13, col:24> 'int' '>='
    | | |-ImplicitCastExpr 0x15602b2e0 <col:13, col:19> 'int' <LValueToRValue>
    | | | `-ArraySubscriptExpr 0x15602b2a0 <col:13, col:19> 'const int' lvalue
    | | |   |-ImplicitCastExpr 0x15602b288 <col:13> 'const int *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x15602b248 <col:13> 'const int *' lvalue ParmVar 0x156011f30 'pair' 'const int *'
    | | |   `-IntegerLiteral 0x15602b268 <col:18> 'int' 0
    | | `-IntegerLiteral 0x15602b2c0 <col:24> 'int' 0
    | `-BinaryOperator 0x15602b470 <line:9:17, col:39> '<dependent type>' contains-errors '='
    |   |-ArraySubscriptExpr 0x15602b3d8 <col:17, col:29> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x15602b3c0 <col:17> 'int *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15602b318 <col:17> 'int *' lvalue ParmVar 0x156011d08 'array' 'int *'
    |   | `-UnaryOperator 0x15602b3a8 <col:23, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   `-ParenExpr 0x15602b388 <col:23, col:26> '<dependent type>' contains-errors
    |   |     `-UnaryOperator 0x15602b370 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x15602b358 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x15602b338 <col:25> '<dependent type>' contains-errors lvalue
    |   `-ArraySubscriptExpr 0x15602b450 <col:33, col:39> 'const int' lvalue
    |     |-ImplicitCastExpr 0x15602b438 <col:33> 'const int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x15602b3f8 <col:33> 'const int *' lvalue ParmVar 0x156011f30 'pair' 'const int *'
    |     `-IntegerLiteral 0x15602b418 <col:38> 'int' 0
    `-IfStmt 0x15602b6f8 <line:10:9, line:11:39>
      |-BinaryOperator 0x15602b560 <line:10:13, col:24> 'int' '>='
      | |-ImplicitCastExpr 0x15602b548 <col:13, col:19> 'int' <LValueToRValue>
      | | `-ArraySubscriptExpr 0x15602b508 <col:13, col:19> 'const int' lvalue
      | |   |-ImplicitCastExpr 0x15602b4f0 <col:13> 'const int *' <LValueToRValue>
      | |   | `-DeclRefExpr 0x15602b4b0 <col:13> 'const int *' lvalue ParmVar 0x156011f30 'pair' 'const int *'
      | |   `-IntegerLiteral 0x15602b4d0 <col:18> 'int' 1
      | `-IntegerLiteral 0x15602b528 <col:24> 'int' 0
      `-BinaryOperator 0x15602b6d8 <line:11:17, col:39> '<dependent type>' contains-errors '='
        |-ArraySubscriptExpr 0x15602b640 <col:17, col:29> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x15602b628 <col:17> 'int *' <LValueToRValue>
        | | `-DeclRefExpr 0x15602b580 <col:17> 'int *' lvalue ParmVar 0x156011d08 'array' 'int *'
        | `-UnaryOperator 0x15602b610 <col:23, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow
        |   `-ParenExpr 0x15602b5f0 <col:23, col:26> '<dependent type>' contains-errors
        |     `-UnaryOperator 0x15602b5d8 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
        |       `-ImplicitCastExpr 0x15602b5c0 <col:25> '<dependent type>' contains-errors <LValueToRValue>
        |         `-RecoveryExpr 0x15602b5a0 <col:25> '<dependent type>' contains-errors lvalue
        `-ArraySubscriptExpr 0x15602b6b8 <col:33, col:39> 'const int' lvalue
          |-ImplicitCastExpr 0x15602b6a0 <col:33> 'const int *' <LValueToRValue>
          | `-DeclRefExpr 0x15602b660 <col:33> 'const int *' lvalue ParmVar 0x156011f30 'pair' 'const int *'
          `-IntegerLiteral 0x15602b680 <col:38> 'int' 1
