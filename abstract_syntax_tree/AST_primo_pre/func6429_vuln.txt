`-FunctionDecl 0x12d81f438  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x12d81f358 <col:8> col:8 EncryptionUtilTest 'int'
  |-ParmVarDecl 0x12d81f2d8 <col:28> col:28 sm4_test_by_case 'int'
  `-CompoundStmt 0x12d844dc0 <col:46, line:27:1>
    |-RecoveryExpr 0x12d81f580 <line:2:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12d81f5d0 <line:4:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12d81f620 <line:7:5> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12d8447b0 <line:8:5, col:83>
    | `-VarDecl 0x12d81f658 <col:5, col:82> col:9 length_1 'int' cinit
    |   `-CallExpr 0x12d844778 <col:20, col:82> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d81f7d0 <col:20> 'int ()' Function 0x12d81f718 'base64_decode' 'int ()'
    |     |-CallExpr 0x12d844648 <col:34, col:47> '<dependent type>' contains-errors
    |     | `-CXXDependentScopeMemberExpr 0x12d844600 <col:34, col:41> '<dependent type>' contains-errors lvalue .c_str
    |     |   `-RecoveryExpr 0x12d81f9a8 <col:34> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x12d8446d0 <col:50, col:64> '<dependent type>' contains-errors
    |     | `-CXXDependentScopeMemberExpr 0x12d844688 <col:50, col:57> '<dependent type>' contains-errors lvalue .length
    |     |   `-RecoveryExpr 0x12d844668 <col:50> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x12d844758 <col:67, col:81> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x12d844710 <col:67, col:77> '<dependent type>' contains-errors lvalue .get
    |         `-RecoveryExpr 0x12d8446f0 <col:67> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12d8447f8 <line:9:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12d844848 <line:10:5> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12d8448e8 <line:11:5, line:13:93>
    | `-VarDecl 0x12d844880 <line:11:5, col:9> col:9 used ret_code 'int'
    |-CallExpr 0x12d844ac8 <line:14:5, col:29> 'int'
    | |-ImplicitCastExpr 0x12d844ab0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d8449e0 <col:5> 'int ()' Function 0x12d844928 'ASSERT_TRUE' 'int ()'
    | `-BinaryOperator 0x12d844a58 <col:17, col:28> 'int' '>'
    |   |-ImplicitCastExpr 0x12d844a40 <col:17> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12d844a00 <col:17> 'int' lvalue Var 0x12d844880 'ret_code' 'int'
    |   `-IntegerLiteral 0x12d844a20 <col:28> 'int' 0
    |-DeclStmt 0x12d844c90 <line:19:5, col:83>
    | `-VarDecl 0x12d844c08 <col:5, col:9> col:9 length_2 'int'
    `-CallExpr 0x12d844d78 <line:24:5, col:29> 'int'
      |-ImplicitCastExpr 0x12d844d60 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12d844cc8 <col:5> 'int ()' Function 0x12d844928 'ASSERT_TRUE' 'int ()'
      `-BinaryOperator 0x12d844d40 <col:17, col:28> 'int' '>'
        |-ImplicitCastExpr 0x12d844d28 <col:17> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12d844ce8 <col:17> 'int' lvalue Var 0x12d844880 'ret_code' 'int'
        `-IntegerLiteral 0x12d844d08 <col:28> 'int' 0
