`-FunctionDecl 0x1298267e8  line:1:5 vfs_symlink 'int (struct inode *, struct dentry *, const char *)'
  |-ParmVarDecl 0x12980e248 <col:17, col:31> col:31 used dir 'struct inode *'
  |-ParmVarDecl 0x129826628 <col:36, col:51> col:51 used dentry 'struct dentry *'
  |-ParmVarDecl 0x1298266a8 <col:59, col:71> col:71 used oldname 'const char *'
  `-CompoundStmt 0x12a009648 <line:2:1, line:20:1>
    |-DeclStmt 0x129826ba8 <line:3:2, col:37>
    | `-VarDecl 0x129826908 <col:2, col:36> col:6 used error 'int' cinit
    |   `-CallExpr 0x129826b48 <col:14, col:36> 'int'
    |     |-ImplicitCastExpr 0x129826b30 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x129826aa0 <col:14> 'int ()' Function 0x1298269e8 'may_create' 'int ()'
    |     |-ImplicitCastExpr 0x129826b78 <col:25> 'struct inode *' <LValueToRValue>
    |     | `-DeclRefExpr 0x129826ac0 <col:25> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |     `-ImplicitCastExpr 0x129826b90 <col:30> 'struct dentry *' <LValueToRValue>
    |       `-DeclRefExpr 0x129826ae0 <col:30> 'struct dentry *' lvalue ParmVar 0x129826628 'dentry' 'struct dentry *'
    |-IfStmt 0x129826c40 <line:5:2, line:6:10>
    | |-ImplicitCastExpr 0x129826be0 <line:5:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x129826bc0 <col:6> 'int' lvalue Var 0x129826908 'error' 'int'
    | `-ReturnStmt 0x129826c30 <line:6:3, col:10>
    |   `-ImplicitCastExpr 0x129826c18 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x129826bf8 <col:10> 'int' lvalue Var 0x129826908 'error' 'int'
    |-IfStmt 0x129826de0 <line:8:2, line:9:11>
    | |-UnaryOperator 0x129826d20 <line:8:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x129826d08 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x129826cc0 <col:7, col:18> '<dependent type>' contains-errors lvalue ->symlink
    | |     `-RecoveryExpr 0x129826c98 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x129826c60 <col:7> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    | `-ReturnStmt 0x129826dd0 <line:9:3, col:11>
    |   `-UnaryOperator 0x129826db8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x129826da0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x129826d80 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x129827018 <line:11:2, col:53> 'int' '='
    | |-DeclRefExpr 0x129826e00 <col:2> 'int' lvalue Var 0x129826908 'error' 'int'
    | `-CallExpr 0x129826f98 <col:10, col:53> 'int'
    |   |-ImplicitCastExpr 0x129826f80 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129826f00 <col:10> 'int ()' Function 0x129826e48 'security_inode_symlink' 'int ()'
    |   |-ImplicitCastExpr 0x129826fd0 <col:33> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x129826f20 <col:33> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |   |-ImplicitCastExpr 0x129826fe8 <col:38> 'struct dentry *' <LValueToRValue>
    |   | `-DeclRefExpr 0x129826f40 <col:38> 'struct dentry *' lvalue ParmVar 0x129826628 'dentry' 'struct dentry *'
    |   `-ImplicitCastExpr 0x129827000 <col:46> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x129826f60 <col:46> 'const char *' lvalue ParmVar 0x1298266a8 'oldname' 'const char *'
    |-IfStmt 0x1298270b8 <line:12:2, line:13:10>
    | |-ImplicitCastExpr 0x129827058 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x129827038 <col:6> 'int' lvalue Var 0x129826908 'error' 'int'
    | `-ReturnStmt 0x1298270a8 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x129827090 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x129827070 <col:10> 'int' lvalue Var 0x129826908 'error' 'int'
    |-CallExpr 0x129827210 <line:15:2, col:17> 'int'
    | |-ImplicitCastExpr 0x1298271f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1298271b8 <col:2> 'int ()' Function 0x129827100 'vfs_dq_init' 'int ()'
    | `-ImplicitCastExpr 0x129827238 <col:14> 'struct inode *' <LValueToRValue>
    |   `-DeclRefExpr 0x1298271d8 <col:14> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |-BinaryOperator 0x1298273b0 <line:16:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x129827250 <col:2> 'int' lvalue Var 0x129826908 'error' 'int'
    | `-CallExpr 0x129827378 <col:10, col:49> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x1298272d0 <col:10, col:21> '<dependent type>' contains-errors lvalue ->symlink
    |   | `-RecoveryExpr 0x1298272a8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x129827270 <col:10> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x129827318 <col:29> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x129827338 <col:34> 'struct dentry *' lvalue ParmVar 0x129826628 'dentry' 'struct dentry *'
    |   `-DeclRefExpr 0x129827358 <col:42> 'const char *' lvalue ParmVar 0x1298266a8 'oldname' 'const char *'
    |-IfStmt 0x1298275d8 <line:17:2, line:18:30>
    | |-UnaryOperator 0x129827408 <line:17:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1298273f0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1298273d0 <col:7> 'int' lvalue Var 0x129826908 'error' 'int'
    | `-CallExpr 0x129827578 <line:18:3, col:30> 'int'
    |   |-ImplicitCastExpr 0x129827560 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129827500 <col:3> 'int ()' Function 0x129827448 'fsnotify_create' 'int ()'
    |   |-ImplicitCastExpr 0x1298275a8 <col:19> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x129827520 <col:19> 'struct inode *' lvalue ParmVar 0x12980e248 'dir' 'struct inode *'
    |   `-ImplicitCastExpr 0x1298275c0 <col:24> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x129827540 <col:24> 'struct dentry *' lvalue ParmVar 0x129826628 'dentry' 'struct dentry *'
    `-ReturnStmt 0x12a009638 <line:19:2, col:9>
      `-ImplicitCastExpr 0x12a009620 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a009600 <col:9> 'int' lvalue Var 0x129826908 'error' 'int'
