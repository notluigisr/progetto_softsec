`-FunctionDecl 0x128928758  line:1:12 alloc_apic_access_page 'int (struct kvm *)' static
  |-ParmVarDecl 0x128928648 <col:35, col:47> col:47 used kvm 'struct kvm *'
  `-CompoundStmt 0x12a009068 <line:2:1, line:21:1>
    |-DeclStmt 0x128944dc8 <line:3:2, col:54>
    | |-RecordDecl 0x128944c50 <col:2, col:9> col:9 struct kvm_userspace_memory_region
    | `-VarDecl 0x128944d48 <col:2, col:37> col:37 referenced invalid kvm_userspace_mem 'struct kvm_userspace_memory_region'
    |-DeclStmt 0x128944e80 <line:4:2, col:11>
    | `-VarDecl 0x128944df8 <col:2, col:10> col:6 used r 'int' cinit
    |   `-IntegerLiteral 0x128944e60 <col:10> 'int' 0
    |-CallExpr 0x128945058 <line:6:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128944fc0 <col:2> 'int ()' Function 0x128944f08 'down_write' 'int ()'
    | `-UnaryOperator 0x128945040 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x128945018 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128944fe0 <col:14> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    |-IfStmt 0x128945190 <line:7:2, line:8:8>
    | |-CXXDependentScopeMemberExpr 0x1289450e0 <line:7:6, col:16> '<dependent type>' contains-errors lvalue .apic_access_page
    | | `-RecoveryExpr 0x1289450b8 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128945080 <col:6> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    | `-GotoStmt 0x128945178 <line:8:3, col:8> 'out' 0x128945128
    |-BinaryOperator 0x128945298 <line:9:2, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1289451f8 <col:2, col:20> '<dependent type>' contains-errors lvalue .slot
    | | `-RecoveryExpr 0x1289451d0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1289451b0 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'
    | `-RecoveryExpr 0x128945278 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128945368 <line:10:2, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128945300 <col:2, col:20> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x1289452d8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1289452b8 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'
    | `-IntegerLiteral 0x128945348 <col:28> 'int' 0
    |-BinaryOperator 0x128945438 <line:11:2, col:38> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1289453d0 <col:2, col:20> '<dependent type>' contains-errors lvalue .guest_phys_addr
    | | `-RecoveryExpr 0x1289453a8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128945388 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'
    | `-IntegerLiteral 0x128945418 <col:38> 'unsigned long long' 4276092928
    |-BinaryOperator 0x128945540 <line:12:2, col:34> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1289454a0 <col:2, col:20> '<dependent type>' contains-errors lvalue .memory_size
    | | `-RecoveryExpr 0x128945478 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x128945458 <col:2> 'struct kvm_userspace_memory_region' lvalue Var 0x128944d48 'kvm_userspace_mem' 'struct kvm_userspace_memory_region'
    | `-RecoveryExpr 0x128945520 <col:34> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128945730 <line:13:2, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x128945560 <col:2> 'int' lvalue Var 0x128944df8 'r' 'int'
    | `-CallExpr 0x1289456f8 <col:6, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128945660 <col:6> 'int ()' Function 0x1289455a8 '__kvm_set_memory_region' 'int ()'
    |   |-DeclRefExpr 0x128945680 <col:30> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    |   |-UnaryOperator 0x1289456c0 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x1289456a0 <col:36> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x1289456d8 <col:55> 'int' 0
    |-IfStmt 0x1289457a0 <line:14:2, line:15:8>
    | |-ImplicitCastExpr 0x128945770 <line:14:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x128945750 <col:6> 'int' lvalue Var 0x128944df8 'r' 'int'
    | `-GotoStmt 0x128945788 <line:15:3, col:8> 'out' 0x128945128
    |-BinaryOperator 0x128945a40 <line:17:2, col:55> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128945820 <col:2, col:12> '<dependent type>' contains-errors lvalue .apic_access_page
    | | `-RecoveryExpr 0x1289457f8 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1289457c0 <col:2> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    | `-CallExpr 0x1289459f8 <col:31, col:55> 'int'
    |   |-ImplicitCastExpr 0x1289459e0 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128945948 <col:31> 'int ()' Function 0x128945890 'gfn_to_page' 'int ()'
    |   |-ImplicitCastExpr 0x128945a28 <col:43> 'struct kvm *' <LValueToRValue>
    |   | `-DeclRefExpr 0x128945968 <col:43> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    |   `-IntegerLiteral 0x128945988 <col:48> 'int' 1043968
    |-LabelStmt 0x12a009000 <line:18:1, line:19:27> 'out'
    | `-CallExpr 0x128945bd8 <col:2, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x128945b40 <col:2> 'int ()' Function 0x128945a88 'up_write' 'int ()'
    |   `-UnaryOperator 0x128945bc0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x128945b98 <col:12, col:17> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x128945b60 <col:12> 'struct kvm *' lvalue ParmVar 0x128928648 'kvm' 'struct kvm *'
    `-ReturnStmt 0x12a009058 <line:20:2, col:9>
      `-ImplicitCastExpr 0x12a009040 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a009020 <col:9> 'int' lvalue Var 0x128944df8 'r' 'int'
