`-FunctionDecl 0x13d940be8  line:1:12 tcp_peek_sndq 'int (struct sock *, struct msghdr *, int)' static
  |-ParmVarDecl 0x13d928648 <col:26, col:39> col:39 used sk 'struct sock *'
  |-ParmVarDecl 0x13d940a28 <col:43, col:58> col:58 used msg 'struct msghdr *'
  |-ParmVarDecl 0x13d940aa8 <col:63, col:67> col:67 len 'int'
  `-CompoundStmt 0x13e808950 <line:2:1, line:24:1>
    |-DeclStmt 0x13d940ed8 <line:3:2, col:21>
    | |-RecordDecl 0x13d940cf0 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x13d940e58 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-DeclStmt 0x13d941048 <line:4:2, col:25>
    | |-VarDecl 0x13d940f08 <col:2, col:15> col:6 used copied 'int' cinit
    | | `-IntegerLiteral 0x13d940f70 <col:15> 'int' 0
    | `-VarDecl 0x13d940fa8 <col:2, col:24> col:18 used err 'int' cinit
    |   `-IntegerLiteral 0x13d941010 <col:24> 'int' 0
    |-CallExpr 0x13d941248 <line:8:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d941190 <col:2> 'int ()' Function 0x13d9410d8 'skb_rbtree_walk' 'int ()'
    | |-DeclRefExpr 0x13d9411b0 <col:18> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    | `-UnaryOperator 0x13d941230 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13d941208 <col:24, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d9411d0 <col:24> 'struct sock *' lvalue ParmVar 0x13d928648 'sk' 'struct sock *'
    |-CompoundStmt 0x13d941608 <col:43, line:13:2>
    | |-BinaryOperator 0x13d941498 <line:9:3, col:52> 'int' contains-errors '='
    | | |-DeclRefExpr 0x13d941278 <col:3> 'int' lvalue Var 0x13d940fa8 'err' 'int'
    | | `-CallExpr 0x13d941458 <col:9, col:52> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13d941378 <col:9> 'int ()' Function 0x13d9412c0 'skb_copy_datagram_msg' 'int ()'
    | |   |-DeclRefExpr 0x13d941398 <col:31> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    | |   |-IntegerLiteral 0x13d9413b8 <col:36> 'int' 0
    | |   |-DeclRefExpr 0x13d9413d8 <col:39> 'struct msghdr *' lvalue ParmVar 0x13d940a28 'msg' 'struct msghdr *'
    | |   `-RecoveryExpr 0x13d941430 <col:44, col:49> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13d9413f8 <col:44> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    | |-IfStmt 0x13d941538 <line:10:3, line:11:11>
    | | |-ImplicitCastExpr 0x13d9414d8 <line:10:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d9414b8 <col:7> 'int' lvalue Var 0x13d940fa8 'err' 'int'
    | | `-ReturnStmt 0x13d941528 <line:11:4, col:11>
    | |   `-ImplicitCastExpr 0x13d941510 <col:11> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d9414f0 <col:11> 'int' lvalue Var 0x13d940fa8 'err' 'int'
    | `-CompoundAssignOperator 0x13d9415d8 <line:12:3, col:18> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x13d941558 <col:3> 'int' lvalue Var 0x13d940f08 'copied' 'int'
    |   `-RecoveryExpr 0x13d9415b0 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d941578 <col:13> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    |-CallExpr 0x13d9417c8 <line:15:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d941710 <col:2> 'int ()' Function 0x13d941658 'skb_queue_walk' 'int ()'
    | |-UnaryOperator 0x13d941790 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13d941768 <col:18, col:22> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13d941730 <col:18> 'struct sock *' lvalue ParmVar 0x13d928648 'sk' 'struct sock *'
    | `-DeclRefExpr 0x13d9417a8 <col:38> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    |-CompoundStmt 0x13e808858 <col:43, line:21:2>
    | |-BinaryOperator 0x13d941938 <line:16:3, col:52> 'int' contains-errors '='
    | | |-DeclRefExpr 0x13d9417f8 <col:3> 'int' lvalue Var 0x13d940fa8 'err' 'int'
    | | `-CallExpr 0x13d9418f8 <col:9, col:52> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13d941818 <col:9> 'int ()' Function 0x13d9412c0 'skb_copy_datagram_msg' 'int ()'
    | |   |-DeclRefExpr 0x13d941838 <col:31> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    | |   |-IntegerLiteral 0x13d941858 <col:36> 'int' 0
    | |   |-DeclRefExpr 0x13d941878 <col:39> 'struct msghdr *' lvalue ParmVar 0x13d940a28 'msg' 'struct msghdr *'
    | |   `-RecoveryExpr 0x13d9418d0 <col:44, col:49> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13d941898 <col:44> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    | `-CompoundAssignOperator 0x13e808828 <line:20:3, col:18> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x13d941990 <col:3> 'int' lvalue Var 0x13d940f08 'copied' 'int'
    |   `-RecoveryExpr 0x13e808800 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d9419b0 <col:13> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x13e808940 <line:23:2, col:16>
      `-BinaryConditionalOperator 0x13e808900 <col:9, col:16> 'int'
        |-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'
        |-OpaqueValueExpr 0x13e8088d0 <col:9> 'int'
        | `-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'
        |-OpaqueValueExpr 0x13e8088d0 <col:9> 'int'
        | `-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'
        `-ImplicitCastExpr 0x13e8088e8 <col:16> 'int' <LValueToRValue>
          `-DeclRefExpr 0x13e808898 <col:16> 'int' lvalue Var 0x13d940f08 'copied' 'int'
