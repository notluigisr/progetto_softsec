`-FunctionDecl 0x13900de58  line:1:1 invalid xmlBufCCat 'int (int, const char *)'
  |-ParmVarDecl 0x13900dcf0 <col:12, col:22> col:22 referenced invalid buf 'int'
  |-ParmVarDecl 0x13900dd70 <col:27, col:39> col:39 used str 'const char *'
  `-CompoundStmt 0x139028190 <col:44, line:27:1>
    |-DeclStmt 0x13900df90 <line:2:5, col:20>
    | `-VarDecl 0x13900df28 <col:5, col:17> col:17 used cur 'const char *'
    |-IfStmt 0x13900e110 <line:4:5, line:5:18>
    | |-RecoveryExpr 0x13900e088 <line:4:9, col:37> '_Bool' contains-errors
    | `-ReturnStmt 0x13900e100 <line:5:9, col:18>
    |   `-ParenExpr 0x13900e0e0 <col:15, col:18> 'int'
    |     `-UnaryOperator 0x13900e0c8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x13900e0a8 <col:17> 'int' 1
    |-CallExpr 0x13900e2d0 <line:6:5, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13900e290 <col:5> 'int ()' Function 0x13900e1d8 'CHECK_COMPAT' 'int ()'
    | `-RecoveryExpr 0x13900e2b0 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139027428 <line:7:5, col:59>
    | |-BinaryOperator 0x13900e3b8 <col:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x13900e318 <col:9, col:14> '<dependent type>' contains-errors lvalue ->alloc
    | | | `-RecoveryExpr 0x13900e2f8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13900e398 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x139027418 <col:51, col:59>
    |   `-UnaryOperator 0x139027400 <col:58, col:59> 'int' prefix '-'
    |     `-IntegerLiteral 0x13900e3d8 <col:59> 'int' 1
    |-IfStmt 0x139027540 <line:8:5, line:14:5>
    | |-BinaryOperator 0x1390274c0 <line:8:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x139027448 <col:9> 'const char *' lvalue ParmVar 0x13900dd70 'str' 'const char *'
    | | `-RecoveryExpr 0x1390274a0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139027528 <col:22, line:14:5>
    |   `-ReturnStmt 0x139027518 <line:13:2, col:10>
    |     `-UnaryOperator 0x139027500 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x1390274e0 <col:10> 'int' 1
    |-ForStmt 0x139027e58 <line:15:5, line:23:5>
    | |-BinaryOperator 0x1390275b8 <line:15:10, col:16> 'const char *' '='
    | | |-DeclRefExpr 0x139027560 <col:10> 'const char *' lvalue Var 0x13900df28 'cur' 'const char *'
    | | `-ImplicitCastExpr 0x1390275a0 <col:16> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x139027580 <col:16> 'const char *' lvalue ParmVar 0x13900dd70 'str' 'const char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x139027678 <col:20, col:28> 'int' '!='
    | | |-ImplicitCastExpr 0x139027660 <col:20, col:21> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x139027648 <col:20, col:21> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x139027610 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x1390275f8 <col:21> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1390275d8 <col:21> 'const char *' lvalue Var 0x13900df28 'cur' 'const char *'
    | | `-IntegerLiteral 0x139027628 <col:28> 'int' 0
    | |-UnaryOperator 0x1390276b8 <col:30, col:33> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x139027698 <col:30> 'const char *' lvalue Var 0x13900df28 'cur' 'const char *'
    | `-CompoundStmt 0x139027e38 <col:37, line:23:5>
    |   |-IfStmt 0x139027c60 <line:16:9, line:21:9>
    |   | |-BinaryOperator 0x1390277e0 <line:16:13, col:36> 'int' contains-errors '>='
    |   | | |-BinaryOperator 0x139027758 <col:13, col:25> '<dependent type>' contains-errors '+'
    |   | | | |-CXXDependentScopeMemberExpr 0x1390276f0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->use
    |   | | | | `-RecoveryExpr 0x1390276d0 <col:13> '<dependent type>' contains-errors lvalue
    |   | | | `-IntegerLiteral 0x139027738 <col:25> 'int' 10
    |   | | `-CXXDependentScopeMemberExpr 0x139027798 <col:31, col:36> '<dependent type>' contains-errors lvalue ->size
    |   | |   `-RecoveryExpr 0x139027778 <col:31> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x139027c48 <col:42, line:21:9>
    |   |   `-IfStmt 0x139027c28 <line:17:13, line:20:13>
    |   |     |-UnaryOperator 0x1390279f8 <line:17:17, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | `-CallExpr 0x1390279c8 <col:18, col:47> '<dependent type>' contains-errors
    |   |     |   |-DeclRefExpr 0x1390278e0 <col:18> 'int ()' Function 0x139027828 'xmlBufResize' 'int ()'
    |   |     |   |-RecoveryExpr 0x139027900 <col:31> '<dependent type>' contains-errors lvalue
    |   |     |   `-BinaryOperator 0x1390279a8 <col:36, col:45> '<dependent type>' contains-errors '+'
    |   |     |     |-CXXDependentScopeMemberExpr 0x139027940 <col:36, col:41> '<dependent type>' contains-errors lvalue ->use
    |   |     |     | `-RecoveryExpr 0x139027920 <col:36> '<dependent type>' contains-errors lvalue
    |   |     |     `-IntegerLiteral 0x139027988 <col:45> 'int' 10
    |   |     `-CompoundStmt 0x139027c08 <col:49, line:20:13>
    |   |       |-CallExpr 0x139027b90 <line:18:3, col:31> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x139027af0 <col:3> 'int ()' Function 0x139027a38 'xmlBufMemoryError' 'int ()'
    |   |       | |-RecoveryExpr 0x139027b10 <col:21> '<dependent type>' contains-errors lvalue
    |   |       | `-StringLiteral 0x139027b70 <col:26> 'char[4]' lvalue "STR"
    |   |       `-ReturnStmt 0x139027bf8 <line:19:17, col:24>
    |   |         `-RecoveryExpr 0x139027bd8 <col:24> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x139027e18 <line:22:9, col:37> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x139027da8 <col:9, col:32> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x139027d90 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x139027cc8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->content
    |     | |   `-RecoveryExpr 0x139027ca0 <col:9> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x139027c80 <col:9> 'int' lvalue ParmVar 0x13900dcf0 'buf' 'int'
    |     | `-UnaryOperator 0x139027d78 <col:22, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |   `-CXXDependentScopeMemberExpr 0x139027d30 <col:22, col:27> '<dependent type>' contains-errors lvalue ->use
    |     |     `-RecoveryExpr 0x139027d10 <col:22> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x139027e00 <col:36, col:37> 'const char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x139027de8 <col:37> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x139027dc8 <col:37> 'const char *' lvalue Var 0x13900df28 'cur' 'const char *'
    |-BinaryOperator 0x139027ff8 <line:24:5, col:30> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x139027fb8 <col:5, col:26> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x139027f88 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x139027ed8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->content
    | | |   `-RecoveryExpr 0x139027eb0 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x139027e90 <col:5> 'int' lvalue ParmVar 0x13900dcf0 'buf' 'int'
    | | `-ImplicitCastExpr 0x139027fa0 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x139027f40 <col:18, col:23> '<dependent type>' contains-errors lvalue ->use
    | |     `-RecoveryExpr 0x139027f20 <col:18> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x139027fd8 <col:30> 'int' 0
    |-CallExpr 0x139028138 <line:25:5, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1390280f8 <col:5> 'int ()' Function 0x139028040 'UPDATE_COMPAT' 'int ()'
    | `-RecoveryExpr 0x139028118 <col:19> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x139028180 <line:26:5, col:12>
      `-IntegerLiteral 0x139028160 <col:12> 'int' 0
