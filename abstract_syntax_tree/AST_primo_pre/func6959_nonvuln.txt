`-FunctionDecl 0x13500dda8  line:1:1 read_readbuffers 'int (int)'
  |-ParmVarDecl 0x13500dcd8 <col:18, col:22> col:22 used advance 'int'
  `-CompoundStmt 0x136008c48 <line:2:1, line:9:1>
    |-DeclStmt 0x13500df20 <line:3:5, col:10>
    | `-VarDecl 0x13500deb8 <col:5, col:9> col:9 used c 'int'
    |-BinaryOperator 0x13500e1a8 <line:5:5, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x13500df38 <col:5> 'int' lvalue Var 0x13500deb8 'c' 'int'
    | `-CallExpr 0x13500e178 <col:9, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13500e080 <col:9> 'int ()' Function 0x13500dfc8 'read_readbuf' 'int ()'
    |   |-UnaryOperator 0x13500e160 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x13500e140 <col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13500e0d0 <col:33> 'int' lvalue ParmVar 0x13500dcd8 'advance' 'int'
    |-IfStmt 0x13500e3c8 <line:6:5, line:7:37>
    | |-BinaryOperator 0x13500e240 <line:6:9, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13500e1c8 <col:9> 'int' lvalue Var 0x13500deb8 'c' 'int'
    | | `-RecoveryExpr 0x13500e220 <col:14> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x13500e3a8 <line:7:2, col:37> 'int' contains-errors '='
    |   |-DeclRefExpr 0x13500e260 <col:2> 'int' lvalue Var 0x13500deb8 'c' 'int'
    |   `-CallExpr 0x13500e378 <col:6, col:37> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13500e280 <col:6> 'int ()' Function 0x13500dfc8 'read_readbuf' 'int ()'
    |     |-UnaryOperator 0x13500e360 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-RecoveryExpr 0x13500e340 <col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13500e2d0 <col:30> 'int' lvalue ParmVar 0x13500dcd8 'advance' 'int'
    `-ReturnStmt 0x136008c38 <line:8:5, col:12>
      `-ImplicitCastExpr 0x136008c20 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136008c00 <col:12> 'int' lvalue Var 0x13500deb8 'c' 'int'
