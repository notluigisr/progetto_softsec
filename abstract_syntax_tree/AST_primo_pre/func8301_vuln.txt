`-FunctionDecl 0x1228fbd18  line:1:1 midi_synth_load_patch 'int (int, int, const char)'
  |-ParmVarDecl 0x1228fbad8 <col:23, col:27> col:27 used dev 'int'
  |-ParmVarDecl 0x1228fbb58 <col:32, col:36> col:36 used format 'int'
  |-ParmVarDecl 0x1228fbbd0 <col:44, col:55> col:55 __user 'const char'
  `-CompoundStmt 0x122919ba8 <line:3:1, line:75:1>
    |-DeclStmt 0x1228fbef0 <line:4:2, col:54>
    | `-VarDecl 0x1228fbe38 <col:2, col:18> col:18 used orig_dev 'int'
    |-DeclStmt 0x1229146b8 <line:6:2, col:25>
    | |-RecordDecl 0x1228fbf08 <col:2, col:9> col:9 struct sysex_info
    | `-VarDecl 0x1228fc008 <col:2, col:20> col:20 referenced invalid sysex 'struct sysex_info'
    |-DeclStmt 0x122914750 <line:7:2, col:19>
    | `-VarDecl 0x1229146e8 <col:2, col:18> col:18 used i 'int'
    |-DeclStmt 0x122914940 <line:8:2, col:46>
    | |-VarDecl 0x122914780 <col:2, col:18> col:18 used left 'unsigned long'
    | |-VarDecl 0x122914800 <col:2, col:24> col:24 used src_offs 'unsigned long'
    | `-VarDecl 0x122914880 <col:2, col:45> col:34 used eox_seen 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x122914908 <col:45> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x1229148e8 <col:45> 'int' 0
    |-DeclStmt 0x1229149f8 <line:9:2, col:32>
    | `-VarDecl 0x122914970 <col:2, col:31> col:18 used first_byte 'int' cinit
    |   `-IntegerLiteral 0x1229149d8 <col:31> 'int' 1
    |-DeclStmt 0x122914c58 <line:10:2, col:84>
    | `-VarDecl 0x122914a28 <col:2, col:79> col:18 used hdr_size 'int' cinit
    |   `-ImplicitCastExpr 0x122914c40 <col:29, col:79> 'int' contains-errors <IntegralCast>
    |     `-BinaryOperator 0x122914c20 <col:29, col:79> 'unsigned long' contains-errors '-'
    |       |-CStyleCastExpr 0x122914b80 <col:29, col:58> 'unsigned long' contains-errors <Dependent>
    |       | `-UnaryOperator 0x122914b50 <col:45, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x122914b30 <col:46, col:58> '<dependent type>' contains-errors lvalue
    |       |     |-ImplicitCastExpr 0x122914b18 <col:46, col:52> '<dependent type>' contains-errors <LValueToRValue>
    |       |     | `-CXXDependentScopeMemberExpr 0x122914ab0 <col:46, col:52> '<dependent type>' contains-errors lvalue .data
    |       |     |   `-RecoveryExpr 0x122914a90 <col:46> '<dependent type>' contains-errors lvalue
    |       |     `-IntegerLiteral 0x122914af8 <col:57> 'int' 0
    |       `-CStyleCastExpr 0x122914bf8 <col:62, col:79> 'unsigned long' contains-errors <Dependent>
    |         `-UnaryOperator 0x122914bc8 <col:78, col:79> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           `-RecoveryExpr 0x122914ba8 <col:79> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x122914e08 <line:12:2, col:17> 'int'
    | |-ImplicitCastExpr 0x122914df0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122914d80 <col:2> 'int ()' Function 0x122914cc8 'leave_sysex' 'int ()'
    | `-ImplicitCastExpr 0x122914e30 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x122914da0 <col:14> 'int' lvalue ParmVar 0x1228fbad8 'dev' 'int'
    |-IfStmt 0x122915030 <line:14:2, line:15:10>
    | |-UnaryOperator 0x122914fe8 <line:14:6, col:32> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x122914fa0 <col:7, col:32> 'int'
    | |   |-ImplicitCastExpr 0x122914f88 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x122914f28 <col:7> 'int ()' Function 0x122914e70 'prefix_cmd' 'int ()'
    | |   |-ImplicitCastExpr 0x122914fd0 <col:18> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x122914f48 <col:18> 'int' lvalue Var 0x1228fbe38 'orig_dev' 'int'
    | |   `-IntegerLiteral 0x122914f68 <col:28> 'int' 240
    | `-ReturnStmt 0x122915020 <line:15:3, col:10>
    |   `-IntegerLiteral 0x122915000 <col:10> 'int' 0
    |-IfStmt 0x1229151a8 <line:17:2, line:21:2>
    | |-BinaryOperator 0x1229150c8 <line:17:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x122915050 <col:6> 'int' lvalue ParmVar 0x1228fbb58 'format' 'int'
    | | `-RecoveryExpr 0x1229150a8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122915190 <line:18:2, line:21:2>
    |   `-ReturnStmt 0x122915180 <line:20:5, col:13>
    |     `-UnaryOperator 0x122915168 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x122915150 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x122915130 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122915320 <line:22:2, line:26:2>
    | |-BinaryOperator 0x122915240 <line:22:6, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x122915220 <col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1229151e0 <col:14> 'int' contains-errors lvalue Var 0x122914a28 'hdr_size' 'int'
    | `-CompoundStmt 0x122915308 <line:23:2, line:26:2>
    |   `-ReturnStmt 0x1229152f8 <line:25:3, col:11>
    |     `-UnaryOperator 0x1229152e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1229152c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1229152a8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122918738 <line:31:2, line:32:11>
    | |-RecoveryExpr 0x122918670 <line:31:5, col:76> '_Bool' contains-errors
    | `-ReturnStmt 0x122918728 <line:32:3, col:11>
    |   `-UnaryOperator 0x122918710 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1229186f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1229186d8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122918958 <line:34:3, line:38:2>
    | |-BinaryOperator 0x122918818 <line:34:7, col:21> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1229187f8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x122918790 <col:15, col:21> '<dependent type>' contains-errors lvalue .len
    | |   `-RecoveryExpr 0x122918770 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x122918940 <line:35:2, line:38:2>
    |   `-BinaryOperator 0x122918920 <line:37:3, col:15> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x122918880 <col:3, col:9> '<dependent type>' contains-errors lvalue .len
    |     | `-RecoveryExpr 0x122918858 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x122918838 <col:3> 'struct sysex_info' lvalue Var 0x1228fc008 'sysex' 'struct sysex_info'
    |     `-RecoveryExpr 0x122918900 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x122918a00 <line:39:4, col:17> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x122918978 <col:4> 'unsigned long' lvalue Var 0x122914780 'left' 'unsigned long'
    | `-CXXDependentScopeMemberExpr 0x1229189b8 <col:11, col:17> '<dependent type>' contains-errors lvalue .len
    |   `-RecoveryExpr 0x122918998 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x122918a78 <line:40:4, col:15> 'unsigned long' '='
    | |-DeclRefExpr 0x122918a20 <col:4> 'unsigned long' lvalue Var 0x122914800 'src_offs' 'unsigned long'
    | `-ImplicitCastExpr 0x122918a60 <col:15> 'unsigned long' <IntegralCast>
    |   `-IntegerLiteral 0x122918a40 <col:15> 'int' 0
    |-IfStmt 0x122919b58 <line:72:2, line:73:27>
    | |-UnaryOperator 0x1229199a0 <line:72:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x122919988 <col:7> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x122919968 <col:7> 'unsigned long' lvalue Var 0x122914880 'eox_seen' 'unsigned long'
    | `-CallExpr 0x122919b10 <line:73:3, col:27> 'int'
    |   |-ImplicitCastExpr 0x122919af8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122919a98 <col:3> 'int ()' Function 0x1229199e0 'midi_outc' 'int ()'
    |   |-ImplicitCastExpr 0x122919b40 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x122919ab8 <col:13> 'int' lvalue Var 0x1228fbe38 'orig_dev' 'int'
    |   `-IntegerLiteral 0x122919ad8 <col:23> 'int' 247
    `-ReturnStmt 0x122919b98 <line:74:2, col:9>
      `-IntegerLiteral 0x122919b78 <col:9> 'int' 0
