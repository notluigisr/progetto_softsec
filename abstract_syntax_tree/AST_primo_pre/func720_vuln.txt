`-FunctionDecl 0x1511229c8  line:1:1 invalid ikev1_sub_print 'int (int *, char, const struct isakmp_gen *, const char *, int, int, int, int)'
  |-ParmVarDecl 0x15180dd28 <col:17, col:37> col:37 invalid ndo 'int *'
  |-ParmVarDecl 0x15180dda0 <line:2:3, col:10> col:10 used np 'char'
  |-ParmVarDecl 0x15180e398 <col:14, col:39> col:39 used ext 'const struct isakmp_gen *'
  |-ParmVarDecl 0x151122618 <col:44, col:58> col:58 used ep 'const char *'
  |-ParmVarDecl 0x151122698 <line:3:3, col:12> col:12 invalid phase 'int'
  |-ParmVarDecl 0x151122718 <col:19, col:28> col:28 invalid doi 'int'
  |-ParmVarDecl 0x151122798 <col:33, col:42> col:42 invalid proto 'int'
  |-ParmVarDecl 0x151122818 <col:49, col:53> col:53 used depth 'int'
  `-CompoundStmt 0x151125af8 <line:4:1, line:39:1>
    |-DeclStmt 0x151122b30 <line:5:2, col:18>
    | `-VarDecl 0x151122ac8 <col:2, col:16> col:16 used cp 'const char *'
    |-DeclStmt 0x151122bc8 <line:6:2, col:7>
    | `-VarDecl 0x151122b60 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x151122c98 <line:7:2, col:21>
    | `-VarDecl 0x151122c30 <col:2, col:20> col:20 invalid e 'struct isakmp_gen'
    |-BinaryOperator 0x151122d48 <line:9:2, col:23> 'const char *' '='
    | |-DeclRefExpr 0x151122cb0 <col:2> 'const char *' lvalue Var 0x151122ac8 'cp' 'const char *'
    | `-CStyleCastExpr 0x151122d20 <col:7, col:23> 'const char *' <BitCast>
    |   `-ImplicitCastExpr 0x151122d08 <col:23> 'const struct isakmp_gen *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x151122cd0 <col:23> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |-WhileStmt 0x151125790 <line:11:2, line:34:2>
    | |-ImplicitCastExpr 0x151122d88 <line:11:9> 'char' <LValueToRValue>
    | | `-DeclRefExpr 0x151122d68 <col:9> 'char' lvalue ParmVar 0x15180dda0 'np' 'char'
    | `-CompoundStmt 0x151125718 <col:13, line:34:2>
    |   |-ImplicitCastExpr 0x151123028 <line:12:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x151122ff8 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x151122f00 <col:3> 'int ()' Function 0x151122e48 'ND_TCHECK' 'int ()'
    |   |   `-UnaryOperator 0x151122f58 <col:13, col:14> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x151122f40 <col:14> 'const struct isakmp_gen *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x151122f20 <col:14> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |   |-CallExpr 0x1511231f8 <line:14:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151123120 <col:3> 'int ()' Function 0x151123068 'UNALIGNED_MEMCPY' 'int ()'
    |   | |-UnaryOperator 0x151123160 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x151123140 <col:21> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x151123178 <col:24> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |   | `-UnaryExprOrTypeTraitExpr 0x1511231d8 <col:29, col:37> 'unsigned long' contains-errors sizeof
    |   |   `-ParenExpr 0x1511231b8 <col:35, col:37> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x151123198 <col:36> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151123510 <line:16:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151123310 <col:3> 'int ()' Function 0x151123258 'ND_TCHECK2' 'int ()'
    |   | |-UnaryOperator 0x151123368 <col:14, col:15> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x151123350 <col:15> 'const struct isakmp_gen *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x151123330 <col:15> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |   | `-CallExpr 0x1511234e8 <col:20, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x151123460 <col:20> 'int ()' Function 0x1511233a8 'ntohs' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x1511234a0 <col:26, col:28> '<dependent type>' contains-errors lvalue .len
    |   |     `-RecoveryExpr 0x151123480 <col:26> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x151123560 <line:18:3, col:8> 'int' postfix '++'
    |   | `-DeclRefExpr 0x151123540 <col:3> 'int' lvalue ParmVar 0x151122818 'depth' 'int'
    |   |-CallExpr 0x151124da0 <line:19:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151124cb8 <col:3> 'int ()' Function 0x151124c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x151124d80 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x151124d60 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x151124cd8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x151124d40 <col:17> 'char[4]' lvalue "STR"
    |   |-ForStmt 0x151124fb8 <line:20:3, line:21:24>
    |   | |-BinaryOperator 0x151124e08 <line:20:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x151124dc8 <col:8> 'int' lvalue Var 0x151122b60 'i' 'int'
    |   | | `-IntegerLiteral 0x151124de8 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x151124e98 <col:15, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x151124e68 <col:15> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x151124e28 <col:15> 'int' lvalue Var 0x151122b60 'i' 'int'
    |   | | `-ImplicitCastExpr 0x151124e80 <col:19> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x151124e48 <col:19> 'int' lvalue ParmVar 0x151122818 'depth' 'int'
    |   | |-UnaryOperator 0x151124ed8 <col:26, col:27> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x151124eb8 <col:26> 'int' lvalue Var 0x151122b60 'i' 'int'
    |   | `-CallExpr 0x151124f90 <line:21:4, col:24> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x151124ef0 <col:4> 'int ()' Function 0x151124c00 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x151124f70 <col:13, col:23> 'char[4]' contains-errors
    |   |     `-BinaryOperator 0x151124f50 <col:14, col:18> 'char[4]' contains-errors ','
    |   |       |-RecoveryExpr 0x151124f10 <col:14> '<dependent type>' contains-errors lvalue
    |   |       `-StringLiteral 0x151124f30 <col:18> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x151125090 <line:22:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151124ff0 <col:3> 'int ()' Function 0x151124c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x151125070 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x151125050 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x151125010 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x151125030 <col:17> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x151125338 <line:23:3, col:65> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x1511250b8 <col:3> 'const char *' lvalue Var 0x151122ac8 'cp' 'const char *'
    |   | `-CallExpr 0x1511252d8 <col:8, col:65> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1511251b8 <col:8> 'int ()' Function 0x151125100 'ike_sub0_print' 'int ()'
    |   |   |-RecoveryExpr 0x1511251d8 <col:23> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x1511251f8 <col:28> 'char' lvalue ParmVar 0x15180dda0 'np' 'char'
    |   |   |-DeclRefExpr 0x151125218 <col:32> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |   |   |-DeclRefExpr 0x151125238 <col:37> 'const char *' lvalue ParmVar 0x151122618 'ep' 'const char *'
    |   |   |-RecoveryExpr 0x151125258 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x151125278 <col:48> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x151125298 <col:53> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1511252b8 <col:60> 'int' lvalue ParmVar 0x151122818 'depth' 'int'
    |   |-CallExpr 0x1511253f8 <line:24:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151125358 <col:3> 'int ()' Function 0x151124c00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1511253d8 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x1511253b8 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x151125378 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x151125398 <col:17> 'char[4]' lvalue "STR"
    |   |-UnaryOperator 0x151125440 <line:25:3, col:8> 'int' postfix '--'
    |   | `-DeclRefExpr 0x151125420 <col:3> 'int' lvalue ParmVar 0x151122818 'depth' 'int'
    |   |-IfStmt 0x151125550 <line:27:3, line:30:3>
    |   | |-BinaryOperator 0x1511254d0 <line:27:7, col:13> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x151125458 <col:7> 'const char *' lvalue Var 0x151122ac8 'cp' 'const char *'
    |   | | `-RecoveryExpr 0x1511254b0 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x151125538 <col:19, line:30:3>
    |   |   `-ReturnStmt 0x151125528 <line:29:4, col:11>
    |   |     `-RecoveryExpr 0x151125508 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1511255f8 <line:32:3, col:10> 'char' contains-errors '='
    |   | |-DeclRefExpr 0x151125570 <col:3> 'char' lvalue ParmVar 0x15180dda0 'np' 'char'
    |   | `-CXXDependentScopeMemberExpr 0x1511255b0 <col:8, col:10> '<dependent type>' contains-errors lvalue .np
    |   |   `-RecoveryExpr 0x151125590 <col:8> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1511256f8 <line:33:3, col:36> 'const struct isakmp_gen *' '='
    |     |-DeclRefExpr 0x151125618 <col:3> 'const struct isakmp_gen *' lvalue ParmVar 0x15180e398 'ext' 'const struct isakmp_gen *'
    |     `-CStyleCastExpr 0x1511256d0 <col:9, col:36> 'const struct isakmp_gen *' <BitCast>
    |       `-ImplicitCastExpr 0x1511256b8 <col:36> 'const char *' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x151125638 <col:36> 'const char *' lvalue Var 0x151122ac8 'cp' 'const char *'
    |-ReturnStmt 0x151125800 <line:35:2, col:9>
    | `-ImplicitCastExpr 0x1511257e8 <col:9> 'int' <PointerToIntegral>
    |   `-ImplicitCastExpr 0x1511257d0 <col:9> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x1511257b0 <col:9> 'const char *' lvalue Var 0x151122ac8 'cp' 'const char *'
    `-LabelStmt 0x151125ad8 <line:36:1, line:37:33> 'trunc'
      `-CallExpr 0x151125a60 <col:2, col:33> '<dependent type>' contains-errors
        |-DeclRefExpr 0x151125810 <col:2> 'int ()' Function 0x151124c00 'ND_PRINT' 'int ()'
        `-ParenExpr 0x151125a40 <col:11, col:32> 'int' contains-errors
          `-BinaryOperator 0x151125a20 <col:12, col:31> 'int' contains-errors ','
            |-BinaryOperator 0x151125870 <col:12, col:16> 'char[4]' contains-errors ','
            | |-RecoveryExpr 0x151125830 <col:12> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x151125850 <col:16> 'char[4]' lvalue "STR"
            `-CallExpr 0x1511259c8 <col:23, col:31> 'int'
              |-ImplicitCastExpr 0x1511259b0 <col:23> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x151125970 <col:23> 'int ()' Function 0x1511258b8 'NPSTR' 'int ()'
              `-ImplicitCastExpr 0x151125a08 <col:29> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x1511259f0 <col:29> 'char' <LValueToRValue>
                  `-DeclRefExpr 0x151125990 <col:29> 'char' lvalue ParmVar 0x15180dda0 'np' 'char'
