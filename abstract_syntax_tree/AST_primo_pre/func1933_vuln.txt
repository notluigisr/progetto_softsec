`-FunctionDecl 0x15780dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x15780dcd8 <col:14> col:14 grapheme_strpos 'int'
  `-CompoundStmt 0x156903b28 <line:2:1, line:61:1>
    |-DeclStmt 0x15780dfe8 <line:3:2, col:34>
    | |-VarDecl 0x15780dee8 <col:2, col:17> col:17 used haystack 'unsigned char *'
    | `-VarDecl 0x15780df68 <col:2, col:28> col:28 used needle 'unsigned char *'
    |-DeclStmt 0x15780e118 <line:4:2, col:30>
    | |-VarDecl 0x15780e018 <col:2, col:6> col:6 used haystack_len 'int'
    | `-VarDecl 0x15780e098 <col:2, col:20> col:20 used needle_len 'int'
    |-DeclStmt 0x15780e1b0 <line:5:2, col:22>
    | `-VarDecl 0x15780e148 <col:2, col:17> col:17 used found 'unsigned char *'
    |-DeclStmt 0x15780e280 <line:6:2, col:18>
    | `-VarDecl 0x15780e1e0 <col:2, col:17> col:7 used loffset 'long' cinit
    |   `-ImplicitCastExpr 0x15780e268 <col:17> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x15780e248 <col:17> 'int' 0
    |-DeclStmt 0x15780e330 <line:8:2, col:13>
    | `-VarDecl 0x15780e2c8 <col:2, col:6> col:6 used ret_pos 'int'
    |-IfStmt 0x157826a40 <line:10:2, line:16:2>
    | |-RecoveryExpr 0x157826860 <line:10:6, col:141> '_Bool' contains-errors
    | `-CompoundStmt 0x157826a30 <col:150, line:16:2>
    |-IfStmt 0x157826cb8 <line:18:2, line:23:2>
    | |-CallExpr 0x157826bb8 <line:18:7, col:43> 'int'
    | | |-ImplicitCastExpr 0x157826ba0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x157826b40 <col:7> 'int ()' Function 0x157826a88 'OUTSIDE_STRING' 'int ()'
    | | |-ImplicitCastExpr 0x157826be8 <col:22> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x157826b60 <col:22> 'long' lvalue Var 0x15780e1e0 'loffset' 'long'
    | | `-ImplicitCastExpr 0x157826c00 <col:31> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x157826b80 <col:31> 'int' lvalue Var 0x15780e018 'haystack_len' 'int'
    | `-CompoundStmt 0x157826ca8 <col:47, line:23:2>
    |-IfStmt 0x157826e28 <line:30:2, line:35:2>
    | |-BinaryOperator 0x157826d68 <line:30:6, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x157826d50 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x157826d10 <col:6> 'int' lvalue Var 0x15780e098 'needle_len' 'int'
    | | `-IntegerLiteral 0x157826d30 <col:20> 'int' 0
    | `-CompoundStmt 0x157826e18 <col:23, line:35:2>
    |-IfStmt 0x1578271a8 <line:42:2, line:44:2>
    | |-UnaryOperator 0x157827180 <line:42:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x157827168 <col:7> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x157827148 <col:7> 'unsigned char *' lvalue Var 0x15780e148 'found' 'unsigned char *'
    | `-CompoundStmt 0x157827198 <col:14, line:44:2>
    |-IfStmt 0x1578275a8 <line:47:2, line:50:2>
    | |-BinaryOperator 0x1578273a0 <line:47:7, col:55> 'int' '>='
    | | |-CallExpr 0x157827320 <col:7, col:50> 'int'
    | | | |-ImplicitCastExpr 0x157827308 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1578272a8 <col:7> 'int ()' Function 0x1578271f0 'grapheme_ascii_check' 'int ()'
    | | | |-ImplicitCastExpr 0x157827350 <col:28> 'unsigned char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1578272c8 <col:28> 'unsigned char *' lvalue Var 0x15780dee8 'haystack' 'unsigned char *'
    | | | `-ImplicitCastExpr 0x157827368 <col:38> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1578272e8 <col:38> 'int' lvalue Var 0x15780e018 'haystack_len' 'int'
    | | `-IntegerLiteral 0x157827380 <col:55> 'int' 0
    | `-CompoundStmt 0x157827590 <col:59, line:50:2>
    |   `-CallExpr 0x157827568 <line:49:3, col:31> 'int'
    |     |-ImplicitCastExpr 0x157827550 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1578274a0 <col:3> 'int ()' Function 0x1578273e8 'RETURN_LONG' 'int ()'
    |     `-BinaryOperator 0x157827530 <col:15, col:23> 'long' '-'
    |       |-ImplicitCastExpr 0x157827500 <col:15> 'unsigned char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x1578274c0 <col:15> 'unsigned char *' lvalue Var 0x15780e148 'found' 'unsigned char *'
    |       `-ImplicitCastExpr 0x157827518 <col:23> 'unsigned char *' <LValueToRValue>
    |         `-DeclRefExpr 0x1578274e0 <col:23> 'unsigned char *' lvalue Var 0x15780dee8 'haystack' 'unsigned char *'
    `-IfStmt 0x156903af8 <line:55:2, line:59:2> has_else
      |-BinaryOperator 0x156903a18 <line:55:7, col:18> 'int' '>='
      | |-ImplicitCastExpr 0x156903a00 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1569039c0 <col:7> 'int' lvalue Var 0x15780e2c8 'ret_pos' 'int'
      | `-IntegerLiteral 0x1569039e0 <col:18> 'int' 0
      |-CompoundStmt 0x156903ad0 <col:22, line:57:2>
      | `-CallExpr 0x156903a90 <line:56:3, col:22> 'int'
      |   |-ImplicitCastExpr 0x156903a78 <col:3> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x156903a38 <col:3> 'int ()' Function 0x1578273e8 'RETURN_LONG' 'int ()'
      |   `-ImplicitCastExpr 0x156903ab8 <col:15> 'int' <LValueToRValue>
      |     `-DeclRefExpr 0x156903a58 <col:15> 'int' lvalue Var 0x15780e2c8 'ret_pos' 'int'
      `-CompoundStmt 0x156903ae8 <line:57:9, line:59:2>
