`-FunctionDecl 0x128928258  line:1:1 invalid ossl_cipher_initialize 'int (int, int)'
  |-ParmVarDecl 0x1289280f0 <col:24, col:30> col:30 invalid self 'int'
  |-ParmVarDecl 0x128928170 <col:36, col:42> col:42 invalid str 'int'
  `-CompoundStmt 0x128942480 <line:2:1, line:22:1>
    |-DeclStmt 0x1289283a8 <line:4:5, col:29>
    | `-VarDecl 0x128928340 <col:5, col:23> col:23 invalid cipher 'const int *'
    |-DeclStmt 0x128928440 <line:5:5, col:15>
    | `-VarDecl 0x1289283d8 <col:5, col:11> col:11 used name 'char *'
    |-DeclStmt 0x128928558 <line:6:5, col:56>
    | `-VarDecl 0x128928488 <col:5, col:19> col:19 invalid dummy_key 'unsigned char'
    |-BinaryOperator 0x128928758 <line:8:5, col:31> 'char *' contains-errors '='
    | |-DeclRefExpr 0x128928570 <col:5> 'char *' lvalue Var 0x1289283d8 'name' 'char *'
    | `-CallExpr 0x128928730 <col:12, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1289286f0 <col:12> 'int ()' Function 0x128928638 'StringValueCStr' 'int ()'
    |   `-RecoveryExpr 0x128928710 <col:28> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x128941960 <line:9:5, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1289418b8 <col:5> 'int ()' Function 0x128941800 'GetCipherInit' 'int ()'
    | |-RecoveryExpr 0x1289418d8 <col:19> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x128941940 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128941bd8 <line:10:5, line:12:5>
    | |-RecoveryExpr 0x1289419a8 <line:10:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128941bc0 <col:14, line:12:5>
    |   `-CallExpr 0x128941b90 <line:11:2, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x128941aa8 <col:2> 'int ()' Function 0x1289419f0 'ossl_raise' 'int ()'
    |     |-RecoveryExpr 0x128941b70 <col:13> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x128941b20 <col:31> 'char[4]' lvalue "STR"
    |-CallExpr 0x128941d80 <line:13:5, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128941cd8 <col:5> 'int ()' Function 0x128941c20 'AllocCipher' 'int ()'
    | |-RecoveryExpr 0x128941cf8 <col:17> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x128941d60 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1289420f0 <line:14:5, line:16:5>
    | |-UnaryOperator 0x128941fb8 <line:14:9, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ParenExpr 0x128941f98 <col:10, col:46> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x128941f78 <col:11, col:45> '<dependent type>' contains-errors '='
    | |     |-RecoveryExpr 0x128941db0 <col:11> '<dependent type>' contains-errors lvalue
    | |     `-CallExpr 0x128941f38 <col:20, col:45> 'int'
    | |       |-ImplicitCastExpr 0x128941f20 <col:20> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x128941eb0 <col:20> 'int ()' Function 0x128941df8 'EVP_get_cipherbyname' 'int ()'
    | |       `-ImplicitCastExpr 0x128941f60 <col:41> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x128941ed0 <col:41> 'char *' lvalue Var 0x1289283d8 'name' 'char *'
    | `-CompoundStmt 0x1289420d8 <col:49, line:16:5>
    |   `-CallExpr 0x1289420a0 <line:15:2, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x128941fd0 <col:2> 'int ()' Function 0x1289419f0 'ossl_raise' 'int ()'
    |     |-RecoveryExpr 0x128942080 <col:13> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x128942008 <col:31> 'char[4]' lvalue "STR"
    |     `-RecoveryExpr 0x128942028 <col:38> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x128942470 <line:21:5, col:12>
      `-RecoveryExpr 0x128942450 <col:12> '<dependent type>' contains-errors lvalue
