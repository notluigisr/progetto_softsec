`-FunctionDecl 0x12b80de80  line:1:6 invalid pushGenericCommand 'void (int *, int)'
  |-ParmVarDecl 0x12b80dd28 <col:25, col:33> col:33 invalid c 'int *'
  |-ParmVarDecl 0x12b80dda8 <col:36, col:40> col:40 used where 'int'
  `-CompoundStmt 0x12b82a4e8 <col:47, line:28:1>
    |-DeclStmt 0x12b80e070 <line:2:5, col:22>
    | |-VarDecl 0x12b80df50 <col:5, col:9> col:9 used j 'int'
    | `-VarDecl 0x12b80dfd0 <col:5, col:21> col:12 used pushed 'int' cinit
    |   `-IntegerLiteral 0x12b80e038 <col:21> 'int' 0
    |-IfStmt 0x12b8283b8 <line:5:5, line:8:5>
    | |-BinaryOperator 0x12b828120 <line:5:9, col:31> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x12b828058 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12b828100 <col:17, col:31> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x12b828098 <col:17, col:23> '<dependent type>' contains-errors lvalue ->type
    | |   | `-RecoveryExpr 0x12b828078 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12b8280e0 <col:31> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b828398 <col:41, line:8:5>
    |   |-CallExpr 0x12b828358 <line:6:9, col:39> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12b828220 <col:9> 'int ()' Function 0x12b828168 'addReply' 'int ()'
    |   | |-RecoveryExpr 0x12b828240 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-CXXDependentScopeMemberExpr 0x12b828310 <col:20, col:27> '<dependent type>' contains-errors lvalue .wrongtypeerr
    |   |   `-RecoveryExpr 0x12b8282f0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12b828388 <line:7:9>
    |-ForStmt 0x12b829bb0 <line:10:5, line:19:5>
    | |-BinaryOperator 0x12b828418 <line:10:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12b8283d8 <col:10> 'int' lvalue Var 0x12b80df50 'j' 'int'
    | | `-IntegerLiteral 0x12b8283f8 <col:14> 'int' 2
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12b8284c0 <col:17, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12b828438 <col:17> 'int' lvalue Var 0x12b80df50 'j' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12b828478 <col:21, col:24> '<dependent type>' contains-errors lvalue ->argc
    | |   `-RecoveryExpr 0x12b828458 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12b828500 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x12b8284e0 <col:30> 'int' lvalue Var 0x12b80df50 'j' 'int'
    | `-CompoundStmt 0x12b829b88 <col:35, line:19:5>
    |   |-IfStmt 0x12b828e40 <line:11:9, line:16:9>
    |   | |-UnaryOperator 0x12b828598 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12b828580 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x12b828560 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12b828e20 <col:20, line:16:9>
    |   |   |-CallExpr 0x12b828aa8 <line:13:13, line:14:59> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x12b8287f8 <line:13:13> 'int ()' Function 0x12b828740 'quicklistSetOptions' 'int ()'
    |   |   | |-CXXDependentScopeMemberExpr 0x12b828990 <col:33, col:39> '<dependent type>' contains-errors lvalue ->ptr
    |   |   | | `-RecoveryExpr 0x12b828970 <col:33> '<dependent type>' contains-errors lvalue
    |   |   | |-CXXDependentScopeMemberExpr 0x12b8289f8 <col:44, col:51> '<dependent type>' contains-errors lvalue .list_max_ziplist_size
    |   |   | | `-RecoveryExpr 0x12b8289d8 <col:44> '<dependent type>' contains-errors lvalue
    |   |   | `-CXXDependentScopeMemberExpr 0x12b828a60 <line:14:33, col:40> '<dependent type>' contains-errors lvalue .list_compress_depth
    |   |   |   `-RecoveryExpr 0x12b828a40 <col:33> '<dependent type>' contains-errors lvalue
    |   |   `-CallExpr 0x12b828de8 <line:15:13, col:40> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x12b828bc0 <col:13> 'int ()' Function 0x12b828b08 'dbAdd' 'int ()'
    |   |     |-CXXDependentScopeMemberExpr 0x12b828c00 <col:19, col:22> '<dependent type>' contains-errors lvalue ->db
    |   |     | `-RecoveryExpr 0x12b828be0 <col:19> '<dependent type>' contains-errors lvalue
    |   |     |-ArraySubscriptExpr 0x12b828da8 <col:25, col:34> '<dependent type>' contains-errors lvalue
    |   |     | |-ImplicitCastExpr 0x12b828d90 <col:25, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | `-CXXDependentScopeMemberExpr 0x12b828c68 <col:25, col:28> '<dependent type>' contains-errors lvalue ->argv
    |   |     | |   `-RecoveryExpr 0x12b828c48 <col:25> '<dependent type>' contains-errors lvalue
    |   |     | `-IntegerLiteral 0x12b828cb0 <col:33> 'int' 1
    |   |     `-RecoveryExpr 0x12b828dc8 <col:36> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x12b829b18 <line:17:9, col:43> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12b828f40 <col:9> 'int ()' Function 0x12b828e88 'listTypePush' 'int ()'
    |   | |-RecoveryExpr 0x12b829aa8 <col:22> '<dependent type>' contains-errors lvalue
    |   | |-ArraySubscriptExpr 0x12b829af8 <col:27, col:36> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12b829ac8 <col:27, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x12b828f98 <col:27, col:30> '<dependent type>' contains-errors lvalue ->argv
    |   | | |   `-RecoveryExpr 0x12b828f78 <col:27> '<dependent type>' contains-errors lvalue
    |   | | `-ImplicitCastExpr 0x12b829ae0 <col:35> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12b828fe0 <col:35> 'int' lvalue Var 0x12b80df50 'j' 'int'
    |   | `-DeclRefExpr 0x12b829a50 <col:38> 'int' lvalue ParmVar 0x12b80dda8 'where' 'int'
    |   `-UnaryOperator 0x12b829b70 <line:18:9, col:15> 'int' postfix '++'
    |     `-DeclRefExpr 0x12b829b50 <col:9> 'int' lvalue Var 0x12b80dfd0 'pushed' 'int'
    `-IfStmt 0x12b82a4a8 <line:21:5, line:26:5>
      |-ImplicitCastExpr 0x12b829e48 <line:21:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12b829e28 <col:9> 'int' lvalue Var 0x12b80dfd0 'pushed' 'int'
      `-CompoundStmt 0x12b82a488 <col:17, line:26:5>
        |-DeclStmt 0x12b829f60 <line:22:9, col:51>
        | `-VarDecl 0x12b829e78 <col:9, col:15> col:15 used event 'char *'
        `-CallExpr 0x12b82a1c0 <line:24:9, col:45> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12b82a058 <col:9> 'int ()' Function 0x12b829fa0 'signalModifiedKey' 'int ()'
          |-RecoveryExpr 0x12b82a078 <col:27> '<dependent type>' contains-errors lvalue
          |-CXXDependentScopeMemberExpr 0x12b82a0b8 <col:29, col:32> '<dependent type>' contains-errors lvalue ->db
          | `-RecoveryExpr 0x12b82a098 <col:29> '<dependent type>' contains-errors lvalue
          `-ArraySubscriptExpr 0x12b82a1a0 <col:35, col:44> '<dependent type>' contains-errors lvalue
            |-ImplicitCastExpr 0x12b82a188 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>
            | `-CXXDependentScopeMemberExpr 0x12b82a120 <col:35, col:38> '<dependent type>' contains-errors lvalue ->argv
            |   `-RecoveryExpr 0x12b82a100 <col:35> '<dependent type>' contains-errors lvalue
            `-IntegerLiteral 0x12b82a168 <col:43> 'int' 1
