`-FunctionDecl 0x12f128288  line:1:1 invalid smtp_transport_get_name 'int (int *, int)'
  |-ParmVarDecl 0x12f128128 <col:26, col:40> col:40 invalid service 'int *'
  |-ParmVarDecl 0x12f1281a8 <line:2:26, col:35> col:35 invalid brief 'int'
  `-CompoundStmt 0x12f1422a8 <line:3:1, line:26:1>
    |-DeclStmt 0x12f1283f0 <line:6:2, col:13>
    | `-VarDecl 0x12f128388 <col:2, col:9> col:9 used host 'char *'
    |-DeclStmt 0x12f128488 <line:7:2, col:13>
    | `-VarDecl 0x12f128420 <col:2, col:9> col:9 used name 'char *'
    |-BinaryOperator 0x12f141980 <line:12:2, col:58> 'char *' contains-errors '='
    | |-DeclRefExpr 0x12f1287a8 <col:2> 'char *' lvalue Var 0x12f128388 'host' 'char *'
    | `-CallExpr 0x12f141958 <col:9, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f1418b8 <col:9> 'int ()' Function 0x12f141800 'camel_network_settings_dup_host' 'int ()'
    |   `-RecoveryExpr 0x12f141938 <col:42> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f141b00 <line:14:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f141a80 <col:2> 'int ()' Function 0x12f1419c8 'g_object_unref' 'int ()'
    | `-RecoveryExpr 0x12f141ae0 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f1420a0 <line:16:2, line:21:18> has_else
    | |-RecoveryExpr 0x12f141b28 <line:16:6> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x12f141ef0 <line:17:3, line:18:18> 'char *' '='
    | | |-DeclRefExpr 0x12f141b48 <line:17:3> 'char *' lvalue Var 0x12f128420 'name' 'char *'
    | | `-ImplicitCastExpr 0x12f141ed8 <col:10, line:18:18> 'char *' <IntegralToPointer>
    | |   `-CallExpr 0x12f141e90 <line:17:10, line:18:18> 'int'
    | |     |-ImplicitCastExpr 0x12f141e78 <line:17:10> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x12f141c48 <col:10> 'int ()' Function 0x12f141b90 'g_strdup_printf' 'int ()'
    | |     |-CallExpr 0x12f141e18 <line:18:4, col:11> 'int'
    | |     | |-ImplicitCastExpr 0x12f141e00 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x12f141d48 <col:4> 'int ()' Function 0x12f141c90 '_' 'int ()'
    | |     | `-ImplicitCastExpr 0x12f141e40 <col:6> 'char *' <ArrayToPointerDecay>
    | |     |   `-StringLiteral 0x12f141db0 <col:6> 'char[4]' lvalue "STR"
    | |     `-ImplicitCastExpr 0x12f141ec0 <col:14> 'char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x12f141e58 <col:14> 'char *' lvalue Var 0x12f128388 'host' 'char *'
    | `-BinaryOperator 0x12f142080 <line:20:3, line:21:18> 'char *' '='
    |   |-DeclRefExpr 0x12f141f10 <line:20:3> 'char *' lvalue Var 0x12f128420 'name' 'char *'
    |   `-ImplicitCastExpr 0x12f142068 <col:10, line:21:18> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x12f142020 <line:20:10, line:21:18> 'int'
    |       |-ImplicitCastExpr 0x12f142008 <line:20:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12f141f30 <col:10> 'int ()' Function 0x12f141b90 'g_strdup_printf' 'int ()'
    |       |-CallExpr 0x12f141fa8 <line:21:4, col:11> 'int'
    |       | |-ImplicitCastExpr 0x12f141f90 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x12f141f50 <col:4> 'int ()' Function 0x12f141c90 '_' 'int ()'
    |       | `-ImplicitCastExpr 0x12f141fd0 <col:6> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x12f141f70 <col:6> 'char[4]' lvalue "STR"
    |       `-ImplicitCastExpr 0x12f142050 <col:14> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x12f141fe8 <col:14> 'char *' lvalue Var 0x12f128388 'host' 'char *'
    |-CallExpr 0x12f142208 <line:23:2, col:14> 'int'
    | |-ImplicitCastExpr 0x12f1421f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12f1421b0 <col:2> 'int ()' Function 0x12f1420f8 'g_free' 'int ()'
    | `-ImplicitCastExpr 0x12f142230 <col:10> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12f1421d0 <col:10> 'char *' lvalue Var 0x12f128388 'host' 'char *'
    `-ReturnStmt 0x12f142298 <line:25:2, col:9>
      `-ImplicitCastExpr 0x12f142280 <col:9> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x12f142268 <col:9> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x12f142248 <col:9> 'char *' lvalue Var 0x12f128420 'name' 'char *'
