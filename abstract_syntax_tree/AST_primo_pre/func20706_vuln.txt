`-FunctionDecl 0x128128e88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x128128d28 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x128128da8 <col:46, col:58> col:58 referenced invalid node 'int *'
  `-CompoundStmt 0x128144d70 <col:64, line:78:1>
    |-DeclStmt 0x128129078 <line:2:3, col:56>
    | `-VarDecl 0x128128f58 <col:3, col:9> col:9 used op_data 'int *' auto
    |-CallExpr 0x128129398 <line:4:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1281291f0 <col:3> 'int ()' Function 0x128129138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x128129210 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x128129350 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128129310 <col:30> 'int ()' Function 0x128129258 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x128129330 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x128129378 <col:47> 'int' 3
    |-DeclStmt 0x1281425f8 <line:5:3, line:6:56>
    | `-VarDecl 0x128142400 <line:5:3, col:23> col:23 invalid input_box_encodings 'const int *'
    |-DeclStmt 0x128142740 <line:7:3, line:8:60>
    | `-VarDecl 0x128142628 <line:7:3, col:23> col:23 invalid input_class_predictions 'const int *'
    |-DeclStmt 0x128142888 <line:9:3, line:10:51>
    | `-VarDecl 0x128142770 <line:9:3, col:23> col:23 invalid input_anchors 'const int *'
    |-CallExpr 0x128142a48 <line:11:3, col:67> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1281428a0 <col:3> 'int ()' Function 0x128129138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1281428c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x128142a00 <col:30, col:63> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1281429c0 <col:30> 'int ()' Function 0x128142908 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x1281429e0 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x128142a28 <col:66> 'int' 3
    |-CallExpr 0x128142b48 <line:12:3, col:71> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128142a80 <col:3> 'int ()' Function 0x128129138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x128142aa0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x128142b00 <col:30, col:67> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128142ac0 <col:30> 'int ()' Function 0x128142908 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x128142ae0 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x128142b28 <col:70> 'int' 3
    |-CallExpr 0x128142c48 <line:13:3, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128142b80 <col:3> 'int ()' Function 0x128129138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x128142ba0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x128142c00 <col:30, col:57> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128142bc0 <col:30> 'int ()' Function 0x128142908 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x128142be0 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x128142c28 <col:60> 'int' 2
    |-DeclStmt 0x128143208 <line:15:3, line:16:67>
    | `-VarDecl 0x128142c98 <line:15:3, line:16:42> line:15:13 num_detected_boxes 'const int' cinit
    |   `-BinaryOperator 0x1281431e8 <line:16:7, col:42> '<dependent type>' contains-errors '*'
    |     |-RecoveryExpr 0x128143160 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x128142d00 <col:7> 'int *' lvalue Var 0x128128f58 'op_data' 'int *'
    |     `-RecoveryExpr 0x1281431c0 <col:33, col:42> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x128143188 <col:33> 'int *' lvalue Var 0x128128f58 'op_data' 'int *'
    |-CallExpr 0x1281433c8 <line:20:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128143220 <col:3> 'int ()' Function 0x128129138 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x128143240 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x128143380 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x128143340 <col:30> 'int ()' Function 0x128143288 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x128143360 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x1281433a8 <col:48> 'int' 4
    |-CallExpr 0x1281441a8 <line:48:3, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128144120 <col:3> 'int ()' Function 0x128144068 'TfLiteIntArrayFree' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x128144160 <col:22, col:28> '<dependent type>' contains-errors lvalue ->temporaries
    |   `-RecoveryExpr 0x128144140 <col:22> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1281443f0 <line:49:3, col:45> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x128144218 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries
    | | `-RecoveryExpr 0x1281441f0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1281441d0 <col:3> 'int *' lvalue ParmVar 0x128128da8 'node' 'int *'
    | `-CallExpr 0x1281443c8 <col:23, col:45> 'int'
    |   |-ImplicitCastExpr 0x1281443b0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128144340 <col:23> 'int ()' Function 0x128144288 'TfLiteIntArrayCreate' 'int ()'
    |   `-IntegerLiteral 0x128144360 <col:44> 'int' 3
    |-BinaryOperator 0x1281445a0 <line:50:3, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x128144520 <col:3, col:28> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x128144508 <col:3, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1281444a0 <col:3, col:22> '<dependent type>' contains-errors lvalue ->data
    | | |   `-CXXDependentScopeMemberExpr 0x128144458 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries
    | | |     `-RecoveryExpr 0x128144430 <col:3> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x128144410 <col:3> 'int *' lvalue ParmVar 0x128128da8 'node' 'int *'
    | | `-IntegerLiteral 0x1281444e8 <col:27> 'int' 0
    | `-RecoveryExpr 0x128144578 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x128144540 <col:32> 'int *' lvalue Var 0x128128f58 'op_data' 'int *'
    |-BinaryOperator 0x128144750 <line:51:3, col:41> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1281446d0 <col:3, col:28> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x1281446b8 <col:3, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x128144650 <col:3, col:22> '<dependent type>' contains-errors lvalue ->data
    | | |   `-CXXDependentScopeMemberExpr 0x128144608 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries
    | | |     `-RecoveryExpr 0x1281445e0 <col:3> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x1281445c0 <col:3> 'int *' lvalue ParmVar 0x128128da8 'node' 'int *'
    | | `-IntegerLiteral 0x128144698 <col:27> 'int' 1
    | `-RecoveryExpr 0x128144728 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1281446f0 <col:32> 'int *' lvalue Var 0x128128f58 'op_data' 'int *'
    `-BinaryOperator 0x128144900 <line:52:3, col:41> '<dependent type>' contains-errors '='
      |-ArraySubscriptExpr 0x128144880 <col:3, col:28> '<dependent type>' contains-errors lvalue
      | |-ImplicitCastExpr 0x128144868 <col:3, col:22> '<dependent type>' contains-errors <LValueToRValue>
      | | `-CXXDependentScopeMemberExpr 0x128144800 <col:3, col:22> '<dependent type>' contains-errors lvalue ->data
      | |   `-CXXDependentScopeMemberExpr 0x1281447b8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries
      | |     `-RecoveryExpr 0x128144790 <col:3> '<dependent type>' contains-errors lvalue
      | |       `-DeclRefExpr 0x128144770 <col:3> 'int *' lvalue ParmVar 0x128128da8 'node' 'int *'
      | `-IntegerLiteral 0x128144848 <col:27> 'int' 2
      `-RecoveryExpr 0x1281448d8 <col:32, col:41> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x1281448a0 <col:32> 'int *' lvalue Var 0x128128f58 'op_data' 'int *'
