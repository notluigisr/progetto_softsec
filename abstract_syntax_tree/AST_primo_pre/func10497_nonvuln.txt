`-FunctionDecl 0x14d00de80  line:1:13 invalid correlate_init 'void (int *, int)' static
  |-ParmVarDecl 0x14d00dd28 <col:28, col:40> col:40 referenced invalid family 'int *'
  |-ParmVarDecl 0x14d00dda8 <col:48, col:52> col:52 used bpc 'int'
  `-CompoundStmt 0x14e009918 <line:2:1, line:15:1>
    |-DeclStmt 0x14d00dff0 <line:3:5, col:51>
    | `-VarDecl 0x14d00df50 <col:5, col:24> col:24 used pixelbitmask 'const unsigned int'
    |-DeclStmt 0x14d00e088 <line:4:5, col:24>
    | `-VarDecl 0x14d00e020 <col:5, col:23> col:23 used s 'unsigned long'
    `-ForStmt 0x14e0098e0 <line:8:5, line:14:5>
      |-BinaryOperator 0x14d00e0f8 <line:8:10, col:14> 'unsigned long' '='
      | |-DeclRefExpr 0x14d00e0a0 <col:10> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
      | `-ImplicitCastExpr 0x14d00e0e0 <col:14> 'unsigned long' <IntegralCast>
      |   `-IntegerLiteral 0x14d00e0c0 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14d00e1a0 <col:17, col:22> 'int' '<='
      | |-ImplicitCastExpr 0x14d00e158 <col:17> 'unsigned long' <LValueToRValue>
      | | `-DeclRefExpr 0x14d00e118 <col:17> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
      | `-ImplicitCastExpr 0x14d00e188 <col:22> 'unsigned long' <IntegralCast>
      |   `-ImplicitCastExpr 0x14d00e170 <col:22> 'unsigned int' <LValueToRValue>
      |     `-DeclRefExpr 0x14d00e138 <col:22> 'const unsigned int' lvalue Var 0x14d00df50 'pixelbitmask' 'const unsigned int'
      |-UnaryOperator 0x14d00e1e0 <col:36, col:37> 'unsigned long' postfix '++'
      | `-DeclRefExpr 0x14d00e1c0 <col:36> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
      `-CompoundStmt 0x14e0098c8 <col:41, line:14:5>
        `-IfStmt 0x14e009898 <line:9:9, line:13:9> has_else
          |-BinaryOperator 0x14d00e268 <line:9:13, col:17> 'unsigned long' '&'
          | |-ImplicitCastExpr 0x14d00e238 <col:13> 'unsigned long' <LValueToRValue>
          | | `-DeclRefExpr 0x14d00e1f8 <col:13> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
          | `-ImplicitCastExpr 0x14d00e250 <col:17> 'unsigned long' <IntegralCast>
          |   `-IntegerLiteral 0x14d00e218 <col:17> 'int' 1
          |-CompoundStmt 0x14e0096b0 <col:23, line:11:9>
          | `-BinaryOperator 0x14e009690 <line:10:13, col:56> '<dependent type>' contains-errors '='
          |   |-ArraySubscriptExpr 0x14d00e368 <col:13, col:30> '<dependent type>' contains-errors lvalue
          |   | |-ImplicitCastExpr 0x14d00e338 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>
          |   | | `-CXXDependentScopeMemberExpr 0x14d00e2d0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->xlatL2U
          |   | |   `-RecoveryExpr 0x14d00e2a8 <col:13> '<dependent type>' contains-errors lvalue
          |   | |     `-DeclRefExpr 0x14d00e288 <col:13> 'int *' lvalue ParmVar 0x14d00dd28 'family' 'int *'
          |   | `-ImplicitCastExpr 0x14d00e350 <col:29> 'unsigned long' <LValueToRValue>
          |   |   `-DeclRefExpr 0x14d00e318 <col:29> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
          |   `-BinaryOperator 0x14e009670 <col:34, col:56> 'unsigned long' '-'
          |     |-ImplicitCastExpr 0x14e009658 <col:34> 'unsigned long' <IntegralCast>
          |     | `-ImplicitCastExpr 0x14e009640 <col:34> 'unsigned int' <LValueToRValue>
          |     |   `-DeclRefExpr 0x14d00e388 <col:34> 'const unsigned int' lvalue Var 0x14d00df50 'pixelbitmask' 'const unsigned int'
          |     `-ParenExpr 0x14e009620 <col:49, col:56> 'unsigned long'
          |       `-BinaryOperator 0x14e009600 <col:50, col:55> 'unsigned long' '>>'
          |         |-ImplicitCastExpr 0x14d00e3e8 <col:50> 'unsigned long' <LValueToRValue>
          |         | `-DeclRefExpr 0x14d00e3a8 <col:50> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
          |         `-IntegerLiteral 0x14d00e3c8 <col:55> 'int' 1
          `-CompoundStmt 0x14e009880 <line:11:16, line:13:9>
            `-BinaryOperator 0x14e009860 <line:12:13, col:41> '<dependent type>' contains-errors '='
              |-ArraySubscriptExpr 0x14e0097a8 <col:13, col:30> '<dependent type>' contains-errors lvalue
              | |-ImplicitCastExpr 0x14e009778 <col:13, col:21> '<dependent type>' contains-errors <LValueToRValue>
              | | `-CXXDependentScopeMemberExpr 0x14e009710 <col:13, col:21> '<dependent type>' contains-errors lvalue ->xlatL2U
              | |   `-RecoveryExpr 0x14e0096e8 <col:13> '<dependent type>' contains-errors lvalue
              | |     `-DeclRefExpr 0x14e0096c8 <col:13> 'int *' lvalue ParmVar 0x14d00dd28 'family' 'int *'
              | `-ImplicitCastExpr 0x14e009790 <col:29> 'unsigned long' <LValueToRValue>
              |   `-DeclRefExpr 0x14e009758 <col:29> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
              `-ParenExpr 0x14e009840 <col:34, col:41> 'unsigned long'
                `-BinaryOperator 0x14e009820 <col:35, col:40> 'unsigned long' '>>'
                  |-ImplicitCastExpr 0x14e009808 <col:35> 'unsigned long' <LValueToRValue>
                  | `-DeclRefExpr 0x14e0097c8 <col:35> 'unsigned long' lvalue Var 0x14d00e020 's' 'unsigned long'
                  `-IntegerLiteral 0x14e0097e8 <col:40> 'int' 1
