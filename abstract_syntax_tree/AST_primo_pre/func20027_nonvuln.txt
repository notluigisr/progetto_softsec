`-FunctionDecl 0x14c0268a0  line:1:13 referenced remove_tree 'void (struct quota_handle *, struct dquot *, unsigned int *, int)' static
  |-ParmVarDecl 0x14c00e248 <col:25, col:46> col:46 used h 'struct quota_handle *'
  |-ParmVarDecl 0x14c026628 <col:49, col:63> col:63 used dquot 'struct dquot *'
  |-ParmVarDecl 0x14c0266d8 <line:2:4, col:19> col:19 used blk 'unsigned int *'
  |-ParmVarDecl 0x14c026758 <col:24, col:28> col:28 used depth 'int'
  `-CompoundStmt 0x14c02e638 <line:3:1, line:37:1>
    |-DeclStmt 0x14c026a48 <line:5:2, col:21>
    | `-VarDecl 0x14c0269e0 <col:2, col:15> col:15 used newblk 'unsigned int'
    |-IfStmt 0x14c026b38 <line:8:2, line:9:3>
    | |-UnaryOperator 0x14c026b10 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c026af8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14c026ad8 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14c026b28 <line:9:3>
    |-CallExpr 0x14c026dd0 <line:11:2, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c026c70 <col:2> 'int ()' Function 0x14c026bb8 'read_blk' 'int ()'
    | |-DeclRefExpr 0x14c026c90 <col:11> 'struct quota_handle *' lvalue ParmVar 0x14c00e248 'h' 'struct quota_handle *'
    | |-UnaryOperator 0x14c026d98 <col:14, col:15> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14c026d80 <col:15> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c026cb0 <col:15> 'unsigned int *' lvalue ParmVar 0x14c0266d8 'blk' 'unsigned int *'
    | `-RecoveryExpr 0x14c026db0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c02dad0 <line:13:2, line:18:2> has_else
    | |-BinaryOperator 0x14c0271c8 <line:13:6, col:30> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x14c0270f0 <col:6> 'int' lvalue ParmVar 0x14c026758 'depth' 'int'
    | | `-BinaryOperator 0x14c0271a8 <col:15, col:30> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x14c027188 <col:15> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x14c027128 <col:30> 'int' 1
    | |-CompoundStmt 0x14c027490 <col:33, line:16:2>
    | | |-CallExpr 0x14c027398 <line:14:3, col:32> 'int'
    | | | |-ImplicitCastExpr 0x14c027380 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x14c0272c8 <col:3> 'int ()' Function 0x14c027210 'free_dqentry' 'int ()'
    | | | |-ImplicitCastExpr 0x14c0273d0 <col:16> 'struct quota_handle *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14c0272e8 <col:16> 'struct quota_handle *' lvalue ParmVar 0x14c00e248 'h' 'struct quota_handle *'
    | | | |-ImplicitCastExpr 0x14c0273e8 <col:19> 'struct dquot *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14c027308 <col:19> 'struct dquot *' lvalue ParmVar 0x14c026628 'dquot' 'struct dquot *'
    | | | `-ImplicitCastExpr 0x14c027400 <col:26> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x14c027328 <col:26> 'unsigned int' lvalue Var 0x14c0269e0 'newblk' 'unsigned int'
    | | `-BinaryOperator 0x14c027470 <line:15:3, col:12> 'unsigned int' '='
    | |   |-DeclRefExpr 0x14c027418 <col:3> 'unsigned int' lvalue Var 0x14c0269e0 'newblk' 'unsigned int'
    | |   `-ImplicitCastExpr 0x14c027458 <col:12> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x14c027438 <col:12> 'int' 0
    | `-CompoundStmt 0x14c02dab8 <line:16:9, line:18:2>
    |   `-CallExpr 0x14c02da48 <line:17:3, col:43> 'void'
    |     |-ImplicitCastExpr 0x14c02da30 <col:3> 'void (*)(struct quota_handle *, struct dquot *, unsigned int *, int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14c0274b0 <col:3> 'void (struct quota_handle *, struct dquot *, unsigned int *, int)' Function 0x14c0268a0 'remove_tree' 'void (struct quota_handle *, struct dquot *, unsigned int *, int)'
    |     |-ImplicitCastExpr 0x14c02da88 <col:15> 'struct quota_handle *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14c0274d0 <col:15> 'struct quota_handle *' lvalue ParmVar 0x14c00e248 'h' 'struct quota_handle *'
    |     |-ImplicitCastExpr 0x14c02daa0 <col:18> 'struct dquot *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14c0274f0 <col:18> 'struct dquot *' lvalue ParmVar 0x14c026628 'dquot' 'struct dquot *'
    |     |-UnaryOperator 0x14c027530 <col:25, col:26> 'unsigned int *' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x14c027510 <col:26> 'unsigned int' lvalue Var 0x14c0269e0 'newblk' 'unsigned int'
    |     `-BinaryOperator 0x14c0275a0 <col:34, col:42> 'int' '+'
    |       |-ImplicitCastExpr 0x14c027588 <col:34> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x14c027548 <col:34> 'int' lvalue ParmVar 0x14c026758 'depth' 'int'
    |       `-IntegerLiteral 0x14c027568 <col:42> 'int' 1
    `-IfStmt 0x14c02e518 <line:20:2, line:35:2>
      |-UnaryOperator 0x14c02db38 <line:20:6, col:7> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x14c02db20 <col:7> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x14c02db00 <col:7> 'unsigned int' lvalue Var 0x14c0269e0 'newblk' 'unsigned int'
      `-CompoundStmt 0x14c02e4f8 <col:15, line:35:2>
        |-DeclStmt 0x14c02dbd0 <line:21:3, col:8>
        | `-VarDecl 0x14c02db68 <col:3, col:7> col:7 used i 'int'
        `-IfStmt 0x14c02e4c8 <line:29:3, line:34:3> has_else
          |-BinaryOperator 0x14c02e0f8 <line:29:7, col:34> 'int' contains-errors '&&'
          | |-BinaryOperator 0x14c02e068 <col:7, col:12> 'int' contains-errors '=='
          | | |-DeclRefExpr 0x14c02df48 <col:7> 'int' lvalue Var 0x14c02db68 'i' 'int'
          | | `-RecoveryExpr 0x14c02e048 <col:12> '<dependent type>' contains-errors lvalue
          | `-BinaryOperator 0x14c02e0d8 <col:26, col:34> 'int' contains-errors '!='
          |   |-UnaryOperator 0x14c02e0a0 <col:26, col:27> 'unsigned int' lvalue prefix '*' cannot overflow
          |   | `-ImplicitCastExpr 0x14c02e088 <col:27> 'unsigned int *' <LValueToRValue>
          |   |   `-DeclRefExpr 0x14c02dfa0 <col:27> 'unsigned int *' lvalue ParmVar 0x14c0266d8 'blk' 'unsigned int *'
          |   `-RecoveryExpr 0x14c02e0b8 <col:34> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x14c02e330 <col:46, line:32:3>
          | `-BinaryOperator 0x14c02e310 <line:31:4, col:11> 'unsigned int' '='
          |   |-UnaryOperator 0x14c02e2c0 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
          |   | `-ImplicitCastExpr 0x14c02e2a8 <col:5> 'unsigned int *' <LValueToRValue>
          |   |   `-DeclRefExpr 0x14c02e288 <col:5> 'unsigned int *' lvalue ParmVar 0x14c0266d8 'blk' 'unsigned int *'
          |   `-ImplicitCastExpr 0x14c02e2f8 <col:11> 'unsigned int' <IntegralCast>
          |     `-IntegerLiteral 0x14c02e2d8 <col:11> 'int' 0
          `-CompoundStmt 0x14c02e4b8 <line:32:10, line:34:3>
