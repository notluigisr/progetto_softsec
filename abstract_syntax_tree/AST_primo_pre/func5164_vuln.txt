`-FunctionDecl 0x1340311e8  line:1:14 invalid EvalQuantized 'int (int *, int *, int *, int *, const int *, const int *, const int *, int *)'
  |-ParmVarDecl 0x134030d28 <col:28, col:43> col:43 referenced invalid context 'int *'
  |-ParmVarDecl 0x134030da8 <col:52, col:64> col:64 invalid node 'int *'
  |-ParmVarDecl 0x134030e28 <line:2:28, col:56> col:56 invalid params 'int *'
  |-ParmVarDecl 0x134030ea8 <col:64, col:72> col:72 invalid data 'int *'
  |-ParmVarDecl 0x134030f28 <line:3:28, col:48> col:48 invalid input 'const int *'
  |-ParmVarDecl 0x134030fa8 <line:4:28, col:48> col:48 invalid filter 'const int *'
  |-ParmVarDecl 0x134031028 <col:56, col:76> col:76 invalid bias 'const int *'
  |-ParmVarDecl 0x1340310a8 <line:5:28, col:42> col:42 invalid output 'int *'
  `-CompoundStmt 0x13300c740 <col:50, line:79:1>
    `-IfStmt 0x13300c710 <line:10:3, line:76:3> has_else
      |-BinaryOperator 0x134031390 <line:10:7, col:22> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x1340312f0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
      | | `-RecoveryExpr 0x1340312d0 <col:7> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x134031370 <col:22> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1348f4b28 <col:38, line:19:3>
      `-CompoundStmt 0x13300c6f8 <col:10, line:76:3>
        `-SwitchStmt 0x1348f4f08 <line:30:5, line:75:5>
          |-ImplicitCastExpr 0x1348f4ef0 <line:30:13, col:21> '<dependent type>' contains-errors <LValueToRValue>
          | `-CXXDependentScopeMemberExpr 0x1348f4ea8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->type
          |   `-RecoveryExpr 0x1348f4e88 <col:13> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x13300c6b8 <col:27, line:75:5>
            |-IfStmt 0x1348f4f70 <line:32:9, line:45:9> has_else
            | |-RecoveryExpr 0x1348f4f30 <line:32:13, col:28> '_Bool' contains-errors
            | |-CompoundStmt 0x1348f4f50 <col:40, line:38:9>
            | `-CompoundStmt 0x1348f4f60 <col:16, line:45:9>
            |-BreakStmt 0x1348f4fa0 <line:46:9>
            |-BreakStmt 0x1348f50c8 <line:51:9>
            |-IfStmt 0x1348f5318 <line:53:9, line:68:9> has_else
            | |-RecoveryExpr 0x1348f5138 <line:53:13, col:28> '_Bool' contains-errors
            | |-CompoundStmt 0x1348f5298 <col:42, line:55:9>
            | `-IfStmt 0x1348f52e8 <col:16, line:68:9> has_else
            |   |-RecoveryExpr 0x1348f52a8 <line:55:20, col:35> '_Bool' contains-errors
            |   |-CompoundStmt 0x1348f52c8 <col:47, line:61:9>
            |   `-CompoundStmt 0x1348f52d8 <col:16, line:68:9>
            |-BreakStmt 0x1348f5348 <line:69:9>
            `-DefaultStmt 0x13300c698 <line:70:7, line:73:35>
              `-CallExpr 0x13300c668 <line:71:9, line:73:35> '<dependent type>' contains-errors
                |-CXXDependentScopeMemberExpr 0x1348f5398 <line:71:9, col:18> '<dependent type>' contains-errors lvalue ->ReportError
                | `-RecoveryExpr 0x1348f5370 <col:9> '<dependent type>' contains-errors lvalue
                |   `-DeclRefExpr 0x1348f5350 <col:9> 'int *' lvalue ParmVar 0x134030d28 'context' 'int *'
                |-RecoveryExpr 0x1348f53e0 <col:30> '<dependent type>' contains-errors lvalue
                `-StringLiteral 0x13300c640 <line:72:30, line:73:30> 'char[7]' lvalue "STRSTR"
