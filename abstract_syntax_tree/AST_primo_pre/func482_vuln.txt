`-FunctionDecl 0x1589281a8  line:1:7 ipc_rcu_alloc 'void *(int)'
  |-ParmVarDecl 0x1589280d8 <col:21, col:25> col:25 used size 'int'
  `-CompoundStmt 0x158941fe8 <line:2:1, line:22:1>
    |-DeclStmt 0x158928320 <line:3:2, col:11>
    | `-VarDecl 0x1589282b8 <col:2, col:8> col:8 used out 'void *'
    |-IfStmt 0x158941f70 <line:5:2, line:19:2> has_else
    | |-CallExpr 0x1589284e8 <line:5:6, col:26> 'int'
    | | |-ImplicitCastExpr 0x1589284d0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x158928460 <col:6> 'int ()' Function 0x1589283a8 'rcu_use_vmalloc' 'int ()'
    | | `-ImplicitCastExpr 0x158928510 <col:22> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x158928480 <col:22> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'
    | |-CompoundStmt 0x158941a88 <col:29, line:12:2>
    | | |-BinaryOperator 0x158928750 <line:6:3, col:38> 'void *' contains-errors '='
    | | | |-DeclRefExpr 0x158928528 <col:3> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    | | | `-CallExpr 0x158928728 <col:9, col:38> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x158928628 <col:9> 'int ()' Function 0x158928570 'vmalloc' 'int ()'
    | | |   `-BinaryOperator 0x158928708 <col:17, col:34> '<dependent type>' contains-errors '+'
    | | |     |-RecoveryExpr 0x1589286e8 <col:17> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x158928660 <col:34> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'
    | | `-IfStmt 0x158941a68 <line:7:3, line:11:3>
    | |   |-ImplicitCastExpr 0x158928790 <line:7:7> 'void *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x158928770 <col:7> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    | |   `-CompoundStmt 0x158941a50 <col:12, line:11:3>
    | |     `-CompoundAssignOperator 0x158941850 <line:8:4, col:11> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |       |-DeclRefExpr 0x1589287a8 <col:4> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    | |       `-RecoveryExpr 0x158941830 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x158941f50 <line:12:9, line:19:2>
    |   |-BinaryOperator 0x158941d18 <line:13:3, col:50> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x158941aa8 <col:3> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    |   | `-CallExpr 0x158941ce8 <col:9, col:50> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x158941ba8 <col:9> 'int ()' Function 0x158941af0 'kmalloc' 'int ()'
    |   |   |-BinaryOperator 0x158941ca8 <col:17, col:34> '<dependent type>' contains-errors '+'
    |   |   | |-RecoveryExpr 0x158941c88 <col:17> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x158941be0 <col:34> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'
    |   |   `-RecoveryExpr 0x158941cc8 <col:40> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x158941f30 <line:14:3, line:18:3>
    |     |-ImplicitCastExpr 0x158941d58 <line:14:7> 'void *' <LValueToRValue>
    |     | `-DeclRefExpr 0x158941d38 <col:7> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    |     `-CompoundStmt 0x158941f18 <col:12, line:18:3>
    |       `-CompoundAssignOperator 0x158941df8 <line:15:4, col:11> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |         |-DeclRefExpr 0x158941d70 <col:4> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
    |         `-RecoveryExpr 0x158941dd8 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x158941fd8 <line:21:2, col:9>
      `-ImplicitCastExpr 0x158941fc0 <col:9> 'void *' <LValueToRValue>
        `-DeclRefExpr 0x158941fa0 <col:9> 'void *' lvalue Var 0x1589282b8 'out' 'void *'
