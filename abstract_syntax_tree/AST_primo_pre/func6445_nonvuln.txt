`-FunctionDecl 0x157128328  line:1:1 invalid is_mbc_ambiguous 'int (int, const int **, const int *)'
  |-ParmVarDecl 0x1571280f0 <col:18, col:35> col:35 invalid flag 'int'
  |-ParmVarDecl 0x1571281b0 <col:41, col:55> col:55 invalid pp 'const int **'
  |-ParmVarDecl 0x157128230 <col:59, col:72> col:72 invalid end 'const int *'
  `-CompoundStmt 0x157809338 <line:2:1, line:32:1>
    |-DeclStmt 0x1571284b8 <line:3:3, col:23>
    | `-VarDecl 0x157128400 <col:3, col:16> col:16 invalid p 'const int *'
    `-IfStmt 0x157809308 <line:5:3, line:29:3> has_else
      |-CallExpr 0x157128670 <line:5:7, col:29> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x157128630 <col:7> 'int ()' Function 0x157128578 'ONIGENC_IS_MBC_ASCII' 'int ()'
      | `-RecoveryExpr 0x157128650 <col:28> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1578088a8 <col:32, line:8:3>
      | |-UnaryOperator 0x157128708 <line:6:5, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow
      | | `-ParenExpr 0x1571286e8 <col:5, col:9> '<dependent type>' contains-errors
      | |   `-UnaryOperator 0x1571286d0 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
      | |     `-ImplicitCastExpr 0x1571286b8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      | |       `-RecoveryExpr 0x157128698 <col:7> '<dependent type>' contains-errors lvalue
      | `-ReturnStmt 0x157808898 <line:7:5, col:47>
      |   `-CallExpr 0x157808870 <col:12, col:47> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x157808800 <col:12> 'int ()' Function 0x157128748 'ONIGENC_IS_ASCII_CODE_CASE_AMBIG' 'int ()'
      |     `-UnaryOperator 0x157808858 <col:45, col:46> '<dependent type>' contains-errors prefix '*' cannot overflow
      |       `-ImplicitCastExpr 0x157808840 <col:46> '<dependent type>' contains-errors <LValueToRValue>
      |         `-RecoveryExpr 0x157808820 <col:46> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1578092e8 <line:9:8, line:29:3>
        |-CompoundAssignOperator 0x157808bc0 <line:10:5, col:42> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-ParenExpr 0x157808b50 <col:5, col:9> '<dependent type>' contains-errors
        | | `-UnaryOperator 0x157808b38 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
        | |   `-ImplicitCastExpr 0x157808b20 <col:7> '<dependent type>' contains-errors <LValueToRValue>
        | |     `-RecoveryExpr 0x1578088c8 <col:7> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x157808b90 <col:14, col:42> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x157808a18 <col:14> 'int ()' Function 0x157808960 'enclen' 'int ()'
        |   |-RecoveryExpr 0x157808b70 <col:21> '<dependent type>' contains-errors lvalue
        |   `-RecoveryExpr 0x157808a50 <col:41> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x1578092c8 <line:12:5, line:28:5>
          |-BinaryOperator 0x157808c60 <line:12:9, col:15> 'int' contains-errors '=='
          | |-UnaryOperator 0x157808c28 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
          | | `-ImplicitCastExpr 0x157808c10 <col:10> '<dependent type>' contains-errors <LValueToRValue>
          | |   `-RecoveryExpr 0x157808bf0 <col:10> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x157808c40 <col:15> 'int' 195
          `-CompoundStmt 0x1578092a8 <col:21, line:28:5>
            |-DeclStmt 0x157808d98 <line:13:7, col:23>
            | `-VarDecl 0x157808c98 <col:7, col:22> col:11 used c 'int' cinit
            |   `-UnaryOperator 0x157808d80 <col:15, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow
            |     `-ParenExpr 0x157808d60 <col:16, col:22> '<dependent type>' contains-errors
            |       `-BinaryOperator 0x157808d40 <col:17, col:21> '<dependent type>' contains-errors '+'
            |         |-RecoveryExpr 0x157808d00 <col:17> '<dependent type>' contains-errors lvalue
            |         `-IntegerLiteral 0x157808d20 <col:21> 'int' 1
            `-IfStmt 0x157809288 <line:14:7, line:27:7>
              |-BinaryOperator 0x157808e08 <line:14:11, col:16> 'int' contains-errors '>='
              | |-ImplicitCastExpr 0x157808df0 <col:11> 'int' contains-errors <LValueToRValue>
              | | `-DeclRefExpr 0x157808db0 <col:11> 'int' contains-errors lvalue Var 0x157808c98 'c' 'int'
              | `-IntegerLiteral 0x157808dd0 <col:16> 'int' 128
              `-CompoundStmt 0x157809270 <col:22, line:27:7>
                `-IfStmt 0x157809240 <line:15:2, line:26:9> has_else
                  |-RecoveryExpr 0x157808ec0 <line:15:6, col:18> '<dependent type>' contains-errors lvalue
                  | |-DeclRefExpr 0x157808e28 <col:6> 'int' contains-errors lvalue Var 0x157808c98 'c' 'int'
                  | `-ParenExpr 0x157808ea0 <col:11, col:18> '<overloaded function type>' lvalue
                  |   `-UnresolvedLookupExpr 0x157808e60 <col:12> '<overloaded function type>' lvalue (no ADL) = 'UChar' empty
                  |-CompoundStmt 0x157809068 <col:25, line:18:2>
                  | |-IfStmt 0x157809000 <line:16:4, col:34>
                  | | |-RecoveryExpr 0x157808f88 <col:8, col:20> '<dependent type>' contains-errors lvalue
                  | | | |-DeclRefExpr 0x157808ef0 <col:8> 'int' contains-errors lvalue Var 0x157808c98 'c' 'int'
                  | | | `-ParenExpr 0x157808f68 <col:13, col:20> '<overloaded function type>' lvalue
                  | | |   `-UnresolvedLookupExpr 0x157808f28 <col:14> '<overloaded function type>' lvalue (no ADL) = 'UChar' empty
                  | | `-ReturnStmt 0x157808ff0 <col:27, col:34>
                  | |   `-RecoveryExpr 0x157808fd0 <col:34> '<dependent type>' contains-errors lvalue
                  | `-ReturnStmt 0x157809058 <line:17:4, col:11>
                  |   `-RecoveryExpr 0x157809038 <col:11> '<dependent type>' contains-errors lvalue
                  `-IfStmt 0x157809210 <line:19:7, line:26:9> has_else
                    |-RecoveryExpr 0x157809120 <line:19:11, col:23> '<dependent type>' contains-errors lvalue
                    | |-DeclRefExpr 0x157809088 <col:11> 'int' contains-errors lvalue Var 0x157808c98 'c' 'int'
                    | `-ParenExpr 0x157809100 <col:16, col:23> '<overloaded function type>' lvalue
                    |   `-UnresolvedLookupExpr 0x1578090c0 <col:17> '<overloaded function type>' lvalue (no ADL) = 'UChar' empty
                    |-CompoundStmt 0x157809190 <col:51, line:22:2>
                    `-IfStmt 0x1578091f0 <line:23:14, line:26:9>
                      |-RecoveryExpr 0x1578091c0 <line:23:18, line:24:68> '_Bool' contains-errors
                      `-CompoundStmt 0x1578091e0 <col:71, line:26:9>
