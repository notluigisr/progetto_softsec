`-FunctionDecl 0x12a928288  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x12a928128 <col:22, col:37> col:37 referenced invalid context 'int *'
  |-ParmVarDecl 0x12a9281a8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x12a943a68 <col:64, line:35:1>
    |-CallExpr 0x12a928648 <line:2:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a9284a0 <col:3> 'int ()' Function 0x12a9283e8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12a9284c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12a928600 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a9285c0 <col:30> 'int ()' Function 0x12a928508 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x12a9285e0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a928628 <col:47> 'int' 3
    |-CallExpr 0x12a941848 <line:3:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a928680 <col:3> 'int ()' Function 0x12a9283e8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12a9286a0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12a941800 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a9287a0 <col:30> 'int ()' Function 0x12a9286e8 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x12a9287c0 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a941828 <col:48> 'int' 1
    |-DeclStmt 0x12a941a90 <line:5:3, col:68>
    | `-VarDecl 0x12a941898 <col:3, col:23> col:23 invalid start 'const int *'
    |-DeclStmt 0x12a941bd8 <line:6:3, col:68>
    | `-VarDecl 0x12a941ac0 <col:3, col:23> col:23 invalid limit 'const int *'
    |-DeclStmt 0x12a941d20 <line:7:3, col:68>
    | `-VarDecl 0x12a941c08 <col:3, col:23> col:23 invalid delta 'const int *'
    |-CallExpr 0x12a941ee0 <line:9:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a941d38 <col:3> 'int ()' Function 0x12a9283e8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12a941d58 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12a941e98 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a941e58 <col:30> 'int ()' Function 0x12a941da0 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x12a941e78 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a941ec0 <col:52> 'int' 0
    |-CallExpr 0x12a941fe0 <line:10:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a941f18 <col:3> 'int ()' Function 0x12a9283e8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12a941f38 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12a941f98 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a941f58 <col:30> 'int ()' Function 0x12a941da0 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x12a941f78 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a941fc0 <col:52> 'int' 0
    |-CallExpr 0x12a9420e0 <line:11:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a942018 <col:3> 'int ()' Function 0x12a9283e8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x12a942038 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x12a942098 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a942058 <col:30> 'int ()' Function 0x12a941da0 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x12a942078 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12a9420c0 <col:52> 'int' 0
    |-DeclStmt 0x12a942200 <line:15:3, col:33>
    | `-VarDecl 0x12a942130 <col:3, col:29> col:14 used dtype 'const int' auto cinit
    |   `-CXXDependentScopeMemberExpr 0x12a9421b8 <col:22, col:29> '<dependent type>' contains-errors lvalue ->type
    |     `-RecoveryExpr 0x12a942198 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a9426e8 <line:16:3, line:20:3>
    | |-BinaryOperator 0x12a942368 <line:16:7, col:43> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12a942308 <col:7, col:16> 'int' contains-errors '!='
    | | | |-DeclRefExpr 0x12a942218 <col:7> 'const int' contains-errors lvalue Var 0x12a942130 'dtype' 'const int'
    | | | `-RecoveryExpr 0x12a9422e8 <col:16> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12a942348 <col:34, col:43> 'int' contains-errors '!='
    | |   |-DeclRefExpr 0x12a942270 <col:34> 'const int' contains-errors lvalue Var 0x12a942130 'dtype' 'const int'
    | |   `-RecoveryExpr 0x12a942328 <col:43> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a9426c8 <col:57, line:20:3>
    |   |-CallExpr 0x12a942648 <line:17:5, line:18:50> '<dependent type>' contains-errors
    |   | |-CXXDependentScopeMemberExpr 0x12a9423d0 <line:17:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |   | | `-RecoveryExpr 0x12a9423a8 <col:5> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12a942388 <col:5> 'int *' lvalue ParmVar 0x12a928128 'context' 'int *'
    |   | |-RecoveryExpr 0x12a942418 <col:26> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x12a942480 <col:35> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x12a942608 <line:18:26, col:49> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x12a9425f0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12a942580 <col:26> 'int ()' Function 0x12a9424c8 'TfLiteTypeGetName' 'int ()'
    |   |   `-ImplicitCastExpr 0x12a942630 <col:44> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x12a9425a0 <col:44> 'const int' contains-errors lvalue Var 0x12a942130 'dtype' 'const int'
    |   `-ReturnStmt 0x12a9426b8 <line:19:5, col:12>
    |     `-RecoveryExpr 0x12a942698 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12a9432c8 <line:22:3, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a943200 <col:3> 'int ()' Function 0x12a942730 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
    | |-RecoveryExpr 0x12a943220 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x12a943260 <col:36, col:43> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x12a943240 <col:36> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12a9432a8 <col:49> 'const int' contains-errors lvalue Var 0x12a942130 'dtype' 'const int'
    |-CallExpr 0x12a9433c8 <line:23:3, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a943300 <col:3> 'int ()' Function 0x12a942730 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
    | |-RecoveryExpr 0x12a943320 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x12a943360 <col:36, col:43> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x12a943340 <col:36> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12a9433a8 <col:49> 'const int' contains-errors lvalue Var 0x12a942130 'dtype' 'const int'
    `-IfStmt 0x12a943948 <line:28:3, line:31:3>
      |-BinaryOperator 0x12a943798 <line:28:7, line:29:29> 'int' contains-errors '&&'
      | |-BinaryOperator 0x12a943710 <line:28:7, col:56> 'int' contains-errors '&&'
      | | |-CallExpr 0x12a943680 <col:7, col:29> '<dependent type>' contains-errors
      | | | |-DeclRefExpr 0x12a943640 <col:7> 'int ()' Function 0x12a943588 'IsConstantTensor' 'int ()'
      | | | `-RecoveryExpr 0x12a943660 <col:24> '<dependent type>' contains-errors lvalue
      | | `-CallExpr 0x12a9436e8 <col:34, col:56> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x12a9436a8 <col:34> 'int ()' Function 0x12a943588 'IsConstantTensor' 'int ()'
      | |   `-RecoveryExpr 0x12a9436c8 <col:51> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x12a943770 <line:29:7, col:29> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x12a943730 <col:7> 'int ()' Function 0x12a943588 'IsConstantTensor' 'int ()'
      |   `-RecoveryExpr 0x12a943750 <col:24> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12a943938 <col:32, line:31:3>
