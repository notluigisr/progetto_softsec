`-FunctionDecl 0x1270303c8  line:1:1 check_vim9_unlet 'int (char *)'
  |-ParmVarDecl 0x1270302f0 <col:18, col:26> col:26 used name 'char *'
  `-CompoundStmt 0x12704ca30 <line:2:1, line:12:1>
    |-IfStmt 0x12704c9c8 <line:3:5, line:10:5>
    | |-RecoveryExpr 0x127030750 <line:3:9, col:65> '_Bool' contains-errors
    | `-CompoundStmt 0x12704c9a0 <line:4:5, line:10:5>
    |   |-IfStmt 0x12704c630 <line:6:2, line:7:13>
    |   | |-BinaryOperator 0x1270309b0 <line:6:6, col:38> 'int' '&&'
    |   | | |-BinaryOperator 0x127030808 <col:6, col:15> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x1270307f0 <col:6, col:7> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x1270307d8 <col:6, col:7> 'char' <LValueToRValue>
    |   | | | |   `-UnaryOperator 0x1270307a8 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | | |     `-ImplicitCastExpr 0x127030790 <col:7> 'char *' <LValueToRValue>
    |   | | | |       `-DeclRefExpr 0x127030770 <col:7> 'char *' lvalue ParmVar 0x1270302f0 'name' 'char *'
    |   | | | `-CharacterLiteral 0x1270307c0 <col:15> 'int' 115
    |   | | `-UnaryOperator 0x127030998 <col:22, col:38> 'int' prefix '!' cannot overflow
    |   | |   `-CallExpr 0x127030978 <col:23, col:38> 'int'
    |   | |     `-ImplicitCastExpr 0x127030960 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   | |       `-DeclRefExpr 0x127030908 <col:23> 'int ()' Function 0x127030850 'script_is_vim9' 'int ()'
    |   | `-ReturnStmt 0x12704c620 <line:7:6, col:13>
    |   |   `-RecoveryExpr 0x12704c600 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x12704c928 <line:8:2, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12704c730 <col:2> 'int ()' Function 0x12704c678 'semsg' 'int ()'
    |   | |-CallExpr 0x12704c900 <col:8, col:28> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12704c830 <col:8> 'int ()' Function 0x12704c778 '_' 'int ()'
    |   | | `-RecoveryExpr 0x12704c8e0 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12704c890 <col:31> 'char *' lvalue ParmVar 0x1270302f0 'name' 'char *'
    |   `-ReturnStmt 0x12704c990 <line:9:2, col:9>
    |     `-RecoveryExpr 0x12704c970 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12704ca20 <line:11:5, col:12>
      `-RecoveryExpr 0x12704ca00 <col:12> '<dependent type>' contains-errors lvalue
