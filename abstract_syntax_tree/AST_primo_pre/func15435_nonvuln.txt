`-FunctionDecl 0x130928288  line:1:12 invalid bmp_getint16 'int (int *, int *)' static
  |-ParmVarDecl 0x130928128 <col:25, col:39> col:39 invalid in 'int *'
  |-ParmVarDecl 0x1309281a8 <col:43, col:57> col:57 invalid val 'int *'
  `-CompoundStmt 0x130941f08 <line:2:1, line:12:1>
    |-DeclStmt 0x1309283c0 <line:3:2, col:8>
    | `-VarDecl 0x130928358 <col:2, col:6> col:6 used lo 'int'
    |-DeclStmt 0x130928458 <line:4:2, col:8>
    | `-VarDecl 0x1309283f0 <col:2, col:6> col:6 used hi 'int'
    |-IfStmt 0x130941d00 <line:5:2, line:7:2>
    | |-BinaryOperator 0x130941c80 <line:5:6, col:73> 'int' contains-errors '||'
    | | |-BinaryOperator 0x130941c20 <col:6, col:36> 'int' contains-errors '=='
    | | | |-ParenExpr 0x130928678 <col:6, col:31> 'int' contains-errors
    | | | | `-BinaryOperator 0x130928658 <col:7, col:30> 'int' contains-errors '='
    | | | |   |-DeclRefExpr 0x130928470 <col:7> 'int' lvalue Var 0x130928358 'lo' 'int'
    | | | |   `-CallExpr 0x130928630 <col:12, col:30> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x1309285f0 <col:12> 'int ()' Function 0x130928538 'jas_stream_getc' 'int ()'
    | | | |     `-RecoveryExpr 0x130928610 <col:28> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x130941c00 <col:36> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x130941c60 <col:43, col:73> 'int' contains-errors '=='
    | |   |-ParenExpr 0x130928778 <col:43, col:68> 'int' contains-errors
    | |   | `-BinaryOperator 0x130928758 <col:44, col:67> 'int' contains-errors '='
    | |   |   |-DeclRefExpr 0x1309286d0 <col:44> 'int' lvalue Var 0x1309283f0 'hi' 'int'
    | |   |   `-CallExpr 0x130928730 <col:49, col:67> '<dependent type>' contains-errors
    | |   |     |-DeclRefExpr 0x1309286f0 <col:49> 'int ()' Function 0x130928538 'jas_stream_getc' 'int ()'
    | |   |     `-RecoveryExpr 0x130928710 <col:65> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x130941c40 <col:73> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x130941ce8 <col:78, line:7:2>
    |   `-ReturnStmt 0x130941cd8 <line:6:3, col:11>
    |     `-UnaryOperator 0x130941cc0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x130941ca0 <col:11> 'int' 1
    |-IfStmt 0x130941eb8 <line:8:2, line:10:2>
    | |-RecoveryExpr 0x130941d20 <line:8:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x130941ea0 <col:11, line:10:2>
    |   `-BinaryOperator 0x130941e80 <line:9:3, col:22> '<dependent type>' contains-errors '='
    |     |-UnaryOperator 0x130941d78 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x130941d60 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x130941d40 <col:4> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x130941e60 <col:10, col:22> 'int' '|'
    |       |-ParenExpr 0x130941e08 <col:10, col:18> 'int'
    |       | `-BinaryOperator 0x130941de8 <col:11, col:17> 'int' '<<'
    |       |   |-ImplicitCastExpr 0x130941dd0 <col:11> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x130941d90 <col:11> 'int' lvalue Var 0x1309283f0 'hi' 'int'
    |       |   `-IntegerLiteral 0x130941db0 <col:17> 'int' 8
    |       `-ImplicitCastExpr 0x130941e48 <col:22> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x130941e28 <col:22> 'int' lvalue Var 0x130928358 'lo' 'int'
    `-ReturnStmt 0x130941ef8 <line:11:2, col:9>
      `-IntegerLiteral 0x130941ed8 <col:9> 'int' 0
