`-FunctionDecl 0x12680dda8  line:1:5 csum_len_for_type 'int (int)'
  |-ParmVarDecl 0x12680dcd8 <col:23, col:27> col:27 used cst 'int'
  `-CompoundStmt 0x12680e0f8 <line:2:1, line:16:1>
    |-SwitchStmt 0x12680ded8 <line:3:2, line:14:2>
    | |-ImplicitCastExpr 0x12680dec0 <line:3:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12680dea0 <col:10> 'int' lvalue ParmVar 0x12680dcd8 'cst' 'int'
    | `-CompoundStmt 0x12680e098 <col:15, line:14:2>
    |   |-ReturnStmt 0x12680df50 <line:5:3, col:10>
    |   | `-IntegerLiteral 0x12680df30 <col:10> 'int' 1
    |   |-ReturnStmt 0x12680df98 <line:7:3, col:10>
    |   | `-IntegerLiteral 0x12680df78 <col:10> 'int' 2
    |   |-ReturnStmt 0x12680e028 <line:11:3, col:10>
    |   | `-RecoveryExpr 0x12680e008 <col:10> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12680e088 <line:13:3, col:10>
    |     `-RecoveryExpr 0x12680e068 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12680e0e8 <line:15:2, col:9>
      `-IntegerLiteral 0x12680e0c8 <col:9> 'int' 0
