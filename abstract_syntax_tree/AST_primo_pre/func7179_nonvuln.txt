`-FunctionDecl 0x15700ddf0  line:1:6 invalid pdu_submit 'void (int *)'
  |-ParmVarDecl 0x15700dd28 <col:17, col:26> col:26 invalid pdu 'int *'
  `-CompoundStmt 0x157027f80 <line:2:1, line:19:1>
    |-IfStmt 0x15700e300 <line:7:5, line:12:5> has_else
    | |-RecoveryExpr 0x15700e228 <line:7:9, line:8:42> '_Bool' contains-errors
    | |-CompoundStmt 0x15700e260 <col:45, line:10:5>
    | `-CompoundStmt 0x15700e2f0 <col:12, line:12:5>
    `-IfStmt 0x157027d40 <line:14:5, line:16:5>
      |-BinaryOperator 0x157027cf8 <line:14:9, col:54> 'int' contains-errors '&&'
      | |-CallExpr 0x157027cd0 <col:9, col:29> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x157027a10 <col:9> 'int ()' Function 0x15700e358 'is_ro_export' 'int ()'
      | | `-UnaryOperator 0x157027cb8 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
      | |   `-CXXDependentScopeMemberExpr 0x157027c70 <col:23, col:26> '<dependent type>' contains-errors lvalue ->ctx
      | |     `-RecoveryExpr 0x157027c50 <col:23> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x157027c18 <col:34, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-CallExpr 0x157027bf0 <col:35, col:54> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x157027bb0 <col:35> 'int ()' Function 0x157027af8 'is_read_only_op' 'int ()'
      |     `-RecoveryExpr 0x157027bd0 <col:51> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x157027d30 <col:57, line:16:5>
