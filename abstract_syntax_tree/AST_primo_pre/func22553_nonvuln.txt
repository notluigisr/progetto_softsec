`-FunctionDecl 0x13f1289a8  line:1:1 START_TEST 'int (int)'
  |-ParmVarDecl 0x13f1288d8 <col:12> col:12 SecureChannel_assemblePartialChunks 'int'
  `-CompoundStmt 0x13f141d90 <col:49, line:48:1>
    |-DeclStmt 0x13f128b40 <line:2:5, col:29>
    | `-VarDecl 0x13f128ab8 <col:5, col:28> col:9 used chunks_processed 'int' cinit
    |   `-IntegerLiteral 0x13f128b20 <col:28> 'int' 0
    |-CallExpr 0x13f128e20 <line:10:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f128cc0 <col:5> 'int ()' Function 0x13f128c08 'ck_assert_msg' 'int ()'
    | |-BinaryOperator 0x13f128e00 <col:19, col:29> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13f128dc0 <col:19> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f128de0 <col:29> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x13f128d70 <col:49> 'char[4]' lvalue "STR"
    |-CallExpr 0x13f141200 <line:11:5, col:41> 'int'
    | |-ImplicitCastExpr 0x13f128fc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f128f30 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
    | |-ImplicitCastExpr 0x13f141230 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f128f50 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | `-IntegerLiteral 0x13f128f70 <col:40> 'int' 1
    |-CallExpr 0x13f141520 <line:15:5, col:94> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f141348 <col:5> 'int ()' Function 0x13f141290 'UA_SecureChannel_processBuffer' 'int ()'
    | |-UnaryOperator 0x13f1414b0 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x13f141490 <col:37> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13f1413f0 <col:50, col:51> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x13f141398 <col:51> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | |-RecoveryExpr 0x13f1414c8 <col:69> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13f141508 <col:87, col:88> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13f1414e8 <col:88> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13f141680 <line:16:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13f141560 <col:5> 'int ()' Function 0x13f128c08 'ck_assert_msg' 'int ()'
    | |-BinaryOperator 0x13f141660 <col:19, col:29> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13f141620 <col:19> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f141640 <col:29> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x13f1415d0 <col:49> 'char[4]' lvalue "STR"
    |-CallExpr 0x13f141728 <line:17:5, col:41> 'int'
    | |-ImplicitCastExpr 0x13f141710 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f1416b0 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
    | |-ImplicitCastExpr 0x13f141758 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f1416d0 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | `-IntegerLiteral 0x13f1416f0 <col:40> 'int' 1
    |-CallExpr 0x13f1418a0 <line:22:5, col:41> 'int'
    | |-ImplicitCastExpr 0x13f141888 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f141828 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
    | |-ImplicitCastExpr 0x13f1418d0 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f141848 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | `-IntegerLiteral 0x13f141868 <col:40> 'int' 2
    |-CallExpr 0x13f141a18 <line:34:5, col:41> 'int'
    | |-ImplicitCastExpr 0x13f141a00 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f1419a0 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
    | |-ImplicitCastExpr 0x13f141a48 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f1419c0 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | `-IntegerLiteral 0x13f1419e0 <col:40> 'int' 3
    |-CallExpr 0x13f141bb0 <line:41:5, col:41> 'int'
    | |-ImplicitCastExpr 0x13f141b98 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f141b38 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
    | |-ImplicitCastExpr 0x13f141be0 <col:22> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13f141b58 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
    | `-IntegerLiteral 0x13f141b78 <col:40> 'int' 4
    `-CallExpr 0x13f141d48 <line:47:5, col:41> 'int'
      |-ImplicitCastExpr 0x13f141d30 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13f141cd0 <col:5> 'int ()' Function 0x13f128e78 'ck_assert_int_eq' 'int ()'
      |-ImplicitCastExpr 0x13f141d78 <col:22> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x13f141cf0 <col:22> 'int' lvalue Var 0x13f128ab8 'chunks_processed' 'int'
      `-IntegerLiteral 0x13f141d10 <col:40> 'int' 5
