`-FunctionDecl 0x14300de88  line:1:5 invalid jas_stream_gobble 'int (int *, int)'
  |-ParmVarDecl 0x14300dd28 <col:23, col:37> col:37 invalid stream 'int *'
  |-ParmVarDecl 0x14300dda8 <col:45, col:49> col:49 used n 'int'
  `-CompoundStmt 0x143027b30 <line:2:1, line:11:1>
    |-DeclStmt 0x14300dfc0 <line:3:2, col:7>
    | `-VarDecl 0x14300df58 <col:2, col:6> col:6 used m 'int'
    |-BinaryOperator 0x14300e030 <line:4:2, col:6> 'int' '='
    | |-DeclRefExpr 0x14300dfd8 <col:2> 'int' lvalue Var 0x14300df58 'm' 'int'
    | `-ImplicitCastExpr 0x14300e018 <col:6> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x14300dff8 <col:6> 'int' lvalue ParmVar 0x14300dda8 'n' 'int'
    |-ForStmt 0x143027ab0 <line:5:2, line:9:2>
    | |-BinaryOperator 0x14300e0a8 <line:5:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x14300e050 <col:7> 'int' lvalue Var 0x14300df58 'm' 'int'
    | | `-ImplicitCastExpr 0x14300e090 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14300e070 <col:11> 'int' lvalue ParmVar 0x14300dda8 'n' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14300e120 <col:14, col:18> 'int' '>'
    | | |-ImplicitCastExpr 0x14300e108 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14300e0c8 <col:14> 'int' lvalue Var 0x14300df58 'm' 'int'
    | | `-IntegerLiteral 0x14300e0e8 <col:18> 'int' 0
    | |-UnaryOperator 0x14300e160 <col:21, col:23> 'int' prefix '--'
    | | `-DeclRefExpr 0x14300e140 <col:23> 'int' lvalue Var 0x14300df58 'm' 'int'
    | `-CompoundStmt 0x143027a98 <col:26, line:9:2>
    |   `-IfStmt 0x143027a78 <line:6:3, line:8:3>
    |     |-BinaryOperator 0x14300e390 <line:6:7, col:34> 'int' contains-errors '=='
    |     | |-CallExpr 0x14300e310 <col:7, col:29> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14300e2d0 <col:7> 'int ()' Function 0x14300e218 'jas_stream_getc' 'int ()'
    |     | | `-RecoveryExpr 0x14300e2f0 <col:23> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x14300e370 <col:34> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x143027a60 <col:39, line:8:3>
    |       `-ReturnStmt 0x143027a50 <line:7:4, col:15>
    |         `-BinaryOperator 0x143027a30 <col:11, col:15> 'int' '-'
    |           |-ImplicitCastExpr 0x143027a00 <col:11> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x14300e3b0 <col:11> 'int' lvalue ParmVar 0x14300dda8 'n' 'int'
    |           `-ImplicitCastExpr 0x143027a18 <col:15> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x14300e3d0 <col:15> 'int' lvalue Var 0x14300df58 'm' 'int'
    `-ReturnStmt 0x143027b20 <line:10:2, col:9>
      `-ImplicitCastExpr 0x143027b08 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x143027ae8 <col:9> 'int' lvalue ParmVar 0x14300dda8 'n' 'int'
