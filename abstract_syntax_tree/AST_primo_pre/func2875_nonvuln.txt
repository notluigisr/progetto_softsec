`-FunctionDecl 0x15180dd10  line:1:13 PrintFlush 'void ()' static
  `-CompoundStmt 0x15182a3d8 <line:2:1, line:26:1>
    `-IfStmt 0x15182a3a8 <line:4:2, line:24:2> has_else
      |-BinaryOperator 0x15180df08 <line:4:6, col:17> 'int' contains-errors '&&'
      | |-RecoveryExpr 0x15180dec8 <col:6> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x15180dee8 <col:17> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x151828910 <col:27, line:19:2>
      | |-DeclStmt 0x15180e070 <line:5:3, col:28>
      | | `-VarDecl 0x15180df40 <col:3, col:20> col:9 used bp 'char *' cinit
      | |   `-CXXDependentScopeMemberExpr 0x15180e028 <col:14, col:20> '<dependent type>' contains-errors lvalue ->w_string
      | |     `-RecoveryExpr 0x15180e008 <col:14> '<dependent type>' contains-errors lvalue
      | |-DeclStmt 0x15180e2d8 <line:6:3, col:45>
      | | `-VarDecl 0x15180e0a0 <col:3, col:37> col:7 used len 'int' cinit
      | |   `-BinaryOperator 0x15180e2b8 <col:13, col:37> '<dependent type>' contains-errors '-'
      | |     |-CXXDependentScopeMemberExpr 0x15180e208 <col:13, col:19> '<dependent type>' contains-errors lvalue ->w_stringp
      | |     | `-RecoveryExpr 0x15180e1e8 <col:13> '<dependent type>' contains-errors lvalue
      | |     `-CXXDependentScopeMemberExpr 0x15180e270 <col:31, col:37> '<dependent type>' contains-errors lvalue ->w_string
      | |       `-RecoveryExpr 0x15180e250 <col:31> '<dependent type>' contains-errors lvalue
      | |-DeclStmt 0x15180e370 <line:7:3, col:8>
      | | `-VarDecl 0x15180e308 <col:3, col:7> col:7 used r 'int'
      | `-WhileStmt 0x1518288f0 <line:8:3, line:18:3>
      |   |-BinaryOperator 0x151827f30 <line:8:10, col:39> 'int' contains-errors '&&'
      |   | |-DeclRefExpr 0x15180e388 <col:10> 'int' contains-errors lvalue Var 0x15180e0a0 'len' 'int'
      |   | `-BinaryOperator 0x151827f10 <col:17, col:39> 'int' contains-errors '>='
      |   |   |-CXXDependentScopeMemberExpr 0x151827ec8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->d_printfd
      |   |   | `-RecoveryExpr 0x151827ea8 <col:17> '<dependent type>' contains-errors lvalue
      |   |   `-IntegerLiteral 0x151827e48 <col:39> 'int' 0
      |   `-CompoundStmt 0x1518288c0 <col:42, line:18:3>
      |     |-BinaryOperator 0x151828238 <line:9:4, col:41> 'int' contains-errors '='
      |     | |-DeclRefExpr 0x151827f50 <col:4> 'int' lvalue Var 0x15180e308 'r' 'int'
      |     | `-CallExpr 0x151828200 <col:8, col:41> '<dependent type>' contains-errors
      |     |   |-DeclRefExpr 0x151828080 <col:8> 'int ()' Function 0x151827fc8 'write' 'int ()'
      |     |   |-CXXDependentScopeMemberExpr 0x1518281b8 <col:14, col:23> '<dependent type>' contains-errors lvalue ->d_printfd
      |     |   | `-RecoveryExpr 0x151828198 <col:14> '<dependent type>' contains-errors lvalue
      |     |   |-DeclRefExpr 0x151828100 <col:34> 'char *' contains-errors lvalue Var 0x15180df40 'bp' 'char *'
      |     |   `-DeclRefExpr 0x151828120 <col:38> 'int' contains-errors lvalue Var 0x15180e0a0 'len' 'int'
      |     |-IfStmt 0x151828790 <line:10:4, line:15:4>
      |     | |-BinaryOperator 0x1518282b0 <line:10:8, col:13> 'int' '<='
      |     | | |-ImplicitCastExpr 0x151828298 <col:8> 'int' <LValueToRValue>
      |     | | | `-DeclRefExpr 0x151828258 <col:8> 'int' lvalue Var 0x15180e308 'r' 'int'
      |     | | `-IntegerLiteral 0x151828278 <col:13> 'int' 0
      |     | `-CompoundStmt 0x151828768 <col:16, line:15:4>
      |     |   |-CallExpr 0x1518284d8 <line:11:5, col:28> '<dependent type>' contains-errors
      |     |   | |-DeclRefExpr 0x1518283b0 <col:5> 'int ()' Function 0x1518282f8 'WMsg' 'int ()'
      |     |   | |-RecoveryExpr 0x151828498 <col:10> '<dependent type>' contains-errors lvalue
      |     |   | |-RecoveryExpr 0x1518284b8 <col:16> '<dependent type>' contains-errors lvalue
      |     |   | `-StringLiteral 0x151828440 <col:23> 'char[4]' lvalue "STR"
      |     |   |-CallExpr 0x151828700 <line:12:5, col:29> '<dependent type>' contains-errors
      |     |   | |-DeclRefExpr 0x1518285f0 <col:5> 'int ()' Function 0x151828538 'close' 'int ()'
      |     |   | `-CXXDependentScopeMemberExpr 0x1518286b8 <col:11, col:20> '<dependent type>' contains-errors lvalue ->d_printfd
      |     |   |   `-RecoveryExpr 0x151828698 <col:11> '<dependent type>' contains-errors lvalue
      |     |   `-BreakStmt 0x151828760 <line:14:5>
      |     |-CompoundAssignOperator 0x151828808 <line:16:4, col:10> 'char *' contains-errors '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
      |     | |-DeclRefExpr 0x1518287b0 <col:4> 'char *' contains-errors lvalue Var 0x15180df40 'bp' 'char *'
      |     | `-ImplicitCastExpr 0x1518287f0 <col:10> 'int' <LValueToRValue>
      |     |   `-DeclRefExpr 0x1518287d0 <col:10> 'int' lvalue Var 0x15180e308 'r' 'int'
      |     `-CompoundAssignOperator 0x151828890 <line:17:4, col:11> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
      |       |-DeclRefExpr 0x151828838 <col:4> 'int' contains-errors lvalue Var 0x15180e0a0 'len' 'int'
      |       `-ImplicitCastExpr 0x151828878 <col:11> 'int' <LValueToRValue>
      |         `-DeclRefExpr 0x151828858 <col:11> 'int' lvalue Var 0x15180e308 'r' 'int'
      `-IfStmt 0x15182a388 <line:19:9, line:24:2>
        |-BinaryOperator 0x151828b68 <line:19:13, col:48> 'int' contains-errors '&&'
        | |-RecoveryExpr 0x151828a58 <col:13> '<dependent type>' contains-errors lvalue
        | `-BinaryOperator 0x151828b48 <col:24, col:48> 'int' contains-errors '>'
        |   |-CXXDependentScopeMemberExpr 0x151828a98 <col:24, col:30> '<dependent type>' contains-errors lvalue ->w_stringp
        |   | `-RecoveryExpr 0x151828a78 <col:24> '<dependent type>' contains-errors lvalue
        |   `-CXXDependentScopeMemberExpr 0x151828b00 <col:42, col:48> '<dependent type>' contains-errors lvalue ->w_string
        |     `-RecoveryExpr 0x151828ae0 <col:42> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x15182a370 <col:58, line:24:2>
          `-CallExpr 0x15182a348 <line:23:3, col:10> 'int'
            |-ImplicitCastExpr 0x15182a330 <col:3> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x15182a2b8 <col:3> 'int ()' Function 0x15182a200 'Flush' 'int ()'
            `-IntegerLiteral 0x15182a2d8 <col:9> 'int' 3
