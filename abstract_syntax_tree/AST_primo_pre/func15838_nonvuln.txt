`-FunctionDecl 0x12100de38  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x12100dd58 <col:8> col:8 QueryPlannerTest 'int'
  |-ParmVarDecl 0x12100dcd8 <col:26> col:26 ElemMatchTwoFields 'int'
  `-CompoundStmt 0x121027240 <col:46, line:10:1>
    |-CallExpr 0x1210268c8 <line:2:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12100e060 <col:5> 'int ()' Function 0x12100dfa8 'addIndex' 'int ()'
    | `-CallExpr 0x1210268a0 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12100e160 <col:14> 'int ()' Function 0x12100e0a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x121026870 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x12100e1c0 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x12100e1e0 <col:28> 'int' 1
    |-CallExpr 0x1210269e0 <line:3:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1210268f0 <col:5> 'int ()' Function 0x12100dfa8 'addIndex' 'int ()'
    | `-CallExpr 0x1210269b8 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121026910 <col:14> 'int ()' Function 0x12100e0a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x121026988 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x121026930 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x121026950 <col:28> 'int' 1
    |-CallExpr 0x121026cd0 <line:4:5, col:29> 'int'
    | |-ImplicitCastExpr 0x121026cb8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x121026ae8 <col:5> 'int ()' Function 0x121026a30 'runQuery' 'int ()'
    | `-CallExpr 0x121026c78 <col:14, col:28> 'int'
    |   |-ImplicitCastExpr 0x121026c60 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x121026be8 <col:14> 'int ()' Function 0x121026b30 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x121026ca0 <col:23> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x121026c08 <col:23> 'char[4]' lvalue "STR"
    |-CallExpr 0x121026f68 <line:6:5, col:40> 'int'
    | |-ImplicitCastExpr 0x121026f50 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x121026dd8 <col:5> 'int ()' Function 0x121026d20 'ASSERT_EQUALS' 'int ()'
    | |-CallExpr 0x121026f10 <col:19, col:35> 'int'
    | | `-ImplicitCastExpr 0x121026ef8 <col:19> 'int (*)()' <FunctionToPointerDecay>
    | |   `-DeclRefExpr 0x121026ed8 <col:19> 'int ()' Function 0x121026e20 'getNumSolutions' 'int ()'
    | `-IntegerLiteral 0x121026f30 <col:38> 'unsigned int' 3
    |-CallExpr 0x1210270d0 <line:7:5, col:31> 'int'
    | |-ImplicitCastExpr 0x1210270b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x121027078 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x1210270f8 <col:26> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x121027098 <col:26> 'char[4]' lvalue "STR"
    |-CallExpr 0x121027168 <line:8:5, col:31> 'int'
    | |-ImplicitCastExpr 0x121027150 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x121027110 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x121027190 <col:26> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x121027130 <col:26> 'char[4]' lvalue "STR"
    `-CallExpr 0x121027200 <line:9:5, col:31> 'int'
      |-ImplicitCastExpr 0x1210271e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1210271a8 <col:5> 'int ()' Function 0x121026fc0 'assertSolutionExists' 'int ()'
      `-ImplicitCastExpr 0x121027228 <col:26> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x1210271c8 <col:26> 'char[4]' lvalue "STR"
