`-FunctionDecl 0x14000dda8  line:1:1 adjust_shell_level 'int (int)'
  |-ParmVarDecl 0x14000dcd8 <line:2:6, col:10> col:10 used change 'int'
  `-CompoundStmt 0x14002ad30 <line:3:1, line:44:1>
    |-DeclStmt 0x14000e040 <line:4:3, col:32>
    | |-VarDecl 0x14000df40 <col:3, col:19> col:8 used new_level 'char[5]'
    | `-VarDecl 0x14000dfc0 <col:3, col:23> col:23 used old_SHLVL 'char *'
    |-BinaryOperator 0x140028d00 <line:8:3, col:38> 'char *' '='
    | |-DeclRefExpr 0x14000e088 <col:3> 'char *' lvalue Var 0x14000dfc0 'old_SHLVL' 'char *'
    | `-ImplicitCastExpr 0x14000e2c8 <col:15, col:38> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x14000e288 <col:15, col:38> 'int'
    |     |-ImplicitCastExpr 0x14000e270 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14000e1c0 <col:15> 'int ()' Function 0x14000e108 'get_string_value' 'int ()'
    |     `-ImplicitCastExpr 0x14000e2b0 <col:33> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14000e220 <col:33> 'char[4]' lvalue "STR"
    |-IfStmt 0x1400292f0 <line:9:3, line:10:17>
    | |-BinaryOperator 0x140029248 <line:9:7, col:87> 'int' '||'
    | | |-BinaryOperator 0x140029138 <col:7, col:39> 'int' '||'
    | | | |-BinaryOperator 0x140029098 <col:7, col:20> 'int' '=='
    | | | | |-ImplicitCastExpr 0x140029068 <col:7> 'char *' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x140028d20 <col:7> 'char *' lvalue Var 0x14000dfc0 'old_SHLVL' 'char *'
    | | | | `-ImplicitCastExpr 0x140029080 <col:20> 'char *' <NullToPointer>
    | | | |   `-IntegerLiteral 0x140028d40 <col:20> 'int' 0
    | | | `-BinaryOperator 0x140029118 <col:25, col:39> 'int' '=='
    | | |   |-ImplicitCastExpr 0x140029100 <col:25, col:26> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x1400290e8 <col:25, col:26> 'char' <LValueToRValue>
    | | |   |   `-UnaryOperator 0x1400290d0 <col:25, col:26> 'char' lvalue prefix '*' cannot overflow
    | | |   |     `-ImplicitCastExpr 0x1400290b8 <col:26> 'char *' <LValueToRValue>
    | | |   |       `-DeclRefExpr 0x140028db0 <col:26> 'char *' lvalue Var 0x14000dfc0 'old_SHLVL' 'char *'
    | | |   `-CharacterLiteral 0x140028e00 <col:39> 'int' 0
    | | `-BinaryOperator 0x140029228 <col:47, col:87> 'int' '=='
    | |   |-CallExpr 0x1400291e0 <col:47, col:82> 'int'
    | |   | |-ImplicitCastExpr 0x1400291c8 <col:47> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x140028f68 <col:47> 'int ()' Function 0x140028eb0 'legal_number' 'int ()'
    | |   | |-ImplicitCastExpr 0x140029210 <col:61> 'char *' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x140028f88 <col:61> 'char *' lvalue Var 0x14000dfc0 'old_SHLVL' 'char *'
    | |   | `-UnaryOperator 0x1400291b0 <col:72, col:73> 'char (*)[5]' prefix '&' cannot overflow
    | |   |   `-DeclRefExpr 0x140029158 <col:73> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
    | |   `-IntegerLiteral 0x140029008 <col:87> 'int' 0
    | `-ImplicitCastExpr 0x1400292d8 <line:10:5, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   `-RecoveryExpr 0x1400292a8 <col:5, col:17> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x140029268 <col:5> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
    |     `-IntegerLiteral 0x140029288 <col:17> 'int' 0
    |-IfStmt 0x140029980 <line:13:3, line:19:5> has_else
    | |-BinaryOperator 0x140029480 <line:13:7, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x140029450 <col:7> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x140029430 <col:7> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
    | | `-ImplicitCastExpr 0x140029468 <col:21> 'char *' <NullToPointer>
    | |   `-IntegerLiteral 0x1400293f0 <col:21> 'int' 0
    | |-NullStmt 0x140029978 <line:14:5>
    | `-IfStmt 0x140029958 <line:15:8, line:19:5>
    |   |-BinaryOperator 0x140029568 <line:15:12, col:26> 'int' '>'
    |   | |-ImplicitCastExpr 0x140029538 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x140029518 <col:12> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
    |   | `-ImplicitCastExpr 0x140029550 <col:26> 'char *' <IntegralToPointer>
    |   |   `-IntegerLiteral 0x1400294d8 <col:26> 'int' 1000
    |   `-CompoundStmt 0x140029940 <line:16:5, line:19:5>
    |     `-CallExpr 0x1400298d8 <line:17:7, col:46> 'int'
    |       |-ImplicitCastExpr 0x1400298c0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x140029668 <col:7> 'int ()' Function 0x1400295b0 'internal_warning' 'int ()'
    |       |-CallExpr 0x140029860 <col:25, col:32> 'int'
    |       | |-ImplicitCastExpr 0x140029848 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x140029768 <col:25> 'int ()' Function 0x1400296b0 '_' 'int ()'
    |       | `-ImplicitCastExpr 0x140029888 <col:27> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x140029788 <col:27> 'char[4]' lvalue "STR"
    |       `-ImplicitCastExpr 0x140029908 <col:35> 'char *' <ArrayToPointerDecay>
    |         `-DeclRefExpr 0x1400298a0 <col:35> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
    `-IfStmt 0x14002aa20 <line:22:3, line:40:5> has_else
      |-BinaryOperator 0x14002a270 <line:22:7, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x14002a240 <col:7> 'char *' <ArrayToPointerDecay>
      | | `-DeclRefExpr 0x14002a220 <col:7> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
      | `-ImplicitCastExpr 0x14002a258 <col:21> 'char *' <IntegralToPointer>
      |   `-IntegerLiteral 0x1400299c8 <col:21> 'int' 10
      |-CompoundStmt 0x14002a3e8 <line:23:5, line:26:5>
      | `-BinaryOperator 0x14002a3c8 <line:25:7, col:22> 'char' '='
      |   |-ArraySubscriptExpr 0x14002a378 <col:7, col:18> 'char' lvalue
      |   | |-ImplicitCastExpr 0x14002a360 <col:7> 'char *' <ArrayToPointerDecay>
      |   | | `-DeclRefExpr 0x14002a320 <col:7> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
      |   | `-IntegerLiteral 0x14002a340 <col:17> 'int' 1
      |   `-ImplicitCastExpr 0x14002a3b0 <col:22> 'char' <IntegralCast>
      |     `-CharacterLiteral 0x14002a398 <col:22> 'int' 0
      `-IfStmt 0x14002a9f0 <line:27:8, line:40:5> has_else
        |-RecoveryExpr 0x14002a420 <line:27:12, col:26> '_Bool' contains-errors
        |-CompoundStmt 0x14002a668 <line:28:5, line:32:5>
        | `-BinaryOperator 0x14002a648 <line:31:7, col:22> 'char' '='
        |   |-ArraySubscriptExpr 0x14002a5f8 <col:7, col:18> 'char' lvalue
        |   | |-ImplicitCastExpr 0x14002a5e0 <col:7> 'char *' <ArrayToPointerDecay>
        |   | | `-DeclRefExpr 0x14002a5a0 <col:7> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
        |   | `-IntegerLiteral 0x14002a5c0 <col:17> 'int' 2
        |   `-ImplicitCastExpr 0x14002a630 <col:22> 'char' <IntegralCast>
        |     `-CharacterLiteral 0x14002a618 <col:22> 'int' 0
        `-IfStmt 0x14002a9d0 <line:33:8, line:40:5>
          |-RecoveryExpr 0x14002a6a0 <line:33:12, col:26> '_Bool' contains-errors
          `-CompoundStmt 0x14002a9b8 <line:34:5, line:40:5>
            `-BinaryOperator 0x14002a998 <line:39:7, col:22> 'char' '='
              |-ArraySubscriptExpr 0x14002a948 <col:7, col:18> 'char' lvalue
              | |-ImplicitCastExpr 0x14002a930 <col:7> 'char *' <ArrayToPointerDecay>
              | | `-DeclRefExpr 0x14002a8f0 <col:7> 'char[5]' lvalue Var 0x14000df40 'new_level' 'char[5]'
              | `-IntegerLiteral 0x14002a910 <col:17> 'int' 3
              `-ImplicitCastExpr 0x14002a980 <col:22> 'char' <IntegralCast>
                `-CharacterLiteral 0x14002a968 <col:22> 'int' 0
