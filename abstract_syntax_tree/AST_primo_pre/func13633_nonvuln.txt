`-FunctionDecl 0x13300e358  line:1:12 browse_rb 'int (struct mm_struct *)' static
  |-ParmVarDecl 0x13300e248 <col:22, col:40> col:40 used mm 'struct mm_struct *'
  `-CompoundStmt 0x13400a5b0 <line:2:1, line:47:1>
    |-DeclStmt 0x1330268b0 <line:3:2, col:35>
    | |-RecordDecl 0x133026650 <col:2, col:9> col:9 struct rb_root
    | `-VarDecl 0x1330267b8 <col:2, col:30> col:18 used root 'struct rb_root *' cinit
    |   `-UnaryOperator 0x133026880 <col:25, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x133026858 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x133026820 <col:26> 'struct mm_struct *' lvalue ParmVar 0x13300e248 'mm' 'struct mm_struct *'
    |-DeclStmt 0x133026aa8 <line:4:2, col:23>
    | |-VarDecl 0x1330268e0 <col:2, col:10> col:6 used i 'int' cinit
    | | `-IntegerLiteral 0x133026948 <col:10> 'int' 0
    | |-VarDecl 0x133026980 <col:2, col:13> col:13 used j 'int'
    | `-VarDecl 0x133026a00 <col:2, col:22> col:16 used bug 'int' cinit
    |   `-IntegerLiteral 0x133026a68 <col:22> 'int' 0
    |-DeclStmt 0x133026d90 <line:5:2, col:32>
    | |-RecordDecl 0x133026ac0 <col:2, col:9> col:9 struct rb_node
    | |-VarDecl 0x133026c28 <col:2, col:18> col:18 used nd 'struct rb_node *'
    | `-VarDecl 0x133026cb8 <col:2, col:28> col:23 used pn 'struct rb_node *' cinit
    |   `-RecoveryExpr 0x133026d50 <col:28> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x133026f30 <line:6:2, col:34>
    | |-VarDecl 0x133026dc0 <col:2, col:23> col:16 used prev 'unsigned long' cinit
    | | `-ImplicitCastExpr 0x133026e48 <col:23> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x133026e28 <col:23> 'int' 0
    | `-VarDecl 0x133026e78 <col:2, col:33> col:26 used pend 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x133026f00 <col:33> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x133026ee0 <col:33> 'int' 0
    |-ForStmt 0x134009ef8 <line:8:2, line:38:2>
    | |-BinaryOperator 0x133027160 <line:8:7, col:25> 'struct rb_node *' contains-errors '='
    | | |-DeclRefExpr 0x133026f48 <col:7> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x133027148 <col:12, col:25> 'struct rb_node *' contains-errors <IntegralToPointer>
    | |   `-CallExpr 0x133027108 <col:12, col:25> 'int' contains-errors
    | |     |-ImplicitCastExpr 0x1330270f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x133027080 <col:12> 'int ()' Function 0x133026fc8 'rb_first' 'int ()'
    | |     `-ImplicitCastExpr 0x133027130 <col:21> 'struct rb_root *' contains-errors <LValueToRValue>
    | |       `-DeclRefExpr 0x1330270a0 <col:21> 'struct rb_root *' contains-errors lvalue Var 0x1330267b8 'root' 'struct rb_root *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x1330271a0 <col:28> 'struct rb_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x133027180 <col:28> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | |-BinaryOperator 0x133027368 <col:32, col:47> 'struct rb_node *' '='
    | | |-DeclRefExpr 0x1330271b8 <col:32> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x133027350 <col:37, col:47> 'struct rb_node *' <IntegralToPointer>
    | |   `-CallExpr 0x133027310 <col:37, col:47> 'int'
    | |     |-ImplicitCastExpr 0x1330272f8 <col:37> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1330272b8 <col:37> 'int ()' Function 0x133027200 'rb_next' 'int ()'
    | |     `-ImplicitCastExpr 0x133027338 <col:45> 'struct rb_node *' <LValueToRValue>
    | |       `-DeclRefExpr 0x1330272d8 <col:45> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | `-CompoundStmt 0x134009e90 <col:50, line:38:2>
    |   |-DeclStmt 0x133027578 <line:9:3, col:29>
    |   | |-RecordDecl 0x133027388 <col:3, col:10> col:10 struct vm_area_struct
    |   | `-VarDecl 0x1330274f8 <col:3, col:26> col:26 used vma 'struct vm_area_struct *'
    |   |-IfStmt 0x134008c48 <line:11:3, line:15:3>
    |   | |-BinaryOperator 0x134008990 <line:11:7, col:23> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x134008948 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x134008910 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | | `-DeclRefExpr 0x134008970 <col:23> 'unsigned long' lvalue Var 0x133026dc0 'prev' 'unsigned long'
    |   | `-CompoundStmt 0x134008c28 <col:29, line:15:3>
    |   |   |-CallExpr 0x134008b90 <line:12:4, line:13:26> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x134008a90 <line:12:4> 'int ()' Function 0x1340089d8 'pr_emerg' 'int ()'
    |   |   | |-StringLiteral 0x134008af0 <col:13> 'char[4]' lvalue "STR"
    |   |   | |-RecoveryExpr 0x134008b48 <line:13:7, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x134008b10 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   | `-DeclRefExpr 0x134008b70 <col:22> 'unsigned long' lvalue Var 0x133026dc0 'prev' 'unsigned long'
    |   |   `-BinaryOperator 0x134008c08 <line:14:4, col:10> 'int' '='
    |   |     |-DeclRefExpr 0x134008bc8 <col:4> 'int' lvalue Var 0x133026a00 'bug' 'int'
    |   |     `-IntegerLiteral 0x134008be8 <col:10> 'int' 1
    |   |-IfStmt 0x134008e80 <line:16:3, line:20:3>
    |   | |-BinaryOperator 0x134008ce8 <line:16:7, col:23> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x134008ca0 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x134008c68 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | | `-DeclRefExpr 0x134008cc8 <col:23> 'unsigned long' lvalue Var 0x133026e78 'pend' 'unsigned long'
    |   | `-CompoundStmt 0x134008e60 <col:29, line:20:3>
    |   |   |-CallExpr 0x134008dc8 <line:17:4, line:18:26> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x134008d08 <line:17:4> 'int ()' Function 0x1340089d8 'pr_emerg' 'int ()'
    |   |   | |-StringLiteral 0x134008d28 <col:13> 'char[4]' lvalue "STR"
    |   |   | |-RecoveryExpr 0x134008d80 <line:18:7, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x134008d48 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   | `-DeclRefExpr 0x134008da8 <col:22> 'unsigned long' lvalue Var 0x133026e78 'pend' 'unsigned long'
    |   |   `-BinaryOperator 0x134008e40 <line:19:4, col:10> 'int' '='
    |   |     |-DeclRefExpr 0x134008e00 <col:4> 'int' lvalue Var 0x133026a00 'bug' 'int'
    |   |     `-IntegerLiteral 0x134008e20 <col:10> 'int' 1
    |   |-IfStmt 0x134009138 <line:21:3, line:25:3>
    |   | |-BinaryOperator 0x134008f60 <line:21:7, col:28> 'int' contains-errors '>'
    |   | | |-RecoveryExpr 0x134008ed8 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x134008ea0 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | | `-RecoveryExpr 0x134008f38 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x134008f00 <col:23> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | `-CompoundStmt 0x134009118 <col:36, line:25:3>
    |   |   |-CallExpr 0x134009080 <line:22:4, line:23:33> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x134008f80 <line:22:4> 'int ()' Function 0x1340089d8 'pr_emerg' 'int ()'
    |   |   | |-StringLiteral 0x134008fa0 <col:13> 'char[4]' lvalue "STR"
    |   |   | |-RecoveryExpr 0x134008ff8 <line:23:7, col:12> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x134008fc0 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   | `-RecoveryExpr 0x134009058 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x134009020 <col:22> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   `-BinaryOperator 0x1340090f8 <line:24:4, col:10> 'int' '='
    |   |     |-DeclRefExpr 0x1340090b8 <col:4> 'int' lvalue Var 0x133026a00 'bug' 'int'
    |   |     `-IntegerLiteral 0x1340090d8 <col:10> 'int' 1
    |   |-CallExpr 0x1340092d0 <line:26:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x134009238 <col:3> 'int ()' Function 0x134009180 'spin_lock' 'int ()'
    |   | `-UnaryOperator 0x1340092b8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x134009290 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x134009258 <col:14> 'struct mm_struct *' lvalue ParmVar 0x13300e248 'mm' 'struct mm_struct *'
    |   |-IfStmt 0x1340096e0 <line:27:3, line:32:3>
    |   | |-BinaryOperator 0x1340094d0 <line:27:7, col:57> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x134009330 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x1340092f8 <col:7> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | | `-CallExpr 0x134009490 <col:30, col:57> 'int'
    |   | |   |-ImplicitCastExpr 0x134009478 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x134009438 <col:30> 'int ()' Function 0x134009380 'vma_compute_subtree_gap' 'int ()'
    |   | |   `-ImplicitCastExpr 0x1340094b8 <col:54> 'struct vm_area_struct *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x134009458 <col:54> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   | `-CompoundStmt 0x1340096c0 <col:60, line:32:3>
    |   |   |-CallExpr 0x134009628 <line:28:4, line:30:39> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x1340094f0 <line:28:4> 'int ()' Function 0x1340089d8 'pr_emerg' 'int ()'
    |   |   | |-StringLiteral 0x134009510 <col:13> 'char[4]' lvalue "STR"
    |   |   | |-RecoveryExpr 0x134009568 <line:29:11, col:16> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x134009530 <col:11> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   | `-CallExpr 0x1340095e8 <line:30:11, col:38> 'int'
    |   |   |   |-ImplicitCastExpr 0x1340095d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x134009590 <col:11> 'int ()' Function 0x134009380 'vma_compute_subtree_gap' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x134009610 <col:35> 'struct vm_area_struct *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1340095b0 <col:35> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   |   `-BinaryOperator 0x1340096a0 <line:31:4, col:10> 'int' '='
    |   |     |-DeclRefExpr 0x134009660 <col:4> 'int' lvalue Var 0x133026a00 'bug' 'int'
    |   |     `-IntegerLiteral 0x134009680 <col:10> 'int' 1
    |   |-CallExpr 0x134009c78 <line:33:3, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1340097e0 <col:3> 'int ()' Function 0x134009728 'spin_unlock' 'int ()'
    |   | `-UnaryOperator 0x134009c60 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x134009c38 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x134009c00 <col:16> 'struct mm_struct *' lvalue ParmVar 0x13300e248 'mm' 'struct mm_struct *'
    |   |-UnaryOperator 0x134009cc0 <line:34:3, col:4> 'int' postfix '++'
    |   | `-DeclRefExpr 0x134009ca0 <col:3> 'int' lvalue Var 0x1330268e0 'i' 'int'
    |   |-BinaryOperator 0x134009d30 <line:35:3, col:8> 'struct rb_node *' contains-errors '='
    |   | |-DeclRefExpr 0x134009cd8 <col:3> 'struct rb_node *' contains-errors lvalue Var 0x133026cb8 'pn' 'struct rb_node *'
    |   | `-ImplicitCastExpr 0x134009d18 <col:8> 'struct rb_node *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x134009cf8 <col:8> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    |   |-BinaryOperator 0x134009dd0 <line:36:3, col:15> 'unsigned long' contains-errors '='
    |   | |-DeclRefExpr 0x134009d50 <col:3> 'unsigned long' lvalue Var 0x133026dc0 'prev' 'unsigned long'
    |   | `-RecoveryExpr 0x134009da8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x134009d70 <col:10> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |   `-BinaryOperator 0x134009e70 <line:37:3, col:15> 'unsigned long' contains-errors '='
    |     |-DeclRefExpr 0x134009df0 <col:3> 'unsigned long' lvalue Var 0x133026e78 'pend' 'unsigned long'
    |     `-RecoveryExpr 0x134009e48 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x134009e10 <col:10> 'struct vm_area_struct *' lvalue Var 0x1330274f8 'vma' 'struct vm_area_struct *'
    |-BinaryOperator 0x134009f70 <line:39:2, col:6> 'int' '='
    | |-DeclRefExpr 0x134009f30 <col:2> 'int' lvalue Var 0x133026980 'j' 'int'
    | `-IntegerLiteral 0x134009f50 <col:6> 'int' 0
    |-ForStmt 0x13400a248 <line:40:2, line:41:4>
    | |-BinaryOperator 0x134009fe8 <line:40:7, col:12> 'struct rb_node *' contains-errors '='
    | | |-DeclRefExpr 0x134009f90 <col:7> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x134009fd0 <col:12> 'struct rb_node *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x134009fb0 <col:12> 'struct rb_node *' contains-errors lvalue Var 0x133026cb8 'pn' 'struct rb_node *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x13400a028 <col:16> 'struct rb_node *' <LValueToRValue>
    | | `-DeclRefExpr 0x13400a008 <col:16> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | |-BinaryOperator 0x13400a1f0 <col:20, col:35> 'struct rb_node *' '='
    | | |-DeclRefExpr 0x13400a040 <col:20> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | | `-ImplicitCastExpr 0x13400a1d8 <col:25, col:35> 'struct rb_node *' <IntegralToPointer>
    | |   `-CallExpr 0x13400a198 <col:25, col:35> 'int'
    | |     |-ImplicitCastExpr 0x13400a180 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x13400a140 <col:25> 'int ()' Function 0x13400a088 'rb_prev' 'int ()'
    | |     `-ImplicitCastExpr 0x13400a1c0 <col:33> 'struct rb_node *' <LValueToRValue>
    | |       `-DeclRefExpr 0x13400a160 <col:33> 'struct rb_node *' lvalue Var 0x133026c28 'nd' 'struct rb_node *'
    | `-UnaryOperator 0x13400a230 <line:41:3, col:4> 'int' postfix '++'
    |   `-DeclRefExpr 0x13400a210 <col:3> 'int' lvalue Var 0x133026980 'j' 'int'
    |-IfStmt 0x13400a4a8 <line:42:2, line:45:2>
    | |-BinaryOperator 0x13400a2f0 <line:42:6, col:11> 'int' '!='
    | | |-ImplicitCastExpr 0x13400a2c0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13400a280 <col:6> 'int' lvalue Var 0x1330268e0 'i' 'int'
    | | `-ImplicitCastExpr 0x13400a2d8 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13400a2a0 <col:11> 'int' lvalue Var 0x133026980 'j' 'int'
    | `-CompoundStmt 0x13400a488 <col:14, line:45:2>
    |   |-CallExpr 0x13400a3a8 <line:43:3, col:23> 'int'
    |   | |-ImplicitCastExpr 0x13400a390 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13400a310 <col:3> 'int ()' Function 0x1340089d8 'pr_emerg' 'int ()'
    |   | |-ImplicitCastExpr 0x13400a3e0 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x13400a330 <col:12> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x13400a3f8 <col:19> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13400a350 <col:19> 'int' lvalue Var 0x133026980 'j' 'int'
    |   | `-ImplicitCastExpr 0x13400a410 <col:22> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13400a370 <col:22> 'int' lvalue Var 0x1330268e0 'i' 'int'
    |   `-BinaryOperator 0x13400a468 <line:44:3, col:9> 'int' '='
    |     |-DeclRefExpr 0x13400a428 <col:3> 'int' lvalue Var 0x133026a00 'bug' 'int'
    |     `-IntegerLiteral 0x13400a448 <col:9> 'int' 1
    `-ReturnStmt 0x13400a5a0 <line:46:2, col:20>
      `-ConditionalOperator 0x13400a570 <col:9, col:20> 'int'
        |-ImplicitCastExpr 0x13400a540 <col:9> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x13400a4c8 <col:9> 'int' lvalue Var 0x133026a00 'bug' 'int'
        |-UnaryOperator 0x13400a508 <col:15, col:16> 'int' prefix '-'
        | `-IntegerLiteral 0x13400a4e8 <col:16> 'int' 1
        `-ImplicitCastExpr 0x13400a558 <col:20> 'int' <LValueToRValue>
          `-DeclRefExpr 0x13400a520 <col:20> 'int' lvalue Var 0x1330268e0 'i' 'int'
