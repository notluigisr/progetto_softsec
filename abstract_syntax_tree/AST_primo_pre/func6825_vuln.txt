`-FunctionDecl 0x139128288  line:1:1 invalid f_luaeval 'int (int *, int *)'
  |-ParmVarDecl 0x139128128 <col:11, col:21> col:21 invalid argvars 'int *'
  |-ParmVarDecl 0x1391281a8 <col:30, col:40> col:40 invalid rettv 'int *'
  `-CompoundStmt 0x1391418f8 <line:2:1, line:8:1>
    |-DeclStmt 0x1391283c0 <line:3:5, col:16>
    | `-VarDecl 0x139128358 <col:5, col:13> col:13 used str 'char *'
    |-DeclStmt 0x139128468 <line:4:5, col:26>
    | `-VarDecl 0x139128400 <col:5, col:12> col:12 invalid buf 'char'
    |-BinaryOperator 0x139128700 <line:6:5, col:45> 'char *' contains-errors '='
    | |-DeclRefExpr 0x139128480 <col:5> 'char *' lvalue Var 0x139128358 'str' 'char *'
    | `-CallExpr 0x1391286d0 <col:11, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139128600 <col:11> 'int ()' Function 0x139128548 'tv_get_string_buf' 'int ()'
    |   |-UnaryOperator 0x139128698 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ArraySubscriptExpr 0x139128678 <col:30, col:39> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x139128660 <col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x139128620 <col:30> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x139128640 <col:38> 'int' 0
    |   `-RecoveryExpr 0x1391286b0 <col:42> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x1391418c0 <line:7:5, col:39> '<dependent type>' contains-errors
      |-DeclRefExpr 0x139141800 <col:5> 'int ()' Function 0x139128748 'do_luaeval' 'int ()'
      |-DeclRefExpr 0x139141820 <col:16> 'char *' lvalue Var 0x139128358 'str' 'char *'
      |-BinaryOperator 0x139141880 <col:21, col:31> '<dependent type>' contains-errors '+'
      | |-RecoveryExpr 0x139141840 <col:21> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x139141860 <col:31> 'int' 1
      `-RecoveryExpr 0x1391418a0 <col:34> '<dependent type>' contains-errors lvalue
