`-FunctionDecl 0x15300dee8  line:1:28 invalid ReadPropertyMSBShort 'short (const unsigned char **, int *)' static inline
  |-ParmVarDecl 0x15300dd40 <col:49, col:71> col:71 used p 'const unsigned char **'
  |-ParmVarDecl 0x15300de08 <line:2:3, col:11> col:11 invalid length 'int *'
  `-CompoundStmt 0x153028608 <line:3:1, line:37:1>
    |-DeclStmt 0x15300e1e8 <line:4:3, line:11:12>
    | |-RecordDecl 0x15300dfa0 <line:4:3, line:11:3> line:4:3 union definition
    | | |-FieldDecl 0x15300e058 <line:6:5, line:7:7> col:7 referenced unsigned_value 'unsigned short'
    | | `-FieldDecl 0x15300e0c0 <line:9:5, line:10:7> col:7 referenced signed_value 'short'
    | `-VarDecl 0x15300e168 <line:4:3, line:11:5> col:5 used quantum 'union (unnamed union at dataset_diviso_filec/func6885_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec/func6885_vuln.c:4:3)'
    |-DeclStmt 0x15300e280 <line:13:3, line:14:6>
    | `-VarDecl 0x15300e218 <line:13:3, line:14:5> col:5 used c 'int'
    |-DeclStmt 0x15300e318 <line:16:3, line:17:6>
    | `-VarDecl 0x15300e2b0 <line:16:3, line:17:5> col:5 invalid i 'int' register
    |-DeclStmt 0x153027a68 <line:19:3, line:20:14>
    | `-VarDecl 0x153027a00 <line:19:3, line:20:13> col:5 used buffer 'unsigned char[2]'
    |-DeclStmt 0x153027b00 <line:22:3, line:23:10>
    | `-VarDecl 0x153027a98 <line:22:3, line:23:5> col:5 used value 'unsigned short'
    |-IfStmt 0x153027c68 <line:25:3, line:26:31>
    | |-BinaryOperator 0x153027b88 <line:25:7, col:17> 'int' contains-errors '<'
    | | |-UnaryOperator 0x153027b50 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x153027b38 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x153027b18 <col:8> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x153027b68 <col:17> 'int' 2
    | `-ReturnStmt 0x153027c58 <line:26:5, col:31>
    |   `-ImplicitCastExpr 0x153027c40 <col:11, col:31> 'short' <IntegralCast>
    |     `-ParenExpr 0x153027c20 <col:11, col:31> 'unsigned short'
    |       `-CStyleCastExpr 0x153027bf8 <col:12, col:30> 'unsigned short' <IntegralCast>
    |         `-UnaryOperator 0x153027bc8 <col:29, col:30> 'int' prefix '~' cannot overflow
    |           `-IntegerLiteral 0x153027ba8 <col:30> 'int' 0
    |-ForStmt 0x153028100 <line:27:3, line:32:3>
    | |-BinaryOperator 0x153027cc8 <line:27:8, col:10> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x153027c88 <col:8> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x153027ca8 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x153027d28 <col:13, col:17> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x153027ce8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x153027d08 <col:17> 'int' 2
    | |-UnaryOperator 0x153027d68 <col:20, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x153027d48 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1530280d8 <line:28:3, line:32:3>
    |   |-BinaryOperator 0x153027ed8 <line:29:5, col:21> 'int' '='
    |   | |-DeclRefExpr 0x153027d80 <col:5> 'int' lvalue Var 0x15300e218 'c' 'int'
    |   | `-CStyleCastExpr 0x153027eb0 <col:7, col:21> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x153027e98 <col:13, col:21> 'unsigned char' <LValueToRValue> part_of_explicit_cast
    |   |     `-ParenExpr 0x153027e78 <col:13, col:21> 'const unsigned char' lvalue
    |   |       `-UnaryOperator 0x153027e28 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   |         `-UnaryOperator 0x153027e10 <col:15, col:19> 'const unsigned char *' postfix '++'
    |   |           `-ParenExpr 0x153027df0 <col:15, col:18> 'const unsigned char *' lvalue
    |   |             `-UnaryOperator 0x153027dd8 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |   |               `-ImplicitCastExpr 0x153027dc0 <col:17> 'const unsigned char **' <LValueToRValue>
    |   |                 `-DeclRefExpr 0x153027da0 <col:17> 'const unsigned char **' lvalue ParmVar 0x15300dd40 'p' 'const unsigned char **'
    |   |-UnaryOperator 0x153027f68 <line:30:5, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   | `-ParenExpr 0x153027f48 <col:5, col:13> '<dependent type>' contains-errors
    |   |   `-UnaryOperator 0x153027f30 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x153027f18 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x153027ef8 <col:7> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1530280b8 <line:31:5, col:31> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x153028020 <col:5, col:13> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x153027ff0 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x153027f80 <col:5> 'unsigned char[2]' lvalue Var 0x153027a00 'buffer' 'unsigned char[2]'
    |     | `-ImplicitCastExpr 0x153028008 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x153027fa0 <col:12> '<dependent type>' contains-errors lvalue
    |     `-CStyleCastExpr 0x153028090 <col:15, col:31> 'unsigned char' <IntegralCast>
    |       `-ImplicitCastExpr 0x153028078 <col:31> 'int' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x153028040 <col:31> 'int' lvalue Var 0x15300e218 'c' 'int'
    |-BinaryOperator 0x1530282c0 <line:33:3, col:41> 'unsigned short' '='
    | |-DeclRefExpr 0x153028138 <col:3> 'unsigned short' lvalue Var 0x153027a98 'value' 'unsigned short'
    | `-CStyleCastExpr 0x153028298 <col:9, col:41> 'unsigned short' <IntegralCast>
    |   `-ParenExpr 0x153028278 <col:26, col:41> 'int'
    |     `-BinaryOperator 0x153028220 <col:27, col:40> 'int' '<<'
    |       |-ImplicitCastExpr 0x153028208 <col:27, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1530281f0 <col:27, col:35> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1530281b0 <col:27, col:35> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x153028198 <col:27> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x153028158 <col:27> 'unsigned char[2]' lvalue Var 0x153027a00 'buffer' 'unsigned char[2]'
    |       |     `-IntegerLiteral 0x153028178 <col:34> 'int' 0
    |       `-IntegerLiteral 0x1530281d0 <col:40> 'int' 8
    |-CompoundAssignOperator 0x1530283a8 <line:34:3, col:18> 'unsigned short' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x1530282e0 <col:3> 'unsigned short' lvalue Var 0x153027a98 'value' 'unsigned short'
    | `-ImplicitCastExpr 0x153028390 <col:10, col:18> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x153028378 <col:10, col:18> 'unsigned char' <LValueToRValue>
    |     `-ArraySubscriptExpr 0x153028358 <col:10, col:18> 'unsigned char' lvalue
    |       |-ImplicitCastExpr 0x153028340 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0x153028300 <col:10> 'unsigned char[2]' lvalue Var 0x153027a00 'buffer' 'unsigned char[2]'
    |       `-IntegerLiteral 0x153028320 <col:17> 'int' 1
    |-BinaryOperator 0x1530284f0 <line:35:3, col:41> 'unsigned short' '='
    | |-MemberExpr 0x1530283f8 <col:3, col:11> 'unsigned short' lvalue .unsigned_value 0x15300e058
    | | `-DeclRefExpr 0x1530283d8 <col:3> 'union (unnamed union at dataset_diviso_filec/func6885_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec/func6885_vuln.c:4:3)' lvalue Var 0x15300e168 'quantum' 'union (unnamed union at dataset_diviso_filec/func6885_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec/func6885_vuln.c:4:3)'
    | `-ImplicitCastExpr 0x1530284d8 <col:26, col:41> 'unsigned short' <IntegralCast>
    |   `-ParenExpr 0x1530284b8 <col:26, col:41> 'int'
    |     `-BinaryOperator 0x153028498 <col:27, col:35> 'int' '&'
    |       |-ImplicitCastExpr 0x153028480 <col:27> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x153028468 <col:27> 'unsigned short' <LValueToRValue>
    |       |   `-DeclRefExpr 0x153028428 <col:27> 'unsigned short' lvalue Var 0x153027a98 'value' 'unsigned short'
    |       `-IntegerLiteral 0x153028448 <col:35> 'int' 65535
    `-ReturnStmt 0x1530285f8 <line:36:3, col:30>
      `-ImplicitCastExpr 0x1530285e0 <col:9, col:30> 'short' <LValueToRValue>
        `-ParenExpr 0x1530285c0 <col:9, col:30> 'short' lvalue
          `-MemberExpr 0x153028590 <col:10, col:18> 'short' lvalue .signed_value 0x15300e0c0
            `-DeclRefExpr 0x153028570 <col:10> 'union (unnamed union at dataset_diviso_filec/func6885_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec/func6885_vuln.c:4:3)' lvalue Var 0x15300e168 'quantum' 'union (unnamed union at dataset_diviso_filec/func6885_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec/func6885_vuln.c:4:3)'
