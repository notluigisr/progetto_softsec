`-FunctionDecl 0x129128c68  line:1:1 invalid ambsdtar_build_argv 'int (int *, char *, char **, char **, int)'
  |-ParmVarDecl 0x129128928 <line:2:5, col:29> col:29 invalid argument 'int *'
  |-ParmVarDecl 0x1291289a8 <line:3:5, col:12> col:12 used timestamps 'char *'
  |-ParmVarDecl 0x129128a58 <line:4:5, col:12> col:12 used file_exclude 'char **'
  |-ParmVarDecl 0x129128ad8 <line:5:5, col:12> col:12 used file_include 'char **'
  |-ParmVarDecl 0x129128b58 <line:6:5, col:12> col:12 used command 'int'
  `-CompoundStmt 0x129144650 <line:7:1, line:67:1>
    |-DeclStmt 0x129128dd8 <line:8:5, col:30>
    | `-VarDecl 0x129128d50 <col:5, col:29> col:16 used nb_exclude 'int' cinit
    |   `-IntegerLiteral 0x129128db8 <col:29> 'int' 0
    |-DeclStmt 0x129128e90 <line:9:5, col:30>
    | `-VarDecl 0x129128e08 <col:5, col:29> col:16 used nb_include 'int' cinit
    |   `-IntegerLiteral 0x129128e70 <col:29> 'int' 0
    |-DeclStmt 0x129128f28 <line:10:5, col:23>
    | `-VarDecl 0x129128ec0 <col:5, col:16> col:16 used dirname 'char *'
    |-DeclStmt 0x129128fd0 <line:11:5, col:33>
    | `-VarDecl 0x129128f68 <col:5, col:16> col:16 invalid tmppath 'char'
    |-CallExpr 0x129142450 <line:15:5, line:17:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1291422e0 <line:15:5> 'int ()' Function 0x129142228 'ambsdtar_build_exinclude' 'int ()'
    | |-UnaryOperator 0x129142368 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x129142320 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle
    | |   `-RecoveryExpr 0x129142300 <col:31> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x129142380 <col:46> 'int' 1
    | |-UnaryOperator 0x1291423c0 <line:16:9, col:10> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1291423a0 <col:10> 'int' lvalue Var 0x129128d50 'nb_exclude' 'int'
    | |-DeclRefExpr 0x1291423d8 <col:22> 'char **' lvalue ParmVar 0x129128a58 'file_exclude' 'char **'
    | |-UnaryOperator 0x129142418 <line:17:9, col:10> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1291423f8 <col:10> 'int' lvalue Var 0x129128e08 'nb_include' 'int'
    | `-DeclRefExpr 0x129142430 <col:22> 'char **' lvalue ParmVar 0x129128ad8 'file_include' 'char **'
    |-IfStmt 0x129142690 <line:19:5, line:23:5> has_else
    | |-RecoveryExpr 0x1291424b8 <line:19:9> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x129142570 <col:27, line:21:5>
    | | `-BinaryOperator 0x129142550 <line:20:2, col:12> 'char *' contains-errors '='
    | |   |-DeclRefExpr 0x1291424d8 <col:2> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'
    | |   `-RecoveryExpr 0x129142530 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x129142678 <line:21:12, line:23:5>
    |   `-BinaryOperator 0x129142658 <line:22:2, col:26> 'char *' contains-errors '='
    |     |-DeclRefExpr 0x129142588 <col:2> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'
    |     `-CXXDependentScopeMemberExpr 0x129142610 <col:12, col:26> '<dependent type>' contains-errors lvalue .device
    |       `-CXXDependentScopeMemberExpr 0x1291425c8 <col:12, col:22> '<dependent type>' contains-errors lvalue ->dle
    |         `-RecoveryExpr 0x1291425a8 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1291429b0 <line:25:5, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1291427a0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'
    | |-RecoveryExpr 0x129142948 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x129142988 <col:31, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1291428b8 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'
    |   `-RecoveryExpr 0x129142968 <col:40> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x129142ba0 <line:27:5, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1291429e0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'
    | |-RecoveryExpr 0x129142b28 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x129142b60 <col:31, col:45> 'int'
    |   |-ImplicitCastExpr 0x129142b48 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129142a18 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'
    |   `-ImplicitCastExpr 0x129142b88 <col:40> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x129142a80 <col:40> 'char[4]' lvalue "STR"
    |-CallExpr 0x129142d48 <line:28:5, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x129142bd0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'
    | |-RecoveryExpr 0x129142cd0 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x129142d08 <col:31, col:45> 'int'
    |   |-ImplicitCastExpr 0x129142cf0 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129142c08 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'
    |   `-ImplicitCastExpr 0x129142d30 <col:40> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x129142c28 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x1291437a0 <line:29:5, line:33:5> has_else
    | |-BinaryOperator 0x129142df0 <line:29:9, col:20> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x129142d78 <col:9> 'int' lvalue ParmVar 0x129128b58 'command' 'int'
    | | `-RecoveryExpr 0x129142dd0 <col:20> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x129142fb8 <col:34, line:31:5>
    | | `-CallExpr 0x129142f88 <line:30:9, col:50> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x129142e10 <col:9> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'
    | |   |-RecoveryExpr 0x129142f10 <col:25> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x129142f48 <col:35, col:49> 'int'
    | |     |-ImplicitCastExpr 0x129142f30 <col:35> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x129142e48 <col:35> 'int ()' Function 0x129142800 'g_strdup' 'int ()'
    | |     `-ImplicitCastExpr 0x129142f70 <col:44> 'char *' <ArrayToPointerDecay>
    | |       `-StringLiteral 0x129142e68 <col:44> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x129143788 <line:31:12, line:33:5>
    |   `-CallExpr 0x129143758 <line:32:9, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x129142fd0 <col:9> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'
    |     |-RecoveryExpr 0x1291436e0 <col:25> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x129143718 <col:35, col:49> 'int'
    |       |-ImplicitCastExpr 0x129143700 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x129143618 <col:35> 'int ()' Function 0x129142800 'g_strdup' 'int ()'
    |       `-ImplicitCastExpr 0x129143740 <col:44> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x129143638 <col:44> 'char[4]' lvalue "STR"
    |-CallExpr 0x1291439c8 <line:35:5, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x129143968 <col:5> 'int ()' Function 0x1291438b0 'canonicalize_pathname' 'int ()'
    | |-DeclRefExpr 0x129143988 <col:27> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'
    | `-RecoveryExpr 0x1291439a8 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129143c38 <line:37:5, line:40:5>
    | |-ImplicitCastExpr 0x129143aa0 <line:37:9> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x129143a80 <col:9> 'char *' lvalue ParmVar 0x1291289a8 'timestamps' 'char *'
    | `-CompoundStmt 0x129143c28 <col:21, line:40:5>
    |-IfStmt 0x129143f30 <line:43:5, line:46:5>
    | |-CXXDependentScopeMemberExpr 0x129143d50 <line:43:9, col:19> '<dependent type>' contains-errors lvalue ->tar_blocksize
    | | `-RecoveryExpr 0x129143d30 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x129143f20 <col:34, line:46:5>
    |-IfStmt 0x1291442d8 <line:53:5, line:56:5>
    | |-ImplicitCastExpr 0x129144110 <line:53:9, col:10> 'char *' <LValueToRValue>
    | | `-UnaryOperator 0x1291440f8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1291440e0 <col:10> 'char **' <LValueToRValue>
    | |     `-DeclRefExpr 0x1291440c0 <col:10> 'char **' lvalue ParmVar 0x129128a58 'file_exclude' 'char **'
    | `-CompoundStmt 0x1291442c8 <col:24, line:56:5>
    `-IfStmt 0x129144600 <line:58:5, line:63:5> has_else
      |-ImplicitCastExpr 0x129144348 <line:58:9, col:10> 'char *' <LValueToRValue>
      | `-UnaryOperator 0x129144330 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
      |   `-ImplicitCastExpr 0x129144318 <col:10> 'char **' <LValueToRValue>
      |     `-DeclRefExpr 0x1291442f8 <col:10> 'char **' lvalue ParmVar 0x129128ad8 'file_include' 'char **'
      |-CompoundStmt 0x129144500 <col:24, line:61:5>
      `-CompoundStmt 0x1291445c8 <col:12, line:63:5>
