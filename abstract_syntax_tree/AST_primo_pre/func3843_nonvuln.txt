`-FunctionDecl 0x12380df28  line:1:20 invalid php_fgetcsv_lookup_trailing_spaces 'const char *(const char *, int, const char)' static
  |-ParmVarDecl 0x12380dcd8 <col:55, col:67> col:67 used ptr 'const char *'
  |-ParmVarDecl 0x12380dd70 <col:72, col:79> col:79 referenced invalid len 'int'
  |-ParmVarDecl 0x12380dde8 <col:84, col:95> col:95 delimiter 'const char'
  `-CompoundStmt 0x1238282c0 <line:2:1, line:36:1>
    |-DeclStmt 0x12380e068 <line:3:2, col:13>
    | `-VarDecl 0x12380e000 <col:2, col:6> col:6 used inc_len 'int'
    |-DeclStmt 0x12380e2b0 <line:4:2, col:40>
    | `-VarDecl 0x12380e128 <col:2, col:39> col:16 used last_chars 'unsigned char[2]' cinit
    |   `-InitListExpr 0x12380e230 <col:32, col:39> 'unsigned char[2]'
    |     |-ImplicitCastExpr 0x12380e280 <col:34> 'unsigned char' <IntegralCast>
    |     | `-IntegerLiteral 0x12380e190 <col:34> 'int' 0
    |     `-ImplicitCastExpr 0x12380e298 <col:37> 'unsigned char' <IntegralCast>
    |       `-IntegerLiteral 0x12380e1b0 <col:37> 'int' 0
    |-WhileStmt 0x123827e70 <line:6:2, line:24:2>
    | |-BinaryOperator 0x12380e308 <line:6:9, col:15> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x12380e2c8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12380e2e8 <col:15> 'int' 0
    | `-CompoundStmt 0x123827e40 <col:18, line:24:2>
    |   |-BinaryOperator 0x123827660 <line:7:3, col:51> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12380e328 <col:3> 'int' lvalue Var 0x12380e000 'inc_len' 'int'
    |   | `-ParenExpr 0x123827640 <col:13, col:51> '<dependent type>' contains-errors
    |   |   `-ConditionalOperator 0x123827610 <col:14, col:50> '<dependent type>' contains-errors
    |   |     |-BinaryOperator 0x12380e3e0 <col:14, col:22> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x12380e3c8 <col:14, col:15> 'int' <IntegralCast>
    |   |     | | `-ImplicitCastExpr 0x12380e3b0 <col:14, col:15> 'char' <LValueToRValue>
    |   |     | |   `-UnaryOperator 0x12380e380 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow
    |   |     | |     `-ImplicitCastExpr 0x12380e368 <col:15> 'const char *' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x12380e348 <col:15> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |   |     | `-CharacterLiteral 0x12380e398 <col:22> 'int' 0
    |   |     |-IntegerLiteral 0x123827400 <col:29> 'int' 1
    |   |     `-CallExpr 0x1238275e0 <col:32, col:50> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x123827580 <col:32> 'int ()' Function 0x1238274c8 'php_mblen' 'int ()'
    |   |       |-DeclRefExpr 0x1238275a0 <col:42> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |   |       `-RecoveryExpr 0x1238275c0 <col:47> '<dependent type>' contains-errors lvalue
    |   |-SwitchStmt 0x1238276b8 <line:8:3, line:21:3>
    |   | |-ImplicitCastExpr 0x1238276a0 <line:8:11> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x123827680 <col:11> 'int' lvalue Var 0x12380e000 'inc_len' 'int'
    |   | `-CompoundStmt 0x123827cd8 <col:20, line:21:3>
    |   |   |-CaseStmt 0x123827730 <line:9:4, line:11:15>
    |   |   | |-ConstantExpr 0x123827718 <line:9:9, col:10> 'int'
    |   |   | | `-UnaryOperator 0x123827700 <col:9, col:10> 'int' prefix '-'
    |   |   | |   `-IntegerLiteral 0x1238276e0 <col:10> 'int' 2
    |   |   | `-CaseStmt 0x1238277a8 <line:10:4, line:11:15>
    |   |   |   |-ConstantExpr 0x123827790 <line:10:9, col:10> 'int'
    |   |   |   | `-UnaryOperator 0x123827778 <col:9, col:10> 'int' prefix '-'
    |   |   |   |   `-IntegerLiteral 0x123827758 <col:10> 'int' 1
    |   |   |   `-BinaryOperator 0x123827810 <line:11:5, col:15> 'int' '='
    |   |   |     |-DeclRefExpr 0x1238277d0 <col:5> 'int' lvalue Var 0x12380e000 'inc_len' 'int'
    |   |   |     `-IntegerLiteral 0x1238277f0 <col:15> 'int' 1
    |   |   |-CallExpr 0x1238278d8 <line:12:5, col:22> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x123827830 <col:5> 'int ()' Function 0x1238274c8 'php_mblen' 'int ()'
    |   |   | |-RecoveryExpr 0x1238278b8 <col:15> '<dependent type>' contains-errors lvalue
    |   |   | `-IntegerLiteral 0x123827868 <col:21> 'int' 0
    |   |   |-BreakStmt 0x123827908 <line:13:5>
    |   |   |-CaseStmt 0x123827948 <line:14:4, line:15:10>
    |   |   | |-ConstantExpr 0x123827930 <line:14:9> 'int'
    |   |   | | `-IntegerLiteral 0x123827910 <col:9> 'int' 0
    |   |   | `-GotoStmt 0x1238279c0 <line:15:5, col:10> 'quit_loop' 0x123827970
    |   |   |-CaseStmt 0x123827a10 <line:16:4, line:18:33>
    |   |   | |-ConstantExpr 0x1238279f8 <line:16:9> 'int'
    |   |   | | `-IntegerLiteral 0x1238279d8 <col:9> 'int' 1
    |   |   | `-DefaultStmt 0x123827b98 <line:17:4, line:18:33>
    |   |   |   `-BinaryOperator 0x123827b78 <col:5, col:33> 'unsigned char' '='
    |   |   |     |-ArraySubscriptExpr 0x123827ac8 <col:5, col:17> 'unsigned char' lvalue
    |   |   |     | |-ImplicitCastExpr 0x123827ab0 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |   |   |     | | `-DeclRefExpr 0x123827a38 <col:5> 'unsigned char[2]' lvalue Var 0x12380e128 'last_chars' 'unsigned char[2]'
    |   |   |     | `-IntegerLiteral 0x123827a58 <col:16> 'int' 0
    |   |   |     `-ImplicitCastExpr 0x123827b60 <col:21, col:33> 'unsigned char' <LValueToRValue>
    |   |   |       `-ArraySubscriptExpr 0x123827b40 <col:21, col:33> 'unsigned char' lvalue
    |   |   |         |-ImplicitCastExpr 0x123827b28 <col:21> 'unsigned char *' <ArrayToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x123827ae8 <col:21> 'unsigned char[2]' lvalue Var 0x12380e128 'last_chars' 'unsigned char[2]'
    |   |   |         `-IntegerLiteral 0x123827b08 <col:32> 'int' 1
    |   |   |-BinaryOperator 0x123827cb0 <line:19:5, col:22> 'unsigned char' '='
    |   |   | |-ArraySubscriptExpr 0x123827c10 <col:5, col:17> 'unsigned char' lvalue
    |   |   | | |-ImplicitCastExpr 0x123827bf8 <col:5> 'unsigned char *' <ArrayToPointerDecay>
    |   |   | | | `-DeclRefExpr 0x123827bb8 <col:5> 'unsigned char[2]' lvalue Var 0x12380e128 'last_chars' 'unsigned char[2]'
    |   |   | | `-IntegerLiteral 0x123827bd8 <col:16> 'int' 1
    |   |   | `-ImplicitCastExpr 0x123827c98 <col:21, col:22> 'unsigned char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x123827c80 <col:21, col:22> 'char' <LValueToRValue>
    |   |   |     `-UnaryOperator 0x123827c68 <col:21, col:22> 'const char' lvalue prefix '*' cannot overflow
    |   |   |       `-ImplicitCastExpr 0x123827c50 <col:22> 'const char *' <LValueToRValue>
    |   |   |         `-DeclRefExpr 0x123827c30 <col:22> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |   |   `-BreakStmt 0x123827cd0 <line:20:5>
    |   |-CompoundAssignOperator 0x123827d78 <line:22:3, col:10> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   | |-DeclRefExpr 0x123827d20 <col:3> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |   | `-ImplicitCastExpr 0x123827d60 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x123827d40 <col:10> 'int' lvalue Var 0x12380e000 'inc_len' 'int'
    |   `-CompoundAssignOperator 0x123827e10 <line:23:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x123827dc8 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x123827da8 <col:3> 'int' lvalue ParmVar 0x12380dd70 'len' 'int'
    |     `-DeclRefExpr 0x123827df0 <col:10> 'int' lvalue Var 0x12380e000 'inc_len' 'int'
    |-LabelStmt 0x123828258 <line:25:1, line:34:2> 'quit_loop'
    | `-SwitchStmt 0x123827f38 <line:26:2, line:34:2>
    |   |-ImplicitCastExpr 0x123827f20 <line:26:10, col:22> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x123827f08 <col:10, col:22> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x123827ee8 <col:10, col:22> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x123827ed0 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x123827e90 <col:10> 'unsigned char[2]' lvalue Var 0x12380e128 'last_chars' 'unsigned char[2]'
    |   |     `-IntegerLiteral 0x123827eb0 <col:21> 'int' 1
    |   `-CompoundStmt 0x123828238 <col:25, line:34:2>
    |     |-CaseStmt 0x123827f90 <line:27:3, line:30:4>
    |     | |-ConstantExpr 0x123827f78 <line:27:8> 'int'
    |     | | `-CharacterLiteral 0x123827f60 <col:8> 'int' 10
    |     | `-IfStmt 0x123828138 <line:28:4, line:30:4>
    |     |   |-BinaryOperator 0x123828078 <line:28:8, col:25> 'int' '=='
    |     |   | |-ImplicitCastExpr 0x123828060 <col:8, col:20> 'int' <IntegralCast>
    |     |   | | `-ImplicitCastExpr 0x123828048 <col:8, col:20> 'unsigned char' <LValueToRValue>
    |     |   | |   `-ArraySubscriptExpr 0x123828010 <col:8, col:20> 'unsigned char' lvalue
    |     |   | |     |-ImplicitCastExpr 0x123827ff8 <col:8> 'unsigned char *' <ArrayToPointerDecay>
    |     |   | |     | `-DeclRefExpr 0x123827fb8 <col:8> 'unsigned char[2]' lvalue Var 0x12380e128 'last_chars' 'unsigned char[2]'
    |     |   | |     `-IntegerLiteral 0x123827fd8 <col:19> 'int' 0
    |     |   | `-CharacterLiteral 0x123828030 <col:25> 'int' 13
    |     |   `-CompoundStmt 0x123828120 <col:31, line:30:4>
    |     |     `-ReturnStmt 0x123828110 <line:29:5, col:18>
    |     |       `-BinaryOperator 0x1238280f0 <col:12, col:18> 'const char *' '-'
    |     |         |-ImplicitCastExpr 0x1238280d8 <col:12> 'const char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x123828098 <col:12> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |     |         `-IntegerLiteral 0x1238280b8 <col:18> 'int' 2
    |     `-CaseStmt 0x123828188 <line:32:3, line:33:17>
    |       |-ConstantExpr 0x123828170 <line:32:8> 'int'
    |       | `-CharacterLiteral 0x123828158 <col:8> 'int' 13
    |       `-ReturnStmt 0x123828228 <line:33:4, col:17>
    |         `-BinaryOperator 0x123828208 <col:11, col:17> 'const char *' '-'
    |           |-ImplicitCastExpr 0x1238281f0 <col:11> 'const char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x1238281b0 <col:11> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
    |           `-IntegerLiteral 0x1238281d0 <col:17> 'int' 1
    `-ReturnStmt 0x1238282b0 <line:35:2, col:9>
      `-ImplicitCastExpr 0x123828298 <col:9> 'const char *' <LValueToRValue>
        `-DeclRefExpr 0x123828278 <col:9> 'const char *' lvalue ParmVar 0x12380dcd8 'ptr' 'const char *'
