`-FunctionDecl 0x1438321f8  line:1:17 invalid Balloc 'int *(int)' static
  |-ParmVarDecl 0x1438320f0 <col:24, col:28> col:28 used k 'int'
  `-CompoundStmt 0x145008a48 <line:2:1, line:18:1>
    |-DeclStmt 0x143832328 <line:3:2, col:7>
    | `-VarDecl 0x1438322c0 <col:2, col:6> col:6 used x 'int'
    |-CallExpr 0x143832530 <line:6:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1438324b0 <col:2> 'int ()' Function 0x1438323f8 '_THREAD_PRIVATE_MUTEX_LOCK' 'int ()'
    | `-RecoveryExpr 0x143832510 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x143832780 <line:7:2, line:14:2> has_else
    | |-RecoveryExpr 0x1438325a8 <line:7:6, col:23> '_Bool' contains-errors
    | |-CompoundStmt 0x143832648 <col:26, line:9:2>
    | `-CompoundStmt 0x143832768 <col:9, line:14:2>
    |   `-BinaryOperator 0x1438326f0 <line:10:3, col:12> 'int' '='
    |     |-DeclRefExpr 0x143832658 <col:3> 'int' lvalue Var 0x1438322c0 'x' 'int'
    |     `-BinaryOperator 0x1438326d0 <col:7, col:12> 'int' '<<'
    |       |-IntegerLiteral 0x143832678 <col:7> 'int' 1
    |       `-ImplicitCastExpr 0x1438326b8 <col:12> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x143832698 <col:12> 'int' lvalue ParmVar 0x1438320f0 'k' 'int'
    |-CallExpr 0x145008938 <line:15:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1450088b8 <col:2> 'int ()' Function 0x145008800 '_THREAD_PRIVATE_MUTEX_UNLOCK' 'int ()'
    | `-RecoveryExpr 0x145008918 <col:31> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x145008a38 <line:17:2, col:9>
      `-RecoveryExpr 0x145008a18 <col:9> '<dependent type>' contains-errors lvalue
