`-FunctionDecl 0x11e928268  line:1:1 referenced append_id 'int (char **, int)'
  |-ParmVarDecl 0x11e928108 <col:11, col:18> col:18 used p 'char **'
  |-ParmVarDecl 0x11e928188 <col:21, col:25> col:25 used id 'int'
  `-CompoundStmt 0x11f008238 <line:2:1, line:8:1>
    |-IfStmt 0x11e928440 <line:3:2, line:4:8>
    | |-BinaryOperator 0x11e9283c0 <line:3:6, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x11e9283a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e928368 <col:6> 'int' lvalue ParmVar 0x11e928188 'id' 'int'
    | | `-IntegerLiteral 0x11e928388 <col:11> 'int' 0
    | `-BinaryOperator 0x11e928420 <line:4:3, col:8> 'int' '='
    |   |-DeclRefExpr 0x11e9283e0 <col:3> 'int' lvalue ParmVar 0x11e928188 'id' 'int'
    |   `-IntegerLiteral 0x11e928400 <col:8> 'int' 0
    |-IfStmt 0x11e928620 <line:5:2, line:6:23>
    | |-BinaryOperator 0x11e9284b8 <line:5:6, col:11> 'int' '>'
    | | |-ImplicitCastExpr 0x11e9284a0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e928460 <col:6> 'int' lvalue ParmVar 0x11e928188 'id' 'int'
    | | `-IntegerLiteral 0x11e928480 <col:11> 'int' 9
    | `-CallExpr 0x11e9285d8 <line:6:3, col:23> 'int'
    |   |-ImplicitCastExpr 0x11e9285c0 <col:3> 'int (*)(char **, int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11e9284d8 <col:3> 'int (char **, int)' Function 0x11e928268 'append_id' 'int (char **, int)'
    |   |-ImplicitCastExpr 0x11e928608 <col:13> 'char **' <LValueToRValue>
    |   | `-DeclRefExpr 0x11e9284f8 <col:13> 'char **' lvalue ParmVar 0x11e928108 'p' 'char **'
    |   `-BinaryOperator 0x11e928570 <col:16, col:21> 'int' '/'
    |     |-ImplicitCastExpr 0x11e928558 <col:16> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11e928518 <col:16> 'int' lvalue ParmVar 0x11e928188 'id' 'int'
    |     `-IntegerLiteral 0x11e928538 <col:21> 'int' 10
    `-BinaryOperator 0x11f008218 <line:7:2, col:25> 'char' '='
      |-UnaryOperator 0x11e9286c8 <col:2, col:7> 'char' lvalue prefix '*' cannot overflow
      | `-UnaryOperator 0x11e9286b0 <col:3, col:7> 'char *' postfix '++'
      |   `-ParenExpr 0x11e928690 <col:3, col:6> 'char *' lvalue
      |     `-UnaryOperator 0x11e928678 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
      |       `-ImplicitCastExpr 0x11e928660 <col:5> 'char **' <LValueToRValue>
      |         `-DeclRefExpr 0x11e928640 <col:5> 'char **' lvalue ParmVar 0x11e928108 'p' 'char **'
      `-ImplicitCastExpr 0x11f008200 <col:12, col:25> 'char' <LValueToRValue>
        `-ArraySubscriptExpr 0x11e9287d0 <col:12, col:25> 'char' lvalue
          |-ImplicitCastExpr 0x11e9287b8 <col:12> 'char *' <ArrayToPointerDecay>
          | `-StringLiteral 0x11e928720 <col:12> 'char[4]' lvalue "STR"
          `-BinaryOperator 0x11e928798 <col:18, col:23> 'int' '%'
            |-ImplicitCastExpr 0x11e928780 <col:18> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x11e928740 <col:18> 'int' lvalue ParmVar 0x11e928188 'id' 'int'
            `-IntegerLiteral 0x11e928760 <col:23> 'int' 10
