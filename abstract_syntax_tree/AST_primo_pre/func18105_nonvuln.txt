`-FunctionDecl 0x13780dee8  line:1:5 invalid gnutls_x509_ext_import_name_constraints 'int (const int *, int, unsigned int)'
  |-ParmVarDecl 0x13780dcf0 <col:45, col:68> col:68 invalid ext 'const int *'
  |-ParmVarDecl 0x13780dd70 <line:2:7, col:38> col:38 invalid nc 'int'
  |-ParmVarDecl 0x13780ddf0 <line:3:7, col:20> col:20 used flags 'unsigned int'
  `-CompoundStmt 0x137829b20 <line:4:1, line:47:1>
    |-DeclStmt 0x13780e0c0 <line:5:2, col:17>
    | |-VarDecl 0x13780dfc0 <col:2, col:6> col:6 used result 'int'
    | `-VarDecl 0x13780e040 <col:2, col:14> col:14 used ret 'int'
    |-BinaryOperator 0x1378275c8 <line:8:2, line:9:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x13780e0d8 <line:8:2> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    | `-CallExpr 0x137827590 <col:11, line:9:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13780e250 <line:8:11> 'int ()' Function 0x13780e198 'asn1_create_element' 'int ()'
    |   |-CallExpr 0x137827538 <line:9:7, col:24> 'int'
    |   | `-ImplicitCastExpr 0x137827520 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x13780e350 <col:7> 'int ()' Function 0x13780e298 '_gnutls_get_pkix' 'int ()'
    |   |-StringLiteral 0x137827440 <col:27> 'char[4]' lvalue "STR"
    |   `-UnaryOperator 0x137827578 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x137827558 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x137827960 <line:10:2, line:13:2>
    | |-BinaryOperator 0x137827660 <line:10:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x1378275e8 <col:6> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    | | `-RecoveryExpr 0x137827640 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x137827940 <col:30, line:13:2>
    |   |-CallExpr 0x137827798 <line:11:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x137827780 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x137827760 <col:3> 'int ()' Function 0x1378276a8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x137827930 <line:12:3, col:32>
    |     `-CallExpr 0x1378278f0 <col:10, col:32> 'int'
    |       |-ImplicitCastExpr 0x1378278d8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x137827898 <col:10> 'int ()' Function 0x1378277e0 '_gnutls_asn2err' 'int ()'
    |       `-ImplicitCastExpr 0x137827918 <col:26> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x1378278b8 <col:26> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    |-BinaryOperator 0x137827cb0 <line:15:2, col:60> 'int' contains-errors '='
    | |-DeclRefExpr 0x137827980 <col:2> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    | `-CallExpr 0x137827c70 <col:11, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x137827a80 <col:11> 'int ()' Function 0x1378279c8 'asn1_der_decoding' 'int ()'
    |   |-UnaryOperator 0x137827c38 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x137827c18 <col:30> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x137827af0 <col:34, col:39> '<dependent type>' contains-errors lvalue ->data
    |   | `-RecoveryExpr 0x137827ad0 <col:34> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x137827b58 <col:45, col:50> '<dependent type>' contains-errors lvalue ->size
    |   | `-RecoveryExpr 0x137827b38 <col:45> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x137827c50 <col:56> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x137827f28 <line:16:2, line:20:2>
    | |-BinaryOperator 0x137827d48 <line:16:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x137827cd0 <col:6> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    | | `-RecoveryExpr 0x137827d28 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x137827f00 <col:30, line:20:2>
    |   |-CallExpr 0x137827da0 <line:17:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x137827d88 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x137827d68 <col:3> 'int ()' Function 0x1378276a8 'gnutls_assert' 'int ()'
    |   |-BinaryOperator 0x137827e78 <line:18:3, col:31> 'int' '='
    |   | |-DeclRefExpr 0x137827dc0 <col:3> 'int' lvalue Var 0x13780e040 'ret' 'int'
    |   | `-CallExpr 0x137827e38 <col:9, col:31> 'int'
    |   |   |-ImplicitCastExpr 0x137827e20 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x137827de0 <col:9> 'int ()' Function 0x1378277e0 '_gnutls_asn2err' 'int ()'
    |   |   `-ImplicitCastExpr 0x137827e60 <col:25> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x137827e00 <col:25> 'int' lvalue Var 0x13780dfc0 'result' 'int'
    |   `-GotoStmt 0x137827ee8 <line:19:3, col:8> 'cleanup' 0x137827e98
    |-IfStmt 0x137829728 <line:22:2, line:31:2>
    | |-RecoveryExpr 0x137828100 <line:22:6, line:23:55> '_Bool' contains-errors
    | `-CompoundStmt 0x137829708 <col:58, line:31:2>
    |   |-BinaryOperator 0x1378283a8 <line:24:3, line:26:26> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x137828120 <line:24:3> 'int' lvalue Var 0x13780e040 'ret' 'int'
    |   | `-CallExpr 0x137828370 <line:25:7, line:26:26> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x137828220 <line:25:7> 'int ()' Function 0x137828168 '_gnutls_extract_name_constraints' 'int ()'
    |   |   |-RecoveryExpr 0x137828350 <col:40> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x137828258 <col:44> 'char[4]' lvalue "STR"
    |   |   `-UnaryOperator 0x1378282e0 <line:26:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-CXXDependentScopeMemberExpr 0x137828298 <col:13, col:17> '<dependent type>' contains-errors lvalue ->permitted
    |   |       `-RecoveryExpr 0x137828278 <col:13> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1378296e8 <line:27:3, line:30:3>
    |     |-BinaryOperator 0x137829638 <line:27:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x137829620 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1378283c8 <col:7> 'int' lvalue Var 0x13780e040 'ret' 'int'
    |     | `-IntegerLiteral 0x137829600 <col:13> 'int' 0
    |     `-CompoundStmt 0x1378296c8 <col:16, line:30:3>
    |       |-CallExpr 0x137829690 <line:28:4, col:18> 'int'
    |       | `-ImplicitCastExpr 0x137829678 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       |   `-DeclRefExpr 0x137829658 <col:4> 'int ()' Function 0x1378276a8 'gnutls_assert' 'int ()'
    |       `-GotoStmt 0x1378296b0 <line:29:4, col:9> 'cleanup' 0x137827e98
    |-IfStmt 0x137829930 <line:36:2, line:39:2>
    | |-BinaryOperator 0x137829880 <line:36:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x137829868 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137829828 <col:6> 'int' lvalue Var 0x13780e040 'ret' 'int'
    | | `-IntegerLiteral 0x137829848 <col:12> 'int' 0
    | `-CompoundStmt 0x137829910 <col:15, line:39:2>
    |   |-CallExpr 0x1378298d8 <line:37:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x1378298c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x1378298a0 <col:3> 'int ()' Function 0x1378276a8 'gnutls_assert' 'int ()'
    |   `-GotoStmt 0x1378298f8 <line:38:3, col:8> 'cleanup' 0x137827e98
    |-BinaryOperator 0x137829990 <line:41:2, col:8> 'int' '='
    | |-DeclRefExpr 0x137829950 <col:2> 'int' lvalue Var 0x13780e040 'ret' 'int'
    | `-IntegerLiteral 0x137829970 <col:8> 'int' 0
    |-LabelStmt 0x137829ab8 <line:43:2, col:9> 'cleanup'
    | `-NullStmt 0x137829ab0 <col:9>
    `-ReturnStmt 0x137829b10 <line:46:2, col:9>
      `-ImplicitCastExpr 0x137829af8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x137829ad8 <col:9> 'int' lvalue Var 0x13780e040 'ret' 'int'
