`-FunctionDecl 0x14480dee8  line:1:1 grub_password_get 'int (char *, unsigned int)'
  |-ParmVarDecl 0x14480dd40 <col:20, col:29> col:25 used buf 'char *'
  |-ParmVarDecl 0x14480ddc0 <col:32, col:41> col:41 used buf_size 'unsigned int'
  `-CompoundStmt 0x144827300 <line:2:1, line:37:1>
    |-DeclStmt 0x14480e0a0 <line:3:3, col:23>
    | `-VarDecl 0x14480e000 <col:3, col:22> col:12 used cur_len 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x14480e088 <col:22> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x14480e068 <col:22> 'int' 0
    |-DeclStmt 0x14480e138 <line:4:3, col:10>
    | `-VarDecl 0x14480e0d0 <col:3, col:7> col:7 used key 'int'
    |-WhileStmt 0x144826cb8 <line:6:3, line:29:5>
    | |-IntegerLiteral 0x14480e150 <line:6:10> 'int' 1
    | `-CompoundStmt 0x144826c78 <line:7:5, line:29:5>
    |   |-BinaryOperator 0x14480e348 <line:8:7, col:26> 'int' '='
    |   | |-DeclRefExpr 0x14480e170 <col:7> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | `-CallExpr 0x14480e328 <col:13, col:26> 'int'
    |   |   `-ImplicitCastExpr 0x14480e310 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x14480e2c0 <col:13> 'int ()' Function 0x14480e208 'grub_getkey' 'int ()'
    |   |-IfStmt 0x144826678 <line:9:7, line:10:2>
    |   | |-BinaryOperator 0x144826650 <line:9:11, col:33> 'int' '||'
    |   | | |-BinaryOperator 0x14480e3b8 <col:11, col:18> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x14480e3a0 <col:11> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14480e368 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | | `-CharacterLiteral 0x14480e388 <col:18> 'int' 10
    |   | | `-BinaryOperator 0x144826630 <col:26, col:33> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x144826618 <col:26> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x14480e3d8 <col:26> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | |   `-CharacterLiteral 0x144826600 <col:33> 'int' 13
    |   | `-BreakStmt 0x144826670 <line:10:2>
    |   |-IfStmt 0x1448267a8 <line:12:7, line:16:2>
    |   | |-BinaryOperator 0x1448266e8 <line:12:11, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1448266d0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x144826698 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | `-CharacterLiteral 0x1448266b8 <col:18> 'int' 27
    |   | `-CompoundStmt 0x144826788 <line:13:2, line:16:2>
    |   |   |-BinaryOperator 0x144826760 <line:14:4, col:14> 'unsigned int' '='
    |   |   | |-DeclRefExpr 0x144826708 <col:4> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x144826748 <col:14> 'unsigned int' <IntegralCast>
    |   |   |   `-IntegerLiteral 0x144826728 <col:14> 'int' 0
    |   |   `-BreakStmt 0x144826780 <line:15:4>
    |   |-IfStmt 0x144826898 <line:18:7, line:22:2>
    |   | |-BinaryOperator 0x144826818 <line:18:11, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x144826800 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1448267c8 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | | `-CharacterLiteral 0x1448267e8 <col:18> 'int' 8
    |   | `-CompoundStmt 0x144826878 <line:19:2, line:22:2>
    |   |   |-UnaryOperator 0x144826858 <line:20:4, col:11> 'unsigned int' postfix '--'
    |   |   | `-DeclRefExpr 0x144826838 <col:4> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |   |   `-ContinueStmt 0x144826870 <line:21:4>
    |   |-IfStmt 0x144826a50 <line:24:7, line:25:2>
    |   | |-UnaryOperator 0x144826a30 <line:24:11, col:29> 'int' prefix '!' cannot overflow
    |   | | `-CallExpr 0x1448269f0 <col:12, col:29> 'int'
    |   | |   |-ImplicitCastExpr 0x1448269d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x144826998 <col:12> 'int ()' Function 0x1448268e0 'grub_isprint' 'int ()'
    |   | |   `-ImplicitCastExpr 0x144826a18 <col:26> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x1448269b8 <col:26> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |   | `-ContinueStmt 0x144826a48 <line:25:2>
    |   `-IfStmt 0x144826c58 <line:27:7, line:28:19>
    |     |-BinaryOperator 0x144826b38 <line:27:11, col:25> 'int' '<'
    |     | |-BinaryOperator 0x144826ae0 <col:11, col:21> 'unsigned int' '+'
    |     | | |-ImplicitCastExpr 0x144826ab0 <col:11> 'unsigned int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x144826a70 <col:11> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x144826ac8 <col:21> 'unsigned int' <IntegralCast>
    |     | |   `-IntegerLiteral 0x144826a90 <col:21> 'int' 2
    |     | `-ImplicitCastExpr 0x144826b20 <col:25> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x144826b00 <col:25> 'unsigned int' lvalue ParmVar 0x14480ddc0 'buf_size' 'unsigned int'
    |     `-BinaryOperator 0x144826c38 <line:28:2, col:19> 'char' '='
    |       |-ArraySubscriptExpr 0x144826bc8 <col:2, col:15> 'char' lvalue
    |       | |-ImplicitCastExpr 0x144826bb0 <col:2> 'char *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x144826b58 <col:2> 'char *' lvalue ParmVar 0x14480dd40 'buf' 'char *'
    |       | `-UnaryOperator 0x144826b98 <col:6, col:13> 'unsigned int' postfix '++'
    |       |   `-DeclRefExpr 0x144826b78 <col:6> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |       `-ImplicitCastExpr 0x144826c20 <col:19> 'char' <IntegralCast>
    |         `-ImplicitCastExpr 0x144826c08 <col:19> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x144826be8 <col:19> 'int' lvalue Var 0x14480e0d0 'key' 'int'
    |-CallExpr 0x144826f30 <line:31:3, col:52> 'int'
    | |-ImplicitCastExpr 0x144826f18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144826db8 <col:3> 'int ()' Function 0x144826d00 'grub_memset' 'int ()'
    | |-BinaryOperator 0x144826e48 <col:16, col:22> 'char *' '+'
    | | |-ImplicitCastExpr 0x144826e18 <col:16> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x144826dd8 <col:16> 'char *' lvalue ParmVar 0x14480dd40 'buf' 'char *'
    | | `-ImplicitCastExpr 0x144826e30 <col:22> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x144826df8 <col:22> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    | |-IntegerLiteral 0x144826e68 <col:31> 'int' 0
    | `-BinaryOperator 0x144826ef8 <col:34, col:45> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x144826ec8 <col:34> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x144826e88 <col:34> 'unsigned int' lvalue ParmVar 0x14480ddc0 'buf_size' 'unsigned int'
    |   `-ImplicitCastExpr 0x144826ee0 <col:45> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x144826ea8 <col:45> 'unsigned int' lvalue Var 0x14480e000 'cur_len' 'unsigned int'
    |-CallExpr 0x1448270e8 <line:33:3, col:20> 'int'
    | |-ImplicitCastExpr 0x1448270d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x144827048 <col:3> 'int ()' Function 0x144826f90 'grub_xputs' 'int ()'
    | `-ImplicitCastExpr 0x144827110 <col:15> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1448270b0 <col:15> 'char[4]' lvalue "STR"
    |-CallExpr 0x144827240 <line:34:3, col:17> 'int'
    | `-ImplicitCastExpr 0x144827228 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x144827208 <col:3> 'int ()' Function 0x144827150 'grub_refresh' 'int ()'
    `-ReturnStmt 0x1448272f0 <line:36:3, col:22>
      `-ParenExpr 0x1448272d0 <col:10, col:22> 'int'
        `-BinaryOperator 0x1448272b0 <col:11, col:18> 'int' '!='
          |-ImplicitCastExpr 0x144827298 <col:11> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x144827260 <col:11> 'int' lvalue Var 0x14480e0d0 'key' 'int'
          `-CharacterLiteral 0x144827280 <col:18> 'int' 27
