`-FunctionDecl 0x140128288  line:1:13 invalid read_phdr 'int (int *, int)' static
  |-ParmVarDecl 0x140128128 <col:23, col:31> col:31 referenced invalid bin 'int *'
  |-ParmVarDecl 0x1401281a8 <col:36, col:41> col:41 invalid linux_kernel_hack 'int'
  `-CompoundStmt 0x13800a618 <col:60, line:47:1>
    |-DeclStmt 0x1401283c0 <line:3:2, col:7>
    | `-VarDecl 0x140128358 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x140128470 <line:7:2, col:29>
    | `-VarDecl 0x1401283f0 <col:2, col:13> col:13 invalid is_elf64 'const int'
    |-ForStmt 0x13800a368 <line:10:2, line:38:2>
    | |-BinaryOperator 0x1401284c8 <line:10:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x140128488 <col:7> 'int' lvalue Var 0x140128358 'i' 'int'
    | | `-IntegerLiteral 0x1401284a8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x140128560 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1401284e8 <col:14> 'int' lvalue Var 0x140128358 'i' 'int'
    | | `-RecoveryExpr 0x140128540 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1401285a0 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x140128580 <col:25> 'int' lvalue Var 0x140128358 'i' 'int'
    | `-CompoundStmt 0x13800a320 <col:30, line:38:2>
    |   |-DeclStmt 0x140128658 <line:12:3, col:12>
    |   | `-VarDecl 0x1401285d0 <col:3, col:11> col:7 used j 'int' cinit
    |   |   `-IntegerLiteral 0x140128638 <col:11> 'int' 0
    |   |-DeclStmt 0x140141dc0 <line:13:3, col:67>
    |   | `-VarDecl 0x140128688 <col:3, col:16> col:16 invalid rsize 'const int'
    |   |-DeclStmt 0x140142058 <line:14:3, col:69>
    |   | `-VarDecl 0x140141df0 <col:3, col:7> col:7 used len 'int'
    |   |-IfStmt 0x1401424a0 <line:15:3, line:19:3>
    |   | |-BinaryOperator 0x1401420c8 <line:15:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1401420b0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x140142070 <col:7> 'int' lvalue Var 0x140141df0 'len' 'int'
    |   | | `-IntegerLiteral 0x140142090 <col:13> 'int' 1
    |   | `-CompoundStmt 0x140142480 <col:16, line:19:3>
    |   |   |-CallExpr 0x140142298 <line:16:4, col:22> 'int'
    |   |   | |-ImplicitCastExpr 0x140142280 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1401421c8 <col:4> 'int ()' Function 0x140142110 'R_LOG_ERROR' 'int ()'
    |   |   | `-ImplicitCastExpr 0x1401422c0 <col:17> 'char *' <ArrayToPointerDecay>
    |   |   |   `-StringLiteral 0x140142230 <col:17> 'char[4]' lvalue "STR"
    |   |   `-CallExpr 0x140142440 <line:17:4, col:21> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1401423b8 <col:4> 'int ()' Function 0x140142300 'R_FREE' 'int ()'
    |   |     `-CXXDependentScopeMemberExpr 0x1401423f8 <col:12, col:17> '<dependent type>' contains-errors lvalue ->phdr
    |   |       `-RecoveryExpr 0x1401423d8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1401429a8 <line:21:3, line:23:3>
    |   | |-RecoveryExpr 0x140142978 <line:21:7, col:30> '_Bool' contains-errors
    |   | `-CompoundStmt 0x140142998 <col:39, line:23:3>
    |   |-IfStmt 0x138009258 <line:25:3, line:27:3>
    |   | |-RecoveryExpr 0x1401429c8 <line:25:7> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x138009248 <col:17, line:27:3>
    |   `-IfStmt 0x13800a0a8 <line:33:3, line:36:3>
    |     |-UnaryOperator 0x138009e60 <line:33:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x138009e48 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x138009df8 <col:8> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13800a098 <col:18, line:36:3>
    `-IfStmt 0x13800a5f8 <line:40:2, line:44:2>
      |-RecoveryExpr 0x13800a3c0 <line:40:6, col:27> '_Bool' contains-errors
      `-CompoundStmt 0x13800a5e8 <col:39, line:44:2>
