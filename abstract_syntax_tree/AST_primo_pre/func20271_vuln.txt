`-FunctionDecl 0x128027608  line:1:1 invalid handle_keywordonly_args 'int (struct compiling *, const int *, int, int *, int *)'
  |-ParmVarDecl 0x12800e248 <col:25, col:43> col:43 used c 'struct compiling *'
  |-ParmVarDecl 0x12800e2e0 <col:46, col:58> col:58 invalid n 'const int *'
  |-ParmVarDecl 0x12800e360 <col:61, col:65> col:65 used start 'int'
  |-ParmVarDecl 0x128027418 <line:2:25, col:35> col:35 invalid kwonlyargs 'int *'
  |-ParmVarDecl 0x128027498 <col:47, col:57> col:57 invalid kwdefaults 'int *'
  `-CompoundStmt 0x12802b018 <line:3:1, line:72:1>
    |-DeclStmt 0x1280277c0 <line:8:5, col:18>
    | `-VarDecl 0x128027720 <col:5, col:13> col:9 used i 'int' cinit
    |   `-ImplicitCastExpr 0x1280277a8 <col:13> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x128027788 <col:13> 'int' lvalue ParmVar 0x12800e360 'start' 'int'
    |-DeclStmt 0x128027878 <line:9:5, col:14>
    | `-VarDecl 0x1280277f0 <col:5, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x128027858 <col:13> 'int' 0
    |-IfStmt 0x128027d30 <line:11:5, line:14:5>
    | |-BinaryOperator 0x128027908 <line:11:9, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x128027890 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1280278e8 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128027d10 <col:29, line:14:5>
    |   |-CallExpr 0x128027c90 <line:12:9, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x128027a80 <col:9> 'int ()' Function 0x1280279c8 'ast_error' 'int ()'
    |   | |-DeclRefExpr 0x128027aa0 <col:19> 'struct compiling *' lvalue ParmVar 0x12800e248 'c' 'struct compiling *'
    |   | |-CallExpr 0x128027c00 <col:22, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x128027ba0 <col:22> 'int ()' Function 0x128027ae8 'CHILD' 'int ()'
    |   | | |-RecoveryExpr 0x128027bc0 <col:28> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x128027be0 <col:31> 'int' lvalue ParmVar 0x12800e360 'start' 'int'
    |   | `-StringLiteral 0x128027c70 <col:39> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x128027d00 <line:13:9, col:17>
    |     `-UnaryOperator 0x128027ce8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x128027cc8 <col:17> 'int' 1
    |-CallExpr 0x128027f10 <line:15:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x128027e30 <col:5> 'int ()' Function 0x128027d78 'assert' 'int ()'
    | `-BinaryOperator 0x128027ef0 <col:12, col:26> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x128027e50 <col:12> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x128027ed0 <col:26> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x12802af48 <line:16:5, line:68:5>
    | |-BinaryOperator 0x1280280a0 <line:16:12, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x128027f38 <col:12> 'int' lvalue Var 0x128027720 'i' 'int'
    | | `-CallExpr 0x128028078 <col:16, col:21> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x128028038 <col:16> 'int ()' Function 0x128027f80 'NCH' 'int ()'
    | |   `-RecoveryExpr 0x128028058 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12802af30 <col:24, line:68:5>
    |   `-SwitchStmt 0x1280282d8 <line:18:9, line:67:9>
    |     |-CallExpr 0x1280282b0 <line:18:17, col:24> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x128028230 <col:17> 'int ()' Function 0x128028178 'TYPE' 'int ()'
    |     | `-RecoveryExpr 0x128028290 <col:22> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12802aea8 <col:27, line:67:9>
    |       |-IfStmt 0x12802a070 <line:21:17, line:30:17> has_else
    |       | |-RecoveryExpr 0x128029b30 <line:21:21, col:64> '_Bool' contains-errors
    |       | |-CompoundStmt 0x128029fe0 <col:71, line:27:17>
    |       | | |-IfStmt 0x128029e10 <line:23:21, line:24:30>
    |       | | | |-RecoveryExpr 0x128029d88 <line:23:25, col:26> '_Bool' contains-errors
    |       | | | `-GotoStmt 0x128029df8 <line:24:25, col:30> 'error' 0x128029da8
    |       | | `-CompoundAssignOperator 0x128029fb0 <line:26:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |   |-DeclRefExpr 0x128029f70 <col:21> 'int' lvalue Var 0x128027720 'i' 'int'
    |       | |   `-IntegerLiteral 0x128029f90 <col:26> 'int' 2
    |       | `-CompoundStmt 0x12802a060 <line:28:22, line:30:17>
    |       |-IfStmt 0x12802a200 <line:31:17, line:39:17> has_else
    |       | |-RecoveryExpr 0x12802a0e0 <line:31:21, col:32> '_Bool' contains-errors
    |       | |-CompoundStmt 0x12802a1d8 <col:35, line:36:17>
    |       | | `-IfStmt 0x12802a1b8 <line:34:21, line:35:30>
    |       | |   |-RecoveryExpr 0x12802a180 <line:34:25, col:26> '_Bool' contains-errors
    |       | |   `-GotoStmt 0x12802a1a0 <line:35:25, col:30> 'error' 0x128029da8
    |       | `-CompoundStmt 0x12802a1f0 <line:37:22, line:39:17>
    |       |-IfStmt 0x12802a3a8 <line:42:17, line:43:26>
    |       | |-RecoveryExpr 0x12802a370 <line:42:21, col:22> '_Bool' contains-errors
    |       | `-GotoStmt 0x12802a390 <line:43:21, col:26> 'error' 0x128029da8
    |       |-IfStmt 0x12802a540 <line:44:17, line:45:26>
    |       | |-RecoveryExpr 0x12802a508 <line:44:21, col:53> '_Bool' contains-errors
    |       | `-GotoStmt 0x12802a528 <line:45:21, col:26> 'error' 0x128029da8
    |       |-IfStmt 0x12802a858 <line:48:17, line:49:26>
    |       | |-UnaryOperator 0x12802a828 <line:48:21, col:22> 'int' prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x12802a810 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |       | |   `-DeclRefExpr 0x12802a7c0 <col:22> 'int ()' Function 0x12802a588 'arg' 'int ()'
    |       | `-GotoStmt 0x12802a840 <line:49:21, col:26> 'error' 0x128029da8
    |       |-CallExpr 0x12802a910 <line:50:17, col:50> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12802a878 <col:17> 'int ()' Function 0x128029e58 'asdl_seq_SET' 'int ()'
    |       | |-RecoveryExpr 0x12802a898 <col:30> '<dependent type>' contains-errors lvalue
    |       | |-UnaryOperator 0x12802a8d8 <col:42, col:43> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x12802a8b8 <col:42> 'int' lvalue Var 0x1280277f0 'j' 'int'
    |       | `-DeclRefExpr 0x12802a8f0 <col:47> 'int ()' Function 0x12802a588 'arg' 'int ()'
    |       |-CompoundAssignOperator 0x12802a988 <line:51:17, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x12802a948 <col:17> 'int' lvalue Var 0x128027720 'i' 'int'
    |       | `-IntegerLiteral 0x12802a968 <col:22> 'int' 1
    |       |-IfStmt 0x12802ab28 <line:52:17, line:53:26>
    |       | |-RecoveryExpr 0x12802aa98 <line:52:21, col:42> '_Bool' contains-errors
    |       | `-CompoundAssignOperator 0x12802aaf8 <line:53:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x12802aab8 <col:21> 'int' lvalue Var 0x128027720 'i' 'int'
    |       |   `-IntegerLiteral 0x12802aad8 <col:26> 'int' 1
    |       |-BreakStmt 0x12802ab48 <line:54:17>
    |       |-IfStmt 0x12802ad28 <line:58:17, line:59:26>
    |       | |-UnaryOperator 0x12802acf8 <line:58:21, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x12802ace0 <col:22, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |       | |   `-RecoveryExpr 0x12802acb8 <col:22, col:27> '<dependent type>' contains-errors lvalue
    |       | |     `-DeclRefExpr 0x12802ac98 <col:22> 'int ()' Function 0x12802a588 'arg' 'int ()'
    |       | `-GotoStmt 0x12802ad10 <line:59:21, col:26> 'error' 0x128029da8
    |       |-CompoundAssignOperator 0x12802ad88 <line:60:17, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x12802ad48 <col:17> 'int' lvalue Var 0x128027720 'i' 'int'
    |       | `-IntegerLiteral 0x12802ad68 <col:22> 'int' 1
    |       |-BreakStmt 0x12802adb8 <line:61:17>
    |       |-ReturnStmt 0x12802adf8 <line:63:17, col:24>
    |       | `-ImplicitCastExpr 0x12802ade0 <col:24> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x12802adc0 <col:24> 'int' lvalue Var 0x128027720 'i' 'int'
    |       |-DefaultStmt 0x12802ae70 <line:64:13, col:20>
    |       | `-NullStmt 0x12802ae68 <col:20>
    |       `-GotoStmt 0x12802ae90 <line:66:17, col:22> 'error' 0x128029da8
    |-ReturnStmt 0x12802afa0 <line:69:5, col:12>
    | `-ImplicitCastExpr 0x12802af88 <col:12> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12802af68 <col:12> 'int' lvalue Var 0x128027720 'i' 'int'
    `-LabelStmt 0x12802aff8 <line:70:2, line:71:13> 'error'
      `-ReturnStmt 0x12802afe8 <col:5, col:13>
        `-UnaryOperator 0x12802afd0 <col:12, col:13> 'int' prefix '-'
          `-IntegerLiteral 0x12802afb0 <col:13> 'int' 1
