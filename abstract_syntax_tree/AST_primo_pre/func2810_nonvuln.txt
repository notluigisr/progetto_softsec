`-FunctionDecl 0x11c928288  line:1:7 invalid AllocChunk 'void *(int *, int)'
  |-ParmVarDecl 0x11c928128 <col:18, col:26> col:26 referenced invalid it8 'int *'
  |-ParmVarDecl 0x11c9281a8 <col:31, col:47> col:47 referenced invalid size 'int'
  `-CompoundStmt 0x11c942128 <line:2:1, line:28:1>
    |-BinaryOperator 0x11c928568 <line:6:5, col:29> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11c928378 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11c928358 <col:5> 'int' lvalue ParmVar 0x11c9281a8 'size' 'int'
    | `-CallExpr 0x11c928540 <col:12, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11c928500 <col:12> 'int ()' Function 0x11c928448 '_cmsALIGNMEM' 'int ()'
    |   `-RecoveryExpr 0x11c928520 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11c941e30 <line:8:5, line:21:5>
    | |-BinaryOperator 0x11c928600 <line:8:9, col:16> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x11c928588 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11c9285e0 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11c941e08 <col:22, line:21:5>
    |   |-IfStmt 0x11c9419a8 <line:10:9, line:14:46> has_else
    |   | |-BinaryOperator 0x11c9286f0 <line:10:13, col:43> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x11c928688 <col:13, col:30> '<dependent type>' contains-errors lvalue .BlockSize
    |   | | | `-CXXDependentScopeMemberExpr 0x11c928640 <col:13, col:20> '<dependent type>' contains-errors lvalue ->Allocator
    |   | | |   `-RecoveryExpr 0x11c928620 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x11c9286d0 <col:43> 'int' 0
    |   | |-BinaryOperator 0x11c941860 <line:12:17, col:49> '<dependent type>' contains-errors '='
    |   | | |-CXXDependentScopeMemberExpr 0x11c9287a0 <col:17, col:34> '<dependent type>' contains-errors lvalue .BlockSize
    |   | | | `-CXXDependentScopeMemberExpr 0x11c928758 <col:17, col:24> '<dependent type>' contains-errors lvalue ->Allocator
    |   | | |   `-RecoveryExpr 0x11c928730 <col:17> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x11c928710 <col:17> 'int *' lvalue ParmVar 0x11c928128 'it8' 'int *'
    |   | | `-BinaryOperator 0x11c941840 <col:46, col:49> 'int' '*'
    |   | |   |-IntegerLiteral 0x11c941800 <col:46> 'int' 20
    |   | |   `-IntegerLiteral 0x11c941820 <col:49> 'int' 1024
    |   | `-CompoundAssignOperator 0x11c941978 <line:14:17, col:46> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-CXXDependentScopeMemberExpr 0x11c941910 <col:17, col:33> '<dependent type>' contains-errors lvalue .BlockSize
    |   |   | `-CXXDependentScopeMemberExpr 0x11c9418c8 <col:17, col:23> '<dependent type>' contains-errors lvalue ->Allocator
    |   |   |   `-RecoveryExpr 0x11c9418a0 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x11c941880 <col:17> 'int *' lvalue ParmVar 0x11c928128 'it8' 'int *'
    |   |   `-IntegerLiteral 0x11c941958 <col:46> 'int' 2
    |   |-IfStmt 0x11c941be0 <line:16:9, line:17:45>
    |   | |-BinaryOperator 0x11c941aa8 <line:16:13, col:41> 'int' contains-errors '<'
    |   | | |-CXXDependentScopeMemberExpr 0x11c941a40 <col:13, col:29> '<dependent type>' contains-errors lvalue .BlockSize
    |   | | | `-CXXDependentScopeMemberExpr 0x11c9419f8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->Allocator
    |   | | |   `-RecoveryExpr 0x11c9419d8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x11c941a88 <col:41> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x11c941bc0 <line:17:17, col:45> '<dependent type>' contains-errors '='
    |   |   |-CXXDependentScopeMemberExpr 0x11c941b58 <col:17, col:33> '<dependent type>' contains-errors lvalue .BlockSize
    |   |   | `-CXXDependentScopeMemberExpr 0x11c941b10 <col:17, col:23> '<dependent type>' contains-errors lvalue ->Allocator
    |   |   |   `-RecoveryExpr 0x11c941ae8 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x11c941ac8 <col:17> 'int *' lvalue ParmVar 0x11c928128 'it8' 'int *'
    |   |   `-RecoveryExpr 0x11c941ba0 <col:45> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11c941cf8 <line:19:9, col:32> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x11c941c90 <col:9, col:25> '<dependent type>' contains-errors lvalue .Used
    |     | `-CXXDependentScopeMemberExpr 0x11c941c48 <col:9, col:15> '<dependent type>' contains-errors lvalue ->Allocator
    |     |   `-RecoveryExpr 0x11c941c20 <col:9> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x11c941c00 <col:9> 'int *' lvalue ParmVar 0x11c928128 'it8' 'int *'
    |     `-IntegerLiteral 0x11c941cd8 <col:32> 'int' 0
    `-CompoundAssignOperator 0x11c9420c8 <line:24:5, col:29> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      |-CXXDependentScopeMemberExpr 0x11c942060 <col:5, col:21> '<dependent type>' contains-errors lvalue .Used
      | `-CXXDependentScopeMemberExpr 0x11c942018 <col:5, col:11> '<dependent type>' contains-errors lvalue ->Allocator
      |   `-RecoveryExpr 0x11c941ff0 <col:5> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x11c941fd0 <col:5> 'int *' lvalue ParmVar 0x11c928128 'it8' 'int *'
      `-RecoveryExpr 0x11c9420a8 <col:29> '<dependent type>' contains-errors lvalue
