`-FunctionDecl 0x14b00e008  line:1:1 invalid xmlDictComputeBigQKey 'int (const int *, int, const int *, int, int)'
  |-ParmVarDecl 0x14b00dcf0 <col:23, col:38> col:38 invalid prefix 'const int *'
  |-ParmVarDecl 0x14b00dd70 <col:46, col:50> col:50 used plen 'int'
  |-ParmVarDecl 0x14b00ddf0 <line:2:23, col:38> col:38 invalid name 'const int *'
  |-ParmVarDecl 0x14b00de70 <col:44, col:48> col:48 used len 'int'
  |-ParmVarDecl 0x14b00def0 <col:53, col:57> col:57 used seed 'int'
  `-CompoundStmt 0x14b027820 <line:3:1, line:28:1>
    |-DeclStmt 0x14b00e158 <line:5:5, col:10>
    | `-VarDecl 0x14b00e0f0 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x14b027410 <line:9:5, line:13:5>
    | |-BinaryOperator 0x14b00e1d0 <line:9:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x14b00e190 <col:10> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
    | | `-IntegerLiteral 0x14b00e1b0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14b00e260 <col:16, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x14b00e230 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b00e1f0 <col:16> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
    | | `-ImplicitCastExpr 0x14b00e248 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14b00e210 <col:20> 'int' lvalue ParmVar 0x14b00dd70 'plen' 'int'
    | |-UnaryOperator 0x14b00e2a0 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x14b00e280 <col:26> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
    | `-CompoundStmt 0x14b027400 <col:31, line:13:5>
    `-ForStmt 0x14b027788 <line:18:5, line:22:5>
      |-BinaryOperator 0x14b027550 <line:18:10, col:14> 'int' '='
      | |-DeclRefExpr 0x14b027510 <col:10> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
      | `-IntegerLiteral 0x14b027530 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14b0275e0 <col:16, col:20> 'int' '<'
      | |-ImplicitCastExpr 0x14b0275b0 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14b027570 <col:16> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
      | `-ImplicitCastExpr 0x14b0275c8 <col:20> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14b027590 <col:20> 'int' lvalue ParmVar 0x14b00de70 'len' 'int'
      |-UnaryOperator 0x14b027620 <col:25, col:26> 'int' postfix '++'
      | `-DeclRefExpr 0x14b027600 <col:25> 'int' lvalue Var 0x14b00e0f0 'i' 'int'
      `-CompoundStmt 0x14b027778 <col:30, line:22:5>
