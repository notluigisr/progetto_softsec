`-FunctionDecl 0x121928238  line:1:19 xdigit2bin 'int (char, int)' static inline
  |-ParmVarDecl 0x1219280d0 <col:30, col:35> col:35 used c 'char'
  |-ParmVarDecl 0x121928150 <col:38, col:42> col:42 used delim 'int'
  `-CompoundStmt 0x121941ce8 <line:2:1, line:19:1>
    |-DeclStmt 0x1219283b8 <line:3:2, col:9>
    | `-VarDecl 0x121928350 <col:2, col:6> col:6 used val 'int'
    |-IfStmt 0x121928580 <line:5:2, line:6:10>
    | |-BinaryOperator 0x121928500 <line:5:6, col:25> 'int' '||'
    | | |-BinaryOperator 0x121928458 <col:6, col:11> 'int' '=='
    | | | |-ImplicitCastExpr 0x121928440 <col:6> 'int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x121928410 <col:6> 'char' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1219283d0 <col:6> 'char' lvalue ParmVar 0x1219280d0 'c' 'char'
    | | | `-ImplicitCastExpr 0x121928428 <col:11> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1219283f0 <col:11> 'int' lvalue ParmVar 0x121928150 'delim' 'int'
    | | `-BinaryOperator 0x1219284e0 <col:20, col:25> 'int' '=='
    | |   |-ImplicitCastExpr 0x1219284c8 <col:20> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x1219284b0 <col:20> 'char' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x121928478 <col:20> 'char' lvalue ParmVar 0x1219280d0 'c' 'char'
    | |   `-CharacterLiteral 0x121928498 <col:25> 'int' 0
    | `-ReturnStmt 0x121928570 <line:6:3, col:10>
    |   `-RecoveryExpr 0x121928550 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x121928670 <line:7:2, line:8:10>
    | |-BinaryOperator 0x121928608 <line:7:6, col:11> 'int' '=='
    | | |-ImplicitCastExpr 0x1219285f0 <col:6> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1219285d8 <col:6> 'char' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1219285a0 <col:6> 'char' lvalue ParmVar 0x1219280d0 'c' 'char'
    | | `-CharacterLiteral 0x1219285c0 <col:11> 'int' 58
    | `-ReturnStmt 0x121928660 <line:8:3, col:10>
    |   `-RecoveryExpr 0x121928640 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x121928760 <line:9:2, line:10:10>
    | |-BinaryOperator 0x1219286f8 <line:9:6, col:11> 'int' '=='
    | | |-ImplicitCastExpr 0x1219286e0 <col:6> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1219286c8 <col:6> 'char' <LValueToRValue>
    | | |   `-DeclRefExpr 0x121928690 <col:6> 'char' lvalue ParmVar 0x1219280d0 'c' 'char'
    | | `-CharacterLiteral 0x1219286b0 <col:11> 'int' 46
    | `-ReturnStmt 0x121928750 <line:10:3, col:10>
    |   `-RecoveryExpr 0x121928730 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1219419a0 <line:12:2, col:20> 'int' '='
    | |-DeclRefExpr 0x121928780 <col:2> 'int' lvalue Var 0x121928350 'val' 'int'
    | `-CallExpr 0x121941948 <col:8, col:20> 'int'
    |   |-ImplicitCastExpr 0x121941930 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1219418b8 <col:8> 'int ()' Function 0x121941800 'hex_to_bin' 'int ()'
    |   `-ImplicitCastExpr 0x121941988 <col:19> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x121941970 <col:19> 'char' <LValueToRValue>
    |       `-DeclRefExpr 0x1219418d8 <col:19> 'char' lvalue ParmVar 0x1219280d0 'c' 'char'
    |-IfStmt 0x121941c80 <line:16:2, line:17:10>
    | |-BinaryOperator 0x121941c18 <line:16:6, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x121941c00 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x121941ba8 <col:6> 'int' lvalue ParmVar 0x121928150 'delim' 'int'
    | | `-UnaryOperator 0x121941be8 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x121941bc8 <col:16> 'int' 1
    | `-ReturnStmt 0x121941c70 <line:17:3, col:10>
    |   `-RecoveryExpr 0x121941c50 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x121941cd8 <line:18:2, col:9>
      `-RecoveryExpr 0x121941cb8 <col:9> '<dependent type>' contains-errors lvalue
