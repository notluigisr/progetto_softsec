`-FunctionDecl 0x10380e358  line:1:12 ax25_release 'int (struct socket *)' static
  |-ParmVarDecl 0x10380e248 <col:25, col:40> col:40 used sock 'struct socket *'
  `-CompoundStmt 0x128124aa8 <line:2:1, line:86:1>
    |-DeclStmt 0x103826898 <line:3:2, col:28>
    | |-RecordDecl 0x103826650 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x1038267b8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x103826858 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x103826820 <col:20> 'struct socket *' lvalue ParmVar 0x10380e248 'sock' 'struct socket *'
    |-IfStmt 0x1038269c0 <line:7:2, line:8:10>
    | |-BinaryOperator 0x103826970 <line:7:6, col:12> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1038268f8 <col:6> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | | `-RecoveryExpr 0x103826950 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1038269b0 <line:8:3, col:10>
    |   `-IntegerLiteral 0x103826990 <col:10> 'int' 0
    |-CallExpr 0x103826b78 <line:10:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x103826b60 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x103826af0 <col:2> 'int ()' Function 0x103826a38 'sock_hold' 'int ()'
    | `-ImplicitCastExpr 0x103826ba0 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x103826b10 <col:12> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |-CallExpr 0x103826cf0 <line:11:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x103826cd8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x103826c98 <col:2> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x103826d18 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x103826cb8 <col:12> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |-CallExpr 0x103826e68 <line:12:2, col:16> 'int' contains-errors
    | |-ImplicitCastExpr 0x103826e50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x103826e10 <col:2> 'int ()' Function 0x103826d58 'sock_orphan' 'int ()'
    | `-ImplicitCastExpr 0x103826e90 <col:14> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x103826e30 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |-IfStmt 0x103827580 <line:15:2, line:18:2>
    | |-RecoveryExpr 0x103827098 <line:15:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x103827560 <col:16, line:18:2>
    |   |-CallExpr 0x1038273a8 <line:16:3, col:54> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x103827198 <col:3> 'int ()' Function 0x1038270e0 'dev_put_track' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x1038272e0 <col:17, col:27> '<dependent type>' contains-errors lvalue ->dev
    |   | | `-RecoveryExpr 0x1038272c0 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-UnaryOperator 0x103827390 <col:32, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x103827348 <col:33, col:43> '<dependent type>' contains-errors lvalue ->dev_tracker
    |   |     `-RecoveryExpr 0x103827328 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x103827538 <line:17:3, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1038274b8 <col:3> 'int ()' Function 0x103827400 'ax25_dev_put' 'int ()'
    |     `-RecoveryExpr 0x103827518 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1281247d8 <line:20:2, line:79:2> has_else
    | |-RecoveryExpr 0x128123400 <line:20:6, col:21> '_Bool' contains-errors
    | |-CompoundStmt 0x128124620 <col:37, line:74:2>
    | | `-SwitchStmt 0x128123440 <line:21:3, line:73:3>
    | |   |-RecoveryExpr 0x128123420 <line:21:11, col:17> 'int' contains-errors
    | |   `-CompoundStmt 0x1281245c0 <col:24, line:73:3>
    | |     |-CallExpr 0x1281235a0 <line:23:4, col:19> 'int' contains-errors
    | |     | |-ImplicitCastExpr 0x128123588 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x128123548 <col:4> 'int ()' Function 0x128123490 'release_sock' 'int ()'
    | |     | `-ImplicitCastExpr 0x1281235c8 <col:17> 'struct sock *' contains-errors <LValueToRValue>
    | |     |   `-DeclRefExpr 0x128123568 <col:17> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     |-CallExpr 0x128123758 <line:25:4, col:16> 'int' contains-errors
    | |     | |-ImplicitCastExpr 0x128123740 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x128123700 <col:4> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'
    | |     | `-ImplicitCastExpr 0x128123780 <col:14> 'struct sock *' contains-errors <LValueToRValue>
    | |     |   `-DeclRefExpr 0x128123720 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     |-BreakStmt 0x128123898 <line:27:4>
    | |     |-CallExpr 0x1281239f8 <line:32:4, col:19> 'int' contains-errors
    | |     | |-ImplicitCastExpr 0x1281239e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x1281239a0 <col:4> 'int ()' Function 0x128123490 'release_sock' 'int ()'
    | |     | `-ImplicitCastExpr 0x128123a20 <col:17> 'struct sock *' contains-errors <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1281239c0 <col:17> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     |-CallExpr 0x128123ad0 <line:34:4, col:16> 'int' contains-errors
    | |     | |-ImplicitCastExpr 0x128123ab8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x128123a78 <col:4> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'
    | |     | `-ImplicitCastExpr 0x128123af8 <col:14> 'struct sock *' contains-errors <LValueToRValue>
    | |     |   `-DeclRefExpr 0x128123a98 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     |-BreakStmt 0x128123c50 <line:37:4>
    | |     |-SwitchStmt 0x128123d98 <line:44:4, line:61:4>
    | |     | |-RecoveryExpr 0x128123d78 <line:44:12, col:55> 'int' contains-errors
    | |     | `-CompoundStmt 0x1281240e8 <col:58, line:61:4>
    | |     |   `-BreakStmt 0x1281240e0 <line:54:5>
    | |     |-CallExpr 0x128124448 <line:67:4, col:26> '<dependent type>' contains-errors
    | |     | |-RecoveryExpr 0x128124400 <col:4, col:8> '<dependent type>' contains-errors lvalue
    | |     | | `-DeclRefExpr 0x1281243c0 <col:4> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     | `-DeclRefExpr 0x128124428 <col:24> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    | |     |-BreakStmt 0x128124590 <line:69:4>
    | |     `-DefaultStmt 0x1281245a0 <line:71:3, line:72:4>
    | |       `-BreakStmt 0x128124598 <col:4>
    | `-CompoundStmt 0x1281247c0 <line:74:9, line:79:2>
    |   `-CallExpr 0x128124778 <line:77:3, col:25> '<dependent type>' contains-errors
    |     |-RecoveryExpr 0x128124730 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1281246f8 <col:3> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |     `-DeclRefExpr 0x128124758 <col:23> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |-CallExpr 0x1281248c0 <line:82:2, col:17> 'int' contains-errors
    | |-ImplicitCastExpr 0x1281248a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128124868 <col:2> 'int ()' Function 0x128123490 'release_sock' 'int ()'
    | `-ImplicitCastExpr 0x1281248e8 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x128124888 <col:15> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    |-CallExpr 0x128124a38 <line:83:2, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x128124a20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1281249e0 <col:2> 'int ()' Function 0x128124928 'sock_put' 'int ()'
    | `-ImplicitCastExpr 0x128124a60 <col:11> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x128124a00 <col:11> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'
    `-ReturnStmt 0x128124a98 <line:85:2, col:9>
      `-IntegerLiteral 0x128124a78 <col:9> 'int' 0
