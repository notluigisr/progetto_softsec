`-FunctionDecl 0x14e9281a0  line:1:13 entropy_available 'void (void *)' static
  |-ParmVarDecl 0x14e9280d8 <col:31, col:37> col:37 used opaque 'void *'
  `-CompoundStmt 0x14e942618 <line:2:1, line:17:1>
    |-IfStmt 0x14e942268 <line:8:5, line:10:5>
    | |-BinaryOperator 0x14e942220 <line:8:9, col:29> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14e9287a0 <col:9, col:15> 'int' contains-errors '<'
    | | | |-RecoveryExpr 0x14e928780 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x14e9286d0 <col:15> 'int' 0
    | | `-BinaryOperator 0x14e942200 <col:20, col:29> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x14e9287c0 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14e9287e0 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14e942250 <col:37, line:10:5>
    |   `-ReturnStmt 0x14e942240 <line:9:9>
    `-CallExpr 0x14e942460 <line:11:5, col:23> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14e942368 <col:5> 'int ()' Function 0x14e9422b0 'g_assert' 'int ()'
      `-BinaryOperator 0x14e942440 <col:14, col:22> 'int' contains-errors '!='
        |-RecoveryExpr 0x14e942420 <col:14> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x14e9423c0 <col:21, col:22> 'int' prefix '-'
          `-IntegerLiteral 0x14e9423a0 <col:22> 'int' 1
