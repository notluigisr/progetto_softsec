`-FunctionDecl 0x13e90c088  line:1:12 referenced invalid jas_image_growcmpts 'int (int *, int)' static
  |-ParmVarDecl 0x13e90bf28 <col:32, col:45> col:45 referenced invalid image 'int *'
  |-ParmVarDecl 0x13e90bfa8 <col:52, col:56> col:56 used maxcmpts 'int'
  `-CompoundStmt 0x13e925cf8 <line:2:1, line:17:1>
    |-DeclStmt 0x13e90c240 <line:4:2, col:12>
    | `-VarDecl 0x13e90c1d8 <col:2, col:6> col:6 used cmptno 'int'
    |-IfStmt 0x13e9257b8 <line:8:2, line:10:2>
    | |-UnaryOperator 0x13e925740 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e925728 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e925708 <col:7> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'
    | `-CompoundStmt 0x13e9257a0 <col:17, line:10:2>
    |   `-ReturnStmt 0x13e925790 <line:9:3, col:11>
    |     `-UnaryOperator 0x13e925778 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x13e925758 <col:11> 'int' 1
    |-BinaryOperator 0x13e9258c0 <line:11:2, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13e925820 <col:2, col:9> '<dependent type>' contains-errors lvalue ->cmpts_
    | | `-RecoveryExpr 0x13e9257f8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e9257d8 <col:2> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'
    | `-DeclRefExpr 0x13e9258a0 <col:18> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'
    |-BinaryOperator 0x13e925990 <line:12:2, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13e925928 <col:2, col:9> '<dependent type>' contains-errors lvalue ->maxcmpts_
    | | `-RecoveryExpr 0x13e925900 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e9258e0 <col:2> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'
    | `-DeclRefExpr 0x13e925970 <col:21> 'int' lvalue ParmVar 0x13e90bfa8 'maxcmpts' 'int'
    |-ForStmt 0x13e925c90 <line:13:2, line:15:2>
    | |-BinaryOperator 0x13e925a38 <line:13:7, col:23> 'int' contains-errors '='
    | | |-DeclRefExpr 0x13e9259b0 <col:7> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'
    | | `-CXXDependentScopeMemberExpr 0x13e9259f0 <col:16, col:23> '<dependent type>' contains-errors lvalue ->numcmpts_
    | |   `-RecoveryExpr 0x13e9259d0 <col:16> '<dependent type>' contains-errors lvalue
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13e925ae0 <col:34, col:50> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13e925a58 <col:34> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'
    | | `-CXXDependentScopeMemberExpr 0x13e925a98 <col:43, col:50> '<dependent type>' contains-errors lvalue ->maxcmpts_
    | |   `-RecoveryExpr 0x13e925a78 <col:43> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13e925b20 <col:61, col:63> 'int' prefix '++'
    | | `-DeclRefExpr 0x13e925b00 <col:63> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'
    | `-CompoundStmt 0x13e925c78 <col:71, line:15:2>
    |   `-BinaryOperator 0x13e925c58 <line:14:3, col:27> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x13e925c18 <col:3, col:23> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x13e925be8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x13e925b80 <col:3, col:10> '<dependent type>' contains-errors lvalue ->cmpts_
    |     | |   `-RecoveryExpr 0x13e925b58 <col:3> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x13e925b38 <col:3> 'int *' lvalue ParmVar 0x13e90bf28 'image' 'int *'
    |     | `-ImplicitCastExpr 0x13e925c00 <col:17> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13e925bc8 <col:17> 'int' lvalue Var 0x13e90c1d8 'cmptno' 'int'
    |     `-IntegerLiteral 0x13e925c38 <col:27> 'int' 0
    `-ReturnStmt 0x13e925ce8 <line:16:2, col:9>
      `-IntegerLiteral 0x13e925cc8 <col:9> 'int' 0
