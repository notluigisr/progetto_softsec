`-FunctionDecl 0x13a87bed8  line:1:22 invalid dce110_clock_source_create 'struct clock_source *(struct dc_context *, struct dc_bios *, enum clock_source_id, const struct dce110_clk_src_regs *, int)'
  |-ParmVarDecl 0x13909d2e8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'
  |-ParmVarDecl 0x13a87b8c8 <line:3:2, col:18> col:18 used bios 'struct dc_bios *'
  |-ParmVarDecl 0x13a87ba48 <line:4:2, col:23> col:23 invalid id 'enum clock_source_id'
  |-ParmVarDecl 0x13a87bc18 <line:5:2, col:36> col:36 used regs 'const struct dce110_clk_src_regs *'
  |-ParmVarDecl 0x13a87bcb0 <line:6:2, col:7> col:7 invalid dp_clk_src 'int'
  `-CompoundStmt 0x13b008f00 <line:7:1, line:22:1>
    |-DeclStmt 0x13a87c380 <line:8:2, line:9:53>
    | |-RecordDecl 0x13a87bfa8 <line:8:2, col:9> col:9 struct dce110_clk_src
    | `-VarDecl 0x13a87c118 <col:2, col:25> col:25 used clk_src 'struct dce110_clk_src *'
    |-IfStmt 0x13a87c430 <line:11:2, line:12:10>
    | |-UnaryOperator 0x13a87c3d0 <line:11:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13a87c3b8 <col:7> 'struct dce110_clk_src *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13a87c398 <col:7> 'struct dce110_clk_src *' lvalue Var 0x13a87c118 'clk_src' 'struct dce110_clk_src *'
    | `-ReturnStmt 0x13a87c420 <line:12:3, col:10>
    |   `-RecoveryExpr 0x13a87c400 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b008d30 <line:14:2, line:18:2>
    | |-CallExpr 0x13a87c718 <line:14:6, line:15:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13a87c530 <line:14:6> 'int ()' Function 0x13a87c478 'dce110_clk_src_construct' 'int ()'
    | | |-DeclRefExpr 0x13a87c550 <col:31> 'struct dce110_clk_src *' lvalue Var 0x13a87c118 'clk_src' 'struct dce110_clk_src *'
    | | |-DeclRefExpr 0x13a87c570 <col:40> 'struct dc_context *' lvalue ParmVar 0x13909d2e8 'ctx' 'struct dc_context *'
    | | |-DeclRefExpr 0x13a87c590 <col:45> 'struct dc_bios *' lvalue ParmVar 0x13a87b8c8 'bios' 'struct dc_bios *'
    | | |-RecoveryExpr 0x13a87c5b0 <col:51> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x13a87c5d0 <line:15:4> 'const struct dce110_clk_src_regs *' lvalue ParmVar 0x13a87bc18 'regs' 'const struct dce110_clk_src_regs *'
    | | |-UnaryOperator 0x13a87c6c8 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x13a87c6a8 <col:11> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x13a87c700 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x13a87c6e0 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b008d10 <col:32, line:18:2>
    |   |-BinaryOperator 0x13b008c68 <line:16:3, col:30> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13b008c00 <col:3, col:17> '<dependent type>' contains-errors lvalue .dp_clk_src
    |   | | `-RecoveryExpr 0x13a87c7a8 <col:3, col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13a87c770 <col:3> 'struct dce110_clk_src *' lvalue Var 0x13a87c118 'clk_src' 'struct dce110_clk_src *'
    |   | `-RecoveryExpr 0x13b008c48 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13b008d00 <line:17:3, col:20>
    |     `-UnaryOperator 0x13b008ce8 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x13b008cc0 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13b008c88 <col:11> 'struct dce110_clk_src *' lvalue Var 0x13a87c118 'clk_src' 'struct dce110_clk_src *'
    |-CallExpr 0x13b008e98 <line:20:2, col:20> 'int'
    | `-ImplicitCastExpr 0x13b008e80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13b008e30 <col:2> 'int ()' Function 0x13b008d78 'BREAK_TO_DEBUGGER' 'int ()'
    `-ReturnStmt 0x13b008ef0 <line:21:2, col:9>
      `-RecoveryExpr 0x13b008ed0 <col:9> '<dependent type>' contains-errors lvalue
