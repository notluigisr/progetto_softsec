`-FunctionDecl 0x124128238  line:1:1 yytnamerr 'int (char *, const char *)'
  |-ParmVarDecl 0x1241280d8 <col:12, col:18> col:18 used yyres 'char *'
  |-ParmVarDecl 0x124128158 <col:25, col:37> col:37 used yystr 'const char *'
  `-CompoundStmt 0x1241416a8 <line:2:1, line:37:1>
    |-IfStmt 0x124141200 <line:3:3, line:31:5>
    | |-BinaryOperator 0x1241283d0 <line:3:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x1241283b8 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1241283a0 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x124128370 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x124128358 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x124128338 <col:8> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    | | `-CharacterLiteral 0x124128388 <col:17> 'int' 34
    | `-CompoundStmt 0x1241411d8 <line:4:5, line:31:5>
    |   |-DeclStmt 0x1241284c0 <line:6:7, col:30>
    |   | `-VarDecl 0x124128420 <col:7, col:25> col:19 used yyp 'const char *' cinit
    |   |   `-ImplicitCastExpr 0x1241284a8 <col:25> 'const char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124128488 <col:25> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    |   |-ForStmt 0x124141178 <line:8:7, line:29:4>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | `-SwitchStmt 0x124128558 <line:9:2, line:29:4>
    |   |   |-ImplicitCastExpr 0x124128540 <line:9:10, col:13> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x124128528 <col:10, col:13> 'char' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x124128510 <col:10, col:13> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     `-UnaryOperator 0x1241284f8 <col:11, col:13> 'const char *' prefix '++'
    |   |   |       `-DeclRefExpr 0x1241284d8 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |   `-CompoundStmt 0x124141130 <line:10:4, line:29:4>
    |   |     |-CaseStmt 0x1241285b0 <line:11:4, line:13:11>
    |   |     | |-ConstantExpr 0x124128598 <line:11:9> 'int'
    |   |     | | `-CharacterLiteral 0x124128580 <col:9> 'int' 39
    |   |     | `-CaseStmt 0x124128608 <line:12:4, line:13:11>
    |   |     |   |-ConstantExpr 0x1241285f0 <line:12:9> 'int'
    |   |     |   | `-CharacterLiteral 0x1241285d8 <col:9> 'int' 44
    |   |     |   `-GotoStmt 0x124128680 <line:13:6, col:11> 'do_not_strip_quotes' 0x124128630
    |   |     |-CaseStmt 0x1241286c8 <line:15:4, line:17:13>
    |   |     | |-ConstantExpr 0x1241286b0 <line:15:9> 'int'
    |   |     | | `-CharacterLiteral 0x124128698 <col:9> 'int' 92
    |   |     | `-IfStmt 0x1241287c0 <line:16:6, line:17:13>
    |   |     |   |-BinaryOperator 0x124128788 <line:16:10, col:20> 'int' '!='
    |   |     |   | |-ImplicitCastExpr 0x124128770 <col:10, col:13> 'int' <IntegralCast>
    |   |     |   | | `-ImplicitCastExpr 0x124128758 <col:10, col:13> 'char' <LValueToRValue>
    |   |     |   | |   `-UnaryOperator 0x124128728 <col:10, col:13> 'const char' lvalue prefix '*' cannot overflow
    |   |     |   | |     `-UnaryOperator 0x124128710 <col:11, col:13> 'const char *' prefix '++'
    |   |     |   | |       `-DeclRefExpr 0x1241286f0 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |     |   | `-CharacterLiteral 0x124128740 <col:20> 'int' 92
    |   |     |   `-GotoStmt 0x1241287a8 <line:17:8, col:13> 'do_not_strip_quotes' 0x124128630
    |   |     |-DefaultStmt 0x124140af8 <line:19:4, col:11>
    |   |     | `-NullStmt 0x124140af0 <col:11>
    |   |     |-UnaryOperator 0x124140b38 <line:22:6, col:9> 'const char *' postfix '++'
    |   |     | `-DeclRefExpr 0x124140b18 <col:6> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   |     |-BreakStmt 0x124140b50 <line:23:6>
    |   |     |-CaseStmt 0x124140b88 <line:25:4, <invalid sloc>>
    |   |     | |-ConstantExpr 0x124140b70 <col:9> 'int'
    |   |     | | `-CharacterLiteral 0x124140b58 <col:9> 'int' 34
    |   |     | `-NullStmt 0x124140c88 <<invalid sloc>>
    |   |     `-ReturnStmt 0x124141120 <line:28:6, col:13>
    |   |       `-ImplicitCastExpr 0x124140ce0 <col:13> 'int' <PointerToIntegral>
    |   |         `-ImplicitCastExpr 0x124140cc8 <col:13> 'const char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x124140ca8 <col:13> 'const char *' lvalue Var 0x124128420 'yyp' 'const char *'
    |   `-LabelStmt 0x1241411b8 <line:30:5, col:26> 'do_not_strip_quotes'
    |     `-NullStmt 0x1241411b0 <col:26>
    |-IfStmt 0x124141458 <line:33:3, line:34:27>
    | |-UnaryOperator 0x124141258 <line:33:7, col:9> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x124141240 <col:9> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x124141220 <col:9> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
    | `-ReturnStmt 0x124141448 <line:34:5, col:27>
    |   `-CallExpr 0x124141408 <col:12, col:27> 'int'
    |     |-ImplicitCastExpr 0x1241413f0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124141380 <col:12> 'int ()' Function 0x1241412c8 'yystrlen' 'int ()'
    |     `-ImplicitCastExpr 0x124141430 <col:22> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1241413a0 <col:22> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
    `-ReturnStmt 0x124141698 <line:36:3, col:36>
      `-RecoveryExpr 0x124141668 <col:10, col:36> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1241415d0 <col:10, col:32> 'int'
        | |-ImplicitCastExpr 0x1241415b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x124141558 <col:10> 'int ()' Function 0x1241414a0 'yystpcpy' 'int ()'
        | |-ImplicitCastExpr 0x124141600 <col:20> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x124141578 <col:20> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
        | `-ImplicitCastExpr 0x124141618 <col:27> 'const char *' <LValueToRValue>
        |   `-DeclRefExpr 0x124141598 <col:27> 'const char *' lvalue ParmVar 0x124128158 'yystr' 'const char *'
        `-DeclRefExpr 0x124141630 <col:36> 'char *' lvalue ParmVar 0x1241280d8 'yyres' 'char *'
