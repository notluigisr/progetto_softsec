`-FunctionDecl 0x120128318  line:1:12 invalid obj_trust 'int (int, int *, int)' static
  |-ParmVarDecl 0x1201280d8 <col:22, col:26> col:26 used id 'int'
  |-ParmVarDecl 0x1201281a8 <col:30, col:36> col:36 invalid x 'int *'
  |-ParmVarDecl 0x120128228 <col:39, col:43> col:43 flags 'int'
  `-CompoundStmt 0x120142308 <line:2:1, line:24:1>
    |-DeclStmt 0x120128470 <line:4:5, col:10>
    | `-VarDecl 0x120128408 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x1201285e8 <line:7:5, line:8:16>
    | |-UnaryOperator 0x120128588 <line:7:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x120128570 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x120128550 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1201285d8 <line:8:9, col:16>
    |   `-RecoveryExpr 0x1201285b8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120141ed0 <line:9:5, line:15:5>
    | |-CXXDependentScopeMemberExpr 0x120128688 <line:9:9, col:13> '<dependent type>' contains-errors lvalue ->reject
    | | `-RecoveryExpr 0x120128668 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120141eb8 <col:21, line:15:5>
    |   `-ForStmt 0x120141e80 <line:10:9, line:14:9>
    |     |-BinaryOperator 0x120128710 <line:10:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x1201286d0 <col:14> 'int' lvalue Var 0x120128408 'i' 'int'
    |     | `-IntegerLiteral 0x1201286f0 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x120141a10 <col:21, col:54> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x120128730 <col:21> 'int' lvalue Var 0x120128408 'i' 'int'
    |     | `-CallExpr 0x1201419e8 <col:25, col:54> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x1201418b8 <col:25> 'int ()' Function 0x120141800 'sk_ASN1_OBJECT_num' 'int ()'
    |     |   `-CXXDependentScopeMemberExpr 0x1201419a0 <col:44, col:48> '<dependent type>' contains-errors lvalue ->reject
    |     |     `-RecoveryExpr 0x120141980 <col:44> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x120141a50 <col:57, col:58> 'int' postfix '++'
    |     | `-DeclRefExpr 0x120141a30 <col:57> 'int' lvalue Var 0x120128408 'i' 'int'
    |     `-CompoundStmt 0x120141e68 <col:62, line:14:9>
    |       `-IfStmt 0x120141e48 <line:12:13, line:13:24>
    |         |-BinaryOperator 0x120141de0 <line:12:17, col:37> 'int' contains-errors '=='
    |         | |-CallExpr 0x120141db8 <col:17, col:32> '<dependent type>' contains-errors
    |         | | |-DeclRefExpr 0x120141cf8 <col:17> 'int ()' Function 0x120141c40 'OBJ_obj2nid' 'int ()'
    |         | | `-RecoveryExpr 0x120141d98 <col:29> '<dependent type>' contains-errors lvalue
    |         | `-DeclRefExpr 0x120141d58 <col:37> 'int' lvalue ParmVar 0x1201280d8 'id' 'int'
    |         `-ReturnStmt 0x120141e38 <line:13:17, col:24>
    |           `-RecoveryExpr 0x120141e18 <col:24> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1201422e8 <line:16:5, line:22:5>
      |-CXXDependentScopeMemberExpr 0x120141f70 <line:16:9, col:13> '<dependent type>' contains-errors lvalue ->trust
      | `-RecoveryExpr 0x120141f50 <col:9> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1201422d0 <col:20, line:22:5>
        `-ForStmt 0x120142298 <line:17:9, line:21:9>
          |-BinaryOperator 0x120141ff8 <line:17:14, col:18> 'int' '='
          | |-DeclRefExpr 0x120141fb8 <col:14> 'int' lvalue Var 0x120128408 'i' 'int'
          | `-IntegerLiteral 0x120141fd8 <col:18> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x120142190 <col:21, col:53> 'int' contains-errors '<'
          | |-DeclRefExpr 0x120142018 <col:21> 'int' lvalue Var 0x120128408 'i' 'int'
          | `-CallExpr 0x120142168 <col:25, col:53> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x120142038 <col:25> 'int ()' Function 0x120141800 'sk_ASN1_OBJECT_num' 'int ()'
          |   `-CXXDependentScopeMemberExpr 0x120142120 <col:44, col:48> '<dependent type>' contains-errors lvalue ->trust
          |     `-RecoveryExpr 0x120142100 <col:44> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x1201421d0 <col:56, col:57> 'int' postfix '++'
          | `-DeclRefExpr 0x1201421b0 <col:56> 'int' lvalue Var 0x120128408 'i' 'int'
          `-CompoundStmt 0x120142288 <col:61, line:21:9>
