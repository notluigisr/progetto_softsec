`-FunctionDecl 0x12f00ddf8  line:1:12 invalid generate_key 'int (int *)' static
  |-ParmVarDecl 0x12f00dd28 <col:25, col:29> col:29 referenced invalid dh 'int *'
  `-CompoundStmt 0x12f029e00 <line:2:1, line:79:1>
    |-DeclStmt 0x12f00df48 <line:3:5, col:15>
    | `-VarDecl 0x12f00dec0 <col:5, col:14> col:9 used ok 'int' cinit
    |   `-IntegerLiteral 0x12f00df28 <col:14> 'int' 0
    |-DeclStmt 0x12f00e000 <line:4:5, col:29>
    | `-VarDecl 0x12f00df78 <col:5, col:28> col:9 used generate_new_key 'int' cinit
    |   `-IntegerLiteral 0x12f00dfe0 <col:28> 'int' 0
    |-DeclStmt 0x12f00e098 <line:5:5, col:15>
    | `-VarDecl 0x12f00e030 <col:5, col:14> col:14 used l 'unsigned int'
    |-IfStmt 0x12f027ea8 <line:11:5, line:12:14>
    | |-BinaryOperator 0x12f027e20 <line:11:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12f00e3d8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f027e00 <col:16> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x12f027e90 <line:12:9, col:14> 'err' 0x12f027e40
    |-IfStmt 0x12f0282b8 <line:14:5, line:20:9> has_else
    | |-BinaryOperator 0x12f027f88 <line:14:9, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12f027ee8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->priv_key
    | | | `-RecoveryExpr 0x12f027ec8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12f027f68 <col:25> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12f028228 <col:31, line:19:5>
    | | |-IfStmt 0x12f0281a8 <line:16:9, line:17:18>
    | | | |-BinaryOperator 0x12f028170 <line:16:13, col:25> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x12f028130 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x12f028150 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x12f028190 <line:17:13, col:18> 'err' 0x12f027e40
    | | `-BinaryOperator 0x12f028208 <line:18:9, col:28> 'int' '='
    | |   |-DeclRefExpr 0x12f0281c8 <col:9> 'int' lvalue Var 0x12f00df78 'generate_new_key' 'int'
    | |   `-IntegerLiteral 0x12f0281e8 <col:28> 'int' 1
    | `-NullStmt 0x12f0282b0 <line:20:9>
    |-IfStmt 0x12f0284a8 <line:22:5, line:27:9> has_else
    | |-RecoveryExpr 0x12f028350 <line:22:9, col:24> '_Bool' contains-errors
    | |-CompoundStmt 0x12f028420 <col:30, line:26:5>
    | | `-IfStmt 0x12f028400 <line:24:9, line:25:18>
    | |   |-RecoveryExpr 0x12f0283c8 <line:24:13, col:24> '_Bool' contains-errors
    | |   `-GotoStmt 0x12f0283e8 <line:25:13, col:18> 'err' 0x12f027e40
    | `-NullStmt 0x12f0284a0 <line:27:9>
    |-IfStmt 0x12f0287b8 <line:29:5, line:34:5>
    | |-RecoveryExpr 0x12f028540 <line:29:9, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x12f0287a0 <col:43, line:34:5>
    |   `-IfStmt 0x12f028780 <line:32:9, line:33:18>
    |     |-RecoveryExpr 0x12f028748 <line:32:13, col:14> '_Bool' contains-errors
    |     `-GotoStmt 0x12f028768 <line:33:13, col:18> 'err' 0x12f027e40
    |-IfStmt 0x12f029218 <line:36:5, line:49:5>
    | |-ImplicitCastExpr 0x12f0287f8 <line:36:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f0287d8 <col:9> 'int' lvalue Var 0x12f00df78 'generate_new_key' 'int'
    | `-CompoundStmt 0x12f029200 <col:27, line:49:5>
    |   `-IfStmt 0x12f0291d0 <line:37:9, line:48:9> has_else
    |     |-CXXDependentScopeMemberExpr 0x12f028830 <line:37:13, col:17> '<dependent type>' contains-errors lvalue ->q
    |     | `-RecoveryExpr 0x12f028810 <col:13> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x12f028c90 <col:20, line:43:9>
    |     | `-DoStmt 0x12f028c70 <line:38:13, line:42:63>
    |     |   |-CompoundStmt 0x12f028a38 <line:38:16, line:41:13>
    |     |   | `-IfStmt 0x12f028a18 <line:39:17, line:40:26>
    |     |   |   |-RecoveryExpr 0x12f0289e0 <line:39:21, col:51> '_Bool' contains-errors
    |     |   |   `-GotoStmt 0x12f028a00 <line:40:21, col:26> 'err' 0x12f027e40
    |     |   `-RecoveryExpr 0x12f028c50 <line:42:20, col:62> '_Bool' contains-errors
    |     `-CompoundStmt 0x12f0291b0 <line:43:16, line:48:9>
    |       |-BinaryOperator 0x12f028fd8 <line:45:13, col:64> 'unsigned int' contains-errors '='
    |       | |-DeclRefExpr 0x12f028ca8 <col:13> 'unsigned int' lvalue Var 0x12f00e030 'l' 'unsigned int'
    |       | `-ConditionalOperator 0x12f028fa8 <col:17, col:64> '<dependent type>' contains-errors
    |       |   |-CXXDependentScopeMemberExpr 0x12f028ce8 <col:17, col:21> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x12f028cc8 <col:17> '<dependent type>' contains-errors lvalue
    |       |   |-CXXDependentScopeMemberExpr 0x12f028d50 <col:30, col:34> '<dependent type>' contains-errors lvalue ->length
    |       |   | `-RecoveryExpr 0x12f028d30 <col:30> '<dependent type>' contains-errors lvalue
    |       |   `-BinaryOperator 0x12f028f88 <col:43, col:64> '<dependent type>' contains-errors '-'
    |       |     |-CallExpr 0x12f028f40 <col:43, col:60> '<dependent type>' contains-errors
    |       |     | |-DeclRefExpr 0x12f028eb8 <col:43> 'int ()' Function 0x12f028e00 'BN_num_bits' 'int ()'
    |       |     | `-CXXDependentScopeMemberExpr 0x12f028ef8 <col:55, col:59> '<dependent type>' contains-errors lvalue ->p
    |       |     |   `-RecoveryExpr 0x12f028ed8 <col:55> '<dependent type>' contains-errors lvalue
    |       |     `-IntegerLiteral 0x12f028f68 <col:64> 'int' 1
    |       `-IfStmt 0x12f029190 <line:46:13, line:47:22>
    |         |-RecoveryExpr 0x12f029158 <line:46:17, col:43> '_Bool' contains-errors
    |         `-GotoStmt 0x12f029178 <line:47:17, col:22> 'err' 0x12f027e40
    |-CompoundStmt 0x12f029720 <line:51:5, line:64:5>
    | |-IfStmt 0x12f0294f8 <line:55:9, line:60:13> has_else
    | | |-RecoveryExpr 0x12f0292c0 <line:55:13, col:55> '_Bool' contains-errors
    | | |-CompoundStmt 0x12f0294e0 <col:58, line:59:9>
    | | `-NullStmt 0x12f0294f0 <line:60:13>
    | `-IfStmt 0x12f029700 <line:62:9, line:63:18>
    |   |-RecoveryExpr 0x12f0296c8 <line:62:13, col:76> '_Bool' contains-errors
    |   `-GotoStmt 0x12f0296e8 <line:63:13, col:18> 'err' 0x12f027e40
    |-BinaryOperator 0x12f0298a0 <line:68:5, col:10> 'int' '='
    | |-DeclRefExpr 0x12f029860 <col:5> 'int' lvalue Var 0x12f00dec0 'ok' 'int'
    | `-IntegerLiteral 0x12f029880 <col:10> 'int' 1
    |-LabelStmt 0x12f029a40 <line:69:2, col:5> 'err'
    | `-NullStmt 0x12f029a38 <col:5>
    `-ReturnStmt 0x12f029de8 <line:78:5, col:15>
      `-ImplicitCastExpr 0x12f029dd0 <col:12, col:15> 'int' <LValueToRValue>
        `-ParenExpr 0x12f029db0 <col:12, col:15> 'int' lvalue
          `-DeclRefExpr 0x12f029d90 <col:13> 'int' lvalue Var 0x12f00dec0 'ok' 'int'
