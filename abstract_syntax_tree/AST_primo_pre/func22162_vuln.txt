`-FunctionDecl 0x13b128268  line:1:1 babel_packet_examin 'int (const unsigned char *, int)'
  |-ParmVarDecl 0x13b128108 <col:21, col:42> col:42 used packet 'const unsigned char *'
  |-ParmVarDecl 0x13b128188 <col:50, col:54> col:54 used packetlen 'int'
  `-CompoundStmt 0x13b809008 <line:2:1, line:34:1>
    |-DeclStmt 0x13b1284b8 <line:3:5, col:28>
    | |-VarDecl 0x13b128380 <col:5, col:18> col:14 used i 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x13b128408 <col:18> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13b1283e8 <col:18> 'int' 0
    | `-VarDecl 0x13b128438 <col:5, col:21> col:21 used bodylen 'unsigned int'
    |-DeclStmt 0x13b128550 <line:4:5, col:33>
    | `-VarDecl 0x13b1284e8 <col:5, col:26> col:26 used message 'const unsigned char *'
    |-DeclStmt 0x13b128680 <line:5:5, col:28>
    | |-VarDecl 0x13b128580 <col:5, col:19> col:19 used type 'unsigned char'
    | `-VarDecl 0x13b128600 <col:5, col:25> col:25 used len 'unsigned char'
    |-IfStmt 0x13b140b58 <line:7:5, line:8:16>
    | |-BinaryOperator 0x13b140b08 <line:7:8, col:57> 'int' '||'
    | | |-BinaryOperator 0x13b140a00 <col:8, col:38> 'int' '||'
    | | | |-BinaryOperator 0x13b1286f0 <col:8, col:20> 'int' '<'
    | | | | |-ImplicitCastExpr 0x13b1286d8 <col:8> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x13b128698 <col:8> 'int' lvalue ParmVar 0x13b128188 'packetlen' 'int'
    | | | | `-IntegerLiteral 0x13b1286b8 <col:20> 'int' 4
    | | | `-BinaryOperator 0x13b1287d8 <col:25, col:38> 'int' '!='
    | | |   |-ImplicitCastExpr 0x13b1287c0 <col:25, col:33> 'int' <IntegralCast>
    | | |   | `-ImplicitCastExpr 0x13b1287a8 <col:25, col:33> 'unsigned char' <LValueToRValue>
    | | |   |   `-ArraySubscriptExpr 0x13b128768 <col:25, col:33> 'const unsigned char' lvalue
    | | |   |     |-ImplicitCastExpr 0x13b128750 <col:25> 'const unsigned char *' <LValueToRValue>
    | | |   |     | `-DeclRefExpr 0x13b128710 <col:25> 'const unsigned char *' lvalue ParmVar 0x13b128108 'packet' 'const unsigned char *'
    | | |   |     `-IntegerLiteral 0x13b128730 <col:32> 'int' 0
    | | |   `-IntegerLiteral 0x13b128788 <col:38> 'int' 42
    | | `-BinaryOperator 0x13b140ae8 <col:44, col:57> 'int' '!='
    | |   |-ImplicitCastExpr 0x13b140ad0 <col:44, col:52> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x13b140ab8 <col:44, col:52> 'unsigned char' <LValueToRValue>
    | |   |   `-ArraySubscriptExpr 0x13b140a78 <col:44, col:52> 'const unsigned char' lvalue
    | |   |     |-ImplicitCastExpr 0x13b140a60 <col:44> 'const unsigned char *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x13b140a20 <col:44> 'const unsigned char *' lvalue ParmVar 0x13b128108 'packet' 'const unsigned char *'
    | |   |     `-IntegerLiteral 0x13b140a40 <col:51> 'int' 1
    | |   `-IntegerLiteral 0x13b140a98 <col:57> 'int' 2
    | `-ReturnStmt 0x13b140b48 <line:8:9, col:16>
    |   `-IntegerLiteral 0x13b140b28 <col:16> 'int' 1
    |-CallExpr 0x13b140da8 <line:9:5, col:33> 'int'
    | |-ImplicitCastExpr 0x13b140d90 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13b140ca0 <col:5> 'int ()' Function 0x13b140be8 'DO_NTOHS' 'int ()'
    | |-ImplicitCastExpr 0x13b140dd8 <col:14> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13b140cc0 <col:14> 'unsigned int' lvalue Var 0x13b128438 'bodylen' 'unsigned int'
    | `-BinaryOperator 0x13b140d38 <col:23, col:32> 'const unsigned char *' '+'
    |   |-ImplicitCastExpr 0x13b140d20 <col:23> 'const unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b140ce0 <col:23> 'const unsigned char *' lvalue ParmVar 0x13b128108 'packet' 'const unsigned char *'
    |   `-IntegerLiteral 0x13b140d00 <col:32> 'int' 2
    |-WhileStmt 0x13b808fb8 <line:10:5, line:32:5>
    | |-BinaryOperator 0x13b140e60 <line:10:12, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x13b140e30 <col:12> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b140df0 <col:12> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x13b140e48 <col:16> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b140e10 <col:16> 'unsigned int' lvalue Var 0x13b128438 'bodylen' 'unsigned int'
    | `-CompoundStmt 0x13b808f68 <col:24, line:32:5>
    |   |-BinaryOperator 0x13b140f70 <line:11:9, col:32> 'const unsigned char *' '='
    |   | |-DeclRefExpr 0x13b140e80 <col:9> 'const unsigned char *' lvalue Var 0x13b1284e8 'message' 'const unsigned char *'
    |   | `-BinaryOperator 0x13b140f50 <col:19, col:32> 'const unsigned char *' '+'
    |   |   |-BinaryOperator 0x13b140ef8 <col:19, col:28> 'const unsigned char *' '+'
    |   |   | |-ImplicitCastExpr 0x13b140ee0 <col:19> 'const unsigned char *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x13b140ea0 <col:19> 'const unsigned char *' lvalue ParmVar 0x13b128108 'packet' 'const unsigned char *'
    |   |   | `-IntegerLiteral 0x13b140ec0 <col:28> 'int' 4
    |   |   `-ImplicitCastExpr 0x13b140f38 <col:32> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13b140f18 <col:32> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    |   |-BinaryOperator 0x13b141040 <line:12:9, col:25> 'unsigned char' '='
    |   | |-DeclRefExpr 0x13b140f90 <col:9> 'unsigned char' lvalue Var 0x13b128580 'type' 'unsigned char'
    |   | `-ImplicitCastExpr 0x13b141028 <col:16, col:25> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x13b141008 <col:16, col:25> 'const unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x13b140ff0 <col:16> 'const unsigned char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13b140fb0 <col:16> 'const unsigned char *' lvalue Var 0x13b1284e8 'message' 'const unsigned char *'
    |   |     `-IntegerLiteral 0x13b140fd0 <col:24> 'int' 0
    |   |-IfStmt 0x13b141158 <line:13:9, line:16:9>
    |   | |-BinaryOperator 0x13b1410d8 <line:13:12, col:20> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x13b141060 <col:12> 'unsigned char' lvalue Var 0x13b128580 'type' 'unsigned char'
    |   | | `-RecoveryExpr 0x13b1410b8 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13b141138 <col:34, line:16:9>
    |   |   |-UnaryOperator 0x13b141118 <line:14:13, col:14> 'unsigned int' postfix '++'
    |   |   | `-DeclRefExpr 0x13b1410f8 <col:13> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    |   |   `-ContinueStmt 0x13b141130 <line:15:13>
    |   |-IfStmt 0x13b1414b0 <line:17:9, line:20:9>
    |   | |-BinaryOperator 0x13b141240 <line:17:12, col:20> 'int' '>'
    |   | | |-BinaryOperator 0x13b1411e8 <col:12, col:16> 'unsigned int' '+'
    |   | | | |-ImplicitCastExpr 0x13b1411b8 <col:12> 'unsigned int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13b141178 <col:12> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    |   | | | `-ImplicitCastExpr 0x13b1411d0 <col:16> 'unsigned int' <IntegralCast>
    |   | | |   `-IntegerLiteral 0x13b141198 <col:16> 'int' 1
    |   | | `-ImplicitCastExpr 0x13b141228 <col:20> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13b141208 <col:20> 'unsigned int' lvalue Var 0x13b128438 'bodylen' 'unsigned int'
    |   | `-CompoundStmt 0x13b141490 <col:29, line:20:9>
    |   |   |-CallExpr 0x13b141430 <line:18:13, col:44> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13b141340 <col:13> 'int ()' Function 0x13b141288 'debugf' 'int ()'
    |   |   | |-RecoveryExpr 0x13b141410 <col:20> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x13b1413c0 <col:39> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13b141480 <line:19:13, col:20>
    |   |     `-IntegerLiteral 0x13b141460 <col:20> 'int' 1
    |   |-BinaryOperator 0x13b141580 <line:21:9, col:24> 'unsigned char' '='
    |   | |-DeclRefExpr 0x13b1414d0 <col:9> 'unsigned char' lvalue Var 0x13b128600 'len' 'unsigned char'
    |   | `-ImplicitCastExpr 0x13b141568 <col:15, col:24> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x13b141548 <col:15, col:24> 'const unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x13b141530 <col:15> 'const unsigned char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13b1414f0 <col:15> 'const unsigned char *' lvalue Var 0x13b1284e8 'message' 'const unsigned char *'
    |   |     `-IntegerLiteral 0x13b141510 <col:23> 'int' 1
    |   |-IfStmt 0x13b1417c8 <line:22:9, line:25:9>
    |   | |-BinaryOperator 0x13b141680 <line:22:12, col:22> 'int' '>'
    |   | | |-BinaryOperator 0x13b141628 <col:12, col:16> 'unsigned int' '+'
    |   | | | |-ImplicitCastExpr 0x13b1415e0 <col:12> 'unsigned int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13b1415a0 <col:12> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    |   | | | `-ImplicitCastExpr 0x13b141610 <col:16> 'unsigned int' <IntegralCast>
    |   | | |   `-ImplicitCastExpr 0x13b1415f8 <col:16> 'unsigned char' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x13b1415c0 <col:16> 'unsigned char' lvalue Var 0x13b128600 'len' 'unsigned char'
    |   | | `-ImplicitCastExpr 0x13b141668 <col:22> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x13b141648 <col:22> 'unsigned int' lvalue Var 0x13b128438 'bodylen' 'unsigned int'
    |   | `-CompoundStmt 0x13b1417a8 <col:31, line:25:9>
    |   |   |-CallExpr 0x13b141748 <line:23:13, col:44> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13b1416a0 <col:13> 'int ()' Function 0x13b141288 'debugf' 'int ()'
    |   |   | |-RecoveryExpr 0x13b141728 <col:20> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x13b1416d8 <col:39> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13b141798 <line:24:13, col:20>
    |   |     `-IntegerLiteral 0x13b141778 <col:20> 'int' 1
    |   |-IfStmt 0x13b808e50 <line:27:9, line:30:9>
    |   | |-RecoveryExpr 0x13b1418d0 <line:27:12, col:84> '_Bool' contains-errors
    |   | `-CompoundStmt 0x13b808e30 <col:87, line:30:9>
    |   |   |-CallExpr 0x13b1419c0 <line:28:13, col:50> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13b1418f0 <col:13> 'int ()' Function 0x13b141288 'debugf' 'int ()'
    |   |   | |-RecoveryExpr 0x13b1419a0 <col:20> '<dependent type>' contains-errors lvalue
    |   |   | |-StringLiteral 0x13b141928 <col:39> 'char[4]' lvalue "STR"
    |   |   | `-DeclRefExpr 0x13b141948 <col:46> 'unsigned char' lvalue Var 0x13b128580 'type' 'unsigned char'
    |   |   `-ReturnStmt 0x13b808e20 <line:29:13, col:20>
    |   |     `-IntegerLiteral 0x13b808e00 <col:20> 'int' 1
    |   `-CompoundAssignOperator 0x13b808f38 <line:31:9, col:20> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x13b808e70 <col:9> 'unsigned int' lvalue Var 0x13b128380 'i' 'unsigned int'
    |     `-ImplicitCastExpr 0x13b808f20 <col:14, col:20> 'unsigned int' <IntegralCast>
    |       `-BinaryOperator 0x13b808f00 <col:14, col:20> 'int' '+'
    |         |-ImplicitCastExpr 0x13b808ee8 <col:14> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x13b808ed0 <col:14> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x13b808e90 <col:14> 'unsigned char' lvalue Var 0x13b128600 'len' 'unsigned char'
    |         `-IntegerLiteral 0x13b808eb0 <col:20> 'int' 2
    `-ReturnStmt 0x13b808ff8 <line:33:5, col:12>
      `-IntegerLiteral 0x13b808fd8 <col:12> 'int' 0
