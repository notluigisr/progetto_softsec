`-FunctionDecl 0x152140a88  line:1:1 do_ipt_get_ctl 'int (struct sock *, int, int)'
  |-ParmVarDecl 0x152128648 <col:16, col:29> col:29 used sk 'struct sock *'
  |-ParmVarDecl 0x1521286c8 <col:33, col:37> col:37 used cmd 'int'
  |-ParmVarDecl 0x152128740 <col:42, col:47> col:47 __user 'int'
  `-CompoundStmt 0x153809550 <line:2:1, line:49:1>
    |-DeclStmt 0x152140c10 <line:3:2, col:9>
    | `-VarDecl 0x152140ba8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x152140ed0 <line:5:2, line:6:11>
    | |-UnaryOperator 0x152140e10 <line:5:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x152140de8 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x152140d50 <col:7> 'int ()' Function 0x152140c98 'capable' 'int ()'
    | |   `-RecoveryExpr 0x152140dc8 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x152140ec0 <line:6:3, col:11>
    |   `-UnaryOperator 0x152140ea8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x152140e90 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x152140e70 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x152140f28 <line:8:2, line:46:2>
    | |-ImplicitCastExpr 0x152140f10 <line:8:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x152140ef0 <col:10> 'int' lvalue ParmVar 0x1521286c8 'cmd' 'int'
    | `-CompoundStmt 0x1538094c8 <col:15, line:46:2>
    |   |-BinaryOperator 0x152141418 <line:10:3, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x152140f68 <col:3> 'int' lvalue Var 0x152140ba8 'ret' 'int'
    |   | `-CallExpr 0x1521413d8 <col:9, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x152141068 <col:9> 'int ()' Function 0x152140fb0 'get_info' 'int ()'
    |   |   |-CallExpr 0x152141358 <col:18, col:29> 'int'
    |   |   | |-ImplicitCastExpr 0x152141340 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x152141168 <col:18> 'int ()' Function 0x1521410b0 'sock_net' 'int ()'
    |   |   | `-ImplicitCastExpr 0x152141380 <col:27> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x152141188 <col:27> 'struct sock *' lvalue ParmVar 0x152128648 'sk' 'struct sock *'
    |   |   |-RecoveryExpr 0x152141398 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x1521413b8 <col:38> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x152141268 <col:43> 'int' 0
    |   |-BreakStmt 0x152141438 <line:11:3>
    |   |-BinaryOperator 0x1521417c0 <line:14:3, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x152141458 <col:3> 'int' lvalue Var 0x152140ba8 'ret' 'int'
    |   | `-CallExpr 0x152141788 <col:9, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x152141558 <col:9> 'int ()' Function 0x1521414a0 'get_entries' 'int ()'
    |   |   |-CallExpr 0x152141708 <col:21, col:32> 'int'
    |   |   | |-ImplicitCastExpr 0x1521416f0 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x152141578 <col:21> 'int ()' Function 0x1521410b0 'sock_net' 'int ()'
    |   |   | `-ImplicitCastExpr 0x152141730 <col:30> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x152141598 <col:30> 'struct sock *' lvalue ParmVar 0x152128648 'sk' 'struct sock *'
    |   |   |-RecoveryExpr 0x152141748 <col:35> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x152141768 <col:41> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x1521417e0 <line:15:3>
    |   |-CompoundStmt 0x153809290 <line:18:35, line:41:2>
    |   | |-DeclStmt 0x152141998 <line:19:3, col:29>
    |   | | |-RecordDecl 0x152141818 <col:3, col:10> col:10 struct xt_get_revision
    |   | | `-VarDecl 0x152141918 <col:3, col:26> col:26 invalid rev 'struct xt_get_revision'
    |   | |-DeclStmt 0x153808868 <line:20:3, col:13>
    |   | | `-VarDecl 0x153808800 <col:3, col:7> col:7 used target 'int'
    |   | |-IfStmt 0x153808ad8 <line:22:3, line:25:3>
    |   | | |-BinaryOperator 0x153808998 <line:22:7, col:25> 'int' contains-errors '!='
    |   | | | |-UnaryOperator 0x153808980 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | | `-ImplicitCastExpr 0x153808968 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | |   `-RecoveryExpr 0x153808948 <col:8> '<dependent type>' contains-errors lvalue
    |   | | | `-UnaryExprOrTypeTraitExpr 0x153808908 <col:15, col:25> 'unsigned long' contains-errors sizeof
    |   | | |   `-ParenExpr 0x1538088e8 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   | | |     `-RecoveryExpr 0x1538088c8 <col:22> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x153808ab8 <col:28, line:25:3>
    |   | |   |-BinaryOperator 0x153808a90 <line:23:4, col:11> 'int' contains-errors '='
    |   | |   | |-DeclRefExpr 0x1538089b8 <col:4> 'int' lvalue Var 0x152140ba8 'ret' 'int'
    |   | |   | `-UnaryOperator 0x153808a78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |   |   `-ImplicitCastExpr 0x153808a60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   |     `-RecoveryExpr 0x153808a40 <col:11> '<dependent type>' contains-errors lvalue
    |   | |   `-BreakStmt 0x153808ab0 <line:24:4>
    |   | |-IfStmt 0x153808d10 <line:26:3, line:29:3>
    |   | | |-RecoveryExpr 0x153808cb0 <line:26:7, col:50> '_Bool' contains-errors
    |   | | `-CompoundStmt 0x153808cf8 <col:53, line:29:3>
    |   | |   `-BreakStmt 0x153808cf0 <line:28:4>
    |   | |-IfStmt 0x153808e30 <line:31:3, line:34:13> has_else
    |   | | |-RecoveryExpr 0x153808d50 <line:31:7, col:14> '_Bool' contains-errors
    |   | | |-BinaryOperator 0x153808db0 <line:32:4, col:13> 'int' '='
    |   | | | |-DeclRefExpr 0x153808d70 <col:4> 'int' lvalue Var 0x153808800 'target' 'int'
    |   | | | `-IntegerLiteral 0x153808d90 <col:13> 'int' 1
    |   | | `-BinaryOperator 0x153808e10 <line:34:4, col:13> 'int' '='
    |   | |   |-DeclRefExpr 0x153808dd0 <col:4> 'int' lvalue Var 0x153808800 'target' 'int'
    |   | |   `-IntegerLiteral 0x153808df0 <col:13> 'int' 0
    |   | `-BreakStmt 0x153809288 <line:40:3>
    |   `-DefaultStmt 0x153809488 <line:43:2, line:44:22>
    |     `-CallExpr 0x153809428 <col:3, col:22> 'int'
    |       |-ImplicitCastExpr 0x153809410 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1538093b0 <col:3> 'int ()' Function 0x1538092f8 'duprintf' 'int ()'
    |       |-ImplicitCastExpr 0x153809458 <col:12> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x1538093d0 <col:12> 'char[4]' lvalue "STR"
    |       `-ImplicitCastExpr 0x153809470 <col:19> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x1538093f0 <col:19> 'int' lvalue ParmVar 0x1521286c8 'cmd' 'int'
    `-ReturnStmt 0x153809540 <line:48:2, col:9>
      `-ImplicitCastExpr 0x153809528 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x153809508 <col:9> 'int' lvalue Var 0x152140ba8 'ret' 'int'
