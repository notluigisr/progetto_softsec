`-FunctionDecl 0x15280de88  line:1:1 JVM_SocketAvailable 'int (int, int *)'
  |-ParmVarDecl 0x15280dcf0 <col:21, col:26> col:26 used descriptor 'int'
  |-ParmVarDecl 0x15280dda8 <col:38, col:44> col:44 used result 'int *'
  `-CompoundStmt 0x1538082a8 <line:2:1, line:30:1>
    |-DeclStmt 0x15280e028 <line:3:2, col:17>
    | `-VarDecl 0x15280dfa0 <col:2, col:16> col:7 used retVal 'int' cinit
    |   `-IntegerLiteral 0x15280e008 <col:16> 'int' 0
    |-CallExpr 0x15280e1f8 <line:5:2, col:49> 'int'
    | |-ImplicitCastExpr 0x15280e1e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15280e150 <col:2> 'int ()' Function 0x15280e098 'Trc_SC_SocketAvailable_Entry' 'int ()'
    | |-ImplicitCastExpr 0x15280e228 <col:31> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15280e170 <col:31> 'int' lvalue ParmVar 0x15280dcf0 'descriptor' 'int'
    | `-ImplicitCastExpr 0x15280e240 <col:43> 'int *' <LValueToRValue>
    |   `-DeclRefExpr 0x15280e190 <col:43> 'int *' lvalue ParmVar 0x15280dda8 'result' 'int *'
    |-CallExpr 0x153808200 <line:27:2, col:45> 'int'
    | |-ImplicitCastExpr 0x15280e3c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15280e338 <col:2> 'int ()' Function 0x15280e280 'Trc_SC_SocketAvailable_Exit' 'int ()'
    | |-ImplicitCastExpr 0x153808230 <col:30> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15280e358 <col:30> 'int' lvalue Var 0x15280dfa0 'retVal' 'int'
    | `-ImplicitCastExpr 0x153808248 <col:38, col:39> 'int' <LValueToRValue>
    |   `-UnaryOperator 0x15280e3b0 <col:38, col:39> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x15280e398 <col:39> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x15280e378 <col:39> 'int *' lvalue ParmVar 0x15280dda8 'result' 'int *'
    `-ReturnStmt 0x153808298 <line:29:2, col:9>
      `-ImplicitCastExpr 0x153808280 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x153808260 <col:9> 'int' lvalue Var 0x15280dfa0 'retVal' 'int'
