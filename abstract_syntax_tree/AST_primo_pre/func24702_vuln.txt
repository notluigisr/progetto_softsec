`-FunctionDecl 0x13a9281a8  line:1:1 one_one_mapping 'int (const char *)'
  |-ParmVarDecl 0x13a9280d8 <col:17, col:29> col:29 used mapping 'const char *'
  `-CompoundStmt 0x13b0095e8 <line:2:1, line:17:1>
    |-IfStmt 0x13b009580 <line:5:5, line:15:5>
    | |-CallExpr 0x13a928458 <line:5:9, col:29> 'int'
    | | |-ImplicitCastExpr 0x13a928440 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13a9283d0 <col:9> 'int ()' Function 0x13a928318 'VALID_STRING' 'int ()'
    | | `-ImplicitCastExpr 0x13a928480 <col:22> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13a9283f0 <col:22> 'const char *' lvalue ParmVar 0x13a9280d8 'mapping' 'const char *'
    | `-CompoundStmt 0x13b009560 <col:32, line:15:5>
    |   |-DeclStmt 0x13a928538 <line:6:2, col:11>
    |   | `-VarDecl 0x13a9284b0 <col:2, col:10> col:6 used n 'int' cinit
    |   |   `-IntegerLiteral 0x13a928518 <col:10> 'int' 0
    |   `-WhileStmt 0x13b009540 <line:7:2, line:14:2>
    |     |-BinaryOperator 0x13a928628 <line:7:9, col:23> 'int' '!='
    |     | |-ImplicitCastExpr 0x13a928610 <col:9, col:18> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x13a9285f8 <col:9, col:18> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x13a9285c0 <col:9, col:18> 'const char' lvalue
    |     | |     |-ImplicitCastExpr 0x13a928590 <col:9> 'const char *' <LValueToRValue>
    |     | |     | `-DeclRefExpr 0x13a928550 <col:9> 'const char *' lvalue ParmVar 0x13a9280d8 'mapping' 'const char *'
    |     | |     `-ImplicitCastExpr 0x13a9285a8 <col:17> 'int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x13a928570 <col:17> 'int' lvalue Var 0x13a9284b0 'n' 'int'
    |     | `-CharacterLiteral 0x13a9285e0 <col:23> 'int' 0
    |     `-CompoundStmt 0x13b009520 <col:29, line:14:2>
    |       |-IfStmt 0x13b009490 <line:8:6, line:12:6>
    |       | |-BinaryOperator 0x13b009438 <line:8:10, line:9:30> 'int' '&&'
    |       | | |-CallExpr 0x13b009200 <line:8:10, col:27> 'int'
    |       | | | |-ImplicitCastExpr 0x13a9287d8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x13a928728 <col:10> 'int ()' Function 0x13a928670 'isLine' 'int ()'
    |       | | | `-ImplicitCastExpr 0x13b009240 <col:17, col:26> 'int' <IntegralCast>
    |       | | |   `-ImplicitCastExpr 0x13b009228 <col:17, col:26> 'char' <LValueToRValue>
    |       | | |     `-ArraySubscriptExpr 0x13a9287b8 <col:17, col:26> 'const char' lvalue
    |       | | |       |-ImplicitCastExpr 0x13a928788 <col:17> 'const char *' <LValueToRValue>
    |       | | |       | `-DeclRefExpr 0x13a928748 <col:17> 'const char *' lvalue ParmVar 0x13a9280d8 'mapping' 'const char *'
    |       | | |       `-ImplicitCastExpr 0x13a9287a0 <col:25> 'int' <LValueToRValue>
    |       | | |         `-DeclRefExpr 0x13a928768 <col:25> 'int' lvalue Var 0x13a9284b0 'n' 'int'
    |       | | `-BinaryOperator 0x13b009418 <line:9:3, col:30> 'int' '!='
    |       | |   |-ImplicitCastExpr 0x13b0093e8 <col:3, col:12> 'int' <IntegralCast>
    |       | |   | `-ImplicitCastExpr 0x13b0093b8 <col:3, col:12> 'char' <LValueToRValue>
    |       | |   |   `-ArraySubscriptExpr 0x13b0092c8 <col:3, col:12> 'const char' lvalue
    |       | |   |     |-ImplicitCastExpr 0x13b009298 <col:3> 'const char *' <LValueToRValue>
    |       | |   |     | `-DeclRefExpr 0x13b009258 <col:3> 'const char *' lvalue ParmVar 0x13a9280d8 'mapping' 'const char *'
    |       | |   |     `-ImplicitCastExpr 0x13b0092b0 <col:11> 'int' <LValueToRValue>
    |       | |   |       `-DeclRefExpr 0x13b009278 <col:11> 'int' lvalue Var 0x13a9284b0 'n' 'int'
    |       | |   `-ImplicitCastExpr 0x13b009400 <col:17, col:30> 'int' <IntegralCast>
    |       | |     `-ImplicitCastExpr 0x13b0093d0 <col:17, col:30> 'char' <LValueToRValue>
    |       | |       `-ArraySubscriptExpr 0x13b009398 <col:17, col:30> 'const char' lvalue
    |       | |         |-ImplicitCastExpr 0x13b009380 <col:17> 'const char *' <LValueToRValue>
    |       | |         | `-DeclRefExpr 0x13b0092e8 <col:17> 'const char *' lvalue ParmVar 0x13a9280d8 'mapping' 'const char *'
    |       | |         `-BinaryOperator 0x13b009360 <col:25, col:29> 'int' '+'
    |       | |           |-ImplicitCastExpr 0x13b009348 <col:25> 'int' <LValueToRValue>
    |       | |           | `-DeclRefExpr 0x13b009308 <col:25> 'int' lvalue Var 0x13a9284b0 'n' 'int'
    |       | |           `-IntegerLiteral 0x13b009328 <col:29> 'int' 1
    |       | `-CompoundStmt 0x13b009478 <col:33, line:12:6>
    |       |   `-BreakStmt 0x13b009470 <line:11:3>
    |       `-CompoundAssignOperator 0x13b0094f0 <line:13:6, col:11> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x13b0094b0 <col:6> 'int' lvalue Var 0x13a9284b0 'n' 'int'
    |         `-IntegerLiteral 0x13b0094d0 <col:11> 'int' 2
    `-ReturnStmt 0x13b0095d8 <line:16:5, col:12>
      `-RecoveryExpr 0x13b0095b8 <col:12> '<dependent type>' contains-errors lvalue
