`-FunctionDecl 0x140026aa8  line:1:19 check_entry_size_and_hooks 'int (struct arpt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)' static inline
  |-ParmVarDecl 0x14000e248 <col:46, col:65> col:65 used e 'struct arpt_entry *'
  |-ParmVarDecl 0x140026628 <line:2:11, col:33> col:33 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x1400266d8 <line:3:11, col:32> col:32 used base 'const unsigned char *'
  |-ParmVarDecl 0x140026758 <line:4:11, col:32> col:32 used limit 'const unsigned char *'
  |-ParmVarDecl 0x140026808 <line:5:11, col:31> col:31 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x140026888 <line:6:11, col:31> col:31 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x140026908 <line:7:11, col:24> col:24 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x14002bc58 <line:8:1, line:51:1>
    |-DeclStmt 0x140026c50 <line:9:2, col:16>
    | `-VarDecl 0x140026be8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x140026ce8 <line:10:2, col:9>
    | `-VarDecl 0x140026c80 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x140027370 <line:12:2, line:17:2>
    | |-RecoveryExpr 0x140027010 <line:12:6, line:14:44> '_Bool' contains-errors
    | `-CompoundStmt 0x140027350 <col:51, line:17:2>
    |   |-CallExpr 0x140027248 <line:15:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x140027230 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x140027160 <col:3> 'int ()' Function 0x1400270a8 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x140027278 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1400271c0 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x140027290 <col:19> 'struct arpt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1400271e0 <col:19> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x140027340 <line:16:3, col:11>
    |     `-UnaryOperator 0x140027328 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x140027310 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1400272f0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14002a500 <line:19:2, line:24:2>
    | |-RecoveryExpr 0x140027508 <line:19:6, line:20:65> '_Bool' contains-errors
    | `-CompoundStmt 0x14002a4e0 <col:68, line:24:2>
    |   |-CallExpr 0x14002a400 <line:21:3, line:22:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x140027528 <line:21:3> 'int ()' Function 0x1400270a8 'duprintf' 'int ()'
    |   | |-StringLiteral 0x140027548 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x140027568 <line:22:5> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |   | `-RecoveryExpr 0x1400275c0 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x140027588 <col:8> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |   `-ReturnStmt 0x14002a4d0 <line:23:3, col:11>
    |     `-UnaryOperator 0x14002a4b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x14002a4a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x14002a480 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14002a6b8 <line:26:2, col:21> 'int' '='
    | |-DeclRefExpr 0x14002a520 <col:2> 'int' lvalue Var 0x140026c80 'err' 'int'
    | `-CallExpr 0x14002a678 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x14002a660 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14002a620 <col:8> 'int ()' Function 0x14002a568 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x14002a6a0 <col:20> 'struct arpt_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x14002a640 <col:20> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |-IfStmt 0x14002a758 <line:27:2, line:28:10>
    | |-ImplicitCastExpr 0x14002a6f8 <line:27:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14002a6d8 <col:6> 'int' lvalue Var 0x140026c80 'err' 'int'
    | `-ReturnStmt 0x14002a748 <line:28:3, col:10>
    |   `-ImplicitCastExpr 0x14002a730 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14002a710 <col:10> 'int' lvalue Var 0x140026c80 'err' 'int'
    |-ForStmt 0x14002b968 <line:31:2, line:45:2>
    | |-BinaryOperator 0x14002a7d0 <line:31:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x14002a778 <col:7> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x14002a7b8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14002a798 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14002a868 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14002a7f0 <col:14> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x14002a848 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14002a8a8 <col:35, col:36> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x14002a888 <col:35> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    | `-CompoundStmt 0x14002b940 <col:40, line:45:2>
    |   |-IfStmt 0x14002aa08 <line:32:3, line:33:4>
    |   | |-UnaryOperator 0x14002a9e8 <line:32:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x14002a9c8 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x14002a9a8 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x14002a978 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x14002a8c0 <col:9> 'unsigned int' lvalue ParmVar 0x140026908 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x14002a990 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x14002a958 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x14002a938 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x14002a8e0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x14002a920 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x14002a900 <col:29> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x14002aa00 <line:33:4>
    |   |-IfStmt 0x14002ad58 <line:34:3, line:35:43>
    |   | |-BinaryOperator 0x14002abb8 <line:34:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x14002aad8 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x14002aa78 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x14002aa60 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x14002aa28 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |   | | | `-ImplicitCastExpr 0x14002aac0 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14002aaa0 <col:28> 'const unsigned char *' lvalue ParmVar 0x1400266d8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x14002aba0 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x14002ab88 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x14002ab68 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x14002ab38 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x14002aaf8 <col:36> 'const unsigned int *' lvalue ParmVar 0x140026808 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x14002ab50 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14002ab18 <col:49> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x14002ad38 <line:35:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x14002ac88 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x14002ac58 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x14002ac10 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x14002abd8 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x140026628 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x14002ac70 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14002ac38 <col:24> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x14002ad18 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x14002ace8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14002aca8 <col:29> 'const unsigned int *' lvalue ParmVar 0x140026808 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x14002ad00 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14002acc8 <col:42> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |   `-IfStmt 0x14002b920 <line:36:3, line:44:3>
    |     |-BinaryOperator 0x14002af08 <line:36:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x14002ae28 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x14002adc8 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x14002adb0 <col:24> 'struct arpt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x14002ad78 <col:24> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |     | | `-ImplicitCastExpr 0x14002ae10 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x14002adf0 <col:28> 'const unsigned char *' lvalue ParmVar 0x1400266d8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x14002aef0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x14002aed8 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x14002aeb8 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x14002ae88 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x14002ae48 <col:36> 'const unsigned int *' lvalue ParmVar 0x140026888 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x14002aea0 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x14002ae68 <col:47> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |     `-CompoundStmt 0x14002b900 <col:51, line:44:3>
    |       |-IfStmt 0x14002b350 <line:37:4, line:42:4>
    |       | |-UnaryOperator 0x14002b0a0 <line:37:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x14002b060 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x14002b048 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x14002b008 <col:9> 'int ()' Function 0x14002af50 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x14002b088 <col:25> 'struct arpt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x14002b028 <col:25> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    |       | `-CompoundStmt 0x14002b330 <col:29, line:42:4>
    |       |   |-CallExpr 0x14002b248 <line:38:5, line:40:12> 'int'
    |       |   | |-ImplicitCastExpr 0x14002b230 <line:38:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x14002b198 <col:5> 'int ()' Function 0x14002b0e0 'pr_debug' 'int ()'
    |       |   | `-ImplicitCastExpr 0x14002b270 <col:14, line:40:7> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x14002b200 <line:38:14, line:40:7> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x14002b320 <line:41:5, col:13>
    |       |     `-UnaryOperator 0x14002b308 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x14002b2f0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x14002b2d0 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x14002b8e0 <line:43:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x14002b830 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x14002b800 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x14002b3a8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x14002b370 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x140026628 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x14002b818 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x14002b3d0 <col:23> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x14002b8c0 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x14002b890 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x14002b850 <col:28> 'const unsigned int *' lvalue ParmVar 0x140026888 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x14002b8a8 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x14002b870 <col:39> 'unsigned int' lvalue Var 0x140026be8 'h' 'unsigned int'
    |-BinaryOperator 0x14002bc08 <line:49:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14002bbc0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14002bb88 <col:2> 'struct arpt_entry *' lvalue ParmVar 0x14000e248 'e' 'struct arpt_entry *'
    | `-IntegerLiteral 0x14002bbe8 <col:16> 'int' 0
    `-ReturnStmt 0x14002bc48 <line:50:2, col:9>
      `-IntegerLiteral 0x14002bc28 <col:9> 'int' 0
