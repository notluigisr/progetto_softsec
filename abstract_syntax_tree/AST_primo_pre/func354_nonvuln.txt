`-FunctionDecl 0x15282b898  line:1:12 invalid isofs_get_block 'int (struct inode *, int, struct buffer_head *, int)' static
  |-ParmVarDecl 0x15280e248 <col:28, col:42> col:42 used inode 'struct inode *'
  |-ParmVarDecl 0x15280e2e0 <col:49, col:58> col:58 invalid iblock 'int'
  |-ParmVarDecl 0x15282b6c8 <line:2:7, col:27> col:27 used bh_result 'struct buffer_head *'
  |-ParmVarDecl 0x15282b748 <col:38, col:42> col:42 used create 'int'
  `-CompoundStmt 0x15282c038 <line:3:1, line:13:1>
    |-DeclStmt 0x15282b9e0 <line:4:2, col:9>
    | `-VarDecl 0x15282b978 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x15282bc88 <line:6:2, line:9:2>
    | |-ImplicitCastExpr 0x15282ba18 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15282b9f8 <col:6> 'int' lvalue ParmVar 0x15282b748 'create' 'int'
    | `-CompoundStmt 0x15282bc70 <col:14, line:9:2>
    |   `-ReturnStmt 0x15282bc60 <line:8:3, col:11>
    |     `-UnaryOperator 0x15282bc48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x15282bc30 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x15282bc10 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15282bf08 <line:11:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x15282bca8 <col:2> 'int' lvalue Var 0x15282b978 'ret' 'int'
    | `-CallExpr 0x15282bec8 <col:8, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15282bda8 <col:8> 'int ()' Function 0x15282bcf0 'isofs_get_blocks' 'int ()'
    |   |-DeclRefExpr 0x15282bdc8 <col:25> 'struct inode *' lvalue ParmVar 0x15280e248 'inode' 'struct inode *'
    |   |-RecoveryExpr 0x15282bde8 <col:32> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x15282be90 <col:40, col:41> 'struct buffer_head **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x15282be08 <col:41> 'struct buffer_head *' lvalue ParmVar 0x15282b6c8 'bh_result' 'struct buffer_head *'
    |   `-IntegerLiteral 0x15282bea8 <col:52> 'int' 1
    `-ReturnStmt 0x15282c028 <line:12:2, col:25>
      `-ConditionalOperator 0x15282bff8 <col:9, col:25> 'int'
        |-BinaryOperator 0x15282bf80 <col:9, col:15> 'int' '<'
        | |-ImplicitCastExpr 0x15282bf68 <col:9> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x15282bf28 <col:9> 'int' lvalue Var 0x15282b978 'ret' 'int'
        | `-IntegerLiteral 0x15282bf48 <col:15> 'int' 0
        |-ImplicitCastExpr 0x15282bfe0 <col:19> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x15282bfa0 <col:19> 'int' lvalue Var 0x15282b978 'ret' 'int'
        `-IntegerLiteral 0x15282bfc0 <col:25> 'int' 0
