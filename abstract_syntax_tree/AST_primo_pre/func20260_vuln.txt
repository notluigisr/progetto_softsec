`-FunctionDecl 0x131927da8  line:1:7 invalid sqlite3CreateColumnExpr 'int *(int *, int *, int, int)'
  |-ParmVarDecl 0x131927b28 <col:31, col:40> col:40 invalid db 'int *'
  |-ParmVarDecl 0x131927ba8 <col:44, col:53> col:53 invalid pSrc 'int *'
  |-ParmVarDecl 0x131927c28 <col:59, col:63> col:63 used iSrc 'int'
  |-ParmVarDecl 0x131927ca8 <col:69, col:73> col:73 used iCol 'int'
  `-CompoundStmt 0x131942010 <col:78, line:17:1>
    `-IfStmt 0x131941ff0 <line:3:3, line:15:3>
      |-RecoveryExpr 0x1319280d0 <line:3:7> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x131941fd0 <col:10, line:15:3>
        |-DeclStmt 0x1319413c8 <line:4:5, col:48>
        | |-RecordDecl 0x1319280f0 <col:5, col:12> col:12 struct SrcList_item
        | `-VarDecl 0x131941258 <col:5, col:47> col:26 used pItem 'struct SrcList_item *' cinit
        |   `-UnaryOperator 0x131941398 <col:34, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-ArraySubscriptExpr 0x131941378 <col:35, col:47> '<dependent type>' contains-errors lvalue
        |       |-ImplicitCastExpr 0x131941348 <col:35, col:41> '<dependent type>' contains-errors <LValueToRValue>
        |       | `-CXXDependentScopeMemberExpr 0x1319412e0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->a
        |       |   `-RecoveryExpr 0x1319412c0 <col:35> '<dependent type>' contains-errors lvalue
        |       `-ImplicitCastExpr 0x131941360 <col:43> 'int' <LValueToRValue>
        |         `-DeclRefExpr 0x131941328 <col:43> 'int' lvalue ParmVar 0x131927c28 'iSrc' 'int'
        `-IfStmt 0x131941fa0 <line:7:5, line:14:5> has_else
          |-BinaryOperator 0x131941af0 <line:7:9, col:27> 'int' contains-errors '=='
          | |-CXXDependentScopeMemberExpr 0x131941aa8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->iPKey
          | | `-CXXDependentScopeMemberExpr 0x131941a60 <col:9, col:14> '<dependent type>' contains-errors lvalue .pTab
          | |   `-CXXDependentScopeMemberExpr 0x131941a18 <col:9, col:12> '<dependent type>' contains-errors lvalue ->y
          | |     `-RecoveryExpr 0x1319419f8 <col:9> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x1319419b8 <col:27> 'int' lvalue ParmVar 0x131927ca8 'iCol' 'int'
          |-CompoundStmt 0x131941b48 <col:33, line:9:5>
          `-CompoundStmt 0x131941f80 <col:10, line:14:5>
            |-CallExpr 0x131941d30 <line:11:7, col:27> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x131941c50 <col:7> 'int ()' Function 0x131941b98 'testcase' 'int ()'
            | `-BinaryOperator 0x131941d10 <col:17, col:23> 'int' contains-errors '=='
            |   |-DeclRefExpr 0x131941c70 <col:17> 'int' lvalue ParmVar 0x131927ca8 'iCol' 'int'
            |   `-RecoveryExpr 0x131941cf0 <col:23> '<dependent type>' contains-errors lvalue
            `-CallExpr 0x131941e98 <line:12:7, col:29> '<dependent type>' contains-errors
              |-DeclRefExpr 0x131941d58 <col:7> 'int ()' Function 0x131941b98 'testcase' 'int ()'
              `-BinaryOperator 0x131941e78 <col:17, col:27> 'int' contains-errors '=='
                |-DeclRefExpr 0x131941d78 <col:17> 'int' lvalue ParmVar 0x131927ca8 'iCol' 'int'
                `-BinaryOperator 0x131941e58 <col:23, col:27> '<dependent type>' contains-errors '-'
                  |-RecoveryExpr 0x131941e38 <col:23> '<dependent type>' contains-errors lvalue
                  `-IntegerLiteral 0x131941db0 <col:27> 'int' 1
