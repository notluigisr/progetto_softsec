`-FunctionDecl 0x14a00ddc8  line:1:1 invalid write_vector_vector 'int (int)'
  |-ParmVarDecl 0x14a00dcf0 <col:21, <invalid sloc>> col:30 invalid 'int'
  `-CompoundStmt 0x14a00e320 <line:4:1, line:15:1>
    `-ForStmt 0x14a00e2e8 <line:7:5, line:13:5>
      |-DeclStmt 0x14a00df18 <line:7:10, col:20>
      | `-VarDecl 0x14a00de90 <col:10, col:19> col:14 used i1 'int' cinit
      |   `-IntegerLiteral 0x14a00def8 <col:19> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14a00dfa8 <col:22, col:27> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14a00df30 <col:22> 'int' lvalue Var 0x14a00de90 'i1' 'int'
      | `-RecoveryExpr 0x14a00df88 <col:27> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14a00dfe8 <col:36, col:38> 'int' prefix '++'
      | `-DeclRefExpr 0x14a00dfc8 <col:38> 'int' lvalue Var 0x14a00de90 'i1' 'int'
      `-CompoundStmt 0x14a00e2d8 <line:8:5, line:13:5>
