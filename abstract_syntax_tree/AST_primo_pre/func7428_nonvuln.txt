`-FunctionDecl 0x12c1283d8  line:1:8 invalid writeJsonObjElm 'int (int *, const char *, const void *, const int *)' static
  |-ParmVarDecl 0x12c128128 <col:24, col:33> col:33 invalid ctx 'int *'
  |-ParmVarDecl 0x12c1281a8 <col:38, col:50> col:50 used key 'const char *'
  |-ParmVarDecl 0x12c128258 <line:2:24, col:36> col:36 used value 'const void *'
  |-ParmVarDecl 0x12c1282d8 <col:43, col:62> col:62 invalid type 'const int *'
  `-CompoundStmt 0x12c808c68 <col:67, line:4:1>
    `-ReturnStmt 0x12c808c58 <line:3:5, col:72>
      `-BinaryOperator 0x12c808c38 <col:12, col:72> '<dependent type>' contains-errors '|'
        |-CallExpr 0x12c128660 <col:12, col:33> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12c128600 <col:12> 'int ()' Function 0x12c128548 'writeJsonKey' 'int ()'
        | |-RecoveryExpr 0x12c128620 <col:25> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x12c128640 <col:30> 'const char *' lvalue ParmVar 0x12c1281a8 'key' 'const char *'
        `-CallExpr 0x12c808c00 <col:37, col:72> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12c128770 <col:37> 'int ()' Function 0x12c1286b8 'encodeJsonInternal' 'int ()'
          |-DeclRefExpr 0x12c128790 <col:56> 'const void *' lvalue ParmVar 0x12c128258 'value' 'const void *'
          |-RecoveryExpr 0x12c1287b0 <col:63> '<dependent type>' contains-errors lvalue
          `-RecoveryExpr 0x12c1287d0 <col:69> '<dependent type>' contains-errors lvalue
