`-FunctionDecl 0x15000de88  line:1:12 invalid h2_task_pre_conn 'int (int *, void *)' static
  |-ParmVarDecl 0x15000dd28 <col:29, col:39> col:39 invalid c 'int *'
  |-ParmVarDecl 0x15000dda8 <col:42, col:48> col:48 used arg 'void *'
  `-CompoundStmt 0x1500290c8 <line:2:1, line:19:1>
    |-IfStmt 0x15000e050 <line:5:5, line:7:5>
    | |-UnaryOperator 0x15000dfd8 <line:5:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15000dfc0 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x15000df78 <col:10, col:13> '<dependent type>' contains-errors lvalue ->master
    | |     `-RecoveryExpr 0x15000df58 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15000e038 <col:21, line:7:5>
    |   `-ReturnStmt 0x15000e028 <line:6:9, col:16>
    |     `-RecoveryExpr 0x15000e008 <col:16> '<dependent type>' contains-errors lvalue
    |-CStyleCastExpr 0x15000e2a8 <line:10:5, col:11> 'void' <ToVoid>
    | `-ImplicitCastExpr 0x15000e290 <col:11> 'void *' <LValueToRValue> part_of_explicit_cast
    |   `-DeclRefExpr 0x15000e260 <col:11> 'void *' lvalue ParmVar 0x15000dda8 'arg' 'void *'
    |-IfStmt 0x150029060 <line:11:5, line:17:5>
    | |-CXXDependentScopeMemberExpr 0x15000e350 <line:11:9, col:14> '<dependent type>' contains-errors lvalue ->task
    | | `-RecoveryExpr 0x15000e330 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x150029030 <col:20, line:17:5>
    |   |-CallExpr 0x150028a38 <line:12:9, line:13:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1500288b8 <line:12:9> 'int ()' Function 0x150028800 'ap_log_cerror' 'int ()'
    |   | |-RecoveryExpr 0x1500289f8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150028a18 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x150028908 <col:49> 'int' 0
    |   | |-RecoveryExpr 0x150028928 <col:52> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x150028990 <line:13:23> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x150028c70 <line:14:9, col:49> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x150028b60 <col:9> 'int ()' Function 0x150028aa8 'ap_add_input_filter' 'int ()'
    |   | |-StringLiteral 0x150028b80 <col:29> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x150028c30 <col:36> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150028c50 <col:42> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x150028bd0 <col:48> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x150028ea0 <line:15:9, col:50> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x150028d90 <col:9> 'int ()' Function 0x150028cd8 'ap_add_output_filter' 'int ()'
    |   | |-StringLiteral 0x150028db0 <col:30> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x150028e60 <col:37> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x150028e80 <col:43> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x150028e00 <col:49> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x150028ff0 <line:16:9, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x150028ee0 <col:9> 'int ()' Function 0x150028cd8 'ap_add_output_filter' 'int ()'
    |     |-StringLiteral 0x150028f00 <col:30> 'char[4]' lvalue "STR"
    |     |-RecoveryExpr 0x150028fb0 <col:37> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x150028fd0 <col:43> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x150028f50 <col:49> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1500290b8 <line:18:5, col:12>
      `-RecoveryExpr 0x150029098 <col:12> '<dependent type>' contains-errors lvalue
