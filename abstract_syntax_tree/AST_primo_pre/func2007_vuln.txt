`-FunctionDecl 0x15c00df18  line:1:12 referenced invalid jas_icclut8_input 'int (int *, int *, int)' static
  |-ParmVarDecl 0x15c00dd28 <col:30, col:48> col:48 invalid attrval 'int *'
  |-ParmVarDecl 0x15c00dda8 <col:57, col:71> col:71 invalid in 'int *'
  |-ParmVarDecl 0x15c00de28 <line:2:3, col:7> col:7 used cnt 'int'
  `-CompoundStmt 0x15d80b508 <line:3:1, line:68:1>
    |-DeclStmt 0x15c00e058 <line:4:2, col:7>
    | `-VarDecl 0x15c00dff0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x15c00e0f0 <line:5:2, col:7>
    | `-VarDecl 0x15c00e088 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x15c00e188 <line:6:2, col:14>
    | `-VarDecl 0x15c00e120 <col:2, col:6> col:6 used clutsize 'int'
    |-BinaryOperator 0x15c00e348 <line:7:2, col:39> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x15c00e328 <col:2, col:17> '<dependent type>' contains-errors '*'
    | | |-RecoveryExpr 0x15c00e1c0 <col:2> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x15c00e1a0 <col:2> 'int (int *, int *, int)' Function 0x15c00df18 'jas_icclut8_input' 'int (int *, int *, int)'
    | | `-RecoveryExpr 0x15c00e308 <col:17> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x15c00e2d0 <col:24, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x15c00e288 <col:25, col:39> '<dependent type>' contains-errors lvalue .lut8
    |     `-CXXDependentScopeMemberExpr 0x15c00e240 <col:25, col:34> '<dependent type>' contains-errors lvalue ->data
    |       `-RecoveryExpr 0x15c00e220 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15d009530 <line:13:2, line:17:8>
    | |-BinaryOperator 0x15d0094a8 <line:13:6, line:16:27> 'int' contains-errors '||'
    | | |-BinaryOperator 0x15d009448 <line:13:6, line:15:38> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x15d009378 <line:13:6, line:14:42> 'int' contains-errors '||'
    | | | | |-CallExpr 0x15d009298 <line:13:6, col:43> '<dependent type>' contains-errors
    | | | | | |-DeclRefExpr 0x15d008d80 <col:6> 'int ()' Function 0x15d008cc8 'jas_iccgetuint8' 'int ()'
    | | | | | |-RecoveryExpr 0x15d008da0 <col:22> '<dependent type>' contains-errors lvalue
    | | | | | `-UnaryOperator 0x15d009280 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | |   `-CXXDependentScopeMemberExpr 0x15d009238 <col:27, col:33> '<dependent type>' contains-errors lvalue ->numinchans
    | | | | |     `-RecoveryExpr 0x15d009218 <col:27> '<dependent type>' contains-errors lvalue
    | | | | `-CallExpr 0x15d009348 <line:14:4, col:42> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x15d008e68 <col:4> 'int ()' Function 0x15d008cc8 'jas_iccgetuint8' 'int ()'
    | | | |   |-RecoveryExpr 0x15d008e88 <col:20> '<dependent type>' contains-errors lvalue
    | | | |   `-UnaryOperator 0x15d009330 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |     `-CXXDependentScopeMemberExpr 0x15d0092e8 <col:25, col:31> '<dependent type>' contains-errors lvalue ->numoutchans
    | | | |       `-RecoveryExpr 0x15d0092c8 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x15d009418 <line:15:4, col:38> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x15d008f70 <col:4> 'int ()' Function 0x15d008cc8 'jas_iccgetuint8' 'int ()'
    | | |   |-RecoveryExpr 0x15d008f90 <col:20> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x15d009400 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-CXXDependentScopeMemberExpr 0x15d0093b8 <col:25, col:31> '<dependent type>' contains-errors lvalue ->clutlen
    | | |       `-RecoveryExpr 0x15d009398 <col:25> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x15d009488 <line:16:4, col:27> 'int' contains-errors '=='
    | |   |-CallExpr 0x15d009198 <col:4, col:22> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x15d009158 <col:4> 'int ()' Function 0x15d0090a0 'jas_stream_getc' 'int ()'
    | |   | `-RecoveryExpr 0x15d009178 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x15d009468 <col:27> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x15d009518 <line:17:3, col:8> 'error' 0x15d0094c8
    |-ForStmt 0x15d0099f0 <line:18:2, line:23:2>
    | |-BinaryOperator 0x15d009590 <line:18:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x15d009550 <col:7> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | | `-IntegerLiteral 0x15d009570 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15d009608 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x15d0095f0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15d0095b0 <col:14> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | | `-IntegerLiteral 0x15d0095d0 <col:18> 'int' 3
    | |-UnaryOperator 0x15d009648 <col:21, col:23> 'int' prefix '++'
    | | `-DeclRefExpr 0x15d009628 <col:23> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | `-CompoundStmt 0x15d0099d8 <col:26, line:23:2>
    |   `-ForStmt 0x15d0099a0 <line:19:3, line:22:3>
    |     |-BinaryOperator 0x15d0096a0 <line:19:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x15d009660 <col:8> 'int' lvalue Var 0x15c00e088 'j' 'int'
    |     | `-IntegerLiteral 0x15d009680 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x15d009718 <col:15, col:19> 'int' '<'
    |     | |-ImplicitCastExpr 0x15d009700 <col:15> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x15d0096c0 <col:15> 'int' lvalue Var 0x15c00e088 'j' 'int'
    |     | `-IntegerLiteral 0x15d0096e0 <col:19> 'int' 3
    |     |-UnaryOperator 0x15d009758 <col:22, col:24> 'int' prefix '++'
    |     | `-DeclRefExpr 0x15d009738 <col:24> 'int' lvalue Var 0x15c00e088 'j' 'int'
    |     `-CompoundStmt 0x15d009988 <col:27, line:22:3>
    |       `-IfStmt 0x15d009968 <line:20:4, line:21:10>
    |         |-RecoveryExpr 0x15d009930 <line:20:8, col:43> '_Bool' contains-errors
    |         `-GotoStmt 0x15d009950 <line:21:5, col:10> 'error' 0x15d0094c8
    |-IfStmt 0x15d80a0a0 <line:24:2, line:26:8>
    | |-BinaryOperator 0x15d80a068 <line:24:6, line:25:45> 'int' contains-errors '||'
    | | |-CallExpr 0x15d809f88 <line:24:6, col:46> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x15d009b08 <col:6> 'int ()' Function 0x15d009a50 'jas_iccgetuint16' 'int ()'
    | | | |-RecoveryExpr 0x15d009b28 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x15d809f70 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-CXXDependentScopeMemberExpr 0x15d809f28 <col:28, col:34> '<dependent type>' contains-errors lvalue ->numintabents
    | | |     `-RecoveryExpr 0x15d809f08 <col:28> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x15d80a038 <line:25:4, col:45> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x15d809e00 <col:4> 'int ()' Function 0x15d009a50 'jas_iccgetuint16' 'int ()'
    | |   |-RecoveryExpr 0x15d809e20 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x15d80a020 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x15d809fd8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->numouttabents
    | |       `-RecoveryExpr 0x15d809fb8 <col:26> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x15d80a088 <line:26:3, col:8> 'error' 0x15d0094c8
    |-IfStmt 0x15d80a378 <line:28:2, line:33:8>
    | |-RecoveryExpr 0x15d80a340 <line:28:6, line:32:29> '_Bool' contains-errors
    | `-GotoStmt 0x15d80a360 <line:33:3, col:8> 'error' 0x15d0094c8
    |-IfStmt 0x15d80a508 <line:36:2, line:40:8>
    | |-RecoveryExpr 0x15d80a4d0 <line:36:6, line:39:29> '_Bool' contains-errors
    | `-GotoStmt 0x15d80a4f0 <line:40:3, col:8> 'error' 0x15d0094c8
    |-ForStmt 0x15d80b218 <line:55:2, line:58:2>
    | |-BinaryOperator 0x15d80ac60 <line:55:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x15d80ac20 <col:7> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | | `-IntegerLiteral 0x15d80ac40 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15d80acf0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x15d80acc0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15d80ac80 <col:14> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | | `-ImplicitCastExpr 0x15d80acd8 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15d80aca0 <col:18> 'int' lvalue Var 0x15c00e120 'clutsize' 'int'
    | |-UnaryOperator 0x15d80ad30 <col:28, col:30> 'int' prefix '++'
    | | `-DeclRefExpr 0x15d80ad10 <col:30> 'int' lvalue Var 0x15c00dff0 'i' 'int'
    | `-CompoundStmt 0x15d80b200 <col:33, line:58:2>
    |   `-IfStmt 0x15d80ade0 <line:56:3, line:57:9>
    |     |-RecoveryExpr 0x15d80ada8 <line:56:7, col:41> '_Bool' contains-errors
    |     `-GotoStmt 0x15d80adc8 <line:57:4, col:9> 'error' 0x15d0094c8
    |-IfStmt 0x15d80b308 <line:59:2, line:63:8>
    | |-RecoveryExpr 0x15d80b2d0 <line:59:6, line:62:4> '_Bool' contains-errors
    | `-GotoStmt 0x15d80b2f0 <line:63:3, col:8> 'error' 0x15d0094c8
    |-ReturnStmt 0x15d80b348 <line:64:2, col:9>
    | `-IntegerLiteral 0x15d80b328 <col:9> 'int' 0
    |-LabelStmt 0x15d80b4a0 <line:65:1, line:66:29> 'error'
    | `-CallExpr 0x15d80b478 <col:2, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15d80b438 <col:2> 'int ()' Function 0x15d80b380 'jas_icclut8_destroy' 'int ()'
    |   `-RecoveryExpr 0x15d80b458 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15d80b4f8 <line:67:2, col:10>
      `-UnaryOperator 0x15d80b4e0 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x15d80b4c0 <col:10> 'int' 1
