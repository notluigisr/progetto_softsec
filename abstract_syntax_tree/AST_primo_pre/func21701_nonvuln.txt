`-FunctionDecl 0x131808660  line:1:13 udf_update_extents 'void (struct inode *, struct kernel_long_ad *, int, int, struct extent_position *)' static
  |-ParmVarDecl 0x131128648 <col:32, col:46> col:46 used inode 'struct inode *'
  |-ParmVarDecl 0x131808228 <col:53, col:76> col:76 used laarr 'struct kernel_long_ad *'
  |-ParmVarDecl 0x1318082a8 <line:2:11, col:15> col:15 used startnum 'int'
  |-ParmVarDecl 0x131808328 <col:25, col:29> col:29 used endnum 'int'
  |-ParmVarDecl 0x1318084f8 <line:3:11, col:35> col:35 used epos 'struct extent_position *'
  `-CompoundStmt 0x1311456f8 <line:4:1, line:27:1>
    |-DeclStmt 0x1318088b0 <line:5:2, col:18>
    | |-VarDecl 0x131808790 <col:2, col:14> col:6 used start 'int' cinit
    | | `-IntegerLiteral 0x1318087f8 <col:14> 'int' 0
    | `-VarDecl 0x131808830 <col:2, col:17> col:17 used i 'int'
    |-DeclStmt 0x131808a48 <line:6:2, col:30>
    | |-RecordDecl 0x1318088c8 <col:2, col:9> col:9 struct kernel_lb_addr
    | `-VarDecl 0x1318089c8 <col:2, col:24> col:24 referenced invalid tmploc 'struct kernel_lb_addr'
    |-IfStmt 0x131145128 <line:9:2, line:20:2> has_else
    | |-BinaryOperator 0x131808ae8 <line:9:6, col:17> 'int' '>'
    | | |-ImplicitCastExpr 0x131808ab8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x131808a78 <col:6> 'int' lvalue ParmVar 0x1318082a8 'startnum' 'int'
    | | `-ImplicitCastExpr 0x131808ad0 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x131808a98 <col:17> 'int' lvalue ParmVar 0x131808328 'endnum' 'int'
    | |-CompoundStmt 0x131808f80 <col:25, line:12:2>
    | | `-ForStmt 0x131808f48 <line:10:3, line:11:32>
    | |   |-BinaryOperator 0x131808b48 <line:10:8, col:12> 'int' '='
    | |   | |-DeclRefExpr 0x131808b08 <col:8> 'int' lvalue Var 0x131808830 'i' 'int'
    | |   | `-IntegerLiteral 0x131808b28 <col:12> 'int' 0
    | |   |-<<<NULL>>>
    | |   |-BinaryOperator 0x131808c50 <col:15, col:37> 'int' '<'
    | |   | |-ImplicitCastExpr 0x131808c38 <col:15> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x131808b68 <col:15> 'int' lvalue Var 0x131808830 'i' 'int'
    | |   | `-ParenExpr 0x131808c18 <col:19, col:37> 'int'
    | |   |   `-BinaryOperator 0x131808bf8 <col:20, col:31> 'int' '-'
    | |   |     |-ImplicitCastExpr 0x131808bc8 <col:20> 'int' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x131808b88 <col:20> 'int' lvalue ParmVar 0x1318082a8 'startnum' 'int'
    | |   |     `-ImplicitCastExpr 0x131808be0 <col:31> 'int' <LValueToRValue>
    | |   |       `-DeclRefExpr 0x131808ba8 <col:31> 'int' lvalue ParmVar 0x131808328 'endnum' 'int'
    | |   |-UnaryOperator 0x131808c90 <col:40, col:41> 'int' postfix '++'
    | |   | `-DeclRefExpr 0x131808c70 <col:40> 'int' lvalue Var 0x131808830 'i' 'int'
    | |   `-ImplicitCastExpr 0x131808f30 <line:11:4, col:32> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x131808ef8 <col:4, col:32> '<dependent type>' contains-errors lvalue
    | |       |-DeclRefExpr 0x131808dc0 <col:4> 'int ()' Function 0x131808d08 'udf_delete_aext' 'int ()'
    | |       |-DeclRefExpr 0x131808de0 <col:20> 'struct inode *' lvalue ParmVar 0x131128648 'inode' 'struct inode *'
    | |       `-UnaryOperator 0x131808e38 <col:27, col:28> 'struct extent_position' lvalue prefix '*' cannot overflow
    | |         `-ImplicitCastExpr 0x131808e20 <col:28> 'struct extent_position *' <LValueToRValue>
    | |           `-DeclRefExpr 0x131808e00 <col:28> 'struct extent_position *' lvalue ParmVar 0x1318084f8 'epos' 'struct extent_position *'
    | `-IfStmt 0x131145108 <line:12:9, line:20:2>
    |   |-BinaryOperator 0x131809008 <line:12:13, col:24> 'int' '<'
    |   | |-ImplicitCastExpr 0x131808fd8 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x131808f98 <col:13> 'int' lvalue ParmVar 0x1318082a8 'startnum' 'int'
    |   | `-ImplicitCastExpr 0x131808ff0 <col:24> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x131808fb8 <col:24> 'int' lvalue ParmVar 0x131808328 'endnum' 'int'
    |   `-CompoundStmt 0x1311450f0 <col:32, line:20:2>
    |     `-ForStmt 0x1311450b8 <line:13:3, line:19:3>
    |       |-BinaryOperator 0x131809068 <line:13:8, col:12> 'int' '='
    |       | |-DeclRefExpr 0x131809028 <col:8> 'int' lvalue Var 0x131808830 'i' 'int'
    |       | `-IntegerLiteral 0x131809048 <col:12> 'int' 0
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x131809170 <col:15, col:37> 'int' '<'
    |       | |-ImplicitCastExpr 0x131809158 <col:15> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x131809088 <col:15> 'int' lvalue Var 0x131808830 'i' 'int'
    |       | `-ParenExpr 0x131809138 <col:19, col:37> 'int'
    |       |   `-BinaryOperator 0x131809118 <col:20, col:29> 'int' '-'
    |       |     |-ImplicitCastExpr 0x1318090e8 <col:20> 'int' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1318090a8 <col:20> 'int' lvalue ParmVar 0x131808328 'endnum' 'int'
    |       |     `-ImplicitCastExpr 0x131809100 <col:29> 'int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1318090c8 <col:29> 'int' lvalue ParmVar 0x1318082a8 'startnum' 'int'
    |       |-UnaryOperator 0x1318091b0 <col:40, col:41> 'int' postfix '++'
    |       | `-DeclRefExpr 0x131809190 <col:40> 'int' lvalue Var 0x131808830 'i' 'int'
    |       `-CompoundStmt 0x1311450a0 <col:45, line:19:3>
    |         `-UnaryOperator 0x131145088 <line:18:4, col:9> 'int' postfix '++'
    |           `-DeclRefExpr 0x131145068 <col:4> 'int' lvalue Var 0x131808790 'start' 'int'
    `-ForStmt 0x1311456c0 <line:22:2, line:26:2>
      |-BinaryOperator 0x1311451b0 <line:22:7, col:11> 'int' '='
      | |-DeclRefExpr 0x131145158 <col:7> 'int' lvalue Var 0x131808830 'i' 'int'
      | `-ImplicitCastExpr 0x131145198 <col:11> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x131145178 <col:11> 'int' lvalue Var 0x131808790 'start' 'int'
      |-<<<NULL>>>
      |-BinaryOperator 0x131145240 <col:18, col:22> 'int' '<'
      | |-ImplicitCastExpr 0x131145210 <col:18> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1311451d0 <col:18> 'int' lvalue Var 0x131808830 'i' 'int'
      | `-ImplicitCastExpr 0x131145228 <col:22> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1311451f0 <col:22> 'int' lvalue ParmVar 0x131808328 'endnum' 'int'
      |-UnaryOperator 0x131145280 <col:30, col:31> 'int' postfix '++'
      | `-DeclRefExpr 0x131145260 <col:30> 'int' lvalue Var 0x131808830 'i' 'int'
      `-CompoundStmt 0x1311456a8 <col:35, line:26:2>
        `-CallExpr 0x131145420 <line:23:3, col:49> '<dependent type>' contains-errors
          |-DeclRefExpr 0x131145298 <col:3> 'int ()' Function 0x131144e50 'udf_next_aext' 'int ()'
          |-DeclRefExpr 0x1311452b8 <col:17> 'struct inode *' lvalue ParmVar 0x131128648 'inode' 'struct inode *'
          |-DeclRefExpr 0x1311452d8 <col:24> 'struct extent_position *' lvalue ParmVar 0x1318084f8 'epos' 'struct extent_position *'
          |-UnaryOperator 0x131145318 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
          | `-RecoveryExpr 0x1311452f8 <col:31> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x131145408 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
          | `-RecoveryExpr 0x1311453e8 <col:40> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x131145360 <col:48> 'int' 0
