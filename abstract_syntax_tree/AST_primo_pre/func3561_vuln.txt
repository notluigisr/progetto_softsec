`-FunctionDecl 0x12b128118  line:1:1 TEST_CASE 'int ()'
  `-CompoundStmt 0x12b140e20 <line:2:1, line:14:1>
    |-CallExpr 0x12b1283f8 <line:8:5, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b128300 <col:5> 'int ()' Function 0x12b128248 'REQUIRE' 'int ()'
    | `-BinaryOperator 0x12b1283d8 <col:13, col:20> 'int' contains-errors '=='
    |   |-RecoveryExpr 0x12b128398 <col:13> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12b1283b8 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12b1285e0 <line:10:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b128420 <col:5> 'int ()' Function 0x12b128248 'REQUIRE' 'int ()'
    | `-CallExpr 0x12b1285b8 <col:13, col:31> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12b128570 <col:13, col:20> '<dependent type>' contains-errors lvalue .parse
    |   | `-RecoveryExpr 0x12b128550 <col:13> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x12b1284e0 <col:26> 'char[4]' lvalue "STR"
    |-CallExpr 0x12b140a70 <line:11:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b1286e8 <col:5> 'int ()' Function 0x12b128630 'REQUIRE_FALSE' 'int ()'
    | `-CallExpr 0x12b140a48 <col:19, col:37> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12b140a00 <col:19, col:26> '<dependent type>' contains-errors lvalue .parse
    |   | `-RecoveryExpr 0x12b1287d8 <col:19> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x12b128768 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x12b140c18 <line:12:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b140a98 <col:5> 'int ()' Function 0x12b128630 'REQUIRE_FALSE' 'int ()'
    | `-CallExpr 0x12b140bf0 <col:19, col:37> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12b140ba8 <col:19, col:26> '<dependent type>' contains-errors lvalue .parse
    |   | `-RecoveryExpr 0x12b140b88 <col:19> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x12b140b18 <col:32> 'char[4]' lvalue "STR"
    `-CallExpr 0x12b140df8 <line:13:5, col:35> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12b140c40 <col:5> 'int ()' Function 0x12b128630 'REQUIRE_FALSE' 'int ()'
      `-CallExpr 0x12b140dd0 <col:19, col:34> '<dependent type>' contains-errors
        |-CXXDependentScopeMemberExpr 0x12b140d88 <col:19, col:26> '<dependent type>' contains-errors lvalue .parse
        | `-RecoveryExpr 0x12b140d68 <col:19> '<dependent type>' contains-errors lvalue
        `-StringLiteral 0x12b140d00 <col:32> 'char[1]' lvalue ""
