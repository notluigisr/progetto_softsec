`-FunctionDecl 0x144941a98  line:1:12 invalid hva_to_pfn_remapped 'int (struct vm_area_struct *, unsigned long, int *, int, int *, int *)' static
  |-ParmVarDecl 0x144928648 <col:32, col:55> col:55 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x1449286c8 <line:2:11, col:25> col:25 used addr 'unsigned long'
  |-ParmVarDecl 0x144928798 <col:31, col:37> col:37 invalid async 'int *'
  |-ParmVarDecl 0x144941818 <line:3:11, col:16> col:16 invalid write_fault 'int'
  |-ParmVarDecl 0x144941898 <col:29, col:35> col:35 invalid writable 'int *'
  |-ParmVarDecl 0x144941918 <line:4:11, col:22> col:22 invalid p_pfn 'int *'
  `-CompoundStmt 0x1449431e0 <line:5:1, line:44:1>
    |-DeclStmt 0x144941c20 <line:9:2, col:7>
    | `-VarDecl 0x144941bb8 <col:2, col:6> col:6 used r 'int'
    |-BinaryOperator 0x144941fc0 <line:11:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x144941c38 <col:2> 'int' lvalue Var 0x144941bb8 'r' 'int'
    | `-CallExpr 0x144941f80 <col:6, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x144941db0 <col:6> 'int ()' Function 0x144941cf8 'follow_pte' 'int ()'
    |   |-RecoveryExpr 0x144941e08 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x144941dd0 <col:17> 'struct vm_area_struct *' lvalue ParmVar 0x144928648 'vma' 'struct vm_area_struct *'
    |   |-DeclRefExpr 0x144941e30 <col:29> 'unsigned long' lvalue ParmVar 0x1449286c8 'addr' 'unsigned long'
    |   |-UnaryOperator 0x144941f30 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x144941f10 <col:36> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x144941f68 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x144941f48 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144942598 <line:12:2, line:26:2>
    | |-ImplicitCastExpr 0x144942000 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x144941fe0 <col:6> 'int' lvalue Var 0x144941bb8 'r' 'int'
    | `-CompoundStmt 0x144942570 <col:9, line:26:2>
    |   |-IfStmt 0x144942350 <line:18:3, line:19:12>
    |   | |-RecoveryExpr 0x144942288 <line:18:7> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x144942340 <line:19:4, col:12>
    |   |   `-UnaryOperator 0x144942328 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x144942310 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1449422f0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1449423f0 <line:20:3, line:21:11>
    |   | |-ImplicitCastExpr 0x144942390 <line:20:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x144942370 <col:7> 'int' lvalue Var 0x144941bb8 'r' 'int'
    |   | `-ReturnStmt 0x1449423e0 <line:21:4, col:11>
    |   |   `-ImplicitCastExpr 0x1449423c8 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1449423a8 <col:11> 'int' lvalue Var 0x144941bb8 'r' 'int'
    |   `-IfStmt 0x144942550 <line:24:3, line:25:11>
    |     |-ImplicitCastExpr 0x1449424f0 <line:24:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1449424d0 <col:7> 'int' lvalue Var 0x144941bb8 'r' 'int'
    |     `-ReturnStmt 0x144942540 <line:25:4, col:11>
    |       `-ImplicitCastExpr 0x144942528 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x144942508 <col:11> 'int' lvalue Var 0x144941bb8 'r' 'int'
    |-IfStmt 0x144942778 <line:28:2, line:31:2>
    | |-RecoveryExpr 0x1449426d8 <line:28:6, col:37> '_Bool' contains-errors
    | `-CompoundStmt 0x144942760 <col:40, line:31:2>
    |   `-GotoStmt 0x144942748 <line:30:3, col:8> 'out' 0x1449426f8
    |-LabelStmt 0x144943140 <line:40:1, col:4> 'out'
    | `-NullStmt 0x144943138 <col:4>
    `-ReturnStmt 0x1449431d0 <line:43:2, col:9>
      `-IntegerLiteral 0x1449431b0 <col:9> 'int' 0
