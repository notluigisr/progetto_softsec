`-FunctionDecl 0x12680de38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x12680dd58 <col:12> col:12 SplFileObject 'int'
  |-ParmVarDecl 0x12680dcd8 <col:27> col:27 fputcsv 'int'
  `-CompoundStmt 0x126829560 <line:2:1, line:41:1>
    |-DeclStmt 0x126826bb8 <line:4:2, col:113>
    | |-VarDecl 0x12680e258 <col:2, col:34> col:7 used delimiter 'char' cinit
    | | `-CXXDependentScopeMemberExpr 0x126826690 <col:19, col:34> '<dependent type>' contains-errors lvalue .delimiter
    | |   `-CXXDependentScopeMemberExpr 0x126826648 <col:19, col:29> '<dependent type>' contains-errors lvalue .file
    | |     `-CXXDependentScopeMemberExpr 0x126826600 <col:19, col:27> '<dependent type>' contains-errors lvalue ->u
    | |       `-RecoveryExpr 0x12680e3b0 <col:19> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x1268266e8 <col:2, col:72> col:45 used enclosure 'char' cinit
    | | `-CXXDependentScopeMemberExpr 0x1268268f0 <col:57, col:72> '<dependent type>' contains-errors lvalue .enclosure
    | |   `-CXXDependentScopeMemberExpr 0x1268268a8 <col:57, col:67> '<dependent type>' contains-errors lvalue .file
    | |     `-CXXDependentScopeMemberExpr 0x126826860 <col:57, col:65> '<dependent type>' contains-errors lvalue ->u
    | |       `-RecoveryExpr 0x126826840 <col:57> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x126826948 <col:2, col:107> col:83 used escape 'char' cinit
    |   `-CXXDependentScopeMemberExpr 0x126826b50 <col:92, col:107> '<dependent type>' contains-errors lvalue .escape
    |     `-CXXDependentScopeMemberExpr 0x126826b08 <col:92, col:102> '<dependent type>' contains-errors lvalue .file
    |       `-CXXDependentScopeMemberExpr 0x126826ac0 <col:92, col:100> '<dependent type>' contains-errors lvalue ->u
    |         `-RecoveryExpr 0x126826aa0 <col:92> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126826e18 <line:5:2, col:48>
    | |-VarDecl 0x126826be8 <col:2, col:16> col:8 used delim 'char *' cinit
    | | `-RecoveryExpr 0x126826c68 <col:16> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x126826ca0 <col:2, col:31> col:23 used enclo 'char *' cinit
    | | `-RecoveryExpr 0x126826d20 <col:31> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x126826d58 <col:2, col:44> col:38 used esc 'char *' cinit
    |   `-RecoveryExpr 0x126826dd8 <col:44> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1268270b8 <line:6:2, col:41> '<dependent type>' contains-errors ','
    | |-BinaryOperator 0x126827058 <col:2, col:28> '<dependent type>' contains-errors ','
    | | |-RecoveryExpr 0x126826fe8 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | | |-UnaryExprOrTypeTraitExpr 0x126826fc8 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | | | `-RecoveryExpr 0x126826fa8 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x126826e68 <col:17> 'int' 0
    | | `-BinaryOperator 0x126827038 <col:20, col:28> '<dependent type>' contains-errors '='
    | |   |-RecoveryExpr 0x126827018 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x126826ed0 <col:28> 'int' 0
    | `-BinaryOperator 0x126827098 <col:31, col:41> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x126827078 <col:31> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x126826f48 <col:41> 'int' 0
    `-IfStmt 0x126829540 <line:10:2, line:40:2>
      |-RecoveryExpr 0x126827448 <line:10:6, col:112> '_Bool' contains-errors
      `-CompoundStmt 0x126829528 <col:121, line:40:2>
        `-SwitchStmt 0x1268274c0 <line:11:3, line:37:3>
          |-CallExpr 0x1268274a0 <line:11:10, col:24> 'int'
          | `-ImplicitCastExpr 0x126827488 <col:10> 'int (*)()' <FunctionToPointerDecay>
          |   `-DeclRefExpr 0x126827468 <col:10> 'int ()' Function 0x126827200 'ZEND_NUM_ARGS' 'int ()'
          `-CompoundStmt 0x126829280 <line:12:3, line:37:3>
            |-CaseStmt 0x126827520 <line:13:3, line:17:4>
            | |-ConstantExpr 0x126827508 <line:13:8> 'int'
            | | `-IntegerLiteral 0x1268274e8 <col:8> 'int' 4
            | `-IfStmt 0x126828d08 <line:14:4, line:17:4>
            |   |-RecoveryExpr 0x126827568 <line:14:8, col:19> '_Bool' contains-errors
            |   `-CompoundStmt 0x126828cf8 <col:22, line:17:4>
            |-BinaryOperator 0x126828dd8 <line:18:4, col:18> 'char' contains-errors '='
            | |-DeclRefExpr 0x126828d28 <col:4> 'char' contains-errors lvalue Var 0x126826948 'escape' 'char'
            | `-ImplicitCastExpr 0x126828dc0 <col:13, col:18> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x126828da0 <col:13, col:18> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x126828d88 <col:13> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x126828d48 <col:13> 'char *' contains-errors lvalue Var 0x126826d58 'esc' 'char *'
            |     `-IntegerLiteral 0x126828d68 <col:17> 'int' 0
            |-CaseStmt 0x126828e30 <line:20:3, line:24:4>
            | |-ConstantExpr 0x126828e18 <line:20:8> 'int'
            | | `-IntegerLiteral 0x126828df8 <col:8> 'int' 3
            | `-IfStmt 0x126828ee8 <line:21:4, line:24:4>
            |   |-RecoveryExpr 0x126828e78 <line:21:8, col:17> '_Bool' contains-errors
            |   `-CompoundStmt 0x126828ed8 <col:20, line:24:4>
            |-BinaryOperator 0x126828fb8 <line:25:4, col:23> 'char' contains-errors '='
            | |-DeclRefExpr 0x126828f08 <col:4> 'char' contains-errors lvalue Var 0x1268266e8 'enclosure' 'char'
            | `-ImplicitCastExpr 0x126828fa0 <col:16, col:23> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x126828f80 <col:16, col:23> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x126828f68 <col:16> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x126828f28 <col:16> 'char *' contains-errors lvalue Var 0x126826ca0 'enclo' 'char *'
            |     `-IntegerLiteral 0x126828f48 <col:22> 'int' 0
            |-CaseStmt 0x126829010 <line:27:3, line:31:4>
            | |-ConstantExpr 0x126828ff8 <line:27:8> 'int'
            | | `-IntegerLiteral 0x126828fd8 <col:8> 'int' 2
            | `-IfStmt 0x1268290c8 <line:28:4, line:31:4>
            |   |-RecoveryExpr 0x126829058 <line:28:8, col:17> '_Bool' contains-errors
            |   `-CompoundStmt 0x1268290b8 <col:20, line:31:4>
            |-BinaryOperator 0x126829198 <line:32:4, col:23> 'char' contains-errors '='
            | |-DeclRefExpr 0x1268290e8 <col:4> 'char' contains-errors lvalue Var 0x12680e258 'delimiter' 'char'
            | `-ImplicitCastExpr 0x126829180 <col:16, col:23> 'char' contains-errors <LValueToRValue>
            |   `-ArraySubscriptExpr 0x126829160 <col:16, col:23> 'char' contains-errors lvalue
            |     |-ImplicitCastExpr 0x126829148 <col:16> 'char *' contains-errors <LValueToRValue>
            |     | `-DeclRefExpr 0x126829108 <col:16> 'char *' contains-errors lvalue Var 0x126826be8 'delim' 'char *'
            |     `-IntegerLiteral 0x126829128 <col:22> 'int' 0
            `-CaseStmt 0x1268291f0 <line:34:3, line:36:4>
              |-ConstantExpr 0x1268291d8 <line:34:8> 'int'
              | `-IntegerLiteral 0x1268291b8 <col:8> 'int' 1
              `-CaseStmt 0x126829250 <line:35:3, line:36:4>
                |-ConstantExpr 0x126829238 <line:35:8> 'int'
                | `-IntegerLiteral 0x126829218 <col:8> 'int' 0
                `-BreakStmt 0x126829278 <line:36:4>
