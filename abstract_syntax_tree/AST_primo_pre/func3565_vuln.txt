`-FunctionDecl 0x14a85bfa8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x14a85bed8 <col:14> col:14 oci_lob_erase 'int'
  `-CompoundStmt 0x14a8758d8 <line:2:1, line:50:1>
    |-DeclStmt 0x14a85c4d8 <line:6:2, col:31>
    | |-VarDecl 0x14a85c338 <col:2, col:17> col:7 used offset 'long' cinit
    | | `-ImplicitCastExpr 0x14a85c3d8 <col:16, col:17> 'long' <IntegralCast>
    | |   `-UnaryOperator 0x14a85c3c0 <col:16, col:17> 'int' prefix '-'
    | |     `-IntegerLiteral 0x14a85c3a0 <col:17> 'int' 1
    | `-VarDecl 0x14a85c408 <col:2, col:30> col:20 used length 'long' cinit
    |   `-ImplicitCastExpr 0x14a85c4a8 <col:29, col:30> 'long' <IntegralCast>
    |     `-UnaryOperator 0x14a85c490 <col:29, col:30> 'int' prefix '-'
    |       `-IntegerLiteral 0x14a85c470 <col:30> 'int' 1
    |-IfStmt 0x14a8753b0 <line:8:2, line:37:2> has_else
    | |-CallExpr 0x14a85c528 <line:8:6, col:14> 'int'
    | | `-ImplicitCastExpr 0x14a85c510 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |   `-DeclRefExpr 0x14a85c4f0 <col:6> 'int ()' Function 0x14a85c1a8 'getThis' 'int ()'
    | |-CompoundStmt 0x14a874ed0 <col:17, line:22:2>
    | | |-IfStmt 0x14a874a70 <line:9:3, line:11:3>
    | | | |-RecoveryExpr 0x14a874a28 <line:9:7, col:84> '_Bool' contains-errors
    | | | `-CompoundStmt 0x14a874a58 <col:93, line:11:3>
    | | |   `-ReturnStmt 0x14a874a48 <line:10:4>
    | | |-IfStmt 0x14a874d00 <line:13:3, line:16:3>
    | | | |-BinaryOperator 0x14a874bb8 <line:13:7, col:39> 'int' '&&'
    | | | | |-BinaryOperator 0x14a874b08 <col:7, col:25> 'int' '>'
    | | | | | |-CallExpr 0x14a874ac8 <col:7, col:21> 'int'
    | | | | | | `-ImplicitCastExpr 0x14a874ab0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | | |   `-DeclRefExpr 0x14a874a90 <col:7> 'int ()' Function 0x14a874900 'ZEND_NUM_ARGS' 'int ()'
    | | | | | `-IntegerLiteral 0x14a874ae8 <col:25> 'int' 0
    | | | | `-BinaryOperator 0x14a874b98 <col:30, col:39> 'int' '<'
    | | | |   |-ImplicitCastExpr 0x14a874b68 <col:30> 'long' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x14a874b28 <col:30> 'long' lvalue Var 0x14a85c338 'offset' 'long'
    | | | |   `-ImplicitCastExpr 0x14a874b80 <col:39> 'long' <IntegralCast>
    | | | |     `-IntegerLiteral 0x14a874b48 <col:39> 'int' 0
    | | | `-CompoundStmt 0x14a874cf0 <col:42, line:16:3>
    | | `-IfStmt 0x14a874eb0 <line:18:3, line:21:3>
    | |   |-BinaryOperator 0x14a874e48 <line:18:7, col:39> 'int' '&&'
    | |   | |-BinaryOperator 0x14a874d98 <col:7, col:25> 'int' '>'
    | |   | | |-CallExpr 0x14a874d58 <col:7, col:21> 'int'
    | |   | | | `-ImplicitCastExpr 0x14a874d40 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | | |   `-DeclRefExpr 0x14a874d20 <col:7> 'int ()' Function 0x14a874900 'ZEND_NUM_ARGS' 'int ()'
    | |   | | `-IntegerLiteral 0x14a874d78 <col:25> 'int' 1
    | |   | `-BinaryOperator 0x14a874e28 <col:30, col:39> 'int' '<'
    | |   |   |-ImplicitCastExpr 0x14a874df8 <col:30> 'long' <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x14a874db8 <col:30> 'long' lvalue Var 0x14a85c408 'length' 'long'
    | |   |   `-ImplicitCastExpr 0x14a874e10 <col:39> 'long' <IntegralCast>
    | |   |     `-IntegerLiteral 0x14a874dd8 <col:39> 'int' 0
    | |   `-CompoundStmt 0x14a874ea0 <col:42, line:21:3>
    | `-CompoundStmt 0x14a875388 <line:23:7, line:37:2>
    |   |-IfStmt 0x14a874fb8 <line:24:3, line:26:3>
    |   | |-RecoveryExpr 0x14a874f70 <line:24:7, col:124> '_Bool' contains-errors
    |   | `-CompoundStmt 0x14a874fa0 <col:133, line:26:3>
    |   |   `-ReturnStmt 0x14a874f90 <line:25:4>
    |   |-IfStmt 0x14a8751b0 <line:28:3, line:31:3>
    |   | |-BinaryOperator 0x14a875100 <line:28:7, col:39> 'int' '&&'
    |   | | |-BinaryOperator 0x14a875050 <col:7, col:25> 'int' '>'
    |   | | | |-CallExpr 0x14a875010 <col:7, col:21> 'int'
    |   | | | | `-ImplicitCastExpr 0x14a874ff8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | | | |   `-DeclRefExpr 0x14a874fd8 <col:7> 'int ()' Function 0x14a874900 'ZEND_NUM_ARGS' 'int ()'
    |   | | | `-IntegerLiteral 0x14a875030 <col:25> 'int' 1
    |   | | `-BinaryOperator 0x14a8750e0 <col:30, col:39> 'int' '<'
    |   | |   |-ImplicitCastExpr 0x14a8750b0 <col:30> 'long' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x14a875070 <col:30> 'long' lvalue Var 0x14a85c338 'offset' 'long'
    |   | |   `-ImplicitCastExpr 0x14a8750c8 <col:39> 'long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x14a875090 <col:39> 'int' 0
    |   | `-CompoundStmt 0x14a8751a0 <col:42, line:31:3>
    |   `-IfStmt 0x14a875368 <line:33:3, line:36:3>
    |     |-BinaryOperator 0x14a8752f8 <line:33:7, col:39> 'int' '&&'
    |     | |-BinaryOperator 0x14a875248 <col:7, col:25> 'int' '>'
    |     | | |-CallExpr 0x14a875208 <col:7, col:21> 'int'
    |     | | | `-ImplicitCastExpr 0x14a8751f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | |   `-DeclRefExpr 0x14a8751d0 <col:7> 'int ()' Function 0x14a874900 'ZEND_NUM_ARGS' 'int ()'
    |     | | `-IntegerLiteral 0x14a875228 <col:25> 'int' 2
    |     | `-BinaryOperator 0x14a8752d8 <col:30, col:39> 'int' '<'
    |     |   |-ImplicitCastExpr 0x14a8752a8 <col:30> 'long' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x14a875268 <col:30> 'long' lvalue Var 0x14a85c408 'length' 'long'
    |     |   `-ImplicitCastExpr 0x14a8752c0 <col:39> 'long' <IntegralCast>
    |     |     `-IntegerLiteral 0x14a875288 <col:39> 'int' 0
    |     `-CompoundStmt 0x14a875358 <col:42, line:36:3>
    `-IfStmt 0x14a875790 <line:46:2, line:48:2>
      |-RecoveryExpr 0x14a875760 <line:46:6, col:75> '_Bool' contains-errors
      `-CompoundStmt 0x14a875780 <col:78, line:48:2>
