`-FunctionDecl 0x158866a38  line:1:5 invalid invalidate_inodes 'int (struct super_block *, int)'
  |-ParmVarDecl 0x15884fa48 <col:23, col:43> col:43 used sb 'struct super_block *'
  |-ParmVarDecl 0x15884fae0 <col:47, col:52> col:52 invalid kill_dirty 'int'
  `-CompoundStmt 0x15886d8a0 <line:2:1, line:42:1>
    |-DeclStmt 0x158866b90 <line:3:2, col:14>
    | `-VarDecl 0x158866b08 <col:2, col:13> col:6 used busy 'int' cinit
    |   `-IntegerLiteral 0x158866b70 <col:13> 'int' 0
    |-DeclStmt 0x158866e30 <line:4:2, col:28>
    | |-RecordDecl 0x158866ba8 <col:2, col:9> col:9 struct inode
    | |-VarDecl 0x158866d18 <col:2, col:16> col:16 used inode 'struct inode *'
    | `-VarDecl 0x158866da8 <col:2, col:24> col:24 used next 'struct inode *'
    |-CallExpr 0x158867020 <line:5:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158866fa0 <col:2> 'int ()' Function 0x158866ee8 'LIST_HEAD' 'int ()'
    | `-RecoveryExpr 0x158867000 <col:12> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x158867238 <line:7:1, line:8:34> 'again'
    | `-CallExpr 0x1588671c0 <col:2, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x158867128 <col:2> 'int ()' Function 0x158867070 'spin_lock' 'int ()'
    |   `-UnaryOperator 0x1588671a8 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x158867180 <col:13, col:17> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x158867148 <col:13> 'struct super_block *' lvalue ParmVar 0x15884fa48 'sb' 'struct super_block *'
    |-CallExpr 0x158867488 <line:9:2, col:64> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158867338 <col:2> 'int ()' Function 0x158867280 'list_for_each_entry_safe' 'int ()'
    | |-DeclRefExpr 0x158867358 <col:27> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |-DeclRefExpr 0x158867378 <col:34> 'struct inode *' lvalue Var 0x158866da8 'next' 'struct inode *'
    | |-UnaryOperator 0x1588673f8 <col:40, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x1588673d0 <col:41, col:45> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x158867398 <col:41> 'struct super_block *' lvalue ParmVar 0x15884fa48 'sb' 'struct super_block *'
    | `-RecoveryExpr 0x158867468 <col:55> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x15886d730 <col:66, line:36:2>
    | |-CallExpr 0x158867560 <line:10:3, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1588674c8 <col:3> 'int ()' Function 0x158867070 'spin_lock' 'int ()'
    | | `-UnaryOperator 0x158867548 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x158867520 <col:14, col:21> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x1588674e8 <col:14> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |-IfStmt 0x158867848 <line:11:3, line:14:3>
    | | |-RecoveryExpr 0x158867670 <line:11:7, col:56> '_Bool' contains-errors
    | | `-CompoundStmt 0x158867830 <col:59, line:14:3>
    | |   `-CallExpr 0x158867808 <line:12:4, col:30> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x158867770 <col:4> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    | |     `-UnaryOperator 0x1588677f0 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       `-RecoveryExpr 0x1588677c8 <col:17, col:24> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x158867790 <col:17> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |-IfStmt 0x15886cb40 <line:15:3, line:19:3>
    | | |-BinaryOperator 0x1588679e0 <line:15:7, col:40> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x158867990 <col:7, col:24> '<dependent type>' contains-errors '&'
    | | | | |-RecoveryExpr 0x1588678a0 <col:7, col:14> '<dependent type>' contains-errors lvalue
    | | | | | `-DeclRefExpr 0x158867868 <col:7> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | | | | `-RecoveryExpr 0x158867970 <col:24> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x1588679c8 <col:39, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x1588679b0 <col:40> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-RecoveryExpr 0x158867900 <col:40> '<dependent type>' contains-errors lvalue
    | | `-CompoundStmt 0x15886cb20 <col:52, line:19:3>
    | |   |-CallExpr 0x15886ca98 <line:16:4, col:30> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x15886ca00 <col:4> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    | |   | `-UnaryOperator 0x15886ca80 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   |   `-RecoveryExpr 0x15886ca58 <col:17, col:24> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x15886ca20 <col:17> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |   `-BinaryOperator 0x15886cb00 <line:17:4, col:11> 'int' '='
    | |     |-DeclRefExpr 0x15886cac0 <col:4> 'int' lvalue Var 0x158866b08 'busy' 'int'
    | |     `-IntegerLiteral 0x15886cae0 <col:11> 'int' 1
    | |-IfStmt 0x15886ce40 <line:20:3, line:24:3>
    | | |-CallExpr 0x15886ccd8 <line:20:7, col:34> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x15886cc40 <col:7> 'int ()' Function 0x15886cb88 'atomic_read' 'int ()'
    | | | `-UnaryOperator 0x15886ccc0 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x15886cc98 <col:20, col:27> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x15886cc60 <col:20> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | | `-CompoundStmt 0x15886ce20 <col:37, line:24:3>
    | |   |-CallExpr 0x15886cd98 <line:21:4, col:30> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x15886cd00 <col:4> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    | |   | `-UnaryOperator 0x15886cd80 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   |   `-RecoveryExpr 0x15886cd58 <col:17, col:24> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x15886cd20 <col:17> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |   `-BinaryOperator 0x15886ce00 <line:22:4, col:11> 'int' '='
    | |     |-DeclRefExpr 0x15886cdc0 <col:4> 'int' lvalue Var 0x158866b08 'busy' 'int'
    | |     `-IntegerLiteral 0x15886cde0 <col:11> 'int' 1
    | |-CallExpr 0x15886d028 <line:27:3, col:27> 'int'
    | | |-ImplicitCastExpr 0x15886d010 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15886cfa0 <col:3> 'int ()' Function 0x15886cee8 'inode_lru_list_del' 'int ()'
    | | `-ImplicitCastExpr 0x15886d050 <col:22> 'struct inode *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15886cfc0 <col:22> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | |-CallExpr 0x15886d100 <line:28:3, col:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15886d068 <col:3> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    | | `-UnaryOperator 0x15886d0e8 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x15886d0c0 <col:16, col:23> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x15886d088 <col:16> 'struct inode *' lvalue Var 0x158866d18 'inode' 'struct inode *'
    | `-IfStmt 0x15886d710 <line:30:3, line:35:3>
    |   |-CallExpr 0x15886d3b8 <line:30:7, col:20> 'int'
    |   | `-ImplicitCastExpr 0x15886d3a0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x15886d380 <col:7> 'int ()' Function 0x15886d2c8 'need_resched' 'int ()'
    |   `-CompoundStmt 0x15886d6e8 <col:23, line:35:3>
    |     |-CallExpr 0x15886d470 <line:31:4, col:38> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x15886d3d8 <col:4> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    |     | `-UnaryOperator 0x15886d458 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x15886d430 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x15886d3f8 <col:17> 'struct super_block *' lvalue ParmVar 0x15884fa48 'sb' 'struct super_block *'
    |     |-CallExpr 0x15886d5b0 <line:32:4, col:17> 'int'
    |     | `-ImplicitCastExpr 0x15886d598 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x15886d578 <col:4> 'int ()' Function 0x15886d4c0 'cond_resched' 'int ()'
    |     `-GotoStmt 0x15886d6d0 <line:34:4, col:9> 'again' 0x1588671e8
    |-CallExpr 0x15886d810 <line:37:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15886d778 <col:2> 'int ()' Function 0x1588676b8 'spin_unlock' 'int ()'
    | `-UnaryOperator 0x15886d7f8 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x15886d7d0 <col:15, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15886d798 <col:15> 'struct super_block *' lvalue ParmVar 0x15884fa48 'sb' 'struct super_block *'
    `-ReturnStmt 0x15886d890 <line:41:2, col:9>
      `-ImplicitCastExpr 0x15886d878 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15886d858 <col:9> 'int' lvalue Var 0x158866b08 'busy' 'int'
