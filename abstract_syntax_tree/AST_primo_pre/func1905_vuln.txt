`-FunctionDecl 0x13d9282b8  line:1:8 invalid cJSON_CreateStringArray 'int *(const char **, int)'
  |-ParmVarDecl 0x13d928128 <col:33, col:46> col:46 used strings 'const char **'
  |-ParmVarDecl 0x13d9281a8 <col:55, col:59> col:59 used count 'int'
  `-CompoundStmt 0x13d941e10 <line:2:1, line:14:1>
    |-DeclStmt 0x13d9283f0 <line:3:2, col:7>
    | `-VarDecl 0x13d928388 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x13d941d90 <line:5:2, line:12:2>
    | |-BinaryOperator 0x13d928758 <line:5:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x13d928718 <col:8> 'int' lvalue Var 0x13d928388 'i' 'int'
    | | `-IntegerLiteral 0x13d928738 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d9418b0 <col:15, col:24> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x13d941840 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13d941890 <col:20, col:24> 'int' '<'
    | |   |-ImplicitCastExpr 0x13d941860 <col:20> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x13d928790 <col:20> 'int' lvalue Var 0x13d928388 'i' 'int'
    | |   `-ImplicitCastExpr 0x13d941878 <col:24> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d9287b0 <col:24> 'int' lvalue ParmVar 0x13d9281a8 'count' 'int'
    | |-UnaryOperator 0x13d9418f0 <col:31, col:33> 'int' prefix '++'
    | | `-DeclRefExpr 0x13d9418d0 <col:33> 'int' lvalue Var 0x13d928388 'i' 'int'
    | `-CompoundStmt 0x13d941d78 <col:37, line:12:2>
    |   `-IfStmt 0x13d941d30 <line:7:3, line:10:24> has_else
    |     |-UnaryOperator 0x13d941b28 <line:7:8, col:10> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x13d941b10 <col:10> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13d941af0 <col:10> 'int' lvalue Var 0x13d928388 'i' 'int'
    |     |-NullStmt 0x13d941d28 <line:8:4>
    |     `-CallExpr 0x13d941cf8 <line:10:4, col:24> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13d941c38 <col:4> 'int ()' Function 0x13d941b80 'suffix_object' 'int ()'
    |       |-RecoveryExpr 0x13d941cb8 <col:19> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x13d941cd8 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13d941e00 <line:13:2, col:9>
      `-RecoveryExpr 0x13d941de0 <col:9> '<dependent type>' contains-errors lvalue
