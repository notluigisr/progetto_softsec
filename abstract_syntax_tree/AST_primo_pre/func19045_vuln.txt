`-FunctionDecl 0x1218126e8  line:1:5 invalid av_reallocp_array 'int (void *, int, int)'
  |-ParmVarDecl 0x1218124d8 <col:23, col:29> col:29 used ptr 'void *'
  |-ParmVarDecl 0x121812570 <col:34, col:41> col:41 invalid nmemb 'int'
  |-ParmVarDecl 0x1218125f0 <col:48, col:55> col:55 invalid size 'int'
  `-CompoundStmt 0x12182bea0 <line:2:1, line:8:1>
    |-DeclStmt 0x1218128b0 <line:3:5, col:24>
    | `-VarDecl 0x1218127f8 <col:5, col:21> col:12 used ptrptr 'void **' cinit
    |   `-ImplicitCastExpr 0x121812898 <col:21> 'void **' <BitCast>
    |     `-ImplicitCastExpr 0x121812880 <col:21> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x121812860 <col:21> 'void *' lvalue ParmVar 0x1218124d8 'ptr' 'void *'
    |-BinaryOperator 0x121812b58 <line:4:5, col:48> 'void *' contains-errors '='
    | |-UnaryOperator 0x121812900 <col:5, col:6> 'void *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1218128e8 <col:6> 'void **' <LValueToRValue>
    | |   `-DeclRefExpr 0x1218128c8 <col:6> 'void **' lvalue Var 0x1218127f8 'ptrptr' 'void **'
    | `-CallExpr 0x121812b20 <col:15, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x121812a70 <col:15> 'int ()' Function 0x1218129b8 'av_realloc_f' 'int ()'
    |   |-UnaryOperator 0x121812ac8 <col:28, col:29> 'void *' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x121812ab0 <col:29> 'void **' <LValueToRValue>
    |   |   `-DeclRefExpr 0x121812a90 <col:29> 'void **' lvalue Var 0x1218127f8 'ptrptr' 'void **'
    |   |-RecoveryExpr 0x121812ae0 <col:37> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x121812b00 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12182be50 <line:5:5, line:6:30>
    | |-BinaryOperator 0x12182bc98 <line:5:9, col:36> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x121812be0 <col:9, col:11> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x121812bc8 <col:10, col:11> 'void *' <LValueToRValue>
    | | |   `-UnaryOperator 0x121812bb0 <col:10, col:11> 'void *' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x121812b98 <col:11> 'void **' <LValueToRValue>
    | | |       `-DeclRefExpr 0x121812b78 <col:11> 'void **' lvalue Var 0x1218127f8 'ptrptr' 'void **'
    | | `-UnaryOperator 0x12182bc80 <col:21, col:36> 'int' contains-errors prefix '!' cannot overflow
    | |   `-ParenExpr 0x12182bc60 <col:22, col:36> 'int' contains-errors
    | |     `-BinaryOperator 0x12182bc40 <col:23, col:32> 'int' contains-errors '&&'
    | |       |-RecoveryExpr 0x12182bc00 <col:23> '<dependent type>' contains-errors lvalue
    | |       `-RecoveryExpr 0x12182bc20 <col:32> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12182be40 <line:6:9, col:30>
    |   `-CallExpr 0x12182be18 <col:16, col:30> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12182bd98 <col:16> 'int ()' Function 0x12182bce0 'AVERROR' 'int ()'
    |     `-RecoveryExpr 0x12182bdf8 <col:24> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12182be90 <line:7:5, col:12>
      `-IntegerLiteral 0x12182be70 <col:12> 'int' 0
