`-FunctionDecl 0x1461282e8  line:1:29 invalid unimap_bsearch 'unsigned char (const int *, unsigned int, int)' static inline
  |-ParmVarDecl 0x1461280f0 <col:44, col:62> col:62 invalid table 'const int *'
  |-ParmVarDecl 0x146128170 <col:69, col:78> col:78 used code_key_a 'unsigned int'
  |-ParmVarDecl 0x1461281f0 <col:90, col:97> col:97 invalid num 'int'
  `-CompoundStmt 0x14680b350 <line:2:1, line:24:1>
    |-DeclStmt 0x146128448 <line:3:2, line:4:10>
    | `-VarDecl 0x1461283c0 <line:3:2, col:20> col:20 referenced invalid l 'const int *'
    |-DeclStmt 0x1461284e0 <line:6:2, col:25>
    | `-VarDecl 0x146128478 <col:2, col:17> col:17 used code_key 'unsigned short'
    |-IfStmt 0x1461285b8 <line:9:2, line:10:10>
    | |-BinaryOperator 0x146128550 <line:9:6, col:19> 'int' '>'
    | | |-ImplicitCastExpr 0x146128538 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1461284f8 <col:6> 'unsigned int' lvalue ParmVar 0x146128170 'code_key_a' 'unsigned int'
    | | `-IntegerLiteral 0x146128518 <col:19> 'unsigned int' 65535
    | `-ReturnStmt 0x1461285a8 <line:10:3, col:10>
    |   `-ImplicitCastExpr 0x146128590 <col:10> 'unsigned char' <IntegralCast>
    |     `-IntegerLiteral 0x146128570 <col:10> 'int' 0
    |-BinaryOperator 0x146128670 <line:12:2, col:30> 'unsigned short' '='
    | |-DeclRefExpr 0x1461285d8 <col:2> 'unsigned short' lvalue Var 0x146128478 'code_key' 'unsigned short'
    | `-CStyleCastExpr 0x146128648 <col:13, col:30> 'unsigned short' <IntegralCast>
    |   `-ImplicitCastExpr 0x146128630 <col:30> 'unsigned int' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x1461285f8 <col:30> 'unsigned int' lvalue ParmVar 0x146128170 'code_key_a' 'unsigned int'
    |-WhileStmt 0x14680b2e8 <line:14:2, line:22:2>
    | |-BinaryOperator 0x146128708 <line:14:9, col:14> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x146128690 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1461286e8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14680b2d0 <col:17, line:22:2>
    |   `-IfStmt 0x14680b2a0 <line:16:3, line:21:14> has_else
    |     |-BinaryOperator 0x14680aed0 <line:16:7, col:21> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x1461287c0 <col:7> 'unsigned short' lvalue Var 0x146128478 'code_key' 'unsigned short'
    |     | `-CXXDependentScopeMemberExpr 0x14680ae88 <col:18, col:21> '<dependent type>' contains-errors lvalue ->un_code_point
    |     |   `-RecoveryExpr 0x14680ae68 <col:18> '<dependent type>' contains-errors lvalue
    |     |-NullStmt 0x14680b298 <line:17:4>
    |     `-IfStmt 0x14680b268 <line:18:8, line:21:14> has_else
    |       |-BinaryOperator 0x14680b050 <line:18:12, col:26> 'int' contains-errors '>'
    |       | |-DeclRefExpr 0x14680af48 <col:12> 'unsigned short' lvalue Var 0x146128478 'code_key' 'unsigned short'
    |       | `-CXXDependentScopeMemberExpr 0x14680b008 <col:23, col:26> '<dependent type>' contains-errors lvalue ->un_code_point
    |       |   `-RecoveryExpr 0x14680afe8 <col:23> '<dependent type>' contains-errors lvalue
    |       |-BinaryOperator 0x14680b170 <line:19:4, col:12> '<dependent type>' contains-errors '='
    |       | |-RecoveryExpr 0x14680b090 <col:4> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x14680b070 <col:4> 'const int *' lvalue Var 0x1461283c0 'l' 'const int *'
    |       | `-BinaryOperator 0x14680b150 <col:8, col:12> '<dependent type>' contains-errors '+'
    |       |   |-RecoveryExpr 0x14680b130 <col:8> '<dependent type>' contains-errors lvalue
    |       |   `-IntegerLiteral 0x14680b0d0 <col:12> 'int' 1
    |       `-ReturnStmt 0x14680b258 <line:21:4, col:14>
    |         `-CXXDependentScopeMemberExpr 0x14680b210 <col:11, col:14> '<dependent type>' contains-errors lvalue ->cs_code
    |           `-RecoveryExpr 0x14680b1f0 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14680b340 <line:23:2, col:9>
      `-ImplicitCastExpr 0x14680b328 <col:9> 'unsigned char' <IntegralCast>
        `-IntegerLiteral 0x14680b308 <col:9> 'int' 0
