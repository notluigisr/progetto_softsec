`-FunctionDecl 0x150928198  line:1:12 DefragMfIpv6Test 'int (void)' static
  `-CompoundStmt 0x150942720 <line:2:1, line:53:1>
    |-DeclStmt 0x150928328 <line:3:5, col:19>
    | `-VarDecl 0x1509282a0 <col:5, col:18> col:9 used retval 'int' cinit
    |   `-IntegerLiteral 0x150928308 <col:18> 'int' 0
    |-DeclStmt 0x1509283e0 <line:4:5, col:18>
    | `-VarDecl 0x150928358 <col:5, col:17> col:9 used ip_id 'int' cinit
    |   `-IntegerLiteral 0x1509283c0 <col:17> 'int' 9
    |-CallExpr 0x1509285b8 <line:7:5, col:16> 'int'
    | `-ImplicitCastExpr 0x1509285a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x150928550 <col:5> 'int ()' Function 0x150928498 'DefragInit' 'int ()'
    |-IfStmt 0x150941da0 <line:12:5, line:14:5>
    | |-BinaryOperator 0x150941d00 <line:12:9, col:43> 'int' contains-errors '||'
    | | |-BinaryOperator 0x150941c80 <col:9, col:29> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x150941c00 <col:9, col:15> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x150941bc0 <col:9> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x150941be0 <col:15> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x150941c60 <col:23, col:29> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x150941c20 <col:23> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x150941c40 <col:29> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x150941ce0 <col:37, col:43> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x150941ca0 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x150941cc0 <col:43> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x150941d88 <col:49, line:14:5>
    |   `-GotoStmt 0x150941d70 <line:13:9, col:14> 'end' 0x150941d20
    |-IfStmt 0x150941fb0 <line:17:5, line:19:5>
    | |-RecoveryExpr 0x150941f60 <line:17:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x150941f98 <col:20, line:19:5>
    |   `-GotoStmt 0x150941f80 <line:18:9, col:14> 'end' 0x150941d20
    |-IfStmt 0x150942040 <line:22:5, line:24:5>
    | |-RecoveryExpr 0x150941ff0 <line:22:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x150942028 <col:20, line:24:5>
    |   `-GotoStmt 0x150942010 <line:23:9, col:14> 'end' 0x150941d20
    |-IfStmt 0x1509420d0 <line:28:5, line:30:5>
    | |-RecoveryExpr 0x150942080 <line:28:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x1509420b8 <col:20, line:30:5>
    |   `-GotoStmt 0x1509420a0 <line:29:9, col:14> 'end' 0x150941d20
    |-IfStmt 0x150942260 <line:33:5, line:35:5>
    | |-RecoveryExpr 0x150942210 <line:33:9, col:29> '_Bool' contains-errors
    | `-CompoundStmt 0x150942248 <col:33, line:35:5>
    |   `-GotoStmt 0x150942230 <line:34:9, col:14> 'end' 0x150941d20
    |-BinaryOperator 0x1509422c0 <line:37:5, col:14> 'int' '='
    | |-DeclRefExpr 0x150942280 <col:5> 'int' lvalue Var 0x1509282a0 'retval' 'int'
    | `-IntegerLiteral 0x1509422a0 <col:14> 'int' 1
    |-LabelStmt 0x150942430 <line:38:1, line:41:5> 'end'
    | `-IfStmt 0x150942410 <line:39:5, line:41:5>
    |   |-RecoveryExpr 0x1509422e0 <line:39:9, col:15> '_Bool' contains-errors
    |   `-CompoundStmt 0x150942400 <col:21, line:41:5>
    |-IfStmt 0x1509424a0 <line:42:5, line:44:5>
    | |-RecoveryExpr 0x150942450 <line:42:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x150942490 <col:21, line:44:5>
    |-IfStmt 0x150942510 <line:45:5, line:47:5>
    | |-RecoveryExpr 0x1509424c0 <line:45:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x150942500 <col:21, line:47:5>
    |-IfStmt 0x150942580 <line:48:5, line:50:5>
    | |-RecoveryExpr 0x150942530 <line:48:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x150942570 <col:20, line:50:5>
    |-CallExpr 0x1509426b8 <line:51:5, col:19> 'int'
    | `-ImplicitCastExpr 0x1509426a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x150942680 <col:5> 'int ()' Function 0x1509425c8 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x150942710 <line:52:5, col:12>
      `-ImplicitCastExpr 0x1509426f8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1509426d8 <col:12> 'int' lvalue Var 0x1509282a0 'retval' 'int'
