`-FunctionDecl 0x138928318  line:1:1 invalid hermesBuiltinApply 'int (void *, int *, int)'
  |-ParmVarDecl 0x1389280d8 <col:20, col:25> col:26 'void *'
  |-ParmVarDecl 0x1389281a8 <col:28, col:37> col:37 invalid runtime 'int *'
  |-ParmVarDecl 0x138928228 <col:46, col:57> col:57 invalid args 'int'
  `-CompoundStmt 0x139009398 <col:63, line:37:1>
    |-IfStmt 0x139008d48 <line:5:3, line:8:3>
    | |-CallExpr 0x138928740 <line:5:7, col:24> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x138928660 <col:7> 'int ()' Function 0x1389285a8 'LLVM_UNLIKELY' 'int ()'
    | | `-UnaryOperator 0x138928728 <col:21, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x138928710 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1389286f0 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139008d30 <col:27, line:8:3>
    |   `-ReturnStmt 0x139008d20 <line:6:5, line:7:36>
    |     `-CallExpr 0x139008cf0 <line:6:12, line:7:36> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x138928788 <line:6:12, col:21> '<dependent type>' contains-errors lvalue ->raiseTypeErrorForValue
    |       | `-RecoveryExpr 0x138928768 <col:12> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x139008c68 <line:7:9, col:28> '<dependent type>' contains-errors
    |       | |-CXXDependentScopeMemberExpr 0x139008c00 <col:9, col:14> '<dependent type>' contains-errors lvalue .getArgHandle
    |       | | `-RecoveryExpr 0x1389287d0 <col:9> '<dependent type>' contains-errors lvalue
    |       | `-IntegerLiteral 0x139008c48 <col:27> 'int' 0
    |       `-StringLiteral 0x139008cd0 <col:31> 'char[4]' lvalue "STR"
    |-IfStmt 0x139009078 <line:11:3, line:13:3>
    | |-CallExpr 0x139008f78 <line:11:7, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x139008e98 <col:7> 'int ()' Function 0x1389285a8 'LLVM_UNLIKELY' 'int ()'
    | | `-UnaryOperator 0x139008f60 <col:21, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x139008f48 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x139008f28 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139009060 <col:33, line:13:3>
    |   `-ReturnStmt 0x139009050 <line:12:5, col:41>
    |     `-CallExpr 0x139009028 <col:12, col:41> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x139008fc0 <col:12, col:21> '<dependent type>' contains-errors lvalue ->raiseTypeError
    |       | `-RecoveryExpr 0x139008fa0 <col:12> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x139009008 <col:36> 'char[4]' lvalue "STR"
    `-IfStmt 0x139009338 <line:20:3, line:28:3> has_else
      |-RecoveryExpr 0x1390090b0 <line:20:7> '_Bool' contains-errors
      |-CompoundStmt 0x139009258 <col:22, line:26:3>
      | |-DeclStmt 0x139009150 <line:21:5, col:68>
      | | `-VarDecl 0x1390090e8 <col:5, col:10> col:10 used thisValRes 'int' auto
      | `-IfStmt 0x1390091d8 <line:22:5, line:24:5>
      |   |-RecoveryExpr 0x1390091a8 <line:22:9, col:63> '_Bool' contains-errors
      |   `-CompoundStmt 0x1390091c8 <col:66, line:24:5>
      `-CompoundStmt 0x139009328 <line:26:10, line:28:3>
