`-FunctionDecl 0x14680e358  line:1:12 emsff_init 'int (struct hid_device *)' static
  |-ParmVarDecl 0x14680e248 <col:23, col:42> col:42 used hid 'struct hid_device *'
  `-CompoundStmt 0x14682c290 <line:2:1, line:53:1>
    |-DeclStmt 0x146826838 <line:3:2, col:28>
    | |-RecordDecl 0x146826650 <col:2, col:9> col:9 struct emsff_device
    | `-VarDecl 0x1468267b8 <col:2, col:23> col:23 used emsff 'struct emsff_device *'
    |-DeclStmt 0x146826a38 <line:4:2, col:27>
    | |-RecordDecl 0x146826850 <col:2, col:9> col:9 struct hid_report
    | `-VarDecl 0x1468269b8 <col:2, col:21> col:21 used report 'struct hid_report *'
    |-DeclStmt 0x146826e18 <line:5:2, line:6:30>
    | |-RecordDecl 0x146826a50 <line:5:2, col:9> col:9 struct hid_input
    | `-VarDecl 0x146826bb8 <col:2, col:20> col:20 used hidinput 'struct hid_input *'
    |-DeclStmt 0x146827090 <line:7:2, line:8:52>
    | |-RecordDecl 0x146826e30 <line:7:2, col:9> col:9 struct list_head
    | `-VarDecl 0x146826f98 <col:2, col:20> col:20 used report_list 'struct list_head *'
    |-DeclStmt 0x1468272f8 <line:9:2, col:41>
    | |-RecordDecl 0x1468270a8 <col:2, col:9> col:9 struct input_dev
    | `-VarDecl 0x146827218 <col:2, col:36> col:20 used dev 'struct input_dev *' cinit
    |   `-RecoveryExpr 0x1468272b8 <col:26, col:36> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x146827280 <col:26> 'struct hid_input *' lvalue Var 0x146826bb8 'hidinput' 'struct hid_input *'
    |-DeclStmt 0x146827390 <line:10:2, col:11>
    | `-VarDecl 0x146827328 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x1468290a0 <line:12:2, line:15:2>
    | |-CallExpr 0x146827518 <line:12:6, col:28> 'int'
    | | |-ImplicitCastExpr 0x146827500 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x146827488 <col:6> 'int ()' Function 0x1468273d0 'list_empty' 'int ()'
    | | `-ImplicitCastExpr 0x146827540 <col:17> 'struct list_head *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1468274a8 <col:17> 'struct list_head *' lvalue Var 0x146826f98 'report_list' 'struct list_head *'
    | `-CompoundStmt 0x146829080 <col:31, line:15:2>
    |   |-CallExpr 0x146828f78 <line:13:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x146828f60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x146828eb8 <col:3> 'int ()' Function 0x146828e00 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x146828fa8 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x146828ed8 <col:11> 'struct hid_device *' lvalue ParmVar 0x14680e248 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x146828fc0 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x146828f40 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x146829070 <line:14:3, col:11>
    |     `-UnaryOperator 0x146829058 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x146829040 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x146829020 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x146829378 <line:18:2, line:21:2>
    | |-BinaryOperator 0x1468291b8 <line:18:6, col:25> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x146829170 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x146829138 <col:6> 'struct hid_report *' lvalue Var 0x1468269b8 'report' 'struct hid_report *'
    | | `-IntegerLiteral 0x146829198 <col:25> 'int' 1
    | `-CompoundStmt 0x146829358 <col:28, line:21:2>
    |   |-CallExpr 0x146829250 <line:19:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x146829238 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1468291d8 <col:3> 'int ()' Function 0x146828e00 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x146829280 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1468291f8 <col:11> 'struct hid_device *' lvalue ParmVar 0x14680e248 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x146829298 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x146829218 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x146829348 <line:20:3, col:11>
    |     `-UnaryOperator 0x146829330 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x146829318 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1468292f8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x146829678 <line:23:2, line:26:2>
    | |-BinaryOperator 0x1468294b8 <line:23:6, col:39> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x146829450 <col:6, col:24> '<dependent type>' contains-errors lvalue ->report_count
    | | | `-ArraySubscriptExpr 0x146829430 <col:6, col:21> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x146829418 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-RecoveryExpr 0x1468293d0 <col:6, col:14> '<dependent type>' contains-errors lvalue
    | | |   |   `-DeclRefExpr 0x146829398 <col:6> 'struct hid_report *' lvalue Var 0x1468269b8 'report' 'struct hid_report *'
    | | |   `-IntegerLiteral 0x1468293f8 <col:20> 'int' 0
    | | `-IntegerLiteral 0x146829498 <col:39> 'int' 7
    | `-CompoundStmt 0x146829658 <col:42, line:26:2>
    |   |-CallExpr 0x146829550 <line:24:3, col:21> 'int'
    |   | |-ImplicitCastExpr 0x146829538 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1468294d8 <col:3> 'int ()' Function 0x146828e00 'hid_err' 'int ()'
    |   | |-ImplicitCastExpr 0x146829580 <col:11> 'struct hid_device *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1468294f8 <col:11> 'struct hid_device *' lvalue ParmVar 0x14680e248 'hid' 'struct hid_device *'
    |   | `-ImplicitCastExpr 0x146829598 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x146829518 <col:16> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x146829648 <line:25:3, col:11>
    |     `-UnaryOperator 0x146829630 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x146829618 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1468295f8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x146829d38 <line:35:2, line:38:2>
    | |-ImplicitCastExpr 0x146829b40 <line:35:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x146829b20 <col:6> 'int' lvalue Var 0x146827328 'error' 'int'
    | `-CompoundStmt 0x146829d18 <col:13, line:38:2>
    |   |-CallExpr 0x146829c90 <line:36:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x146829c78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x146829c38 <col:3> 'int ()' Function 0x146829b80 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x146829cb8 <col:9> 'struct emsff_device *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146829c58 <col:9> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    |   `-ReturnStmt 0x146829d08 <line:37:3, col:10>
    |     `-ImplicitCastExpr 0x146829cf0 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x146829cd0 <col:10> 'int' lvalue Var 0x146827328 'error' 'int'
    |-BinaryOperator 0x146829dd8 <line:40:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x146829d90 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x146829d58 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | `-DeclRefExpr 0x146829db8 <col:18> 'struct hid_report *' lvalue Var 0x1468269b8 'report' 'struct hid_report *'
    |-BinaryOperator 0x14682b3c0 <line:41:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682b380 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682b368 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682b300 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682b2e0 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682b2c8 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682b260 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682b238 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682b200 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682b2a8 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682b348 <col:33> 'int' 0
    | `-IntegerLiteral 0x14682b3a0 <col:38> 'int' 1
    |-BinaryOperator 0x14682b5a0 <line:42:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682b560 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682b548 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682b4e0 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682b4c0 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682b4a8 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682b440 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682b418 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682b3e0 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682b488 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682b528 <col:33> 'int' 1
    | `-IntegerLiteral 0x14682b580 <col:38> 'int' 0
    |-BinaryOperator 0x14682b780 <line:43:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682b740 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682b728 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682b6c0 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682b6a0 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682b688 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682b620 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682b5f8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682b5c0 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682b668 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682b708 <col:33> 'int' 2
    | `-IntegerLiteral 0x14682b760 <col:38> 'int' 0
    |-BinaryOperator 0x14682b960 <line:44:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682b920 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682b908 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682b8a0 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682b880 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682b868 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682b800 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682b7d8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682b7a0 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682b848 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682b8e8 <col:33> 'int' 3
    | `-IntegerLiteral 0x14682b940 <col:38> 'int' 0
    |-BinaryOperator 0x14682bb40 <line:45:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682bb00 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682bae8 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682ba80 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682ba60 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682ba48 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682b9e0 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682b9b8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682b980 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682ba28 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682bac8 <col:33> 'int' 4
    | `-IntegerLiteral 0x14682bb20 <col:38> 'int' 0
    |-BinaryOperator 0x14682bd20 <line:46:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682bce0 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682bcc8 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682bc60 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682bc40 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682bc28 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682bbc0 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682bb98 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682bb60 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682bc08 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682bca8 <col:33> 'int' 5
    | `-IntegerLiteral 0x14682bd00 <col:38> 'int' 0
    |-BinaryOperator 0x14682bf00 <line:47:2, col:38> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14682bec0 <col:2, col:34> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14682bea8 <col:2, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14682be40 <col:2, col:27> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x14682be20 <col:2, col:24> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x14682be08 <col:2, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x14682bda0 <col:2, col:17> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x14682bd78 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x14682bd40 <col:2> 'struct emsff_device *' lvalue Var 0x1468267b8 'emsff' 'struct emsff_device *'
    | | |     `-IntegerLiteral 0x14682bde8 <col:23> 'int' 0
    | | `-IntegerLiteral 0x14682be88 <col:33> 'int' 6
    | `-IntegerLiteral 0x14682bee0 <col:38> 'int' 0
    |-CallExpr 0x14682c200 <line:50:2, col:21> 'int'
    | |-ImplicitCastExpr 0x14682c1e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14682c180 <col:2> 'int ()' Function 0x14682c0c8 'hid_info' 'int ()'
    | |-ImplicitCastExpr 0x14682c230 <col:11> 'struct hid_device *' <LValueToRValue>
    | | `-DeclRefExpr 0x14682c1a0 <col:11> 'struct hid_device *' lvalue ParmVar 0x14680e248 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x14682c248 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14682c1c0 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x14682c280 <line:52:2, col:9>
      `-IntegerLiteral 0x14682c260 <col:9> 'int' 0
