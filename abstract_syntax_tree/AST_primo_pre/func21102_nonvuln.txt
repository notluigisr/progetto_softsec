`-FunctionDecl 0x12f00dfa0  line:1:13 invalid jsR_calllwfunction 'void (int *, int, int *, int *)' static
  |-ParmVarDecl 0x12f00dd28 <col:32, col:42> col:42 invalid J 'int *'
  |-ParmVarDecl 0x12f00dda8 <col:45, col:49> col:49 used n 'int'
  |-ParmVarDecl 0x12f00de28 <col:52, col:65> col:65 invalid F 'int *'
  |-ParmVarDecl 0x12f00dea8 <col:68, col:84> col:84 invalid scope 'int *'
  `-CompoundStmt 0x12f027fd0 <line:2:1, line:21:1>
    |-DeclStmt 0x12f00e0e8 <line:4:2, col:7>
    | `-VarDecl 0x12f00e080 <col:2, col:6> col:6 used i 'int'
    |-CallExpr 0x12f00e2c0 <line:6:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f00e260 <col:2> 'int ()' Function 0x12f00e1a8 'jsR_savescope' 'int ()'
    | |-RecoveryExpr 0x12f00e280 <col:16> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12f00e2a0 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f027698 <line:8:2, line:11:2>
    | |-BinaryOperator 0x12f00e378 <line:8:6, col:13> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x12f00e2f0 <col:6> 'int' lvalue ParmVar 0x12f00dda8 'n' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12f00e330 <col:10, col:13> '<dependent type>' contains-errors lvalue ->numparams
    | |   `-RecoveryExpr 0x12f00e310 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f027678 <col:24, line:11:2>
    |   |-CallExpr 0x12f0275a0 <line:9:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12f0274b8 <col:3> 'int ()' Function 0x12f027400 'js_pop' 'int ()'
    |   | |-RecoveryExpr 0x12f0274d8 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x12f027580 <col:13, col:20> '<dependent type>' contains-errors '-'
    |   |   |-DeclRefExpr 0x12f0274f8 <col:13> 'int' lvalue ParmVar 0x12f00dda8 'n' 'int'
    |   |   `-CXXDependentScopeMemberExpr 0x12f027538 <col:17, col:20> '<dependent type>' contains-errors lvalue ->numparams
    |   |     `-RecoveryExpr 0x12f027518 <col:17> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x12f027658 <line:10:3, col:10> 'int' contains-errors '='
    |     |-DeclRefExpr 0x12f0275d0 <col:3> 'int' lvalue ParmVar 0x12f00dda8 'n' 'int'
    |     `-CXXDependentScopeMemberExpr 0x12f027610 <col:7, col:10> '<dependent type>' contains-errors lvalue ->numparams
    |       `-RecoveryExpr 0x12f0275f0 <col:7> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12f027958 <line:12:2, line:13:21>
    | |-BinaryOperator 0x12f027710 <line:12:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x12f0276b8 <col:7> 'int' lvalue Var 0x12f00e080 'i' 'int'
    | | `-ImplicitCastExpr 0x12f0276f8 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f0276d8 <col:11> 'int' lvalue ParmVar 0x12f00dda8 'n' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12f0277b8 <col:14, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12f027730 <col:14> 'int' lvalue Var 0x12f00e080 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12f027770 <col:18, col:21> '<dependent type>' contains-errors lvalue ->varlen
    | |   `-RecoveryExpr 0x12f027750 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12f0277f8 <col:29, col:31> 'int' prefix '++'
    | | `-DeclRefExpr 0x12f0277d8 <col:31> 'int' lvalue Var 0x12f00e080 'i' 'int'
    | `-CallExpr 0x12f027930 <line:13:3, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f0278f0 <col:3> 'int ()' Function 0x12f027838 'js_pushundefined' 'int ()'
    |   `-RecoveryExpr 0x12f027910 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f027ad0 <line:15:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f027a70 <col:2> 'int ()' Function 0x12f0279b8 'jsR_run' 'int ()'
    | |-RecoveryExpr 0x12f027a90 <col:10> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12f027ab0 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f027e58 <line:18:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f027db0 <col:2> 'int ()' Function 0x12f027cf8 'js_pushvalue' 'int ()'
    | |-RecoveryExpr 0x12f027dd0 <col:15> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12f027e38 <col:18> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12f027fa8 <line:20:2, col:20> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12f027f68 <col:2> 'int ()' Function 0x12f027eb0 'jsR_restorescope' 'int ()'
      `-RecoveryExpr 0x12f027f88 <col:19> '<dependent type>' contains-errors lvalue
