`-FunctionDecl 0x123928758  line:1:5 kvm_emulate_wrmsr 'int (struct kvm_vcpu *)'
  |-ParmVarDecl 0x123928648 <col:23, col:40> col:40 used vcpu 'struct kvm_vcpu *'
  `-CompoundStmt 0x123941818 <line:2:1, line:23:1>
    |-DeclStmt 0x123940ae8 <line:5:2, col:7>
    | `-VarDecl 0x123940a80 <col:2, col:6> col:6 used r 'int'
    |-BinaryOperator 0x123940d70 <line:7:2, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x123940b00 <col:2> 'int' lvalue Var 0x123940a80 'r' 'int'
    | `-CallExpr 0x123940d38 <col:6, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x123940c30 <col:6> 'int ()' Function 0x123940b78 'kvm_set_msr' 'int ()'
    |   |-DeclRefExpr 0x123940c50 <col:18> 'struct kvm_vcpu *' lvalue ParmVar 0x123928648 'vcpu' 'struct kvm_vcpu *'
    |   |-RecoveryExpr 0x123940cf8 <col:24> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x123940d18 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1239415b0 <line:9:2, line:20:2> has_else
    | |-UnaryOperator 0x123940dc8 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x123940db0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x123940d90 <col:7> 'int' lvalue Var 0x123940a80 'r' 'int'
    | |-CompoundStmt 0x123940fb0 <col:10, line:11:2>
    | | `-CallExpr 0x123940f80 <line:10:3, col:32> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x123940ec0 <col:3> 'int ()' Function 0x123940e08 'trace_kvm_msr_write' 'int ()'
    | |   |-RecoveryExpr 0x123940f40 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x123940f60 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x123941588 <line:11:9, line:20:2>
    |   |-IfStmt 0x1239412b8 <line:13:3, line:15:11>
    |   | |-CallExpr 0x123941238 <line:13:7, line:14:39> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1239410a8 <line:13:7> 'int ()' Function 0x123940ff0 'kvm_msr_user_space' 'int ()'
    |   | | |-DeclRefExpr 0x1239410c8 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x123928648 'vcpu' 'struct kvm_vcpu *'
    |   | | |-RecoveryExpr 0x1239411b8 <col:32> '<dependent type>' contains-errors lvalue
    |   | | |-RecoveryExpr 0x1239411d8 <col:37> '<dependent type>' contains-errors lvalue
    |   | | |-RecoveryExpr 0x1239411f8 <col:57> '<dependent type>' contains-errors lvalue
    |   | | |-RecoveryExpr 0x123941218 <line:14:12> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x123941148 <col:38> 'int' lvalue Var 0x123940a80 'r' 'int'
    |   | `-ReturnStmt 0x1239412a8 <line:15:4, col:11>
    |   |   `-IntegerLiteral 0x123941288 <col:11> 'int' 0
    |   |-IfStmt 0x123941398 <line:17:3, line:18:11>
    |   | |-BinaryOperator 0x123941330 <line:17:7, col:11> 'int' '<'
    |   | | |-ImplicitCastExpr 0x123941318 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1239412d8 <col:7> 'int' lvalue Var 0x123940a80 'r' 'int'
    |   | | `-IntegerLiteral 0x1239412f8 <col:11> 'int' 0
    |   | `-ReturnStmt 0x123941388 <line:18:4, col:11>
    |   |   `-ImplicitCastExpr 0x123941370 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x123941350 <col:11> 'int' lvalue Var 0x123940a80 'r' 'int'
    |   `-CallExpr 0x123941558 <line:19:3, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x123941498 <col:3> 'int ()' Function 0x1239413e0 'trace_kvm_msr_write_ex' 'int ()'
    |     |-RecoveryExpr 0x123941518 <col:26> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x123941538 <col:31> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x123941808 <line:22:2, col:59>
      `-CallExpr 0x1239417d8 <col:9, col:59> '<dependent type>' contains-errors
        |-CallExpr 0x1239417b0 <col:9, col:50> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1239416c0 <col:9> 'int ()' Function 0x123941608 'static_call' 'int ()'
        | `-RecoveryExpr 0x123941790 <col:21> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x123941720 <col:52> 'struct kvm_vcpu *' lvalue ParmVar 0x123928648 'vcpu' 'struct kvm_vcpu *'
        `-DeclRefExpr 0x123941740 <col:58> 'int' lvalue Var 0x123940a80 'r' 'int'
