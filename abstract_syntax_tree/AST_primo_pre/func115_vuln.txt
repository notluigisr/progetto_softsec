`-FunctionDecl 0x15300e308  line:1:14 invalid EvalHybrid 'int (int *, int *, int *, int *, const int *, const int *, const int *, int *, int *, int *)'
  |-ParmVarDecl 0x15300dd28 <col:25, col:40> col:40 invalid context 'int *'
  |-ParmVarDecl 0x15300dda8 <col:49, col:61> col:61 invalid node 'int *'
  |-ParmVarDecl 0x15300de28 <line:2:25, col:43> col:43 invalid params 'int *'
  |-ParmVarDecl 0x15300dea8 <col:51, col:59> col:59 invalid data 'int *'
  |-ParmVarDecl 0x15300df28 <line:3:25, col:45> col:45 invalid input 'const int *'
  |-ParmVarDecl 0x15300dfa8 <col:52, col:72> col:72 invalid filter 'const int *'
  |-ParmVarDecl 0x15300e028 <line:4:25, col:45> col:45 invalid bias 'const int *'
  |-ParmVarDecl 0x15300e0a8 <col:51, col:65> col:65 invalid im2col 'int *'
  |-ParmVarDecl 0x15300e128 <line:5:25, col:39> col:39 invalid accum_scratch 'int *'
  |-ParmVarDecl 0x15300e1a8 <col:54, col:68> col:68 invalid output 'int *'
  `-CompoundStmt 0x153027b80 <col:76, line:69:1>
    |-DeclStmt 0x153808918 <line:6:3, col:53>
    | |-VarDecl 0x153808818 <col:3, col:9> col:9 used output_activation_min 'float'
    | `-VarDecl 0x153808898 <col:3, col:32> col:32 used output_activation_max 'float'
    |-CallExpr 0x153808bc0 <line:7:3, line:8:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x153808a90 <line:7:3> 'int ()' Function 0x1538089d8 'CalculateActivationRange' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x153808ad0 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation
    | | `-RecoveryExpr 0x153808ab0 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x153808b70 <col:48, col:49> 'float *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x153808b18 <col:49> 'float' lvalue Var 0x153808818 'output_activation_min' 'float'
    | `-UnaryOperator 0x153808ba8 <line:8:28, col:29> 'float *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x153808b88 <col:29> 'float' lvalue Var 0x153808898 'output_activation_max' 'float'
    |-DeclStmt 0x153808f50 <line:10:3, col:72>
    | `-VarDecl 0x153808c10 <col:3, col:71> col:13 used input_size 'const int' cinit
    |   `-BinaryOperator 0x153808f30 <col:26, col:71> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x153808d98 <col:26, col:43> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x153808d58 <col:26> 'int ()' Function 0x153808ca0 'NumElements' 'int ()'
    |     | `-RecoveryExpr 0x153808d78 <col:38> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x153808f00 <col:47, col:71> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x153808ea0 <col:47> 'int ()' Function 0x153808de8 'SizeOfDimension' 'int ()'
    |       |-RecoveryExpr 0x153808ec0 <col:63> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x153808ee0 <col:70> 'int' 0
    |-DeclStmt 0x153809078 <line:11:3, col:51>
    | `-VarDecl 0x153808f80 <col:3, col:50> col:13 used batch_size 'const int' cinit
    |   `-CallExpr 0x153809048 <col:26, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x153808fe8 <col:26> 'int ()' Function 0x153808de8 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x153809008 <col:42> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x153809028 <col:49> 'int' 0
    |-DeclStmt 0x153809158 <line:13:3, col:55>
    | `-VarDecl 0x1538090d8 <col:3, col:16> col:16 input_ptr 'const float *'
    |-DeclStmt 0x1538095d8 <line:24:3, col:76>
    | `-VarDecl 0x153809570 <col:3, col:10> col:10 used scaling_factors_ptr 'float *'
    |-CompoundStmt 0x1530277a8 <line:27:3, line:37:3>
    | `-ForStmt 0x153027770 <line:29:5, line:36:5>
    |   |-DeclStmt 0x153809690 <line:29:10, col:19>
    |   | `-VarDecl 0x153809608 <col:10, col:18> col:14 used b 'int' cinit
    |   |   `-IntegerLiteral 0x153809670 <col:18> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x153809718 <col:21, col:25> 'int' contains-errors '<'
    |   | |-ImplicitCastExpr 0x1538096e8 <col:21> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1538096a8 <col:21> 'int' lvalue Var 0x153809608 'b' 'int'
    |   | `-ImplicitCastExpr 0x153809700 <col:25> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x1538096c8 <col:25> 'const int' contains-errors lvalue Var 0x153808f80 'batch_size' 'const int'
    |   |-UnaryOperator 0x153809758 <col:37, col:39> 'int' prefix '++'
    |   | `-DeclRefExpr 0x153809738 <col:39> 'int' lvalue Var 0x153809608 'b' 'int'
    |   `-CompoundStmt 0x153027748 <col:42, line:36:5>
    |     |-DeclStmt 0x153027498 <line:30:7, col:35>
    |     | |-VarDecl 0x153809788 <col:7, col:13> col:13 unused_min 'float'
    |     | `-VarDecl 0x153027418 <col:7, col:25> col:25 unused_max 'float'
    |     |-DeclStmt 0x1530275c0 <line:31:7, col:40>
    |     | `-VarDecl 0x1530274c8 <col:7, col:30> col:17 offset 'const int' cinit
    |     |   `-BinaryOperator 0x1530275a0 <col:26, col:30> 'int' contains-errors '*'
    |     |     |-ImplicitCastExpr 0x153027570 <col:26> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x153027530 <col:26> 'int' lvalue Var 0x153809608 'b' 'int'
    |     |     `-ImplicitCastExpr 0x153027588 <col:30> 'int' contains-errors <LValueToRValue>
    |     |       `-DeclRefExpr 0x153027550 <col:30> 'const int' contains-errors lvalue Var 0x153808c10 'input_size' 'const int'
    |     `-CompoundAssignOperator 0x153027718 <line:35:7, col:48> 'float' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       |-ArraySubscriptExpr 0x153027648 <col:7, col:28> 'float' lvalue
    |       | |-ImplicitCastExpr 0x153027618 <col:7> 'float *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x1530275d8 <col:7> 'float *' lvalue Var 0x153809570 'scaling_factors_ptr' 'float *'
    |       | `-ImplicitCastExpr 0x153027630 <col:27> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x1530275f8 <col:27> 'int' lvalue Var 0x153809608 'b' 'int'
    |       `-CXXDependentScopeMemberExpr 0x1530276d0 <col:33, col:48> '<dependent type>' contains-errors lvalue .scale
    |         `-CXXDependentScopeMemberExpr 0x153027688 <col:33, col:41> '<dependent type>' contains-errors lvalue ->params
    |           `-RecoveryExpr 0x153027668 <col:33> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x1530277e0 <line:39:3, line:66:3>
      |-RecoveryExpr 0x1530277c0 <line:39:11> 'int' contains-errors
      `-CompoundStmt 0x153027b68 <col:24, line:66:3>
        `-CompoundStmt 0x153027b50 <line:43:27, line:65:5>
          `-BreakStmt 0x153027b48 <line:64:7>
