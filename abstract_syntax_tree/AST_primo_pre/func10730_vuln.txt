`-FunctionDecl 0x14e027578  line:1:32 invalid sk_add_backlog 'int (struct sock *, struct sk_buff *)' static inline
  |-ParmVarDecl 0x14e00e268 <col:47, col:60> col:60 used sk 'struct sock *'
  |-ParmVarDecl 0x14e027458 <col:64, col:80> col:80 used skb 'struct sk_buff *'
  `-CompoundStmt 0x14e027e00 <line:2:1, line:9:1>
    |-IfStmt 0x14e027a90 <line:3:2, line:4:11>
    | |-BinaryOperator 0x14e0279c8 <line:3:6, col:72> 'int' contains-errors '>='
    | | |-CXXDependentScopeMemberExpr 0x14e027690 <col:6, col:21> '<dependent type>' contains-errors lvalue .len
    | | | `-RecoveryExpr 0x14e027668 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14e027630 <col:6> 'struct sock *' lvalue ParmVar 0x14e00e268 'sk' 'struct sock *'
    | | `-CallExpr 0x14e027998 <col:28, col:72> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14e027830 <col:28> 'int ()' Function 0x14e027778 'max' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x14e0278b0 <col:32, col:47> '<dependent type>' contains-errors lvalue .limit
    | |   | `-RecoveryExpr 0x14e027888 <col:32, col:36> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14e027850 <col:32> 'struct sock *' lvalue ParmVar 0x14e00e268 'sk' 'struct sock *'
    | |   `-BinaryOperator 0x14e027978 <col:54, col:71> '<dependent type>' contains-errors '<<'
    | |     |-RecoveryExpr 0x14e027930 <col:54, col:58> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x14e0278f8 <col:54> 'struct sock *' lvalue ParmVar 0x14e00e268 'sk' 'struct sock *'
    | |     `-IntegerLiteral 0x14e027958 <col:71> 'int' 1
    | `-ReturnStmt 0x14e027a80 <line:4:3, col:11>
    |   `-UnaryOperator 0x14e027a68 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14e027a50 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14e027a30 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14e027c38 <line:6:2, col:26> 'int'
    | |-ImplicitCastExpr 0x14e027c20 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14e027b90 <col:2> 'int ()' Function 0x14e027ad8 '__sk_add_backlog' 'int ()'
    | |-ImplicitCastExpr 0x14e027c68 <col:19> 'struct sock *' <LValueToRValue>
    | | `-DeclRefExpr 0x14e027bb0 <col:19> 'struct sock *' lvalue ParmVar 0x14e00e268 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x14e027c80 <col:23> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x14e027bd0 <col:23> 'struct sk_buff *' lvalue ParmVar 0x14e027458 'skb' 'struct sk_buff *'
    |-CompoundAssignOperator 0x14e027da0 <line:7:2, col:29> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x14e027cf8 <col:2, col:17> '<dependent type>' contains-errors lvalue .len
    | | `-RecoveryExpr 0x14e027cd0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14e027c98 <col:2> 'struct sock *' lvalue ParmVar 0x14e00e268 'sk' 'struct sock *'
    | `-RecoveryExpr 0x14e027d78 <col:24, col:29> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14e027d40 <col:24> 'struct sk_buff *' lvalue ParmVar 0x14e027458 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x14e027df0 <line:8:2, col:9>
      `-IntegerLiteral 0x14e027dd0 <col:9> 'int' 0
