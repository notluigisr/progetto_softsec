`-FunctionDecl 0x12a928318  line:1:1 invalid ngx_mail_auth_plain 'int (int *, int *, int)'
  |-ParmVarDecl 0x12a928128 <col:21, col:41> col:41 referenced invalid s 'int *'
  |-ParmVarDecl 0x12a9281a8 <col:44, col:62> col:62 invalid c 'int *'
  |-ParmVarDecl 0x12a928228 <col:65, col:76> col:76 invalid n 'int'
  `-CompoundStmt 0x12a9434c0 <line:2:1, line:56:1>
    |-DeclStmt 0x12a9284f0 <line:3:5, col:25>
    | |-VarDecl 0x12a9283f0 <col:5, col:17> col:17 used p 'char *'
    | `-VarDecl 0x12a928470 <col:5, col:21> col:21 used last 'char *'
    |-IfStmt 0x12a941ab0 <line:14:5, line:16:5>
    | |-BinaryOperator 0x12a941a30 <line:14:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12a9419c8 <col:9, col:15> '<dependent type>' contains-errors lvalue .data
    | | | `-RecoveryExpr 0x12a9419a8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12a941a10 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a941a98 <col:29, line:16:5>
    |   `-ReturnStmt 0x12a941a88 <line:15:9, col:16>
    |     `-RecoveryExpr 0x12a941a68 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a941e70 <line:18:5, line:22:5>
    | |-RecoveryExpr 0x12a941c50 <line:18:9, col:47> '_Bool' contains-errors
    | `-CompoundStmt 0x12a941e60 <col:55, line:22:5>
    |-WhileStmt 0x12a942030 <line:27:5, col:33>
    | |-BinaryOperator 0x12a942000 <col:12, col:26> 'int' '&&'
    | | |-BinaryOperator 0x12a941f60 <col:12, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x12a941f30 <col:12> 'char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a941ef0 <col:12> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | | `-ImplicitCastExpr 0x12a941f48 <col:16> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12a941f10 <col:16> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | | `-ImplicitCastExpr 0x12a941fe8 <col:24, col:26> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12a941fd0 <col:24, col:26> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12a941fb8 <col:24, col:26> 'char' lvalue prefix '*' cannot overflow
    | |       `-UnaryOperator 0x12a941fa0 <col:25, col:26> 'char *' postfix '++'
    | |         `-DeclRefExpr 0x12a941f80 <col:25> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | `-CompoundStmt 0x12a942020 <col:30, col:33>
    |-IfStmt 0x12a9421b8 <line:29:5, line:33:5>
    | |-BinaryOperator 0x12a9420c0 <line:29:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x12a942090 <col:9> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a942050 <col:9> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | `-ImplicitCastExpr 0x12a9420a8 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a942070 <col:14> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | `-CompoundStmt 0x12a9421a8 <col:20, line:33:5>
    |-BinaryOperator 0x12a9422d0 <line:35:5, col:21> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a942268 <col:5, col:14> '<dependent type>' contains-errors lvalue .data
    | | `-CXXDependentScopeMemberExpr 0x12a942220 <col:5, col:8> '<dependent type>' contains-errors lvalue ->login
    | |   `-RecoveryExpr 0x12a9421f8 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a9421d8 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-DeclRefExpr 0x12a9422b0 <col:21> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |-WhileStmt 0x12a942470 <line:37:5, col:35>
    | |-BinaryOperator 0x12a942400 <col:12, col:25> 'int' '&&'
    | | |-BinaryOperator 0x12a942360 <col:12, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x12a942330 <col:12> 'char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a9422f0 <col:12> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | | `-ImplicitCastExpr 0x12a942348 <col:16> 'char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12a942310 <col:16> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | | `-ImplicitCastExpr 0x12a9423e8 <col:24, col:25> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12a9423d0 <col:24, col:25> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12a9423b8 <col:24, col:25> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x12a9423a0 <col:25> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12a942380 <col:25> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | `-CompoundStmt 0x12a942458 <col:28, col:35>
    |   `-UnaryOperator 0x12a942440 <col:30, col:31> 'char *' postfix '++'
    |     `-DeclRefExpr 0x12a942420 <col:30> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |-IfStmt 0x12a9425f8 <line:39:5, line:43:5>
    | |-BinaryOperator 0x12a942500 <line:39:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x12a9424d0 <col:9> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a942490 <col:9> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    | | `-ImplicitCastExpr 0x12a9424e8 <col:14> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a9424b0 <col:14> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    | `-CompoundStmt 0x12a9425e8 <col:20, line:43:5>
    |-BinaryOperator 0x12a943200 <line:45:5, col:35> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a9426a8 <col:5, col:14> '<dependent type>' contains-errors lvalue .len
    | | `-CXXDependentScopeMemberExpr 0x12a942660 <col:5, col:8> '<dependent type>' contains-errors lvalue ->login
    | |   `-RecoveryExpr 0x12a942638 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a942618 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-BinaryOperator 0x12a9427d8 <col:20, col:35> '<dependent type>' contains-errors '-'
    |   |-UnaryOperator 0x12a942710 <col:20, col:21> 'char *' postfix '++'
    |   | `-DeclRefExpr 0x12a9426f0 <col:20> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    |   `-CXXDependentScopeMemberExpr 0x12a942790 <col:26, col:35> '<dependent type>' contains-errors lvalue .data
    |     `-CXXDependentScopeMemberExpr 0x12a942748 <col:26, col:29> '<dependent type>' contains-errors lvalue ->login
    |       `-RecoveryExpr 0x12a942728 <col:26> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a943388 <line:47:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a9432b0 <col:5, col:15> '<dependent type>' contains-errors lvalue .len
    | | `-CXXDependentScopeMemberExpr 0x12a943268 <col:5, col:8> '<dependent type>' contains-errors lvalue ->passwd
    | |   `-RecoveryExpr 0x12a943240 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a943220 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
    | `-BinaryOperator 0x12a943368 <col:21, col:28> 'long' '-'
    |   |-ImplicitCastExpr 0x12a943338 <col:21> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12a9432f8 <col:21> 'char *' lvalue Var 0x12a928470 'last' 'char *'
    |   `-ImplicitCastExpr 0x12a943350 <col:28> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a943318 <col:28> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
    `-BinaryOperator 0x12a9434a0 <line:48:5, col:22> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x12a943438 <col:5, col:15> '<dependent type>' contains-errors lvalue .data
      | `-CXXDependentScopeMemberExpr 0x12a9433f0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->passwd
      |   `-RecoveryExpr 0x12a9433c8 <col:5> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x12a9433a8 <col:5> 'int *' lvalue ParmVar 0x12a928128 's' 'int *'
      `-DeclRefExpr 0x12a943480 <col:22> 'char *' lvalue Var 0x12a9283f0 'p' 'char *'
