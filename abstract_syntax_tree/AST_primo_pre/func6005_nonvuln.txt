`-FunctionDecl 0x14c00dfa8  line:1:1 invalid mp_fast_close_print 'int (int *, const char *, int, char)'
  |-ParmVarDecl 0x14c00dd28 <col:21, col:41> col:41 invalid ndo 'int *'
  |-ParmVarDecl 0x14c00dda8 <line:2:21, col:35> col:35 opt 'const char *'
  |-ParmVarDecl 0x14c00de28 <col:40, col:46> col:46 invalid opt_len 'int'
  |-ParmVarDecl 0x14c00dea0 <col:55, col:62> col:62 flags 'char'
  `-CompoundStmt 0x14c00e398 <line:3:1, line:9:1>
    |-IfStmt 0x14c00e100 <line:4:9, line:5:24>
    | |-BinaryOperator 0x14c00e0b0 <line:4:13, col:24> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x14c00e070 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14c00e090 <col:24> 'int' 12
    | `-ReturnStmt 0x14c00e0f0 <line:5:17, col:24>
    |   `-IntegerLiteral 0x14c00e0d0 <col:24> 'int' 0
    |-CallExpr 0x14c00e340 <line:7:9, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c00e280 <col:9> 'int ()' Function 0x14c00e1c8 'ND_PRINT' 'int ()'
    | `-BinaryOperator 0x14c00e320 <col:19, col:24> 'char[4]' contains-errors ','
    |   |-RecoveryExpr 0x14c00e2a0 <col:19> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x14c00e300 <col:24> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x14c00e388 <line:8:9, col:16>
      `-IntegerLiteral 0x14c00e368 <col:16> 'int' 1
