`-FunctionDecl 0x16000dda8  line:1:1 choose_windows 'int (const char *)'
  |-ParmVarDecl 0x16000dcd8 <line:2:1, col:13> col:13 used s 'const char *'
  `-CompoundStmt 0x160028c10 <line:3:1, line:58:1>
    |-DeclStmt 0x16000df20 <line:4:5, col:19>
    | `-VarDecl 0x16000deb8 <col:5, col:18> col:18 used i 'int' register
    |-IfStmt 0x160028150 <line:29:5, line:32:5>
    | |-RecoveryExpr 0x160027e28 <line:29:9, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x160028138 <col:31, line:32:5>
    |   `-CallExpr 0x160027ff8 <line:30:9, col:25> 'int'
    |     |-ImplicitCastExpr 0x160027fe0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x160027f28 <col:9> 'int ()' Function 0x160027e70 'raw_printf' 'int ()'
    |     `-ImplicitCastExpr 0x160028020 <col:20> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x160027f90 <col:20> 'char[4]' lvalue "STR"
    `-IfStmt 0x160028a28 <line:33:5, line:53:5> has_else
      |-RecoveryExpr 0x160028190 <line:33:9, col:24> '_Bool' contains-errors
      |-CompoundStmt 0x160028310 <col:31, line:37:5>
      `-CompoundStmt 0x160028a00 <col:12, line:53:5>
        |-DeclStmt 0x160028398 <line:38:9, col:24>
        | `-VarDecl 0x160028330 <col:9, col:14> col:14 referenced invalid buf 'char'
        |-BinaryOperator 0x160028468 <line:41:9, col:18> '<dependent type>' contains-errors '='
        | |-ArraySubscriptExpr 0x160028430 <col:9, col:14> '<dependent type>' contains-errors lvalue
        | | |-ImplicitCastExpr 0x160028418 <col:9> '<dependent type>' contains-errors <LValueToRValue>
        | | | `-RecoveryExpr 0x1600283d0 <col:9> '<dependent type>' contains-errors lvalue
        | | |   `-DeclRefExpr 0x1600283b0 <col:9> 'char' lvalue Var 0x160028330 'buf' 'char'
        | | `-IntegerLiteral 0x1600283f8 <col:13> 'int' 0
        | `-CharacterLiteral 0x160028450 <col:18> 'int' 0
        `-CallExpr 0x1600289c8 <line:51:9, line:52:32> '<dependent type>' contains-errors
          |-DeclRefExpr 0x160028948 <line:51:9> 'int ()' Function 0x1600281d8 'config_error_add' 'int ()'
          |-StringLiteral 0x160028968 <col:26> 'char[4]' lvalue "STR"
          |-DeclRefExpr 0x160028988 <line:52:26> 'const char *' lvalue ParmVar 0x16000dcd8 's' 'const char *'
          `-RecoveryExpr 0x1600289a8 <col:29> '<dependent type>' contains-errors lvalue
