`-FunctionDecl 0x12793fdb8  line:1:1 invalid ikev2_sub_print 'int (int *, struct isakmp *, char, const struct isakmp_gen *, const char *, int, int, int, int)'
  |-ParmVarDecl 0x127926128 <col:17, col:37> col:37 invalid ndo 'int *'
  |-ParmVarDecl 0x127926718 <line:2:3, col:18> col:18 used base 'struct isakmp *'
  |-ParmVarDecl 0x127926790 <line:3:3, col:10> col:10 used np 'char'
  |-ParmVarDecl 0x12793f968 <col:14, col:39> col:39 used ext 'const struct isakmp_gen *'
  |-ParmVarDecl 0x12793f9e8 <col:44, col:58> col:58 used ep 'const char *'
  |-ParmVarDecl 0x12793fa68 <line:4:3, col:12> col:12 invalid phase 'int'
  |-ParmVarDecl 0x12793fae8 <col:19, col:28> col:28 invalid doi 'int'
  |-ParmVarDecl 0x12793fb68 <col:33, col:42> col:42 invalid proto 'int'
  |-ParmVarDecl 0x12793fbe8 <col:49, col:53> col:53 used depth 'int'
  `-CompoundStmt 0x127942908 <line:5:1, line:40:1>
    |-DeclStmt 0x12793ff28 <line:6:2, col:18>
    | `-VarDecl 0x12793fec0 <col:2, col:16> col:16 used cp 'const char *'
    |-DeclStmt 0x12793ffc0 <line:7:2, col:7>
    | `-VarDecl 0x12793ff58 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x127940098 <line:8:2, col:21>
    | `-VarDecl 0x127940030 <col:2, col:20> col:20 invalid e 'struct isakmp_gen'
    |-BinaryOperator 0x127940148 <line:10:2, col:23> 'const char *' '='
    | |-DeclRefExpr 0x1279400b0 <col:2> 'const char *' lvalue Var 0x12793fec0 'cp' 'const char *'
    | `-CStyleCastExpr 0x127940120 <col:7, col:23> 'const char *' <BitCast>
    |   `-ImplicitCastExpr 0x127940108 <col:23> 'const struct isakmp_gen *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x1279400d0 <col:23> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |-WhileStmt 0x1279425a0 <line:11:2, line:35:2>
    | |-ImplicitCastExpr 0x127940188 <line:11:9> 'char' <LValueToRValue>
    | | `-DeclRefExpr 0x127940168 <col:9> 'char' lvalue ParmVar 0x127926790 'np' 'char'
    | `-CompoundStmt 0x127942528 <col:13, line:35:2>
    |   |-ImplicitCastExpr 0x127940428 <line:12:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x1279403f8 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x127940300 <col:3> 'int ()' Function 0x127940248 'ND_TCHECK' 'int ()'
    |   |   `-UnaryOperator 0x127940358 <col:13, col:14> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x127940340 <col:14> 'const struct isakmp_gen *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x127940320 <col:14> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |   |-CallExpr 0x1279405f8 <line:14:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127940520 <col:3> 'int ()' Function 0x127940468 'UNALIGNED_MEMCPY' 'int ()'
    |   | |-UnaryOperator 0x127940560 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x127940540 <col:21> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x127940578 <col:24> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |   | `-UnaryExprOrTypeTraitExpr 0x1279405d8 <col:29, col:37> 'unsigned long' contains-errors sizeof
    |   |   `-ParenExpr 0x1279405b8 <col:35, col:37> '<dependent type>' contains-errors lvalue
    |   |     `-RecoveryExpr 0x127940598 <col:36> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x127941968 <line:16:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127940710 <col:3> 'int ()' Function 0x127940658 'ND_TCHECK2' 'int ()'
    |   | |-UnaryOperator 0x127940768 <col:14, col:15> 'const struct isakmp_gen' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x127940750 <col:15> 'const struct isakmp_gen *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x127940730 <col:15> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |   | `-CallExpr 0x127941940 <col:20, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1279418b8 <col:20> 'int ()' Function 0x127941800 'ntohs' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x1279418f8 <col:26, col:28> '<dependent type>' contains-errors lvalue .len
    |   |     `-RecoveryExpr 0x1279418d8 <col:26> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x1279419b8 <line:18:3, col:8> 'int' postfix '++'
    |   | `-DeclRefExpr 0x127941998 <col:3> 'int' lvalue ParmVar 0x12793fbe8 'depth' 'int'
    |   |-CallExpr 0x127941b90 <line:19:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127941ab0 <col:3> 'int ()' Function 0x1279419f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x127941b70 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x127941b50 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x127941ad0 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x127941b30 <col:17> 'char[4]' lvalue "STR"
    |   |-ForStmt 0x127941da8 <line:20:3, line:21:24>
    |   | |-BinaryOperator 0x127941bf8 <line:20:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x127941bb8 <col:8> 'int' lvalue Var 0x12793ff58 'i' 'int'
    |   | | `-IntegerLiteral 0x127941bd8 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x127941c88 <col:15, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x127941c58 <col:15> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x127941c18 <col:15> 'int' lvalue Var 0x12793ff58 'i' 'int'
    |   | | `-ImplicitCastExpr 0x127941c70 <col:19> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x127941c38 <col:19> 'int' lvalue ParmVar 0x12793fbe8 'depth' 'int'
    |   | |-UnaryOperator 0x127941cc8 <col:26, col:27> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x127941ca8 <col:26> 'int' lvalue Var 0x12793ff58 'i' 'int'
    |   | `-CallExpr 0x127941d80 <line:21:4, col:24> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x127941ce0 <col:4> 'int ()' Function 0x1279419f8 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x127941d60 <col:13, col:23> 'char[4]' contains-errors
    |   |     `-BinaryOperator 0x127941d40 <col:14, col:18> 'char[4]' contains-errors ','
    |   |       |-RecoveryExpr 0x127941d00 <col:14> '<dependent type>' contains-errors lvalue
    |   |       `-StringLiteral 0x127941d20 <col:18> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x127941e80 <line:22:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127941de0 <col:3> 'int ()' Function 0x1279419f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x127941e60 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x127941e40 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x127941e00 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x127941e20 <col:17> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x127942150 <line:23:3, line:24:44> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x127941ea8 <line:23:3> 'const char *' lvalue Var 0x12793fec0 'cp' 'const char *'
    |   | `-CallExpr 0x1279420e8 <col:8, line:24:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x127941fa8 <line:23:8> 'int ()' Function 0x127941ef0 'ikev2_sub0_print' 'int ()'
    |   |   |-RecoveryExpr 0x127941fc8 <col:25> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x127941fe8 <col:30> 'struct isakmp *' lvalue ParmVar 0x127926718 'base' 'struct isakmp *'
    |   |   |-DeclRefExpr 0x127942008 <col:36> 'char' lvalue ParmVar 0x127926790 'np' 'char'
    |   |   |-DeclRefExpr 0x127942028 <line:24:11> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |   |   |-DeclRefExpr 0x127942048 <col:16> 'const char *' lvalue ParmVar 0x12793f9e8 'ep' 'const char *'
    |   |   |-RecoveryExpr 0x127942068 <col:20> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x127942088 <col:27> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x1279420a8 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1279420c8 <col:39> 'int' lvalue ParmVar 0x12793fbe8 'depth' 'int'
    |   |-CallExpr 0x127942210 <line:25:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127942170 <col:3> 'int ()' Function 0x1279419f8 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x1279421f0 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x1279421d0 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x127942190 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x1279421b0 <col:17> 'char[4]' lvalue "STR"
    |   |-UnaryOperator 0x127942258 <line:26:3, col:8> 'int' postfix '--'
    |   | `-DeclRefExpr 0x127942238 <col:3> 'int' lvalue ParmVar 0x12793fbe8 'depth' 'int'
    |   |-IfStmt 0x127942368 <line:28:3, line:31:3>
    |   | |-BinaryOperator 0x1279422e8 <line:28:7, col:13> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x127942270 <col:7> 'const char *' lvalue Var 0x12793fec0 'cp' 'const char *'
    |   | | `-RecoveryExpr 0x1279422c8 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x127942350 <col:19, line:31:3>
    |   |   `-ReturnStmt 0x127942340 <line:30:4, col:11>
    |   |     `-RecoveryExpr 0x127942320 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x127942410 <line:33:3, col:10> 'char' contains-errors '='
    |   | |-DeclRefExpr 0x127942388 <col:3> 'char' lvalue ParmVar 0x127926790 'np' 'char'
    |   | `-CXXDependentScopeMemberExpr 0x1279423c8 <col:8, col:10> '<dependent type>' contains-errors lvalue .np
    |   |   `-RecoveryExpr 0x1279423a8 <col:8> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x127942508 <line:34:3, col:36> 'const struct isakmp_gen *' '='
    |     |-DeclRefExpr 0x127942430 <col:3> 'const struct isakmp_gen *' lvalue ParmVar 0x12793f968 'ext' 'const struct isakmp_gen *'
    |     `-CStyleCastExpr 0x1279424e0 <col:9, col:36> 'const struct isakmp_gen *' <BitCast>
    |       `-ImplicitCastExpr 0x1279424c8 <col:36> 'const char *' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x127942450 <col:36> 'const char *' lvalue Var 0x12793fec0 'cp' 'const char *'
    |-ReturnStmt 0x127942610 <line:36:2, col:9>
    | `-ImplicitCastExpr 0x1279425f8 <col:9> 'int' <PointerToIntegral>
    |   `-ImplicitCastExpr 0x1279425e0 <col:9> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x1279425c0 <col:9> 'const char *' lvalue Var 0x12793fec0 'cp' 'const char *'
    `-LabelStmt 0x1279428e8 <line:37:1, line:38:33> 'trunc'
      `-CallExpr 0x127942870 <col:2, col:33> '<dependent type>' contains-errors
        |-DeclRefExpr 0x127942620 <col:2> 'int ()' Function 0x1279419f8 'ND_PRINT' 'int ()'
        `-ParenExpr 0x127942850 <col:11, col:32> 'int' contains-errors
          `-BinaryOperator 0x127942830 <col:12, col:31> 'int' contains-errors ','
            |-BinaryOperator 0x127942680 <col:12, col:16> 'char[4]' contains-errors ','
            | |-RecoveryExpr 0x127942640 <col:12> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x127942660 <col:16> 'char[4]' lvalue "STR"
            `-CallExpr 0x1279427d8 <col:23, col:31> 'int'
              |-ImplicitCastExpr 0x1279427c0 <col:23> 'int (*)()' <FunctionToPointerDecay>
              | `-DeclRefExpr 0x127942780 <col:23> 'int ()' Function 0x1279426c8 'NPSTR' 'int ()'
              `-ImplicitCastExpr 0x127942818 <col:29> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x127942800 <col:29> 'char' <LValueToRValue>
                  `-DeclRefExpr 0x1279427a0 <col:29> 'char' lvalue ParmVar 0x127926790 'np' 'char'
