`-FunctionDecl 0x13d9281a8  line:1:12 svm_cpu_init 'int (int)' static
  |-ParmVarDecl 0x13d9280d8 <col:25, col:29> col:29 used cpu 'int'
  `-CompoundStmt 0x13e009598 <line:2:1, line:30:1>
    |-DeclStmt 0x13d928488 <line:3:2, col:25>
    | |-RecordDecl 0x13d9282a0 <col:2, col:9> col:9 struct svm_cpu_data
    | `-VarDecl 0x13d928408 <col:2, col:23> col:23 used sd 'struct svm_cpu_data *'
    |-DeclStmt 0x13d9285d0 <line:4:2, col:19>
    | `-VarDecl 0x13d9284b8 <col:2, col:13> col:6 used ret 'int' cinit
    |   `-UnaryOperator 0x13d9285b8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d9285a0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d928580 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d942c70 <line:7:2, line:8:10>
    | |-UnaryOperator 0x13d942c10 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13d942bf8 <col:7> 'struct svm_cpu_data *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d942bd8 <col:7> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    | `-ReturnStmt 0x13d942c60 <line:8:3, col:10>
    |   `-ImplicitCastExpr 0x13d942c48 <col:10> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13d942c28 <col:10> 'int' contains-errors lvalue Var 0x13d9284b8 'ret' 'int'
    |-BinaryOperator 0x13d942d10 <line:9:2, col:12> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13d942cc8 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d942c90 <col:2> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    | `-DeclRefExpr 0x13d942cf0 <col:12> 'int' lvalue ParmVar 0x13d9280d8 'cpu' 'int'
    |-BinaryOperator 0x13d942f38 <line:10:2, col:39> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13d942d68 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d942d30 <col:2> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    | `-CallExpr 0x13d942f10 <col:18, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d942e70 <col:18> 'int ()' Function 0x13d942db8 'alloc_page' 'int ()'
    |   `-RecoveryExpr 0x13d942ef0 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d943050 <line:11:2, line:12:8>
    | |-UnaryOperator 0x13d942fd0 <line:11:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13d942fb8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13d942f90 <col:7, col:11> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13d942f58 <col:7> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    | `-GotoStmt 0x13d943038 <line:12:3, col:8> 'free_cpu_data' 0x13d942fe8
    |-CallExpr 0x13d9432f8 <line:14:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d943150 <col:2> 'int ()' Function 0x13d943098 'clear_page' 'int ()'
    | `-CallExpr 0x13d9432d0 <col:13, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d943250 <col:13> 'int ()' Function 0x13d943198 'page_address' 'int ()'
    |   `-RecoveryExpr 0x13d9432a8 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d943270 <col:26> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    |-BinaryOperator 0x13d9434e8 <line:16:2, col:23> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d943320 <col:2> 'int' contains-errors lvalue Var 0x13d9284b8 'ret' 'int'
    | `-CallExpr 0x13d9434a8 <col:8, col:23> 'int'
    |   |-ImplicitCastExpr 0x13d943490 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13d943420 <col:8> 'int ()' Function 0x13d943368 'sev_cpu_init' 'int ()'
    |   `-ImplicitCastExpr 0x13d9434d0 <col:21> 'struct svm_cpu_data *' <LValueToRValue>
    |     `-DeclRefExpr 0x13d943440 <col:21> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    |-IfStmt 0x13d9435a8 <line:17:2, line:18:8>
    | |-ImplicitCastExpr 0x13d943528 <line:17:6> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x13d943508 <col:6> 'int' contains-errors lvalue Var 0x13d9284b8 'ret' 'int'
    | `-GotoStmt 0x13d943590 <line:18:3, col:8> 'free_save_area' 0x13d943540
    |-BinaryOperator 0x13d9437c0 <line:20:2, col:27> '<dependent type>' contains-errors '='
    | |-CallExpr 0x13d943790 <col:2, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13d9436a8 <col:2> 'int ()' Function 0x13d9435f0 'per_cpu' 'int ()'
    | | |-RecoveryExpr 0x13d943770 <col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13d9436e0 <col:20> 'int' lvalue ParmVar 0x13d9280d8 'cpu' 'int'
    | `-DeclRefExpr 0x13d943730 <col:27> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    |-ReturnStmt 0x13e009200 <line:22:2, col:9>
    | `-IntegerLiteral 0x13d9437e0 <col:9> 'int' 0
    |-LabelStmt 0x13e009398 <line:24:1, line:25:27> 'free_save_area'
    | `-CallExpr 0x13e009370 <col:2, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e0092f0 <col:2> 'int ()' Function 0x13e009238 '__free_page' 'int ()'
    |   `-RecoveryExpr 0x13e009348 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13e009310 <col:14> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    |-LabelStmt 0x13e009530 <line:26:1, line:27:10> 'free_cpu_data'
    | `-CallExpr 0x13e0094f0 <col:2, col:10> 'int'
    |   |-ImplicitCastExpr 0x13e0094d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e009498 <col:2> 'int ()' Function 0x13e0093e0 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x13e009518 <col:8> 'struct svm_cpu_data *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e0094b8 <col:8> 'struct svm_cpu_data *' lvalue Var 0x13d928408 'sd' 'struct svm_cpu_data *'
    `-ReturnStmt 0x13e009588 <line:28:2, col:9>
      `-ImplicitCastExpr 0x13e009570 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13e009550 <col:9> 'int' contains-errors lvalue Var 0x13d9284b8 'ret' 'int'
