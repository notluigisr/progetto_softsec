`-FunctionDecl 0x13e128378  line:1:14 invalid sapi_add_header_ex 'int (char *, int, int, int)'
  |-ParmVarDecl 0x13e1280f0 <col:33, col:39> col:39 used header_line 'char *'
  |-ParmVarDecl 0x13e128170 <col:52, col:57> col:57 used header_line_len 'int'
  |-ParmVarDecl 0x13e1281f0 <col:74, col:84> col:84 invalid duplicate 'int'
  |-ParmVarDecl 0x13e128270 <col:95, col:105> col:105 invalid replace 'int'
  `-CompoundStmt 0x13e142010 <line:2:1, line:16:1>
    |-ImplicitCastExpr 0x13e128460 <line:3:2> 'char *' <LValueToRValue>
    | `-DeclRefExpr 0x13e128440 <col:2> 'char *' lvalue ParmVar 0x13e1280f0 'header_line' 'char *'
    |-DeclStmt 0x13e1284f8 <line:4:2, col:7>
    | `-VarDecl 0x13e128490 <col:2, col:6> col:6 used r 'int'
    |-IfStmt 0x13e141fa8 <line:12:2, line:13:20>
    | |-UnaryOperator 0x13e1287d8 <line:12:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e1287c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13e1287a0 <col:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13e141f68 <line:13:3, col:20> 'int'
    |   |-ImplicitCastExpr 0x13e141f50 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e141ee0 <col:3> 'int ()' Function 0x13e141e28 'efree' 'int ()'
    |   `-ImplicitCastExpr 0x13e141f90 <col:9> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e141f00 <col:9> 'char *' lvalue ParmVar 0x13e1280f0 'header_line' 'char *'
    `-ReturnStmt 0x13e142000 <line:15:2, col:9>
      `-ImplicitCastExpr 0x13e141fe8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e141fc8 <col:9> 'int' lvalue Var 0x13e128490 'r' 'int'
