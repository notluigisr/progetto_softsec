`-FunctionDecl 0x1319281f8  line:1:7 invalid sspi_SecureHandleGetLowerPointer 'void *(int *)'
  |-ParmVarDecl 0x131928128 <col:40, col:51> col:51 invalid handle 'int *'
  `-CompoundStmt 0x131928560 <line:2:1, line:11:1>
    |-DeclStmt 0x131928328 <line:3:2, col:15>
    | `-VarDecl 0x1319282c0 <col:2, col:8> col:8 used pointer 'void *'
    |-IfStmt 0x1319283d8 <line:5:2, line:6:10>
    | |-UnaryOperator 0x131928378 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x131928360 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x131928340 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1319283c8 <line:6:3, col:10>
    |   `-RecoveryExpr 0x1319283a8 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1319284f8 <line:8:2, col:29> 'void *' contains-errors '='
    | |-DeclRefExpr 0x1319283f8 <col:2> 'void *' lvalue Var 0x1319282c0 'pointer' 'void *'
    | `-CStyleCastExpr 0x1319284d0 <col:12, col:29> 'void *' contains-errors <Dependent>
    |   `-RecoveryExpr 0x131928490 <col:20, col:29> '<dependent type>' contains-errors lvalue
    |     `-ParenExpr 0x131928470 <col:22, col:29> '<overloaded function type>' lvalue
    |       `-UnresolvedLookupExpr 0x131928430 <col:23> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    `-ReturnStmt 0x131928550 <line:10:2, col:9>
      `-ImplicitCastExpr 0x131928538 <col:9> 'void *' <LValueToRValue>
        `-DeclRefExpr 0x131928518 <col:9> 'void *' lvalue Var 0x1319282c0 'pointer' 'void *'
