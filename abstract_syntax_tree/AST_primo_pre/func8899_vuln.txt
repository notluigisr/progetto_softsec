`-FunctionDecl 0x14e80de38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x14e80dd58 <col:12> col:12 SplObjectStorage 'int'
  |-ParmVarDecl 0x14e80dcd8 <col:30> col:30 getHash 'int'
  `-CompoundStmt 0x14f809468 <line:2:1, line:15:1>
    |-DeclStmt 0x14e80dfe8 <line:4:2, col:12>
    | `-VarDecl 0x14e80df80 <col:2, col:8> col:8 used hash 'char *'
    |-IfStmt 0x14e80e2f8 <line:6:2, line:8:2>
    | |-RecoveryExpr 0x14e80e2b0 <line:6:6, col:71> '_Bool' contains-errors
    | `-CompoundStmt 0x14e80e2e0 <col:80, line:8:2>
    |   `-ReturnStmt 0x14e80e2d0 <line:7:3>
    |-BinaryOperator 0x14f809170 <line:10:2, col:19> 'char *' '='
    | |-DeclRefExpr 0x14e80e318 <col:2> 'char *' lvalue Var 0x14e80df80 'hash' 'char *'
    | `-ImplicitCastExpr 0x14f808d38 <col:9, col:19> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x14f808d10 <col:9, col:19> 'int'
    |     |-ImplicitCastExpr 0x14f808cf8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14f808cb8 <col:9> 'int ()' Function 0x14f808c00 'emalloc' 'int ()'
    |     `-IntegerLiteral 0x14f808cd8 <col:17> 'int' 33
    `-CallExpr 0x14f809420 <line:13:2, col:23> 'int'
      |-ImplicitCastExpr 0x14f809408 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14f8093a8 <col:2> 'int ()' Function 0x14f8092f0 'RETVAL_STRING' 'int ()'
      |-ImplicitCastExpr 0x14f809450 <col:16> 'char *' <LValueToRValue>
      | `-DeclRefExpr 0x14f8093c8 <col:16> 'char *' lvalue Var 0x14e80df80 'hash' 'char *'
      `-IntegerLiteral 0x14f8093e8 <col:22> 'int' 0
