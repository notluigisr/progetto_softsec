`-FunctionDecl 0x13180ddc8  line:1:1 invalid mcs_parse_domain_params 'int (int)'
  |-ParmVarDecl 0x13180dcf0 <col:25, col:32> col:32 invalid s 'int'
  `-CompoundStmt 0x131827930 <line:2:1, line:9:1>
    |-DeclStmt 0x13180def8 <line:3:2, col:12>
    | `-VarDecl 0x13180de90 <col:2, col:6> col:6 used length 'int'
    |-CallExpr 0x13180e190 <line:5:2, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13180e070 <col:2> 'int ()' Function 0x13180dfb8 'ber_parse_header' 'int ()'
    | |-RecoveryExpr 0x13180e090 <col:19> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x13180e170 <col:22> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13180e120 <col:45, col:46> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x13180e0c8 <col:46> 'int' lvalue Var 0x13180de90 'length' 'int'
    |-CallExpr 0x13180e308 <line:6:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13180e2a8 <col:2> 'int ()' Function 0x13180e1f0 'in_uint8s' 'int ()'
    | |-RecoveryExpr 0x13180e2c8 <col:12> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13180e2e8 <col:15> 'int' lvalue Var 0x13180de90 'length' 'int'
    `-ReturnStmt 0x131827920 <line:8:2, col:18>
      `-CallExpr 0x1318278f8 <col:9, col:18> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1318278b8 <col:9> 'int ()' Function 0x131827800 's_check' 'int ()'
        `-RecoveryExpr 0x1318278d8 <col:17> '<dependent type>' contains-errors lvalue
