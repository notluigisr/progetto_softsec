`-FunctionDecl 0x130141838  line:1:12 invalid kvaser_usb_leaf_simple_cmd_async 'int (struct kvaser_usb_net_priv *, int)' static
  |-ParmVarDecl 0x130128648 <col:45, col:73> col:73 used priv 'struct kvaser_usb_net_priv *'
  |-ParmVarDecl 0x1301286e0 <line:2:10, col:13> col:13 invalid cmd_id 'int'
  `-CompoundStmt 0x1301426b0 <line:3:1, line:20:1>
    |-DeclStmt 0x130141ad8 <line:4:2, col:24>
    | |-RecordDecl 0x1301418f0 <col:2, col:9> col:9 struct kvaser_cmd
    | `-VarDecl 0x130141a58 <col:2, col:21> col:21 used cmd 'struct kvaser_cmd *'
    |-DeclStmt 0x130141b70 <line:5:2, col:9>
    | `-VarDecl 0x130141b08 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x130141ea0 <line:8:2, line:9:11>
    | |-UnaryOperator 0x130141de0 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x130141dc8 <col:7> 'struct kvaser_cmd *' <LValueToRValue>
    | |   `-DeclRefExpr 0x130141da8 <col:7> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    | `-ReturnStmt 0x130141e90 <line:9:3, col:11>
    |   `-UnaryOperator 0x130141e78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x130141e60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x130141e40 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1301420b8 <line:12:2, col:12> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130142070 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130142038 <col:2> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    | `-RecoveryExpr 0x130142098 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130142228 <line:13:2, col:32> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x130142180 <col:2, col:16> '<dependent type>' contains-errors lvalue .channel
    | | `-CXXDependentScopeMemberExpr 0x130142138 <col:2, col:9> '<dependent type>' contains-errors lvalue .simple
    | |   `-RecoveryExpr 0x130142110 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x1301420d8 <col:2> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    | `-RecoveryExpr 0x130142200 <col:26, col:32> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1301421c8 <col:26> 'struct kvaser_usb_net_priv *' lvalue ParmVar 0x130128648 'priv' 'struct kvaser_usb_net_priv *'
    |-BinaryOperator 0x130142440 <line:15:2, col:53> 'int' contains-errors '='
    | |-DeclRefExpr 0x130142248 <col:2> 'int' lvalue Var 0x130141b08 'err' 'int'
    | `-CallExpr 0x130142408 <col:8, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130142348 <col:8> 'int ()' Function 0x130142290 'kvaser_usb_send_cmd_async' 'int ()'
    |   |-DeclRefExpr 0x130142368 <col:34> 'struct kvaser_usb_net_priv *' lvalue ParmVar 0x130128648 'priv' 'struct kvaser_usb_net_priv *'
    |   |-DeclRefExpr 0x130142388 <col:40> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    |   `-RecoveryExpr 0x1301423e0 <col:45, col:50> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1301423a8 <col:45> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    |-IfStmt 0x130142648 <line:16:2, line:17:12>
    | |-ImplicitCastExpr 0x130142480 <line:16:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x130142460 <col:6> 'int' lvalue Var 0x130141b08 'err' 'int'
    | `-CallExpr 0x130142608 <line:17:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x1301425f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x130142578 <col:3> 'int ()' Function 0x1301424c0 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x130142630 <col:9> 'struct kvaser_cmd *' <LValueToRValue>
    |     `-DeclRefExpr 0x130142598 <col:9> 'struct kvaser_cmd *' lvalue Var 0x130141a58 'cmd' 'struct kvaser_cmd *'
    `-ReturnStmt 0x1301426a0 <line:19:2, col:9>
      `-ImplicitCastExpr 0x130142688 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x130142668 <col:9> 'int' lvalue Var 0x130141b08 'err' 'int'
