`-FunctionDecl 0x155928158  line:1:12 snd_seq_device_dev_free 'int (struct snd_device *)' static
  |-ParmVarDecl 0x155928048 <col:36, col:55> col:55 used device 'struct snd_device *'
  `-CompoundStmt 0x1559408d0 <line:2:1, line:7:1>
    |-DeclStmt 0x155940698 <line:3:2, col:50>
    | |-RecordDecl 0x155940450 <col:2, col:9> col:9 struct snd_seq_device
    | `-VarDecl 0x1559405b8 <col:2, col:39> col:25 used dev 'struct snd_seq_device *' cinit
    |   `-RecoveryExpr 0x155940658 <col:31, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x155940620 <col:31> 'struct snd_device *' lvalue ParmVar 0x155928048 'device' 'struct snd_device *'
    |-CallExpr 0x155940878 <line:5:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1559407e0 <col:2> 'int ()' Function 0x155940728 'put_device' 'int ()'
    | `-UnaryOperator 0x155940860 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x155940838 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x155940800 <col:14> 'struct snd_seq_device *' contains-errors lvalue Var 0x1559405b8 'dev' 'struct snd_seq_device *'
    `-ReturnStmt 0x1559408c0 <line:6:2, col:9>
      `-IntegerLiteral 0x1559408a0 <col:9> 'int' 0
