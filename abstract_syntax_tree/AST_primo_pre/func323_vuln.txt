`-FunctionDecl 0x132940a88  line:1:12 do_arpt_get_ctl 'int (struct sock *, int, int)' static
  |-ParmVarDecl 0x132928648 <col:28, col:41> col:41 used sk 'struct sock *'
  |-ParmVarDecl 0x1329286c8 <col:45, col:49> col:49 used cmd 'int'
  |-ParmVarDecl 0x132928740 <col:54, col:59> col:59 __user 'int'
  `-CompoundStmt 0x132943df0 <line:2:1, line:41:1>
    |-DeclStmt 0x132940c10 <line:3:2, col:9>
    | `-VarDecl 0x132940ba8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x132940ed0 <line:5:2, line:6:11>
    | |-UnaryOperator 0x132940e10 <line:5:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x132940de8 <col:7, col:28> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x132940d50 <col:7> 'int ()' Function 0x132940c98 'capable' 'int ()'
    | |   `-RecoveryExpr 0x132940dc8 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x132940ec0 <line:6:3, col:11>
    |   `-UnaryOperator 0x132940ea8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x132940e90 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x132940e70 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x132940f28 <line:8:2, line:38:2>
    | |-ImplicitCastExpr 0x132940f10 <line:8:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x132940ef0 <col:10> 'int' lvalue ParmVar 0x1329286c8 'cmd' 'int'
    | `-CompoundStmt 0x132943d68 <col:15, line:38:2>
    |   |-BinaryOperator 0x132941418 <line:10:3, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x132940f68 <col:3> 'int' lvalue Var 0x132940ba8 'ret' 'int'
    |   | `-CallExpr 0x1329413d8 <col:9, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x132941068 <col:9> 'int ()' Function 0x132940fb0 'get_info' 'int ()'
    |   |   |-CallExpr 0x132941358 <col:18, col:29> 'int'
    |   |   | |-ImplicitCastExpr 0x132941340 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x132941168 <col:18> 'int ()' Function 0x1329410b0 'sock_net' 'int ()'
    |   |   | `-ImplicitCastExpr 0x132941380 <col:27> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x132941188 <col:27> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'
    |   |   |-RecoveryExpr 0x132941398 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x1329413b8 <col:38> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x132941268 <col:43> 'int' 0
    |   |-BreakStmt 0x132941438 <line:11:3>
    |   |-BinaryOperator 0x1329417c0 <line:14:3, col:44> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x132941458 <col:3> 'int' lvalue Var 0x132940ba8 'ret' 'int'
    |   | `-CallExpr 0x132941788 <col:9, col:44> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x132941558 <col:9> 'int ()' Function 0x1329414a0 'get_entries' 'int ()'
    |   |   |-CallExpr 0x132941708 <col:21, col:32> 'int'
    |   |   | |-ImplicitCastExpr 0x1329416f0 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x132941578 <col:21> 'int ()' Function 0x1329410b0 'sock_net' 'int ()'
    |   |   | `-ImplicitCastExpr 0x132941730 <col:30> 'struct sock *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x132941598 <col:30> 'struct sock *' lvalue ParmVar 0x132928648 'sk' 'struct sock *'
    |   |   |-RecoveryExpr 0x132941748 <col:35> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x132941768 <col:41> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x1329417e0 <line:15:3>
    |   |-CompoundStmt 0x132943b40 <line:17:36, line:33:2>
    |   | |-DeclStmt 0x132941978 <line:18:3, col:29>
    |   | | |-RecordDecl 0x132941800 <col:3, col:10> col:10 struct xt_get_revision
    |   | | `-VarDecl 0x1329418f8 <col:3, col:26> col:26 invalid rev 'struct xt_get_revision'
    |   | |-IfStmt 0x1329433f0 <line:20:3, line:23:3>
    |   | | |-BinaryOperator 0x1329432b0 <line:20:7, col:25> 'int' contains-errors '!='
    |   | | | |-UnaryOperator 0x132943298 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | | `-ImplicitCastExpr 0x132943280 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | |   `-RecoveryExpr 0x132943260 <col:8> '<dependent type>' contains-errors lvalue
    |   | | | `-UnaryExprOrTypeTraitExpr 0x132943220 <col:15, col:25> 'unsigned long' contains-errors sizeof
    |   | | |   `-ParenExpr 0x132943200 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   | | |     `-RecoveryExpr 0x1329419d8 <col:22> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x1329433d0 <col:28, line:23:3>
    |   | |   |-BinaryOperator 0x1329433a8 <line:21:4, col:11> 'int' contains-errors '='
    |   | |   | |-DeclRefExpr 0x1329432d0 <col:4> 'int' lvalue Var 0x132940ba8 'ret' 'int'
    |   | |   | `-UnaryOperator 0x132943390 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |   |   `-ImplicitCastExpr 0x132943378 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   |     `-RecoveryExpr 0x132943358 <col:11> '<dependent type>' contains-errors lvalue
    |   | |   `-BreakStmt 0x1329433c8 <line:22:4>
    |   | |-IfStmt 0x1329436f0 <line:24:3, line:27:3>
    |   | | |-BinaryOperator 0x132943690 <line:24:7, col:50> 'int' contains-errors '!='
    |   | | | |-CallExpr 0x132943658 <col:7, col:45> '<dependent type>' contains-errors
    |   | | | | |-DeclRefExpr 0x1329434f0 <col:7> 'int ()' Function 0x132943438 'copy_from_user' 'int ()'
    |   | | | | |-UnaryOperator 0x132943530 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | | `-RecoveryExpr 0x132943510 <col:23> '<dependent type>' contains-errors lvalue
    |   | | | | |-RecoveryExpr 0x132943638 <col:28> '<dependent type>' contains-errors lvalue
    |   | | | | `-UnaryExprOrTypeTraitExpr 0x1329435a0 <col:34, col:44> 'unsigned long' contains-errors sizeof
    |   | | | |   `-ParenExpr 0x132943580 <col:40, col:44> '<dependent type>' contains-errors lvalue
    |   | | | |     `-RecoveryExpr 0x132943560 <col:41> '<dependent type>' contains-errors lvalue
    |   | | | `-IntegerLiteral 0x1329435f8 <col:50> 'int' 0
    |   | | `-CompoundStmt 0x1329436d8 <col:53, line:27:3>
    |   | |   `-BreakStmt 0x1329436d0 <line:26:4>
    |   | `-BreakStmt 0x132943b38 <line:32:3>
    |   `-DefaultStmt 0x132943d28 <line:35:2, line:36:22>
    |     `-CallExpr 0x132943cc8 <col:3, col:22> 'int'
    |       |-ImplicitCastExpr 0x132943cb0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x132943c50 <col:3> 'int ()' Function 0x132943b98 'duprintf' 'int ()'
    |       |-ImplicitCastExpr 0x132943cf8 <col:12> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x132943c70 <col:12> 'char[4]' lvalue "STR"
    |       `-ImplicitCastExpr 0x132943d10 <col:19> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x132943c90 <col:19> 'int' lvalue ParmVar 0x1329286c8 'cmd' 'int'
    `-ReturnStmt 0x132943de0 <line:40:2, col:9>
      `-ImplicitCastExpr 0x132943dc8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x132943da8 <col:9> 'int' lvalue Var 0x132940ba8 'ret' 'int'
