`-FunctionDecl 0x14a1022a8  line:1:18 invalid CMS_sign_receipt 'int *(int *, int *, int *, int (*)())'
  |-ParmVarDecl 0x14a101f28 <col:35, col:51> col:51 invalid si 'int *'
  |-ParmVarDecl 0x14a101fa8 <line:2:35, col:41> col:41 invalid signcert 'int *'
  |-ParmVarDecl 0x14a102028 <col:51, col:61> col:61 invalid pkey 'int *'
  |-ParmVarDecl 0x14a102150 <line:3:35, <invalid sloc>> col:35 invalid STACK_OF 'int (*)()'
  `-CompoundStmt 0x14981e538 <line:4:1, line:68:1>
    |-DeclStmt 0x14a102518 <line:9:5, col:14>
    | `-VarDecl 0x14a102490 <col:5, col:13> col:9 used r 'int' cinit
    |   `-IntegerLiteral 0x14a1024f8 <col:13> 'int' 0
    |-IfStmt 0x14981d190 <line:14:5, line:17:5>
    | |-BinaryOperator 0x14981d018 <line:14:9, col:19> 'int' contains-errors '||'
    | | |-UnaryOperator 0x14a1025b0 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x14a102598 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x14a102578 <col:10> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14981d000 <col:18, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14a1025e8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14a1025c8 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14981d180 <col:29, line:17:5>
    |-IfStmt 0x14981d338 <line:22:5, line:23:14>
    | |-RecoveryExpr 0x14981d2b0 <line:22:9, col:10> '_Bool' contains-errors
    | `-GotoStmt 0x14981d320 <line:23:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981d590 <line:26:5, line:27:14>
    | |-RecoveryExpr 0x14981d558 <line:26:9, col:73> '_Bool' contains-errors
    | `-GotoStmt 0x14981d578 <line:27:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981d760 <line:30:5, line:33:5>
    | |-RecoveryExpr 0x14981d6f0 <line:30:9, col:10> '_Bool' contains-errors
    | `-CompoundStmt 0x14981d748 <col:18, line:33:5>
    |   `-GotoStmt 0x14981d730 <line:32:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981d900 <line:37:5, line:38:14>
    | |-RecoveryExpr 0x14981d8c8 <line:37:9, col:10> '_Bool' contains-errors
    | `-GotoStmt 0x14981d8e8 <line:38:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981da58 <line:42:5, line:43:14>
    | |-RecoveryExpr 0x14981da20 <line:42:9, col:10> '_Bool' contains-errors
    | `-GotoStmt 0x14981da40 <line:43:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981dbd0 <line:47:5, line:48:14>
    | |-RecoveryExpr 0x14981db98 <line:47:9, col:42> '_Bool' contains-errors
    | `-GotoStmt 0x14981dbb8 <line:48:9, col:14> 'err' 0x14981d2d0
    |-IfStmt 0x14981dd28 <line:51:5, line:52:14>
    | |-RecoveryExpr 0x14981dcf0 <line:51:9, col:46> '_Bool' contains-errors
    | `-GotoStmt 0x14981dd10 <line:52:9, col:14> 'err' 0x14981d2d0
    |-BinaryOperator 0x14981de88 <line:58:5, col:9> 'int' '='
    | |-DeclRefExpr 0x14981de48 <col:5> 'int' lvalue Var 0x14a102490 'r' 'int'
    | `-IntegerLiteral 0x14981de68 <col:9> 'int' 1
    `-LabelStmt 0x14981dfd0 <line:60:2, col:5> 'err'
      `-NullStmt 0x14981dfc8 <col:5>
