`-FunctionDecl 0x15a9282b8  line:1:12 invalid spl_dllist_object_count_elements 'int (int *, long *)' static
  |-ParmVarDecl 0x15a928128 <col:45, col:51> col:51 invalid object 'int *'
  |-ParmVarDecl 0x15a9281d8 <col:59, col:65> col:65 used count 'long *'
  `-CompoundStmt 0x15b00a228 <line:2:1, line:22:1>
    `-IfStmt 0x15b00a0b8 <line:5:2, line:18:2>
      |-CXXDependentScopeMemberExpr 0x15a928420 <line:5:6, col:14> '<dependent type>' contains-errors lvalue ->fptr_count
      | `-RecoveryExpr 0x15a928400 <col:6> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15b00a090 <col:26, line:18:2>
        |-CallExpr 0x15b0095b0 <line:7:3, col:90> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x15a9285e0 <col:3> 'int ()' Function 0x15a928528 'zend_call_method_with_0_params' 'int ()'
        | |-UnaryOperator 0x15a928620 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-RecoveryExpr 0x15a928600 <col:35> '<dependent type>' contains-errors lvalue
        | |-CXXDependentScopeMemberExpr 0x15b0094b0 <col:43, col:55> '<dependent type>' contains-errors lvalue .ce
        | | `-CXXDependentScopeMemberExpr 0x15b009468 <col:43, col:51> '<dependent type>' contains-errors lvalue ->std
        | |   `-RecoveryExpr 0x15b009448 <col:43> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x15b009560 <col:59, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x15b009518 <col:60, col:68> '<dependent type>' contains-errors lvalue ->fptr_count
        | |   `-RecoveryExpr 0x15b0094f8 <col:60> '<dependent type>' contains-errors lvalue
        | |-StringLiteral 0x15a9287a0 <col:80> 'char[4]' lvalue "STR"
        | `-UnaryOperator 0x15b009598 <col:87, col:88> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x15b009578 <col:88> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x15b009fc8 <line:8:3, line:15:3>
        | |-RecoveryExpr 0x15b009610 <line:8:7> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x15b009fa0 <col:11, line:15:3>
        |   |-CallExpr 0x15b009850 <line:9:4, col:33> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x15b009710 <col:4> 'int ()' Function 0x15b009658 'zval_ptr_dtor' 'int ()'
        |   | `-UnaryOperator 0x15b009838 <col:18, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-CXXDependentScopeMemberExpr 0x15b0097f0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->retval
        |   |     `-RecoveryExpr 0x15b0097d0 <col:19> '<dependent type>' contains-errors lvalue
        |   |-CallExpr 0x15b009a68 <line:10:4, col:32> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x15b009958 <col:4> 'int ()' Function 0x15b0098a0 'MAKE_STD_ZVAL' 'int ()'
        |   | `-CXXDependentScopeMemberExpr 0x15b009a20 <col:18, col:26> '<dependent type>' contains-errors lvalue ->retval
        |   |   `-RecoveryExpr 0x15b009a00 <col:18> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x15b009d10 <line:11:4, col:38> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x15b009b70 <col:4> 'int ()' Function 0x15b009ab8 'ZVAL_ZVAL' 'int ()'
        |     |-CXXDependentScopeMemberExpr 0x15b009ca8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->retval
        |     | `-RecoveryExpr 0x15b009c88 <col:14> '<dependent type>' contains-errors lvalue
        |     |-RecoveryExpr 0x15b009cf0 <col:30> '<dependent type>' contains-errors lvalue
        |     |-IntegerLiteral 0x15b009c08 <col:34> 'int' 1
        |     `-IntegerLiteral 0x15b009c28 <col:37> 'int' 1
        `-BinaryOperator 0x15b00a070 <line:16:3, col:12> 'long' '='
          |-UnaryOperator 0x15b00a020 <col:3, col:4> 'long' lvalue prefix '*' cannot overflow
          | `-ImplicitCastExpr 0x15b00a008 <col:4> 'long *' <LValueToRValue>
          |   `-DeclRefExpr 0x15b009fe8 <col:4> 'long *' lvalue ParmVar 0x15a9281d8 'count' 'long *'
          `-ImplicitCastExpr 0x15b00a058 <col:12> 'long' <IntegralCast>
            `-IntegerLiteral 0x15b00a038 <col:12> 'int' 0
