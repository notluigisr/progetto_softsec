`-FunctionDecl 0x12c940da8  line:1:19 copy_regset_from_user 'int (struct task_struct *, const struct user_regset_view *, unsigned int, unsigned int, unsigned int, int)' static inline
  |-ParmVarDecl 0x12c928648 <col:41, col:61> col:61 used target 'struct task_struct *'
  |-ParmVarDecl 0x12c940a28 <line:2:6, col:37> col:37 used view 'const struct user_regset_view *'
  |-ParmVarDecl 0x12c940aa8 <line:3:6, col:19> col:19 used setno 'unsigned int'
  |-ParmVarDecl 0x12c940b28 <line:4:6, col:19> col:19 used offset 'unsigned int'
  |-ParmVarDecl 0x12c940ba8 <col:27, col:40> col:40 used size 'unsigned int'
  |-ParmVarDecl 0x12c940c20 <line:5:6, col:17> col:17 __user 'int'
  `-CompoundStmt 0x12c9416f8 <line:6:1, line:13:1>
    |-DeclStmt 0x12c9411a0 <line:7:2, col:58>
    | |-RecordDecl 0x12c940ec8 <col:8, col:15> col:15 struct user_regset
    | `-VarDecl 0x12c941038 <col:2, col:57> col:28 used regset 'const struct user_regset *' cinit
    |   `-UnaryOperator 0x12c941170 <col:37, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-ArraySubscriptExpr 0x12c941150 <col:38, col:57> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x12c941120 <col:38, col:44> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x12c9410d8 <col:38, col:44> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x12c9410a0 <col:38> 'const struct user_regset_view *' lvalue ParmVar 0x12c940a28 'view' 'const struct user_regset_view *'
    |       `-ImplicitCastExpr 0x12c941138 <col:52> 'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x12c941100 <col:52> 'unsigned int' lvalue ParmVar 0x12c940aa8 'setno' 'unsigned int'
    |-IfStmt 0x12c9414d8 <line:9:2, line:10:11>
    | |-UnaryOperator 0x12c941418 <line:9:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12c9413e0 <col:7, col:40> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12c9412e0 <col:7> 'int ()' Function 0x12c941228 'access_ok' 'int ()'
    | |   |-RecoveryExpr 0x12c9413a0 <col:17> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x12c9413c0 <col:30> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c941330 <col:36> 'unsigned int' lvalue ParmVar 0x12c940ba8 'size' 'unsigned int'
    | `-ReturnStmt 0x12c9414c8 <line:10:3, col:11>
    |   `-UnaryOperator 0x12c9414b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12c941498 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12c941478 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12c9416e8 <line:12:2, col:61>
      `-CallExpr 0x12c941698 <col:9, col:61> '<dependent type>' contains-errors
        |-RecoveryExpr 0x12c941530 <col:9, col:17> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x12c9414f8 <col:9> 'const struct user_regset *' contains-errors lvalue Var 0x12c941038 'regset' 'const struct user_regset *'
        |-DeclRefExpr 0x12c941558 <col:21> 'struct task_struct *' lvalue ParmVar 0x12c928648 'target' 'struct task_struct *'
        |-DeclRefExpr 0x12c941578 <col:29> 'const struct user_regset *' contains-errors lvalue Var 0x12c941038 'regset' 'const struct user_regset *'
        |-DeclRefExpr 0x12c941598 <col:37> 'unsigned int' lvalue ParmVar 0x12c940b28 'offset' 'unsigned int'
        |-DeclRefExpr 0x12c9415b8 <col:45> 'unsigned int' lvalue ParmVar 0x12c940ba8 'size' 'unsigned int'
        |-RecoveryExpr 0x12c941658 <col:51> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x12c941678 <col:57> '<dependent type>' contains-errors lvalue
