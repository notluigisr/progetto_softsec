`-FunctionDecl 0x1300d8508  line:1:5 invalid zgfx_decompress 'int (int *, const int *, int, int **, int *, int)'
  |-ParmVarDecl 0x1300d8128 <col:21, col:35> col:35 invalid zgfx 'int *'
  |-ParmVarDecl 0x1300d81a8 <col:41, col:53> col:53 invalid pSrcData 'const int *'
  |-ParmVarDecl 0x1300d8228 <col:63, col:70> col:70 invalid SrcSize 'int'
  |-ParmVarDecl 0x1300d82e0 <col:79, col:86> col:86 invalid ppDstData 'int **'
  |-ParmVarDecl 0x1300d8360 <line:2:21, col:29> col:29 invalid pDstSize 'int *'
  |-ParmVarDecl 0x1300d83e0 <col:39, col:46> col:46 invalid flags 'int'
  `-CompoundStmt 0x1300f3998 <line:3:1, line:79:1>
    |-DeclStmt 0x1300d8698 <line:4:2, col:17>
    | `-VarDecl 0x1300d85f8 <col:2, col:16> col:6 used status 'int' cinit
    |   `-UnaryOperator 0x1300d8680 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x1300d8660 <col:16> 'int' 1
    |-IfStmt 0x1300f19f0 <line:8:2, line:9:11>
    | |-UnaryOperator 0x1300f1990 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1300f1978 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1300f1958 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1300f19e0 <line:9:3, col:11>
    |   `-UnaryOperator 0x1300f19c8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x1300f19a8 <col:11> 'int' 1
    |-IfStmt 0x1300f1c60 <line:11:2, line:12:8>
    | |-BinaryOperator 0x1300f1bd8 <line:11:6, col:42> 'int' contains-errors '<'
    | | |-CallExpr 0x1300f1bb0 <col:6, col:38> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1300f1af0 <col:6> 'int ()' Function 0x1300f1a38 'Stream_GetRemainingLength' 'int ()'
    | | | `-RecoveryExpr 0x1300f1b90 <col:32> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1300f1b50 <col:42> 'int' 1
    | `-GotoStmt 0x1300f1c48 <line:12:3, col:8> 'fail' 0x1300f1bf8
    |-CallExpr 0x1300f1e20 <line:14:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1300f1d60 <col:2> 'int ()' Function 0x1300f1ca8 'Stream_Read_UINT8' 'int ()'
    | |-RecoveryExpr 0x1300f1de0 <col:20> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1300f1e00 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1300f3798 <line:16:2, line:73:2> has_else
    | |-BinaryOperator 0x1300f1ee0 <line:16:6, col:20> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1300f1ea0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1300f1ec0 <col:20> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1300f25b0 <line:17:2, line:30:2>
    | | |-IfStmt 0x1300f2078 <line:18:3, line:19:9>
    | | | |-RecoveryExpr 0x1300f2040 <line:18:7, col:79> '_Bool' contains-errors
    | | | `-GotoStmt 0x1300f2060 <line:19:4, col:9> 'fail' 0x1300f1bf8
    | | |-IfStmt 0x1300f2260 <line:25:3, line:26:9>
    | | | |-UnaryOperator 0x1300f2230 <line:25:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-UnaryOperator 0x1300f2218 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x1300f2200 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | | | |     `-RecoveryExpr 0x1300f21e0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x1300f2248 <line:26:4, col:9> 'fail' 0x1300f1bf8
    | | |-BinaryOperator 0x1300f2338 <line:28:3, col:21> '<dependent type>' contains-errors '='
    | | | |-UnaryOperator 0x1300f22b8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x1300f22a0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x1300f2280 <col:4> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x1300f22f0 <col:15, col:21> '<dependent type>' contains-errors lvalue ->OutputCount
    | | |   `-RecoveryExpr 0x1300f22d0 <col:15> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x1300f2578 <line:29:3, col:63> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1300f2438 <col:3> 'int ()' Function 0x1300f2380 'CopyMemory' 'int ()'
    | |   |-UnaryOperator 0x1300f2490 <col:14, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x1300f2478 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x1300f2458 <col:15> '<dependent type>' contains-errors lvalue
    | |   |-CXXDependentScopeMemberExpr 0x1300f24c8 <col:26, col:32> '<dependent type>' contains-errors lvalue ->OutputBuffer
    | |   | `-RecoveryExpr 0x1300f24a8 <col:26> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x1300f2530 <col:46, col:52> '<dependent type>' contains-errors lvalue ->OutputCount
    | |     `-RecoveryExpr 0x1300f2510 <col:46> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x1300f3768 <line:31:7, line:73:2> has_else
    |   |-RecoveryExpr 0x1300f25e0 <line:31:11, col:25> '_Bool' contains-errors
    |   |-CompoundStmt 0x1300f3710 <line:32:2, line:69:2>
    |   | |-IfStmt 0x1300f2678 <line:39:3, line:40:9>
    |   | | |-RecoveryExpr 0x1300f2640 <line:39:7, col:43> '_Bool' contains-errors
    |   | | `-GotoStmt 0x1300f2660 <line:40:4, col:9> 'fail' 0x1300f1bf8
    |   | |-IfStmt 0x1300f3330 <line:45:3, line:46:9>
    |   | | |-RecoveryExpr 0x1300f32f8 <line:45:7, col:71> '_Bool' contains-errors
    |   | | `-GotoStmt 0x1300f3318 <line:46:4, col:9> 'fail' 0x1300f1bf8
    |   | `-IfStmt 0x1300f3388 <line:50:3, line:51:9>
    |   |   |-RecoveryExpr 0x1300f3350 <line:50:7, col:8> '_Bool' contains-errors
    |   |   `-GotoStmt 0x1300f3370 <line:51:4, col:9> 'fail' 0x1300f1bf8
    |   `-CompoundStmt 0x1300f3750 <line:71:2, line:73:2>
    |     `-GotoStmt 0x1300f3738 <line:72:3, col:8> 'fail' 0x1300f1bf8
    |-BinaryOperator 0x1300f3808 <line:75:2, col:11> 'int' '='
    | |-DeclRefExpr 0x1300f37c8 <col:2> 'int' lvalue Var 0x1300d85f8 'status' 'int'
    | `-IntegerLiteral 0x1300f37e8 <col:11> 'int' 1
    |-LabelStmt 0x1300f3930 <line:76:1, col:5> 'fail'
    | `-NullStmt 0x1300f3928 <col:5>
    `-ReturnStmt 0x1300f3988 <line:78:2, col:9>
      `-ImplicitCastExpr 0x1300f3970 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1300f3950 <col:9> 'int' lvalue Var 0x1300d85f8 'status' 'int'
