`-FunctionDecl 0x12c928238  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12c928158 <col:6> col:6 used IndexBoundsBuilderTest 'int'
  |-ParmVarDecl 0x12c9280d8 <col:30> col:30 TranslateNotEqualToNullShouldBuildInexactBoundsIfIndexIsMultiKey 'int'
  `-CompoundStmt 0x12c9411c0 <col:96, line:17:1>
    |-DeclStmt 0x12c928588 <line:3:5, col:57>
    | `-VarDecl 0x12c928368 <col:5, col:56> col:10 used testIndex 'int' auto cinit
    |   `-CallExpr 0x12c928560 <col:22, col:56> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c9284e0 <col:22> 'int ()' Function 0x12c928428 'buildSimpleIndexEntry' 'int ()'
    |     `-RecoveryExpr 0x12c928540 <col:44> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c940c60 <line:4:5, col:26> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c940be0 <col:5, col:15> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c9285a0 <col:5> 'int' contains-errors lvalue Var 0x12c928368 'testIndex' 'int'
    | `-RecoveryExpr 0x12c940c40 <col:26> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12c940e88 <line:7:5, col:47>
    | `-VarDecl 0x12c940c98 <col:5, col:46> col:10 expr 'int' auto cinit
    |   `-CallExpr 0x12c940e60 <col:17, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c940de0 <col:17> 'int ()' Function 0x12c940d28 'parseMatchExpression' 'int ()'
    |     `-RecoveryExpr 0x12c940e40 <col:38> '<dependent type>' contains-errors lvalue
    |-DeclRefExpr 0x12c940ed0 <line:10:5> 'int' lvalue ParmVar 0x12c928158 'IndexBoundsBuilderTest' 'int'
    `-DeclRefExpr 0x12c940f20 <line:11:5> 'int' lvalue ParmVar 0x12c928158 'IndexBoundsBuilderTest' 'int'
