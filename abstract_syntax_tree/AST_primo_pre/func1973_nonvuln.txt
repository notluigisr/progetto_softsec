`-FunctionDecl 0x1379283a8  line:1:1 invalid add_fromto 'int (int *, int *, char *, char *)'
  |-ParmVarDecl 0x137928128 <line:2:5, col:18> col:18 invalid spin 'int *'
  |-ParmVarDecl 0x1379281a8 <line:3:5, col:15> col:15 invalid gap 'int *'
  |-ParmVarDecl 0x137928228 <line:4:5, col:13> col:13 used from 'char *'
  |-ParmVarDecl 0x1379282a8 <line:5:5, col:13> col:13 used to 'char *'
  `-CompoundStmt 0x140008b68 <line:6:1, line:19:1>
    |-DeclStmt 0x137928518 <line:8:5, col:25>
    | `-VarDecl 0x1379284b0 <col:5, col:12> col:12 invalid word 'char'
    `-IfStmt 0x140008b48 <line:10:5, line:18:5>
      |-BinaryOperator 0x137928778 <line:10:9, col:28> 'int' contains-errors '=='
      | |-CallExpr 0x1379286f0 <col:9, col:23> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x137928690 <col:9> 'int ()' Function 0x1379285d8 'ga_grow' 'int ()'
      | | |-RecoveryExpr 0x1379286b0 <col:17> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x1379286d0 <col:22> 'int' 1
      | `-RecoveryExpr 0x137928758 <col:28> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x140008b30 <line:11:5, line:18:5>
        `-UnaryOperator 0x140008b18 <line:17:2, col:9> '<dependent type>' contains-errors prefix '++' cannot overflow
          `-CXXDependentScopeMemberExpr 0x140008ad0 <col:4, col:9> '<dependent type>' contains-errors lvalue ->ga_len
            `-RecoveryExpr 0x140008ab0 <col:4> '<dependent type>' contains-errors lvalue
