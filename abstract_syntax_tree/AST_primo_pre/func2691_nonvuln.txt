`-FunctionDecl 0x125140d38  line:1:5 invalid udp_sendpage 'int (struct sock *, struct page *, int, int, int)'
  |-ParmVarDecl 0x125128648 <col:18, col:31> col:31 used sk 'struct sock *'
  |-ParmVarDecl 0x125140a28 <col:35, col:48> col:48 used page 'struct page *'
  |-ParmVarDecl 0x125140aa8 <col:54, col:58> col:58 used offset 'int'
  |-ParmVarDecl 0x125140b40 <line:2:4, col:11> col:11 invalid size 'int'
  |-ParmVarDecl 0x125140bc0 <col:17, col:21> col:21 used flags 'int'
  `-CompoundStmt 0x125148938 <line:3:1, line:46:1>
    |-DeclStmt 0x125141238 <line:4:2, col:38>
    | |-RecordDecl 0x125140e08 <col:2, col:9> col:9 struct inet_sock
    | `-VarDecl 0x125140f78 <col:2, col:37> col:20 used inet 'struct inet_sock *' cinit
    |   `-ImplicitCastExpr 0x125141208 <col:27, col:37> 'struct inet_sock *' <IntegralToPointer>
    |     `-CallExpr 0x1251411c8 <col:27, col:37> 'int'
    |       |-ImplicitCastExpr 0x1251411b0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x125141140 <col:27> 'int ()' Function 0x125141088 'inet_sk' 'int ()'
    |       `-ImplicitCastExpr 0x1251411f0 <col:35> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x125141160 <col:35> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |-DeclStmt 0x1251415c8 <line:5:2, col:34>
    | |-RecordDecl 0x125141250 <col:2, col:9> col:9 struct udp_sock
    | `-VarDecl 0x1251413b8 <col:2, col:33> col:19 used up 'struct udp_sock *' cinit
    |   `-ImplicitCastExpr 0x125141598 <col:24, col:33> 'struct udp_sock *' <IntegralToPointer>
    |     `-CallExpr 0x125141558 <col:24, col:33> 'int'
    |       |-ImplicitCastExpr 0x125141540 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x125141500 <col:24> 'int ()' Function 0x125141448 'udp_sk' 'int ()'
    |       `-ImplicitCastExpr 0x125141580 <col:31> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x125141520 <col:31> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |-DeclStmt 0x125141660 <line:6:2, col:9>
    | `-VarDecl 0x1251415f8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x125146d50 <line:8:2, line:15:2>
    | |-UnaryOperator 0x1251416f0 <line:8:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1251416d8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1251416b0 <col:7, col:11> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x125141678 <col:7> 'struct udp_sock *' lvalue Var 0x1251413b8 'up' 'struct udp_sock *'
    | `-CompoundStmt 0x125146d28 <col:20, line:15:2>
    |   |-DeclStmt 0x125141920 <line:9:3, col:54>
    |   | |-RecordDecl 0x125141708 <col:3, col:10> col:10 struct msghdr
    |   | `-VarDecl 0x125141808 <col:3, col:17> col:17 invalid msg 'struct msghdr'
    |   |-BinaryOperator 0x125146c28 <line:12:3, col:38> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x125141938 <col:3> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    |   | `-CallExpr 0x125146be8 <col:9, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x125146ab8 <col:9> 'int ()' Function 0x125146a00 'udp_sendmsg' 'int ()'
    |   |   |-RecoveryExpr 0x125146bc8 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x125146af0 <col:27> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |   |   |-UnaryOperator 0x125146b30 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x125146b10 <col:32> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x125146b48 <col:37> 'int' 0
    |   `-IfStmt 0x125146d08 <line:13:3, line:14:11>
    |     |-BinaryOperator 0x125146ca0 <line:13:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x125146c88 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x125146c48 <col:7> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    |     | `-IntegerLiteral 0x125146c68 <col:13> 'int' 0
    |     `-ReturnStmt 0x125146cf8 <line:14:4, col:11>
    |       `-ImplicitCastExpr 0x125146ce0 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x125146cc0 <col:11> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    |-CallExpr 0x125146ea8 <line:17:2, col:14> 'int'
    | |-ImplicitCastExpr 0x125146e90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x125146e50 <col:2> 'int ()' Function 0x125146d98 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x125146ed0 <col:12> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x125146e70 <col:12> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |-IfStmt 0x1251473f8 <line:19:2, line:24:2>
    | |-CallExpr 0x125147078 <line:19:6, col:27> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x125146fc8 <col:6> 'int ()' Function 0x125146f10 'unlikely' 'int ()'
    | | `-UnaryOperator 0x125147060 <col:15, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x125147048 <col:16, col:20> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x125147020 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x125146fe8 <col:16> 'struct udp_sock *' lvalue Var 0x1251413b8 'up' 'struct udp_sock *'
    | `-CompoundStmt 0x1251473d8 <col:30, line:24:2>
    |   |-CallExpr 0x1251471d8 <line:20:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x1251471c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125147180 <col:3> 'int ()' Function 0x1251470c8 'release_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x125147200 <col:16> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1251471a0 <col:16> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |   `-ReturnStmt 0x1251473c8 <line:23:3, col:11>
    |     `-UnaryOperator 0x1251473b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x125147398 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x125147378 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125147778 <line:26:2, line:27:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x125147418 <line:26:2> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    | `-CallExpr 0x125147728 <col:8, line:27:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125147518 <line:26:8> 'int ()' Function 0x125147460 'ip_append_page' 'int ()'
    |   |-DeclRefExpr 0x125147538 <col:23> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |   |-UnaryOperator 0x125147690 <col:27, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x125147648 <col:28, col:44> '<dependent type>' contains-errors lvalue .ip4
    |   |   `-CXXDependentScopeMemberExpr 0x125147600 <col:28, col:42> '<dependent type>' contains-errors lvalue .u
    |   |     `-CXXDependentScopeMemberExpr 0x1251475b8 <col:28, col:39> '<dependent type>' contains-errors lvalue .fl
    |   |       `-RecoveryExpr 0x125147590 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x125147558 <col:28> 'struct inet_sock *' lvalue Var 0x125140f78 'inet' 'struct inet_sock *'
    |   |-DeclRefExpr 0x1251476a8 <line:27:9> 'struct page *' lvalue ParmVar 0x125140a28 'page' 'struct page *'
    |   |-DeclRefExpr 0x1251476c8 <col:15> 'int' lvalue ParmVar 0x125140aa8 'offset' 'int'
    |   |-RecoveryExpr 0x1251476e8 <col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x125147708 <col:29> 'int' lvalue ParmVar 0x125140bc0 'flags' 'int'
    |-IfStmt 0x125148188 <line:28:2, line:32:2>
    | |-BinaryOperator 0x125147870 <line:28:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x125147798 <col:6> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    | | `-UnaryOperator 0x125147858 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x125147840 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x125147820 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125148168 <col:26, line:32:2>
    |   |-CallExpr 0x1251478e8 <line:29:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x1251478d0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125147890 <col:3> 'int ()' Function 0x1251470c8 'release_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x125147910 <col:16> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1251478b0 <col:16> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |   `-ReturnStmt 0x125148158 <line:30:3, line:31:17>
    |     `-CallExpr 0x125148110 <line:30:10, line:31:17> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x125148010 <line:30:10> 'int ()' Function 0x125147950 'sock_no_sendpage' 'int ()'
    |       |-RecoveryExpr 0x125148068 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x125148030 <col:27> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |       |-DeclRefExpr 0x125148090 <col:42> 'struct page *' lvalue ParmVar 0x125140a28 'page' 'struct page *'
    |       |-DeclRefExpr 0x1251480b0 <col:48> 'int' lvalue ParmVar 0x125140aa8 'offset' 'int'
    |       |-RecoveryExpr 0x1251480d0 <line:31:6> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1251480f0 <col:12> 'int' lvalue ParmVar 0x125140bc0 'flags' 'int'
    |-IfStmt 0x125148420 <line:33:2, line:36:2>
    | |-BinaryOperator 0x125148200 <line:33:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x1251481e8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1251481a8 <col:6> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    | | `-IntegerLiteral 0x1251481c8 <col:12> 'int' 0
    | `-CompoundStmt 0x125148400 <col:15, line:36:2>
    |   |-CallExpr 0x125148358 <line:34:3, col:30> 'int'
    |   | |-ImplicitCastExpr 0x125148340 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125148300 <col:3> 'int ()' Function 0x125148248 'udp_flush_pending_frames' 'int ()'
    |   | `-ImplicitCastExpr 0x125148380 <col:28> 'struct sock *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x125148320 <col:28> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |   `-GotoStmt 0x1251483e8 <line:35:3, col:8> 'out' 0x125148398
    |-CompoundAssignOperator 0x1251484c0 <line:38:2, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x125148478 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x125148440 <col:2> 'struct udp_sock *' lvalue Var 0x1251413b8 'up' 'struct udp_sock *'
    | `-RecoveryExpr 0x1251484a0 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125148748 <line:39:2, line:40:35>
    | |-RecoveryExpr 0x125148570 <line:39:6, col:40> '_Bool' contains-errors
    | `-BinaryOperator 0x125148728 <line:40:3, col:35> 'int' '='
    |   |-DeclRefExpr 0x125148590 <col:3> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    |   `-CallExpr 0x1251486e8 <col:9, col:35> 'int'
    |     |-ImplicitCastExpr 0x1251486d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x125148690 <col:9> 'int ()' Function 0x1251485d8 'udp_push_pending_frames' 'int ()'
    |     `-ImplicitCastExpr 0x125148710 <col:33> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x1251486b0 <col:33> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    |-IfStmt 0x125148818 <line:41:2, line:42:9>
    | |-UnaryOperator 0x1251487a0 <line:41:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x125148788 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x125148768 <col:7> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    | `-BinaryOperator 0x1251487f8 <line:42:3, col:9> 'int' contains-errors '='
    |   |-DeclRefExpr 0x1251487b8 <col:3> 'int' lvalue Var 0x1251415f8 'ret' 'int'
    |   `-RecoveryExpr 0x1251487d8 <col:9> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1251488d0 <line:43:1, line:44:17> 'out'
    | `-CallExpr 0x125148890 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x125148878 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x125148838 <col:2> 'int ()' Function 0x1251470c8 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x1251488b8 <col:15> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x125148858 <col:15> 'struct sock *' lvalue ParmVar 0x125128648 'sk' 'struct sock *'
    `-ReturnStmt 0x125148928 <line:45:2, col:9>
      `-ImplicitCastExpr 0x125148910 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1251488f0 <col:9> 'int' lvalue Var 0x1251415f8 'ret' 'int'
