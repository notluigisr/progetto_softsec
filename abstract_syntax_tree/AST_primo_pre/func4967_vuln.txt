`-FunctionDecl 0x15480dfe8  line:1:1 check_offset 'int (char *, int, char *, void *, int)'
  |-ParmVarDecl 0x15480dcd8 <col:14, col:20> col:20 used memory 'char *'
  |-ParmVarDecl 0x15480dd58 <col:28, col:32> col:32 used total_size 'int'
  |-ParmVarDecl 0x15480ddd8 <col:44, col:50> col:50 used name 'char *'
  |-ParmVarDecl 0x15480de58 <col:56, col:62> col:62 used offset 'void *'
  |-ParmVarDecl 0x15480ded8 <col:70, col:74> col:74 used size 'int'
  `-CompoundStmt 0x154827ae0 <line:2:1, line:13:1>
    |-DeclStmt 0x15480e340 <line:3:2, col:57>
    | `-VarDecl 0x15480e118 <col:2, col:56> col:6 used need_size 'int' cinit
    |   `-CStyleCastExpr 0x15480e318 <col:18, col:56> 'int' <IntegralCast>
    |     `-ParenExpr 0x15480e2f8 <col:24, col:56> 'long'
    |       `-BinaryOperator 0x15480e2a0 <col:25, col:52> 'long' '+'
    |         |-BinaryOperator 0x15480e230 <col:25, col:43> 'long' '-'
    |         | |-CStyleCastExpr 0x15480e1d0 <col:25, col:34> 'char *' <BitCast>
    |         | | `-ImplicitCastExpr 0x15480e1b8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x15480e180 <col:34> 'void *' lvalue ParmVar 0x15480de58 'offset' 'void *'
    |         | `-ImplicitCastExpr 0x15480e218 <col:43> 'char *' <LValueToRValue>
    |         |   `-DeclRefExpr 0x15480e1f8 <col:43> 'char *' lvalue ParmVar 0x15480dcd8 'memory' 'char *'
    |         `-ImplicitCastExpr 0x15480e288 <col:52> 'long' <IntegralCast>
    |           `-ImplicitCastExpr 0x15480e270 <col:52> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x15480e250 <col:52> 'int' lvalue ParmVar 0x15480ded8 'size' 'int'
    |-IfStmt 0x154827a78 <line:7:2, line:10:2>
    | |-BinaryOperator 0x154827670 <line:7:6, col:35> 'int' '||'
    | | |-BinaryOperator 0x15480e3b0 <col:6, col:18> 'int' '<'
    | | | |-ImplicitCastExpr 0x15480e398 <col:6> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x15480e358 <col:6> 'int' lvalue Var 0x15480e118 'need_size' 'int'
    | | | `-IntegerLiteral 0x15480e378 <col:18> 'int' 0
    | | `-BinaryOperator 0x154827650 <col:23, col:35> 'int' '>'
    | |   |-ImplicitCastExpr 0x154827620 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x15480e3d0 <col:23> 'int' lvalue Var 0x15480e118 'need_size' 'int'
    | |   `-ImplicitCastExpr 0x154827638 <col:35> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x154827600 <col:35> 'int' lvalue ParmVar 0x15480dd58 'total_size' 'int'
    | `-CompoundStmt 0x154827a60 <col:47, line:10:2>
    |   `-CallExpr 0x154827a00 <line:8:3, col:22> 'int'
    |     |-ImplicitCastExpr 0x1548279e8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1548277c0 <col:3> 'int ()' Function 0x154827708 'warn' 'int ()'
    |     |-CallExpr 0x154827988 <col:8, col:15> 'int'
    |     | |-ImplicitCastExpr 0x154827970 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x1548278c0 <col:8> 'int ()' Function 0x154827808 '_' 'int ()'
    |     | `-ImplicitCastExpr 0x1548279b0 <col:10> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x154827920 <col:10> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x154827a30 <col:18> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1548279c8 <col:18> 'char *' lvalue ParmVar 0x15480ddd8 'name' 'char *'
    `-ReturnStmt 0x154827ad0 <line:12:2, col:9>
      `-RecoveryExpr 0x154827ab0 <col:9> '<dependent type>' contains-errors lvalue
