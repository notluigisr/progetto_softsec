`-FunctionDecl 0x14980e068  line:1:20 invalid ParseImageResourceBlocks 'int *(int *, const unsigned char *, int, int *, int *)' static
  |-ParmVarDecl 0x14980dd28 <col:45, col:52> col:52 referenced invalid image 'int *'
  |-ParmVarDecl 0x14980ddd8 <line:2:3, col:24> col:24 used blocks 'const unsigned char *'
  |-ParmVarDecl 0x14980de58 <col:31, col:38> col:38 invalid length 'int'
  |-ParmVarDecl 0x14980ded8 <line:3:3, col:22> col:22 invalid has_merged_image 'int *'
  |-ParmVarDecl 0x14980df58 <col:39, col:54> col:54 invalid exception 'int *'
  `-CompoundStmt 0x149126638 <line:4:1, line:94:1>
    |-DeclStmt 0x14980e1b8 <line:5:3, line:6:7>
    | `-VarDecl 0x14980e150 <line:5:3, line:6:6> col:6 used p 'const unsigned char *'
    |-DeclStmt 0x14980e268 <line:14:3, line:15:16>
    | `-VarDecl 0x14980e200 <line:14:3, line:15:5> col:5 used name_length 'unsigned char'
    |-DeclStmt 0x14980e300 <line:17:3, line:18:10>
    | `-VarDecl 0x14980e298 <line:17:3, line:18:5> col:5 used count 'unsigned int'
    |-DeclStmt 0x149827480 <line:20:3, line:22:15>
    | |-VarDecl 0x14980e330 <line:20:3, line:21:5> col:5 used id 'unsigned short'
    | `-VarDecl 0x149827400 <line:20:3, line:22:5> col:5 used short_sans 'unsigned short'
    |-CallExpr 0x149827868 <line:27:3, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1498277c0 <col:3> 'int ()' Function 0x149827708 'SetStringInfoDatum' 'int ()'
    | |-RecoveryExpr 0x149827848 <col:22> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x1498277f8 <col:30> 'const unsigned char *' lvalue ParmVar 0x14980ddd8 'blocks' 'const unsigned char *'
    |-CallExpr 0x149827a60 <line:28:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x149827978 <col:3> 'int ()' Function 0x1498278c0 'SetStringInfoName' 'int ()'
    | |-RecoveryExpr 0x149827a40 <col:21> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x1498279f0 <col:29> 'char[4]' lvalue "STR"
    `-ForStmt 0x149126600 <line:29:3, line:92:3>
      |-BinaryOperator 0x149827ae8 <line:29:8, col:10> 'const unsigned char *' '='
      | |-DeclRefExpr 0x149827a90 <col:8> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
      | `-ImplicitCastExpr 0x149827ad0 <col:10> 'const unsigned char *' <LValueToRValue>
      |   `-DeclRefExpr 0x149827ab0 <col:10> 'const unsigned char *' lvalue ParmVar 0x14980ddd8 'blocks' 'const unsigned char *'
      |-<<<NULL>>>
      |-BinaryOperator 0x149827cd8 <col:18, col:57> 'int' contains-errors '&&'
      | |-ParenExpr 0x149827b98 <col:18, col:30> 'int'
      | | `-BinaryOperator 0x149827b78 <col:19, col:24> 'int' '>='
      | |   |-ImplicitCastExpr 0x149827b48 <col:19> 'const unsigned char *' <LValueToRValue>
      | |   | `-DeclRefExpr 0x149827b08 <col:19> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
      | |   `-ImplicitCastExpr 0x149827b60 <col:24> 'const unsigned char *' <LValueToRValue>
      | |     `-DeclRefExpr 0x149827b28 <col:24> 'const unsigned char *' lvalue ParmVar 0x14980ddd8 'blocks' 'const unsigned char *'
      | `-ParenExpr 0x149827cb8 <col:35, col:57> 'int' contains-errors
      |   `-BinaryOperator 0x149827c98 <col:36, col:56> 'int' contains-errors '<'
      |     |-DeclRefExpr 0x149827bb8 <col:36> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
      |     `-ParenExpr 0x149827c78 <col:40, col:56> '<dependent type>' contains-errors
      |       `-BinaryOperator 0x149827c58 <col:41, col:55> '<dependent type>' contains-errors '-'
      |         |-BinaryOperator 0x149827c18 <col:41, col:48> '<dependent type>' contains-errors '+'
      |         | |-DeclRefExpr 0x149827bd8 <col:41> 'const unsigned char *' lvalue ParmVar 0x14980ddd8 'blocks' 'const unsigned char *'
      |         | `-RecoveryExpr 0x149827bf8 <col:48> '<dependent type>' contains-errors lvalue
      |         `-IntegerLiteral 0x149827c38 <col:55> 'int' 7
      |-<<<NULL>>>
      `-CompoundStmt 0x1491265a0 <line:30:3, line:92:3>
        |-IfStmt 0x149827f90 <line:31:5, line:32:7>
        | |-BinaryOperator 0x149827f68 <line:31:9, col:53> 'int' '!='
        | | |-CallExpr 0x149827ef8 <col:9, col:48> 'int'
        | | | |-ImplicitCastExpr 0x149827ee0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | | | `-DeclRefExpr 0x149827dd8 <col:9> 'int ()' Function 0x149827d20 'LocaleNCompare' 'int ()'
        | | | |-CStyleCastExpr 0x149827e48 <col:24, col:39> 'const char *' <BitCast>
        | | | | `-ImplicitCastExpr 0x149827e30 <col:39> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
        | | | |   `-DeclRefExpr 0x149827df8 <col:39> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | | | |-ImplicitCastExpr 0x149827f30 <col:41> 'char *' <ArrayToPointerDecay>
        | | | | `-StringLiteral 0x149827e70 <col:41> 'char[4]' lvalue "STR"
        | | | `-IntegerLiteral 0x149827e90 <col:47> 'int' 4
        | | `-IntegerLiteral 0x149827f48 <col:53> 'int' 0
        | `-BreakStmt 0x149827f88 <line:32:7>
        |-CompoundAssignOperator 0x149827ff0 <line:33:5, col:8> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x149827fb0 <col:5> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | `-IntegerLiteral 0x149827fd0 <col:8> 'int' 4
        |-BinaryOperator 0x149828298 <line:34:5, col:37> 'const unsigned char *' contains-errors '='
        | |-DeclRefExpr 0x149828020 <col:5> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | `-CallExpr 0x149828260 <col:7, col:37> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x149828120 <col:7> 'int ()' Function 0x149828068 'PushShortPixel' 'int ()'
        |   |-RecoveryExpr 0x149828240 <col:22> '<dependent type>' contains-errors lvalue
        |   |-DeclRefExpr 0x149828158 <col:32> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        |   `-UnaryOperator 0x1498281d0 <col:34, col:35> 'unsigned short *' prefix '&' cannot overflow
        |     `-DeclRefExpr 0x149828178 <col:35> 'unsigned short' lvalue Var 0x14980e330 'id' 'unsigned short'
        |-BinaryOperator 0x149124ae0 <line:35:5, col:35> 'const unsigned char *' '='
        | |-DeclRefExpr 0x1498282b8 <col:5> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | `-ImplicitCastExpr 0x149124ac8 <col:7, col:35> 'const unsigned char *' <IntegralToPointer>
        |   `-CallExpr 0x149124a80 <col:7, col:35> 'int'
        |     |-ImplicitCastExpr 0x149124a68 <col:7> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1498283b8 <col:7> 'int ()' Function 0x149828300 'PushCharPixel' 'int ()'
        |     |-ImplicitCastExpr 0x149124ab0 <col:21> 'const unsigned char *' <LValueToRValue>
        |     | `-DeclRefExpr 0x1498283d8 <col:21> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        |     `-UnaryOperator 0x149124a50 <col:23, col:24> 'unsigned char *' prefix '&' cannot overflow
        |       `-DeclRefExpr 0x149124a00 <col:24> 'unsigned char' lvalue Var 0x14980e200 'name_length' 'unsigned char'
        |-IfStmt 0x149124c28 <line:36:5, line:37:18>
        | |-BinaryOperator 0x149124bd0 <line:36:9, col:30> 'int' '=='
        | | |-ParenExpr 0x149124b90 <col:9, col:25> 'int'
        | | | `-BinaryOperator 0x149124b70 <col:10, col:24> 'int' '%'
        | | |   |-ImplicitCastExpr 0x149124b58 <col:10> 'int' <IntegralCast>
        | | |   | `-ImplicitCastExpr 0x149124b40 <col:10> 'unsigned char' <LValueToRValue>
        | | |   |   `-DeclRefExpr 0x149124b00 <col:10> 'unsigned char' lvalue Var 0x14980e200 'name_length' 'unsigned char'
        | | |   `-IntegerLiteral 0x149124b20 <col:24> 'int' 2
        | | `-IntegerLiteral 0x149124bb0 <col:30> 'int' 0
        | `-UnaryOperator 0x149124c10 <line:37:7, col:18> 'unsigned char' postfix '++' cannot overflow
        |   `-DeclRefExpr 0x149124bf0 <col:7> 'unsigned char' lvalue Var 0x14980e200 'name_length' 'unsigned char'
        |-CompoundAssignOperator 0x149124cb8 <line:38:5, col:8> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x149124c48 <col:5> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | `-ImplicitCastExpr 0x149124ca0 <col:8> 'int' <IntegralCast>
        |   `-ImplicitCastExpr 0x149124c88 <col:8> 'unsigned char' <LValueToRValue>
        |     `-DeclRefExpr 0x149124c68 <col:8> 'unsigned char' lvalue Var 0x14980e200 'name_length' 'unsigned char'
        |-IfStmt 0x149124df0 <line:39:5, line:40:7>
        | |-BinaryOperator 0x149124dc8 <line:39:9, col:29> 'int' contains-errors '>'
        | | |-DeclRefExpr 0x149124ce8 <col:9> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
        | | `-ParenExpr 0x149124da8 <col:13, col:29> '<dependent type>' contains-errors
        | |   `-BinaryOperator 0x149124d88 <col:14, col:28> '<dependent type>' contains-errors '-'
        | |     |-BinaryOperator 0x149124d48 <col:14, col:21> '<dependent type>' contains-errors '+'
        | |     | |-DeclRefExpr 0x149124d08 <col:14> 'const unsigned char *' lvalue ParmVar 0x14980ddd8 'blocks' 'const unsigned char *'
        | |     | `-RecoveryExpr 0x149124d28 <col:21> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x149124d68 <col:28> 'int' 4
        | `-BreakStmt 0x149124de8 <line:40:7>
        |-IfStmt 0x1491250c0 <line:43:5, line:44:7>
        | |-RecoveryExpr 0x149125098 <line:43:9, col:63> '_Bool' contains-errors
        | `-BreakStmt 0x1491250b8 <line:44:7>
        |-SwitchStmt 0x149125130 <line:45:5, line:89:5>
        | |-ImplicitCastExpr 0x149125118 <line:45:13> 'int' <IntegralCast>
        | | `-ImplicitCastExpr 0x149125100 <col:13> 'unsigned short' <LValueToRValue>
        | |   `-DeclRefExpr 0x1491250e0 <col:13> 'unsigned short' lvalue Var 0x14980e330 'id' 'unsigned short'
        | `-CompoundStmt 0x1491264c0 <line:46:5, line:89:5>
        |   |-CaseStmt 0x149125190 <line:47:7, line:76:7>
        |   | |-ConstantExpr 0x149125178 <line:47:12> 'int'
        |   | | `-IntegerLiteral 0x149125158 <col:12> 'int' 1005
        |   | `-CompoundStmt 0x1491261a0 <line:48:7, line:76:7>
        |   |   |-DeclStmt 0x149125230 <line:49:9, line:50:34>
        |   |   | `-VarDecl 0x1491251c8 <line:49:9, line:50:11> col:11 invalid value 'char'
        |   |   |-DeclStmt 0x1491252c8 <line:52:9, line:53:21>
        |   |   | `-VarDecl 0x149125260 <line:52:9, line:53:11> col:11 used resolution 'unsigned short'
        |   |   |-IfStmt 0x149125328 <line:56:9, line:57:11>
        |   |   | |-RecoveryExpr 0x149125300 <line:56:13, col:22> '_Bool' contains-errors
        |   |   | `-BreakStmt 0x149125320 <line:57:11>
        |   |   |-BinaryOperator 0x149125530 <line:59:9, col:38> '<dependent type>' contains-errors '='
        |   |   | |-CXXDependentScopeMemberExpr 0x149125470 <col:9, col:27> '<dependent type>' contains-errors lvalue .x
        |   |   | | `-CXXDependentScopeMemberExpr 0x149125428 <col:9, col:16> '<dependent type>' contains-errors lvalue ->resolution
        |   |   | |   `-RecoveryExpr 0x149125400 <col:9> '<dependent type>' contains-errors lvalue
        |   |   | |     `-DeclRefExpr 0x1491253e0 <col:9> 'int *' lvalue ParmVar 0x14980dd28 'image' 'int *'
        |   |   | `-CStyleCastExpr 0x149125508 <col:29, col:38> 'double' <IntegralToFloating>
        |   |   |   `-ImplicitCastExpr 0x1491254f0 <col:38> 'unsigned short' <LValueToRValue> part_of_explicit_cast
        |   |   |     `-DeclRefExpr 0x1491254b8 <col:38> 'unsigned short' lvalue Var 0x149125260 'resolution' 'unsigned short'
        |   |   |-CStyleCastExpr 0x149125910 <line:62:9, col:60> 'void' contains-errors <ToVoid>
        |   |   | `-CallExpr 0x1491258c0 <col:16, col:60> '<dependent type>' contains-errors
        |   |   |   |-DeclRefExpr 0x149125820 <col:16> 'int ()' Function 0x149125768 'SetImageProperty' 'int ()'
        |   |   |   |-RecoveryExpr 0x149125840 <col:33> '<dependent type>' contains-errors lvalue
        |   |   |   |-StringLiteral 0x149125860 <col:39> 'char[4]' lvalue "STR"
        |   |   |   |-RecoveryExpr 0x149125880 <col:45> '<dependent type>' contains-errors lvalue
        |   |   |   `-RecoveryExpr 0x1491258a0 <col:51> '<dependent type>' contains-errors lvalue
        |   |   |-BinaryOperator 0x149125cf8 <line:67:9, col:38> '<dependent type>' contains-errors '='
        |   |   | |-CXXDependentScopeMemberExpr 0x149125c38 <col:9, col:27> '<dependent type>' contains-errors lvalue .y
        |   |   | | `-CXXDependentScopeMemberExpr 0x149125bf0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->resolution
        |   |   | |   `-RecoveryExpr 0x149125bc8 <col:9> '<dependent type>' contains-errors lvalue
        |   |   | |     `-DeclRefExpr 0x149125ba8 <col:9> 'int *' lvalue ParmVar 0x14980dd28 'image' 'int *'
        |   |   | `-CStyleCastExpr 0x149125cd0 <col:29, col:38> 'double' <IntegralToFloating>
        |   |   |   `-ImplicitCastExpr 0x149125cb8 <col:38> 'unsigned short' <LValueToRValue> part_of_explicit_cast
        |   |   |     `-DeclRefExpr 0x149125c80 <col:38> 'unsigned short' lvalue Var 0x149125260 'resolution' 'unsigned short'
        |   |   |-CStyleCastExpr 0x149125f18 <line:70:9, col:60> 'void' contains-errors <ToVoid>
        |   |   | `-CallExpr 0x149125ec8 <col:16, col:60> '<dependent type>' contains-errors
        |   |   |   |-DeclRefExpr 0x149125e28 <col:16> 'int ()' Function 0x149125768 'SetImageProperty' 'int ()'
        |   |   |   |-RecoveryExpr 0x149125e48 <col:33> '<dependent type>' contains-errors lvalue
        |   |   |   |-StringLiteral 0x149125e68 <col:39> 'char[4]' lvalue "STR"
        |   |   |   |-RecoveryExpr 0x149125e88 <col:45> '<dependent type>' contains-errors lvalue
        |   |   |   `-RecoveryExpr 0x149125ea8 <col:51> '<dependent type>' contains-errors lvalue
        |   |   `-BreakStmt 0x149126198 <line:75:9>
        |   |-CaseStmt 0x149126228 <line:77:7, line:83:7>
        |   | |-ConstantExpr 0x149126210 <line:77:12> 'int'
        |   | | `-IntegerLiteral 0x1491261f0 <col:12> 'int' 1057
        |   | `-CompoundStmt 0x149126448 <line:78:7, line:83:7>
        |   |   `-BreakStmt 0x149126440 <line:82:9>
        |   `-DefaultStmt 0x1491264a0 <line:84:7, line:88:7>
        |     `-CompoundStmt 0x149126488 <line:85:7, line:88:7>
        |       `-BreakStmt 0x149126480 <line:87:9>
        `-IfStmt 0x149126580 <line:90:5, line:91:8>
          |-RecoveryExpr 0x149126528 <line:90:9, col:28> '_Bool' contains-errors
          `-UnaryOperator 0x149126568 <line:91:7, col:8> 'const unsigned char *' postfix '++'
            `-DeclRefExpr 0x149126548 <col:7> 'const unsigned char *' lvalue Var 0x14980e150 'p' 'const unsigned char *'
