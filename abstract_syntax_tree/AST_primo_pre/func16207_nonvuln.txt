`-FunctionDecl 0x144129078  line:1:1 invalid md_is_link_label 'int (int *, const int *, int, int, int *, int *, int *, int *, int *)'
  |-ParmVarDecl 0x144128b28 <col:18, col:26> col:26 invalid ctx 'int *'
  |-ParmVarDecl 0x144128ba8 <col:31, col:46> col:46 invalid lines 'const int *'
  |-ParmVarDecl 0x144128c28 <col:53, col:57> col:57 used n_lines 'int'
  |-ParmVarDecl 0x144128ca8 <col:66, col:70> col:70 invalid beg 'int'
  |-ParmVarDecl 0x144128d28 <line:2:18, col:23> col:23 invalid p_end 'int *'
  |-ParmVarDecl 0x144128da8 <col:30, col:35> col:35 used p_beg_line_index 'int *'
  |-ParmVarDecl 0x144128e28 <col:53, col:58> col:58 used p_end_line_index 'int *'
  |-ParmVarDecl 0x144128ea8 <line:3:18, col:23> col:23 invalid p_contents_beg 'int *'
  |-ParmVarDecl 0x144128f28 <col:39, col:44> col:44 invalid p_contents_end 'int *'
  `-CompoundStmt 0x144809bc0 <line:4:1, line:70:1>
    |-DeclStmt 0x144142220 <line:8:5, col:23>
    | `-VarDecl 0x144129180 <col:5, col:22> col:9 used line_index 'int' cinit
    |   `-IntegerLiteral 0x144142200 <col:22> 'int' 0
    |-DeclStmt 0x1441422d8 <line:9:5, col:16>
    | `-VarDecl 0x144142250 <col:5, col:15> col:9 used len 'int' cinit
    |   `-IntegerLiteral 0x1441422b8 <col:15> 'int' 0
    |-IfStmt 0x144142750 <line:11:5, line:12:16>
    | |-BinaryOperator 0x1441426e8 <line:11:8, col:25> 'int' contains-errors '!='
    | | |-CallExpr 0x144142680 <col:8, col:14> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x144142450 <col:8> 'int ()' Function 0x144142398 'CH' 'int ()'
    | | | `-RecoveryExpr 0x144142660 <col:11> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x1441426c0 <col:19, col:25> 'int'
    | |   |-ImplicitCastExpr 0x1441426a8 <col:19> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x144142590 <col:19> 'int ()' Function 0x1441424d8 '_T' 'int ()'
    | |   `-CharacterLiteral 0x1441425b0 <col:22> 'int' 91
    | `-ReturnStmt 0x144142740 <line:12:9, col:16>
    |   `-RecoveryExpr 0x144142720 <col:16> '<dependent type>' contains-errors lvalue
    `-WhileStmt 0x144809ba0 <line:15:5, line:67:5>
      |-IntegerLiteral 0x144142770 <line:15:11> 'int' 1
      `-CompoundStmt 0x144809b70 <col:14, line:67:5>
        |-WhileStmt 0x144809938 <line:18:9, line:59:9>
        | |-BinaryOperator 0x144142820 <line:18:15, col:21> 'int' contains-errors '<'
        | | |-RecoveryExpr 0x1441427e0 <col:15> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x144142800 <col:21> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x144809918 <col:31, line:59:9>
        |   |-IfStmt 0x144809838 <line:19:13, line:54:13> has_else
        |   | |-RecoveryExpr 0x144142cd8 <line:19:16, col:99> '_Bool' contains-errors
        |   | |-CompoundStmt 0x144142e58 <col:102, line:26:13>
        |   | | `-IfStmt 0x144142df8 <line:20:17, line:23:17>
        |   | |   |-RecoveryExpr 0x144142d18 <line:20:20, col:36> '_Bool' contains-errors
        |   | |   `-CompoundStmt 0x144142de0 <col:39, line:23:17>
        |   | |     `-BinaryOperator 0x144142dc0 <line:22:21, col:41> 'int' '='
        |   | |       |-UnaryOperator 0x144142d70 <col:21, col:22> 'int' lvalue prefix '*' cannot overflow
        |   | |       | `-ImplicitCastExpr 0x144142d58 <col:22> 'int *' <LValueToRValue>
        |   | |       |   `-DeclRefExpr 0x144142d38 <col:22> 'int *' lvalue ParmVar 0x144128da8 'p_beg_line_index' 'int *'
        |   | |       `-ImplicitCastExpr 0x144142da8 <col:41> 'int' <LValueToRValue>
        |   | |         `-DeclRefExpr 0x144142d88 <col:41> 'int' lvalue Var 0x144129180 'line_index' 'int'
        |   | `-IfStmt 0x144809808 <line:26:20, line:54:13> has_else
        |   |   |-RecoveryExpr 0x144142f08 <line:26:23, col:40> '_Bool' contains-errors
        |   |   |-CompoundStmt 0x144142f28 <col:43, line:28:13>
        |   |   `-IfStmt 0x1448097d8 <col:20, line:54:13> has_else
        |   |     |-RecoveryExpr 0x144142fd0 <line:28:23, col:40> '_Bool' contains-errors
        |   |     |-CompoundStmt 0x144809230 <col:43, line:40:13>
        |   |     | `-IfStmt 0x144809200 <line:29:17, line:39:17> has_else
        |   |     |   |-RecoveryExpr 0x144142ff0 <line:29:20, col:35> '_Bool' contains-errors
        |   |     |   |-CompoundStmt 0x1441431c8 <col:49, line:36:17>
        |   |     |   | `-BinaryOperator 0x1441431a8 <line:34:21, col:41> 'int' '='
        |   |     |   |   |-UnaryOperator 0x144143158 <col:21, col:22> 'int' lvalue prefix '*' cannot overflow
        |   |     |   |   | `-ImplicitCastExpr 0x144143140 <col:22> 'int *' <LValueToRValue>
        |   |     |   |   |   `-DeclRefExpr 0x144143120 <col:22> 'int *' lvalue ParmVar 0x144128e28 'p_end_line_index' 'int *'
        |   |     |   |   `-ImplicitCastExpr 0x144143190 <col:41> 'int' <LValueToRValue>
        |   |     |   |     `-DeclRefExpr 0x144143170 <col:41> 'int' lvalue Var 0x144129180 'line_index' 'int'
        |   |     |   `-CompoundStmt 0x1441431e0 <line:36:24, line:39:17>
        |   |     `-CompoundStmt 0x1448097b8 <line:40:20, line:54:13>
        |   |       |-DeclStmt 0x1448092c8 <line:41:17, col:35>
        |   |       | `-VarDecl 0x144809260 <col:17, col:26> col:26 used codepoint 'unsigned int'
        |   |       `-IfStmt 0x144809798 <line:45:17, line:51:17>
        |   |         |-UnaryOperator 0x144809648 <line:45:20, col:51> 'int' prefix '!' cannot overflow
        |   |         | `-CallExpr 0x144809608 <col:21, col:51> 'int'
        |   |         |   |-ImplicitCastExpr 0x1448095f0 <col:21> 'int (*)()' <FunctionToPointerDecay>
        |   |         |   | `-DeclRefExpr 0x1448095b0 <col:21> 'int ()' Function 0x1448094f8 'ISUNICODEWHITESPACE_' 'int ()'
        |   |         |   `-ImplicitCastExpr 0x144809630 <col:42> 'unsigned int' <LValueToRValue>
        |   |         |     `-DeclRefExpr 0x1448095d0 <col:42> 'unsigned int' lvalue Var 0x144809260 'codepoint' 'unsigned int'
        |   |         `-CompoundStmt 0x144809780 <col:54, line:51:17>
        |   |           `-IfStmt 0x144809760 <line:46:21, line:49:21>
        |   |             |-RecoveryExpr 0x144809680 <line:46:24, col:40> '_Bool' contains-errors
        |   |             `-CompoundStmt 0x144809748 <col:43, line:49:21>
        |   |               `-BinaryOperator 0x144809728 <line:48:25, col:45> 'int' '='
        |   |                 |-UnaryOperator 0x1448096d8 <col:25, col:26> 'int' lvalue prefix '*' cannot overflow
        |   |                 | `-ImplicitCastExpr 0x1448096c0 <col:26> 'int *' <LValueToRValue>
        |   |                 |   `-DeclRefExpr 0x1448096a0 <col:26> 'int *' lvalue ParmVar 0x144128da8 'p_beg_line_index' 'int *'
        |   |                 `-ImplicitCastExpr 0x144809710 <col:45> 'int' <LValueToRValue>
        |   |                   `-DeclRefExpr 0x1448096f0 <col:45> 'int' lvalue Var 0x144129180 'line_index' 'int'
        |   `-UnaryOperator 0x144809888 <line:56:13, col:16> 'int' postfix '++'
        |     `-DeclRefExpr 0x144809868 <col:13> 'int' lvalue Var 0x144142250 'len' 'int'
        |-UnaryOperator 0x144809978 <line:61:9, col:19> 'int' postfix '++'
        | `-DeclRefExpr 0x144809958 <col:9> 'int' lvalue Var 0x144129180 'line_index' 'int'
        |-UnaryOperator 0x1448099b0 <line:62:9, col:12> 'int' postfix '++'
        | `-DeclRefExpr 0x144809990 <col:9> 'int' lvalue Var 0x144142250 'len' 'int'
        `-IfStmt 0x144809b40 <line:63:9, line:66:13> has_else
          |-BinaryOperator 0x144809a38 <line:63:12, col:25> 'int' '<'
          | |-ImplicitCastExpr 0x144809a08 <col:12> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x1448099c8 <col:12> 'int' lvalue Var 0x144129180 'line_index' 'int'
          | `-ImplicitCastExpr 0x144809a20 <col:25> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x1448099e8 <col:25> 'int' lvalue ParmVar 0x144128c28 'n_lines' 'int'
          |-NullStmt 0x144809b38 <line:64:13>
          `-BreakStmt 0x144809b30 <line:66:13>
