`-FunctionDecl 0x15380b3a8  line:1:1 command_by_name 'int (const char *)'
  |-ParmVarDecl 0x15380b2d8 <col:18, col:30> col:30 used cmdname 'const char *'
  `-CompoundStmt 0x1538425e0 <line:2:1, line:18:1>
    |-DeclStmt 0x15380b810 <line:4:3, col:42>
    | |-VarDecl 0x15380b4b8 <col:3, col:12> col:7 used lo 'int' cinit
    | | `-IntegerLiteral 0x15380b520 <col:12> 'int' 0
    | `-VarDecl 0x15380b558 <col:3, col:41> col:15 used hi 'int' cinit
    |   `-BinaryOperator 0x15380b7d8 <col:20, col:41> '<dependent type>' contains-errors '-'
    |     |-CallExpr 0x15380b7b0 <col:20, col:37> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x15380b6f0 <col:20> 'int ()' Function 0x15380b638 'countof' 'int ()'
    |     | `-RecoveryExpr 0x15380b790 <col:29> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15380b750 <col:41> 'int' 1
    |-WhileStmt 0x153842578 <line:6:3, line:16:5>
    | |-BinaryOperator 0x15380b898 <line:6:10, col:16> 'int' contains-errors '<='
    | | |-ImplicitCastExpr 0x15380b868 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15380b828 <col:10> 'int' lvalue Var 0x15380b4b8 'lo' 'int'
    | | `-ImplicitCastExpr 0x15380b880 <col:16> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15380b848 <col:16> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'
    | `-CompoundStmt 0x153842550 <line:7:5, line:16:5>
    |   |-DeclStmt 0x153842040 <line:8:7, col:31>
    |   | `-VarDecl 0x15380b8d0 <col:7, col:30> col:11 used mid 'int' cinit
    |   |   `-BinaryOperator 0x153842020 <col:17, col:30> 'int' contains-errors '>>'
    |   |     |-ParenExpr 0x15380b9c8 <col:17, col:25> 'int' contains-errors
    |   |     | `-BinaryOperator 0x15380b9a8 <col:18, col:23> 'int' contains-errors '+'
    |   |     |   |-ImplicitCastExpr 0x15380b978 <col:18> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x15380b938 <col:18> 'int' lvalue Var 0x15380b4b8 'lo' 'int'
    |   |     |   `-ImplicitCastExpr 0x15380b990 <col:23> 'int' contains-errors <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x15380b958 <col:23> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'
    |   |     `-IntegerLiteral 0x153842000 <col:30> 'int' 1
    |   |-DeclStmt 0x153842230 <line:9:7, col:59>
    |   | `-VarDecl 0x153842070 <col:7, col:11> col:11 used cmp 'int'
    |   `-IfStmt 0x153842520 <line:10:7, line:15:16> has_else
    |     |-BinaryOperator 0x1538422a0 <line:10:11, col:17> 'int' '<'
    |     | |-ImplicitCastExpr 0x153842288 <col:11> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x153842248 <col:11> 'int' lvalue Var 0x153842070 'cmp' 'int'
    |     | `-IntegerLiteral 0x153842268 <col:17> 'int' 0
    |     |-BinaryOperator 0x153842358 <line:11:9, col:20> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x1538422c0 <col:9> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'
    |     | `-BinaryOperator 0x153842338 <col:14, col:20> 'int' contains-errors '-'
    |     |   |-ImplicitCastExpr 0x153842320 <col:14> 'int' contains-errors <LValueToRValue>
    |     |   | `-DeclRefExpr 0x1538422e0 <col:14> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'
    |     |   `-IntegerLiteral 0x153842300 <col:20> 'int' 1
    |     `-IfStmt 0x1538424f0 <line:12:12, line:15:16> has_else
    |       |-BinaryOperator 0x1538423d0 <line:12:16, col:22> 'int' '>'
    |       | |-ImplicitCastExpr 0x1538423b8 <col:16> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x153842378 <col:16> 'int' lvalue Var 0x153842070 'cmp' 'int'
    |       | `-IntegerLiteral 0x153842398 <col:22> 'int' 0
    |       |-BinaryOperator 0x153842488 <line:13:9, col:20> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1538423f0 <col:9> 'int' lvalue Var 0x15380b4b8 'lo' 'int'
    |       | `-BinaryOperator 0x153842468 <col:14, col:20> 'int' contains-errors '+'
    |       |   |-ImplicitCastExpr 0x153842450 <col:14> 'int' contains-errors <LValueToRValue>
    |       |   | `-DeclRefExpr 0x153842410 <col:14> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'
    |       |   `-IntegerLiteral 0x153842430 <col:20> 'int' 1
    |       `-ReturnStmt 0x1538424e0 <line:15:9, col:16>
    |         `-ImplicitCastExpr 0x1538424c8 <col:16> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x1538424a8 <col:16> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'
    `-ReturnStmt 0x1538425d0 <line:17:3, col:11>
      `-UnaryOperator 0x1538425b8 <col:10, col:11> 'int' prefix '-'
        `-IntegerLiteral 0x153842598 <col:11> 'int' 1
