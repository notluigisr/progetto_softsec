`-FunctionDecl 0x11f00ddf8  line:1:1 invalid set_dumper_capsicum_rights 'int (int *)'
  |-ParmVarDecl 0x11f00dd28 <col:28, col:43> col:43 invalid p 'int *'
  `-CompoundStmt 0x11f0281e8 <line:2:1, line:13:1>
    |-DeclStmt 0x11f00e210 <line:3:2, col:36>
    | `-VarDecl 0x11f00dec0 <col:2, col:35> col:6 used fd 'int' cinit
    |   `-CallExpr 0x11f00e1e8 <col:11, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f00e080 <col:11> 'int ()' Function 0x11f00dfc8 'fileno' 'int ()'
    |     `-CallExpr 0x11f00e1c0 <col:18, col:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x11f00e180 <col:18> 'int ()' Function 0x11f00e0c8 'pcap_dump_file' 'int ()'
    |       `-RecoveryExpr 0x11f00e1a0 <col:33> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f027878 <line:6:2, col:57> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f00e308 <col:2> 'int ()' Function 0x11f00e250 'cap_rights_init' 'int ()'
    | |-UnaryOperator 0x11f027800 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x11f00e3e0 <col:19> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x11f027818 <col:27> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x11f027838 <col:37> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11f027858 <col:48> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f027df0 <line:7:2, line:9:2>
    | |-BinaryOperator 0x11f027bd0 <line:7:6, col:52> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x11f027b50 <col:6, col:38> 'int' contains-errors '<'
    | | | |-CallExpr 0x11f027b20 <col:6, col:34> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x11f027998 <col:6> 'int ()' Function 0x11f0278e0 'cap_rights_limit' 'int ()'
    | | | | |-DeclRefExpr 0x11f0279b8 <col:23> 'int' contains-errors lvalue Var 0x11f00dec0 'fd' 'int'
    | | | | `-UnaryOperator 0x11f027b08 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |   `-RecoveryExpr 0x11f027ae8 <col:28> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x11f027a38 <col:38> 'int' 0
    | | `-BinaryOperator 0x11f027bb0 <col:43, col:52> 'int' contains-errors '!='
    | |   |-RecoveryExpr 0x11f027b70 <col:43> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x11f027b90 <col:52> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f027dd8 <col:60, line:9:2>
    |   `-CallExpr 0x11f027d98 <line:8:3, col:14> 'int'
    |     |-ImplicitCastExpr 0x11f027d80 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11f027cd0 <col:3> 'int ()' Function 0x11f027c18 'error' 'int ()'
    |     `-ImplicitCastExpr 0x11f027dc0 <col:9> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x11f027d30 <col:9> 'char[4]' lvalue "STR"
    `-IfStmt 0x11f0281c8 <line:10:2, line:12:2>
      |-BinaryOperator 0x11f0280f8 <line:10:6, col:60> 'int' contains-errors '&&'
      | |-BinaryOperator 0x11f028078 <col:6, col:46> 'int' contains-errors '<'
      | | |-CallExpr 0x11f028048 <col:6, col:42> '<dependent type>' contains-errors
      | | | |-DeclRefExpr 0x11f027ef0 <col:6> 'int ()' Function 0x11f027e38 'cap_fcntls_limit' 'int ()'
      | | | |-DeclRefExpr 0x11f027f10 <col:23> 'int' contains-errors lvalue Var 0x11f00dec0 'fd' 'int'
      | | | `-RecoveryExpr 0x11f028028 <col:27> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x11f027f78 <col:46> 'int' 0
      | `-BinaryOperator 0x11f0280d8 <col:51, col:60> 'int' contains-errors '!='
      |   |-RecoveryExpr 0x11f028098 <col:51> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x11f0280b8 <col:60> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x11f0281b0 <col:68, line:12:2>
        `-CallExpr 0x11f028170 <line:11:3, col:14> 'int'
          |-ImplicitCastExpr 0x11f028158 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x11f028118 <col:3> 'int ()' Function 0x11f027c18 'error' 'int ()'
          `-ImplicitCastExpr 0x11f028198 <col:9> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x11f028138 <col:9> 'char[4]' lvalue "STR"
