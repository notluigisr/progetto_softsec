`-FunctionDecl 0x1571281c8  line:1:1 add_pathsep 'int (char *)'
  |-ParmVarDecl 0x1571280f0 <col:13, col:21> col:21 used p 'char *'
  `-CompoundStmt 0x157140ce8 <line:2:1, line:5:1>
    `-IfStmt 0x157140cc8 <line:3:5, line:4:22>
      |-BinaryOperator 0x157140af0 <line:3:9, col:53> 'int' contains-errors '&&'
      | |-BinaryOperator 0x1571287b8 <col:9, col:15> 'int' contains-errors '!='
      | | |-UnaryOperator 0x157128780 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x157128768 <col:10> 'char *' <LValueToRValue>
      | | |   `-DeclRefExpr 0x1571282c0 <col:10> 'char *' lvalue ParmVar 0x1571280f0 'p' 'char *'
      | | `-RecoveryExpr 0x157128798 <col:15> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x157140ad8 <col:22, col:53> 'int' prefix '!' cannot overflow
      |   `-CallExpr 0x157140a90 <col:23, col:53> 'int'
      |     |-ImplicitCastExpr 0x157140a78 <col:23> 'int (*)()' <FunctionToPointerDecay>
      |     | `-DeclRefExpr 0x157128460 <col:23> 'int ()' Function 0x1571283a8 'after_pathsep' 'int ()'
      |     |-ImplicitCastExpr 0x157140ac0 <col:37> 'char *' <LValueToRValue>
      |     | `-DeclRefExpr 0x157128480 <col:37> 'char *' lvalue ParmVar 0x1571280f0 'p' 'char *'
      |     `-BinaryOperator 0x157140a58 <col:40, col:52> 'char *' '+'
      |       |-ImplicitCastExpr 0x157140a40 <col:40> 'char *' <LValueToRValue>
      |       | `-DeclRefExpr 0x1571284a0 <col:40> 'char *' lvalue ParmVar 0x1571280f0 'p' 'char *'
      |       `-CallExpr 0x157140a00 <col:44, col:52> 'int'
      |         |-ImplicitCastExpr 0x1571287d8 <col:44> 'int (*)()' <FunctionToPointerDecay>
      |         | `-DeclRefExpr 0x1571285a0 <col:44> 'int ()' Function 0x1571284e8 'STRLEN' 'int ()'
      |         `-ImplicitCastExpr 0x157140a28 <col:51> 'char *' <LValueToRValue>
      |           `-DeclRefExpr 0x1571285c0 <col:51> 'char *' lvalue ParmVar 0x1571280f0 'p' 'char *'
      `-CallExpr 0x157140c98 <line:4:2, col:22> '<dependent type>' contains-errors
        |-DeclRefExpr 0x157140bf0 <col:2> 'int ()' Function 0x157140b38 'STRCAT' 'int ()'
        |-DeclRefExpr 0x157140c10 <col:9> 'char *' lvalue ParmVar 0x1571280f0 'p' 'char *'
        `-RecoveryExpr 0x157140c78 <col:12> '<dependent type>' contains-errors lvalue
