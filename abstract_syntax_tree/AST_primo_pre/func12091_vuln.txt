`-FunctionDecl 0x12100ddc8  line:1:1 invalid load_vector_int 'int (int)'
  |-ParmVarDecl 0x12100dcf0 <col:17, <invalid sloc>> col:26 invalid 'int'
  `-CompoundStmt 0x12100e3d8 <line:3:1, line:23:1>
    |-ForStmt 0x12100e338 <line:8:5, line:15:5>
    | |-DeclStmt 0x12100df18 <line:8:10, col:19>
    | | `-VarDecl 0x12100de90 <col:10, col:18> col:14 used i 'int' cinit
    | |   `-IntegerLiteral 0x12100def8 <col:18> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12100dfa8 <col:21, col:25> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x12100df30 <col:21> 'int' lvalue Var 0x12100de90 'i' 'int'
    | | `-RecoveryExpr 0x12100df88 <col:25> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12100dfe8 <col:33, col:35> 'int' prefix '++'
    | | `-DeclRefExpr 0x12100dfc8 <col:35> 'int' lvalue Var 0x12100de90 'i' 'int'
    | `-CompoundStmt 0x12100e320 <line:9:5, line:15:5>
    |   `-IfStmt 0x12100e228 <line:10:9, line:13:9>
    |     |-RecoveryExpr 0x12100e018 <line:10:13> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12100e218 <line:11:9, line:13:9>
    `-IfStmt 0x12100e3b8 <line:16:5, line:19:5>
      |-RecoveryExpr 0x12100e388 <line:16:9, col:41> '_Bool' contains-errors
      `-CompoundStmt 0x12100e3a8 <line:17:5, line:19:5>
