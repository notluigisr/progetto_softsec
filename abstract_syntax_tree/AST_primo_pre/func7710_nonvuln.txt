`-FunctionDecl 0x15c011f58  line:1:12 eb_prefault_relocations 'int (const struct i915_execbuffer *)' static
  |-ParmVarDecl 0x15c011e48 <col:36, col:66> col:66 used eb 'const struct i915_execbuffer *'
  `-CompoundStmt 0x15d11d1f0 <line:2:1, line:18:1>
    |-DeclStmt 0x15d11c930 <line:3:2, col:45>
    | `-VarDecl 0x15d11c868 <col:2, col:33> col:21 used count 'const unsigned int' cinit
    |   `-RecoveryExpr 0x15d11c908 <col:29, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15d11c8d0 <col:29> 'const struct i915_execbuffer *' lvalue ParmVar 0x15c011e48 'eb' 'const struct i915_execbuffer *'
    |-DeclStmt 0x15d11c9c8 <line:4:2, col:16>
    | `-VarDecl 0x15d11c960 <col:2, col:15> col:15 used i 'unsigned int'
    |-IfStmt 0x15d11cc78 <line:6:2, line:7:10>
    | |-CallExpr 0x15d11cc20 <line:6:6, col:46> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15d11cb10 <col:6> 'int ()' Function 0x15d11ca58 'unlikely' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x15d11cbd8 <col:15, col:30> '<dependent type>' contains-errors lvalue .prefault_disable
    | |   `-RecoveryExpr 0x15d11cbb8 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15d11cc68 <line:7:3, col:10>
    |   `-IntegerLiteral 0x15d11cc48 <col:10> 'int' 0
    |-ForStmt 0x15d11d188 <line:9:2, line:15:2>
    | |-BinaryOperator 0x15d11ccf0 <line:9:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x15d11cc98 <col:7> 'unsigned int' lvalue Var 0x15d11c960 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x15d11ccd8 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x15d11ccb8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15d11cd80 <col:14, col:18> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x15d11cd50 <col:14> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15d11cd10 <col:14> 'unsigned int' lvalue Var 0x15d11c960 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x15d11cd68 <col:18> 'unsigned int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15d11cd30 <col:18> 'const unsigned int' contains-errors lvalue Var 0x15d11c868 'count' 'const unsigned int'
    | |-UnaryOperator 0x15d11cdc0 <col:25, col:26> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x15d11cda0 <col:25> 'unsigned int' lvalue Var 0x15d11c960 'i' 'unsigned int'
    | `-CompoundStmt 0x15d11d160 <col:30, line:15:2>
    |   |-DeclStmt 0x15d11ce58 <line:10:3, col:10>
    |   | `-VarDecl 0x15d11cdf0 <col:3, col:7> col:7 used err 'int'
    |   |-BinaryOperator 0x15d11d0a0 <line:12:3, col:39> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15d11ce70 <col:3> 'int' lvalue Var 0x15d11cdf0 'err' 'int'
    |   | `-CallExpr 0x15d11d078 <col:9, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15d11cf70 <col:9> 'int ()' Function 0x15d11ceb8 'check_relocations' 'int ()'
    |   |   `-UnaryOperator 0x15d11d060 <col:27, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-ArraySubscriptExpr 0x15d11d040 <col:28, col:38> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x15d11d010 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x15d11cfc8 <col:28, col:32> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x15d11cf90 <col:28> 'const struct i915_execbuffer *' lvalue ParmVar 0x15c011e48 'eb' 'const struct i915_execbuffer *'
    |   |       `-ImplicitCastExpr 0x15d11d028 <col:37> 'unsigned int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x15d11cff0 <col:37> 'unsigned int' lvalue Var 0x15d11c960 'i' 'unsigned int'
    |   `-IfStmt 0x15d11d140 <line:13:3, line:14:11>
    |     |-ImplicitCastExpr 0x15d11d0e0 <line:13:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15d11d0c0 <col:7> 'int' lvalue Var 0x15d11cdf0 'err' 'int'
    |     `-ReturnStmt 0x15d11d130 <line:14:4, col:11>
    |       `-ImplicitCastExpr 0x15d11d118 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x15d11d0f8 <col:11> 'int' lvalue Var 0x15d11cdf0 'err' 'int'
    `-ReturnStmt 0x15d11d1e0 <line:17:2, col:9>
      `-IntegerLiteral 0x15d11d1c0 <col:9> 'int' 0
