`-FunctionDecl 0x12e80df18  line:1:1 invalid append_acs0 'int (int *, int, int)'
  |-ParmVarDecl 0x12e80dd28 <col:13, col:27> col:27 invalid dst 'int *'
  |-ParmVarDecl 0x12e80dda8 <col:32, col:36> col:36 used code 'int'
  |-ParmVarDecl 0x12e80de28 <col:42, col:46> col:46 used src 'int'
  `-CompoundStmt 0x12e828698 <line:2:1, line:10:1>
    `-IfStmt 0x12e828678 <line:3:5, line:9:5>
      |-BinaryOperator 0x12e80e030 <line:3:9, col:16> 'int' '!='
      | |-ImplicitCastExpr 0x12e80e018 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12e80dfd8 <col:9> 'int' lvalue ParmVar 0x12e80de28 'src' 'int'
      | `-IntegerLiteral 0x12e80dff8 <col:16> 'int' 0
      `-CompoundStmt 0x12e828640 <col:19, line:9:5>
        |-DeclStmt 0x12e80e158 <line:4:2, col:14>
        | `-VarDecl 0x12e80e0f0 <col:2, col:13> col:7 used temp 'char[3]'
        |-BinaryOperator 0x12e80e258 <line:5:2, col:19> 'char' '='
        | |-ArraySubscriptExpr 0x12e80e1c8 <col:2, col:8> 'char' lvalue
        | | |-ImplicitCastExpr 0x12e80e1b0 <col:2> 'char *' <ArrayToPointerDecay>
        | | | `-DeclRefExpr 0x12e80e170 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'
        | | `-IntegerLiteral 0x12e80e190 <col:7> 'int' 0
        | `-CStyleCastExpr 0x12e80e230 <col:12, col:19> 'char' <IntegralCast>
        |   `-ImplicitCastExpr 0x12e80e218 <col:19> 'int' <LValueToRValue> part_of_explicit_cast
        |     `-DeclRefExpr 0x12e80e1e8 <col:19> 'int' lvalue ParmVar 0x12e80dda8 'code' 'int'
        |-BinaryOperator 0x12e80e360 <line:6:2, col:19> 'char' '='
        | |-ArraySubscriptExpr 0x12e80e2d0 <col:2, col:8> 'char' lvalue
        | | |-ImplicitCastExpr 0x12e80e2b8 <col:2> 'char *' <ArrayToPointerDecay>
        | | | `-DeclRefExpr 0x12e80e278 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'
        | | `-IntegerLiteral 0x12e80e298 <col:7> 'int' 1
        | `-CStyleCastExpr 0x12e80e338 <col:12, col:19> 'char' <IntegralCast>
        |   `-ImplicitCastExpr 0x12e80e320 <col:19> 'int' <LValueToRValue> part_of_explicit_cast
        |     `-DeclRefExpr 0x12e80e2f0 <col:19> 'int' lvalue ParmVar 0x12e80de28 'src' 'int'
        |-BinaryOperator 0x12e828438 <line:7:2, col:12> 'char' '='
        | |-ArraySubscriptExpr 0x12e80e3d8 <col:2, col:8> 'char' lvalue
        | | |-ImplicitCastExpr 0x12e80e3c0 <col:2> 'char *' <ArrayToPointerDecay>
        | | | `-DeclRefExpr 0x12e80e380 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'
        | | `-IntegerLiteral 0x12e80e3a0 <col:7> 'int' 2
        | `-ImplicitCastExpr 0x12e828420 <col:12> 'char' <IntegralCast>
        |   `-IntegerLiteral 0x12e828400 <col:12> 'int' 0
        `-CallExpr 0x12e828610 <line:8:2, col:27> '<dependent type>' contains-errors
          |-DeclRefExpr 0x12e8285b0 <col:2> 'int ()' Function 0x12e8284f8 '_nc_safe_strcat' 'int ()'
          |-RecoveryExpr 0x12e8285d0 <col:18> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x12e8285f0 <col:23> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'
