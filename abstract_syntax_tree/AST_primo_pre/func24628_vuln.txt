`-FunctionDecl 0x13800de88  line:1:1 invalid symbol_location_as_lhs_set 'int (int *, int)'
  |-ParmVarDecl 0x13800dd28 <col:29, col:37> col:37 referenced invalid sym 'int *'
  |-ParmVarDecl 0x13800dda8 <col:42, col:51> col:51 invalid loc 'int'
  `-CompoundStmt 0x13800e0c8 <line:2:1, line:5:1>
    `-IfStmt 0x13800e0a8 <line:3:3, line:4:21>
      |-UnaryOperator 0x13800dfc0 <line:3:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x13800dfa8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>
      |   `-CXXDependentScopeMemberExpr 0x13800df60 <col:8, col:13> '<dependent type>' contains-errors lvalue ->location_of_lhs
      |     `-RecoveryExpr 0x13800df40 <col:8> '<dependent type>' contains-errors lvalue
      `-BinaryOperator 0x13800e088 <line:4:5, col:21> '<dependent type>' contains-errors '='
        |-CXXDependentScopeMemberExpr 0x13800e020 <col:5, col:10> '<dependent type>' contains-errors lvalue ->location
        | `-RecoveryExpr 0x13800dff8 <col:5> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x13800dfd8 <col:5> 'int *' lvalue ParmVar 0x13800dd28 'sym' 'int *'
        `-RecoveryExpr 0x13800e068 <col:21> '<dependent type>' contains-errors lvalue
