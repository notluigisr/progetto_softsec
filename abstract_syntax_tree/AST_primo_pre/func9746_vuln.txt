`-FunctionDecl 0x157026aa8  line:1:1 check_entry_size_and_hooks 'int (struct ipt_entry *, struct xt_table_info *, const unsigned char *, const unsigned char *, const unsigned int *, const unsigned int *, unsigned int)'
  |-ParmVarDecl 0x15700e248 <col:28, col:46> col:46 used e 'struct ipt_entry *'
  |-ParmVarDecl 0x157026628 <line:2:7, col:29> col:29 used newinfo 'struct xt_table_info *'
  |-ParmVarDecl 0x1570266d8 <line:3:7, col:28> col:28 used base 'const unsigned char *'
  |-ParmVarDecl 0x157026758 <line:4:7, col:28> col:28 used limit 'const unsigned char *'
  |-ParmVarDecl 0x157026808 <line:5:7, col:27> col:27 used hook_entries 'const unsigned int *'
  |-ParmVarDecl 0x157026888 <line:6:7, col:27> col:27 used underflows 'const unsigned int *'
  |-ParmVarDecl 0x157026908 <line:7:7, col:20> col:20 used valid_hooks 'unsigned int'
  `-CompoundStmt 0x157028f18 <line:8:1, line:50:1>
    |-DeclStmt 0x157026c50 <line:9:2, col:16>
    | `-VarDecl 0x157026be8 <col:2, col:15> col:15 used h 'unsigned int'
    |-DeclStmt 0x157026ce8 <line:10:2, col:9>
    | `-VarDecl 0x157026c80 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x157027230 <line:12:2, line:16:2>
    | |-RecoveryExpr 0x157026ed8 <line:12:6, line:13:55> '_Bool' contains-errors
    | `-CompoundStmt 0x157027210 <col:62, line:16:2>
    |   |-CallExpr 0x157027108 <line:14:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x1570270f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x157027020 <col:3> 'int ()' Function 0x157026f68 'duprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x157027138 <col:12> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x157027080 <col:12> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x157027150 <col:19> 'struct ipt_entry *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1570270a0 <col:19> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x157027200 <line:15:3, col:11>
    |     `-UnaryOperator 0x1570271e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x1570271d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1570271b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1570275a8 <line:18:2, line:23:2>
    | |-RecoveryExpr 0x1570273c8 <line:18:6, line:19:64> '_Bool' contains-errors
    | `-CompoundStmt 0x157027588 <col:67, line:23:2>
    |   |-CallExpr 0x1570274a8 <line:20:3, line:21:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1570273e8 <line:20:3> 'int ()' Function 0x157026f68 'duprintf' 'int ()'
    |   | |-StringLiteral 0x157027408 <col:12> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x157027428 <line:21:5> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |   | `-RecoveryExpr 0x157027480 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x157027448 <col:8> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |   `-ReturnStmt 0x157027578 <line:22:3, col:11>
    |     `-UnaryOperator 0x157027560 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x157027548 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x157027528 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x156923b78 <line:25:2, col:21> 'int' '='
    | |-DeclRefExpr 0x1570275c8 <col:2> 'int' lvalue Var 0x157026c80 'err' 'int'
    | `-CallExpr 0x156923b38 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x156923b20 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x156923ae0 <col:8> 'int ()' Function 0x156923a28 'check_entry' 'int ()'
    |   `-ImplicitCastExpr 0x156923b60 <col:20> 'struct ipt_entry *' <LValueToRValue>
    |     `-DeclRefExpr 0x156923b00 <col:20> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |-IfStmt 0x156923c18 <line:26:2, line:27:10>
    | |-ImplicitCastExpr 0x156923bb8 <line:26:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x156923b98 <col:6> 'int' lvalue Var 0x157026c80 'err' 'int'
    | `-ReturnStmt 0x156923c08 <line:27:3, col:10>
    |   `-ImplicitCastExpr 0x156923bf0 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156923bd0 <col:10> 'int' lvalue Var 0x157026c80 'err' 'int'
    |-ForStmt 0x157028c28 <line:30:2, line:44:2>
    | |-BinaryOperator 0x156923c90 <line:30:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x156923c38 <col:7> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    | | `-ImplicitCastExpr 0x156923c78 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x156923c58 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156923d28 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x156923cb0 <col:14> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    | | `-RecoveryExpr 0x156923d08 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x156923d68 <col:36, col:37> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x156923d48 <col:36> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    | `-CompoundStmt 0x157028c00 <col:41, line:44:2>
    |   |-IfStmt 0x156923ec8 <line:31:3, line:32:4>
    |   | |-UnaryOperator 0x156923ea8 <line:31:7, col:31> 'int' prefix '!' cannot overflow
    |   | | `-ParenExpr 0x156923e88 <col:8, col:31> 'unsigned int'
    |   | |   `-BinaryOperator 0x156923e68 <col:9, col:30> 'unsigned int' '&'
    |   | |     |-ImplicitCastExpr 0x156923e38 <col:9> 'unsigned int' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x156923d80 <col:9> 'unsigned int' lvalue ParmVar 0x157026908 'valid_hooks' 'unsigned int'
    |   | |     `-ImplicitCastExpr 0x156923e50 <col:23, col:30> 'unsigned int' <IntegralCast>
    |   | |       `-ParenExpr 0x156923e18 <col:23, col:30> 'int'
    |   | |         `-BinaryOperator 0x156923df8 <col:24, col:29> 'int' '<<'
    |   | |           |-IntegerLiteral 0x156923da0 <col:24> 'int' 1
    |   | |           `-ImplicitCastExpr 0x156923de0 <col:29> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x156923dc0 <col:29> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |   | `-ContinueStmt 0x156923ec0 <line:32:4>
    |   |-IfStmt 0x156924218 <line:33:3, line:34:43>
    |   | |-BinaryOperator 0x156924078 <line:33:7, col:50> 'int' '=='
    |   | | |-BinaryOperator 0x156923f98 <col:7, col:28> 'long' '-'
    |   | | | |-CStyleCastExpr 0x156923f38 <col:7, col:24> 'unsigned char *' <BitCast>
    |   | | | | `-ImplicitCastExpr 0x156923f20 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |   | | | |   `-DeclRefExpr 0x156923ee8 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |   | | | `-ImplicitCastExpr 0x156923f80 <col:28> 'const unsigned char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x156923f60 <col:28> 'const unsigned char *' lvalue ParmVar 0x1570266d8 'base' 'const unsigned char *'
    |   | | `-ImplicitCastExpr 0x156924060 <col:36, col:50> 'long' <IntegralCast>
    |   | |   `-ImplicitCastExpr 0x156924048 <col:36, col:50> 'unsigned int' <LValueToRValue>
    |   | |     `-ArraySubscriptExpr 0x156924028 <col:36, col:50> 'const unsigned int' lvalue
    |   | |       |-ImplicitCastExpr 0x156923ff8 <col:36> 'const unsigned int *' <LValueToRValue>
    |   | |       | `-DeclRefExpr 0x156923fb8 <col:36> 'const unsigned int *' lvalue ParmVar 0x157026808 'hook_entries' 'const unsigned int *'
    |   | |       `-ImplicitCastExpr 0x156924010 <col:49> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x156923fd8 <col:49> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |   | `-BinaryOperator 0x1569241f8 <line:34:4, col:43> '<dependent type>' contains-errors '='
    |   |   |-ArraySubscriptExpr 0x156924148 <col:4, col:25> '<dependent type>' contains-errors lvalue
    |   |   | |-ImplicitCastExpr 0x156924118 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | `-RecoveryExpr 0x1569240d0 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x156924098 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x157026628 'newinfo' 'struct xt_table_info *'
    |   |   | `-ImplicitCastExpr 0x156924130 <col:24> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1569240f8 <col:24> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |   |   `-ArraySubscriptExpr 0x1569241d8 <col:29, col:43> 'const unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x1569241a8 <col:29> 'const unsigned int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x156924168 <col:29> 'const unsigned int *' lvalue ParmVar 0x157026808 'hook_entries' 'const unsigned int *'
    |   |     `-ImplicitCastExpr 0x1569241c0 <col:42> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x156924188 <col:42> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |   `-IfStmt 0x1569249d0 <line:35:3, line:43:3>
    |     |-BinaryOperator 0x1569243c8 <line:35:7, col:48> 'int' '=='
    |     | |-BinaryOperator 0x1569242e8 <col:7, col:28> 'long' '-'
    |     | | |-CStyleCastExpr 0x156924288 <col:7, col:24> 'unsigned char *' <BitCast>
    |     | | | `-ImplicitCastExpr 0x156924270 <col:24> 'struct ipt_entry *' <LValueToRValue> part_of_explicit_cast
    |     | | |   `-DeclRefExpr 0x156924238 <col:24> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |     | | `-ImplicitCastExpr 0x1569242d0 <col:28> 'const unsigned char *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1569242b0 <col:28> 'const unsigned char *' lvalue ParmVar 0x1570266d8 'base' 'const unsigned char *'
    |     | `-ImplicitCastExpr 0x1569243b0 <col:36, col:48> 'long' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x156924398 <col:36, col:48> 'unsigned int' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x156924378 <col:36, col:48> 'const unsigned int' lvalue
    |     |       |-ImplicitCastExpr 0x156924348 <col:36> 'const unsigned int *' <LValueToRValue>
    |     |       | `-DeclRefExpr 0x156924308 <col:36> 'const unsigned int *' lvalue ParmVar 0x157026888 'underflows' 'const unsigned int *'
    |     |       `-ImplicitCastExpr 0x156924360 <col:47> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x156924328 <col:47> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |     `-CompoundStmt 0x1569249b0 <col:51, line:43:3>
    |       |-IfStmt 0x156924810 <line:36:4, line:41:4>
    |       | |-UnaryOperator 0x156924560 <line:36:8, col:26> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x156924520 <col:9, col:26> 'int'
    |       | |   |-ImplicitCastExpr 0x156924508 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x1569244c8 <col:9> 'int ()' Function 0x156924410 'check_underflow' 'int ()'
    |       | |   `-ImplicitCastExpr 0x156924548 <col:25> 'struct ipt_entry *' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x1569244e8 <col:25> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    |       | `-CompoundStmt 0x1569247f0 <col:29, line:41:4>
    |       |   |-CallExpr 0x156924708 <line:37:5, line:39:17> 'int'
    |       |   | |-ImplicitCastExpr 0x1569246f0 <line:37:5> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x156924658 <col:5> 'int ()' Function 0x1569245a0 'pr_err' 'int ()'
    |       |   | `-ImplicitCastExpr 0x156924730 <col:12, line:39:12> 'char *' <ArrayToPointerDecay>
    |       |   |   `-StringLiteral 0x1569246c0 <line:37:12, line:39:12> 'char[10]' lvalue "STRSTRSTR"
    |       |   `-ReturnStmt 0x1569247e0 <line:40:5, col:13>
    |       |     `-UnaryOperator 0x1569247c8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       |       `-ImplicitCastExpr 0x1569247b0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |       |         `-RecoveryExpr 0x156924790 <col:13> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x156924990 <line:42:4, col:40> '<dependent type>' contains-errors '='
    |         |-ArraySubscriptExpr 0x1569248e0 <col:4, col:24> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x1569248b0 <col:4, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x156924868 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x156924830 <col:4> 'struct xt_table_info *' lvalue ParmVar 0x157026628 'newinfo' 'struct xt_table_info *'
    |         | `-ImplicitCastExpr 0x1569248c8 <col:23> 'unsigned int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x156924890 <col:23> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |         `-ArraySubscriptExpr 0x156924970 <col:28, col:40> 'const unsigned int' lvalue
    |           |-ImplicitCastExpr 0x156924940 <col:28> 'const unsigned int *' <LValueToRValue>
    |           | `-DeclRefExpr 0x156924900 <col:28> 'const unsigned int *' lvalue ParmVar 0x157026888 'underflows' 'const unsigned int *'
    |           `-ImplicitCastExpr 0x156924958 <col:39> 'unsigned int' <LValueToRValue>
    |             `-DeclRefExpr 0x156924920 <col:39> 'unsigned int' lvalue Var 0x157026be8 'h' 'unsigned int'
    |-BinaryOperator 0x157028ec8 <line:48:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x157028e80 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x157028e48 <col:2> 'struct ipt_entry *' lvalue ParmVar 0x15700e248 'e' 'struct ipt_entry *'
    | `-IntegerLiteral 0x157028ea8 <col:16> 'int' 0
    `-ReturnStmt 0x157028f08 <line:49:2, col:9>
      `-IntegerLiteral 0x157028ee8 <col:9> 'int' 0
