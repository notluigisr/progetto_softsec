`-FunctionDecl 0x14802a8b8  line:1:21 audit_tree_lookup 'struct audit_chunk *(const struct inode *)'
  |-ParmVarDecl 0x14800e2e8 <col:39, col:59> col:59 used inode 'const struct inode *'
  `-CompoundStmt 0x14802b420 <line:2:1, line:13:1>
    |-DeclStmt 0x14802ada8 <line:3:2, col:44>
    | |-RecordDecl 0x14802a9b0 <col:2, col:9> col:9 struct list_head
    | `-VarDecl 0x14802ab18 <col:2, col:43> col:20 used list 'struct list_head *' cinit
    |   `-ImplicitCastExpr 0x14802ad78 <col:27, col:43> 'struct list_head *' <IntegralToPointer>
    |     `-CallExpr 0x14802ad38 <col:27, col:43> 'int'
    |       |-ImplicitCastExpr 0x14802ad20 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14802acb0 <col:27> 'int ()' Function 0x14802abf8 'chunk_hash' 'int ()'
    |       `-ImplicitCastExpr 0x14802ad60 <col:38> 'const struct inode *' <LValueToRValue>
    |         `-DeclRefExpr 0x14802acd0 <col:38> 'const struct inode *' lvalue ParmVar 0x14800e2e8 'inode' 'const struct inode *'
    |-DeclStmt 0x14802aeb0 <line:4:2, col:23>
    | `-VarDecl 0x14802ae48 <col:2, col:22> col:22 used p 'struct audit_chunk *'
    |-CallExpr 0x14802b078 <line:6:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14802afa8 <col:2> 'int ()' Function 0x14802aef0 'list_for_each_entry_rcu' 'int ()'
    | |-DeclRefExpr 0x14802afc8 <col:26> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'
    | |-DeclRefExpr 0x14802afe8 <col:29> 'struct list_head *' lvalue Var 0x14802ab18 'list' 'struct list_head *'
    | `-RecoveryExpr 0x14802b058 <col:35> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x14802b3c0 <col:41, line:11:2>
    | `-IfStmt 0x14802b3a0 <line:7:3, line:10:3>
    |   |-BinaryOperator 0x14802b178 <line:7:7, col:25> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x14802b110 <col:7, col:16> '<dependent type>' contains-errors lvalue .inode
    |   | | `-RecoveryExpr 0x14802b0e8 <col:7, col:10> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14802b0b0 <col:7> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'
    |   | `-DeclRefExpr 0x14802b158 <col:25> 'const struct inode *' lvalue ParmVar 0x14800e2e8 'inode' 'const struct inode *'
    |   `-CompoundStmt 0x14802b380 <col:32, line:10:3>
    |     |-CallExpr 0x14802b310 <line:8:4, col:31> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x14802b278 <col:4> 'int ()' Function 0x14802b1c0 'get_inotify_watch' 'int ()'
    |     | `-UnaryOperator 0x14802b2f8 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x14802b2d0 <col:23, col:26> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14802b298 <col:23> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'
    |     `-ReturnStmt 0x14802b370 <line:9:4, col:11>
    |       `-ImplicitCastExpr 0x14802b358 <col:11> 'struct audit_chunk *' <LValueToRValue>
    |         `-DeclRefExpr 0x14802b338 <col:11> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'
    `-ReturnStmt 0x14802b410 <line:12:2, col:9>
      `-RecoveryExpr 0x14802b3f0 <col:9> '<dependent type>' contains-errors lvalue
