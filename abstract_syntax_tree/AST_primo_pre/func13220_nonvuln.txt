`-FunctionDecl 0x13a128238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x13a128158 <col:8> col:8 QueryPlannerTest 'int'
  |-ParmVarDecl 0x13a1280d8 <col:26> col:26 ContainedOrPathLevelMultikeyCannotCombineTrailingOutsidePreds 'int'
  `-CompoundStmt 0x13a141730 <col:89, line:27:1>
    |-CallExpr 0x13a140d30 <line:3:5, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a128460 <col:5> 'int ()' Function 0x13a1283a8 'addIndex' 'int ()'
    | |-CallExpr 0x13a140ca0 <col:14, col:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13a128560 <col:14> 'int ()' Function 0x13a1284a8 'BSON' 'int ()'
    | | `-RecoveryExpr 0x13a140c70 <col:19, col:28> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x13a1285c0 <col:19> 'char[4]' lvalue "STR"
    | |   `-IntegerLiteral 0x13a1285e0 <col:28> 'int' 1
    | `-RecoveryExpr 0x13a140d10 <col:32> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13a140e50 <line:4:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a140d60 <col:5> 'int ()' Function 0x13a1283a8 'addIndex' 'int ()'
    | `-CallExpr 0x13a140e28 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a140d80 <col:14> 'int ()' Function 0x13a1284a8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x13a140df8 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x13a140da0 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x13a140dc0 <col:28> 'int' 1
    |-CallExpr 0x13a141190 <line:6:5, line:8:24> 'int'
    | |-ImplicitCastExpr 0x13a141178 <line:6:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13a140f58 <col:5> 'int ()' Function 0x13a140ea0 'runQuery' 'int ()'
    | `-CallExpr 0x13a141138 <line:7:9, line:8:23> 'int'
    |   |-ImplicitCastExpr 0x13a141120 <line:7:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13a141058 <col:9> 'int ()' Function 0x13a140fa0 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x13a141160 <col:18, line:8:18> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x13a1410c0 <line:7:18, line:8:18> 'char[7]' lvalue "STRSTR"
    |-CallExpr 0x13a1412f0 <line:9:5, col:25> 'int'
    | |-ImplicitCastExpr 0x13a1412d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13a141298 <col:5> 'int ()' Function 0x13a1411e0 'assertNumSolutions' 'int ()'
    | `-IntegerLiteral 0x13a1412b8 <col:24> 'int' 2
    |-RecoveryExpr 0x13a141348 <line:10:5> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13a141590 <line:25:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13a141510 <col:5> 'int ()' Function 0x13a141458 'assertHasOneSolutionOf' 'int ()'
    | `-RecoveryExpr 0x13a141570 <col:28> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13a1416f0 <line:26:5, col:31> 'int'
      |-ImplicitCastExpr 0x13a1416d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13a141698 <col:5> 'int ()' Function 0x13a1415e0 'assertSolutionExists' 'int ()'
      `-ImplicitCastExpr 0x13a141718 <col:26> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x13a1416b8 <col:26> 'char[4]' lvalue "STR"
