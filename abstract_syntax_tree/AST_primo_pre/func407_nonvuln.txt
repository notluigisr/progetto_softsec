`-FunctionDecl 0x128128198  line:1:1 lha_crc16_init 'int (void)'
  `-CompoundStmt 0x10480a3f8 <line:2:1, line:22:1>
    |-DeclStmt 0x128128308 <line:3:2, col:16>
    | `-VarDecl 0x1281282a0 <col:2, col:15> col:15 used i 'unsigned int'
    |-DeclStmt 0x1281283c0 <line:4:2, col:26>
    | `-VarDecl 0x128128338 <col:2, col:25> col:13 used crc16init 'int' static cinit
    |   `-IntegerLiteral 0x1281283a0 <col:25> 'int' 0
    |-IfStmt 0x128128420 <line:6:2, line:7:3>
    | |-ImplicitCastExpr 0x1281283f8 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1281283d8 <col:6> 'int' lvalue Var 0x128128338 'crc16init' 'int'
    | `-ReturnStmt 0x128128410 <line:7:3>
    |-BinaryOperator 0x128128480 <line:8:2, col:14> 'int' '='
    | |-DeclRefExpr 0x128128440 <col:2> 'int' lvalue Var 0x128128338 'crc16init' 'int'
    | `-IntegerLiteral 0x128128460 <col:14> 'int' 1
    |-ForStmt 0x10480a0d0 <line:10:2, line:16:2>
    | |-BinaryOperator 0x1281284f8 <line:10:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x1281284a0 <col:7> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1281284e0 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1281284c0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x128128588 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x128128558 <col:14> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x128128518 <col:14> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x128128570 <col:18> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x128128538 <col:18> 'int' 256
    | |-UnaryOperator 0x1281285c8 <col:23, col:24> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x1281285a8 <col:23> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
    | `-CompoundStmt 0x10480a0b8 <col:28, line:16:2>
    |   `-DeclStmt 0x128128660 <line:11:3, col:17>
    |     `-VarDecl 0x1281285f8 <col:3, col:16> col:16 used j 'unsigned int'
    `-ForStmt 0x10480a3c0 <line:18:2, line:21:2>
      |-BinaryOperator 0x10480a160 <line:18:7, col:11> 'unsigned int' '='
      | |-DeclRefExpr 0x10480a108 <col:7> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x10480a148 <col:11> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x10480a128 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x10480a1f0 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x10480a1c0 <col:14> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x10480a180 <col:14> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x10480a1d8 <col:18> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x10480a1a0 <col:18> 'int' 256
      |-UnaryOperator 0x10480a230 <col:23, col:24> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x10480a210 <col:23> 'unsigned int' lvalue Var 0x1281282a0 'i' 'unsigned int'
      `-CompoundStmt 0x10480a3b0 <col:28, line:21:2>
