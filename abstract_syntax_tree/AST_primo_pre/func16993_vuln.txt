`-FunctionDecl 0x1351281c0  line:1:6 invalid json_object_seed 'void (int)'
  |-ParmVarDecl 0x1351280f0 <col:23, col:30> col:30 invalid seed 'int'
  `-CompoundStmt 0x135141a60 <col:36, line:18:1>
    `-IfStmt 0x135141a40 <line:4:5, line:17:5>
      |-BinaryOperator 0x1351282e8 <line:4:9, col:27> 'int' contains-errors '=='
      | |-RecoveryExpr 0x1351282c8 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x135128288 <col:27> 'int' 0
      `-CompoundStmt 0x135141a28 <col:30, line:17:5>
        `-IfStmt 0x1351419f8 <line:5:9, line:16:9> has_else
          |-BinaryOperator 0x135128578 <line:5:13, col:56> 'int' contains-errors '=='
          | |-CallExpr 0x135128550 <col:13, col:51> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x135128460 <col:13> 'int ()' Function 0x1351283a8 'InterlockedIncrement' 'int ()'
          | | `-UnaryOperator 0x135128538 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
          | |   `-RecoveryExpr 0x135128518 <col:35> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x1351284d8 <col:56> 'int' 1
          |-CompoundStmt 0x1351287b0 <col:59, line:11:9>
          `-CompoundStmt 0x1351419e0 <col:16, line:16:9>
            `-DoStmt 0x1351419c0 <line:13:13, line:15:41>
              |-CompoundStmt 0x135141910 <line:13:16, line:15:13>
              | `-CallExpr 0x1351418f0 <line:14:17, col:32> 'int'
              |   `-ImplicitCastExpr 0x1351418d8 <col:17> 'int (*)()' <FunctionToPointerDecay>
              |     `-DeclRefExpr 0x1351418b8 <col:17> 'int ()' Function 0x135141800 'SwitchToThread' 'int ()'
              `-BinaryOperator 0x1351419a0 <line:15:22, col:40> 'int' contains-errors '=='
                |-RecoveryExpr 0x135141980 <col:22> '<dependent type>' contains-errors lvalue
                `-IntegerLiteral 0x135141940 <col:40> 'int' 0
