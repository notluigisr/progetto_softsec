`-FunctionDecl 0x13a00de38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x13a00dd58 <col:12> col:12 SplFileInfo 'int'
  |-ParmVarDecl 0x13a00dcd8 <col:25> col:25 getLinkTarget 'int'
  `-CompoundStmt 0x139926d60 <line:2:1, line:43:1>
    |-DeclStmt 0x13a00e000 <line:4:2, col:9>
    | `-VarDecl 0x13a00df98 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x13a00e0a8 <line:5:2, col:23>
    | `-VarDecl 0x13a00e040 <col:2, col:7> col:7 referenced invalid buff 'char'
    |-IfStmt 0x13a00e368 <line:8:2, line:10:2>
    | |-BinaryOperator 0x13a00e320 <line:8:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x13a00e2e0 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x13a00e2c8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x13a00e1d0 <col:6> 'int ()' Function 0x13a00e118 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x13a00e300 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13a00e350 <col:47, line:10:2>
    |   `-ReturnStmt 0x13a00e340 <line:9:3>
    |-BinaryOperator 0x139926790 <line:29:2, col:9> 'int' '='
    | |-DeclRefExpr 0x139926738 <col:2> 'int' lvalue Var 0x13a00df98 'ret' 'int'
    | `-UnaryOperator 0x139926778 <col:8, col:9> 'int' prefix '-'
    |   `-IntegerLiteral 0x139926758 <col:9> 'int' 1
    `-IfStmt 0x139926c30 <line:32:2, line:40:2> has_else
      |-BinaryOperator 0x139926820 <line:32:6, col:14> 'int' '=='
      | |-ImplicitCastExpr 0x139926808 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1399267b0 <col:6> 'int' lvalue Var 0x13a00df98 'ret' 'int'
      | `-UnaryOperator 0x1399267f0 <col:13, col:14> 'int' prefix '-'
      |   `-IntegerLiteral 0x1399267d0 <col:14> 'int' 1
      |-CompoundStmt 0x139926978 <col:17, line:35:2>
      `-CompoundStmt 0x139926c10 <col:9, line:40:2>
        |-BinaryOperator 0x139926a58 <line:37:3, col:15> '<dependent type>' contains-errors '='
        | |-ArraySubscriptExpr 0x139926a20 <col:3, col:11> '<dependent type>' contains-errors lvalue
        | | |-ImplicitCastExpr 0x1399269f0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
        | | | `-RecoveryExpr 0x1399269a8 <col:3> '<dependent type>' contains-errors lvalue
        | | |   `-DeclRefExpr 0x139926988 <col:3> 'char' lvalue Var 0x13a00e040 'buff' 'char'
        | | `-ImplicitCastExpr 0x139926a08 <col:8> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x1399269d0 <col:8> 'int' lvalue Var 0x13a00df98 'ret' 'int'
        | `-CharacterLiteral 0x139926a40 <col:15> 'int' 0
        `-CallExpr 0x139926bd8 <line:39:3, col:30> '<dependent type>' contains-errors
          |-DeclRefExpr 0x139926b58 <col:3> 'int ()' Function 0x139926aa0 'RETVAL_STRINGL' 'int ()'
          |-RecoveryExpr 0x139926b78 <col:18> '<dependent type>' contains-errors lvalue
          |-DeclRefExpr 0x139926b98 <col:24> 'int' lvalue Var 0x13a00df98 'ret' 'int'
          `-IntegerLiteral 0x139926bb8 <col:29> 'int' 1
