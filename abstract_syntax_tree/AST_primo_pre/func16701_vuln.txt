`-FunctionDecl 0x142128258  line:1:1 invalid xmlBufferCCat 'int (int, const char *)'
  |-ParmVarDecl 0x1421280f0 <col:15, col:28> col:28 referenced invalid buf 'int'
  |-ParmVarDecl 0x142128170 <col:33, col:45> col:45 used str 'const char *'
  `-CompoundStmt 0x14380acd0 <col:50, line:25:1>
    |-DeclStmt 0x142128390 <line:2:5, col:20>
    | `-VarDecl 0x142128328 <col:5, col:17> col:17 used cur 'const char *'
    |-IfStmt 0x1421284a8 <line:4:5, line:5:18>
    | |-BinaryOperator 0x142128420 <line:4:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1421283a8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x142128400 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x142128498 <line:5:9, col:18>
    |   `-ParenExpr 0x142128478 <col:15, col:18> 'int'
    |     `-UnaryOperator 0x142128460 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x142128440 <col:17> 'int' 1
    |-IfStmt 0x1421285f0 <line:6:5, col:59>
    | |-BinaryOperator 0x142128588 <col:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x1421284e8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->alloc
    | | | `-RecoveryExpr 0x1421284c8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x142128568 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1421285e0 <col:51, col:59>
    |   `-UnaryOperator 0x1421285c8 <col:58, col:59> 'int' prefix '-'
    |     `-IntegerLiteral 0x1421285a8 <col:59> 'int' 1
    |-IfStmt 0x142128708 <line:7:5, line:13:5>
    | |-BinaryOperator 0x142128688 <line:7:9, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x142128610 <col:9> 'const char *' lvalue ParmVar 0x142128170 'str' 'const char *'
    | | `-RecoveryExpr 0x142128668 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1421286f0 <col:22, line:13:5>
    |   `-ReturnStmt 0x1421286e0 <line:12:2, col:10>
    |     `-UnaryOperator 0x1421286c8 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x1421286a8 <col:10> 'int' 1
    |-ForStmt 0x14380aae0 <line:14:5, line:22:5>
    | |-BinaryOperator 0x142128780 <line:14:10, col:16> 'const char *' '='
    | | |-DeclRefExpr 0x142128728 <col:10> 'const char *' lvalue Var 0x142128328 'cur' 'const char *'
    | | `-ImplicitCastExpr 0x142128768 <col:16> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x142128748 <col:16> 'const char *' lvalue ParmVar 0x142128170 'str' 'const char *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14380a250 <col:20, col:28> 'int' '!='
    | | |-ImplicitCastExpr 0x14380a238 <col:20, col:21> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14380a220 <col:20, col:21> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x1421287d8 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x1421287c0 <col:21> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1421287a0 <col:21> 'const char *' lvalue Var 0x142128328 'cur' 'const char *'
    | | `-IntegerLiteral 0x14380a200 <col:28> 'int' 0
    | |-UnaryOperator 0x14380a290 <col:30, col:33> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x14380a270 <col:30> 'const char *' lvalue Var 0x142128328 'cur' 'const char *'
    | `-CompoundStmt 0x14380aac0 <col:37, line:22:5>
    |   |-IfStmt 0x14380a8e8 <line:15:9, line:20:9>
    |   | |-BinaryOperator 0x14380a3b8 <line:15:13, col:36> 'int' contains-errors '>='
    |   | | |-BinaryOperator 0x14380a330 <col:13, col:25> '<dependent type>' contains-errors '+'
    |   | | | |-CXXDependentScopeMemberExpr 0x14380a2c8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->use
    |   | | | | `-RecoveryExpr 0x14380a2a8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | | `-IntegerLiteral 0x14380a310 <col:25> 'int' 10
    |   | | `-CXXDependentScopeMemberExpr 0x14380a370 <col:31, col:36> '<dependent type>' contains-errors lvalue ->size
    |   | |   `-RecoveryExpr 0x14380a350 <col:31> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14380a8d0 <col:42, line:20:9>
    |   |   `-IfStmt 0x14380a8b0 <line:16:13, line:19:13>
    |   |     |-UnaryOperator 0x14380a648 <line:16:17, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | `-CallExpr 0x14380a618 <col:18, col:50> '<dependent type>' contains-errors
    |   |     |   |-DeclRefExpr 0x14380a530 <col:18> 'int ()' Function 0x14380a478 'xmlBufferResize' 'int ()'
    |   |     |   |-RecoveryExpr 0x14380a550 <col:34> '<dependent type>' contains-errors lvalue
    |   |     |   `-BinaryOperator 0x14380a5f8 <col:39, col:48> '<dependent type>' contains-errors '+'
    |   |     |     |-CXXDependentScopeMemberExpr 0x14380a590 <col:39, col:44> '<dependent type>' contains-errors lvalue ->use
    |   |     |     | `-RecoveryExpr 0x14380a570 <col:39> '<dependent type>' contains-errors lvalue
    |   |     |     `-IntegerLiteral 0x14380a5d8 <col:48> 'int' 10
    |   |     `-CompoundStmt 0x14380a890 <col:52, line:19:13>
    |   |       |-CallExpr 0x14380a808 <line:17:3, col:25> 'int'
    |   |       | |-ImplicitCastExpr 0x14380a7f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |       | | `-DeclRefExpr 0x14380a740 <col:3> 'int ()' Function 0x14380a688 'xmlTreeErrMemory' 'int ()'
    |   |       | `-ImplicitCastExpr 0x14380a830 <col:20> 'char *' <ArrayToPointerDecay>
    |   |       |   `-StringLiteral 0x14380a7a0 <col:20> 'char[4]' lvalue "STR"
    |   |       `-ReturnStmt 0x14380a880 <line:18:17, col:24>
    |   |         `-RecoveryExpr 0x14380a860 <col:24> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x14380aaa0 <line:21:9, col:37> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x14380aa30 <col:9, col:32> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x14380aa18 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x14380a950 <col:9, col:14> '<dependent type>' contains-errors lvalue ->content
    |     | |   `-RecoveryExpr 0x14380a928 <col:9> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x14380a908 <col:9> 'int' lvalue ParmVar 0x1421280f0 'buf' 'int'
    |     | `-UnaryOperator 0x14380aa00 <col:22, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |   `-CXXDependentScopeMemberExpr 0x14380a9b8 <col:22, col:27> '<dependent type>' contains-errors lvalue ->use
    |     |     `-RecoveryExpr 0x14380a998 <col:22> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x14380aa88 <col:36, col:37> 'const char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x14380aa70 <col:37> 'const char *' <LValueToRValue>
    |         `-DeclRefExpr 0x14380aa50 <col:37> 'const char *' lvalue Var 0x142128328 'cur' 'const char *'
    |-BinaryOperator 0x14380ac80 <line:23:5, col:30> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x14380ac40 <col:5, col:26> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x14380ac10 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x14380ab60 <col:5, col:10> '<dependent type>' contains-errors lvalue ->content
    | | |   `-RecoveryExpr 0x14380ab38 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x14380ab18 <col:5> 'int' lvalue ParmVar 0x1421280f0 'buf' 'int'
    | | `-ImplicitCastExpr 0x14380ac28 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x14380abc8 <col:18, col:23> '<dependent type>' contains-errors lvalue ->use
    | |     `-RecoveryExpr 0x14380aba8 <col:18> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14380ac60 <col:30> 'int' 0
    `-ReturnStmt 0x14380acc0 <line:24:5, col:12>
      `-IntegerLiteral 0x14380aca0 <col:12> 'int' 0
