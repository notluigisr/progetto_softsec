`-FunctionDecl 0x13d144e78  line:1:12 fat_dir_ioctl 'int (struct inode *, struct file *, unsigned int, unsigned long)' static
  |-ParmVarDecl 0x13d128648 <col:26, col:41> col:41 used inode 'struct inode *'
  |-ParmVarDecl 0x13d144c28 <col:48, col:62> col:62 used filp 'struct file *'
  |-ParmVarDecl 0x13d144ca8 <line:2:5, col:18> col:18 used cmd 'unsigned int'
  |-ParmVarDecl 0x13d144d28 <col:23, col:37> col:37 used arg 'unsigned long'
  `-CompoundStmt 0x13d809630 <line:3:1, line:40:1>
    |-DeclStmt 0x13d145108 <line:4:2, col:39>
    | |-RecordDecl 0x13d144f88 <col:2, col:9> col:9 struct fat_ioctl_filldir_callback
    | `-VarDecl 0x13d145088 <col:2, col:36> col:36 referenced invalid buf 'struct fat_ioctl_filldir_callback'
    |-DeclStmt 0x13d145298 <line:5:2, col:23>
    | |-RecordDecl 0x13d145120 <col:2, col:9> col:9 struct dirent
    | `-VarDecl 0x13d145218 <col:2, col:16> col:16 invalid __user 'struct dirent'
    |-DeclStmt 0x13d145450 <line:6:2, col:27>
    | |-VarDecl 0x13d1452c8 <col:2, col:6> col:6 used ret 'int'
    | |-VarDecl 0x13d145348 <col:2, col:11> col:11 used short_only 'int'
    | `-VarDecl 0x13d1453c8 <col:2, col:23> col:23 used both 'int'
    |-SwitchStmt 0x13d1454a0 <line:8:2, line:19:2>
    | |-ImplicitCastExpr 0x13d145488 <line:8:10> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x13d145468 <col:10> 'unsigned int' lvalue ParmVar 0x13d144ca8 'cmd' 'unsigned int'
    | `-CompoundStmt 0x13d145968 <col:15, line:19:2>
    |   |-BinaryOperator 0x13d145538 <line:10:3, col:16> 'int' '='
    |   | |-DeclRefExpr 0x13d1454f8 <col:3> 'int' lvalue Var 0x13d145348 'short_only' 'int'
    |   | `-IntegerLiteral 0x13d145518 <col:16> 'int' 1
    |   |-BinaryOperator 0x13d145598 <line:11:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x13d145558 <col:3> 'int' lvalue Var 0x13d1453c8 'both' 'int'
    |   | `-IntegerLiteral 0x13d145578 <col:10> 'int' 0
    |   |-BreakStmt 0x13d1455b8 <line:12:3>
    |   |-BinaryOperator 0x13d145618 <line:14:3, col:16> 'int' '='
    |   | |-DeclRefExpr 0x13d1455d8 <col:3> 'int' lvalue Var 0x13d145348 'short_only' 'int'
    |   | `-IntegerLiteral 0x13d1455f8 <col:16> 'int' 0
    |   |-BinaryOperator 0x13d145678 <line:15:3, col:10> 'int' '='
    |   | |-DeclRefExpr 0x13d145638 <col:3> 'int' lvalue Var 0x13d1453c8 'both' 'int'
    |   | `-IntegerLiteral 0x13d145658 <col:10> 'int' 1
    |   |-BreakStmt 0x13d145698 <line:16:3>
    |   `-DefaultStmt 0x13d145948 <line:17:2, line:18:49>
    |     `-ReturnStmt 0x13d145938 <col:3, col:49>
    |       `-CallExpr 0x13d145898 <col:10, col:49> 'int'
    |         |-ImplicitCastExpr 0x13d145880 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x13d1457b0 <col:10> 'int ()' Function 0x13d1456f8 'fat_generic_ioctl' 'int ()'
    |         |-ImplicitCastExpr 0x13d1458d8 <col:28> 'struct inode *' <LValueToRValue>
    |         | `-DeclRefExpr 0x13d1457d0 <col:28> 'struct inode *' lvalue ParmVar 0x13d128648 'inode' 'struct inode *'
    |         |-ImplicitCastExpr 0x13d1458f0 <col:35> 'struct file *' <LValueToRValue>
    |         | `-DeclRefExpr 0x13d1457f0 <col:35> 'struct file *' lvalue ParmVar 0x13d144c28 'filp' 'struct file *'
    |         |-ImplicitCastExpr 0x13d145908 <col:41> 'unsigned int' <LValueToRValue>
    |         | `-DeclRefExpr 0x13d145810 <col:41> 'unsigned int' lvalue ParmVar 0x13d144ca8 'cmd' 'unsigned int'
    |         `-ImplicitCastExpr 0x13d145920 <col:46> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x13d145830 <col:46> 'unsigned long' lvalue ParmVar 0x13d144d28 'arg' 'unsigned long'
    |-IfStmt 0x13d808878 <line:22:2, line:23:11>
    | |-RecoveryExpr 0x13d145ba0 <line:22:6, col:59> '_Bool' contains-errors
    | `-ReturnStmt 0x13d808868 <line:23:3, col:11>
    |   `-UnaryOperator 0x13d808850 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d808838 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d808818 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d808bb8 <line:25:2, line:26:11>
    | |-CallExpr 0x13d808ae0 <line:25:6, col:31> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13d808978 <col:6> 'int ()' Function 0x13d8088c0 'put_user' 'int ()'
    | | |-IntegerLiteral 0x13d808998 <col:15> 'int' 0
    | | `-UnaryOperator 0x13d808ac8 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-CXXDependentScopeMemberExpr 0x13d808a80 <col:19, col:23> '<dependent type>' contains-errors lvalue ->d_reclen
    | |     `-RecoveryExpr 0x13d808a60 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13d808ba8 <line:26:3, col:11>
    |   `-UnaryOperator 0x13d808b90 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d808b78 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d808b58 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d808cc0 <line:28:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13d808c20 <col:2, col:6> '<dependent type>' contains-errors lvalue .dirent
    | | `-RecoveryExpr 0x13d808bf8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13d808bd8 <col:2> 'struct fat_ioctl_filldir_callback' lvalue Var 0x13d145088 'buf' 'struct fat_ioctl_filldir_callback'
    | `-RecoveryExpr 0x13d808ca0 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d808d90 <line:29:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13d808d28 <col:2, col:6> '<dependent type>' contains-errors lvalue .result
    | | `-RecoveryExpr 0x13d808d00 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13d808ce0 <col:2> 'struct fat_ioctl_filldir_callback' lvalue Var 0x13d145088 'buf' 'struct fat_ioctl_filldir_callback'
    | `-IntegerLiteral 0x13d808d70 <col:15> 'int' 0
    |-CallExpr 0x13d808f28 <line:30:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d808e90 <col:2> 'int ()' Function 0x13d808dd8 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x13d808f10 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13d808ee8 <col:14, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d808eb0 <col:14> 'struct inode *' lvalue ParmVar 0x13d128648 'inode' 'struct inode *'
    |-IfStmt 0x13d8092e8 <line:32:2, line:35:2>
    | |-UnaryOperator 0x13d8090e8 <line:32:6, col:23> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13d8090a8 <col:7, col:23> 'int'
    | |   |-ImplicitCastExpr 0x13d809090 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13d809050 <col:7> 'int ()' Function 0x13d808f98 'IS_DEADDIR' 'int ()'
    | |   `-ImplicitCastExpr 0x13d8090d0 <col:18> 'struct inode *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13d809070 <col:18> 'struct inode *' lvalue ParmVar 0x13d128648 'inode' 'struct inode *'
    | `-CompoundStmt 0x13d8092d8 <col:26, line:35:2>
    |-CallExpr 0x13d809480 <line:36:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d8093e8 <col:2> 'int ()' Function 0x13d809330 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x13d809468 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13d809440 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d809408 <col:16> 'struct inode *' lvalue ParmVar 0x13d128648 'inode' 'struct inode *'
    |-IfStmt 0x13d8095c8 <line:37:2, line:38:13>
    | |-BinaryOperator 0x13d809500 <line:37:6, col:13> 'int' '>='
    | | |-ImplicitCastExpr 0x13d8094e8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d8094a8 <col:6> 'int' lvalue Var 0x13d1452c8 'ret' 'int'
    | | `-IntegerLiteral 0x13d8094c8 <col:13> 'int' 0
    | `-BinaryOperator 0x13d8095a8 <line:38:3, col:13> 'int' contains-errors '='
    |   |-DeclRefExpr 0x13d809520 <col:3> 'int' lvalue Var 0x13d1452c8 'ret' 'int'
    |   `-CXXDependentScopeMemberExpr 0x13d809560 <col:9, col:13> '<dependent type>' contains-errors lvalue .result
    |     `-RecoveryExpr 0x13d809540 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13d809620 <line:39:2, col:9>
      `-ImplicitCastExpr 0x13d809608 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13d8095e8 <col:9> 'int' lvalue Var 0x13d1452c8 'ret' 'int'
