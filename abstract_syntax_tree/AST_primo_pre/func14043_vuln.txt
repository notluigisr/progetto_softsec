`-FunctionDecl 0x149026748  line:1:22 convert_eip_to_linear 'unsigned long (struct task_struct *, struct pt_regs *)' static
  |-ParmVarDecl 0x14900e248 <col:44, col:64> col:64 used child 'struct task_struct *'
  |-ParmVarDecl 0x149026628 <col:71, col:87> col:87 used regs 'struct pt_regs *'
  `-CompoundStmt 0x148922978 <line:2:1, line:28:1>
    |-DeclStmt 0x149026960 <line:3:2, col:25>
    | |-VarDecl 0x149026860 <col:2, col:16> col:16 used addr 'unsigned long'
    | `-VarDecl 0x1490268e0 <col:2, col:22> col:22 used seg 'unsigned long'
    |-BinaryOperator 0x1490269f8 <line:5:2, col:15> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x149026978 <col:2> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    | `-RecoveryExpr 0x1490269d0 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x149026998 <col:9> 'struct pt_regs *' lvalue ParmVar 0x149026628 'regs' 'struct pt_regs *'
    |-BinaryOperator 0x149026ad8 <line:6:2, col:20> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x149026a18 <col:2> 'unsigned long' lvalue Var 0x1490268e0 'seg' 'unsigned long'
    | `-BinaryOperator 0x149026ab8 <col:8, col:20> '<dependent type>' contains-errors '&'
    |   |-RecoveryExpr 0x149026a70 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x149026a38 <col:8> 'struct pt_regs *' lvalue ParmVar 0x149026628 'regs' 'struct pt_regs *'
    |   `-IntegerLiteral 0x149026a98 <col:20> 'int' 65535
    |-IfStmt 0x149026df8 <line:7:2, line:10:2>
    | |-BinaryOperator 0x149026bc8 <line:7:6, col:21> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x149026b30 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x149026af8 <col:6> 'struct pt_regs *' lvalue ParmVar 0x149026628 'regs' 'struct pt_regs *'
    | | `-RecoveryExpr 0x149026ba8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x149026dd8 <col:30, line:10:2>
    |   |-BinaryOperator 0x149026d70 <line:8:3, col:37> 'unsigned long' '='
    |   | |-DeclRefExpr 0x149026be8 <col:3> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    |   | `-BinaryOperator 0x149026d50 <col:10, col:37> 'unsigned long' '+'
    |   |   |-ParenExpr 0x149026c98 <col:10, col:24> 'unsigned long'
    |   |   | `-BinaryOperator 0x149026c78 <col:11, col:18> 'unsigned long' '&'
    |   |   |   |-ImplicitCastExpr 0x149026c48 <col:11> 'unsigned long' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x149026c08 <col:11> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    |   |   |   `-ImplicitCastExpr 0x149026c60 <col:18> 'unsigned long' <IntegralCast>
    |   |   |     `-IntegerLiteral 0x149026c28 <col:18> 'int' 65535
    |   |   `-ParenExpr 0x149026d30 <col:28, col:37> 'unsigned long'
    |   |     `-BinaryOperator 0x149026d10 <col:29, col:36> 'unsigned long' '<<'
    |   |       |-ImplicitCastExpr 0x149026cf8 <col:29> 'unsigned long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x149026cb8 <col:29> 'unsigned long' lvalue Var 0x1490268e0 'seg' 'unsigned long'
    |   |       `-IntegerLiteral 0x149026cd8 <col:36> 'int' 4
    |   `-ReturnStmt 0x149026dc8 <line:9:3, col:10>
    |     `-ImplicitCastExpr 0x149026db0 <col:10> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x149026d90 <col:10> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    |-IfStmt 0x148922910 <line:13:2, line:26:2>
    | |-BinaryOperator 0x149026e90 <line:13:6, col:12> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x149026e18 <col:6> 'unsigned long' lvalue Var 0x1490268e0 'seg' 'unsigned long'
    | | `-RecoveryExpr 0x149026e70 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1489228d8 <col:25, line:26:2>
    |   |-DeclStmt 0x149026f48 <line:15:3, col:21>
    |   | `-VarDecl 0x149026ee0 <col:3, col:17> col:17 used base 'unsigned long'
    |   |-CallExpr 0x149027198 <line:17:3, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x149027070 <col:3> 'int ()' Function 0x149026fb8 'down' 'int ()'
    |   | `-UnaryOperator 0x149027180 <col:8, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x149027138 <col:9, col:28> '<dependent type>' contains-errors lvalue .sem
    |   |     `-CXXDependentScopeMemberExpr 0x1490270f0 <col:9, col:20> '<dependent type>' contains-errors lvalue ->context
    |   |       `-RecoveryExpr 0x1490270c8 <col:9, col:16> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x149027090 <col:9> 'struct task_struct *' lvalue ParmVar 0x14900e248 'child' 'struct task_struct *'
    |   |-IfStmt 0x148922600 <line:22:3, line:23:12>
    |   | |-RecoveryExpr 0x149027558 <line:22:7, col:28> '_Bool' contains-errors
    |   | `-CompoundAssignOperator 0x1490275d0 <line:23:4, col:12> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   |   |-DeclRefExpr 0x149027578 <col:4> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x1490275b8 <col:12> 'unsigned long' <IntegralCast>
    |   |     `-IntegerLiteral 0x149027598 <col:12> 'int' 65535
    |   |-CompoundAssignOperator 0x148922678 <line:24:3, col:11> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x148922620 <col:3> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
    |   | `-ImplicitCastExpr 0x148922660 <col:11> 'unsigned long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x148922640 <col:11> 'unsigned long' lvalue Var 0x149026ee0 'base' 'unsigned long'
    |   `-CallExpr 0x1489228b0 <line:25:3, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x148922788 <col:3> 'int ()' Function 0x1489226d0 'up' 'int ()'
    |     `-UnaryOperator 0x148922898 <col:6, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-CXXDependentScopeMemberExpr 0x148922850 <col:7, col:26> '<dependent type>' contains-errors lvalue .sem
    |         `-CXXDependentScopeMemberExpr 0x148922808 <col:7, col:18> '<dependent type>' contains-errors lvalue ->context
    |           `-RecoveryExpr 0x1489227e0 <col:7, col:14> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x1489227a8 <col:7> 'struct task_struct *' lvalue ParmVar 0x14900e248 'child' 'struct task_struct *'
    `-ReturnStmt 0x148922968 <line:27:2, col:9>
      `-ImplicitCastExpr 0x148922950 <col:9> 'unsigned long' <LValueToRValue>
        `-DeclRefExpr 0x148922930 <col:9> 'unsigned long' lvalue Var 0x149026860 'addr' 'unsigned long'
