`-FunctionDecl 0x125141800  line:1:17 invalid smtp_perform_command 'int (struct connectdata *)' static
  |-ParmVarDecl 0x125128668 <col:38, col:58> col:58 used conn 'struct connectdata *'
  `-CompoundStmt 0x125142a28 <line:2:1, line:22:1>
    |-DeclStmt 0x125141af8 <line:4:3, col:38>
    | |-RecordDecl 0x1251418b0 <col:3, col:10> col:10 struct Curl_easy
    | `-VarDecl 0x125141a18 <col:3, col:34> col:21 used data 'struct Curl_easy *' cinit
    |   `-RecoveryExpr 0x125141ab8 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x125141a80 <col:28> 'struct connectdata *' lvalue ParmVar 0x125128668 'conn' 'struct connectdata *'
    |-DeclStmt 0x125141da0 <line:5:3, col:39>
    | |-RecordDecl 0x125141b10 <col:3, col:10> col:10 struct SMTP
    | `-VarDecl 0x125141c78 <col:3, col:33> col:16 used smtp 'struct SMTP *' cinit
    |   `-CXXDependentScopeMemberExpr 0x125141d40 <col:23, col:33> '<dependent type>' contains-errors lvalue .protop
    |     `-RecoveryExpr 0x125141d18 <col:23, col:29> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x125141ce0 <col:23> 'struct Curl_easy *' contains-errors lvalue Var 0x125141a18 'data' 'struct Curl_easy *'
    `-IfStmt 0x125142a08 <line:18:3, line:19:29>
      |-UnaryOperator 0x125142838 <line:18:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x125142820 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x125142800 <col:7> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x1251429d8 <line:19:5, col:29> '<dependent type>' contains-errors
        |-DeclRefExpr 0x125142930 <col:5> 'int ()' Function 0x125142878 'state' 'int ()'
        |-DeclRefExpr 0x125142950 <col:11> 'struct connectdata *' lvalue ParmVar 0x125128668 'conn' 'struct connectdata *'
        `-RecoveryExpr 0x1251429b8 <col:17> '<dependent type>' contains-errors lvalue
