`-FunctionDecl 0x14f80dda8  line:1:5 rpc_type_of_NPNVariable 'int (int)'
  |-ParmVarDecl 0x14f80dcd8 <col:29, col:33> col:33 used variable 'int'
  `-CompoundStmt 0x14f80e3c0 <line:2:1, line:25:1>
    |-DeclStmt 0x14f80df20 <line:3:3, col:11>
    | `-VarDecl 0x14f80deb8 <col:3, col:7> col:7 used type 'int'
    |-SwitchStmt 0x14f80df70 <line:4:3, line:23:3>
    | |-ImplicitCastExpr 0x14f80df58 <line:4:11> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f80df38 <col:11> 'int' lvalue ParmVar 0x14f80dcd8 'variable' 'int'
    | `-CompoundStmt 0x14f80e328 <col:21, line:23:3>
    |   |-BinaryOperator 0x14f80e0a0 <line:10:2, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f80e028 <col:2> 'int' lvalue Var 0x14f80deb8 'type' 'int'
    |   | `-RecoveryExpr 0x14f80e080 <col:9> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f80e0c0 <line:11:2>
    |   |-BinaryOperator 0x14f80e170 <line:14:2, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f80e0f8 <col:2> 'int' lvalue Var 0x14f80deb8 'type' 'int'
    |   | `-RecoveryExpr 0x14f80e150 <col:9> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f80e190 <line:15:2>
    |   |-BinaryOperator 0x14f80e240 <line:18:2, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14f80e1c8 <col:2> 'int' lvalue Var 0x14f80deb8 'type' 'int'
    |   | `-RecoveryExpr 0x14f80e220 <col:9> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f80e260 <line:19:2>
    |   |-DefaultStmt 0x14f80e300 <line:20:3, line:21:9>
    |   | `-BinaryOperator 0x14f80e2e0 <col:2, col:9> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x14f80e268 <col:2> 'int' lvalue Var 0x14f80deb8 'type' 'int'
    |   |   `-RecoveryExpr 0x14f80e2c0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-BreakStmt 0x14f80e320 <line:22:2>
    `-ReturnStmt 0x14f80e3b0 <line:24:3, col:10>
      `-ImplicitCastExpr 0x14f80e398 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f80e378 <col:10> 'int' lvalue Var 0x14f80deb8 'type' 'int'
