`-FunctionDecl 0x133081488  line:1:5 referenced invalid git_index__fill 'int (int *, const int *)'
  |-ParmVarDecl 0x133081328 <col:21, col:32> col:32 invalid index 'int *'
  |-ParmVarDecl 0x1330813a8 <col:39, col:57> col:57 invalid source_entries 'const int *'
  `-CompoundStmt 0x13309c428 <line:2:1, line:37:1>
    |-DeclStmt 0x1330815d8 <line:3:2, col:44>
    | `-VarDecl 0x133081558 <col:2, col:25> col:25 invalid source_entry 'const int *'
    |-UnaryExprOrTypeTraitExpr 0x133081648 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x133081628 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x133081708 <line:5:2, col:13>
    | `-VarDecl 0x133081680 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x1330816e8 <col:12> 'int' 0
    |-CallExpr 0x1330818c0 <line:7:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x133081880 <col:2> 'int ()' Function 0x1330817c8 'assert' 'int ()'
    | `-RecoveryExpr 0x1330818a0 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1330819b0 <line:9:2, line:10:10>
    | |-UnaryOperator 0x133081968 <line:9:6, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x133081950 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x133081908 <col:7, col:23> '<dependent type>' contains-errors lvalue ->length
    | |     `-RecoveryExpr 0x1330818e8 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1330819a0 <line:10:3, col:10>
    |   `-IntegerLiteral 0x133081980 <col:10> 'int' 0
    |-CallExpr 0x13309abc0 <line:12:2, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13309aab8 <col:2> 'int ()' Function 0x13309aa00 'git_vector_size_hint' 'int ()'
    | |-UnaryOperator 0x13309ab40 <col:23, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x13309aaf8 <col:24, col:31> '<dependent type>' contains-errors lvalue ->entries
    | |   `-RecoveryExpr 0x13309aad8 <col:24> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x13309ab78 <col:40, col:56> '<dependent type>' contains-errors lvalue ->length
    |   `-RecoveryExpr 0x13309ab58 <col:40> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13309afc8 <line:15:2, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13309aef8 <col:2> 'int ()' Function 0x13309ae40 'git_vector_foreach' 'int ()'
    | |-RecoveryExpr 0x13309af18 <col:21> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x13309afa8 <col:37> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13309af50 <col:40> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x13309b9b0 <col:54, line:31:2>
    | `-BinaryOperator 0x13309b118 <line:16:3, col:28> '<dependent type>' contains-errors '='
    |   |-BinaryOperator 0x13309b0d8 <col:3, col:20> '<dependent type>' contains-errors '*'
    |   | |-RecoveryExpr 0x13309b020 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13309b000 <col:3> 'int (int *, const int *)' Function 0x133081488 'git_index__fill' 'int (int *, const int *)'
    |   | `-RecoveryExpr 0x13309b0b8 <col:20> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13309b0f8 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13309c3c0 <line:33:2, line:34:34>
    | |-UnaryOperator 0x13309c200 <line:33:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13309b9e8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13309b9c8 <col:7> 'int' lvalue Var 0x133081680 'ret' 'int'
    | `-CallExpr 0x13309c398 <line:34:3, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13309c2f8 <col:3> 'int ()' Function 0x13309c240 'git_vector_sort' 'int ()'
    |   `-UnaryOperator 0x13309c380 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x13309c338 <col:20, col:27> '<dependent type>' contains-errors lvalue ->entries
    |       `-RecoveryExpr 0x13309c318 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13309c418 <line:36:2, col:9>
      `-ImplicitCastExpr 0x13309c400 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13309c3e0 <col:9> 'int' lvalue Var 0x133081680 'ret' 'int'
