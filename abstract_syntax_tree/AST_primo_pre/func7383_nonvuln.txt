`-FunctionDecl 0x14e1418d8  line:1:5 invalid hfsplus_block_free 'int (struct super_block *, int, int)'
  |-ParmVarDecl 0x14e128648 <col:24, col:44> col:44 used sb 'struct super_block *'
  |-ParmVarDecl 0x14e1286e0 <col:48, col:52> col:52 invalid offset 'int'
  |-ParmVarDecl 0x14e128760 <col:60, col:64> col:64 referenced invalid count 'int'
  `-CompoundStmt 0x14e1492d0 <line:2:1, line:72:1>
    |-DeclStmt 0x14e141b88 <line:3:2, col:19>
    | |-RecordDecl 0x14e141998 <col:2, col:9> col:9 struct page
    | `-VarDecl 0x14e141b08 <col:2, col:15> col:15 used page 'struct page *'
    |-DeclStmt 0x14e141d88 <line:4:2, col:31>
    | |-RecordDecl 0x14e141ba0 <col:2, col:9> col:9 struct address_space
    | `-VarDecl 0x14e141d08 <col:2, col:24> col:24 used mapping 'struct address_space *'
    |-DeclStmt 0x14e141ec8 <line:7:2, col:7>
    | `-VarDecl 0x14e141e60 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x14e141f60 <line:10:2, line:11:10>
    | |-UnaryOperator 0x14e141f18 <line:10:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14e141f00 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14e141ee0 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14e141f50 <line:11:3, col:10>
    |   `-IntegerLiteral 0x14e141f30 <col:10> 'int' 0
    |-CallExpr 0x14e142220 <line:13:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e1420e0 <col:2> 'int ()' Function 0x14e142028 'dprint' 'int ()'
    | |-RecoveryExpr 0x14e142200 <col:9> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14e142160 <col:21> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x14e142180 <col:28> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14e1421a0 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e142518 <line:15:2, line:16:11>
    | |-BinaryOperator 0x14e1424b0 <line:15:6, col:40> 'int' contains-errors '>'
    | | |-ParenExpr 0x14e1422c0 <col:6, col:21> '<dependent type>' contains-errors
    | | | `-BinaryOperator 0x14e1422a0 <col:7, col:16> '<dependent type>' contains-errors '+'
    | | |   |-RecoveryExpr 0x14e142260 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x14e142280 <col:16> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14e142488 <col:25, col:40> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x14e142448 <col:25, col:38> 'int'
    | |     |-ImplicitCastExpr 0x14e142430 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x14e1423c0 <col:25> 'int ()' Function 0x14e142308 'HFSPLUS_SB' 'int ()'
    | |     `-ImplicitCastExpr 0x14e142470 <col:36> 'struct super_block *' <LValueToRValue>
    | |       `-DeclRefExpr 0x14e1423e0 <col:36> 'struct super_block *' lvalue ParmVar 0x14e128648 'sb' 'struct super_block *'
    | `-ReturnStmt 0x14e142508 <line:16:3, col:11>
    |   `-UnaryOperator 0x14e1424f0 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x14e1424d0 <col:11> 'int' 2
    |-CallExpr 0x14e142758 <line:18:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e142618 <col:2> 'int ()' Function 0x14e142560 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x14e142740 <col:13, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14e1426f8 <col:14, col:41> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x14e1426d0 <col:14, col:29> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x14e142690 <col:14, col:27> 'int'
    |         |-ImplicitCastExpr 0x14e142678 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14e142638 <col:14> 'int ()' Function 0x14e142308 'HFSPLUS_SB' 'int ()'
    |         `-ImplicitCastExpr 0x14e1426b8 <col:25> 'struct super_block *' <LValueToRValue>
    |           `-DeclRefExpr 0x14e142658 <col:25> 'struct super_block *' lvalue ParmVar 0x14e128648 'sb' 'struct super_block *'
    |-BinaryOperator 0x14e1470b0 <line:19:2, col:39> 'struct address_space *' contains-errors '='
    | |-DeclRefExpr 0x14e142780 <col:2> 'struct address_space *' lvalue Var 0x14e141d08 'mapping' 'struct address_space *'
    | `-CXXDependentScopeMemberExpr 0x14e147068 <col:12, col:39> '<dependent type>' contains-errors lvalue ->i_mapping
    |   `-RecoveryExpr 0x14e147040 <col:12, col:27> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x14e147000 <col:12, col:25> 'int'
    |       |-ImplicitCastExpr 0x14e1427e0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x14e1427a0 <col:12> 'int ()' Function 0x14e142308 'HFSPLUS_SB' 'int ()'
    |       `-ImplicitCastExpr 0x14e147028 <col:23> 'struct super_block *' <LValueToRValue>
    |         `-DeclRefExpr 0x14e1427c0 <col:23> 'struct super_block *' lvalue ParmVar 0x14e128648 'sb' 'struct super_block *'
    |-BinaryOperator 0x14e147368 <line:21:2, col:45> 'struct page *' contains-errors '='
    | |-DeclRefExpr 0x14e147128 <col:2> 'struct page *' lvalue Var 0x14e141b08 'page' 'struct page *'
    | `-CallExpr 0x14e147330 <col:9, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e147228 <col:9> 'int ()' Function 0x14e147170 'read_mapping_page' 'int ()'
    |   |-DeclRefExpr 0x14e147248 <col:27> 'struct address_space *' lvalue Var 0x14e141d08 'mapping' 'struct address_space *'
    |   |-RecoveryExpr 0x14e1472f0 <col:36> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e147310 <col:41> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14e147620 <line:28:2, col:15> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e1475a0 <col:2> 'int' lvalue Var 0x14e141e60 'i' 'int'
    | `-BinaryOperator 0x14e147600 <col:6, col:15> '<dependent type>' contains-errors '%'
    |   |-RecoveryExpr 0x14e1475c0 <col:6> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14e1475e0 <col:15> 'int' 32
    |-IfStmt 0x14e147ba0 <line:29:2, line:39:2>
    | |-ImplicitCastExpr 0x14e147660 <line:29:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14e147640 <col:6> 'int' lvalue Var 0x14e141e60 'i' 'int'
    | `-CompoundStmt 0x14e147b78 <col:9, line:39:2>
    |   |-DeclStmt 0x14e147770 <line:30:3, col:17>
    |   | `-VarDecl 0x14e147690 <col:3, col:16> col:7 used j 'int' cinit
    |   |   `-BinaryOperator 0x14e147750 <col:11, col:16> 'int' '-'
    |   |     |-IntegerLiteral 0x14e1476f8 <col:11> 'int' 32
    |   |     `-ImplicitCastExpr 0x14e147738 <col:16> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14e147718 <col:16> 'int' lvalue Var 0x14e141e60 'i' 'int'
    |   |-IfStmt 0x14e147aa0 <line:32:3, line:36:3>
    |   | |-BinaryOperator 0x14e147840 <line:32:7, col:11> 'int' contains-errors '>'
    |   | | |-DeclRefExpr 0x14e147800 <col:7> 'int' lvalue Var 0x14e147690 'j' 'int'
    |   | | `-RecoveryExpr 0x14e147820 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14e147a88 <col:18, line:36:3>
    |   |   `-GotoStmt 0x14e147a70 <line:35:4, col:9> 'out' 0x14e147a20
    |   `-CompoundAssignOperator 0x14e147b48 <line:38:3, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x14e147b00 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14e147ae0 <col:3> 'int' lvalue ParmVar 0x14e128760 'count' 'int'
    |     `-DeclRefExpr 0x14e147b28 <col:12> 'int' lvalue Var 0x14e147690 'j' 'int'
    |-WhileStmt 0x14e148c98 <line:42:2, line:57:2>
    | |-IntegerLiteral 0x14e147bc0 <line:42:9> 'int' 1
    | `-CompoundStmt 0x14e148c68 <col:12, line:57:2>
    |   |-WhileStmt 0x14e147dc0 <line:43:3, line:48:3>
    |   | |-RecoveryExpr 0x14e147be0 <line:43:10, col:17> '_Bool' contains-errors
    |   | `-CompoundStmt 0x14e147da0 <col:22, line:48:3>
    |   |   |-IfStmt 0x14e147cc8 <line:44:4, line:45:10>
    |   |   | |-BinaryOperator 0x14e147c40 <line:44:8, col:16> 'int' contains-errors '<'
    |   |   | | |-RecoveryExpr 0x14e147c00 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | `-IntegerLiteral 0x14e147c20 <col:16> 'int' 32
    |   |   | `-GotoStmt 0x14e147cb0 <line:45:5, col:10> 'done' 0x14e147c60
    |   |   `-CompoundAssignOperator 0x14e147d70 <line:47:4, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     |-RecoveryExpr 0x14e147d28 <col:4> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x14e147d08 <col:4> 'int' lvalue ParmVar 0x14e128760 'count' 'int'
    |   |     `-IntegerLiteral 0x14e147d50 <col:13> 'int' 32
    |   |-IfStmt 0x14e147e38 <line:49:3, line:50:4>
    |   | |-UnaryOperator 0x14e147e18 <line:49:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14e147e00 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x14e147de0 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-BreakStmt 0x14e147e30 <line:50:4>
    |   |-CallExpr 0x14e147f90 <line:51:3, col:22> 'int'
    |   | |-ImplicitCastExpr 0x14e147f78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14e147f38 <col:3> 'int ()' Function 0x14e147e80 'set_page_dirty' 'int ()'
    |   | `-ImplicitCastExpr 0x14e147fb8 <col:18> 'struct page *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14e147f58 <col:18> 'struct page *' lvalue Var 0x14e141b08 'page' 'struct page *'
    |   `-CallExpr 0x14e148b10 <line:52:3, col:14> 'int'
    |     |-ImplicitCastExpr 0x14e148af8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e148ab8 <col:3> 'int ()' Function 0x14e148a00 'kunmap' 'int ()'
    |     `-ImplicitCastExpr 0x14e148b38 <col:10> 'struct page *' <LValueToRValue>
    |       `-DeclRefExpr 0x14e148ad8 <col:10> 'struct page *' lvalue Var 0x14e141b08 'page' 'struct page *'
    |-LabelStmt 0x14e148d88 <line:58:1, line:63:2> 'done'
    | `-IfStmt 0x14e148d68 <line:60:2, line:63:2>
    |   |-RecoveryExpr 0x14e148cb8 <line:60:6> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x14e148d58 <col:13, line:63:2>
    |-LabelStmt 0x14e148e40 <line:64:1, line:65:21> 'out'
    | `-CallExpr 0x14e148e00 <col:2, col:21> 'int'
    |   |-ImplicitCastExpr 0x14e148de8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e148da8 <col:2> 'int ()' Function 0x14e147e80 'set_page_dirty' 'int ()'
    |   `-ImplicitCastExpr 0x14e148e28 <col:17> 'struct page *' <LValueToRValue>
    |     `-DeclRefExpr 0x14e148dc8 <col:17> 'struct page *' lvalue Var 0x14e141b08 'page' 'struct page *'
    |-CallExpr 0x14e148eb8 <line:66:2, col:13> 'int'
    | |-ImplicitCastExpr 0x14e148ea0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14e148e60 <col:2> 'int ()' Function 0x14e148a00 'kunmap' 'int ()'
    | `-ImplicitCastExpr 0x14e148ee0 <col:9> 'struct page *' <LValueToRValue>
    |   `-DeclRefExpr 0x14e148e80 <col:9> 'struct page *' lvalue Var 0x14e141b08 'page' 'struct page *'
    |-BinaryOperator 0x14e149038 <line:68:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14e148ff0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e148fb8 <col:2> 'struct super_block *' lvalue ParmVar 0x14e128648 'sb' 'struct super_block *'
    | `-IntegerLiteral 0x14e149018 <col:15> 'int' 1
    |-CallExpr 0x14e149278 <line:69:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e149138 <col:2> 'int ()' Function 0x14e149080 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x14e149260 <col:15, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14e149218 <col:16, col:43> '<dependent type>' contains-errors lvalue ->i_mutex
    |     `-RecoveryExpr 0x14e1491f0 <col:16, col:31> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x14e1491b0 <col:16, col:29> 'int'
    |         |-ImplicitCastExpr 0x14e149198 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x14e149158 <col:16> 'int ()' Function 0x14e142308 'HFSPLUS_SB' 'int ()'
    |         `-ImplicitCastExpr 0x14e1491d8 <col:27> 'struct super_block *' <LValueToRValue>
    |           `-DeclRefExpr 0x14e149178 <col:27> 'struct super_block *' lvalue ParmVar 0x14e128648 'sb' 'struct super_block *'
    `-ReturnStmt 0x14e1492c0 <line:71:2, col:9>
      `-IntegerLiteral 0x14e1492a0 <col:9> 'int' 0
