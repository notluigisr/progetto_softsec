`-FunctionDecl 0x150140bf8  line:1:15 arch_get_unmapped_area 'unsigned long (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'
  |-ParmVarDecl 0x150128648 <col:38, col:51> col:51 used filp 'struct file *'
  |-ParmVarDecl 0x1501286c8 <col:57, col:71> col:71 used addr 'unsigned long'
  |-ParmVarDecl 0x150128748 <line:2:2, col:16> col:16 used len 'unsigned long'
  |-ParmVarDecl 0x150140a00 <col:21, col:35> col:35 used pgoff 'unsigned long'
  |-ParmVarDecl 0x150140a80 <col:42, col:56> col:56 used flags 'unsigned long'
  `-CompoundStmt 0x14800b468 <line:3:1, line:43:1>
    |-DeclStmt 0x150140fd8 <line:4:2, col:36>
    | |-RecordDecl 0x150140d10 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x150140e78 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x150140f78 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x150140f58 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1501411d8 <line:5:2, col:28>
    | |-RecordDecl 0x150140ff0 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x150141158 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x150141270 <line:6:2, col:21>
    | `-VarDecl 0x150141208 <col:2, col:6> col:6 used do_colour_align 'int'
    |-DeclStmt 0x150141408 <line:7:2, col:35>
    | |-RecordDecl 0x150141288 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x150141388 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x1501416f0 <line:9:2, line:15:2>
    | |-BinaryOperator 0x150141498 <line:9:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x150141420 <col:6> 'unsigned long' lvalue ParmVar 0x150140a80 'flags' 'unsigned long'
    | | `-RecoveryExpr 0x150141478 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1501416d0 <col:25, line:15:2>
    |   |-IfStmt 0x150141668 <line:11:3, line:13:12>
    |   | |-RecoveryExpr 0x1501415a0 <line:11:7, line:12:55> '_Bool' contains-errors
    |   | `-ReturnStmt 0x150141658 <line:13:4, col:12>
    |   |   `-UnaryOperator 0x150141640 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x150141628 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x150141608 <col:12> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1501416c0 <line:14:3, col:10>
    |     `-ImplicitCastExpr 0x1501416a8 <col:10> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x150141688 <col:10> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |-IfStmt 0x1501419d0 <line:17:2, line:18:11>
    | |-CallExpr 0x150141900 <line:17:6, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x150141820 <col:6> 'int ()' Function 0x150141768 'unlikely' 'int ()'
    | | `-BinaryOperator 0x1501418e0 <col:15, col:21> 'int' contains-errors '>'
    | |   |-DeclRefExpr 0x150141840 <col:15> 'unsigned long' lvalue ParmVar 0x150128748 'len' 'unsigned long'
    | |   `-RecoveryExpr 0x1501418c0 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1501419c0 <line:18:3, col:11>
    |   `-UnaryOperator 0x1501419a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x150141990 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x150141970 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x148009c40 <line:20:2, col:20> 'int' '='
    | |-DeclRefExpr 0x148009c00 <col:2> 'int' lvalue Var 0x150141208 'do_colour_align' 'int'
    | `-IntegerLiteral 0x148009c20 <col:20> 'int' 0
    |-IfStmt 0x148009d58 <line:21:2, line:22:21>
    | |-RecoveryExpr 0x148009cd8 <line:21:6, col:33> '_Bool' contains-errors
    | `-BinaryOperator 0x148009d38 <line:22:3, col:21> 'int' '='
    |   |-DeclRefExpr 0x148009cf8 <col:3> 'int' lvalue Var 0x150141208 'do_colour_align' 'int'
    |   `-IntegerLiteral 0x148009d18 <col:21> 'int' 1
    |-IfStmt 0x14800a948 <line:24:2, line:34:2>
    | |-ImplicitCastExpr 0x148009d98 <line:24:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x148009d78 <col:6> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    | `-CompoundStmt 0x14800a920 <col:12, line:34:2>
    |   |-IfStmt 0x14800a200 <line:25:3, line:28:26> has_else
    |   | |-ImplicitCastExpr 0x148009dd0 <line:25:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x148009db0 <col:7> 'int' lvalue Var 0x150141208 'do_colour_align' 'int'
    |   | |-BinaryOperator 0x14800a010 <line:26:4, col:35> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x148009de8 <col:4> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x148009ff8 <col:11, col:35> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x148009f98 <col:11, col:35> 'int'
    |   | |     |-ImplicitCastExpr 0x148009f80 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x148009ee8 <col:11> 'int ()' Function 0x148009e30 'COLOUR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x148009fc8 <col:24> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x148009f08 <col:24> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |   | |     `-ImplicitCastExpr 0x148009fe0 <col:30> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x148009f28 <col:30> 'unsigned long' lvalue ParmVar 0x150140a00 'pgoff' 'unsigned long'
    |   | `-BinaryOperator 0x14800a1e0 <line:28:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x14800a030 <col:4> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x14800a1c8 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x14800a188 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x14800a170 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x14800a130 <col:11> 'int ()' Function 0x14800a078 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x14800a1b0 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x14800a150 <col:22> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |   |-BinaryOperator 0x14800a420 <line:30:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x14800a230 <col:3> 'struct vm_area_struct *' lvalue Var 0x150141158 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x14800a408 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x14800a3a8 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x14800a390 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14800a330 <col:9> 'int ()' Function 0x14800a278 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x14800a3d8 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x14800a350 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x150140e78 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x14800a3f0 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14800a370 <col:22> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |   `-IfStmt 0x14800a900 <line:31:3, line:33:11>
    |     |-BinaryOperator 0x14800a898 <line:31:7, line:32:43> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x14800a798 <line:31:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x14800a778 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x14800a758 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x14800a458 <col:19> 'unsigned long' lvalue ParmVar 0x150128748 'len' 'unsigned long'
    |     | | `-DeclRefExpr 0x14800a498 <col:26> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |     | `-ParenExpr 0x14800a878 <line:32:7, col:43> 'int' contains-errors
    |     |   `-BinaryOperator 0x14800a858 <col:8, col:35> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x14800a7d0 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x14800a7b8 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x14800a4d8 <col:9> 'struct vm_area_struct *' lvalue Var 0x150141158 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x14800a838 <col:16, col:35> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x14800a818 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x14800a7e8 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x14800a528 <col:16> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x14800a800 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x14800a548 <col:23> 'unsigned long' lvalue ParmVar 0x150128748 'len' 'unsigned long'
    |     |       `-RecoveryExpr 0x14800a5f0 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x14800a5b8 <col:30> 'struct vm_area_struct *' lvalue Var 0x150141158 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x14800a8f0 <line:33:4, col:11>
    |       `-ImplicitCastExpr 0x14800a8d8 <col:11> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x14800a8b8 <col:11> 'unsigned long' lvalue ParmVar 0x1501286c8 'addr' 'unsigned long'
    |-BinaryOperator 0x14800aa18 <line:36:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14800a9b0 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x14800a988 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14800a968 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150141388 'info' 'struct vm_unmapped_area_info'
    | `-IntegerLiteral 0x14800a9f8 <col:15> 'int' 0
    |-BinaryOperator 0x14800aae8 <line:37:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14800aa80 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x14800aa58 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14800aa38 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150141388 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x14800aac8 <col:16> 'unsigned long' lvalue ParmVar 0x150128748 'len' 'unsigned long'
    |-BinaryOperator 0x14800b000 <line:38:2, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14800ab50 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x14800ab28 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14800ab08 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150141388 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x14800abd0 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14800b108 <line:39:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14800b068 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x14800b040 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14800b020 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150141388 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x14800b0e8 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14800b458 <line:42:2, col:31>
      `-CallExpr 0x14800b430 <col:9, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14800b3d8 <col:9> 'int ()' Function 0x14800b320 'vm_unmapped_area' 'int ()'
        `-UnaryOperator 0x14800b418 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x14800b3f8 <col:27> '<dependent type>' contains-errors lvalue
