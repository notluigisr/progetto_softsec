`-FunctionDecl 0x14a9281f8  line:1:21 invalid screen_new 'int *(int *)' static
  |-ParmVarDecl 0x14a928128 <col:32, col:39> col:39 invalid vt 'int *'
  `-CompoundStmt 0x14a941da0 <line:2:1, line:36:1>
    |-DeclStmt 0x14a9285b8 <line:5:3, col:17>
    | |-VarDecl 0x14a9284b8 <col:3, col:7> col:7 used rows 'int'
    | `-VarDecl 0x14a928538 <col:3, col:13> col:13 used cols 'int'
    |-IfStmt 0x14a9286b0 <line:7:3, line:8:12>
    | |-UnaryOperator 0x14a928650 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14a928638 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14a928618 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14a9286a0 <line:8:5, col:12>
    |   `-RecoveryExpr 0x14a928680 <col:12> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x14a9419a8 <line:12:3, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14a9418f8 <col:3> 'int ()' Function 0x14a941840 'vterm_get_size' 'int ()'
      |-RecoveryExpr 0x14a941918 <col:18> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14a941958 <col:22, col:23> 'int *' prefix '&' cannot overflow
      | `-DeclRefExpr 0x14a941938 <col:23> 'int' lvalue Var 0x14a9284b8 'rows' 'int'
      `-UnaryOperator 0x14a941990 <col:29, col:30> 'int *' prefix '&' cannot overflow
        `-DeclRefExpr 0x14a941970 <col:30> 'int' lvalue Var 0x14a928538 'cols' 'int'
