`-FunctionDecl 0x13900dee8  line:1:1 invalid ia64_patch 'int (int, int, int)'
  |-ParmVarDecl 0x13900dcf0 <col:13, col:17> col:17 invalid insn_addr 'int'
  |-ParmVarDecl 0x13900dd70 <col:28, col:32> col:32 invalid mask 'int'
  |-ParmVarDecl 0x13900ddf0 <col:38, col:42> col:42 invalid val 'int'
  `-CompoundStmt 0x138923a60 <line:2:1, line:18:1>
    |-DeclStmt 0x13900e028 <line:5:2, col:21>
    | `-VarDecl 0x13900dfc0 <col:2, col:16> col:16 used shift 'unsigned long'
    |-BinaryOperator 0x13900e1d0 <line:8:2, col:34> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x13900e0b0 <col:2> 'unsigned long' lvalue Var 0x13900dfc0 'shift' 'unsigned long'
    | `-BinaryOperator 0x13900e1b0 <col:10, col:34> '<dependent type>' contains-errors '+'
    |   |-IntegerLiteral 0x13900e0d0 <col:10> 'int' 5
    |   `-BinaryOperator 0x13900e190 <col:14, col:34> '<dependent type>' contains-errors '*'
    |     |-IntegerLiteral 0x13900e0f0 <col:14> 'int' 41
    |     `-ParenExpr 0x13900e170 <col:19, col:34> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x13900e150 <col:20, col:32> '<dependent type>' contains-errors '%'
    |         |-RecoveryExpr 0x13900e110 <col:20> '<dependent type>' contains-errors lvalue
    |         `-IntegerLiteral 0x13900e130 <col:32> 'int' 16
    `-IfStmt 0x138923a10 <line:9:2, line:16:2> has_else
      |-BinaryOperator 0x13900e260 <line:9:6, col:15> 'int' '>='
      | |-ImplicitCastExpr 0x13900e230 <col:6> 'unsigned long' <LValueToRValue>
      | | `-DeclRefExpr 0x13900e1f0 <col:6> 'unsigned long' lvalue Var 0x13900dfc0 'shift' 'unsigned long'
      | `-ImplicitCastExpr 0x13900e248 <col:15> 'unsigned long' <IntegralCast>
      |   `-IntegerLiteral 0x13900e210 <col:15> 'int' 64
      |-CompoundStmt 0x138923660 <col:19, line:12:2>
      `-CompoundStmt 0x138923a00 <col:9, line:16:2>
