`-FunctionDecl 0x14200e030  line:1:13 invalid vnc_dpy_update 'void (int *, int, int, int, int)' static
  |-ParmVarDecl 0x14200dd28 <col:28, col:51> col:51 invalid dcl 'int *'
  |-ParmVarDecl 0x14200dda8 <line:2:28, col:32> col:32 used x 'int'
  |-ParmVarDecl 0x14200de28 <col:35, col:39> col:39 used y 'int'
  |-ParmVarDecl 0x14200dea8 <col:42, col:46> col:46 used w 'int'
  |-ParmVarDecl 0x14200df28 <col:49, col:53> col:53 used h 'int'
  `-CompoundStmt 0x142027d78 <line:3:1, line:22:1>
    |-DeclStmt 0x143008a00 <line:5:5, col:38>
    | |-RecordDecl 0x14200e320 <col:5, col:12> col:12 struct VncSurface
    | `-VarDecl 0x143008888 <col:5, col:33> col:24 used s 'struct VncSurface *' cinit
    |   `-UnaryOperator 0x1430089d0 <col:28, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x143008988 <col:29, col:33> '<dependent type>' contains-errors lvalue ->guest
    |       `-RecoveryExpr 0x143008968 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x143008cb0 <line:6:5, col:38>
    | `-VarDecl 0x143008a30 <col:5, col:37> col:9 used width 'int' cinit
    |   `-CallExpr 0x143008c88 <col:17, col:37> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x143008b78 <col:17> 'int ()' Function 0x143008ac0 'surface_width' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x143008c40 <col:31, col:35> '<dependent type>' contains-errors lvalue ->ds
    |       `-RecoveryExpr 0x143008c20 <col:31> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x143008f60 <line:7:5, col:40>
    | `-VarDecl 0x143008ce0 <col:5, col:39> col:9 used height 'int' cinit
    |   `-CallExpr 0x143008f38 <col:18, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x143008e28 <col:18> 'int ()' Function 0x143008d70 'surface_height' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x143008ef0 <col:33, col:37> '<dependent type>' contains-errors lvalue ->ds
    |       `-RecoveryExpr 0x143008ed0 <col:33> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x143009278 <line:13:5, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x143009068 <col:5> 'int' lvalue ParmVar 0x14200dda8 'x' 'int'
    | `-CallExpr 0x143009218 <col:9, col:21> 'int' contains-errors
    |   |-ImplicitCastExpr 0x143009200 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x143009168 <col:9> 'int ()' Function 0x1430090b0 'MIN' 'int ()'
    |   |-ImplicitCastExpr 0x143009248 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x143009188 <col:13> 'int' lvalue ParmVar 0x14200dda8 'x' 'int'
    |   `-ImplicitCastExpr 0x143009260 <col:16> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1430091a8 <col:16> 'int' contains-errors lvalue Var 0x143008a30 'width' 'int'
    |-BinaryOperator 0x143009390 <line:14:5, col:22> 'int' contains-errors '='
    | |-DeclRefExpr 0x143009298 <col:5> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
    | `-CallExpr 0x143009330 <col:9, col:22> 'int' contains-errors
    |   |-ImplicitCastExpr 0x143009318 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1430092b8 <col:9> 'int ()' Function 0x1430090b0 'MIN' 'int ()'
    |   |-ImplicitCastExpr 0x143009360 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1430092d8 <col:13> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
    |   `-ImplicitCastExpr 0x143009378 <col:16> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x1430092f8 <col:16> 'int' contains-errors lvalue Var 0x143008ce0 'height' 'int'
    |-BinaryOperator 0x143009558 <line:15:5, col:29> 'int' contains-errors '='
    | |-DeclRefExpr 0x1430093b0 <col:5> 'int' lvalue ParmVar 0x14200dea8 'w' 'int'
    | `-BinaryOperator 0x143009538 <col:9, col:29> 'int' contains-errors '-'
    |   |-CallExpr 0x1430094b8 <col:9, col:25> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x1430094a0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1430093d0 <col:9> 'int ()' Function 0x1430090b0 'MIN' 'int ()'
    |   | |-BinaryOperator 0x143009460 <col:13, col:17> 'int' '+'
    |   | | |-ImplicitCastExpr 0x143009430 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1430093f0 <col:13> 'int' lvalue ParmVar 0x14200dda8 'x' 'int'
    |   | | `-ImplicitCastExpr 0x143009448 <col:17> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x143009410 <col:17> 'int' lvalue ParmVar 0x14200dea8 'w' 'int'
    |   | `-ImplicitCastExpr 0x1430094e8 <col:20> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x143009480 <col:20> 'int' contains-errors lvalue Var 0x143008a30 'width' 'int'
    |   `-ImplicitCastExpr 0x143009520 <col:29> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x143009500 <col:29> 'int' lvalue ParmVar 0x14200dda8 'x' 'int'
    |-BinaryOperator 0x1430096c8 <line:16:5, col:26> 'int' contains-errors '='
    | |-DeclRefExpr 0x143009578 <col:5> 'int' lvalue ParmVar 0x14200df28 'h' 'int'
    | `-CallExpr 0x143009680 <col:9, col:26> 'int' contains-errors
    |   |-ImplicitCastExpr 0x143009668 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x143009598 <col:9> 'int ()' Function 0x1430090b0 'MIN' 'int ()'
    |   |-BinaryOperator 0x143009628 <col:13, col:17> 'int' '+'
    |   | |-ImplicitCastExpr 0x1430095f8 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1430095b8 <col:13> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
    |   | `-ImplicitCastExpr 0x143009610 <col:17> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1430095d8 <col:17> 'int' lvalue ParmVar 0x14200df28 'h' 'int'
    |   `-ImplicitCastExpr 0x1430096b0 <col:20> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x143009648 <col:20> 'int' contains-errors lvalue Var 0x143008ce0 'height' 'int'
    `-ForStmt 0x142027d40 <line:18:5, line:21:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x143009758 <line:18:12, col:16> 'int' '<'
      | |-ImplicitCastExpr 0x143009728 <col:12> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1430096e8 <col:12> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
      | `-ImplicitCastExpr 0x143009740 <col:16> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x143009708 <col:16> 'int' lvalue ParmVar 0x14200df28 'h' 'int'
      |-UnaryOperator 0x143009798 <col:19, col:20> 'int' postfix '++'
      | `-DeclRefExpr 0x143009778 <col:19> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
      `-CompoundStmt 0x142027d28 <col:24, line:21:5>
        `-CallExpr 0x142027cf0 <line:19:9, line:20:61> '<dependent type>' contains-errors
          |-DeclRefExpr 0x1420274b8 <line:19:9> 'int ()' Function 0x142027400 'bitmap_set' 'int ()'
          |-ArraySubscriptExpr 0x142027c40 <col:20, col:30> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x142027c10 <col:20, col:23> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x142027930 <col:20, col:23> '<dependent type>' contains-errors lvalue
          | |   `-DeclRefExpr 0x1420274d8 <col:20> 'struct VncSurface *' contains-errors lvalue Var 0x143008888 's' 'struct VncSurface *'
          | `-ImplicitCastExpr 0x142027c28 <col:29> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x142027958 <col:29> 'int' lvalue ParmVar 0x14200de28 'y' 'int'
          |-BinaryOperator 0x142027c80 <col:33, col:37> '<dependent type>' contains-errors '/'
          | |-DeclRefExpr 0x1420279c8 <col:33> 'int' lvalue ParmVar 0x14200dda8 'x' 'int'
          | `-RecoveryExpr 0x142027c60 <col:37> '<dependent type>' contains-errors lvalue
          `-CallExpr 0x142027cc0 <line:20:20, col:60> '<dependent type>' contains-errors
            |-DeclRefExpr 0x142027b00 <col:20> 'int ()' Function 0x142027a48 'DIV_ROUND_UP' 'int ()'
            |-DeclRefExpr 0x142027b20 <col:33> 'int' lvalue ParmVar 0x14200dea8 'w' 'int'
            `-RecoveryExpr 0x142027ca0 <col:36> '<dependent type>' contains-errors lvalue
