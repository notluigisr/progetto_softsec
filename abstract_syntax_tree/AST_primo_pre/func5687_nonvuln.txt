`-FunctionDecl 0x15100e248  line:1:9 invalid ComputeConversion 'int (int, int *, int, int, int, int *, int *)'
  |-ParmVarDecl 0x15100dcf0 <col:27, col:31> col:31 used i 'int'
  |-ParmVarDecl 0x15100de20 <col:34, col:56> col:46 invalid hProfiles 'int *'
  |-ParmVarDecl 0x15100dea0 <line:2:34, col:50> col:50 invalid Intent 'int'
  |-ParmVarDecl 0x15100df20 <line:3:34, col:42> col:42 invalid BPC 'int'
  |-ParmVarDecl 0x15100dfa0 <line:4:34, col:51> col:51 invalid AdaptationState 'int'
  |-ParmVarDecl 0x15100e020 <line:5:34, col:43> col:43 invalid m 'int *'
  |-ParmVarDecl 0x15100e0a0 <col:46, col:55> col:55 referenced invalid off 'int *'
  `-CompoundStmt 0x151028a10 <line:6:1, line:63:1>
    |-DeclStmt 0x15100e3a8 <line:8:5, col:10>
    | `-VarDecl 0x15100e340 <col:5, col:9> col:9 used k 'int'
    |-CallExpr 0x150922fa0 <line:11:5, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150922f60 <col:5> 'int ()' Function 0x150922ea8 '_cmsMAT3identity' 'int ()'
    | `-RecoveryExpr 0x150922f80 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x150923148 <line:12:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1509230a8 <col:5> 'int ()' Function 0x150922ff0 '_cmsVEC3init' 'int ()'
    | |-RecoveryExpr 0x1509230c8 <col:18> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x1509230e8 <col:23> 'int' 0
    | |-IntegerLiteral 0x150923108 <col:26> 'int' 0
    | `-IntegerLiteral 0x150923128 <col:29> 'int' 0
    |-IfStmt 0x151028788 <line:15:5, line:47:5> has_else
    | |-BinaryOperator 0x150923200 <line:15:9, col:19> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x150923188 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1509231e0 <col:19> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1510281b0 <col:49, line:30:5>
    | | |-CallExpr 0x1509234f8 <line:20:9, col:63> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x150923300 <col:9> 'int ()' Function 0x150923248 '_cmsReadMediaWhitePoint' 'int ()'
    | | | |-UnaryOperator 0x150923470 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x150923450 <col:34> '<dependent type>' contains-errors lvalue
    | | | `-ArraySubscriptExpr 0x1509234d8 <col:49, col:62> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x1509234c0 <col:49> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-RecoveryExpr 0x150923350 <col:49> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x1509234a0 <col:59, col:61> 'int' '-'
    | | |     |-ImplicitCastExpr 0x150923488 <col:59> 'int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x150923370 <col:59> 'int' lvalue ParmVar 0x15100dcf0 'i' 'int'
    | | |     `-IntegerLiteral 0x150923390 <col:61> 'int' 1
    | | |-CallExpr 0x150923800 <line:21:9, col:66> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x150923608 <col:9> 'int ()' Function 0x150923550 '_cmsReadCHAD' 'int ()'
    | | | |-UnaryOperator 0x150923778 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x150923758 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-ArraySubscriptExpr 0x1509237e0 <col:52, col:65> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x1509237c8 <col:52> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-RecoveryExpr 0x150923658 <col:52> '<dependent type>' contains-errors lvalue
    | | |   `-BinaryOperator 0x1509237a8 <col:62, col:64> 'int' '-'
    | | |     |-ImplicitCastExpr 0x150923790 <col:62> 'int' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x150923678 <col:62> 'int' lvalue ParmVar 0x15100dcf0 'i' 'int'
    | | |     `-IntegerLiteral 0x150923698 <col:64> 'int' 1
    | | |-CallExpr 0x1509239c8 <line:23:9, col:62> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x150923830 <col:9> 'int ()' Function 0x150923248 '_cmsReadMediaWhitePoint' 'int ()'
    | | | |-UnaryOperator 0x150923960 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x150923940 <col:34> '<dependent type>' contains-errors lvalue
    | | | `-ArraySubscriptExpr 0x1509239a8 <col:50, col:61> '<dependent type>' contains-errors lvalue
    | | |   |-ImplicitCastExpr 0x150923978 <col:50> '<dependent type>' contains-errors <LValueToRValue>
    | | |   | `-RecoveryExpr 0x150923880 <col:50> '<dependent type>' contains-errors lvalue
    | | |   `-ImplicitCastExpr 0x150923990 <col:60> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1509238a0 <col:60> 'int' lvalue ParmVar 0x15100dcf0 'i' 'int'
    | | `-CallExpr 0x150923b90 <line:24:9, col:65> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1509239f8 <col:9> 'int ()' Function 0x150923550 '_cmsReadCHAD' 'int ()'
    | |   |-UnaryOperator 0x150923b28 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x150923b08 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-ArraySubscriptExpr 0x150923b70 <col:53, col:64> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x150923b40 <col:53> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x150923a48 <col:53> '<dependent type>' contains-errors lvalue
    | |     `-ImplicitCastExpr 0x150923b58 <col:63> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x150923a68 <col:63> 'int' lvalue ParmVar 0x15100dcf0 'i' 'int'
    | `-CompoundStmt 0x151028770 <line:31:10, line:47:5>
    |   `-IfStmt 0x151028750 <line:34:9, line:46:9>
    |     |-RecoveryExpr 0x1510281e0 <line:34:13> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x151028740 <col:18, line:46:9>
    `-ForStmt 0x1510289d8 <line:58:5, line:60:5>
      |-BinaryOperator 0x1510287f8 <line:58:10, col:12> 'int' '='
      | |-DeclRefExpr 0x1510287b8 <col:10> 'int' lvalue Var 0x15100e340 'k' 'int'
      | `-IntegerLiteral 0x1510287d8 <col:12> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x151028870 <col:15, col:19> 'int' '<'
      | |-ImplicitCastExpr 0x151028858 <col:15> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x151028818 <col:15> 'int' lvalue Var 0x15100e340 'k' 'int'
      | `-IntegerLiteral 0x151028838 <col:19> 'int' 3
      |-UnaryOperator 0x1510288b0 <col:22, col:23> 'int' postfix '++'
      | `-DeclRefExpr 0x151028890 <col:22> 'int' lvalue Var 0x15100e340 'k' 'int'
      `-CompoundStmt 0x1510289c8 <col:27, line:60:5>
