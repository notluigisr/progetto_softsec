`-FunctionDecl 0x1439282c0  line:1:6 referenced invalid HandleReverseV2Case 'void (int *, const int)'
  |-ParmVarDecl 0x143928128 <col:26, col:43> col:43 invalid context 'int *'
  |-ParmVarDecl 0x1439281a8 <line:2:26, <invalid sloc>> col:35 invalid 'const int'
  `-CompoundStmt 0x144008b48 <col:76, line:23:1>
    |-IfStmt 0x144008918 <line:6:3, line:14:3>
    | |-BinaryOperator 0x143928468 <line:6:7, col:21> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x143928428 <col:7, col:16> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x143928408 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x143928390 <col:16> 'int' 3
    | | `-RecoveryExpr 0x143928448 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1440088f8 <line:7:76, line:14:3>
    |   |-IfStmt 0x1440088b8 <line:8:5, line:12:5> has_else
    |   | |-BinaryOperator 0x143928600 <line:8:9, col:30> 'int' contains-errors '=='
    |   | | |-CallExpr 0x1439285d8 <col:9, col:25> '<dependent type>' contains-errors
    |   | | | |-CXXDependentScopeMemberExpr 0x143928590 <col:9, col:15> '<dependent type>' contains-errors lvalue .dim_size
    |   | | | | `-RecoveryExpr 0x143928570 <col:9> '<dependent type>' contains-errors lvalue
    |   | | | `-IntegerLiteral 0x1439284e8 <col:24> 'int' 2
    |   | | `-IntegerLiteral 0x143928530 <col:30> 'int' 3
    |   | |-CompoundStmt 0x143928750 <col:33, line:10:5>
    |   | `-CompoundStmt 0x1440088a8 <col:12, line:12:5>
    |   `-ReturnStmt 0x1440088e8 <line:13:5>
    `-ForStmt 0x144008b10 <line:17:3, line:19:3>
      |-DeclStmt 0x1440089d8 <line:17:8, col:17>
      | `-VarDecl 0x144008950 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x1440089b8 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x144008a68 <col:19, col:23> 'int' contains-errors '<'
      | |-DeclRefExpr 0x1440089f0 <col:19> 'int' lvalue Var 0x144008950 'i' 'int'
      | `-RecoveryExpr 0x144008a48 <col:23> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x144008aa8 <col:30, col:31> 'int' postfix '++'
      | `-DeclRefExpr 0x144008a88 <col:30> 'int' lvalue Var 0x144008950 'i' 'int'
      `-CompoundStmt 0x144008b00 <col:35, line:19:3>
