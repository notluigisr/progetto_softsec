`-FunctionDecl 0x14980dee8  line:1:1 invalid find_match_text 'int (int, int, char *)'
  |-ParmVarDecl 0x14980dcf0 <col:17, col:25> col:25 invalid startcol 'int'
  |-ParmVarDecl 0x14980dd70 <col:35, col:39> col:39 used regstart 'int'
  |-ParmVarDecl 0x14980ddf0 <col:49, col:57> col:57 used match_text 'char *'
  `-CompoundStmt 0x1498299b0 <line:2:1, line:50:1>
    |-DeclStmt 0x14980e0c0 <line:4:5, col:19>
    | |-VarDecl 0x14980dfc0 <col:5, col:13> col:13 used c1 'int'
    | `-VarDecl 0x14980e040 <col:5, col:17> col:17 used c2 'int'
    |-DeclStmt 0x14980e1f0 <line:5:5, col:23>
    | |-VarDecl 0x14980e0f0 <col:5, col:13> col:13 used len1 'int'
    | `-VarDecl 0x14980e170 <col:5, col:19> col:19 used len2 'int'
    |-DeclStmt 0x14980e288 <line:6:5, col:18>
    | `-VarDecl 0x14980e220 <col:5, col:13> col:13 used match 'int'
    |-ForStmt 0x149829930 <line:8:5, line:48:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-CompoundStmt 0x1498298f8 <line:9:5, line:48:5>
    |   |-BinaryOperator 0x14980e318 <line:10:2, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14980e2a0 <col:2> 'int' lvalue Var 0x14980e220 'match' 'int'
    |   | `-RecoveryExpr 0x14980e2f8 <col:10> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x149827988 <line:11:2, col:29> 'int' '='
    |   | |-DeclRefExpr 0x14980e338 <col:2> 'int' lvalue Var 0x14980e170 'len2' 'int'
    |   | `-CallExpr 0x149827948 <col:9, col:29> 'int'
    |   |   |-ImplicitCastExpr 0x149827930 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1498278b8 <col:9> 'int ()' Function 0x149827800 'MB_CHAR2LEN' 'int ()'
    |   |   `-ImplicitCastExpr 0x149827970 <col:21> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1498278d8 <col:21> 'int' lvalue ParmVar 0x14980dd70 'regstart' 'int'
    |   |-ForStmt 0x1498286a0 <line:12:2, line:22:2>
    |   | |-BinaryOperator 0x1498279e8 <line:12:7, col:14> 'int' '='
    |   | | |-DeclRefExpr 0x1498279a8 <col:7> 'int' lvalue Var 0x14980e0f0 'len1' 'int'
    |   | | `-IntegerLiteral 0x1498279c8 <col:14> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x149827b90 <col:17, col:37> 'int' contains-errors '!='
    |   | | |-ArraySubscriptExpr 0x149827b50 <col:17, col:32> 'char' lvalue
    |   | | | |-ImplicitCastExpr 0x149827b20 <col:17> 'char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x149827a08 <col:17> 'char *' lvalue ParmVar 0x14980ddf0 'match_text' 'char *'
    |   | | | `-ImplicitCastExpr 0x149827b38 <col:28> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x149827a28 <col:28> 'int' lvalue Var 0x14980e0f0 'len1' 'int'
    |   | | `-RecoveryExpr 0x149827b70 <col:37> '<dependent type>' contains-errors lvalue
    |   | |-CompoundAssignOperator 0x149827c68 <col:42, col:64> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | | |-DeclRefExpr 0x149827bb0 <col:42> 'int' lvalue Var 0x14980e0f0 'len1' 'int'
    |   | | `-CallExpr 0x149827c28 <col:50, col:64> 'int'
    |   | |   |-ImplicitCastExpr 0x149827c10 <col:50> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x149827bd0 <col:50> 'int ()' Function 0x149827800 'MB_CHAR2LEN' 'int ()'
    |   | |   `-ImplicitCastExpr 0x149827c50 <col:62> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x149827bf0 <col:62> 'int' lvalue Var 0x14980dfc0 'c1' 'int'
    |   | `-CompoundStmt 0x149828670 <line:13:2, line:22:2>
    |   |   |-BinaryOperator 0x149827e88 <line:14:6, col:37> 'int' '='
    |   |   | |-DeclRefExpr 0x149827c98 <col:6> 'int' lvalue Var 0x14980dfc0 'c1' 'int'
    |   |   | `-CallExpr 0x149827e60 <col:11, col:37> 'int'
    |   |   |   |-ImplicitCastExpr 0x149827e48 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x149827d98 <col:11> 'int ()' Function 0x149827ce0 'PTR2CHAR' 'int ()'
    |   |   |   `-BinaryOperator 0x149827e28 <col:20, col:33> 'char *' '+'
    |   |   |     |-ImplicitCastExpr 0x149827df8 <col:20> 'char *' <LValueToRValue>
    |   |   |     | `-DeclRefExpr 0x149827db8 <col:20> 'char *' lvalue ParmVar 0x14980ddf0 'match_text' 'char *'
    |   |   |     `-ImplicitCastExpr 0x149827e10 <col:33> 'int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x149827dd8 <col:33> 'int' lvalue Var 0x14980e0f0 'len1' 'int'
    |   |   |-BinaryOperator 0x1498280f8 <line:15:6, col:41> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x149827ea8 <col:6> 'int' lvalue Var 0x14980e040 'c2' 'int'
    |   |   | `-CallExpr 0x1498280d0 <col:11, col:41> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x149827ec8 <col:11> 'int ()' Function 0x149827ce0 'PTR2CHAR' 'int ()'
    |   |   |   `-BinaryOperator 0x1498280b0 <col:20, col:37> '<dependent type>' contains-errors '+'
    |   |   |     |-BinaryOperator 0x149828090 <col:20, col:31> '<dependent type>' contains-errors '+'
    |   |   |     | |-CXXDependentScopeMemberExpr 0x149828028 <col:20, col:24> '<dependent type>' contains-errors lvalue .line
    |   |   |     | | `-RecoveryExpr 0x149828008 <col:20> '<dependent type>' contains-errors lvalue
    |   |   |     | `-RecoveryExpr 0x149828070 <col:31> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x149827f80 <col:37> 'int' lvalue Var 0x14980e170 'len2' 'int'
    |   |   |-IfStmt 0x149828568 <line:16:6, line:20:6>
    |   |   | |-RecoveryExpr 0x149828488 <line:16:10, col:72> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x149828548 <line:17:6, line:20:6>
    |   |   |   |-BinaryOperator 0x149828520 <line:18:3, col:11> 'int' contains-errors '='
    |   |   |   | |-DeclRefExpr 0x1498284a8 <col:3> 'int' lvalue Var 0x14980e220 'match' 'int'
    |   |   |   | `-RecoveryExpr 0x149828500 <col:11> '<dependent type>' contains-errors lvalue
    |   |   |   `-BreakStmt 0x149828540 <line:19:3>
    |   |   `-CompoundAssignOperator 0x149828640 <line:21:6, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-DeclRefExpr 0x149828588 <col:6> 'int' lvalue Var 0x14980e170 'len2' 'int'
    |   |     `-CallExpr 0x149828600 <col:14, col:28> 'int'
    |   |       |-ImplicitCastExpr 0x1498285e8 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1498285a8 <col:14> 'int ()' Function 0x149827800 'MB_CHAR2LEN' 'int ()'
    |   |       `-ImplicitCastExpr 0x149828628 <col:26> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x1498285c8 <col:26> 'int' lvalue Var 0x14980e040 'c2' 'int'
    |   |-IfStmt 0x1498296d8 <line:23:2, line:42:2>
    |   | |-RecoveryExpr 0x149829388 <line:23:6, line:26:57> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1498296b0 <line:27:2, line:42:2>
    |   |   |-CallExpr 0x1498294c0 <line:28:6, col:22> 'int'
    |   |   | `-ImplicitCastExpr 0x1498294a8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x149829488 <col:6> 'int ()' Function 0x1498293d0 'cleanup_subexpr' 'int ()'
    |   |   |-IfStmt 0x149829638 <line:29:6, line:40:6> has_else
    |   |   | |-RecoveryExpr 0x1498294f8 <line:29:10> '<dependent type>' contains-errors lvalue
    |   |   | |-CompoundStmt 0x1498295b8 <line:30:6, line:35:6>
    |   |   | `-CompoundStmt 0x149829628 <line:37:6, line:40:6>
    |   |   `-ReturnStmt 0x1498296a0 <line:41:6, col:13>
    |   |     `-ImplicitCastExpr 0x149829688 <col:13> 'int' <IntegralCast>
    |   |       `-IntegerLiteral 0x149829668 <col:13> 'long' 1
    |   `-IfStmt 0x1498298d8 <line:46:2, line:47:6>
    |     |-RecoveryExpr 0x1498298b0 <line:46:6, col:39> '_Bool' contains-errors
    |     `-BreakStmt 0x1498298d0 <line:47:6>
    `-ReturnStmt 0x1498299a0 <line:49:5, col:12>
      `-ImplicitCastExpr 0x149829988 <col:12> 'int' <IntegralCast>
        `-IntegerLiteral 0x149829968 <col:12> 'long' 0
