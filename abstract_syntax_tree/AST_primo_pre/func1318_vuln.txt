`-FunctionDecl 0x15800de58  line:1:12 invalid gdImageCreate 'int (int, int)'
  |-ParmVarDecl 0x15800dcf0 <col:27, col:31> col:31 used sx 'int'
  |-ParmVarDecl 0x15800dd70 <col:35, col:39> col:39 used sy 'int'
  `-CompoundStmt 0x15802ab30 <line:2:1, line:52:1>
    |-DeclStmt 0x15800df90 <line:3:2, col:7>
    | `-VarDecl 0x15800df28 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x15800e268 <line:6:2, line:8:2>
    | |-CallExpr 0x15800e1a8 <line:6:6, col:22> 'int'
    | | |-ImplicitCastExpr 0x15800e190 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15800e100 <col:6> 'int ()' Function 0x15800e048 'overflow2' 'int ()'
    | | |-ImplicitCastExpr 0x15800e1d8 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15800e120 <col:16> 'int' lvalue ParmVar 0x15800dcf0 'sx' 'int'
    | | `-ImplicitCastExpr 0x15800e1f0 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15800e140 <col:20> 'int' lvalue ParmVar 0x15800dd70 'sy' 'int'
    | `-CompoundStmt 0x15800e250 <col:25, line:8:2>
    |   `-ReturnStmt 0x15800e240 <line:7:3, col:10>
    |     `-RecoveryExpr 0x15800e220 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x158028800 <line:10:2, line:12:2>
    | |-CallExpr 0x15800e350 <line:10:6, col:43> 'int'
    | | |-ImplicitCastExpr 0x15800e338 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x15800e288 <col:6> 'int ()' Function 0x15800e048 'overflow2' 'int ()'
    | | |-UnaryExprOrTypeTraitExpr 0x15800e2f8 <col:16, col:38> 'unsigned long' sizeof 'unsigned char *'
    | | `-ImplicitCastExpr 0x15800e380 <col:41> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15800e318 <col:41> 'int' lvalue ParmVar 0x15800dd70 'sy' 'int'
    | `-CompoundStmt 0x15800e3e0 <col:46, line:12:2>
    |   `-ReturnStmt 0x15800e3d0 <line:11:3, col:10>
    |     `-RecoveryExpr 0x15800e3b0 <col:10> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x158029530 <line:24:2, line:28:2>
      |-BinaryOperator 0x1580290e8 <line:24:7, col:11> 'int' '='
      | |-DeclRefExpr 0x1580290a8 <col:7> 'int' lvalue Var 0x15800df28 'i' 'int'
      | `-IntegerLiteral 0x1580290c8 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x158029178 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x158029148 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x158029108 <col:14> 'int' lvalue Var 0x15800df28 'i' 'int'
      | `-ImplicitCastExpr 0x158029160 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x158029128 <col:18> 'int' lvalue ParmVar 0x15800dd70 'sy' 'int'
      |-UnaryOperator 0x1580291b8 <col:22, col:23> 'int' postfix '++'
      | `-DeclRefExpr 0x158029198 <col:22> 'int' lvalue Var 0x15800df28 'i' 'int'
      `-CompoundStmt 0x158029520 <col:27, line:28:2>
