`-FunctionDecl 0x13e826638  line:1:5 rose_parse_facilities 'int (unsigned char *, struct rose_facilities_struct *)'
  |-ParmVarDecl 0x13e80dd08 <col:27, col:42> col:42 used p 'unsigned char *'
  |-ParmVarDecl 0x13e80e2f8 <line:2:2, col:33> col:33 used facilities 'struct rose_facilities_struct *'
  `-CompoundStmt 0x13e8296c8 <line:3:1, line:40:1>
    |-DeclStmt 0x13e826850 <line:4:2, col:25>
    | |-VarDecl 0x13e826750 <col:2, col:6> col:6 used facilities_len 'int'
    | `-VarDecl 0x13e8267d0 <col:2, col:22> col:22 used len 'int'
    |-BinaryOperator 0x13e826908 <line:6:2, col:21> 'int' '='
    | |-DeclRefExpr 0x13e826868 <col:2> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    | `-ImplicitCastExpr 0x13e8268f0 <col:19, col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x13e8268d8 <col:19, col:21> 'unsigned char' <LValueToRValue>
    |     `-UnaryOperator 0x13e8268c0 <col:19, col:21> 'unsigned char' lvalue prefix '*' cannot overflow
    |       `-UnaryOperator 0x13e8268a8 <col:20, col:21> 'unsigned char *' postfix '++'
    |         `-DeclRefExpr 0x13e826888 <col:20> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |-IfStmt 0x13e8269d0 <line:8:2, line:9:10>
    | |-BinaryOperator 0x13e826980 <line:8:6, col:24> 'int' '=='
    | | |-ImplicitCastExpr 0x13e826968 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e826928 <col:6> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    | | `-IntegerLiteral 0x13e826948 <col:24> 'int' 0
    | `-ReturnStmt 0x13e8269c0 <line:9:3, col:10>
    |   `-IntegerLiteral 0x13e8269a0 <col:10> 'int' 0
    |-WhileStmt 0x13e829678 <line:11:2, line:37:2>
    | |-BinaryOperator 0x13e826a48 <line:11:9, col:26> 'int' '>'
    | | |-ImplicitCastExpr 0x13e826a30 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e8269f0 <col:9> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    | | `-IntegerLiteral 0x13e826a10 <col:26> 'int' 0
    | `-CompoundStmt 0x13e829660 <col:29, line:37:2>
    |   `-IfStmt 0x13e829630 <line:12:3, line:36:4> has_else
    |     |-BinaryOperator 0x13e826b08 <line:12:7, col:13> 'int' '=='
    |     | |-ImplicitCastExpr 0x13e826af0 <col:7, col:8> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x13e826ad8 <col:7, col:8> 'unsigned char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x13e826aa0 <col:7, col:8> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x13e826a88 <col:8> 'unsigned char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x13e826a68 <col:8> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     | `-IntegerLiteral 0x13e826ab8 <col:13> 'int' 0
    |     |-CompoundStmt 0x13e829600 <col:19, line:35:3>
    |     | |-UnaryOperator 0x13e826b48 <line:13:4, col:18> 'int' postfix '--'
    |     | | `-DeclRefExpr 0x13e826b28 <col:4> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     | |-UnaryOperator 0x13e826b80 <line:14:4, col:5> 'unsigned char *' postfix '++'
    |     | | `-DeclRefExpr 0x13e826b60 <col:4> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     | `-SwitchStmt 0x13e826c18 <line:16:4, line:34:4>
    |     |   |-ImplicitCastExpr 0x13e826c00 <line:16:12, col:13> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x13e826be8 <col:12, col:13> 'unsigned char' <LValueToRValue>
    |     |   |   `-UnaryOperator 0x13e826bd0 <col:12, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |     |   |     `-ImplicitCastExpr 0x13e826bb8 <col:13> 'unsigned char *' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x13e826b98 <col:13> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |   `-CompoundStmt 0x13e829590 <col:16, line:34:4>
    |     |     |-BinaryOperator 0x13e826f68 <line:18:5, col:68> 'int' '='
    |     |     | |-DeclRefExpr 0x13e826c70 <col:5> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     | `-CallExpr 0x13e826f18 <col:11, col:68> 'int'
    |     |     |   |-ImplicitCastExpr 0x13e826f00 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |     |   | `-DeclRefExpr 0x13e826da0 <col:11> 'int ()' Function 0x13e826ce8 'rose_parse_national' 'int ()'
    |     |     |   |-BinaryOperator 0x13e826e18 <col:31, col:35> 'unsigned char *' '+'
    |     |     |   | |-ImplicitCastExpr 0x13e826e00 <col:31> 'unsigned char *' <LValueToRValue>
    |     |     |   | | `-DeclRefExpr 0x13e826dc0 <col:31> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |     |   | `-IntegerLiteral 0x13e826de0 <col:35> 'int' 1
    |     |     |   |-ImplicitCastExpr 0x13e826f50 <col:38> 'struct rose_facilities_struct *' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e826e38 <col:38> 'struct rose_facilities_struct *' lvalue ParmVar 0x13e80e2f8 'facilities' 'struct rose_facilities_struct *'
    |     |     |   `-BinaryOperator 0x13e826eb0 <col:50, col:67> 'int' '-'
    |     |     |     |-ImplicitCastExpr 0x13e826e98 <col:50> 'int' <LValueToRValue>
    |     |     |     | `-DeclRefExpr 0x13e826e58 <col:50> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     |     |     `-IntegerLiteral 0x13e826e78 <col:67> 'int' 1
    |     |     |-CompoundAssignOperator 0x13e827020 <line:19:5, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |     | |-DeclRefExpr 0x13e826f88 <col:5> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     |     | `-BinaryOperator 0x13e827000 <col:23, col:29> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x13e826fe8 <col:23> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e826fa8 <col:23> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x13e826fc8 <col:29> 'int' 1
    |     |     |-CompoundAssignOperator 0x13e8270e8 <line:20:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |     | |-DeclRefExpr 0x13e827050 <col:5> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |     | `-BinaryOperator 0x13e8270c8 <col:10, col:16> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x13e8270b0 <col:10> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e827070 <col:10> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x13e827090 <col:16> 'int' 1
    |     |     |-BreakStmt 0x13e827118 <line:21:5>
    |     |     |-BinaryOperator 0x13e8273d0 <line:24:5, col:65> 'int' '='
    |     |     | |-DeclRefExpr 0x13e827138 <col:5> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     | `-CallExpr 0x13e827380 <col:11, col:65> 'int'
    |     |     |   |-ImplicitCastExpr 0x13e827368 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |     |   | `-DeclRefExpr 0x13e827238 <col:11> 'int ()' Function 0x13e827180 'rose_parse_ccitt' 'int ()'
    |     |     |   |-BinaryOperator 0x13e8272b0 <col:28, col:32> 'unsigned char *' '+'
    |     |     |   | |-ImplicitCastExpr 0x13e827298 <col:28> 'unsigned char *' <LValueToRValue>
    |     |     |   | | `-DeclRefExpr 0x13e827258 <col:28> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |     |   | `-IntegerLiteral 0x13e827278 <col:32> 'int' 1
    |     |     |   |-ImplicitCastExpr 0x13e8273b8 <col:35> 'struct rose_facilities_struct *' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e8272d0 <col:35> 'struct rose_facilities_struct *' lvalue ParmVar 0x13e80e2f8 'facilities' 'struct rose_facilities_struct *'
    |     |     |   `-BinaryOperator 0x13e827348 <col:47, col:64> 'int' '-'
    |     |     |     |-ImplicitCastExpr 0x13e827330 <col:47> 'int' <LValueToRValue>
    |     |     |     | `-DeclRefExpr 0x13e8272f0 <col:47> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     |     |     `-IntegerLiteral 0x13e827310 <col:64> 'int' 1
    |     |     |-CompoundAssignOperator 0x13e827488 <line:25:5, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |     | |-DeclRefExpr 0x13e8273f0 <col:5> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     |     | `-BinaryOperator 0x13e827468 <col:23, col:29> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x13e827450 <col:23> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e827410 <col:23> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x13e827430 <col:29> 'int' 1
    |     |     |-CompoundAssignOperator 0x13e827550 <line:26:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |     | |-DeclRefExpr 0x13e8274b8 <col:5> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |     | `-BinaryOperator 0x13e827530 <col:10, col:16> 'int' '+'
    |     |     |   |-ImplicitCastExpr 0x13e827518 <col:10> 'int' <LValueToRValue>
    |     |     |   | `-DeclRefExpr 0x13e8274d8 <col:10> 'int' lvalue Var 0x13e8267d0 'len' 'int'
    |     |     |   `-IntegerLiteral 0x13e8274f8 <col:16> 'int' 1
    |     |     |-BreakStmt 0x13e827580 <line:27:5>
    |     |     |-DefaultStmt 0x13e8294f8 <line:29:4, col:11>
    |     |     | `-NullStmt 0x13e8294f0 <col:11>
    |     |     |-UnaryOperator 0x13e829538 <line:31:5, col:19> 'int' postfix '--'
    |     |     | `-DeclRefExpr 0x13e829518 <col:5> 'int' lvalue Var 0x13e826750 'facilities_len' 'int'
    |     |     |-UnaryOperator 0x13e829570 <line:32:5, col:6> 'unsigned char *' postfix '++'
    |     |     | `-DeclRefExpr 0x13e829550 <col:5> 'unsigned char *' lvalue ParmVar 0x13e80dd08 'p' 'unsigned char *'
    |     |     `-BreakStmt 0x13e829588 <line:33:5>
    |     `-BreakStmt 0x13e829628 <line:36:4>
    `-ReturnStmt 0x13e8296b8 <line:39:2, col:9>
      `-IntegerLiteral 0x13e829698 <col:9> 'int' 1
