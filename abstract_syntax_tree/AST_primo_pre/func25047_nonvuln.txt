`-FunctionDecl 0x11e00dfa8  line:1:5 invalid regexec 'int (int *, const char *, int *, int)'
  |-ParmVarDecl 0x11e00dd28 <col:13, col:21> col:21 invalid prog 'int *'
  |-ParmVarDecl 0x11e00dda8 <col:27, col:39> col:39 used sp 'const char *'
  |-ParmVarDecl 0x11e00de28 <col:43, col:50> col:50 referenced invalid sub 'int *'
  |-ParmVarDecl 0x11e00dea8 <col:55, col:59> col:59 used eflags 'int'
  `-CompoundStmt 0x11e028120 <line:2:1, line:14:1>
    |-DeclStmt 0x11e00e0f0 <line:4:2, col:7>
    | `-VarDecl 0x11e00e088 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x11e00e2b0 <line:9:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11e00e200 <col:2, col:7> '<dependent type>' contains-errors lvalue ->nsub
    | | `-RecoveryExpr 0x11e00e1d8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11e00e1b8 <col:2> 'int *' lvalue ParmVar 0x11e00de28 'sub' 'int *'
    | `-CXXDependentScopeMemberExpr 0x11e00e268 <col:14, col:20> '<dependent type>' contains-errors lvalue ->nsub
    |   `-RecoveryExpr 0x11e00e248 <col:14> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x11e027d80 <line:10:2, line:11:37>
    | |-BinaryOperator 0x11e00e310 <line:10:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x11e00e2d0 <col:7> 'int' lvalue Var 0x11e00e088 'i' 'int'
    | | `-IntegerLiteral 0x11e00e2f0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11e00e3a8 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x11e00e330 <col:14> 'int' lvalue Var 0x11e00e088 'i' 'int'
    | | `-RecoveryExpr 0x11e00e388 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x11e00e3e8 <col:30, col:32> 'int' prefix '++'
    | | `-DeclRefExpr 0x11e00e3c8 <col:32> 'int' lvalue Var 0x11e00e088 'i' 'int'
    | `-BinaryOperator 0x11e027d60 <line:11:3, col:37> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x11e027c40 <col:3, col:15> '<dependent type>' contains-errors lvalue .sp
    |   | `-ArraySubscriptExpr 0x11e027c20 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x11e027bf0 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x11e027848 <col:3, col:8> '<dependent type>' contains-errors lvalue ->sub
    |   |   |   `-RecoveryExpr 0x11e027820 <col:3> '<dependent type>' contains-errors lvalue
    |   |   |     `-DeclRefExpr 0x11e027800 <col:3> 'int *' lvalue ParmVar 0x11e00de28 'sub' 'int *'
    |   |   `-ImplicitCastExpr 0x11e027c08 <col:12> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x11e027890 <col:12> 'int' lvalue Var 0x11e00e088 'i' 'int'
    |   `-BinaryOperator 0x11e027d40 <col:20, col:37> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x11e027cd8 <col:20, col:32> '<dependent type>' contains-errors lvalue .ep
    |     | `-ArraySubscriptExpr 0x11e027cb8 <col:20, col:30> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x11e027c88 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-CXXDependentScopeMemberExpr 0x11e027968 <col:20, col:25> '<dependent type>' contains-errors lvalue ->sub
    |     |   |   `-RecoveryExpr 0x11e027948 <col:20> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x11e027ca0 <col:29> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x11e0279b0 <col:29> 'int' lvalue Var 0x11e00e088 'i' 'int'
    |     `-RecoveryExpr 0x11e027d20 <col:37> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11e028110 <line:13:2, col:64>
      `-CallExpr 0x11e0280c0 <col:9, col:64> '<dependent type>' contains-errors
        |-DeclRefExpr 0x11e027f10 <col:9> 'int ()' Function 0x11e027e58 'match' 'int ()'
        |-CXXDependentScopeMemberExpr 0x11e027f50 <col:15, col:21> '<dependent type>' contains-errors lvalue ->start
        | `-RecoveryExpr 0x11e027f30 <col:15> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x11e027f98 <col:28> 'const char *' lvalue ParmVar 0x11e00dda8 'sp' 'const char *'
        |-DeclRefExpr 0x11e027fb8 <col:32> 'const char *' lvalue ParmVar 0x11e00dda8 'sp' 'const char *'
        |-BinaryOperator 0x11e028060 <col:36, col:50> '<dependent type>' contains-errors '|'
        | |-CXXDependentScopeMemberExpr 0x11e027ff8 <col:36, col:42> '<dependent type>' contains-errors lvalue ->flags
        | | `-RecoveryExpr 0x11e027fd8 <col:36> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x11e028040 <col:50> 'int' lvalue ParmVar 0x11e00dea8 'eflags' 'int'
        |-RecoveryExpr 0x11e028080 <col:58> '<dependent type>' contains-errors lvalue
        `-IntegerLiteral 0x11e0280a0 <col:63> 'int' 0
