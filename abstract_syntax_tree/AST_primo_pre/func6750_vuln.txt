`-FunctionDecl 0x151928318  line:1:12 invalid jas_cmshapmatlut_invert 'int (int *, int *, int)' static
  |-ParmVarDecl 0x151928128 <col:36, col:56> col:56 referenced invalid invlut 'int *'
  |-ParmVarDecl 0x1519281a8 <line:2:3, col:23> col:23 invalid lut 'int *'
  |-ParmVarDecl 0x151928228 <col:28, col:32> col:32 used n 'int'
  `-CompoundStmt 0x151945c68 <line:3:1, line:70:1>
    |-DeclStmt 0x151928458 <line:4:2, col:7>
    | `-VarDecl 0x1519283f0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x1519284f0 <line:5:2, col:7>
    | `-VarDecl 0x151928488 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x151928588 <line:6:2, col:7>
    | `-VarDecl 0x151928520 <col:2, col:6> col:6 used k 'int'
    |-CallExpr 0x151941800 <line:13:2, col:15> 'int'
    | |-ImplicitCastExpr 0x1519287d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x151928700 <col:2> 'int ()' Function 0x151928648 'assert' 'int ()'
    | `-BinaryOperator 0x151928778 <col:9, col:14> 'int' '>='
    |   |-ImplicitCastExpr 0x151928760 <col:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x151928720 <col:9> 'int' lvalue ParmVar 0x151928228 'n' 'int'
    |   `-IntegerLiteral 0x151928740 <col:14> 'int' 2
    |-IfStmt 0x151941b10 <line:14:2, line:17:2>
    | |-CXXDependentScopeMemberExpr 0x151941848 <line:14:6, col:14> '<dependent type>' contains-errors lvalue ->data
    | | `-RecoveryExpr 0x151941828 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x151941af0 <col:20, line:17:2>
    |   |-CallExpr 0x1519419f8 <line:15:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941970 <col:3> 'int ()' Function 0x1519418b8 'jas_free' 'int ()'
    |   | `-CXXDependentScopeMemberExpr 0x1519419b0 <col:12, col:20> '<dependent type>' contains-errors lvalue ->data
    |   |   `-RecoveryExpr 0x151941990 <col:12> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x151941ad0 <line:16:3, col:18> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x151941a68 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data
    |     | `-RecoveryExpr 0x151941a40 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x151941a20 <col:3> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'
    |     `-IntegerLiteral 0x151941ab0 <col:18> 'int' 0
    |-ForStmt 0x151941fa0 <line:19:2, line:24:2>
    | |-BinaryOperator 0x151941b70 <line:19:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x151941b30 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | | `-IntegerLiteral 0x151941b50 <col:11> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x151941c18 <col:14, col:23> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x151941b90 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x151941bd0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->size
    | |   `-RecoveryExpr 0x151941bb0 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x151941c58 <col:29, col:31> 'int' prefix '++'
    | | `-DeclRefExpr 0x151941c38 <col:31> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | `-CompoundStmt 0x151941f88 <col:34, line:24:2>
    |   `-IfStmt 0x151941f68 <line:20:3, line:23:3>
    |     |-BinaryOperator 0x151941e60 <line:20:7, col:37> 'int' contains-errors '>'
    |     | |-ArraySubscriptExpr 0x151941d68 <col:7, col:22> '<dependent type>' contains-errors lvalue
    |     | | |-ImplicitCastExpr 0x151941d50 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | `-CXXDependentScopeMemberExpr 0x151941c90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->data
    |     | | |   `-RecoveryExpr 0x151941c70 <col:7> '<dependent type>' contains-errors lvalue
    |     | | `-BinaryOperator 0x151941d30 <col:17, col:21> 'int' '-'
    |     | |   |-ImplicitCastExpr 0x151941d18 <col:17> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x151941cd8 <col:17> 'int' lvalue Var 0x1519283f0 'i' 'int'
    |     | |   `-IntegerLiteral 0x151941cf8 <col:21> 'int' 1
    |     | `-ArraySubscriptExpr 0x151941e40 <col:26, col:37> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x151941e10 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-CXXDependentScopeMemberExpr 0x151941da8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->data
    |     |   |   `-RecoveryExpr 0x151941d88 <col:26> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x151941e28 <col:36> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x151941df0 <col:36> 'int' lvalue Var 0x1519283f0 'i' 'int'
    |     `-CompoundStmt 0x151941f48 <col:40, line:23:3>
    |       |-CallExpr 0x151941ed8 <line:21:4, col:12> 'int'
    |       | |-ImplicitCastExpr 0x151941ec0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x151941e80 <col:4> 'int ()' Function 0x151928648 'assert' 'int ()'
    |       | `-IntegerLiteral 0x151941ea0 <col:11> 'int' 0
    |       `-ReturnStmt 0x151941f38 <line:22:4, col:12>
    |         `-UnaryOperator 0x151941f20 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x151941f00 <col:12> 'int' 1
    |-IfStmt 0x1519421e0 <line:25:2, line:26:11>
    | |-RecoveryExpr 0x151942178 <line:25:6, col:59> '_Bool' contains-errors
    | `-ReturnStmt 0x1519421d0 <line:26:3, col:11>
    |   `-UnaryOperator 0x1519421b8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x151942198 <col:11> 'int' 1
    |-BinaryOperator 0x1519422b0 <line:27:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x151942248 <col:2, col:10> '<dependent type>' contains-errors lvalue ->size
    | | `-RecoveryExpr 0x151942220 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x151942200 <col:2> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'
    | `-DeclRefExpr 0x151942290 <col:17> 'int' lvalue ParmVar 0x151928228 'n' 'int'
    |-ForStmt 0x151945c00 <line:28:2, line:62:2>
    | |-BinaryOperator 0x151942310 <line:28:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1519422d0 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | | `-IntegerLiteral 0x1519422f0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1519423b8 <col:14, col:26> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x151942330 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x151942370 <col:18, col:26> '<dependent type>' contains-errors lvalue ->size
    | |   `-RecoveryExpr 0x151942350 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1519423f8 <col:32, col:34> 'int' prefix '++'
    | | `-DeclRefExpr 0x1519423d8 <col:34> 'int' lvalue Var 0x1519283f0 'i' 'int'
    | `-CompoundStmt 0x1519457e8 <col:37, line:62:2>
    |   `-ForStmt 0x1519456b0 <line:31:3, line:60:3>
    |     |-BinaryOperator 0x1519425f0 <line:31:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x1519425b0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'
    |     | `-IntegerLiteral 0x1519425d0 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x151942698 <col:15, col:24> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x151942610 <col:15> 'int' lvalue Var 0x151928488 'j' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x151942650 <col:19, col:24> '<dependent type>' contains-errors lvalue ->size
    |     |   `-RecoveryExpr 0x151942630 <col:19> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x1519426d8 <col:30, col:32> 'int' prefix '++'
    |     | `-DeclRefExpr 0x1519426b8 <col:32> 'int' lvalue Var 0x151928488 'j' 'int'
    |     `-CompoundStmt 0x151945690 <col:35, line:60:3>
    |       |-IfStmt 0x151945080 <line:33:4, line:49:4>
    |       | |-BinaryOperator 0x151944860 <line:33:8, col:14> 'int' contains-errors '=='
    |       | | |-RecoveryExpr 0x151944820 <col:8> '<dependent type>' contains-errors lvalue
    |       | | `-RecoveryExpr 0x151944840 <col:14> '<dependent type>' contains-errors lvalue
    |       | `-CompoundStmt 0x151945058 <col:18, line:49:4>
    |       |   |-ForStmt 0x151944be0 <line:34:5, line:41:5>
    |       |   | |-BinaryOperator 0x151944918 <line:34:10, col:18> 'int' '='
    |       |   | | |-DeclRefExpr 0x151944880 <col:10> 'int' lvalue Var 0x151928520 'k' 'int'
    |       |   | | `-BinaryOperator 0x1519448f8 <col:14, col:18> 'int' '+'
    |       |   | |   |-ImplicitCastExpr 0x1519448e0 <col:14> 'int' <LValueToRValue>
    |       |   | |   | `-DeclRefExpr 0x1519448a0 <col:14> 'int' lvalue Var 0x151928488 'j' 'int'
    |       |   | |   `-IntegerLiteral 0x1519448c0 <col:18> 'int' 1
    |       |   | |-<<<NULL>>>
    |       |   | |-BinaryOperator 0x1519449c0 <col:21, col:30> 'int' contains-errors '<'
    |       |   | | |-DeclRefExpr 0x151944938 <col:21> 'int' lvalue Var 0x151928520 'k' 'int'
    |       |   | | `-CXXDependentScopeMemberExpr 0x151944978 <col:25, col:30> '<dependent type>' contains-errors lvalue ->size
    |       |   | |   `-RecoveryExpr 0x151944958 <col:25> '<dependent type>' contains-errors lvalue
    |       |   | |-UnaryOperator 0x151944a00 <col:36, col:38> 'int' prefix '++'
    |       |   | | `-DeclRefExpr 0x1519449e0 <col:38> 'int' lvalue Var 0x151928520 'k' 'int'
    |       |   | `-CompoundStmt 0x151944bc8 <col:41, line:41:5>
    |       |   |   `-IfStmt 0x151944ba8 <line:36:6, line:37:7>
    |       |   |     |-BinaryOperator 0x151944b80 <line:36:10, col:16> 'int' contains-errors '!='
    |       |   |     | |-RecoveryExpr 0x151944b40 <col:10> '<dependent type>' contains-errors lvalue
    |       |   |     | `-RecoveryExpr 0x151944b60 <col:16> '<dependent type>' contains-errors lvalue
    |       |   |     `-BreakStmt 0x151944ba0 <line:37:7>
    |       |   |-IfStmt 0x151945030 <line:42:5, line:47:5>
    |       |   | |-BinaryOperator 0x151944ca0 <line:42:9, col:18> 'int' contains-errors '<'
    |       |   | | |-DeclRefExpr 0x151944c18 <col:9> 'int' lvalue Var 0x151928520 'k' 'int'
    |       |   | | `-CXXDependentScopeMemberExpr 0x151944c58 <col:13, col:18> '<dependent type>' contains-errors lvalue ->size
    |       |   | |   `-RecoveryExpr 0x151944c38 <col:13> '<dependent type>' contains-errors lvalue
    |       |   | `-CompoundStmt 0x151945018 <col:24, line:47:5>
    |       |   |   `-UnaryOperator 0x151944ce0 <line:43:6, col:8> 'int' prefix '--'
    |       |   |     `-DeclRefExpr 0x151944cc0 <col:8> 'int' lvalue Var 0x151928520 'k' 'int'
    |       |   `-BreakStmt 0x151945050 <line:48:5>
    |       `-IfStmt 0x151945670 <line:50:4, line:59:4>
    |         |-BinaryOperator 0x151945168 <line:50:8, col:24> 'int' contains-errors '<'
    |         | |-DeclRefExpr 0x1519450a0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'
    |         | `-BinaryOperator 0x151945148 <col:12, col:24> '<dependent type>' contains-errors '-'
    |         |   |-CXXDependentScopeMemberExpr 0x1519450e0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->size
    |         |   | `-RecoveryExpr 0x1519450c0 <col:12> '<dependent type>' contains-errors lvalue
    |         |   `-IntegerLiteral 0x151945128 <col:24> 'int' 1
    |         `-CompoundStmt 0x151945658 <col:27, line:59:4>
    |           `-IfStmt 0x151945638 <line:52:5, line:58:5>
    |             |-RecoveryExpr 0x1519452a0 <line:52:9, col:25> '_Bool' contains-errors
    |             `-CompoundStmt 0x151945620 <col:29, line:58:5>
    |               `-BreakStmt 0x151945618 <line:57:6>
    `-ReturnStmt 0x151945c58 <line:69:2, col:9>
      `-IntegerLiteral 0x151945c38 <col:9> 'int' 0
