`-FunctionDecl 0x14200dfe0  line:1:6 invalid hashTypeTryConversion 'void (int *, int **, int, int)'
  |-ParmVarDecl 0x14200dd28 <col:28, col:34> col:34 invalid o 'int *'
  |-ParmVarDecl 0x14200dde0 <col:37, col:44> col:44 invalid argv 'int **'
  |-ParmVarDecl 0x14200de60 <col:50, col:54> col:54 used start 'int'
  |-ParmVarDecl 0x14200dee0 <col:61, col:65> col:65 used end 'int'
  `-CompoundStmt 0x142027df0 <col:70, line:14:1>
    |-DeclStmt 0x14200e128 <line:2:5, col:10>
    | `-VarDecl 0x14200e0c0 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14200e230 <line:4:5, col:46>
    | |-BinaryOperator 0x14200e200 <col:9, col:24> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14200e160 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encoding
    | | | `-RecoveryExpr 0x14200e140 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14200e1e0 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14200e220 <col:46>
    `-ForStmt 0x142027db8 <line:6:5, line:13:5>
      |-BinaryOperator 0x14200e2a8 <line:6:10, col:14> 'int' '='
      | |-DeclRefExpr 0x14200e250 <col:10> 'int' lvalue Var 0x14200e0c0 'i' 'int'
      | `-ImplicitCastExpr 0x14200e290 <col:14> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14200e270 <col:14> 'int' lvalue ParmVar 0x14200de60 'start' 'int'
      |-<<<NULL>>>
      |-BinaryOperator 0x14200e338 <col:21, col:26> 'int' '<='
      | |-ImplicitCastExpr 0x14200e308 <col:21> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14200e2c8 <col:21> 'int' lvalue Var 0x14200e0c0 'i' 'int'
      | `-ImplicitCastExpr 0x14200e320 <col:26> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14200e2e8 <col:26> 'int' lvalue ParmVar 0x14200dee0 'end' 'int'
      |-UnaryOperator 0x14200e378 <col:31, col:32> 'int' postfix '++'
      | `-DeclRefExpr 0x14200e358 <col:31> 'int' lvalue Var 0x14200e0c0 'i' 'int'
      `-CompoundStmt 0x142027da0 <col:36, line:13:5>
        `-IfStmt 0x142027d80 <line:7:9, line:12:9>
          |-BinaryOperator 0x142027b80 <line:7:13, line:8:43> 'int' contains-errors '&&'
          | |-CallExpr 0x142027a10 <line:7:13, col:37> '<dependent type>' contains-errors
          | | |-DeclRefExpr 0x142027510 <col:13> 'int ()' Function 0x142027458 'sdsEncodedObject' 'int ()'
          | | `-ArraySubscriptExpr 0x1420279f0 <col:30, col:36> '<dependent type>' contains-errors lvalue
          | |   |-ImplicitCastExpr 0x1420279c0 <col:30> '<dependent type>' contains-errors <LValueToRValue>
          | |   | `-RecoveryExpr 0x142027530 <col:30> '<dependent type>' contains-errors lvalue
          | |   `-ImplicitCastExpr 0x1420279d8 <col:35> 'int' <LValueToRValue>
          | |     `-DeclRefExpr 0x142027550 <col:35> 'int' lvalue Var 0x14200e0c0 'i' 'int'
          | `-BinaryOperator 0x142027b60 <line:8:13, col:43> 'int' contains-errors '>'
          |   |-CallExpr 0x142027ad0 <col:13, col:32> '<dependent type>' contains-errors
          |   | |-DeclRefExpr 0x1420276c8 <col:13> 'int ()' Function 0x142027610 'sdslen' 'int ()'
          |   | `-CXXDependentScopeMemberExpr 0x142027a88 <col:20, col:29> '<dependent type>' contains-errors lvalue ->ptr
          |   |   `-ArraySubscriptExpr 0x142027a68 <col:20, col:26> '<dependent type>' contains-errors lvalue
          |   |     |-ImplicitCastExpr 0x142027a38 <col:20> '<dependent type>' contains-errors <LValueToRValue>
          |   |     | `-RecoveryExpr 0x1420276e8 <col:20> '<dependent type>' contains-errors lvalue
          |   |     `-ImplicitCastExpr 0x142027a50 <col:25> 'int' <LValueToRValue>
          |   |       `-DeclRefExpr 0x142027708 <col:25> 'int' lvalue Var 0x14200e0c0 'i' 'int'
          |   `-CXXDependentScopeMemberExpr 0x142027b18 <col:36, col:43> '<dependent type>' contains-errors lvalue .hash_max_ziplist_value
          |     `-RecoveryExpr 0x142027af8 <col:36> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x142027d60 <line:9:9, line:12:9>
            |-CallExpr 0x142027d28 <line:10:13, col:47> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x142027c80 <col:13> 'int ()' Function 0x142027bc8 'hashTypeConvert' 'int ()'
            | |-RecoveryExpr 0x142027ca0 <col:29> '<dependent type>' contains-errors lvalue
            | `-RecoveryExpr 0x142027d08 <col:32> '<dependent type>' contains-errors lvalue
            `-BreakStmt 0x142027d58 <line:11:13>
