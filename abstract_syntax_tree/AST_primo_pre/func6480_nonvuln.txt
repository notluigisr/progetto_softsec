`-FunctionDecl 0x135814d50  line:1:13 lp_attach 'void (struct parport *)' static
  |-ParmVarDecl 0x135814c48 <col:24, col:40> col:40 used port 'struct parport *'
  `-CompoundStmt 0x135831240 <line:2:1, line:29:1>
    |-DeclStmt 0x1358306c8 <line:3:2, col:16>
    | `-VarDecl 0x135830660 <col:2, col:15> col:15 used i 'unsigned int'
    `-SwitchStmt 0x135830750 <line:5:2, line:28:2>
      |-RecoveryExpr 0x135830730 <line:5:10, col:22> 'int' contains-errors
      `-CompoundStmt 0x135831208 <col:25, line:28:2>
        |-IfStmt 0x1358309e0 <line:8:3, line:10:4>
        | |-RecoveryExpr 0x1358309b0 <line:8:7, line:9:36> '_Bool' contains-errors
        | `-ReturnStmt 0x1358309d0 <line:10:4>
        |-IfStmt 0x135830c20 <line:11:3, line:14:3>
        | |-BinaryOperator 0x135830a90 <line:11:7, col:19> 'int' contains-errors '=='
        | | |-RecoveryExpr 0x135830a50 <col:7> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x135830a70 <col:19> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x135830c08 <col:26, line:14:3>
        |   `-ReturnStmt 0x135830bf8 <line:13:4>
        |-BreakStmt 0x135830e28 <line:17:3>
        |-DefaultStmt 0x1358311e0 <line:19:2, line:26:3>
        | `-ForStmt 0x1358311a8 <line:20:3, line:26:3>
        |   |-BinaryOperator 0x135830e88 <line:20:8, col:12> 'unsigned int' '='
        |   | |-DeclRefExpr 0x135830e30 <col:8> 'unsigned int' lvalue Var 0x135830660 'i' 'unsigned int'
        |   | `-ImplicitCastExpr 0x135830e70 <col:12> 'unsigned int' <IntegralCast>
        |   |   `-IntegerLiteral 0x135830e50 <col:12> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x135830f20 <col:15, col:19> 'int' contains-errors '<'
        |   | |-DeclRefExpr 0x135830ea8 <col:15> 'unsigned int' lvalue Var 0x135830660 'i' 'unsigned int'
        |   | `-RecoveryExpr 0x135830f00 <col:19> '<dependent type>' contains-errors lvalue
        |   |-UnaryOperator 0x135830f60 <col:26, col:27> 'unsigned int' postfix '++'
        |   | `-DeclRefExpr 0x135830f40 <col:26> 'unsigned int' lvalue Var 0x135830660 'i' 'unsigned int'
        |   `-CompoundStmt 0x135831190 <col:31, line:26:3>
        |     `-IfStmt 0x135831170 <line:21:4, line:25:4>
        |       |-RecoveryExpr 0x135831010 <line:21:8, col:36> '_Bool' contains-errors
        |       `-CompoundStmt 0x135831158 <col:39, line:25:4>
        |         `-BreakStmt 0x135831150 <line:24:5>
        `-BreakStmt 0x135831200 <line:27:3>
