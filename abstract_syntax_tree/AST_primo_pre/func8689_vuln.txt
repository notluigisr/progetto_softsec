`-FunctionDecl 0x14c1283f8  line:1:14 invalid EvalQuantized 'int (int *, int *, int *, const int)'
  |-ParmVarDecl 0x14c128128 <col:28, col:43> col:43 invalid context 'int *'
  |-ParmVarDecl 0x14c1281a8 <col:52, col:64> col:64 invalid node 'int *'
  |-ParmVarDecl 0x14c128228 <line:2:28, col:36> col:36 invalid data 'int *'
  |-ParmVarDecl 0x14c1282a8 <col:42, <invalid sloc>> col:60 invalid 'const int'
  `-CompoundStmt 0x14c142868 <line:5:75, line:24:1>
    `-IfStmt 0x14c142838 <line:6:3, line:22:3> has_else
      |-BinaryOperator 0x14c1285e0 <line:6:7, col:20> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x14c128578 <col:7, col:12> '<dependent type>' contains-errors lvalue ->type
      | | `-RecoveryExpr 0x14c128558 <col:7> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14c1285c0 <col:20> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x14c142498 <col:36, line:15:3>
      `-IfStmt 0x14c142808 <col:10, line:22:3> has_else
        |-RecoveryExpr 0x14c1424a8 <line:15:14, col:27> '_Bool' contains-errors
        |-CompoundStmt 0x14c142628 <col:40, line:18:3>
        `-CompoundStmt 0x14c1427f0 <col:10, line:22:3>
          `-CallExpr 0x14c1427c0 <line:19:5, line:20:23> '<dependent type>' contains-errors
            |-DeclRefExpr 0x14c142718 <line:19:5> 'int ()' Function 0x14c142660 'TF_LITE_KERNEL_LOG' 'int ()'
            |-RecoveryExpr 0x14c142738 <line:20:9> '<dependent type>' contains-errors lvalue
            `-StringLiteral 0x14c1427a0 <col:18> 'char[4]' lvalue "STR"
