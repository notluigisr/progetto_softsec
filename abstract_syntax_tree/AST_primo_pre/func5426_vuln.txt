`-FunctionDecl 0x11d82b758  line:1:5 invalid evm_update_evmxattr 'int (struct dentry *, const char *, const char *, int)'
  |-ParmVarDecl 0x11d80e248 <col:25, col:40> col:40 used dentry 'struct dentry *'
  |-ParmVarDecl 0x11d80e2c8 <col:48, col:60> col:60 used xattr_name 'const char *'
  |-ParmVarDecl 0x11d80e348 <line:2:4, col:16> col:16 used xattr_value 'const char *'
  |-ParmVarDecl 0x11d82b600 <col:29, col:36> col:36 invalid xattr_value_len 'int'
  `-CompoundStmt 0x11d82d7d8 <line:3:1, line:19:1>
    |-DeclStmt 0x11d82ba68 <line:4:2, col:39>
    | |-RecordDecl 0x11d82b820 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x11d82b988 <col:2, col:32> col:16 used inode 'struct inode *' cinit
    |   `-RecoveryExpr 0x11d82ba28 <col:24, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11d82b9f0 <col:24> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |-DeclStmt 0x11d82bbf8 <line:5:2, col:38>
    | |-RecordDecl 0x11d82ba80 <col:2, col:9> col:9 struct evm_ima_xattr_data
    | `-VarDecl 0x11d82bb78 <col:2, col:28> col:28 referenced invalid xattr_data 'struct evm_ima_xattr_data'
    |-DeclStmt 0x11d82bcb0 <line:6:2, col:12>
    | `-VarDecl 0x11d82bc28 <col:2, col:11> col:6 used rc 'int' cinit
    |   `-IntegerLiteral 0x11d82bc90 <col:11> 'int' 0
    |-BinaryOperator 0x11d82bf90 <line:8:2, line:9:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x11d82bcc8 <line:8:2> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | `-CallExpr 0x11d82bf48 <col:7, line:9:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11d82be40 <line:8:7> 'int ()' Function 0x11d82bd88 'evm_calc_hmac' 'int ()'
    |   |-DeclRefExpr 0x11d82be60 <col:21> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x11d82be80 <col:29> 'const char *' lvalue ParmVar 0x11d80e2c8 'xattr_name' 'const char *'
    |   |-DeclRefExpr 0x11d82bea0 <col:41> 'const char *' lvalue ParmVar 0x11d80e348 'xattr_value' 'const char *'
    |   |-RecoveryExpr 0x11d82bec0 <line:9:7> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x11d82bf00 <col:24, col:35> '<dependent type>' contains-errors lvalue .digest
    |     `-RecoveryExpr 0x11d82bee0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11d82d760 <line:10:2, line:17:55> has_else
    | |-BinaryOperator 0x11d82c008 <line:10:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x11d82bff0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11d82bfb0 <col:6> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | | `-IntegerLiteral 0x11d82bfd0 <col:12> 'int' 0
    | |-CompoundStmt 0x11d82c430 <col:15, line:15:2>
    | | |-BinaryOperator 0x11d82c110 <line:11:3, col:21> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x11d82c070 <col:3, col:14> '<dependent type>' contains-errors lvalue .type
    | | | | `-RecoveryExpr 0x11d82c048 <col:3> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x11d82c028 <col:3> 'struct evm_ima_xattr_data' lvalue Var 0x11d82bb78 'xattr_data' 'struct evm_ima_xattr_data'
    | | | `-RecoveryExpr 0x11d82c0f0 <col:21> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x11d82c410 <line:12:3, line:14:30> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x11d82c130 <line:12:3> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    | |   `-CallExpr 0x11d82c3c8 <col:8, line:14:30> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x11d82c230 <line:12:8> 'int ()' Function 0x11d82c178 '__vfs_setxattr_noperm' 'int ()'
    | |     |-DeclRefExpr 0x11d82c250 <col:30> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    | |     |-RecoveryExpr 0x11d82c3a8 <col:38> '<dependent type>' contains-errors lvalue
    | |     |-UnaryOperator 0x11d82c2a8 <line:13:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     | `-RecoveryExpr 0x11d82c288 <col:10> '<dependent type>' contains-errors lvalue
    | |     |-UnaryExprOrTypeTraitExpr 0x11d82c300 <line:14:9, col:26> 'unsigned long' contains-errors sizeof
    | |     | `-ParenExpr 0x11d82c2e0 <col:15, col:26> '<dependent type>' contains-errors lvalue
    | |     |   `-RecoveryExpr 0x11d82c2c0 <col:16> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x11d82c320 <col:29> 'int' 0
    | `-IfStmt 0x11d82d740 <line:16:7, line:17:55>
    |   |-BinaryOperator 0x11d82c528 <line:16:11, col:18> 'int' contains-errors '=='
    |   | |-DeclRefExpr 0x11d82c450 <col:11> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    |   | `-UnaryOperator 0x11d82c510 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11d82c4f8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11d82c4d8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11d82d720 <line:17:3, col:55> 'int' contains-errors '='
    |     |-DeclRefExpr 0x11d82c548 <col:3> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
    |     `-CallExpr 0x11d82d6f0 <col:8, col:55> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x11d82d600 <col:8, col:21> '<dependent type>' contains-errors lvalue ->removexattr
    |       | `-RecoveryExpr 0x11d82c5a0 <col:8, col:15> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x11d82c568 <col:8> 'struct inode *' contains-errors lvalue Var 0x11d82b988 'inode' 'struct inode *'
    |       |-DeclRefExpr 0x11d82d648 <col:33> 'struct dentry *' lvalue ParmVar 0x11d80e248 'dentry' 'struct dentry *'
    |       `-RecoveryExpr 0x11d82d6d0 <col:41> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11d82d7c8 <line:18:2, col:9>
      `-ImplicitCastExpr 0x11d82d7b0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11d82d790 <col:9> 'int' lvalue Var 0x11d82bc28 'rc' 'int'
