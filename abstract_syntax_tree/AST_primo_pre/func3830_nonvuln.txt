`-FunctionDecl 0x155128ba0  line:1:6 invalid jswrap_graphics_drawImage 'void (int *, int *, int, int)'
  |-ParmVarDecl 0x155128928 <col:32, col:39> col:39 invalid parent 'int *'
  |-ParmVarDecl 0x1551289a8 <col:47, col:54> col:54 invalid image 'int *'
  |-ParmVarDecl 0x155128a28 <col:61, col:65> col:65 used xPos 'int'
  |-ParmVarDecl 0x155128aa8 <col:71, col:75> col:75 used yPos 'int'
  `-CompoundStmt 0x15680a800 <col:81, line:58:1>
    |-IfStmt 0x155128f08 <line:2:19, col:58>
    | |-UnaryOperator 0x155128ee0 <col:23, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x155128eb0 <col:24, col:55> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x155128dc0 <col:24> 'int ()' Function 0x155128d08 'graphicsGetFromVar' 'int ()'
    | |   |-UnaryOperator 0x155128e98 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x155128e78 <col:44> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x155128e10 <col:49> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x155128ef8 <col:58>
    |-IfStmt 0x1558090c0 <line:3:3, line:6:3>
    | |-UnaryOperator 0x155808e78 <line:3:7, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x155808e50 <col:8, col:25> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x155808e10 <col:8> 'int ()' Function 0x155128f50 'jsvIsObject' 'int ()'
    | |   `-RecoveryExpr 0x155808e30 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1558090a0 <col:28, line:6:3>
    |   |-CallExpr 0x155809060 <line:4:5, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x155808f70 <col:5> 'int ()' Function 0x155808eb8 'jsExceptionHere' 'int ()'
    |   | |-RecoveryExpr 0x155809040 <col:21> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x155808ff0 <col:33> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x155809090 <line:5:5>
    |-DeclStmt 0x155809460 <line:7:3, col:83>
    | `-VarDecl 0x1558090f8 <col:3, col:82> col:7 used imageWidth 'int' cinit
    |   `-CStyleCastExpr 0x155809438 <col:20, col:82> 'int' contains-errors <Dependent>
    |     `-CallExpr 0x1558093f8 <col:25, col:82> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x155809240 <col:25> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'
    |       `-CallExpr 0x1558093c0 <col:48, col:81> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x155809340 <col:48> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'
    |         |-RecoveryExpr 0x155809360 <col:66> '<dependent type>' contains-errors lvalue
    |         |-StringLiteral 0x155809380 <col:73> 'char[4]' lvalue "STR"
    |         `-IntegerLiteral 0x1558093a0 <col:80> 'int' 0
    |-DeclStmt 0x155809638 <line:8:3, col:84>
    | `-VarDecl 0x155809490 <col:3, col:83> col:7 used imageHeight 'int' cinit
    |   `-CStyleCastExpr 0x155809610 <col:21, col:83> 'int' contains-errors <Dependent>
    |     `-CallExpr 0x1558095d0 <col:26, col:83> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1558094f8 <col:26> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'
    |       `-CallExpr 0x155809598 <col:49, col:82> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x155809518 <col:49> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'
    |         |-RecoveryExpr 0x155809538 <col:67> '<dependent type>' contains-errors lvalue
    |         |-StringLiteral 0x155809558 <col:74> 'char[4]' lvalue "STR"
    |         `-IntegerLiteral 0x155809578 <col:81> 'int' 0
    |-DeclStmt 0x155809810 <line:9:3, col:81>
    | `-VarDecl 0x155809668 <col:3, col:80> col:7 used imageBpp 'int' cinit
    |   `-CStyleCastExpr 0x1558097e8 <col:18, col:80> 'int' contains-errors <Dependent>
    |     `-CallExpr 0x1558097a8 <col:23, col:80> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1558096d0 <col:23> 'int ()' Function 0x155809188 'jsvGetIntegerAndUnLock' 'int ()'
    |       `-CallExpr 0x155809770 <col:46, col:79> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x1558096f0 <col:46> 'int ()' Function 0x155809288 'jsvObjectGetChild' 'int ()'
    |         |-RecoveryExpr 0x155809710 <col:64> '<dependent type>' contains-errors lvalue
    |         |-StringLiteral 0x155809730 <col:71> 'char[4]' lvalue "STR"
    |         `-IntegerLiteral 0x155809750 <col:78> 'int' 0
    |-DeclStmt 0x155809a00 <line:10:3, col:64>
    | `-VarDecl 0x155809840 <col:3, col:63> col:16 used imageBitMask 'unsigned int' cinit
    |   `-CStyleCastExpr 0x1558099d8 <col:31, col:63> 'unsigned int' contains-errors <IntegralCast>
    |     `-ParenExpr 0x1558099b8 <col:45, col:63> 'long' contains-errors
    |       `-BinaryOperator 0x155809960 <col:46, col:61> 'long' contains-errors '-'
    |         |-ParenExpr 0x155809920 <col:46, col:59> 'long' contains-errors
    |         | `-BinaryOperator 0x155809900 <col:47, col:51> 'long' contains-errors '<<'
    |         |   |-IntegerLiteral 0x1558098a8 <col:47> 'long' 1
    |         |   `-ImplicitCastExpr 0x1558098e8 <col:51> 'int' contains-errors <LValueToRValue>
    |         |     `-DeclRefExpr 0x1558098c8 <col:51> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'
    |         `-IntegerLiteral 0x155809940 <col:61> 'long' 1
    |-DeclStmt 0x155809cc0 <line:13:3, col:76>
    | `-VarDecl 0x155809b00 <col:3, col:16> col:16 used imageTransparentCol 'unsigned int'
    |-CallExpr 0x156808c48 <line:14:3, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x155809db8 <col:3> 'int ()' Function 0x155809d00 'jsvUnLock' 'int ()'
    | `-RecoveryExpr 0x156808c28 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1568090c8 <line:16:3, line:20:3>
    | |-RecoveryExpr 0x156809020 <line:16:7, col:101> '_Bool' contains-errors
    | `-CompoundStmt 0x1568090b0 <col:104, line:20:3>
    |   `-ReturnStmt 0x1568090a0 <line:19:5>
    |-DeclStmt 0x156809360 <line:25:3, col:15>
    | |-VarDecl 0x156809220 <col:3, col:9> col:7 used x 'int' cinit
    | | `-IntegerLiteral 0x156809288 <col:9> 'int' 0
    | `-VarDecl 0x1568092c0 <col:3, col:14> col:12 used y 'int' cinit
    |   `-IntegerLiteral 0x156809328 <col:14> 'int' 0
    |-DeclStmt 0x156809418 <line:26:3, col:13>
    | `-VarDecl 0x156809390 <col:3, col:12> col:7 used bits 'int' cinit
    |   `-IntegerLiteral 0x1568093f8 <col:12> 'int' 0
    |-DeclStmt 0x1568094e8 <line:27:3, col:27>
    | `-VarDecl 0x156809448 <col:3, col:26> col:16 used colData 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x1568094d0 <col:26> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x1568094b0 <col:26> 'int' 0
    `-WhileStmt 0x15680a5c0 <line:30:3, line:54:3>
      |-RecoveryExpr 0x156809840 <line:30:10, col:65> '_Bool' contains-errors
      `-CompoundStmt 0x15680a580 <col:78, line:54:3>
        |-WhileStmt 0x156809c48 <line:32:5, line:36:5>
        | |-BinaryOperator 0x1568098d0 <line:32:12, col:19> 'int' contains-errors '<'
        | | |-ImplicitCastExpr 0x1568098a0 <col:12> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x156809860 <col:12> 'int' lvalue Var 0x156809390 'bits' 'int'
        | | `-ImplicitCastExpr 0x1568098b8 <col:19> 'int' contains-errors <LValueToRValue>
        | |   `-DeclRefExpr 0x156809880 <col:19> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'
        | `-CompoundStmt 0x156809c30 <col:29, line:36:5>
        |   `-CompoundAssignOperator 0x156809c00 <line:35:7, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
        |     |-DeclRefExpr 0x156809ba8 <col:7> 'int' lvalue Var 0x156809390 'bits' 'int'
        |     `-IntegerLiteral 0x156809bc8 <col:15> 'int' 8
        |-DeclStmt 0x156809e68 <line:38:5, col:63>
        | `-VarDecl 0x156809c80 <col:5, col:51> col:18 used col 'unsigned int' cinit
        |   `-BinaryOperator 0x156809e48 <col:24, col:51> 'unsigned int' contains-errors '&'
        |     |-ParenExpr 0x156809df0 <col:24, col:49> 'unsigned int' contains-errors
        |     | `-BinaryOperator 0x156809dd0 <col:25, col:48> 'unsigned int' contains-errors '>>'
        |     |   |-ImplicitCastExpr 0x156809db8 <col:25> 'unsigned int' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x156809ce8 <col:25> 'unsigned int' lvalue Var 0x156809448 'colData' 'unsigned int'
        |     |   `-ParenExpr 0x156809d98 <col:34, col:48> 'int' contains-errors
        |     |     `-BinaryOperator 0x156809d78 <col:35, col:40> 'int' contains-errors '-'
        |     |       |-ImplicitCastExpr 0x156809d48 <col:35> 'int' <LValueToRValue>
        |     |       | `-DeclRefExpr 0x156809d08 <col:35> 'int' lvalue Var 0x156809390 'bits' 'int'
        |     |       `-ImplicitCastExpr 0x156809d60 <col:40> 'int' contains-errors <LValueToRValue>
        |     |         `-DeclRefExpr 0x156809d28 <col:40> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'
        |     `-ImplicitCastExpr 0x156809e30 <col:51> 'unsigned int' contains-errors <LValueToRValue>
        |       `-DeclRefExpr 0x156809e10 <col:51> 'unsigned int' contains-errors lvalue Var 0x155809840 'imageBitMask' 'unsigned int'
        |-CompoundAssignOperator 0x156809ed8 <line:39:5, col:13> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
        | |-DeclRefExpr 0x156809e80 <col:5> 'int' lvalue Var 0x156809390 'bits' 'int'
        | `-ImplicitCastExpr 0x156809ec0 <col:13> 'int' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x156809ea0 <col:13> 'int' contains-errors lvalue Var 0x155809668 'imageBpp' 'int'
        |-IfStmt 0x15680a3c0 <line:41:5, line:45:5>
        | |-RecoveryExpr 0x156809f98 <line:41:9, col:53> '_Bool' contains-errors
        | `-CompoundStmt 0x15680a3b0 <col:58, line:45:5>
        |-UnaryOperator 0x15680a400 <line:47:5, col:6> 'int' postfix '++'
        | `-DeclRefExpr 0x15680a3e0 <col:5> 'int' lvalue Var 0x156809220 'x' 'int'
        `-IfStmt 0x15680a560 <line:48:5, line:52:5>
          |-BinaryOperator 0x15680a488 <line:48:9, col:12> 'int' contains-errors '>='
          | |-ImplicitCastExpr 0x15680a458 <col:9> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x15680a418 <col:9> 'int' lvalue Var 0x156809220 'x' 'int'
          | `-ImplicitCastExpr 0x15680a470 <col:12> 'int' contains-errors <LValueToRValue>
          |   `-DeclRefExpr 0x15680a438 <col:12> 'int' contains-errors lvalue Var 0x1558090f8 'imageWidth' 'int'
          `-CompoundStmt 0x15680a540 <col:24, line:52:5>
            |-BinaryOperator 0x15680a4e8 <line:49:7, col:9> 'int' '='
            | |-DeclRefExpr 0x15680a4a8 <col:7> 'int' lvalue Var 0x156809220 'x' 'int'
            | `-IntegerLiteral 0x15680a4c8 <col:9> 'int' 0
            `-UnaryOperator 0x15680a528 <line:50:7, col:8> 'int' postfix '++'
              `-DeclRefExpr 0x15680a508 <col:7> 'int' lvalue Var 0x1568092c0 'y' 'int'
