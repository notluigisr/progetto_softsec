`-FunctionDecl 0x11f9283a0  line:1:6 invalid spl_object_storage_attach 'void (int *, int *, int *, int *)'
  |-ParmVarDecl 0x11f928128 <col:32, col:54> col:54 invalid intern 'int *'
  |-ParmVarDecl 0x11f9281a8 <col:62, col:68> col:68 invalid this 'int *'
  |-ParmVarDecl 0x11f928228 <col:74, col:80> col:80 invalid obj 'int *'
  |-ParmVarDecl 0x11f9282a8 <col:85, col:91> col:91 invalid inf 'int *'
  `-CompoundStmt 0x11f942448 <line:2:1, line:29:1>
    |-DeclStmt 0x11f928518 <line:5:2, col:14>
    | `-VarDecl 0x11f9284b0 <col:2, col:6> col:6 used hash_len 'int'
    |-DeclStmt 0x11f9287c8 <line:6:2, col:82>
    | `-VarDecl 0x11f928548 <col:2, col:8> col:8 used hash 'char *'
    |-IfStmt 0x11f941858 <line:7:2, line:9:2>
    | |-UnaryOperator 0x11f941818 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f941800 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x11f9287e0 <col:7> 'char *' lvalue Var 0x11f928548 'hash' 'char *'
    | `-CompoundStmt 0x11f941840 <col:13, line:9:2>
    |   `-ReturnStmt 0x11f941830 <line:8:3>
    |-IfStmt 0x11f941cb8 <line:13:2, line:17:2> has_else
    | |-RecoveryExpr 0x11f9419d8 <line:13:6> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11f941b40 <col:11, line:15:2>
    | | `-CallExpr 0x11f941b18 <line:14:3, col:17> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11f941ad8 <col:3> 'int ()' Function 0x11f941a20 'Z_ADDREF_P' 'int ()'
    | |   `-RecoveryExpr 0x11f941af8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f941ca0 <line:15:9, line:17:2>
    |   `-CallExpr 0x11f941c78 <line:16:3, col:22> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f941c38 <col:3> 'int ()' Function 0x11f941b80 'ALLOC_INIT_ZVAL' 'int ()'
    |     `-RecoveryExpr 0x11f941c58 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f942130 <line:18:2, line:23:2>
    | |-RecoveryExpr 0x11f941d00 <line:18:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f942108 <col:16, line:23:2>
    |   |-CallExpr 0x11f941f40 <line:19:3, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f941e00 <col:3> 'int ()' Function 0x11f941d48 'zval_ptr_dtor' 'int ()'
    |   | `-UnaryOperator 0x11f941f28 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x11f941ee0 <col:18, col:28> '<dependent type>' contains-errors lvalue ->inf
    |   |     `-RecoveryExpr 0x11f941ec0 <col:18> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x11f9420c8 <line:21:3, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f942068 <col:3> 'int ()' Function 0x11f941fb0 'spl_object_storage_free_hash' 'int ()'
    |   | |-RecoveryExpr 0x11f942088 <col:32> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11f9420a8 <col:40> 'char *' lvalue Var 0x11f928548 'hash' 'char *'
    |   `-ReturnStmt 0x11f9420f8 <line:22:3>
    |-CallExpr 0x11f942190 <line:24:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f942150 <col:2> 'int ()' Function 0x11f941a20 'Z_ADDREF_P' 'int ()'
    | `-RecoveryExpr 0x11f942170 <col:13> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11f942418 <line:28:2, col:43> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11f9423b8 <col:2> 'int ()' Function 0x11f941fb0 'spl_object_storage_free_hash' 'int ()'
      |-RecoveryExpr 0x11f9423d8 <col:31> '<dependent type>' contains-errors lvalue
      `-DeclRefExpr 0x11f9423f8 <col:39> 'char *' lvalue Var 0x11f928548 'hash' 'char *'
