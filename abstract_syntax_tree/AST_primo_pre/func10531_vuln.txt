`-FunctionDecl 0x153888d58  line:1:13 invalid var_replace 'int (int *, int *, int **)'
  |-ParmVarDecl 0x153888b28 <col:25, col:49> col:49 referenced invalid var_hashx 'int *'
  |-ParmVarDecl 0x153888ba8 <col:60, col:66> col:66 invalid ozval 'int *'
  |-ParmVarDecl 0x153888c60 <col:73, col:80> col:80 invalid nzval 'int **'
  `-CompoundStmt 0x15401a088 <line:2:1, line:18:1>
    |-DeclStmt 0x153888e98 <line:3:2, col:8>
    | `-VarDecl 0x153888e30 <col:2, col:7> col:7 used i 'long'
    `-WhileStmt 0x15401a068 <line:9:2, line:17:2>
      |-RecoveryExpr 0x153888fd8 <line:9:9> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15401a048 <col:19, line:17:2>
        |-ForStmt 0x154019ea0 <line:10:3, line:15:3>
        | |-BinaryOperator 0x153889050 <line:10:8, col:12> 'long' '='
        | | |-DeclRefExpr 0x153888ff8 <col:8> 'long' lvalue Var 0x153888e30 'i' 'long'
        | | `-ImplicitCastExpr 0x153889038 <col:12> 'long' <IntegralCast>
        | |   `-IntegerLiteral 0x153889018 <col:12> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x153889198 <col:15, col:29> 'int' contains-errors '<'
        | | |-DeclRefExpr 0x153889070 <col:15> 'long' lvalue Var 0x153888e30 'i' 'long'
        | | `-CXXDependentScopeMemberExpr 0x153889150 <col:19, col:29> '<dependent type>' contains-errors lvalue ->used_slots
        | |   `-RecoveryExpr 0x153889130 <col:19> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x1538891d8 <col:41, col:42> 'long' postfix '++'
        | | `-DeclRefExpr 0x1538891b8 <col:41> 'long' lvalue Var 0x153888e30 'i' 'long'
        | `-CompoundStmt 0x154019e88 <col:46, line:15:3>
        |   `-IfStmt 0x154019e68 <line:11:4, line:14:4>
        |     |-RecoveryExpr 0x154019cc0 <line:11:8, col:29> '_Bool' contains-errors
        |     `-CompoundStmt 0x154019e50 <col:36, line:14:4>
        |       `-BinaryOperator 0x154019e30 <line:12:5, col:26> '<dependent type>' contains-errors '='
        |         |-ArraySubscriptExpr 0x154019dc0 <col:5, col:21> '<dependent type>' contains-errors lvalue
        |         | |-ImplicitCastExpr 0x154019d90 <col:5, col:15> '<dependent type>' contains-errors <LValueToRValue>
        |         | | `-CXXDependentScopeMemberExpr 0x154019d28 <col:5, col:15> '<dependent type>' contains-errors lvalue ->data
        |         | |   `-RecoveryExpr 0x154019d00 <col:5> '<dependent type>' contains-errors lvalue
        |         | |     `-DeclRefExpr 0x154019ce0 <col:5> 'int *' lvalue ParmVar 0x153888b28 'var_hashx' 'int *'
        |         | `-ImplicitCastExpr 0x154019da8 <col:20> 'long' <LValueToRValue>
        |         |   `-DeclRefExpr 0x154019d70 <col:20> 'long' lvalue Var 0x153888e30 'i' 'long'
        |         `-UnaryOperator 0x154019e18 <col:25, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow
        |           `-ImplicitCastExpr 0x154019e00 <col:26> '<dependent type>' contains-errors <LValueToRValue>
        |             `-RecoveryExpr 0x154019de0 <col:26> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x15401a028 <line:16:3, col:24> '<dependent type>' contains-errors '='
          |-RecoveryExpr 0x154019ef8 <col:3> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x154019ed8 <col:3> 'int *' lvalue ParmVar 0x153888b28 'var_hashx' 'int *'
          `-CXXDependentScopeMemberExpr 0x154019fe0 <col:14, col:24> '<dependent type>' contains-errors lvalue ->next
            `-RecoveryExpr 0x154019fc0 <col:14> '<dependent type>' contains-errors lvalue
