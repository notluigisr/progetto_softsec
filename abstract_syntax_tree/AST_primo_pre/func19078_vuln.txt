`-FunctionDecl 0x15000dfa8  line:1:15 invalid jas_seq2d_create 'int *(int, int, int, int)'
  |-ParmVarDecl 0x15000dcf0 <col:32, col:36> col:36 used xstart 'int'
  |-ParmVarDecl 0x15000dd70 <col:44, col:48> col:48 used ystart 'int'
  |-ParmVarDecl 0x15000ddf0 <col:56, col:60> col:60 used xend 'int'
  |-ParmVarDecl 0x15000de70 <col:66, col:70> col:70 used yend 'int'
  `-CompoundStmt 0x1500281c8 <line:2:1, line:13:1>
    |-CallExpr 0x15000e388 <line:4:2, col:41> 'int'
    | |-ImplicitCastExpr 0x15000e370 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15000e1e0 <col:2> 'int ()' Function 0x15000e128 'assert' 'int ()'
    | `-BinaryOperator 0x15000e320 <col:9, col:37> 'int' '&&'
    |   |-BinaryOperator 0x15000e270 <col:9, col:19> 'int' '<='
    |   | |-ImplicitCastExpr 0x15000e240 <col:9> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15000e200 <col:9> 'int' lvalue ParmVar 0x15000dcf0 'xstart' 'int'
    |   | `-ImplicitCastExpr 0x15000e258 <col:19> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15000e220 <col:19> 'int' lvalue ParmVar 0x15000ddf0 'xend' 'int'
    |   `-BinaryOperator 0x15000e300 <col:27, col:37> 'int' '<='
    |     |-ImplicitCastExpr 0x15000e2d0 <col:27> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15000e290 <col:27> 'int' lvalue ParmVar 0x15000dd70 'ystart' 'int'
    |     `-ImplicitCastExpr 0x15000e2e8 <col:37> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15000e2b0 <col:37> 'int' lvalue ParmVar 0x15000de70 'yend' 'int'
    |-IfStmt 0x1500280e0 <line:5:2, line:7:2>
    | |-RecoveryExpr 0x150028060 <line:5:6, col:64> '_Bool' contains-errors
    | `-CompoundStmt 0x1500280c8 <col:67, line:7:2>
    |   `-ReturnStmt 0x1500280b8 <line:6:3, col:10>
    |     `-ImplicitCastExpr 0x1500280a0 <col:10> 'int *' <NullToPointer>
    |       `-IntegerLiteral 0x150028080 <col:10> 'int' 0
    `-ReturnStmt 0x1500281b8 <line:12:2, col:9>
      `-RecoveryExpr 0x150028198 <col:9> '<dependent type>' contains-errors lvalue
