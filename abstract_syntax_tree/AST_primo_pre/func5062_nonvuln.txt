`-FunctionDecl 0x1201289f8  line:1:5 invalid server_open_native_socket 'int (int *)'
  |-ParmVarDecl 0x120128928 <col:31, col:39> col:39 referenced invalid s 'int *'
  `-CompoundStmt 0x10780ba28 <col:42, line:51:1>
    |-DeclStmt 0x1201421b8 <line:3:9, line:6:10>
    | |-RecordDecl 0x120128aa8 <line:3:22, col:28> col:28 union sockaddr_union
    | `-VarDecl 0x120128ba8 <col:9, col:43> col:43 invalid sa 'const union sockaddr_union' static
    |-DeclStmt 0x120142250 <line:7:9, col:14>
    | `-VarDecl 0x1201421e8 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x120142400 <line:9:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1201423c0 <col:9> 'int ()' Function 0x120142308 'assert' 'int ()'
    | `-RecoveryExpr 0x1201423e0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x10780ab88 <line:11:9, line:24:17> has_else
    | |-BinaryOperator 0x1201424b0 <line:11:13, col:28> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x120142448 <col:13, col:16> '<dependent type>' contains-errors lvalue ->native_fd
    | | | `-RecoveryExpr 0x120142428 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x120142490 <col:28> 'int' 0
    | |-CompoundStmt 0x10780a980 <col:31, line:23:9>
    | | |-BinaryOperator 0x120142870 <line:12:17, col:88> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x120142518 <col:17, col:20> '<dependent type>' contains-errors lvalue ->native_fd
    | | | | `-RecoveryExpr 0x1201424f0 <col:17> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x1201424d0 <col:17> 'int *' lvalue ParmVar 0x120128928 's' 'int *'
    | | | `-CallExpr 0x120142838 <col:32, col:88> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x120142640 <col:32> 'int ()' Function 0x120142588 'socket' 'int ()'
    | | |   |-RecoveryExpr 0x120142778 <col:39> '<dependent type>' contains-errors lvalue
    | | |   |-BinaryOperator 0x120142818 <col:48, col:72> '<dependent type>' contains-errors '|'
    | | |   | |-BinaryOperator 0x1201427d8 <col:48, col:59> '<dependent type>' contains-errors '|'
    | | |   | | |-RecoveryExpr 0x120142798 <col:48> '<dependent type>' contains-errors lvalue
    | | |   | | `-RecoveryExpr 0x1201427b8 <col:59> '<dependent type>' contains-errors lvalue
    | | |   | `-RecoveryExpr 0x1201427f8 <col:72> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x120142700 <col:87> 'int' 0
    | | |-IfStmt 0x120142b00 <line:13:17, line:14:60>
    | | | |-BinaryOperator 0x120142918 <line:13:21, col:36> 'int' contains-errors '<'
    | | | | |-CXXDependentScopeMemberExpr 0x1201428b0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->native_fd
    | | | | | `-RecoveryExpr 0x120142890 <col:21> '<dependent type>' contains-errors lvalue
    | | | | `-IntegerLiteral 0x1201428f8 <col:36> 'int' 0
    | | | `-ReturnStmt 0x120142af0 <line:14:25, col:60>
    | | |   `-CallExpr 0x120142ac0 <col:32, col:60> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x120142a18 <col:32> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    | | |     |-RecoveryExpr 0x120142aa0 <col:48> '<dependent type>' contains-errors lvalue
    | | |     `-StringLiteral 0x120142a50 <col:55> 'char[4]' lvalue "STR"
    | | |-CStyleCastExpr 0x120142cd8 <line:16:17, col:49> 'void' contains-errors <ToVoid>
    | | | `-CallExpr 0x120142ca0 <col:24, col:49> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x120142c00 <col:24> 'int ()' Function 0x120142b48 'sockaddr_un_unlink' 'int ()'
    | | |   `-UnaryOperator 0x120142c88 <col:43, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-CXXDependentScopeMemberExpr 0x120142c40 <col:44, col:47> '<dependent type>' contains-errors lvalue .un
    | | |       `-RecoveryExpr 0x120142c20 <col:44> '<dependent type>' contains-errors lvalue
    | | |-BinaryOperator 0x10780a4e8 <line:18:17, col:70> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x120142d00 <col:17> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | | `-CallExpr 0x10780a4b0 <col:21, col:70> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x120142e00 <col:21> 'int ()' Function 0x120142d48 'bind' 'int ()'
    | | |   |-CXXDependentScopeMemberExpr 0x120142e40 <col:26, col:29> '<dependent type>' contains-errors lvalue ->native_fd
    | | |   | `-RecoveryExpr 0x120142e20 <col:26> '<dependent type>' contains-errors lvalue
    | | |   |-UnaryOperator 0x120142ef0 <col:40, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | `-CXXDependentScopeMemberExpr 0x120142ea8 <col:41, col:44> '<dependent type>' contains-errors lvalue .sa
    | | |   |   `-RecoveryExpr 0x120142e88 <col:41> '<dependent type>' contains-errors lvalue
    | | |   `-CallExpr 0x10780a488 <col:48, col:69> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x10780a400 <col:48> 'int ()' Function 0x120142f30 'SOCKADDR_UN_LEN' 'int ()'
    | | |     `-CXXDependentScopeMemberExpr 0x10780a440 <col:64, col:67> '<dependent type>' contains-errors lvalue .un
    | | |       `-RecoveryExpr 0x10780a420 <col:64> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x10780a728 <line:19:17, line:20:76>
    | | | |-BinaryOperator 0x10780a560 <line:19:21, col:25> 'int' '<'
    | | | | |-ImplicitCastExpr 0x10780a548 <col:21> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x10780a508 <col:21> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | | | `-IntegerLiteral 0x10780a528 <col:25> 'int' 0
    | | | `-ReturnStmt 0x10780a718 <line:20:25, col:76>
    | | |   `-CallExpr 0x10780a6e0 <col:32, col:76> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x10780a580 <col:32> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    | | |     |-RecoveryExpr 0x10780a6c0 <col:48> '<dependent type>' contains-errors lvalue
    | | |     |-StringLiteral 0x10780a5b8 <col:55> 'char[4]' lvalue "STR"
    | | |     `-CXXDependentScopeMemberExpr 0x10780a640 <col:62, col:68> '<dependent type>' contains-errors lvalue .sun_path
    | | |       `-CXXDependentScopeMemberExpr 0x10780a5f8 <col:62, col:65> '<dependent type>' contains-errors lvalue .un
    | | |         `-RecoveryExpr 0x10780a5d8 <col:62> '<dependent type>' contains-errors lvalue
    | | `-CStyleCastExpr 0x10780a958 <line:22:17, col:50> 'void' contains-errors <ToVoid>
    | |   `-CallExpr 0x10780a918 <col:24, col:50> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x10780a828 <col:24> 'int ()' Function 0x10780a770 'chmod' 'int ()'
    | |     |-CXXDependentScopeMemberExpr 0x10780a8b0 <col:30, col:36> '<dependent type>' contains-errors lvalue .sun_path
    | |     | `-CXXDependentScopeMemberExpr 0x10780a868 <col:30, col:33> '<dependent type>' contains-errors lvalue .un
    | |     |   `-RecoveryExpr 0x10780a848 <col:30> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x10780a8f8 <col:46> 'int' 438
    | `-NullStmt 0x10780ab80 <line:24:17>
    |-BinaryOperator 0x10780ae88 <line:26:9, col:71> 'int' contains-errors '='
    | |-DeclRefExpr 0x10780abb8 <col:9> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | `-CallExpr 0x10780ae48 <col:13, col:71> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x10780acb8 <col:13> 'int ()' Function 0x10780ac00 'setsockopt_int' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x10780acf8 <col:28, col:31> '<dependent type>' contains-errors lvalue ->native_fd
    |   | `-RecoveryExpr 0x10780acd8 <col:28> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x10780ade8 <col:42> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x10780ae08 <col:54> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x10780ae28 <col:67> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x10780b038 <line:27:9, line:28:48>
    | |-BinaryOperator 0x10780af00 <line:27:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x10780aee8 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x10780aea8 <col:13> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | `-IntegerLiteral 0x10780aec8 <col:17> 'int' 0
    | `-ReturnStmt 0x10780b028 <line:28:17, col:48>
    |   `-CallExpr 0x10780afc8 <col:24, col:48> 'int'
    |     |-ImplicitCastExpr 0x10780afb0 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x10780af20 <col:24> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    |     |-ImplicitCastExpr 0x10780aff8 <col:40> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x10780af40 <col:40> 'int' lvalue Var 0x1201421e8 'r' 'int'
    |     `-ImplicitCastExpr 0x10780b010 <col:43> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x10780af60 <col:43> 'char[4]' lvalue "STR"
    |-IfStmt 0x10780b260 <line:39:9, line:40:48>
    | |-BinaryOperator 0x10780b158 <line:39:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x10780b140 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x10780b100 <col:13> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | `-IntegerLiteral 0x10780b120 <col:17> 'int' 0
    | `-ReturnStmt 0x10780b250 <line:40:17, col:48>
    |   `-CallExpr 0x10780b1f0 <col:24, col:48> 'int'
    |     |-ImplicitCastExpr 0x10780b1d8 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x10780b178 <col:24> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    |     |-ImplicitCastExpr 0x10780b220 <col:40> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x10780b198 <col:40> 'int' lvalue Var 0x1201421e8 'r' 'int'
    |     `-ImplicitCastExpr 0x10780b238 <col:43> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x10780b1b8 <col:43> 'char[4]' lvalue "STR"
    |-IfStmt 0x10780b6b0 <line:43:9, line:44:48>
    | |-BinaryOperator 0x10780b5a8 <line:43:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x10780b590 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x10780b550 <col:13> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | `-IntegerLiteral 0x10780b570 <col:17> 'int' 0
    | `-ReturnStmt 0x10780b6a0 <line:44:17, col:48>
    |   `-CallExpr 0x10780b640 <col:24, col:48> 'int'
    |     |-ImplicitCastExpr 0x10780b628 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x10780b5c8 <col:24> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    |     |-ImplicitCastExpr 0x10780b670 <col:40> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x10780b5e8 <col:40> 'int' lvalue Var 0x1201421e8 'r' 'int'
    |     `-ImplicitCastExpr 0x10780b688 <col:43> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x10780b608 <col:43> 'char[4]' lvalue "STR"
    |-IfStmt 0x10780b9d8 <line:47:9, line:48:48>
    | |-BinaryOperator 0x10780b8d0 <line:47:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x10780b8b8 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x10780b878 <col:13> 'int' lvalue Var 0x1201421e8 'r' 'int'
    | | `-IntegerLiteral 0x10780b898 <col:17> 'int' 0
    | `-ReturnStmt 0x10780b9c8 <line:48:17, col:48>
    |   `-CallExpr 0x10780b968 <col:24, col:48> 'int'
    |     |-ImplicitCastExpr 0x10780b950 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x10780b8f0 <col:24> 'int ()' Function 0x120142960 'log_error_errno' 'int ()'
    |     |-ImplicitCastExpr 0x10780b998 <col:40> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x10780b910 <col:40> 'int' lvalue Var 0x1201421e8 'r' 'int'
    |     `-ImplicitCastExpr 0x10780b9b0 <col:43> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x10780b930 <col:43> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x10780ba18 <line:50:9, col:16>
      `-IntegerLiteral 0x10780b9f8 <col:16> 'int' 0
