`-FunctionDecl 0x11f928280  line:1:13 invalid test_send_u32 'void (int *, int)' static
  |-ParmVarDecl 0x11f928128 <col:27, col:42> col:42 invalid os 'int *'
  |-ParmVarDecl 0x11f9281a8 <col:46, col:54> col:54 referenced invalid v 'int'
  `-CompoundStmt 0x11f941980 <line:2:1, line:5:1>
    |-BinaryOperator 0x11f928548 <line:3:5, col:24> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11f928358 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11f928338 <col:5> 'int' lvalue ParmVar 0x11f9281a8 'v' 'int'
    | `-CallExpr 0x11f928520 <col:9, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f9284e0 <col:9> 'int ()' Function 0x11f928428 'GUINT32_TO_BE' 'int ()'
    |   `-RecoveryExpr 0x11f928500 <col:23> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11f941958 <line:4:5, col:68> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11f928648 <col:5> 'int ()' Function 0x11f928590 'g_assert' 'int ()'
      `-CallExpr 0x11f941908 <col:14, col:67> '<dependent type>' contains-errors
        |-DeclRefExpr 0x11f928748 <col:14> 'int ()' Function 0x11f928690 'g_output_stream_write_all' 'int ()'
        |-RecoveryExpr 0x11f928768 <col:40> '<dependent type>' contains-errors lvalue
        |-UnaryOperator 0x11f9287a8 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-RecoveryExpr 0x11f928788 <col:45> '<dependent type>' contains-errors lvalue
        |-IntegerLiteral 0x11f9287c0 <col:48> 'int' 4
        |-RecoveryExpr 0x11f9418a8 <col:51> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x11f9418c8 <col:57> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x11f9418e8 <col:63> '<dependent type>' contains-errors lvalue
