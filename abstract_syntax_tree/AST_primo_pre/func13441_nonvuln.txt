`-FunctionDecl 0x13484f098  line:1:1 invalid dio_bio_alloc 'int (struct dio *, struct block_device *, int, int)'
  |-ParmVarDecl 0x134831e48 <col:15, col:27> col:27 used dio 'struct dio *'
  |-ParmVarDecl 0x13484ee28 <col:32, col:53> col:53 used bdev 'struct block_device *'
  |-ParmVarDecl 0x13484eec0 <line:2:3, col:12> col:12 invalid first_sector 'int'
  |-ParmVarDecl 0x13484ef40 <col:26, col:30> col:30 used nr_vecs 'int'
  `-CompoundStmt 0x13484fba8 <line:3:1, line:19:1>
    |-DeclStmt 0x13484f348 <line:4:2, col:17>
    | |-RecordDecl 0x13484f160 <col:2, col:9> col:9 struct bio
    | `-VarDecl 0x13484f2c8 <col:2, col:14> col:14 used bio 'struct bio *'
    |-BinaryOperator 0x13484f5d8 <line:6:2, col:37> 'struct bio *' contains-errors '='
    | |-DeclRefExpr 0x13484f360 <col:2> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    | `-CallExpr 0x13484f5a8 <col:8, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13484f4e0 <col:8> 'int ()' Function 0x13484f428 'bio_alloc' 'int ()'
    |   |-RecoveryExpr 0x13484f588 <col:18> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13484f518 <col:30> 'int' lvalue ParmVar 0x13484ef40 'nr_vecs' 'int'
    |-IfStmt 0x13484f738 <line:7:2, line:8:11>
    | |-BinaryOperator 0x13484f670 <line:7:6, col:13> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13484f5f8 <col:6> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    | | `-RecoveryExpr 0x13484f650 <col:13> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13484f728 <line:8:3, col:11>
    |   `-UnaryOperator 0x13484f710 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13484f6f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13484f6d8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13484f7d8 <line:10:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13484f790 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13484f758 <col:2> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    | `-DeclRefExpr 0x13484f7b8 <col:17> 'struct block_device *' lvalue ParmVar 0x13484ee28 'bdev' 'struct block_device *'
    |-BinaryOperator 0x13484f878 <line:11:2, col:19> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13484f830 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13484f7f8 <col:2> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    | `-RecoveryExpr 0x13484f858 <col:19> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13484faa8 <line:12:2, line:15:20> has_else
    | |-RecoveryExpr 0x13484f8d0 <line:12:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13484f898 <col:6> 'struct dio *' lvalue ParmVar 0x134831e48 'dio' 'struct dio *'
    | |-BinaryOperator 0x13484f9b0 <line:13:3, col:20> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x13484f930 <col:3, col:8> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13484f8f8 <col:3> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    | | `-RecoveryExpr 0x13484f990 <col:20> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x13484fa88 <line:15:3, col:20> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x13484fa08 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13484f9d0 <col:3> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    |   `-RecoveryExpr 0x13484fa68 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13484fb58 <line:17:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13484fb10 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13484fad8 <col:2> 'struct dio *' lvalue ParmVar 0x134831e48 'dio' 'struct dio *'
    | `-DeclRefExpr 0x13484fb38 <col:13> 'struct bio *' lvalue Var 0x13484f2c8 'bio' 'struct bio *'
    `-ReturnStmt 0x13484fb98 <line:18:2, col:9>
      `-IntegerLiteral 0x13484fb78 <col:9> 'int' 0
