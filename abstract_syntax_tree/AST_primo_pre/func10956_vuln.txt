`-FunctionDecl 0x14f80dfd8  line:1:1 invalid get_function_line 'int (int *, char **, int, int)'
  |-ParmVarDecl 0x14f80dd28 <line:2:2, col:12> col:12 invalid eap 'int *'
  |-ParmVarDecl 0x14f80ddd8 <line:3:2, col:12> col:12 used line_to_free 'char **'
  |-ParmVarDecl 0x14f80de58 <line:4:2, col:7> col:7 used indent 'int'
  |-ParmVarDecl 0x14f80ded8 <line:5:2, col:16> col:16 invalid getline_options 'int'
  `-CompoundStmt 0x15800aea8 <line:6:1, line:22:1>
    |-DeclStmt 0x14f80e120 <line:7:5, col:20>
    | `-VarDecl 0x14f80e0b8 <col:5, col:13> col:13 used theline 'char *'
    |-IfStmt 0x15800a8e8 <line:9:5, line:12:66> has_else
    | |-BinaryOperator 0x14f80e1f8 <line:9:9, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14f80e158 <col:9, col:14> '<dependent type>' contains-errors lvalue ->getline
    | | | `-RecoveryExpr 0x14f80e138 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14f80e1d8 <col:25> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x15800a720 <line:10:2, col:41> 'char *' '='
    | | |-DeclRefExpr 0x14f80e218 <col:2> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    | | `-ImplicitCastExpr 0x15800a2e0 <col:12, col:41> 'char *' <IntegralToPointer>
    | |   `-CallExpr 0x15800a288 <col:12, col:41> 'int'
    | |     |-ImplicitCastExpr 0x15800a270 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x14f80e390 <col:12> 'int ()' Function 0x14f80e2d8 'getcmdline' 'int ()'
    | |     |-CharacterLiteral 0x14f80e3b0 <col:23> 'int' 58
    | |     |-IntegerLiteral 0x14f80e3c8 <col:28> 'long' 0
    | |     |-ImplicitCastExpr 0x15800a2c8 <col:32> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x15800a200 <col:32> 'int' lvalue ParmVar 0x14f80de58 'indent' 'int'
    | |     `-IntegerLiteral 0x15800a220 <col:40> 'int' 0
    | `-BinaryOperator 0x15800a8c8 <line:12:2, col:66> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x15800a740 <col:2> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    |   `-CallExpr 0x15800a888 <col:12, col:66> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x15800a780 <col:12, col:17> '<dependent type>' contains-errors lvalue ->getline
    |     | `-RecoveryExpr 0x15800a760 <col:12> '<dependent type>' contains-errors lvalue
    |     |-CharacterLiteral 0x15800a7c8 <col:25> 'int' 58
    |     |-CXXDependentScopeMemberExpr 0x15800a800 <col:30, col:35> '<dependent type>' contains-errors lvalue ->cookie
    |     | `-RecoveryExpr 0x15800a7e0 <col:30> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x15800a848 <col:43> 'int' lvalue ParmVar 0x14f80de58 'indent' 'int'
    |     `-RecoveryExpr 0x15800a868 <col:51> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15800ae28 <line:13:5, line:19:5>
    | |-BinaryOperator 0x15800a990 <line:13:9, col:20> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x15800a918 <col:9> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    | | `-RecoveryExpr 0x15800a970 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15800ae00 <line:14:5, line:19:5>
    |   |-IfStmt 0x15800ab90 <line:15:2, line:16:23>
    |   | |-BinaryOperator 0x15800aa98 <line:15:6, col:25> 'int' contains-errors '=='
    |   | | |-UnaryOperator 0x15800aa30 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | | `-ImplicitCastExpr 0x15800aa18 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |   `-CXXDependentScopeMemberExpr 0x15800a9d0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->cmdlinep
    |   | | |     `-RecoveryExpr 0x15800a9b0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x15800aa80 <col:24, col:25> 'char *' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x15800aa68 <col:25> 'char **' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x15800aa48 <col:25> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |   | `-BinaryOperator 0x15800ab70 <line:16:6, col:23> '<dependent type>' contains-errors '='
    |   |   |-UnaryOperator 0x15800ab38 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x15800ab20 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   `-CXXDependentScopeMemberExpr 0x15800aad8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->cmdlinep
    |   |   |     `-RecoveryExpr 0x15800aab8 <col:7> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15800ab50 <col:23> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    |   |-CallExpr 0x15800ad18 <line:17:2, col:24> 'int'
    |   | |-ImplicitCastExpr 0x15800ad00 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15800ac90 <col:2> 'int ()' Function 0x15800abd8 'vim_free' 'int ()'
    |   | `-ImplicitCastExpr 0x15800ad40 <col:11, col:12> 'char *' <LValueToRValue>
    |   |   `-UnaryOperator 0x15800ace8 <col:11, col:12> 'char *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x15800acd0 <col:12> 'char **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15800acb0 <col:12> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |   `-BinaryOperator 0x15800ade0 <line:18:2, col:18> 'char *' '='
    |     |-UnaryOperator 0x15800ad90 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x15800ad78 <col:3> 'char **' <LValueToRValue>
    |     |   `-DeclRefExpr 0x15800ad58 <col:3> 'char **' lvalue ParmVar 0x14f80ddd8 'line_to_free' 'char **'
    |     `-ImplicitCastExpr 0x15800adc8 <col:18> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x15800ada8 <col:18> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
    `-ReturnStmt 0x15800ae98 <line:21:5, col:12>
      `-ImplicitCastExpr 0x15800ae80 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x15800ae68 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x15800ae48 <col:12> 'char *' lvalue Var 0x14f80e0b8 'theline' 'char *'
