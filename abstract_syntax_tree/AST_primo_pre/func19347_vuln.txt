`-FunctionDecl 0x14601d638  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x14601d558 <col:8> col:8 used DocumentSourceMatchTest 'int'
  |-ParmVarDecl 0x14601d4d8 <col:33> col:33 MultipleMatchStagesShouldCombineIntoOne 'int'
  `-CompoundStmt 0x14603c070 <col:74, line:26:1>
    |-DeclStmt 0x14601d820 <line:2:5, col:38>
    | `-VarDecl 0x14601d750 <col:5, col:19> col:10 used match1 'int' auto cinit
    |   `-ImplicitCastExpr 0x14601d808 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14601d7e8 <col:19> 'int' lvalue ParmVar 0x14601d558 'DocumentSourceMatchTest' 'int'
    |-DeclStmt 0x14601d908 <line:3:5, col:38>
    | `-VarDecl 0x14601d850 <col:5, col:19> col:10 used match2 'int' auto cinit
    |   `-ImplicitCastExpr 0x14601d8f0 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14601d8d0 <col:19> 'int' lvalue ParmVar 0x14601d558 'DocumentSourceMatchTest' 'int'
    |-DeclStmt 0x14601d9f0 <line:4:5, col:38>
    | `-VarDecl 0x14601d938 <col:5, col:19> col:10 used match3 'int' auto cinit
    |   `-ImplicitCastExpr 0x14601d9d8 <col:19> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14601d9b8 <col:19> 'int' lvalue ParmVar 0x14601d558 'DocumentSourceMatchTest' 'int'
    |-RecoveryExpr 0x14601da38 <line:6:5> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14603ae30 <line:9:5, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14601db70 <col:5> 'int ()' Function 0x14601dab8 'ASSERT_BSONOBJ_EQ' 'int ()'
    | |-CallExpr 0x14603ac18 <col:23, col:40> '<dependent type>' contains-errors
    | | `-RecoveryExpr 0x14603abf0 <col:23, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14601db90 <col:23> 'int' lvalue Var 0x14601d750 'match1' 'int'
    | `-CallExpr 0x14603ae08 <col:43, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14603ad18 <col:43> 'int ()' Function 0x14603ac60 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14603add8 <col:48, col:57> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14603ad80 <col:48> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14603ada0 <col:57> 'int' 1
    |-CallExpr 0x14603afd0 <line:10:5, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14603ae60 <col:5> 'int ()' Function 0x14601dab8 'ASSERT_BSONOBJ_EQ' 'int ()'
    | |-CallExpr 0x14603aee0 <col:23, col:40> '<dependent type>' contains-errors
    | | `-RecoveryExpr 0x14603aeb8 <col:23, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14603ae80 <col:23> 'int' lvalue Var 0x14601d850 'match2' 'int'
    | `-CallExpr 0x14603afa8 <col:43, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14603af00 <col:43> 'int ()' Function 0x14603ac60 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14603af78 <col:48, col:57> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14603af20 <col:48> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14603af40 <col:57> 'int' 1
    |-CallExpr 0x14603b170 <line:11:5, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14603b000 <col:5> 'int ()' Function 0x14601dab8 'ASSERT_BSONOBJ_EQ' 'int ()'
    | |-CallExpr 0x14603b080 <col:23, col:40> '<dependent type>' contains-errors
    | | `-RecoveryExpr 0x14603b058 <col:23, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14603b020 <col:23> 'int' lvalue Var 0x14601d938 'match3' 'int'
    | `-CallExpr 0x14603b148 <col:43, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14603b0a0 <col:43> 'int ()' Function 0x14603ac60 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14603b118 <col:48, col:57> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14603b0c0 <col:48> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14603b0e0 <col:57> 'int' 1
    |-CallExpr 0x14603b5a8 <line:18:5, col:58> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14603b360 <col:5> 'int ()' Function 0x14601dab8 'ASSERT_BSONOBJ_EQ' 'int ()'
    | |-CallExpr 0x14603b3e0 <col:23, col:40> '<dependent type>' contains-errors
    | | `-RecoveryExpr 0x14603b3b8 <col:23, col:31> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14603b380 <col:23> 'int' lvalue Var 0x14601d750 'match1' 'int'
    | `-CallExpr 0x14603b568 <col:43, col:57> 'int'
    |   |-ImplicitCastExpr 0x14603b550 <col:43> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14603b4e0 <col:43> 'int ()' Function 0x14603b428 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x14603b590 <col:52> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14603b500 <col:52> 'char[4]' lvalue "STR"
    `-CallExpr 0x14603c040 <line:23:5, line:25:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14603b698 <line:23:5> 'int ()' Function 0x14601dab8 'ASSERT_BSONOBJ_EQ' 'int ()'
      |-CallExpr 0x14603b718 <col:23, col:40> '<dependent type>' contains-errors
      | `-RecoveryExpr 0x14603b6f0 <col:23, col:31> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14603b6b8 <col:23> 'int' lvalue Var 0x14601d750 'match1' 'int'
      `-CallExpr 0x14603c000 <line:24:23, line:25:37> 'int'
        |-ImplicitCastExpr 0x14603b7c8 <line:24:23> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x14603b738 <col:23> 'int ()' Function 0x14603b428 'fromjson' 'int ()'
        `-ImplicitCastExpr 0x14603c028 <col:32, line:25:32> 'char *' <ArrayToPointerDecay>
          `-StringLiteral 0x14603b7a0 <line:24:32, line:25:32> 'char[7]' lvalue "STRSTR"
