`-FunctionDecl 0x14d80df18  line:1:6 invalid queueMicrotask 'int (int *, unsigned int, int *)'
  |-ParmVarDecl 0x14d80dd28 <col:21, col:32> col:32 invalid cx 'int *'
  |-ParmVarDecl 0x14d80dda8 <col:36, col:45> col:45 used argc 'unsigned int'
  |-ParmVarDecl 0x14d80de28 <col:51, col:58> col:58 invalid vp 'int *'
  `-CompoundStmt 0x14d827b40 <col:62, line:25:1>
    |-IfStmt 0x14d80e230 <line:3:3, line:5:3>
    | |-UnaryOperator 0x14d80e1f0 <line:3:7, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14d80e1b8 <col:8, col:40> '<dependent type>' contains-errors
    | |   |-CXXDependentScopeMemberExpr 0x14d80e170 <col:8, col:13> '<dependent type>' contains-errors lvalue .requireAtLeast
    | |   | `-RecoveryExpr 0x14d80e150 <col:8> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x14d80e038 <col:28> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x14d80e0a0 <col:32> 'char[4]' lvalue "STR"
    | |   `-IntegerLiteral 0x14d80e0c0 <col:39> 'int' 1
    | `-CompoundStmt 0x14d80e220 <col:43, line:5:3>
    |-IfStmt 0x14d827978 <line:7:3, line:10:3>
    | |-RecoveryExpr 0x14d80e308 <line:7:7, col:65> '_Bool' contains-errors
    | `-CompoundStmt 0x14d827960 <col:68, line:10:3>
    |   `-CallExpr 0x14d827918 <line:8:5, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d8278b8 <col:5> 'int ()' Function 0x14d827800 'JS_ReportErrorLatin1' 'int ()'
    |     |-RecoveryExpr 0x14d8278d8 <col:26> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x14d8278f8 <col:30> 'char[4]' lvalue "STR"
    |-IfStmt 0x14d827a58 <line:15:3, line:17:3>
    | |-UnaryOperator 0x14d827a18 <line:15:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d827a00 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14d8279e0 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d827a48 <col:17, line:17:3>
    `-IfStmt 0x14d827b20 <line:19:3, line:21:3>
      |-UnaryOperator 0x14d827af8 <line:19:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x14d827ae0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x14d827ac0 <col:8> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x14d827b10 <col:65, line:21:3>
