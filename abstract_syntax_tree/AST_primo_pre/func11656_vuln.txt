`-FunctionDecl 0x13880de88  line:1:5 invalid am_check_url 'int (int *, const char *)'
  |-ParmVarDecl 0x13880dd28 <col:18, col:31> col:31 invalid r 'int *'
  |-ParmVarDecl 0x13880dda8 <col:34, col:46> col:46 used url 'const char *'
  `-CompoundStmt 0x138827ce0 <line:2:1, line:15:1>
    |-DeclStmt 0x13880dfc0 <line:3:5, col:18>
    | `-VarDecl 0x13880df58 <col:5, col:17> col:17 used i 'const char *'
    |-ForStmt 0x138827c60 <line:5:5, line:12:5>
    | |-BinaryOperator 0x13880e030 <line:5:10, col:14> 'const char *' '='
    | | |-DeclRefExpr 0x13880dfd8 <col:10> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'
    | | `-ImplicitCastExpr 0x13880e018 <col:14> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13880dff8 <col:14> 'const char *' lvalue ParmVar 0x13880dda8 'url' 'const char *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x13880e0a0 <col:19, col:20> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x13880e088 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13880e070 <col:20> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13880e050 <col:20> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'
    | |-UnaryOperator 0x13880e0d8 <col:23, col:24> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x13880e0b8 <col:23> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'
    | `-CompoundStmt 0x138827c48 <col:28, line:12:5>
    |   `-IfStmt 0x138827c28 <line:6:9, line:11:9>
    |     |-BinaryOperator 0x13880e268 <line:6:13, col:29> 'int' '&&'
    |     | |-BinaryOperator 0x13880e190 <col:13, col:19> 'int' '>='
    |     | | |-ImplicitCastExpr 0x13880e178 <col:13, col:14> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x13880e160 <col:13, col:14> 'char' <LValueToRValue>
    |     | | |   `-UnaryOperator 0x13880e128 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |     | | |     `-ImplicitCastExpr 0x13880e110 <col:14> 'const char *' <LValueToRValue>
    |     | | |       `-DeclRefExpr 0x13880e0f0 <col:14> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'
    |     | | `-IntegerLiteral 0x13880e140 <col:19> 'int' 0
    |     | `-BinaryOperator 0x13880e248 <col:24, col:29> 'int' '<'
    |     |   |-ImplicitCastExpr 0x13880e230 <col:24, col:25> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x13880e218 <col:24, col:25> 'char' <LValueToRValue>
    |     |   |   `-UnaryOperator 0x13880e1e8 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow
    |     |   |     `-ImplicitCastExpr 0x13880e1d0 <col:25> 'const char *' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x13880e1b0 <col:25> 'const char *' lvalue Var 0x13880df58 'i' 'const char *'
    |     |   `-CharacterLiteral 0x13880e200 <col:29> 'int' 32
    |     `-CompoundStmt 0x138827c08 <col:34, line:11:9>
    |       |-CallExpr 0x138827b78 <line:8:13, line:9:32> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13880e3e0 <line:8:13> 'int ()' Function 0x13880e328 'AM_LOG_RERROR' 'int ()'
    |       | |-RecoveryExpr 0x138827b18 <col:27> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x138827b38 <col:39> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x138827b58 <col:50> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x138827a48 <col:68> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x138827ab0 <line:9:27> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x138827bf8 <line:10:13, col:20>
    |         `-RecoveryExpr 0x138827bd8 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x138827cd0 <line:14:5, col:12>
      `-RecoveryExpr 0x138827cb0 <col:12> '<dependent type>' contains-errors lvalue
