`-FunctionDecl 0x1328fada8  line:1:22 LevelPixel 'double (const double, const double, const double, const double)' static inline
  |-ParmVarDecl 0x1328faad8 <col:33, col:46> col:46 used black_point 'const double'
  |-ParmVarDecl 0x1328fab58 <line:2:3, col:16> col:16 used white_point 'const double'
  |-ParmVarDecl 0x1328fabd8 <col:28, col:41> col:41 used gamma 'const double'
  |-ParmVarDecl 0x1328fac58 <col:47, col:60> col:60 used pixel 'const double'
  `-CompoundStmt 0x133009658 <line:3:1, line:12:1>
    |-DeclStmt 0x1328fafd0 <line:4:3, line:6:10>
    | |-VarDecl 0x1328faed0 <line:4:3, line:5:5> col:5 used level_pixel 'double'
    | `-VarDecl 0x1328faf50 <line:4:3, line:6:5> col:5 used scale 'double'
    |-BinaryOperator 0x133009088 <line:8:3, col:54> 'double' '='
    | |-DeclRefExpr 0x1328fafe8 <col:3> 'double' lvalue Var 0x1328faf50 'scale' 'double'
    | `-ImplicitCastExpr 0x133009070 <col:9, col:54> 'double' <IntegralToFloating>
    |   `-CallExpr 0x133009048 <col:9, col:54> 'int'
    |     |-ImplicitCastExpr 0x133009030 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1328fb130 <col:9> 'int ()' Function 0x1328fb078 'PerceptibleReciprocal' 'int ()'
    |     `-BinaryOperator 0x1328fb1c0 <col:31, col:43> 'double' '-'
    |       |-ImplicitCastExpr 0x1328fb190 <col:31> 'double' <LValueToRValue>
    |       | `-DeclRefExpr 0x1328fb150 <col:31> 'const double' lvalue ParmVar 0x1328fab58 'white_point' 'const double'
    |       `-ImplicitCastExpr 0x1328fb1a8 <col:43> 'double' <LValueToRValue>
    |         `-DeclRefExpr 0x1328fb170 <col:43> 'const double' lvalue ParmVar 0x1328faad8 'black_point' 'const double'
    |-BinaryOperator 0x1330095d0 <line:9:3, line:10:14> 'double' contains-errors '='
    | |-DeclRefExpr 0x1330090a8 <line:9:3> 'double' lvalue Var 0x1328faed0 'level_pixel' 'double'
    | `-BinaryOperator 0x1330095b0 <col:15, line:10:14> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x133009428 <line:9:15> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x133009580 <col:28, line:10:14> 'int'
    |     |-ImplicitCastExpr 0x133009568 <line:9:28> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1330091c0 <col:28> 'int ()' Function 0x133009108 'gamma_pow' 'int ()'
    |     |-BinaryOperator 0x133009510 <col:38, col:71> 'double' '*'
    |     | |-ImplicitCastExpr 0x1330094f8 <col:38> 'double' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1330091e0 <col:38> 'double' lvalue Var 0x1328faf50 'scale' 'double'
    |     | `-ParenExpr 0x1330094d8 <col:44, col:71> 'double'
    |     |   `-BinaryOperator 0x1330094b8 <col:45, col:60> 'double' '-'
    |     |     |-CStyleCastExpr 0x133009478 <col:45, col:54> 'double' <NoOp>
    |     |     | `-ImplicitCastExpr 0x133009460 <col:54> 'double' <LValueToRValue> part_of_explicit_cast
    |     |     |   `-DeclRefExpr 0x133009200 <col:54> 'const double' lvalue ParmVar 0x1328fac58 'pixel' 'const double'
    |     |     `-ImplicitCastExpr 0x1330094a0 <col:60> 'double' <LValueToRValue>
    |     |       `-DeclRefExpr 0x133009278 <col:60> 'const double' lvalue ParmVar 0x1328faad8 'black_point' 'const double'
    |     `-BinaryOperator 0x133009548 <line:10:5, col:9> 'double' '/'
    |       |-FloatingLiteral 0x133009328 <col:5> 'double' 1.000000e+00
    |       `-ImplicitCastExpr 0x133009530 <col:9> 'double' <LValueToRValue>
    |         `-DeclRefExpr 0x133009348 <col:9> 'const double' lvalue ParmVar 0x1328fabd8 'gamma' 'const double'
    `-ReturnStmt 0x133009648 <line:11:3, col:21>
      `-ImplicitCastExpr 0x133009630 <col:9, col:21> 'double' <LValueToRValue>
        `-ParenExpr 0x133009610 <col:9, col:21> 'double' lvalue
          `-DeclRefExpr 0x1330095f0 <col:10> 'double' lvalue Var 0x1328faed0 'level_pixel' 'double'
