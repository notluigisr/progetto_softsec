`-FunctionDecl 0x11e80dde8  line:1:19 pri2fac 'int (const int)' static inline
  |-ParmVarDecl 0x11e80dcd8 <col:27, col:37> col:37 used pri 'const int'
  `-CompoundStmt 0x11e80e218 <line:2:1, line:5:1>
    |-DeclStmt 0x11e80dfd8 <line:3:2, col:20>
    | `-VarDecl 0x11e80def8 <col:2, col:19> col:6 used fac 'int' cinit
    |   `-BinaryOperator 0x11e80dfb8 <col:12, col:19> 'int' '>>'
    |     |-ImplicitCastExpr 0x11e80dfa0 <col:12> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11e80df60 <col:12> 'const int' lvalue ParmVar 0x11e80dcd8 'pri' 'const int'
    |     `-IntegerLiteral 0x11e80df80 <col:19> 'int' 3
    `-ReturnStmt 0x11e80e208 <line:4:2, col:38>
      `-ConditionalOperator 0x11e80e1d8 <col:9, col:38> '<dependent type>' contains-errors
        |-ParenExpr 0x11e80e198 <col:9, col:18> 'int'
        | `-BinaryOperator 0x11e80e178 <col:10, col:16> 'int' '>'
        |   |-ImplicitCastExpr 0x11e80e160 <col:10> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x11e80dff0 <col:10> 'int' lvalue Var 0x11e80def8 'fac' 'int'
        |   `-IntegerLiteral 0x11e80e010 <col:16> 'int' 23
        |-RecoveryExpr 0x11e80e1b8 <col:22> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x11e80e0b8 <col:38> 'int' lvalue Var 0x11e80def8 'fac' 'int'
