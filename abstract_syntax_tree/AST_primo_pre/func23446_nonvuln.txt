`-FunctionDecl 0x11e128678  line:1:1 invalid copyCharacters 'int (int, int, const int *, const int *, int *, int *, int, int *, int *)'
  |-ParmVarDecl 0x11e1280d8 <col:16, col:20> col:20 used from 'int'
  |-ParmVarDecl 0x11e128158 <col:26, col:30> col:30 used to 'int'
  |-ParmVarDecl 0x11e1281f0 <col:34, col:64> col:64 invalid table 'const int *'
  |-ParmVarDecl 0x11e128270 <line:2:3, col:19> col:19 invalid input 'const int *'
  |-ParmVarDecl 0x11e128328 <col:26, col:37> col:37 referenced invalid output 'int *'
  |-ParmVarDecl 0x11e1283a8 <col:45, col:50> col:50 used posMapping 'int *'
  |-ParmVarDecl 0x11e128428 <col:62, col:66> col:66 used transOpcode 'int'
  |-ParmVarDecl 0x11e1284a8 <line:3:3, col:8> col:8 used cursorPosition 'int *'
  |-ParmVarDecl 0x11e128528 <col:24, col:29> col:29 used cursorStatus 'int *'
  `-CompoundStmt 0x11e142560 <col:43, line:24:1>
    |-IfStmt 0x11e142500 <line:4:2, line:21:2> has_else
    | |-BinaryOperator 0x11e1287e0 <line:4:6, col:21> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x11e128768 <col:6> 'int' lvalue ParmVar 0x11e128428 'transOpcode' 'int'
    | | `-RecoveryExpr 0x11e1287c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11e141d08 <col:34, line:11:2>
    | | `-WhileStmt 0x11e141ce8 <line:5:3, line:10:3>
    | |   |-BinaryOperator 0x11e141870 <line:5:10, col:17> 'int' '<'
    | |   | |-ImplicitCastExpr 0x11e141840 <col:10> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x11e141800 <col:10> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    | |   | `-ImplicitCastExpr 0x11e141858 <col:17> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x11e141820 <col:17> 'int' lvalue ParmVar 0x11e128158 'to' 'int'
    | |   `-CompoundStmt 0x11e141cc8 <col:21, line:10:3>
    | |     |-IfStmt 0x11e141c70 <line:6:4, line:8:12>
    | |     | |-UnaryOperator 0x11e141c28 <line:6:8, line:7:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |     | | `-CallExpr 0x11e141bc8 <line:6:9, line:7:35> '<dependent type>' contains-errors
    | |     | |   |-DeclRefExpr 0x11e1419f0 <line:6:9> 'int ()' Function 0x11e141938 'putCharacter' 'int ()'
    | |     | |   |-ArraySubscriptExpr 0x11e141ac8 <col:22, col:39> '<dependent type>' contains-errors lvalue
    | |     | |   | |-ImplicitCastExpr 0x11e141a98 <col:22, col:29> '<dependent type>' contains-errors <LValueToRValue>
    | |     | |   | | `-CXXDependentScopeMemberExpr 0x11e141a30 <col:22, col:29> '<dependent type>' contains-errors lvalue ->chars
    | |     | |   | |   `-RecoveryExpr 0x11e141a10 <col:22> '<dependent type>' contains-errors lvalue
    | |     | |   | `-ImplicitCastExpr 0x11e141ab0 <col:35> 'int' <LValueToRValue>
    | |     | |   |   `-DeclRefExpr 0x11e141a78 <col:35> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    | |     | |   |-RecoveryExpr 0x11e141ae8 <col:42> '<dependent type>' contains-errors lvalue
    | |     | |   |-DeclRefExpr 0x11e141b08 <col:49> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    | |     | |   |-RecoveryExpr 0x11e141b28 <col:55> '<dependent type>' contains-errors lvalue
    | |     | |   |-RecoveryExpr 0x11e141b48 <col:62> '<dependent type>' contains-errors lvalue
    | |     | |   |-DeclRefExpr 0x11e141b68 <col:70> 'int *' lvalue ParmVar 0x11e1283a8 'posMapping' 'int *'
    | |     | |   |-DeclRefExpr 0x11e141b88 <line:7:7> 'int *' lvalue ParmVar 0x11e1284a8 'cursorPosition' 'int *'
    | |     | |   `-DeclRefExpr 0x11e141ba8 <col:23> 'int *' lvalue ParmVar 0x11e128528 'cursorStatus' 'int *'
    | |     | `-ReturnStmt 0x11e141c60 <line:8:5, col:12>
    | |     |   `-IntegerLiteral 0x11e141c40 <col:12> 'int' 0
    | |     `-UnaryOperator 0x11e141cb0 <line:9:4, col:8> 'int' postfix '++'
    | |       `-DeclRefExpr 0x11e141c90 <col:4> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    | `-CompoundStmt 0x11e1424e8 <line:11:9, line:21:2>
    |   `-IfStmt 0x11e1424c8 <line:12:3, line:20:3>
    |     |-BinaryOperator 0x11e141d90 <line:12:7, col:12> 'int' '>'
    |     | |-ImplicitCastExpr 0x11e141d60 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x11e141d20 <col:7> 'int' lvalue ParmVar 0x11e128158 'to' 'int'
    |     | `-ImplicitCastExpr 0x11e141d78 <col:12> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x11e141d40 <col:12> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    |     `-CompoundStmt 0x11e1424a8 <col:18, line:20:3>
    |       |-IfStmt 0x11e141f70 <line:13:4, col:65>
    |       | |-BinaryOperator 0x11e141f20 <col:8, col:47> 'int' contains-errors '>'
    |       | | |-ParenExpr 0x11e141e98 <col:8, col:35> '<dependent type>' contains-errors
    |       | | | `-BinaryOperator 0x11e141e78 <col:9, col:31> '<dependent type>' contains-errors '-'
    |       | | |   |-BinaryOperator 0x11e141e38 <col:9, col:26> '<dependent type>' contains-errors '+'
    |       | | |   | |-CXXDependentScopeMemberExpr 0x11e141dd0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->length
    |       | | |   | | `-RecoveryExpr 0x11e141db0 <col:9> '<dependent type>' contains-errors lvalue
    |       | | |   | `-DeclRefExpr 0x11e141e18 <col:26> 'int' lvalue ParmVar 0x11e128158 'to' 'int'
    |       | | |   `-DeclRefExpr 0x11e141e58 <col:31> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    |       | | `-CXXDependentScopeMemberExpr 0x11e141ed8 <col:39, col:47> '<dependent type>' contains-errors lvalue ->maxlength
    |       | |   `-RecoveryExpr 0x11e141eb8 <col:39> '<dependent type>' contains-errors lvalue
    |       | `-ReturnStmt 0x11e141f60 <col:58, col:65>
    |       |   `-IntegerLiteral 0x11e141f40 <col:65> 'int' 0
    |       `-WhileStmt 0x11e142488 <line:14:4, line:19:4>
    |         |-BinaryOperator 0x11e142000 <line:14:11, col:16> 'int' '>'
    |         | |-ImplicitCastExpr 0x11e141fd0 <col:11> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x11e141f90 <col:11> 'int' lvalue ParmVar 0x11e128158 'to' 'int'
    |         | `-ImplicitCastExpr 0x11e141fe8 <col:16> 'int' <LValueToRValue>
    |         |   `-DeclRefExpr 0x11e141fb0 <col:16> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    |         `-CompoundStmt 0x11e142458 <col:22, line:19:4>
    |           |-BinaryOperator 0x11e142118 <line:15:5, col:34> '<dependent type>' contains-errors '='
    |           | |-ArraySubscriptExpr 0x11e1420d8 <col:5, col:30> '<dependent type>' contains-errors lvalue
    |           | | |-ImplicitCastExpr 0x11e1420a8 <col:5> 'int *' <LValueToRValue>
    |           | | | `-DeclRefExpr 0x11e142020 <col:5> 'int *' lvalue ParmVar 0x11e1283a8 'posMapping' 'int *'
    |           | | `-ImplicitCastExpr 0x11e1420c0 <col:16, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |           | |   `-CXXDependentScopeMemberExpr 0x11e142060 <col:16, col:24> '<dependent type>' contains-errors lvalue ->length
    |           | |     `-RecoveryExpr 0x11e142040 <col:16> '<dependent type>' contains-errors lvalue
    |           | `-DeclRefExpr 0x11e1420f8 <col:34> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    |           |-BinaryOperator 0x11e142358 <line:16:5, col:54> '<dependent type>' contains-errors '='
    |           | |-ArraySubscriptExpr 0x11e142260 <col:5, col:33> '<dependent type>' contains-errors lvalue
    |           | | |-ImplicitCastExpr 0x11e142230 <col:5, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |           | | | `-CXXDependentScopeMemberExpr 0x11e142180 <col:5, col:13> '<dependent type>' contains-errors lvalue ->chars
    |           | | |   `-RecoveryExpr 0x11e142158 <col:5> '<dependent type>' contains-errors lvalue
    |           | | |     `-DeclRefExpr 0x11e142138 <col:5> 'int *' lvalue ParmVar 0x11e128328 'output' 'int *'
    |           | | `-ImplicitCastExpr 0x11e142248 <col:19, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |           | |   `-CXXDependentScopeMemberExpr 0x11e1421e8 <col:19, col:27> '<dependent type>' contains-errors lvalue ->length
    |           | |     `-RecoveryExpr 0x11e1421c8 <col:19> '<dependent type>' contains-errors lvalue
    |           | `-ArraySubscriptExpr 0x11e142338 <col:37, col:54> '<dependent type>' contains-errors lvalue
    |           |   |-ImplicitCastExpr 0x11e142308 <col:37, col:44> '<dependent type>' contains-errors <LValueToRValue>
    |           |   | `-CXXDependentScopeMemberExpr 0x11e1422a0 <col:37, col:44> '<dependent type>' contains-errors lvalue ->chars
    |           |   |   `-RecoveryExpr 0x11e142280 <col:37> '<dependent type>' contains-errors lvalue
    |           |   `-ImplicitCastExpr 0x11e142320 <col:50> 'int' <LValueToRValue>
    |           |     `-DeclRefExpr 0x11e1422e8 <col:50> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    |           |-UnaryOperator 0x11e142408 <line:17:5, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
    |           | `-CXXDependentScopeMemberExpr 0x11e1423c0 <col:5, col:13> '<dependent type>' contains-errors lvalue ->length
    |           |   `-RecoveryExpr 0x11e142398 <col:5> '<dependent type>' contains-errors lvalue
    |           |     `-DeclRefExpr 0x11e142378 <col:5> 'int *' lvalue ParmVar 0x11e128328 'output' 'int *'
    |           `-UnaryOperator 0x11e142440 <line:18:5, col:9> 'int' postfix '++'
    |             `-DeclRefExpr 0x11e142420 <col:5> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'
    `-ReturnStmt 0x11e142550 <line:23:2, col:9>
      `-IntegerLiteral 0x11e142530 <col:9> 'int' 1
