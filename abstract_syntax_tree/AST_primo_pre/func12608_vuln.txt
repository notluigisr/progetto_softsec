`-FunctionDecl 0x13e1284c0  line:1:13 invalid manager_invoke_notify_message 'void (int *, int *, int, const char *, int, int *)' static
  |-ParmVarDecl 0x13e128128 <col:43, col:52> col:52 invalid m 'int *'
  |-ParmVarDecl 0x13e1281a8 <col:55, col:61> col:61 invalid u 'int *'
  |-ParmVarDecl 0x13e128228 <col:64, col:70> col:70 invalid pid 'int'
  |-ParmVarDecl 0x13e1282a8 <col:75, col:87> col:87 used buf 'const char *'
  |-ParmVarDecl 0x13e128328 <col:92, col:99> col:99 invalid n 'int'
  |-ParmVarDecl 0x13e1283a8 <col:102, col:109> col:109 invalid fds 'int *'
  `-CompoundStmt 0x13e809c40 <col:114, line:19:1>
    |-CallExpr 0x13e128730 <line:4:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e1286f0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'
    | `-RecoveryExpr 0x13e128710 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e128798 <line:5:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e128758 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'
    | `-RecoveryExpr 0x13e128778 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e809248 <line:6:9, col:19> 'int'
    | |-ImplicitCastExpr 0x13e809230 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13e1287c0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'
    | `-ImplicitCastExpr 0x13e809270 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x13e1287e0 <col:16> 'const char *' lvalue ParmVar 0x13e1282a8 'buf' 'const char *'
    |-CallExpr 0x13e809308 <line:7:9, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e809288 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'
    | `-BinaryOperator 0x13e8092e8 <col:16, col:20> 'int' contains-errors '>'
    |   |-RecoveryExpr 0x13e8092a8 <col:16> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13e8092c8 <col:20> 'int' 0
    |-IfStmt 0x13e809728 <line:10:9, line:13:9>
    | |-UnaryOperator 0x13e8095a8 <line:10:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e809590 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13e809570 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e809708 <col:20, line:13:9>
    |   |-CallExpr 0x13e8096d8 <line:11:17, col:25> 'int'
    |   | `-ImplicitCastExpr 0x13e8096c0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x13e8096a0 <col:17> 'int ()' Function 0x13e8095e8 'log_oom' 'int ()'
    |   `-ReturnStmt 0x13e8096f8 <line:12:17>
    `-IfStmt 0x13e809c10 <line:15:9, line:18:40> has_else
      |-CXXDependentScopeMemberExpr 0x13e809890 <line:15:13, col:29> '<dependent type>' contains-errors lvalue ->notify_message
      | `-CallExpr 0x13e809868 <col:13, col:26> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x13e809828 <col:13> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'
      |   `-RecoveryExpr 0x13e809848 <col:25> '<dependent type>' contains-errors lvalue
      |-CallExpr 0x13e809a60 <line:16:17, col:65> '<dependent type>' contains-errors
      | |-CXXDependentScopeMemberExpr 0x13e809940 <col:17, col:33> '<dependent type>' contains-errors lvalue ->notify_message
      | | `-CallExpr 0x13e809918 <col:17, col:30> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x13e8098d8 <col:17> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'
      | |   `-RecoveryExpr 0x13e8098f8 <col:29> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x13e809988 <col:48> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x13e8099a8 <col:51> '<dependent type>' contains-errors lvalue
      | |-RecoveryExpr 0x13e809a40 <col:56> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x13e8099e0 <col:62> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x13e809be0 <line:18:17, col:40> '<dependent type>' contains-errors
        |-DeclRefExpr 0x13e809b80 <col:17> 'int ()' Function 0x13e809ac8 'log_unit_debug' 'int ()'
        |-RecoveryExpr 0x13e809ba0 <col:32> '<dependent type>' contains-errors lvalue
        `-StringLiteral 0x13e809bc0 <col:35> 'char[4]' lvalue "STR"
