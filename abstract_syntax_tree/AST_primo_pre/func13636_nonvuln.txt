`-FunctionDecl 0x13f9418d8  line:1:12 invalid decode_code_length 'int (struct rar5 *, const int *, int)' static
  |-ParmVarDecl 0x13f928648 <col:31, col:44> col:44 used rar 'struct rar5 *'
  |-ParmVarDecl 0x13f9286e0 <col:49, col:64> col:64 invalid p 'const int *'
  |-ParmVarDecl 0x13f928760 <line:2:5, col:14> col:14 invalid code 'int'
  `-CompoundStmt 0x13f942468 <line:3:1, line:23:1>
    |-DeclStmt 0x13f941ad0 <line:4:2, col:23>
    | |-VarDecl 0x13f9419b0 <col:2, col:6> col:6 used lbits 'int'
    | `-VarDecl 0x13f941a30 <col:2, col:22> col:13 used length 'int' cinit
    |   `-IntegerLiteral 0x13f941a98 <col:22> 'int' 2
    |-IfStmt 0x13f941ea8 <line:5:2, line:11:2> has_else
    | |-BinaryOperator 0x13f941b28 <line:5:5, col:12> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13f941ae8 <col:5> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13f941b08 <col:12> 'int' 8
    | |-CompoundStmt 0x13f941c18 <col:15, line:8:2>
    | | |-BinaryOperator 0x13f941b88 <line:6:3, col:11> 'int' '='
    | | | |-DeclRefExpr 0x13f941b48 <col:3> 'int' lvalue Var 0x13f9419b0 'lbits' 'int'
    | | | `-IntegerLiteral 0x13f941b68 <col:11> 'int' 0
    | | `-CompoundAssignOperator 0x13f941be8 <line:7:3, col:13> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   |-DeclRefExpr 0x13f941ba8 <col:3> 'int' lvalue Var 0x13f941a30 'length' 'int'
    | |   `-RecoveryExpr 0x13f941bc8 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f941e88 <line:8:9, line:11:2>
    |   |-BinaryOperator 0x13f941cf8 <line:9:3, col:22> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13f941c38 <col:3> 'int' lvalue Var 0x13f9419b0 'lbits' 'int'
    |   | `-BinaryOperator 0x13f941cd8 <col:11, col:22> '<dependent type>' contains-errors '-'
    |   |   |-BinaryOperator 0x13f941c98 <col:11, col:18> '<dependent type>' contains-errors '/'
    |   |   | |-RecoveryExpr 0x13f941c58 <col:11> '<dependent type>' contains-errors lvalue
    |   |   | `-IntegerLiteral 0x13f941c78 <col:18> 'int' 4
    |   |   `-IntegerLiteral 0x13f941cb8 <col:22> 'int' 1
    |   `-CompoundAssignOperator 0x13f941e58 <line:10:3, col:33> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x13f941d18 <col:3> 'int' lvalue Var 0x13f941a30 'length' 'int'
    |     `-BinaryOperator 0x13f941e38 <col:13, col:33> '<dependent type>' contains-errors '<<'
    |       |-ParenExpr 0x13f941df8 <col:13, col:28> '<dependent type>' contains-errors
    |       | `-BinaryOperator 0x13f941dd8 <col:14, col:27> '<dependent type>' contains-errors '|'
    |       |   |-IntegerLiteral 0x13f941d38 <col:14> 'int' 4
    |       |   `-ParenExpr 0x13f941db8 <col:18, col:27> '<dependent type>' contains-errors
    |       |     `-BinaryOperator 0x13f941d98 <col:19, col:26> '<dependent type>' contains-errors '&'
    |       |       |-RecoveryExpr 0x13f941d58 <col:19> '<dependent type>' contains-errors lvalue
    |       |       `-IntegerLiteral 0x13f941d78 <col:26> 'int' 3
    |       `-DeclRefExpr 0x13f941e18 <col:33> 'int' lvalue Var 0x13f9419b0 'lbits' 'int'
    |-IfStmt 0x13f942400 <line:13:2, line:20:2>
    | |-BinaryOperator 0x13f941f30 <line:13:5, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x13f941f18 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f941ed8 <col:5> 'int' lvalue Var 0x13f9419b0 'lbits' 'int'
    | | `-IntegerLiteral 0x13f941ef8 <col:13> 'int' 0
    | `-CompoundStmt 0x13f9423d8 <col:16, line:20:2>
    |   |-DeclStmt 0x13f941fd0 <line:14:3, col:10>
    |   | `-VarDecl 0x13f941f68 <col:3, col:7> col:7 used add 'int'
    |   |-IfStmt 0x13f942330 <line:16:3, line:17:12>
    |   | |-BinaryOperator 0x13f9422c8 <line:16:6, col:57> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x13f9422a8 <col:6> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x13f942248 <col:20, col:57> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13f942160 <col:20> 'int ()' Function 0x13f9420a8 'read_consume_bits' 'int ()'
    |   | |   |-DeclRefExpr 0x13f942180 <col:38> 'struct rar5 *' lvalue ParmVar 0x13f928648 'rar' 'struct rar5 *'
    |   | |   |-RecoveryExpr 0x13f9421a0 <col:43> '<dependent type>' contains-errors lvalue
    |   | |   |-DeclRefExpr 0x13f9421c0 <col:46> 'int' lvalue Var 0x13f9419b0 'lbits' 'int'
    |   | |   `-UnaryOperator 0x13f942230 <col:53, col:54> 'int *' prefix '&' cannot overflow
    |   | |     `-DeclRefExpr 0x13f9421e0 <col:54> 'int' lvalue Var 0x13f941f68 'add' 'int'
    |   | `-ReturnStmt 0x13f942320 <line:17:4, col:12>
    |   |   `-UnaryOperator 0x13f942308 <col:11, col:12> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x13f9422e8 <col:12> 'int' 1
    |   `-CompoundAssignOperator 0x13f9423a8 <line:19:3, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x13f942350 <col:3> 'int' lvalue Var 0x13f941a30 'length' 'int'
    |     `-ImplicitCastExpr 0x13f942390 <col:13> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13f942370 <col:13> 'int' lvalue Var 0x13f941f68 'add' 'int'
    `-ReturnStmt 0x13f942458 <line:22:2, col:9>
      `-ImplicitCastExpr 0x13f942440 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13f942420 <col:9> 'int' lvalue Var 0x13f941a30 'length' 'int'
