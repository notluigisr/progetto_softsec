`-FunctionDecl 0x12600e358  line:1:12 zpff_init 'int (struct hid_device *)' static
  |-ParmVarDecl 0x12600e248 <col:22, col:41> col:41 used hid 'struct hid_device *'
  `-CompoundStmt 0x125924c68 <line:2:1, line:38:1>
    |-DeclStmt 0x126026838 <line:3:2, col:26>
    | |-RecordDecl 0x126026650 <col:2, col:9> col:9 struct zpff_device
    | `-VarDecl 0x1260267b8 <col:2, col:22> col:22 used zpff 'struct zpff_device *'
    |-DeclStmt 0x126026a38 <line:4:2, col:27>
    | |-RecordDecl 0x126026850 <col:2, col:9> col:9 struct hid_report
    | `-VarDecl 0x1260269b8 <col:2, col:21> col:21 used report 'struct hid_report *'
    |-DeclStmt 0x126026e48 <line:5:2, line:6:30>
    | |-RecordDecl 0x126026a50 <line:5:2, col:9> col:9 struct hid_input
    | `-VarDecl 0x126026bb8 <col:2, col:20> col:20 used hidinput 'struct hid_input *'
    |-DeclStmt 0x1260270a8 <line:7:2, col:41>
    | |-RecordDecl 0x126026e60 <col:2, col:9> col:9 struct input_dev
    | `-VarDecl 0x126026fc8 <col:2, col:36> col:20 used dev 'struct input_dev *' cinit
    |   `-RecoveryExpr 0x126027068 <col:26, col:36> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x126027030 <col:26> 'struct hid_input *' lvalue Var 0x126026bb8 'hidinput' 'struct hid_input *'
    |-DeclStmt 0x1260271d8 <line:8:2, col:14>
    | |-VarDecl 0x1260270d8 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x126027158 <col:2, col:9> col:9 used error 'int'
    |-ForStmt 0x1259226e8 <line:10:2, line:14:2>
    | |-BinaryOperator 0x126027230 <line:10:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1260271f0 <col:7> 'int' lvalue Var 0x1260270d8 'i' 'int'
    | | `-IntegerLiteral 0x126027210 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1260272a8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x126027290 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126027250 <col:14> 'int' lvalue Var 0x1260270d8 'i' 'int'
    | | `-IntegerLiteral 0x126027270 <col:18> 'int' 4
    | |-UnaryOperator 0x1260272e8 <col:21, col:22> 'int' postfix '++'
    | | `-DeclRefExpr 0x1260272c8 <col:21> 'int' lvalue Var 0x1260270d8 'i' 'int'
    | `-CompoundStmt 0x1259226c8 <col:26, line:14:2>
    |   |-BinaryOperator 0x126027588 <line:11:3, col:63> 'struct hid_report *' contains-errors '='
    |   | |-DeclRefExpr 0x126027300 <col:3> 'struct hid_report *' lvalue Var 0x1260269b8 'report' 'struct hid_report *'
    |   | `-CallExpr 0x126027540 <col:12, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x126027400 <col:12> 'int ()' Function 0x126027348 'hid_validate_values' 'int ()'
    |   |   |-DeclRefExpr 0x126027420 <col:32> 'struct hid_device *' lvalue ParmVar 0x12600e248 'hid' 'struct hid_device *'
    |   |   |-RecoveryExpr 0x126027520 <col:37> '<dependent type>' contains-errors lvalue
    |   |   |-IntegerLiteral 0x126027458 <col:56> 'int' 0
    |   |   |-DeclRefExpr 0x126027478 <col:59> 'int' lvalue Var 0x1260270d8 'i' 'int'
    |   |   `-IntegerLiteral 0x126027498 <col:62> 'int' 1
    |   `-IfStmt 0x1259226a8 <line:12:3, line:13:12>
    |     |-UnaryOperator 0x1260275e0 <line:12:7, col:8> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x1260275c8 <col:8> 'struct hid_report *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1260275a8 <col:8> 'struct hid_report *' lvalue Var 0x1260269b8 'report' 'struct hid_report *'
    |     `-ReturnStmt 0x125922698 <line:13:4, col:12>
    |       `-UnaryOperator 0x125922680 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x125922668 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x125922648 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1259229a0 <line:17:2, line:18:11>
    | |-UnaryOperator 0x1259228e0 <line:17:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1259228c8 <col:7> 'struct zpff_device *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1259228a8 <col:7> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | `-ReturnStmt 0x125922990 <line:18:3, col:11>
    |   `-UnaryOperator 0x125922978 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x125922960 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x125922940 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x125922b88 <line:20:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125922aa0 <col:2> 'int ()' Function 0x1259229e8 'set_bit' 'int ()'
    | |-RecoveryExpr 0x125922b68 <col:10> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x125922b10 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x125922ad8 <col:21> 'struct input_dev *' contains-errors lvalue Var 0x126026fc8 'dev' 'struct input_dev *'
    |-BinaryOperator 0x125922de0 <line:22:2, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x125922bb8 <col:2> 'int' lvalue Var 0x126027158 'error' 'int'
    | `-CallExpr 0x125922da8 <col:10, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125922cb8 <col:10> 'int ()' Function 0x125922c00 'input_ff_create_memless' 'int ()'
    |   |-DeclRefExpr 0x125922cd8 <col:34> 'struct input_dev *' contains-errors lvalue Var 0x126026fc8 'dev' 'struct input_dev *'
    |   |-DeclRefExpr 0x125922cf8 <col:39> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    |   `-RecoveryExpr 0x125922d88 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125923050 <line:23:2, line:26:2>
    | |-ImplicitCastExpr 0x125922e20 <line:23:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x125922e00 <col:6> 'int' lvalue Var 0x126027158 'error' 'int'
    | `-CompoundStmt 0x125923030 <col:13, line:26:2>
    |   |-CallExpr 0x125922fa8 <line:24:3, col:13> 'int'
    |   | |-ImplicitCastExpr 0x125922f90 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x125922f18 <col:3> 'int ()' Function 0x125922e60 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x125922fd0 <col:9> 'struct zpff_device *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x125922f38 <col:9> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    |   `-ReturnStmt 0x125923020 <line:25:3, col:10>
    |     `-ImplicitCastExpr 0x125923008 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x125922fe8 <col:10> 'int' lvalue Var 0x126027158 'error' 'int'
    |-BinaryOperator 0x1259230f0 <line:28:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x1259230a8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x125923070 <col:2> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | `-DeclRefExpr 0x1259230d0 <col:17> 'struct hid_report *' lvalue Var 0x1260269b8 'report' 'struct hid_report *'
    |-BinaryOperator 0x1259232d0 <line:29:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x125923290 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x125923278 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x125923210 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x1259231f0 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x1259231d8 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x125923170 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x125923148 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x125923110 <col:2> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | | |     `-IntegerLiteral 0x1259231b8 <col:22> 'int' 0
    | | `-IntegerLiteral 0x125923258 <col:32> 'int' 0
    | `-IntegerLiteral 0x1259232b0 <col:37> 'int' 0
    |-BinaryOperator 0x1259234b0 <line:30:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x125923470 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x125923458 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1259233f0 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x1259233d0 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x1259233b8 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x125923350 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x125923328 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x1259232f0 <col:2> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | | |     `-IntegerLiteral 0x125923398 <col:22> 'int' 1
    | | `-IntegerLiteral 0x125923438 <col:32> 'int' 0
    | `-IntegerLiteral 0x125923490 <col:37> 'int' 2
    |-BinaryOperator 0x1259246c0 <line:31:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x125924680 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x125924668 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x125924600 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x1259235b0 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x125923598 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x125923530 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x125923508 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x1259234d0 <col:2> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | | |     `-IntegerLiteral 0x125923578 <col:22> 'int' 2
    | | `-IntegerLiteral 0x125924648 <col:32> 'int' 0
    | `-IntegerLiteral 0x1259246a0 <col:37> 'int' 0
    |-BinaryOperator 0x1259248a0 <line:32:2, col:37> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x125924860 <col:2, col:33> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x125924848 <col:2, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x1259247e0 <col:2, col:26> '<dependent type>' contains-errors lvalue ->value
    | | |   `-ArraySubscriptExpr 0x1259247c0 <col:2, col:23> '<dependent type>' contains-errors lvalue
    | | |     |-ImplicitCastExpr 0x1259247a8 <col:2, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | |     | `-CXXDependentScopeMemberExpr 0x125924740 <col:2, col:16> '<dependent type>' contains-errors lvalue ->field
    | | |     |   `-RecoveryExpr 0x125924718 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | |     |     `-DeclRefExpr 0x1259246e0 <col:2> 'struct zpff_device *' lvalue Var 0x1260267b8 'zpff' 'struct zpff_device *'
    | | |     `-IntegerLiteral 0x125924788 <col:22> 'int' 3
    | | `-IntegerLiteral 0x125924828 <col:32> 'int' 0
    | `-IntegerLiteral 0x125924880 <col:37> 'int' 0
    |-CallExpr 0x125924bd8 <line:35:2, col:21> 'int'
    | |-ImplicitCastExpr 0x125924bc0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x125924b20 <col:2> 'int ()' Function 0x125924a68 'hid_info' 'int ()'
    | |-ImplicitCastExpr 0x125924c08 <col:11> 'struct hid_device *' <LValueToRValue>
    | | `-DeclRefExpr 0x125924b40 <col:11> 'struct hid_device *' lvalue ParmVar 0x12600e248 'hid' 'struct hid_device *'
    | `-ImplicitCastExpr 0x125924c20 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x125924ba0 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x125924c58 <line:37:2, col:9>
      `-IntegerLiteral 0x125924c38 <col:9> 'int' 0
