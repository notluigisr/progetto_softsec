`-FunctionDecl 0x12780e358  line:1:12 handle_vmclear 'int (struct kvm_vcpu *)' static
  |-ParmVarDecl 0x12780e248 <col:27, col:44> col:44 used vcpu 'struct kvm_vcpu *'
  `-CompoundStmt 0x12782a818 <line:2:1, line:34:1>
    |-DeclStmt 0x127826a48 <line:3:2, col:37>
    | |-RecordDecl 0x127826650 <col:2, col:9> col:9 struct vcpu_vmx
    | `-VarDecl 0x1278267b8 <col:2, col:36> col:19 used vmx 'struct vcpu_vmx *' cinit
    |   `-ImplicitCastExpr 0x127826a18 <col:25, col:36> 'struct vcpu_vmx *' <IntegralToPointer>
    |     `-CallExpr 0x1278269d8 <col:25, col:36> 'int'
    |       |-ImplicitCastExpr 0x1278269c0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x127826950 <col:25> 'int ()' Function 0x127826898 'to_vmx' 'int ()'
    |       `-ImplicitCastExpr 0x127826a00 <col:32> 'struct kvm_vcpu *' <LValueToRValue>
    |         `-DeclRefExpr 0x127826970 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    |-IfStmt 0x127826c20 <line:7:2, line:8:10>
    | |-UnaryOperator 0x127826bd8 <line:7:6, col:39> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x127826b98 <col:7, col:39> 'int'
    | |   |-ImplicitCastExpr 0x127826b80 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x127826b40 <col:7> 'int ()' Function 0x127826a88 'nested_vmx_check_permission' 'int ()'
    | |   `-ImplicitCastExpr 0x127826bc0 <col:35> 'struct kvm_vcpu *' <LValueToRValue>
    | |     `-DeclRefExpr 0x127826b60 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    | `-ReturnStmt 0x127826c10 <line:8:3, col:10>
    |   `-IntegerLiteral 0x127826bf0 <col:10> 'int' 1
    |-IfStmt 0x127826e58 <line:10:2, line:11:10>
    | |-CallExpr 0x127826df8 <line:10:6, col:39> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x127826d20 <col:6> 'int ()' Function 0x127826c68 'nested_vmx_get_vmptr' 'int ()'
    | | |-DeclRefExpr 0x127826d40 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    | | `-UnaryOperator 0x127826de0 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x127826dc0 <col:34> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x127826e48 <line:11:3, col:10>
    |   `-IntegerLiteral 0x127826e28 <col:10> 'int' 1
    |-IfStmt 0x127827500 <line:13:2, line:16:2>
    | |-RecoveryExpr 0x127827180 <line:13:6, col:62> '_Bool' contains-errors
    | `-CompoundStmt 0x1278274e0 <col:65, line:16:2>
    |   |-CallExpr 0x127827328 <line:14:3, col:60> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127827280 <col:3> 'int ()' Function 0x1278271c8 'nested_vmx_failValid' 'int ()'
    |   | |-DeclRefExpr 0x1278272a0 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    |   | `-RecoveryExpr 0x127827308 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1278274d0 <line:15:3, col:44>
    |     `-CallExpr 0x127827490 <col:10, col:44> 'int'
    |       |-ImplicitCastExpr 0x127827478 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x127827438 <col:10> 'int ()' Function 0x127827380 'kvm_skip_emulated_instruction' 'int ()'
    |       `-ImplicitCastExpr 0x1278274b8 <col:40> 'struct kvm_vcpu *' <LValueToRValue>
    |         `-DeclRefExpr 0x127827458 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    |-IfStmt 0x127829fe0 <line:18:2, line:21:2>
    | |-BinaryOperator 0x127829e20 <line:18:6, col:27> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x127829e00 <col:6> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x127827598 <col:15, col:27> '<dependent type>' contains-errors lvalue .vmxon_ptr
    | |   `-RecoveryExpr 0x127827570 <col:15, col:20> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x127827538 <col:15> 'struct vcpu_vmx *' lvalue Var 0x1278267b8 'vmx' 'struct vcpu_vmx *'
    | `-CompoundStmt 0x127829fc0 <col:38, line:21:2>
    |   |-CallExpr 0x127829ee8 <line:19:3, col:58> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127829e40 <col:3> 'int ()' Function 0x1278271c8 'nested_vmx_failValid' 'int ()'
    |   | |-DeclRefExpr 0x127829e60 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    |   | `-RecoveryExpr 0x127829ec8 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x127829fb0 <line:20:3, col:44>
    |     `-CallExpr 0x127829f70 <col:10, col:44> 'int'
    |       |-ImplicitCastExpr 0x127829f58 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x127829f18 <col:10> 'int ()' Function 0x127827380 'kvm_skip_emulated_instruction' 'int ()'
    |       `-ImplicitCastExpr 0x127829f98 <col:40> 'struct kvm_vcpu *' <LValueToRValue>
    |         `-DeclRefExpr 0x127829f38 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    |-IfStmt 0x12782a298 <line:23:2, line:24:28>
    | |-BinaryOperator 0x12782a100 <line:23:6, col:27> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12782a0e0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x12782a078 <col:15, col:27> '<dependent type>' contains-errors lvalue .current_vmptr
    | |   `-RecoveryExpr 0x12782a050 <col:15, col:20> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12782a018 <col:15> 'struct vcpu_vmx *' lvalue Var 0x1278267b8 'vmx' 'struct vcpu_vmx *'
    | `-CallExpr 0x12782a258 <line:24:3, col:28> 'int'
    |   |-ImplicitCastExpr 0x12782a240 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12782a200 <col:3> 'int ()' Function 0x12782a148 'nested_release_vmcs12' 'int ()'
    |   `-ImplicitCastExpr 0x12782a280 <col:25> 'struct vcpu_vmx *' <LValueToRValue>
    |     `-DeclRefExpr 0x12782a220 <col:25> 'struct vcpu_vmx *' lvalue Var 0x1278267b8 'vmx' 'struct vcpu_vmx *'
    |-CallExpr 0x12782a730 <line:32:2, col:25> 'int'
    | |-ImplicitCastExpr 0x12782a718 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12782a6d8 <col:2> 'int ()' Function 0x12782a620 'nested_vmx_succeed' 'int ()'
    | `-ImplicitCastExpr 0x12782a758 <col:21> 'struct kvm_vcpu *' <LValueToRValue>
    |   `-DeclRefExpr 0x12782a6f8 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
    `-ReturnStmt 0x12782a808 <line:33:2, col:43>
      `-CallExpr 0x12782a7c8 <col:9, col:43> 'int'
        |-ImplicitCastExpr 0x12782a7b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12782a770 <col:9> 'int ()' Function 0x127827380 'kvm_skip_emulated_instruction' 'int ()'
        `-ImplicitCastExpr 0x12782a7f0 <col:39> 'struct kvm_vcpu *' <LValueToRValue>
          `-DeclRefExpr 0x12782a790 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x12780e248 'vcpu' 'struct kvm_vcpu *'
