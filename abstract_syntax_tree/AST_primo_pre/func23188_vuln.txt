`-FunctionDecl 0x10580ddf8  line:1:8 invalid cJSON_Parse 'int *(const char *)'
  |-ParmVarDecl 0x10580dcf0 <col:21, col:33> col:33 used value 'const char *'
  `-CompoundStmt 0x105828578 <line:2:1, line:13:1>
    |-IfStmt 0x10580e160 <line:5:2, line:6:10>
    | |-RecoveryExpr 0x10580e0f8 <line:5:7, col:32> '_Bool' contains-errors
    | `-ReturnStmt 0x10580e150 <line:6:3, col:10>
    |   `-ImplicitCastExpr 0x10580e138 <col:10> 'int *' <NullToPointer>
    |     `-IntegerLiteral 0x10580e118 <col:10> 'int' 0
    |-IfStmt 0x105828510 <line:8:2, line:11:2>
    | |-UnaryOperator 0x105828308 <line:8:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1058282d8 <col:9, col:39> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x10580e260 <col:9> 'int ()' Function 0x10580e1a8 'parse_value' 'int ()'
    | |   |-RecoveryExpr 0x105828260 <col:22> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x105828298 <col:25, col:37> 'int'
    | |     |-ImplicitCastExpr 0x105828280 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x10580e378 <col:25> 'int ()' Function 0x10580e2c0 'skip' 'int ()'
    | |     `-ImplicitCastExpr 0x1058282c0 <col:31> 'const char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x10580e398 <col:31> 'const char *' lvalue ParmVar 0x10580dcf0 'value' 'const char *'
    | `-CompoundStmt 0x1058284f0 <col:43, line:11:2>
    |   |-CallExpr 0x105828480 <line:9:3, col:19> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105828400 <col:3> 'int ()' Function 0x105828348 'cJSON_Delete' 'int ()'
    |   | `-RecoveryExpr 0x105828460 <col:17> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1058284e0 <line:10:3, col:10>
    |     `-ImplicitCastExpr 0x1058284c8 <col:10> 'int *' <NullToPointer>
    |       `-IntegerLiteral 0x1058284a8 <col:10> 'int' 0
    `-ReturnStmt 0x105828568 <line:12:2, col:9>
      `-RecoveryExpr 0x105828548 <col:9> '<dependent type>' contains-errors lvalue
