`-FunctionDecl 0x140128a38  line:1:12 phar_tar_setupmetadata 'int (void *, void *)' static
  |-ParmVarDecl 0x1401288d8 <col:35, col:41> col:41 pDest 'void *'
  |-ParmVarDecl 0x140128958 <col:48, col:54> col:54 used argument 'void *'
  `-CompoundStmt 0x140144bd0 <line:2:1, line:54:1>
    |-DeclStmt 0x140128bb8 <line:3:2, col:17>
    | `-VarDecl 0x140128b50 <col:2, col:6> col:6 used lookfor_len 'int'
    |-DeclStmt 0x140128ea0 <line:4:2, col:72>
    | |-RecordDecl 0x140128bd0 <col:2, col:9> col:9 struct _phar_pass_tar_info
    | `-VarDecl 0x140128d38 <col:2, col:64> col:30 used i 'struct _phar_pass_tar_info *' cinit
    |   `-CStyleCastExpr 0x140128e60 <col:34, col:64> 'struct _phar_pass_tar_info *' <BitCast>
    |     `-ImplicitCastExpr 0x140128e48 <col:64> 'void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x140128da0 <col:64> 'void *' lvalue ParmVar 0x140128958 'argument' 'void *'
    |-DeclStmt 0x1401426a0 <line:5:2, col:35>
    | |-VarDecl 0x140128ed0 <col:2, col:8> col:8 used lookfor 'char *'
    | `-VarDecl 0x140128f88 <col:2, col:30> col:19 used error 'char **' cinit
    |   `-RecoveryExpr 0x140142660 <col:27, col:30> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x140142200 <col:27> 'struct _phar_pass_tar_info *' lvalue Var 0x140128d38 'i' 'struct _phar_pass_tar_info *'
    |-IfStmt 0x140143058 <line:8:2, line:19:2>
    | |-BinaryOperator 0x140142918 <line:8:6, col:43> 'int' contains-errors '>='
    | | |-CXXDependentScopeMemberExpr 0x140142898 <col:6, col:13> '<dependent type>' contains-errors lvalue ->filename_len
    | | | `-RecoveryExpr 0x140142878 <col:6> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1401428f8 <col:29, col:43> 'unsigned long' '-'
    | |   |-UnaryExprOrTypeTraitExpr 0x1401427e0 <col:29, col:41> 'unsigned long' sizeof
    | |   | `-ParenExpr 0x1401427c0 <col:35, col:41> 'char[4]' lvalue
    | |   |   `-StringLiteral 0x1401427a0 <col:36> 'char[4]' lvalue "STR"
    | |   `-ImplicitCastExpr 0x1401428e0 <col:43> 'unsigned long' <IntegralCast>
    | |     `-IntegerLiteral 0x140142800 <col:43> 'int' 1
    | `-CompoundStmt 0x140143030 <col:47, line:19:2>
    |   |-IfStmt 0x140142d50 <line:9:3, line:11:3>
    |   | |-BinaryOperator 0x140142b10 <line:9:7, col:44> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x140142a90 <col:7, col:14> '<dependent type>' contains-errors lvalue ->filename_len
    |   | | | `-RecoveryExpr 0x140142a70 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x140142af0 <col:30, col:44> 'unsigned long' '-'
    |   | |   |-UnaryExprOrTypeTraitExpr 0x1401429d8 <col:30, col:42> 'unsigned long' sizeof
    |   | |   | `-ParenExpr 0x1401429b8 <col:36, col:42> 'char[4]' lvalue
    |   | |   |   `-StringLiteral 0x140142998 <col:37> 'char[4]' lvalue "STR"
    |   | |   `-ImplicitCastExpr 0x140142ad8 <col:44> 'unsigned long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x1401429f8 <col:44> 'int' 1
    |   | `-CompoundStmt 0x140142d40 <col:48, line:11:3>
    |   |-IfStmt 0x140142fc8 <line:13:3, line:16:3>
    |   | |-BinaryOperator 0x140142f48 <line:13:7, col:46> 'int' contains-errors '>='
    |   | | |-CXXDependentScopeMemberExpr 0x140142ec8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->filename_len
    |   | | | `-RecoveryExpr 0x140142ea8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x140142f28 <col:30, col:46> 'unsigned long' '-'
    |   | |   |-UnaryExprOrTypeTraitExpr 0x140142e10 <col:30, col:42> 'unsigned long' sizeof
    |   | |   | `-ParenExpr 0x140142df0 <col:36, col:42> 'char[4]' lvalue
    |   | |   |   `-StringLiteral 0x140142dd0 <col:37> 'char[4]' lvalue "STR"
    |   | |   `-ImplicitCastExpr 0x140142f10 <col:46> 'unsigned long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x140142e30 <col:46> 'int' 1
    |   | `-CompoundStmt 0x140142fb0 <col:51, line:16:3>
    |   |   `-ReturnStmt 0x140142fa0 <line:15:4, col:11>
    |   |     `-RecoveryExpr 0x140142f80 <col:11> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x140143020 <line:18:3, col:10>
    |     `-RecoveryExpr 0x140143000 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140144000 <line:21:2, line:23:2>
    | |-UnaryOperator 0x140143188 <line:21:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x140143170 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x140143128 <col:7, col:14> '<dependent type>' contains-errors lvalue ->is_modified
    | |     `-RecoveryExpr 0x140143108 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1401431e8 <col:27, line:23:2>
    |   `-ReturnStmt 0x1401431d8 <line:22:3, col:10>
    |     `-RecoveryExpr 0x1401431b8 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1401444e0 <line:28:2, line:32:2>
    | |-RecoveryExpr 0x1401441b8 <line:28:6, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x1401444c8 <col:24, line:32:2>
    |   `-CallExpr 0x140144488 <line:30:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x140144470 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1401443f8 <col:3> 'int ()' Function 0x140144340 'efree' 'int ()'
    |     `-ImplicitCastExpr 0x1401444b0 <col:9> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x140144418 <col:9> 'char *' lvalue Var 0x140128ed0 'lookfor' 'char *'
    |-IfStmt 0x140144860 <line:34:2, line:39:2>
    | |-RecoveryExpr 0x140144640 <line:34:6, col:98> '_Bool' contains-errors
    | `-CompoundStmt 0x140144838 <col:101, line:39:2>
    |   |-DeclStmt 0x1401446e0 <line:35:3, col:10>
    |   | `-VarDecl 0x140144678 <col:3, col:7> col:7 used ret 'int'
    |   |-CallExpr 0x1401447b0 <line:37:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x140144798 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x140144758 <col:3> 'int ()' Function 0x140144340 'efree' 'int ()'
    |   | `-ImplicitCastExpr 0x1401447d8 <col:9> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x140144778 <col:9> 'char *' lvalue Var 0x140128ed0 'lookfor' 'char *'
    |   `-ReturnStmt 0x140144828 <line:38:3, col:10>
    |     `-ImplicitCastExpr 0x140144810 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1401447f0 <col:10> 'int' lvalue Var 0x140144678 'ret' 'int'
    `-IfStmt 0x140144b70 <line:47:2, line:51:2>
      |-RecoveryExpr 0x140144a20 <line:47:6, col:141> '_Bool' contains-errors
      `-CompoundStmt 0x140144b58 <col:144, line:51:2>
        `-CallExpr 0x140144a98 <line:48:3, col:16> 'int'
          |-ImplicitCastExpr 0x140144a80 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x140144a40 <col:3> 'int ()' Function 0x140144340 'efree' 'int ()'
          `-ImplicitCastExpr 0x140144ac0 <col:9> 'char *' <LValueToRValue>
            `-DeclRefExpr 0x140144a60 <col:9> 'char *' lvalue Var 0x140128ed0 'lookfor' 'char *'
