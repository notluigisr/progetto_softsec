`-FunctionDecl 0x12e128198  line:1:5 referenced nf_ct_frag6_init 'int (void)'
  `-CompoundStmt 0x12e143118 <line:2:1, line:21:1>
    |-DeclStmt 0x12e128328 <line:3:2, col:13>
    | `-VarDecl 0x12e1282a0 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x12e128308 <col:12> 'int' 0
    |-BinaryOperator 0x12e142ba8 <line:12:2, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e142978 <col:2> 'int' lvalue Var 0x12e1282a0 'ret' 'int'
    | `-CallExpr 0x12e142b80 <col:8, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e142ab0 <col:8> 'int ()' Function 0x12e1429f8 'inet_frags_init' 'int ()'
    |   `-UnaryOperator 0x12e142b68 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12e142b48 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e142c68 <line:13:2, line:14:8>
    | |-ImplicitCastExpr 0x12e142be8 <line:13:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12e142bc8 <col:6> 'int' lvalue Var 0x12e1282a0 'ret' 'int'
    | `-GotoStmt 0x12e142c50 <line:14:3, col:8> 'out' 0x12e142c00
    |-BinaryOperator 0x12e142e80 <line:15:2, col:45> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e142c88 <col:2> 'int' lvalue Var 0x12e1282a0 'ret' 'int'
    | `-CallExpr 0x12e142e58 <col:8, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e142d88 <col:8> 'int ()' Function 0x12e142cd0 'register_pernet_subsys' 'int ()'
    |   `-UnaryOperator 0x12e142e40 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12e142e20 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e143090 <line:16:2, line:17:28>
    | |-ImplicitCastExpr 0x12e142ec0 <line:16:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12e142ea0 <col:6> 'int' lvalue Var 0x12e1282a0 'ret' 'int'
    | `-CallExpr 0x12e143068 <line:17:3, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e142fb8 <col:3> 'int ()' Function 0x12e142f00 'inet_frags_fini' 'int ()'
    |   `-UnaryOperator 0x12e143050 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12e143030 <col:20> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x12e1430f8 <line:19:1, line:20:9> 'out'
      `-ReturnStmt 0x12e1430e8 <col:2, col:9>
        `-ImplicitCastExpr 0x12e1430d0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x12e1430b0 <col:9> 'int' lvalue Var 0x12e1282a0 'ret' 'int'
