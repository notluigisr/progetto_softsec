`-FunctionDecl 0x14b00de88  line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x14b00dd28 <col:19, col:34> col:34 referenced invalid context 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x14a925720 <col:61, line:68:1>
    |-ImplicitCastExpr 0x14b00e058 <line:3:3> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x14b00e030 <col:3> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14b00e010 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'context' 'int *'
    |-CallExpr 0x14b00e230 <col:13, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b00e1d0 <col:13> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | |-RecoveryExpr 0x14b00e1f0 <col:24> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14b00e210 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a923578 <line:4:3, line:6:3>
    | |-BinaryOperator 0x14a9234f8 <line:4:7, col:54> 'int' contains-errors '&&'
    | | |-CallExpr 0x14a9233e8 <col:7, col:40> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14b00e340 <col:7> 'int ()' Function 0x14b00e288 'IsConstantTensor' 'int ()'
    | | | `-RecoveryExpr 0x14a9233c0 <col:24, col:35> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14b00e360 <col:24> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x14a9234b0 <col:45, col:54> '<dependent type>' contains-errors lvalue ->float_input_initialized
    | |   `-RecoveryExpr 0x14a923490 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14a923560 <col:79, line:6:3>
    |   `-ReturnStmt 0x14a923550 <line:5:5, col:12>
    |     `-RecoveryExpr 0x14a923530 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a923800 <line:10:3, col:24>
    | `-VarDecl 0x14a923760 <col:3, col:17> col:8 used status 'int' auto cinit
    |   `-RecoveryExpr 0x14a9237e0 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a9238b8 <line:12:3, line:14:3>
    | |-RecoveryExpr 0x14a923838 <line:12:7, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x14a9238a0 <col:28, line:14:3>
    |   `-ReturnStmt 0x14a923890 <line:13:5, col:12>
    |     `-ImplicitCastExpr 0x14a923878 <col:12> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14a923858 <col:12> 'int' contains-errors lvalue Var 0x14a923760 'status' 'int'
    |-IfStmt 0x14a923978 <line:16:3, line:18:3>
    | |-CallExpr 0x14a923940 <line:16:7, col:40> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14a9238d8 <col:7> 'int ()' Function 0x14b00e288 'IsConstantTensor' 'int ()'
    | | `-RecoveryExpr 0x14a923918 <col:24, col:35> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14a9238f8 <col:24> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    | `-CompoundStmt 0x14a923968 <col:43, line:18:3>
    |-IfStmt 0x14a924dc8 <line:21:3, line:47:3>
    | |-RecoveryExpr 0x14a9239b8 <line:21:7, col:28> '_Bool' contains-errors
    | `-CompoundStmt 0x14a924d88 <col:33, line:47:3>
    |   |-ForStmt 0x14a923e98 <line:25:5, line:29:5>
    |   | |-DeclStmt 0x14a923b98 <line:25:10, col:19>
    |   | | `-VarDecl 0x14a923b10 <col:10, col:18> col:14 used i 'int' cinit
    |   | |   `-IntegerLiteral 0x14a923b78 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14a923c60 <col:21, col:51> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x14a923bb0 <col:21> 'int' lvalue Var 0x14a923b10 'i' 'int'
    |   | | `-CallExpr 0x14a923c38 <col:25, col:51> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14a923bd0 <col:25> 'int ()' Function 0x14a923a00 'NumElements' 'int ()'
    |   | |   `-RecoveryExpr 0x14a923c10 <col:37, col:48> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a923bf0 <col:37> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |   | |-UnaryOperator 0x14a923ca0 <col:54, col:56> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x14a923c80 <col:56> 'int' lvalue Var 0x14a923b10 'i' 'int'
    |   | `-CompoundStmt 0x14a923e78 <col:59, line:29:5>
    |   |   |-DeclStmt 0x14a923d38 <line:26:7, col:59>
    |   |   | `-VarDecl 0x14a923cd0 <col:7, col:13> col:13 used dequant 'float'
    |   |   `-DeclStmt 0x14a923dd0 <line:27:7, col:64>
    |   |     `-VarDecl 0x14a923d68 <col:7, col:13> col:13 used reference 'float'
    |   |-DeclStmt 0x14a923f50 <line:30:5, line:31:72>
    |   | `-VarDecl 0x14a923ee8 <line:30:5, col:12> col:12 used mean 'double'
    |   |-DeclStmt 0x14a924820 <line:32:5, col:26>
    |   | `-VarDecl 0x14a923f80 <col:5, col:23> col:12 used max_diff 'double' cinit
    |   |   `-FloatingLiteral 0x14a924800 <col:23> 'double' 0.000000e+00
    |   |-DeclStmt 0x14a9248b8 <line:38:5, line:39:72>
    |   | `-VarDecl 0x14a924850 <line:38:5, col:12> col:12 sq_sum 'double'
    |   |-DeclStmt 0x14a924988 <line:40:5, col:21>
    |   | `-VarDecl 0x14a9248e8 <col:5, col:18> col:12 used std 'double' cinit
    |   |   `-ImplicitCastExpr 0x14a924970 <col:18> 'double' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14a924950 <col:18> 'double' lvalue Var 0x14a9248e8 'std' 'double'
    |   `-CallExpr 0x14a924d30 <line:41:5, line:45:44> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14a924a80 <line:41:5> 'int ()' Function 0x14a9249c8 'TF_LITE_KERNEL_LOG' 'int ()'
    |     |-RecoveryExpr 0x14a924aa0 <line:42:9> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14a924b00 <line:43:9> 'char[4]' lvalue "STR"
    |     |-DeclRefExpr 0x14a924b20 <col:16> 'double' lvalue Var 0x14a9248e8 'std' 'double'
    |     |-DeclRefExpr 0x14a924b40 <line:44:9> 'double' lvalue Var 0x14a923ee8 'mean' 'double'
    |     |-DeclRefExpr 0x14a924b60 <col:15> 'double' lvalue Var 0x14a923f80 'max_diff' 'double'
    |     |-CXXDependentScopeMemberExpr 0x14a924c10 <col:25, col:50> '<dependent type>' contains-errors lvalue .scale
    |     | `-CXXDependentScopeMemberExpr 0x14a924bc8 <col:25, col:43> '<dependent type>' contains-errors lvalue ->params
    |     |   `-RecoveryExpr 0x14a924ba0 <col:25, col:36> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14a924b80 <col:25> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x14a924ce8 <line:45:9, col:34> '<dependent type>' contains-errors lvalue .zero_point
    |       `-CXXDependentScopeMemberExpr 0x14a924ca0 <col:9, col:27> '<dependent type>' contains-errors lvalue ->params
    |         `-RecoveryExpr 0x14a924c78 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x14a924c58 <col:9> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
    |-DeclStmt 0x14a924f40 <line:50:3, col:70>
    | `-VarDecl 0x14a924e00 <col:3, col:8> col:8 used max_diff 'int' auto
    `-ForStmt 0x14a9256e8 <line:51:3, line:66:3>
      |-DeclStmt 0x14a924ff8 <line:51:8, col:17>
      | `-VarDecl 0x14a924f70 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x14a924fd8 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14a9250c0 <col:19, col:49> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14a925010 <col:19> 'int' lvalue Var 0x14a924f70 'i' 'int'
      | `-CallExpr 0x14a925098 <col:23, col:49> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x14a925030 <col:23> 'int ()' Function 0x14a923a00 'NumElements' 'int ()'
      |   `-RecoveryExpr 0x14a925070 <col:35, col:46> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x14a925050 <col:35> 'int ()' Function 0x14b00e118 'op_context' 'int ()'
      |-UnaryOperator 0x14a925100 <col:52, col:54> 'int' prefix '++'
      | `-DeclRefExpr 0x14a9250e0 <col:54> 'int' lvalue Var 0x14a924f70 'i' 'int'
      `-CompoundStmt 0x14a9256b8 <col:57, line:66:3>
        |-DeclStmt 0x14a925198 <line:53:5, col:57>
        | `-VarDecl 0x14a925130 <col:5, col:11> col:11 used dequant 'float'
        |-DeclStmt 0x14a925230 <line:54:5, col:62>
        | `-VarDecl 0x14a9251c8 <col:5, col:11> col:11 used reference 'float'
        |-DeclStmt 0x14a9252c8 <line:55:5, col:47>
        | `-VarDecl 0x14a925260 <col:5, col:11> col:11 used diff 'float'
        `-IfStmt 0x14a925698 <line:56:5, line:65:5>
          |-BinaryOperator 0x14a925368 <line:56:9, col:16> 'int' '>'
          | |-ImplicitCastExpr 0x14a925320 <col:9> 'float' <LValueToRValue>
          | | `-DeclRefExpr 0x14a9252e0 <col:9> 'float' lvalue Var 0x14a925260 'diff' 'float'
          | `-ImplicitCastExpr 0x14a925350 <col:16> 'float' <IntegralToFloating>
          |   `-ImplicitCastExpr 0x14a925338 <col:16> 'int' <LValueToRValue>
          |     `-DeclRefExpr 0x14a925300 <col:16> 'int' lvalue Var 0x14a924e00 'max_diff' 'int'
          `-CompoundStmt 0x14a925688 <col:26, line:65:5>
