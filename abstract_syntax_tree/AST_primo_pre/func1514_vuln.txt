`-FunctionDecl 0x14800ddf8  line:1:12 invalid am_handle_login 'int (int *)' static
  |-ParmVarDecl 0x14800dd28 <col:28, col:41> col:41 invalid r 'int *'
  `-CompoundStmt 0x14802a618 <line:2:1, line:55:1>
    |-DeclStmt 0x14800e108 <line:4:5, col:20>
    | `-VarDecl 0x14800e0a0 <col:5, col:11> col:11 used idp_param 'char *'
    |-DeclStmt 0x14800e1a0 <line:5:5, col:20>
    | `-VarDecl 0x14800e138 <col:5, col:17> col:17 used idp 'const char *'
    |-DeclStmt 0x14800e238 <line:6:5, col:20>
    | `-VarDecl 0x14800e1d0 <col:5, col:11> col:11 used return_to 'char *'
    |-DeclStmt 0x14800e2d0 <line:7:5, col:19>
    | `-VarDecl 0x14800e268 <col:5, col:9> col:9 used is_passive 'int'
    |-DeclStmt 0x14800e368 <line:8:5, col:12>
    | `-VarDecl 0x14800e300 <col:5, col:9> col:9 used ret 'int'
    |-BinaryOperator 0x148027a48 <line:10:5, col:67> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14800e380 <col:5> 'char *' lvalue Var 0x14800e1d0 'return_to' 'char *'
    | `-CallExpr 0x148027a10 <col:17, col:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1480278b8 <col:17> 'int ()' Function 0x148027800 'am_extract_query_parameter' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x1480278f8 <col:44, col:47> '<dependent type>' contains-errors lvalue ->pool
    |   | `-RecoveryExpr 0x1480278d8 <col:44> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x148027960 <col:53, col:56> '<dependent type>' contains-errors lvalue ->args
    |   | `-RecoveryExpr 0x148027940 <col:53> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x1480279f0 <col:62> 'char[4]' lvalue "STR"
    |-IfStmt 0x148027dc8 <line:11:5, line:15:5>
    | |-BinaryOperator 0x148027ae0 <line:11:8, col:21> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x148027a68 <col:8> 'char *' lvalue Var 0x14800e1d0 'return_to' 'char *'
    | | `-RecoveryExpr 0x148027ac0 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148027da8 <col:27, line:15:5>
    |   |-CallExpr 0x148027d18 <line:12:9, line:13:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x148027be0 <line:12:9> 'int ()' Function 0x148027b28 'ap_log_rerror' 'int ()'
    |   | |-RecoveryExpr 0x148027cd8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x148027cf8 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x148027c30 <col:46> 'int' 0
    |   | |-RecoveryExpr 0x148027c50 <col:49> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x148027c70 <line:13:23> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x148027d98 <line:14:9, col:16>
    |     `-RecoveryExpr 0x148027d78 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x148027fb8 <line:17:5, col:33> 'int' '='
    | |-DeclRefExpr 0x148027de8 <col:5> 'int' lvalue Var 0x14800e300 'ret' 'int'
    | `-CallExpr 0x148027f78 <col:11, col:33> 'int'
    |   |-ImplicitCastExpr 0x148027f60 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x148027ee8 <col:11> 'int ()' Function 0x148027e30 'am_urldecode' 'int ()'
    |   `-ImplicitCastExpr 0x148027fa0 <col:24> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x148027f08 <col:24> 'char *' lvalue Var 0x14800e1d0 'return_to' 'char *'
    |-IfStmt 0x148028258 <line:18:5, line:22:5>
    | |-BinaryOperator 0x148028050 <line:18:8, col:15> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x148027fd8 <col:8> 'int' lvalue Var 0x14800e300 'ret' 'int'
    | | `-RecoveryExpr 0x148028030 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148028238 <col:19, line:22:5>
    |   |-CallExpr 0x1480281a8 <line:19:9, line:20:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x148028070 <line:19:9> 'int ()' Function 0x148027b28 'ap_log_rerror' 'int ()'
    |   | |-RecoveryExpr 0x148028168 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x148028188 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x1480280c0 <col:46> 'int' 0
    |   | |-RecoveryExpr 0x1480280e0 <col:49> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x148028100 <line:20:23> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x148028228 <line:21:9, col:16>
    |     `-ImplicitCastExpr 0x148028210 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1480281f0 <col:16> 'int' lvalue Var 0x14800e300 'ret' 'int'
    |-BinaryOperator 0x1480283e0 <line:24:5, col:67> 'char *' contains-errors '='
    | |-DeclRefExpr 0x148028278 <col:5> 'char *' lvalue Var 0x14800e0a0 'idp_param' 'char *'
    | `-CallExpr 0x1480283a8 <col:17, col:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x148028298 <col:17> 'int ()' Function 0x148027800 'am_extract_query_parameter' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x1480282d8 <col:44, col:47> '<dependent type>' contains-errors lvalue ->pool
    |   | `-RecoveryExpr 0x1480282b8 <col:44> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x148028340 <col:53, col:56> '<dependent type>' contains-errors lvalue ->args
    |   | `-RecoveryExpr 0x148028320 <col:53> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x148028388 <col:62> 'char[4]' lvalue "STR"
    |-IfStmt 0x148029c40 <line:25:5, line:32:5>
    | |-BinaryOperator 0x148028478 <line:25:8, col:21> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x148028400 <col:8> 'char *' lvalue Var 0x14800e0a0 'idp_param' 'char *'
    | | `-RecoveryExpr 0x148028458 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148029c20 <col:27, line:32:5>
    |   |-BinaryOperator 0x148028550 <line:26:9, col:37> 'int' '='
    |   | |-DeclRefExpr 0x148028498 <col:9> 'int' lvalue Var 0x14800e300 'ret' 'int'
    |   | `-CallExpr 0x148028510 <col:15, col:37> 'int'
    |   |   |-ImplicitCastExpr 0x1480284f8 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1480284b8 <col:15> 'int ()' Function 0x148027e30 'am_urldecode' 'int ()'
    |   |   `-ImplicitCastExpr 0x148028538 <col:28> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1480284d8 <col:28> 'char *' lvalue Var 0x14800e0a0 'idp_param' 'char *'
    |   `-IfStmt 0x148029c00 <line:27:9, line:31:9>
    |     |-BinaryOperator 0x1480285e8 <line:27:12, col:19> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x148028570 <col:12> 'int' lvalue Var 0x14800e300 'ret' 'int'
    |     | `-RecoveryExpr 0x1480285c8 <col:19> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x1480287d0 <col:23, line:31:9>
    |       |-CallExpr 0x148028740 <line:28:13, line:29:32> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x148028608 <line:28:13> 'int ()' Function 0x148027b28 'ap_log_rerror' 'int ()'
    |       | |-RecoveryExpr 0x148028700 <col:27> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x148028720 <col:39> '<dependent type>' contains-errors lvalue
    |       | |-IntegerLiteral 0x148028658 <col:50> 'int' 0
    |       | |-RecoveryExpr 0x148028678 <col:53> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x148028698 <line:29:27> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x1480287c0 <line:30:13, col:20>
    |         `-ImplicitCastExpr 0x1480287a8 <col:20> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x148028788 <col:20> 'int' lvalue Var 0x14800e300 'ret' 'int'
    |-IfStmt 0x148029e98 <line:35:5, line:37:5>
    | |-RecoveryExpr 0x148029e18 <line:35:9, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x148029e80 <col:20, line:37:5>
    |   `-ReturnStmt 0x148029e70 <line:36:9, col:16>
    |     `-ImplicitCastExpr 0x148029e58 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x148029e38 <col:16> 'int' lvalue Var 0x14800e300 'ret' 'int'
    |-IfStmt 0x14802a418 <line:39:5, line:52:5> has_else
    | |-RecoveryExpr 0x148029ed8 <line:39:8, col:21> '_Bool' contains-errors
    | |-CompoundStmt 0x148029f88 <col:27, line:41:5>
    | | `-BinaryOperator 0x148029f68 <line:40:9, col:15> 'const char *' '='
    | |   |-DeclRefExpr 0x148029ef8 <col:9> 'const char *' lvalue Var 0x14800e138 'idp' 'const char *'
    | |   `-ImplicitCastExpr 0x148029f50 <col:15> 'const char *' <NoOp>
    | |     `-ImplicitCastExpr 0x148029f38 <col:15> 'char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x148029f18 <col:15> 'char *' lvalue Var 0x14800e0a0 'idp_param' 'char *'
    | `-IfStmt 0x14802a3e8 <line:41:12, line:52:5> has_else
    |   |-RecoveryExpr 0x148029fa0 <line:41:15, col:20> '_Bool' contains-errors
    |   |-CompoundStmt 0x14802a228 <col:35, line:49:5>
    |   | |-IfStmt 0x14802a088 <line:42:9, line:47:9>
    |   | | |-ImplicitCastExpr 0x148029fe0 <line:42:12> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x148029fc0 <col:12> 'int' lvalue Var 0x14800e268 'is_passive' 'int'
    |   | | `-CompoundStmt 0x14802a078 <col:24, line:47:9>
    |   | `-ReturnStmt 0x14802a218 <line:48:9, col:43>
    |   |   `-CallExpr 0x14802a1e8 <col:16, col:43> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x14802a188 <col:16> 'int ()' Function 0x14802a0d0 'am_start_disco' 'int ()'
    |   |     |-RecoveryExpr 0x14802a1a8 <col:31> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14802a1c8 <col:34> 'char *' lvalue Var 0x14800e1d0 'return_to' 'char *'
    |   `-CompoundStmt 0x14802a3d0 <line:49:12, line:52:5>
    |     `-BinaryOperator 0x14802a3b0 <line:51:9, col:27> 'const char *' contains-errors '='
    |       |-DeclRefExpr 0x14802a248 <col:9> 'const char *' lvalue Var 0x14800e138 'idp' 'const char *'
    |       `-CallExpr 0x14802a388 <col:15, col:27> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14802a348 <col:15> 'int ()' Function 0x14802a290 'am_get_idp' 'int ()'
    |         `-RecoveryExpr 0x14802a368 <col:26> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14802a608 <line:54:5, col:69>
      `-CallExpr 0x14802a5c8 <col:12, col:69> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14802a528 <col:12> 'int ()' Function 0x14802a470 'am_send_login_authn_request' 'int ()'
        |-RecoveryExpr 0x14802a548 <col:40> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x14802a568 <col:43> 'const char *' lvalue Var 0x14800e138 'idp' 'const char *'
        |-DeclRefExpr 0x14802a588 <col:48> 'char *' lvalue Var 0x14800e1d0 'return_to' 'char *'
        `-DeclRefExpr 0x14802a5a8 <col:59> 'int' lvalue Var 0x14800e268 'is_passive' 'int'
