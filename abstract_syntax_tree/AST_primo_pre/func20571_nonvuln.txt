`-FunctionDecl 0x12480df18  line:1:1 invalid njs_vmcode_instance_of 'int (int *, int *, int *)'
  |-ParmVarDecl 0x12480dd28 <col:24, col:34> col:34 referenced invalid vm 'int *'
  |-ParmVarDecl 0x12480dda8 <col:38, col:51> col:51 invalid object 'int *'
  |-ParmVarDecl 0x12480de28 <line:2:5, col:18> col:18 referenced invalid constructor 'int *'
  `-CompoundStmt 0x124828a60 <line:3:1, line:60:1>
    |-DeclStmt 0x12480e0a0 <line:8:5, col:31>
    | `-VarDecl 0x12480e038 <col:5, col:25> col:25 referenced invalid retval 'const int *'
    |-DeclStmt 0x12480e398 <line:10:5, col:66>
    | `-VarDecl 0x12480e0d0 <col:5, col:30> col:30 invalid prototype_string 'const int' static
    |-IfStmt 0x124827710 <line:12:5, line:15:5>
    | |-UnaryOperator 0x124827520 <line:12:9, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1248274f8 <col:10, col:37> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1248274b8 <col:10> 'int ()' Function 0x124827400 'njs_is_function' 'int ()'
    | |   `-RecoveryExpr 0x1248274d8 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1248276f0 <col:40, line:15:5>
    |   |-CallExpr 0x124827678 <line:13:9, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x124827618 <col:9> 'int ()' Function 0x124827560 'njs_type_error' 'int ()'
    |   | |-RecoveryExpr 0x124827638 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x124827658 <col:28> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x1248276e0 <line:14:9, col:16>
    |     `-RecoveryExpr 0x1248276c0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1248279f0 <line:19:5, line:23:5>
    | |-RecoveryExpr 0x124827878 <line:19:9, col:28> '_Bool' contains-errors
    | `-CompoundStmt 0x1248279e0 <col:34, line:23:5>
    |-IfStmt 0x1248288f0 <line:27:5, line:55:5>
    | |-CallExpr 0x124827b78 <line:27:9, col:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x124827b38 <col:9> 'int ()' Function 0x124827a80 'njs_is_object' 'int ()'
    | | `-RecoveryExpr 0x124827b58 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1248288d0 <col:32, line:55:5>
    |   |-IfStmt 0x124827f70 <line:31:9, line:33:9>
    |   | |-RecoveryExpr 0x124827f40 <line:31:13, col:43> '_Bool' contains-errors
    |   | `-CompoundStmt 0x124827f60 <col:46, line:33:9>
    |   `-IfStmt 0x1248288b0 <line:35:9, line:54:9>
    |     |-RecoveryExpr 0x124828090 <line:35:13, col:40> '_Bool' contains-errors
    |     `-CompoundStmt 0x124828890 <col:43, line:54:9>
    |       |-IfStmt 0x124828200 <line:36:13, line:40:13>
    |       | |-RecoveryExpr 0x1248280f0 <line:36:17, col:53> '_Bool' contains-errors
    |       | `-CompoundStmt 0x1248281e8 <col:56, line:40:13>
    |       |   `-CallExpr 0x1248281b8 <line:37:17, line:38:37> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x124828110 <line:37:17> 'int ()' Function 0x124827560 'njs_type_error' 'int ()'
    |       |     |-RecoveryExpr 0x124828130 <col:32> '<dependent type>' contains-errors lvalue
    |       |     `-StringLiteral 0x124828190 <col:36, line:38:32> 'char[7]' lvalue "STRSTR"
    |       `-DoStmt 0x124828870 <line:45:13, line:53:35>
    |         |-CompoundStmt 0x124828838 <line:45:16, line:53:13>
    |         | `-IfStmt 0x124828818 <line:48:17, line:51:17>
    |         |   |-RecoveryExpr 0x124828388 <line:48:21, col:30> '_Bool' contains-errors
    |         |   `-CompoundStmt 0x124828800 <col:41, line:51:17>
    |         |     `-BreakStmt 0x1248283f0 <line:50:21>
    |         `-RecoveryExpr 0x124828850 <line:53:22, col:31> '_Bool' contains-errors
    `-BinaryOperator 0x124828a40 <line:57:5, col:19> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x124828958 <col:5, col:9> '<dependent type>' contains-errors lvalue ->retval
      | `-RecoveryExpr 0x124828930 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x124828910 <col:5> 'int *' lvalue ParmVar 0x12480dd28 'vm' 'int *'
      `-UnaryOperator 0x124828a28 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
        `-ImplicitCastExpr 0x124828a10 <col:19> '<dependent type>' contains-errors <LValueToRValue>
          `-RecoveryExpr 0x1248289a0 <col:19> '<dependent type>' contains-errors lvalue
