`-FunctionDecl 0x147128438  line:1:1 invalid generate_loadvar 'int (int *, int, char *, int *, int *)'
  |-ParmVarDecl 0x147128128 <line:2:2, col:11> col:11 invalid cctx 'int *'
  |-ParmVarDecl 0x1471281a8 <line:3:2, col:16> col:16 invalid dest 'int'
  |-ParmVarDecl 0x147128228 <line:4:2, col:11> col:11 used name 'char *'
  |-ParmVarDecl 0x1471282a8 <line:5:2, col:11> col:11 invalid lvar 'int *'
  |-ParmVarDecl 0x147128328 <line:6:2, col:11> col:11 invalid type 'int *'
  `-CompoundStmt 0x147143710 <line:7:1, line:54:1>
    `-SwitchStmt 0x147128540 <line:8:5, line:53:5>
      |-ImplicitCastExpr 0x147128528 <line:8:13> '<dependent type>' contains-errors <LValueToRValue>
      | `-RecoveryExpr 0x147128508 <col:13> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x147143688 <line:9:5, line:53:5>
        |-CallExpr 0x147141820 <line:12:6, col:52> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1471286f0 <col:6> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'
        | |-RecoveryExpr 0x147128710 <col:20> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x147141800 <col:26> '<dependent type>' contains-errors lvalue
        | |-IntegerLiteral 0x147128748 <col:39> 'int' 0
        | |-DeclRefExpr 0x147128768 <col:42> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'
        | `-RecoveryExpr 0x147128788 <col:48> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x147141868 <line:13:6>
        |-IfStmt 0x147141e18 <line:15:6, line:18:50> has_else
        | |-BinaryOperator 0x147141a98 <line:15:10, col:45> 'int' contains-errors '=='
        | | |-CallExpr 0x147141a48 <col:10, col:40> '<dependent type>' contains-errors
        | | | |-DeclRefExpr 0x147141968 <col:10> 'int ()' Function 0x1471418b0 'vim_strchr' 'int ()'
        | | | |-DeclRefExpr 0x147141988 <col:21> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'
        | | | `-RecoveryExpr 0x147141a28 <col:27> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x147141a78 <col:45> '<dependent type>' contains-errors lvalue
        | |-CallExpr 0x147141c68 <line:16:3, col:51> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x147141ab8 <col:3> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'
        | | |-RecoveryExpr 0x147141ad8 <col:17> '<dependent type>' contains-errors lvalue
        | | |-RecoveryExpr 0x147141c10 <col:23> '<dependent type>' contains-errors lvalue
        | | |-IntegerLiteral 0x147141b10 <col:34> 'int' 0
        | | |-BinaryOperator 0x147141c48 <col:37, col:44> 'char *' '+'
        | | | |-ImplicitCastExpr 0x147141c30 <col:37> 'char *' <LValueToRValue>
        | | | | `-DeclRefExpr 0x147141b30 <col:37> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'
        | | | `-IntegerLiteral 0x147141b50 <col:44> 'int' 2
        | | `-RecoveryExpr 0x147141ba8 <col:47> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x147141dd0 <line:18:3, col:50> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x147141cb0 <col:3> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'
        |   |-RecoveryExpr 0x147141cd0 <col:17> '<dependent type>' contains-errors lvalue
        |   |-RecoveryExpr 0x147141db0 <col:23> '<dependent type>' contains-errors lvalue
        |   |-IntegerLiteral 0x147141d08 <col:37> 'int' 0
        |   |-DeclRefExpr 0x147141d28 <col:40> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'
        |   `-RecoveryExpr 0x147141d48 <col:46> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x147141e48 <line:19:6>
        |-CallExpr 0x147142018 <line:21:6, col:54> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x147141e68 <col:6> 'int ()' Function 0x147128638 'generate_LOAD' 'int ()'
        | |-RecoveryExpr 0x147141e88 <col:20> '<dependent type>' contains-errors lvalue
        | |-RecoveryExpr 0x147141fc0 <col:26> '<dependent type>' contains-errors lvalue
        | |-IntegerLiteral 0x147141ec0 <col:37> 'int' 0
        | |-BinaryOperator 0x147141ff8 <col:40, col:47> 'char *' '+'
        | | |-ImplicitCastExpr 0x147141fe0 <col:40> 'char *' <LValueToRValue>
        | | | `-DeclRefExpr 0x147141ee0 <col:40> 'char *' lvalue ParmVar 0x147128228 'name' 'char *'
        | | `-IntegerLiteral 0x147141f00 <col:47> 'int' 2
        | `-RecoveryExpr 0x147141f58 <col:50> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x147142060 <line:22:6>
        |-BreakStmt 0x147142178 <line:25:6>
        |-BreakStmt 0x147142278 <line:28:6>
        |-BreakStmt 0x147142568 <line:32:6>
        |-BreakStmt 0x147142610 <line:36:6>
        |-BreakStmt 0x1471426d0 <line:39:6>
        |-BreakStmt 0x147143278 <line:42:6>
        |-IfStmt 0x147143648 <line:44:6, line:48:3> has_else
        | |-BinaryOperator 0x147143308 <line:44:10, col:32> 'int' contains-errors '>'
        | | |-CXXDependentScopeMemberExpr 0x1471432a0 <col:10, col:16> '<dependent type>' contains-errors lvalue ->lv_from_outer
        | | | `-RecoveryExpr 0x147143280 <col:10> '<dependent type>' contains-errors lvalue
        | | `-IntegerLiteral 0x1471432e8 <col:32> 'int' 0
        | |-CallExpr 0x147143538 <line:45:3, line:46:15> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x147143408 <line:45:3> 'int ()' Function 0x147143350 'generate_LOADOUTER' 'int ()'
        | | |-RecoveryExpr 0x147143428 <col:22> '<dependent type>' contains-errors lvalue
        | | |-CXXDependentScopeMemberExpr 0x147143468 <col:28, col:34> '<dependent type>' contains-errors lvalue ->lv_idx
        | | | `-RecoveryExpr 0x147143448 <col:28> '<dependent type>' contains-errors lvalue
        | | |-CXXDependentScopeMemberExpr 0x1471434d0 <col:42, col:48> '<dependent type>' contains-errors lvalue ->lv_from_outer
        | | | `-RecoveryExpr 0x1471434b0 <col:42> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x147143518 <line:46:11> '<dependent type>' contains-errors lvalue
        | `-NullStmt 0x147143640 <line:48:3>
        |-BreakStmt 0x147143678 <line:49:6>
        `-BreakStmt 0x147143680 <line:52:6>
