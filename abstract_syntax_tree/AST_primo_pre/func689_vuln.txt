`-FunctionDecl 0x15500dda8  line:1:1 sanitize_filename 'int (const char *)'
  |-ParmVarDecl 0x15500dcd8 <col:20, col:32> col:32 used file_name 'const char *'
  `-CompoundStmt 0x155028690 <line:2:1, line:27:1>
    |-UnaryExprOrTypeTraitExpr 0x15500df10 <line:3:2, col:14> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x15500def0 <col:14> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15500dfb0 <line:4:2, col:15>
    | `-VarDecl 0x15500df48 <col:2, col:14> col:14 used p 'const char *'
    |-IfStmt 0x15500e0a8 <line:6:2, line:7:10>
    | |-BinaryOperator 0x15500e040 <line:6:6, col:19> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x15500dfc8 <col:6> 'const char *' lvalue ParmVar 0x15500dcd8 'file_name' 'const char *'
    | | `-RecoveryExpr 0x15500e020 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15500e098 <line:7:3, col:10>
    |   `-RecoveryExpr 0x15500e078 <col:10> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x155027fa8 <line:10:2, line:20:2>
    | |-BinaryOperator 0x15500e140 <line:10:7, col:11> 'const char *' '='
    | | |-DeclRefExpr 0x15500e0e8 <col:7> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    | | `-ImplicitCastExpr 0x15500e128 <col:11> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15500e108 <col:11> 'const char *' lvalue ParmVar 0x15500dcd8 'file_name' 'const char *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x15500e1b0 <col:22, col:23> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x15500e198 <col:22, col:23> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x15500e180 <col:23> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x15500e160 <col:23> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    | |-<<<NULL>>>
    | `-CompoundStmt 0x155027f90 <col:28, line:20:2>
    |   `-DoStmt 0x155027f70 <line:14:3, line:19:12>
    |     |-CompoundStmt 0x155027ee8 <line:14:6, line:18:3>
    |     | |-DeclStmt 0x155027df8 <line:15:4, col:17>
    |     | | `-VarDecl 0x155027d28 <col:4, col:15> col:9 used c 'char' cinit
    |     | |   `-ImplicitCastExpr 0x155027de0 <col:13, col:15> 'char' <LValueToRValue>
    |     | |     `-UnaryOperator 0x155027dc8 <col:13, col:15> 'const char' lvalue prefix '*' cannot overflow
    |     | |       `-UnaryOperator 0x155027db0 <col:14, col:15> 'const char *' postfix '++'
    |     | |         `-DeclRefExpr 0x155027d90 <col:14> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    |     | `-IfStmt 0x155027ec8 <line:16:4, line:17:5>
    |     |   |-CallExpr 0x155027e68 <line:16:8, col:18> 'int'
    |     |   | |-ImplicitCastExpr 0x155027e50 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     |   | | `-DeclRefExpr 0x155027e10 <col:8> 'int ()' Function 0x155027980 'ISSLASH' 'int ()'
    |     |   | `-ImplicitCastExpr 0x155027ea8 <col:17> 'int' <IntegralCast>
    |     |   |   `-ImplicitCastExpr 0x155027e90 <col:17> 'char' <LValueToRValue>
    |     |   |     `-DeclRefExpr 0x155027e30 <col:17> 'char' lvalue Var 0x155027d28 'c' 'char'
    |     |   `-BreakStmt 0x155027ec0 <line:17:5>
    |     `-ImplicitCastExpr 0x155027f58 <line:19:10, col:11> 'char' <LValueToRValue>
    |       `-UnaryOperator 0x155027f40 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x155027f28 <col:11> 'const char *' <LValueToRValue>
    |           `-DeclRefExpr 0x155027f08 <col:11> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    |-BinaryOperator 0x1550280b8 <line:22:2, col:18> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x155027fe0 <col:2> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    | `-BinaryOperator 0x155028098 <col:6, col:18> '<dependent type>' contains-errors '+'
    |   |-DeclRefExpr 0x155028000 <col:6> 'const char *' lvalue ParmVar 0x15500dcd8 'file_name' 'const char *'
    |   `-RecoveryExpr 0x155028078 <col:18> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x1550281f0 <line:23:2, line:24:4>
    | |-CallExpr 0x155028160 <line:23:9, col:20> 'int'
    | | |-ImplicitCastExpr 0x155028148 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1550280d8 <col:9> 'int ()' Function 0x155027980 'ISSLASH' 'int ()'
    | | `-ImplicitCastExpr 0x1550281a0 <col:18, col:19> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x155028188 <col:18, col:19> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x155028130 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x155028118 <col:19> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1550280f8 <col:19> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    | `-UnaryOperator 0x1550281d8 <line:24:3, col:4> 'const char *' postfix '++'
    |   `-DeclRefExpr 0x1550281b8 <col:3> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
    `-ReturnStmt 0x155028680 <line:26:2, col:9>
      `-ImplicitCastExpr 0x155028248 <col:9> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x155028230 <col:9> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x155028210 <col:9> 'const char *' lvalue Var 0x15500df48 'p' 'const char *'
