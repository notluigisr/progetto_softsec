`-FunctionDecl 0x13f80df18  line:1:11 invalid wc_ecc_ctx_new_ex 'int *(int, int *, void *)'
  |-ParmVarDecl 0x13f80dcf0 <col:29, col:33> col:33 flags 'int'
  |-ParmVarDecl 0x13f80dda8 <col:40, col:48> col:48 invalid rng 'int *'
  |-ParmVarDecl 0x13f80de28 <col:53, col:59> col:59 used heap 'void *'
  `-CompoundStmt 0x13f827a98 <line:2:1, line:19:1>
    |-DeclStmt 0x13f80e078 <line:3:5, col:22>
    | `-VarDecl 0x13f80dff0 <col:5, col:21> col:15 used ret 'int' cinit
    |   `-IntegerLiteral 0x13f80e058 <col:21> 'int' 0
    |-IfStmt 0x13f80e140 <line:7:5, line:10:5>
    | |-RecoveryExpr 0x13f80e0d8 <line:7:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f80e130 <col:14, line:10:5>
    |-BinaryOperator 0x13f80e3d8 <line:12:5, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x13f80e160 <col:5> 'int' lvalue Var 0x13f80dff0 'ret' 'int'
    | `-CallExpr 0x13f80e3a8 <col:11, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13f80e2e0 <col:11> 'int ()' Function 0x13f80e228 'wc_ecc_ctx_reset' 'int ()'
    |   |-RecoveryExpr 0x13f80e388 <col:28> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13f80e318 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f827a30 <line:13:5, line:16:5>
    | |-BinaryOperator 0x13f827858 <line:13:9, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x13f827840 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f827800 <col:9> 'int' lvalue Var 0x13f80dff0 'ret' 'int'
    | | `-IntegerLiteral 0x13f827820 <col:16> 'int' 0
    | `-CompoundStmt 0x13f827a18 <col:19, line:16:5>
    |   `-CallExpr 0x13f8279d8 <line:14:9, col:28> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13f827958 <col:9> 'int ()' Function 0x13f8278a0 'wc_ecc_ctx_free' 'int ()'
    |     `-RecoveryExpr 0x13f8279b8 <col:25> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f827a88 <line:18:5, col:12>
      `-RecoveryExpr 0x13f827a68 <col:12> '<dependent type>' contains-errors lvalue
