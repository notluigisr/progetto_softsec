`-FunctionDecl 0x125026978  line:1:1 dump_counters 'int (struct sk_buff *, struct nf_conn_acct *, enum ip_conntrack_dir, int)'
  |-ParmVarDecl 0x12500e248 <col:15, col:31> col:31 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x125026628 <col:36, col:57> col:57 used acct 'struct nf_conn_acct *'
  |-ParmVarDecl 0x1250267a8 <line:2:8, col:30> col:30 invalid dir 'enum ip_conntrack_dir'
  |-ParmVarDecl 0x125026828 <col:35, col:39> col:39 used type 'int'
  `-CompoundStmt 0x12502b060 <line:3:1, line:33:1>
    |-DeclStmt 0x125026cc0 <line:4:2, col:69>
    | |-EnumDecl 0x125026a88 <col:2, col:7> col:7 ctattr_type
    | `-VarDecl 0x125026ba8 <col:2, col:19> col:19 invalid attr 'enum ctattr_type'
    |-DeclStmt 0x125026f28 <line:5:2, col:49>
    | |-RecordDecl 0x125026cd8 <col:2, col:9> col:9 struct nf_conn_counter
    | `-VarDecl 0x125026e48 <col:2, col:42> col:26 used counter 'struct nf_conn_counter *' cinit
    |   `-RecoveryExpr 0x125026ee8 <col:36, col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x125026eb0 <col:36> 'struct nf_conn_acct *' lvalue ParmVar 0x125026628 'acct' 'struct nf_conn_acct *'
    |-DeclStmt 0x125027128 <line:6:2, col:27>
    | |-RecordDecl 0x125026f40 <col:2, col:9> col:9 struct nlattr
    | `-VarDecl 0x1250270a8 <col:2, col:17> col:17 used nest_count 'struct nlattr *'
    |-IfStmt 0x125027cb0 <line:9:2, line:15:2> has_else
    | |-BinaryOperator 0x1250271b8 <line:9:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x125027140 <col:6> 'int' lvalue ParmVar 0x125026828 'type' 'int'
    | | `-RecoveryExpr 0x125027198 <col:14> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x125027790 <col:41, line:12:2>
    | `-CompoundStmt 0x125027ca0 <col:9, line:15:2>
    |-BinaryOperator 0x125027e70 <line:17:2, col:39> 'struct nlattr *' contains-errors '='
    | |-DeclRefExpr 0x125027ce0 <col:2> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'
    | `-CallExpr 0x125027e40 <col:15, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125027de0 <col:15> 'int ()' Function 0x125027d28 'nla_nest_start' 'int ()'
    |   |-DeclRefExpr 0x125027e00 <col:30> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'
    |   `-RecoveryExpr 0x125027e20 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125027f48 <line:18:2, line:19:8>
    | |-UnaryOperator 0x125027ec8 <line:18:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x125027eb0 <col:7> 'struct nlattr *' <LValueToRValue>
    | |   `-DeclRefExpr 0x125027e90 <col:7> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'
    | `-GotoStmt 0x125027f30 <line:19:3, col:8> 'nla_put_failure' 0x125027ee0
    |-IfStmt 0x125028530 <line:21:2, line:25:8>
    | |-BinaryOperator 0x1250284f8 <line:21:6, line:24:21> 'int' contains-errors '||'
    | | |-CallExpr 0x1250283f0 <line:21:6, line:22:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125028048 <line:21:6> 'int ()' Function 0x125027f90 'nla_put_be64' 'int ()'
    | | | |-DeclRefExpr 0x125028068 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'
    | | | |-RecoveryExpr 0x125028368 <col:24> '<dependent type>' contains-errors lvalue
    | | | |-CallExpr 0x1250283a8 <col:46, col:62> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x125028180 <col:46> 'int ()' Function 0x1250280c8 'cpu_to_be64' 'int ()'
    | | | | `-RecoveryExpr 0x125028388 <col:58> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x1250283d0 <line:22:5> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x1250284b8 <line:23:6, line:24:21> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x125028238 <line:23:6> 'int ()' Function 0x125027f90 'nla_put_be64' 'int ()'
    | |   |-DeclRefExpr 0x125028258 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'
    | |   |-RecoveryExpr 0x125028430 <col:24> '<dependent type>' contains-errors lvalue
    | |   |-CallExpr 0x125028470 <col:44, col:61> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x125028290 <col:44> 'int ()' Function 0x1250280c8 'cpu_to_be64' 'int ()'
    | |   | `-RecoveryExpr 0x125028450 <col:56> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x125028498 <line:24:5> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x125028518 <line:25:3, col:8> 'nla_put_failure' 0x125027ee0
    |-CallExpr 0x12502af68 <line:27:2, col:30> 'int'
    | |-ImplicitCastExpr 0x12502af50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12502aeb8 <col:2> 'int ()' Function 0x12502ae00 'nla_nest_end' 'int ()'
    | |-ImplicitCastExpr 0x12502af98 <col:15> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x12502aed8 <col:15> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x12502afb0 <col:20> 'struct nlattr *' <LValueToRValue>
    |   `-DeclRefExpr 0x12502aef8 <col:20> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'
    |-ReturnStmt 0x12502afe8 <line:29:2, col:9>
    | `-IntegerLiteral 0x12502afc8 <col:9> 'int' 0
    `-LabelStmt 0x12502b040 <line:31:1, line:32:10> 'nla_put_failure'
      `-ReturnStmt 0x12502b030 <col:2, col:10>
        `-UnaryOperator 0x12502b018 <col:9, col:10> 'int' prefix '-'
          `-IntegerLiteral 0x12502aff8 <col:10> 'int' 1
