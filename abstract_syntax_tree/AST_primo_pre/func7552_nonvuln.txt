`-FunctionDecl 0x13700df18  line:1:12 invalid __extract 'int (int *, unsigned int, int)' static
  |-ParmVarDecl 0x13700dd28 <col:22, col:26> col:26 invalid report 'int *'
  |-ParmVarDecl 0x13700dda8 <col:34, col:43> col:43 used offset 'unsigned int'
  |-ParmVarDecl 0x13700de28 <col:51, col:55> col:55 used n 'int'
  `-CompoundStmt 0x137808650 <line:2:1, line:20:1>
    |-DeclStmt 0x13700e0e8 <line:3:2, col:31>
    | `-VarDecl 0x13700dff0 <col:2, col:30> col:15 used idx 'unsigned int' cinit
    |   `-BinaryOperator 0x13700e0c8 <col:21, col:30> 'unsigned int' '/'
    |     |-ImplicitCastExpr 0x13700e098 <col:21> 'unsigned int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13700e058 <col:21> 'unsigned int' lvalue ParmVar 0x13700dda8 'offset' 'unsigned int'
    |     `-ImplicitCastExpr 0x13700e0b0 <col:30> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13700e078 <col:30> 'int' 8
    |-DeclStmt 0x13700e1b8 <line:4:2, col:25>
    | `-VarDecl 0x13700e118 <col:2, col:24> col:15 used bit_nr 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x13700e1a0 <col:24> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x13700e180 <col:24> 'int' 0
    |-DeclStmt 0x13700e2e0 <line:5:2, col:37>
    | `-VarDecl 0x13700e1e8 <col:2, col:36> col:15 used bit_shift 'unsigned int' cinit
    |   `-BinaryOperator 0x13700e2c0 <col:27, col:36> 'unsigned int' '%'
    |     |-ImplicitCastExpr 0x13700e290 <col:27> 'unsigned int' <LValueToRValue>
    |     | `-DeclRefExpr 0x13700e250 <col:27> 'unsigned int' lvalue ParmVar 0x13700dda8 'offset' 'unsigned int'
    |     `-ImplicitCastExpr 0x13700e2a8 <col:36> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13700e270 <col:36> 'int' 8
    |-DeclStmt 0x137808238 <line:6:2, col:34>
    | `-VarDecl 0x13700e310 <col:2, col:25> col:6 used bits_to_copy 'int' cinit
    |   `-ImplicitCastExpr 0x137808220 <col:21, col:25> 'int' <IntegralCast>
    |     `-BinaryOperator 0x137808200 <col:21, col:25> 'unsigned int' '-'
    |       |-ImplicitCastExpr 0x13700e3d0 <col:21> 'unsigned int' <IntegralCast>
    |       | `-IntegerLiteral 0x13700e378 <col:21> 'int' 8
    |       `-ImplicitCastExpr 0x13700e3b8 <col:25> 'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x13700e398 <col:25> 'unsigned int' lvalue Var 0x13700e1e8 'bit_shift' 'unsigned int'
    |-WhileStmt 0x137808570 <line:10:2, line:17:2>
    | |-BinaryOperator 0x1378082a8 <line:10:9, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x137808290 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x137808250 <col:9> 'int' lvalue ParmVar 0x13700de28 'n' 'int'
    | | `-IntegerLiteral 0x137808270 <col:13> 'int' 0
    | `-CompoundStmt 0x137808538 <col:16, line:17:2>
    |   |-CompoundAssignOperator 0x137808358 <line:12:3, col:8> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x137808300 <col:3> 'int' lvalue ParmVar 0x13700de28 'n' 'int'
    |   | `-ImplicitCastExpr 0x137808340 <col:8> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x137808320 <col:8> 'int' lvalue Var 0x13700e310 'bits_to_copy' 'int'
    |   |-CompoundAssignOperator 0x1378083f8 <line:13:3, col:13> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x137808388 <col:3> 'unsigned int' lvalue Var 0x13700e118 'bit_nr' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1378083e0 <col:13> 'unsigned int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x1378083c8 <col:13> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1378083a8 <col:13> 'int' lvalue Var 0x13700e310 'bits_to_copy' 'int'
    |   |-BinaryOperator 0x137808468 <line:14:3, col:18> 'int' '='
    |   | |-DeclRefExpr 0x137808428 <col:3> 'int' lvalue Var 0x13700e310 'bits_to_copy' 'int'
    |   | `-IntegerLiteral 0x137808448 <col:18> 'int' 8
    |   |-BinaryOperator 0x1378084e0 <line:15:3, col:15> 'unsigned int' '='
    |   | |-DeclRefExpr 0x137808488 <col:3> 'unsigned int' lvalue Var 0x13700e1e8 'bit_shift' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1378084c8 <col:15> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x1378084a8 <col:15> 'int' 0
    |   `-UnaryOperator 0x137808520 <line:16:3, col:6> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x137808500 <col:3> 'unsigned int' lvalue Var 0x13700dff0 'idx' 'unsigned int'
    `-ReturnStmt 0x137808640 <line:19:2, col:17>
      `-BinaryOperator 0x137808620 <col:9, col:17> '<dependent type>' contains-errors '&'
        |-RecoveryExpr 0x1378085e0 <col:9> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x137808600 <col:17> '<dependent type>' contains-errors lvalue
