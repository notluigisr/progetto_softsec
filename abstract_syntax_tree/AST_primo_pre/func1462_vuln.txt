`-FunctionDecl 0x146826688  line:1:12 walk_hugetlb_range 'int (unsigned long, unsigned long, struct mm_walk *)' static
  |-ParmVarDecl 0x14680dcd8 <col:31, col:45> col:45 used addr 'unsigned long'
  |-ParmVarDecl 0x14680dd58 <col:51, col:65> col:65 used end 'unsigned long'
  |-ParmVarDecl 0x14680e348 <line:2:10, col:26> col:26 used walk 'struct mm_walk *'
  `-CompoundStmt 0x146829f80 <line:3:1, line:22:1>
    |-DeclStmt 0x1468269d8 <line:4:2, col:40>
    | |-RecordDecl 0x146826790 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x1468268f8 <col:2, col:37> col:25 used vma 'struct vm_area_struct *' cinit
    |   `-RecoveryExpr 0x146826998 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x146826960 <col:31> 'struct mm_walk *' lvalue ParmVar 0x14680e348 'walk' 'struct mm_walk *'
    |-DeclStmt 0x146826de8 <line:5:2, col:36>
    | |-RecordDecl 0x1468269f0 <col:2, col:9> col:9 struct hstate
    | `-VarDecl 0x146826b58 <col:2, col:35> col:17 used h 'struct hstate *' cinit
    |   `-ImplicitCastExpr 0x146826db8 <col:21, col:35> 'struct hstate *' contains-errors <IntegralToPointer>
    |     `-CallExpr 0x146826d78 <col:21, col:35> 'int' contains-errors
    |       |-ImplicitCastExpr 0x146826d60 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x146826cf0 <col:21> 'int ()' Function 0x146826c38 'hstate_vma' 'int ()'
    |       `-ImplicitCastExpr 0x146826da0 <col:32> 'struct vm_area_struct *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x146826d10 <col:32> 'struct vm_area_struct *' contains-errors lvalue Var 0x1468268f8 'vma' 'struct vm_area_struct *'
    |-DeclStmt 0x146826e80 <line:6:2, col:20>
    | `-VarDecl 0x146826e18 <col:2, col:16> col:16 used next 'unsigned long'
    |-DeclStmt 0x1468270a8 <line:7:2, col:41>
    | `-VarDecl 0x146826eb0 <col:2, col:40> col:16 used hmask 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x146827090 <col:24, col:40> 'unsigned long' contains-errors <IntegralCast>
    |     `-CallExpr 0x146827050 <col:24, col:40> 'int' contains-errors
    |       |-ImplicitCastExpr 0x146827038 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x146826ff8 <col:24> 'int ()' Function 0x146826f40 'huge_page_mask' 'int ()'
    |       `-ImplicitCastExpr 0x146827078 <col:39> 'struct hstate *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x146827018 <col:39> 'struct hstate *' contains-errors lvalue Var 0x146826b58 'h' 'struct hstate *'
    |-DeclStmt 0x1468272d0 <line:8:2, col:38>
    | `-VarDecl 0x1468270d8 <col:2, col:37> col:16 used sz 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x1468272b8 <col:21, col:37> 'unsigned long' contains-errors <IntegralCast>
    |     `-CallExpr 0x146827278 <col:21, col:37> 'int' contains-errors
    |       |-ImplicitCastExpr 0x146827260 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x146827220 <col:21> 'int ()' Function 0x146827168 'huge_page_size' 'int ()'
    |       `-ImplicitCastExpr 0x1468272a0 <col:36> 'struct hstate *' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x146827240 <col:36> 'struct hstate *' contains-errors lvalue Var 0x146826b58 'h' 'struct hstate *'
    |-DeclStmt 0x1468273a0 <line:10:2, col:13>
    | `-VarDecl 0x146827318 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x146827380 <col:12> 'int' 0
    |-DoStmt 0x146829f18 <line:12:2, line:19:35>
    | |-CompoundStmt 0x146829dc8 <line:12:5, line:19:2>
    | | |-BinaryOperator 0x146829800 <line:13:3, col:40> 'unsigned long' contains-errors '='
    | | | |-DeclRefExpr 0x1468273b8 <col:3> 'unsigned long' lvalue Var 0x146826e18 'next' 'unsigned long'
    | | | `-ImplicitCastExpr 0x1468275d0 <col:10, col:40> 'unsigned long' contains-errors <IntegralCast>
    | | |   `-CallExpr 0x146827550 <col:10, col:40> 'int' contains-errors
    | | |     |-ImplicitCastExpr 0x146827538 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x1468274b8 <col:10> 'int ()' Function 0x146827400 'hugetlb_entry_end' 'int ()'
    | | |     |-ImplicitCastExpr 0x146827588 <col:28> 'struct hstate *' contains-errors <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1468274d8 <col:28> 'struct hstate *' contains-errors lvalue Var 0x146826b58 'h' 'struct hstate *'
    | | |     |-ImplicitCastExpr 0x1468275a0 <col:31> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1468274f8 <col:31> 'unsigned long' lvalue ParmVar 0x14680dcd8 'addr' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x1468275b8 <col:37> 'unsigned long' <LValueToRValue>
    | | |       `-DeclRefExpr 0x146827518 <col:37> 'unsigned long' lvalue ParmVar 0x14680dd58 'end' 'unsigned long'
    | | |-IfStmt 0x146829d48 <line:15:3, line:16:58>
    | | | |-BinaryOperator 0x146829b20 <line:15:7, col:20> 'int' contains-errors '&&'
    | | | | |-RecoveryExpr 0x146829b00 <col:7> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x146829ab8 <col:14, col:20> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x146829a80 <col:14> 'struct mm_walk *' lvalue ParmVar 0x14680e348 'walk' 'struct mm_walk *'
    | | | `-BinaryOperator 0x146829d28 <line:16:4, col:58> 'int' contains-errors '='
    | | |   |-DeclRefExpr 0x146829b40 <col:4> 'int' lvalue Var 0x146827318 'err' 'int'
    | | |   `-CallExpr 0x146829ce0 <col:10, col:58> '<dependent type>' contains-errors
    | | |     |-RecoveryExpr 0x146829b98 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | | |     | `-DeclRefExpr 0x146829b60 <col:10> 'struct mm_walk *' lvalue ParmVar 0x14680e348 'walk' 'struct mm_walk *'
    | | |     |-RecoveryExpr 0x146829cc0 <col:30> '<dependent type>' contains-errors lvalue
    | | |     |-DeclRefExpr 0x146829bd8 <col:35> 'unsigned long' contains-errors lvalue Var 0x146826eb0 'hmask' 'unsigned long'
    | | |     |-DeclRefExpr 0x146829bf8 <col:42> 'unsigned long' lvalue ParmVar 0x14680dcd8 'addr' 'unsigned long'
    | | |     |-DeclRefExpr 0x146829c18 <col:48> 'unsigned long' lvalue Var 0x146826e18 'next' 'unsigned long'
    | | |     `-DeclRefExpr 0x146829c38 <col:54> 'struct mm_walk *' lvalue ParmVar 0x14680e348 'walk' 'struct mm_walk *'
    | | `-IfStmt 0x146829da8 <line:17:3, line:18:4>
    | |   |-ImplicitCastExpr 0x146829d88 <line:17:7> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x146829d68 <col:7> 'int' lvalue Var 0x146827318 'err' 'int'
    | |   `-BreakStmt 0x146829da0 <line:18:4>
    | `-BinaryOperator 0x146829ef8 <line:19:11, col:32> 'int' ','
    |   |-BinaryOperator 0x146829e48 <col:11, col:18> 'unsigned long' '='
    |   | |-DeclRefExpr 0x146829df0 <col:11> 'unsigned long' lvalue ParmVar 0x14680dcd8 'addr' 'unsigned long'
    |   | `-ImplicitCastExpr 0x146829e30 <col:18> 'unsigned long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146829e10 <col:18> 'unsigned long' lvalue Var 0x146826e18 'next' 'unsigned long'
    |   `-BinaryOperator 0x146829ed8 <col:24, col:32> 'int' '!='
    |     |-ImplicitCastExpr 0x146829ea8 <col:24> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x146829e68 <col:24> 'unsigned long' lvalue ParmVar 0x14680dcd8 'addr' 'unsigned long'
    |     `-ImplicitCastExpr 0x146829ec0 <col:32> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x146829e88 <col:32> 'unsigned long' lvalue ParmVar 0x14680dd58 'end' 'unsigned long'
    `-ReturnStmt 0x146829f70 <line:21:2, col:9>
      `-ImplicitCastExpr 0x146829f58 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x146829f38 <col:9> 'int' lvalue Var 0x146827318 'err' 'int'
