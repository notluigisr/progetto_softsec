`-FunctionDecl 0x13d128318  line:1:1 invalid mac_writereg 'int (int *, int, int)'
  |-ParmVarDecl 0x13d128128 <col:14, col:26> col:26 referenced invalid s 'int *'
  |-ParmVarDecl 0x13d1281a8 <col:29, col:33> col:33 used index 'int'
  |-ParmVarDecl 0x13d128228 <col:40, col:49> col:49 invalid val 'int'
  `-CompoundStmt 0x13d141c38 <line:2:1, line:12:1>
    |-BinaryOperator 0x13d1284f8 <line:5:5, col:25> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13d1284b8 <col:5, col:21> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13d128488 <col:5, col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13d128420 <col:5, col:8> '<dependent type>' contains-errors lvalue ->mac_reg
    | | |   `-RecoveryExpr 0x13d1283f8 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13d1283d8 <col:5> 'int *' lvalue ParmVar 0x13d128128 's' 'int *'
    | | `-ImplicitCastExpr 0x13d1284a0 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d128468 <col:16> 'int' lvalue ParmVar 0x13d1281a8 'index' 'int'
    | `-RecoveryExpr 0x13d1284d8 <col:25> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13d141c18 <line:7:5, line:11:5>
      |-BinaryOperator 0x13d1285f0 <line:7:9, col:23> 'int' contains-errors '=='
      | |-DeclRefExpr 0x13d128518 <col:9> 'int' lvalue ParmVar 0x13d1281a8 'index' 'int'
      | `-BinaryOperator 0x13d1285d0 <col:18, col:23> '<dependent type>' contains-errors '+'
      |   |-RecoveryExpr 0x13d1285b0 <col:18> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x13d128550 <col:23> 'int' 1
      `-CompoundStmt 0x13d141c08 <col:26, line:11:5>
