`-FunctionDecl 0x15800de58  line:1:1 invalid exsltSaxonLineNumberFunction 'int (int, int)'
  |-ParmVarDecl 0x15800dcf0 <col:30, col:55> col:55 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x15800dd70 <col:61, col:65> col:65 used nargs 'int'
  `-CompoundStmt 0x159808ac8 <col:72, line:42:1>
    |-IfStmt 0x159808928 <line:4:5, line:38:5> has_else
    | |-BinaryOperator 0x15800df68 <line:4:9, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x15800df50 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15800df10 <col:9> 'int' lvalue ParmVar 0x15800dd70 'nargs' 'int'
    | | `-IntegerLiteral 0x15800df30 <col:18> 'int' 0
    | |-CompoundStmt 0x15800e038 <col:21, line:6:5>
    | `-IfStmt 0x1598088f8 <col:12, line:38:5> has_else
    |   |-BinaryOperator 0x15800e0a0 <line:6:16, col:25> 'int' '=='
    |   | |-ImplicitCastExpr 0x15800e088 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15800e048 <col:16> 'int' lvalue ParmVar 0x15800dd70 'nargs' 'int'
    |   | `-IntegerLiteral 0x15800e068 <col:25> 'int' 1
    |   |-CompoundStmt 0x158028348 <col:28, line:32:5>
    |   | |-DeclStmt 0x15800e140 <line:9:2, col:7>
    |   | | `-VarDecl 0x15800e0d8 <col:2, col:6> col:6 used i 'int'
    |   | |-IfStmt 0x1580278b0 <line:11:2, line:16:2>
    |   | | |-RecoveryExpr 0x15800e2e0 <line:11:6, col:66> '_Bool' contains-errors
    |   | | `-CompoundStmt 0x158027888 <col:69, line:16:2>
    |   | |   |-CallExpr 0x158027730 <line:12:6, line:13:8> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x1580274b8 <line:12:6> 'int ()' Function 0x158027400 'xsltTransformError' 'int ()'
    |   | |   | |-CallExpr 0x1580275f8 <col:25, col:58> '<dependent type>' contains-errors
    |   | |   | | |-DeclRefExpr 0x1580275b8 <col:25> 'int ()' Function 0x158027500 'xsltXPathGetTransformContext' 'int ()'
    |   | |   | | `-RecoveryExpr 0x1580275d8 <col:54> '<dependent type>' contains-errors lvalue
    |   | |   | |-RecoveryExpr 0x1580276f0 <col:61> '<dependent type>' contains-errors lvalue
    |   | |   | |-RecoveryExpr 0x158027710 <col:67> '<dependent type>' contains-errors lvalue
    |   | |   | `-StringLiteral 0x158027690 <line:13:3> 'char[4]' lvalue "STR"
    |   | |   |-BinaryOperator 0x158027858 <line:14:6, col:20> '<dependent type>' contains-errors '='
    |   | |   | |-CXXDependentScopeMemberExpr 0x1580277b8 <col:6, col:12> '<dependent type>' contains-errors lvalue ->error
    |   | |   | | `-RecoveryExpr 0x158027790 <col:6> '<dependent type>' contains-errors lvalue
    |   | |   | |   `-DeclRefExpr 0x158027770 <col:6> 'int' lvalue ParmVar 0x15800dcf0 'ctxt' 'int'
    |   | |   | `-RecoveryExpr 0x158027838 <col:20> '<dependent type>' contains-errors lvalue
    |   | |   `-ReturnStmt 0x158027878 <line:15:6>
    |   | `-IfStmt 0x158027fb0 <line:20:2, line:24:2>
    |   |   |-RecoveryExpr 0x158027b68 <line:20:6, col:50> '_Bool' contains-errors
    |   |   `-CompoundStmt 0x158027f90 <col:53, line:24:2>
    |   |     |-CallExpr 0x158027f50 <line:22:6, col:42> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x158027d68 <col:6> 'int ()' Function 0x158027cb0 'valuePush' 'int ()'
    |   |     | |-RecoveryExpr 0x158027d88 <col:16> '<dependent type>' contains-errors lvalue
    |   |     | `-CallExpr 0x158027f28 <col:22, col:41> 'int'
    |   |     |   |-ImplicitCastExpr 0x158027f10 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |   |     |   | `-DeclRefExpr 0x158027e88 <col:22> 'int ()' Function 0x158027dd0 'xmlXPathNewFloat' 'int ()'
    |   |     |   `-UnaryOperator 0x158027ec8 <col:39, col:40> 'int' prefix '-'
    |   |     |     `-IntegerLiteral 0x158027ea8 <col:40> 'int' 1
    |   |     `-ReturnStmt 0x158027f80 <line:23:6>
    |   `-CompoundStmt 0x1598088e0 <line:32:12, line:38:5>
    |     `-ReturnStmt 0x1598088d0 <line:37:2>
    `-ReturnStmt 0x159808ab8 <line:41:5>
