`-FunctionDecl 0x122026600  line:1:6 add_timer_on 'void (struct timer_list *, int)'
  |-ParmVarDecl 0x12200e248 <col:19, col:38> col:38 used timer 'struct timer_list *'
  |-ParmVarDecl 0x12200e2c8 <col:45, col:49> col:49 used cpu 'int'
  `-CompoundStmt 0x12280a158 <line:2:1, line:26:1>
    |-DeclStmt 0x122026980 <line:3:2, col:36>
    | |-RecordDecl 0x122026700 <col:2, col:9> col:9 struct timer_base
    | |-VarDecl 0x122026868 <col:2, col:21> col:21 used new_base 'struct timer_base *'
    | `-VarDecl 0x1220268f8 <col:2, col:32> col:32 used base 'struct timer_base *'
    |-DeclStmt 0x122026a18 <line:4:2, col:21>
    | `-VarDecl 0x1220269b0 <col:2, col:16> col:16 used flags 'unsigned long'
    |-CallExpr 0x122026be8 <line:6:2, col:40> 'int'
    | |-ImplicitCastExpr 0x122026bd0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122026b60 <col:2> 'int ()' Function 0x122026aa8 'timer_stats_timer_set_start_info' 'int ()'
    | `-ImplicitCastExpr 0x122026c10 <col:35> 'struct timer_list *' <LValueToRValue>
    |   `-DeclRefExpr 0x122026b80 <col:35> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |-CallExpr 0x122026f50 <line:7:2, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122026d08 <col:2> 'int ()' Function 0x122026c50 'BUG_ON' 'int ()'
    | `-BinaryOperator 0x122026f30 <col:9, col:41> 'int' contains-errors '||'
    |   |-CallExpr 0x122026e60 <col:9, col:28> 'int'
    |   | |-ImplicitCastExpr 0x122026e48 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x122026e08 <col:9> 'int ()' Function 0x122026d50 'timer_pending' 'int ()'
    |   | `-ImplicitCastExpr 0x122026e88 <col:23> 'struct timer_list *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x122026e28 <col:23> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |   `-UnaryOperator 0x122026f18 <col:33, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     `-ImplicitCastExpr 0x122026f00 <col:34, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x122026ed8 <col:34, col:41> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x122026ea0 <col:34> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |-BinaryOperator 0x122027148 <line:9:2, col:49> 'struct timer_base *' contains-errors '='
    | |-DeclRefExpr 0x122026f78 <col:2> 'struct timer_base *' lvalue Var 0x122026868 'new_base' 'struct timer_base *'
    | `-CallExpr 0x122027118 <col:13, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x122027078 <col:13> 'int ()' Function 0x122026fc0 'get_timer_cpu_base' 'int ()'
    |   |-RecoveryExpr 0x1220270d0 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x122027098 <col:32> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |   `-DeclRefExpr 0x1220270f8 <col:46> 'int' lvalue ParmVar 0x12200e2c8 'cpu' 'int'
    |-BinaryOperator 0x122027390 <line:12:2, col:38> 'struct timer_base *' '='
    | |-DeclRefExpr 0x122027168 <col:2> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    | `-ImplicitCastExpr 0x122027378 <col:9, col:38> 'struct timer_base *' <IntegralToPointer>
    |   `-CallExpr 0x122027330 <col:9, col:38> 'int'
    |     |-ImplicitCastExpr 0x122027318 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x122027268 <col:9> 'int ()' Function 0x1220271b0 'lock_timer_base' 'int ()'
    |     |-ImplicitCastExpr 0x122027360 <col:25> 'struct timer_list *' <LValueToRValue>
    |     | `-DeclRefExpr 0x122027288 <col:25> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |     `-UnaryOperator 0x122027300 <col:32, col:33> 'unsigned long *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x1220272a8 <col:33> 'unsigned long' lvalue Var 0x1220269b0 'flags' 'unsigned long'
    |-IfStmt 0x122809c08 <line:13:2, line:21:2>
    | |-BinaryOperator 0x122027420 <line:13:6, col:14> 'int' '!='
    | | |-ImplicitCastExpr 0x1220273f0 <col:6> 'struct timer_base *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1220273b0 <col:6> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    | | `-ImplicitCastExpr 0x122027408 <col:14> 'struct timer_base *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1220273d0 <col:14> 'struct timer_base *' lvalue Var 0x122026868 'new_base' 'struct timer_base *'
    | `-CompoundStmt 0x122809bd8 <col:24, line:21:2>
    |   |-CompoundAssignOperator 0x122027508 <line:14:3, col:19> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x122027478 <col:3, col:10> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x122027440 <col:3> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |   | `-RecoveryExpr 0x1220274e8 <col:19> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x122809750 <line:16:3, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1228096b8 <col:3> 'int ()' Function 0x122809600 'spin_unlock' 'int ()'
    |   | `-UnaryOperator 0x122809738 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x122809710 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1228096d8 <col:16> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    |   |-BinaryOperator 0x1228097d0 <line:17:3, col:10> 'struct timer_base *' '='
    |   | |-DeclRefExpr 0x122809778 <col:3> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    |   | `-ImplicitCastExpr 0x1228097b8 <col:10> 'struct timer_base *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x122809798 <col:10> 'struct timer_base *' lvalue Var 0x122026868 'new_base' 'struct timer_base *'
    |   `-CallExpr 0x122809968 <line:18:3, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1228098d0 <col:3> 'int ()' Function 0x122809818 'spin_lock' 'int ()'
    |     `-UnaryOperator 0x122809950 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x122809928 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x1228098f0 <col:14> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    |-CallExpr 0x122809da8 <line:23:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122809d08 <col:2> 'int ()' Function 0x122809c50 'debug_activate' 'int ()'
    | |-DeclRefExpr 0x122809d28 <col:17> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    | `-RecoveryExpr 0x122809d80 <col:24, col:31> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x122809d48 <col:24> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    |-CallExpr 0x122809f30 <line:24:2, col:32> 'int'
    | |-ImplicitCastExpr 0x122809f18 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122809eb8 <col:2> 'int ()' Function 0x122809e00 'internal_add_timer' 'int ()'
    | |-ImplicitCastExpr 0x122809f60 <col:21> 'struct timer_base *' <LValueToRValue>
    | | `-DeclRefExpr 0x122809ed8 <col:21> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
    | `-ImplicitCastExpr 0x122809f78 <col:27> 'struct timer_list *' <LValueToRValue>
    |   `-DeclRefExpr 0x122809ef8 <col:27> 'struct timer_list *' lvalue ParmVar 0x12200e248 'timer' 'struct timer_list *'
    `-CallExpr 0x12280a128 <line:25:2, col:43> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12280a070 <col:2> 'int ()' Function 0x122809fb8 'spin_unlock_irqrestore' 'int ()'
      |-UnaryOperator 0x12280a0f0 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-RecoveryExpr 0x12280a0c8 <col:26, col:32> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12280a090 <col:26> 'struct timer_base *' lvalue Var 0x1220268f8 'base' 'struct timer_base *'
      `-DeclRefExpr 0x12280a108 <col:38> 'unsigned long' lvalue Var 0x1220269b0 'flags' 'unsigned long'
