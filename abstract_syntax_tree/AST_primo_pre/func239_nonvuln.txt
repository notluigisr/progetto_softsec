`-FunctionDecl 0x14180df18  line:1:13 invalid check_charset 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x14180dd28 <col:27, col:36> col:36 invalid self 'int *'
  |-ParmVarDecl 0x14180dda8 <col:42, col:47> col:47 invalid thd 'int *'
  |-ParmVarDecl 0x14180de28 <col:52, col:61> col:61 referenced invalid var 'int *'
  `-CompoundStmt 0x1411243f8 <line:2:1, line:32:1>
    |-DeclStmt 0x14180e118 <line:6:3, col:38>
    | `-VarDecl 0x14180e0b0 <col:3, col:8> col:8 invalid buff 'char'
    `-IfStmt 0x1411243c8 <line:7:3, line:30:3> has_else
      |-BinaryOperator 0x14180e258 <line:7:7, col:36> 'int' contains-errors '=='
      | |-CallExpr 0x14180e1e0 <col:7, col:31> '<dependent type>' contains-errors
      | | `-CXXDependentScopeMemberExpr 0x14180e198 <col:7, col:19> '<dependent type>' contains-errors lvalue ->result_type
      | |   `-CXXDependentScopeMemberExpr 0x14180e150 <col:7, col:12> '<dependent type>' contains-errors lvalue ->value
      | |     `-RecoveryExpr 0x14180e130 <col:7> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14180e238 <col:36> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x141828860 <line:8:3, line:21:3>
      | `-IfStmt 0x141828830 <line:10:5, line:20:5> has_else
      |   |-RecoveryExpr 0x14180e3b8 <line:10:9, col:40> '_Bool' contains-errors
      |   |-BinaryOperator 0x141827f10 <line:11:7, col:29> '<dependent type>' contains-errors '='
      |   | |-CXXDependentScopeMemberExpr 0x141827e70 <col:7, col:24> '<dependent type>' contains-errors lvalue .ptr
      |   | | `-CXXDependentScopeMemberExpr 0x141827e28 <col:7, col:12> '<dependent type>' contains-errors lvalue ->save_result
      |   | |   `-RecoveryExpr 0x141827e00 <col:7> '<dependent type>' contains-errors lvalue
      |   | |     `-DeclRefExpr 0x14180e3d8 <col:7> 'int *' lvalue ParmVar 0x14180de28 'var' 'int *'
      |   | `-RecoveryExpr 0x141827ef0 <col:29> '<dependent type>' contains-errors lvalue
      |   `-IfStmt 0x141828810 <line:12:10, line:20:5>
      |     |-RecoveryExpr 0x141828660 <line:12:14, line:15:75> '_Bool' contains-errors
      |     `-CompoundStmt 0x141828800 <line:16:5, line:20:5>
      `-CompoundStmt 0x1411243a8 <line:23:3, line:30:3>
        |-DeclStmt 0x141828a88 <line:24:5, col:41>
        | `-VarDecl 0x141828890 <col:5, col:40> col:9 used csno 'int' cinit
        |   `-CStyleCastExpr 0x141828a60 <col:15, col:40> 'int' contains-errors <Dependent>
        |     `-CallExpr 0x1418289a8 <col:20, col:40> '<dependent type>' contains-errors
        |       `-CXXDependentScopeMemberExpr 0x141828960 <col:20, col:32> '<dependent type>' contains-errors lvalue ->val_int
        |         `-CXXDependentScopeMemberExpr 0x141828918 <col:20, col:25> '<dependent type>' contains-errors lvalue ->value
        |           `-RecoveryExpr 0x1418288f8 <col:20> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x141124388 <line:25:5, line:29:5>
          |-UnaryOperator 0x141124150 <line:25:9, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow
          | `-ParenExpr 0x141124130 <col:10, col:58> '<dependent type>' contains-errors
          |   `-BinaryOperator 0x141124110 <col:11, col:57> '<dependent type>' contains-errors '='
          |     |-CXXDependentScopeMemberExpr 0x141828b08 <col:11, col:28> '<dependent type>' contains-errors lvalue .ptr
          |     | `-CXXDependentScopeMemberExpr 0x141828ac0 <col:11, col:16> '<dependent type>' contains-errors lvalue ->save_result
          |     |   `-RecoveryExpr 0x141828aa0 <col:11> '<dependent type>' contains-errors lvalue
          |     `-CallExpr 0x1411240c8 <col:33, col:57> 'int' contains-errors
          |       |-ImplicitCastExpr 0x1411240b0 <col:33> 'int (*)()' <FunctionToPointerDecay>
          |       | `-DeclRefExpr 0x141828c30 <col:33> 'int ()' Function 0x141828b78 'get_charset' 'int ()'
          |       |-ImplicitCastExpr 0x1411240f8 <col:45> 'int' contains-errors <LValueToRValue>
          |       | `-DeclRefExpr 0x141828c50 <col:45> 'int' contains-errors lvalue Var 0x141828890 'csno' 'int'
          |       `-CallExpr 0x141124088 <col:51, col:56> 'int'
          |         |-ImplicitCastExpr 0x141124070 <col:51> 'int (*)()' <FunctionToPointerDecay>
          |         | `-DeclRefExpr 0x141828c70 <col:51> 'int ()' Function 0x141828220 'MYF' 'int ()'
          |         `-IntegerLiteral 0x141828c90 <col:55> 'int' 0
          `-CompoundStmt 0x141124378 <line:26:5, line:29:5>
