`-FunctionDecl 0x11e940c98  line:1:12 invalid _open_and_activate_luks2 'int (struct crypt_device *, int, const char *, const char *, int, int)' static
  |-ParmVarDecl 0x11e928648 <col:37, col:58> col:58 used cd 'struct crypt_device *'
  |-ParmVarDecl 0x11e9286c8 <line:2:2, col:6> col:6 used keyslot 'int'
  |-ParmVarDecl 0x11e928748 <line:3:2, col:14> col:14 used name 'const char *'
  |-ParmVarDecl 0x11e940a00 <line:4:2, col:14> col:14 used passphrase 'const char *'
  |-ParmVarDecl 0x11e940a98 <line:5:2, col:9> col:9 invalid passphrase_size 'int'
  |-ParmVarDecl 0x11e940b18 <line:6:2, col:11> col:11 invalid flags 'int'
  `-CompoundStmt 0x11e943238 <line:7:1, line:28:1>
    |-DeclStmt 0x11e940df0 <line:9:2, col:7>
    | `-VarDecl 0x11e940d88 <col:2, col:6> col:6 used r 'int'
    |-DeclStmt 0x11e941100 <line:10:2, col:42>
    | |-RecordDecl 0x11e940e08 <col:2, col:9> col:9 struct luks2_hdr
    | `-VarDecl 0x11e940f78 <col:2, col:39> col:20 used hdr 'struct luks2_hdr *' cinit
    |   `-UnaryOperator 0x11e9410d0 <col:26, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x11e941088 <col:27, col:39> '<dependent type>' contains-errors lvalue .hdr
    |       `-CXXDependentScopeMemberExpr 0x11e941040 <col:27, col:33> '<dependent type>' contains-errors lvalue .luks2
    |         `-RecoveryExpr 0x11e941018 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x11e940fe0 <col:27> 'struct crypt_device *' lvalue ParmVar 0x11e928648 'cd' 'struct crypt_device *'
    |-IfStmt 0x11e941490 <line:13:2, line:14:11>
    | |-BinaryOperator 0x11e9413c8 <line:13:6, col:12> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11e941388 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11e9413a8 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11e941480 <line:14:3, col:11>
    |   `-UnaryOperator 0x11e941468 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x11e941450 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x11e941430 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e9431c0 <line:16:2, line:25:27> has_else
    | |-BinaryOperator 0x11e941540 <line:16:6, col:11> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x11e941500 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11e941520 <col:11> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11e942f58 <col:33, line:23:2>
    | | `-IfStmt 0x11e942f28 <line:17:3, line:22:37> has_else
    | |   |-ImplicitCastExpr 0x11e941580 <line:17:7> 'const char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x11e941560 <col:7> 'const char *' lvalue ParmVar 0x11e928748 'name' 'const char *'
    | |   |-BinaryOperator 0x11e9417f0 <line:18:4, line:19:28> 'int' contains-errors '='
    | |   | |-DeclRefExpr 0x11e941598 <line:18:4> 'int' lvalue Var 0x11e940d88 'r' 'int'
    | |   | `-CallExpr 0x11e941798 <col:8, line:19:28> '<dependent type>' contains-errors
    | |   |   |-DeclRefExpr 0x11e941698 <line:18:8> 'int ()' Function 0x11e9415e0 '_open_and_activate_reencrypt_device' 'int ()'
    | |   |   |-DeclRefExpr 0x11e9416b8 <col:44> 'struct crypt_device *' lvalue ParmVar 0x11e928648 'cd' 'struct crypt_device *'
    | |   |   |-DeclRefExpr 0x11e9416d8 <col:48> 'struct luks2_hdr *' contains-errors lvalue Var 0x11e940f78 'hdr' 'struct luks2_hdr *'
    | |   |   |-DeclRefExpr 0x11e9416f8 <col:53> 'int' lvalue ParmVar 0x11e9286c8 'keyslot' 'int'
    | |   |   |-DeclRefExpr 0x11e941718 <col:62> 'const char *' lvalue ParmVar 0x11e928748 'name' 'const char *'
    | |   |   |-DeclRefExpr 0x11e941738 <col:68> 'const char *' lvalue ParmVar 0x11e940a00 'passphrase' 'const char *'
    | |   |   |-RecoveryExpr 0x11e941758 <line:19:6> '<dependent type>' contains-errors lvalue
    | |   |   `-RecoveryExpr 0x11e941778 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x11e942f08 <line:21:4, line:22:37> 'int' contains-errors '='
    | |     |-DeclRefExpr 0x11e941810 <line:21:4> 'int' lvalue Var 0x11e940d88 'r' 'int'
    | |     `-CallExpr 0x11e942eb0 <col:8, line:22:37> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x11e941910 <line:21:8> 'int ()' Function 0x11e941858 '_open_all_keys' 'int ()'
    | |       |-DeclRefExpr 0x11e941930 <col:23> 'struct crypt_device *' lvalue ParmVar 0x11e928648 'cd' 'struct crypt_device *'
    | |       |-DeclRefExpr 0x11e941950 <col:27> 'struct luks2_hdr *' contains-errors lvalue Var 0x11e940f78 'hdr' 'struct luks2_hdr *'
    | |       |-DeclRefExpr 0x11e941970 <col:32> 'int' lvalue ParmVar 0x11e9286c8 'keyslot' 'int'
    | |       |-DeclRefExpr 0x11e941990 <col:41> 'const char *' lvalue ParmVar 0x11e940a00 'passphrase' 'const char *'
    | |       |-RecoveryExpr 0x11e9419b0 <line:22:9> '<dependent type>' contains-errors lvalue
    | |       |-RecoveryExpr 0x11e9419d0 <col:26> '<dependent type>' contains-errors lvalue
    | |       `-RecoveryExpr 0x11e942e90 <col:33> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11e9431a0 <line:24:3, line:25:27> 'int' contains-errors '='
    |   |-DeclRefExpr 0x11e942f70 <line:24:3> 'int' lvalue Var 0x11e940d88 'r' 'int'
    |   `-CallExpr 0x11e943150 <col:7, line:25:27> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e943070 <line:24:7> 'int ()' Function 0x11e942fb8 '_open_and_activate' 'int ()'
    |     |-DeclRefExpr 0x11e943090 <col:26> 'struct crypt_device *' lvalue ParmVar 0x11e928648 'cd' 'struct crypt_device *'
    |     |-DeclRefExpr 0x11e9430b0 <col:30> 'int' lvalue ParmVar 0x11e9286c8 'keyslot' 'int'
    |     |-DeclRefExpr 0x11e9430d0 <col:39> 'const char *' lvalue ParmVar 0x11e928748 'name' 'const char *'
    |     |-DeclRefExpr 0x11e9430f0 <col:45> 'const char *' lvalue ParmVar 0x11e940a00 'passphrase' 'const char *'
    |     |-RecoveryExpr 0x11e943110 <line:25:5> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x11e943130 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x11e943228 <line:27:2, col:9>
      `-ImplicitCastExpr 0x11e943210 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e9431f0 <col:9> 'int' lvalue Var 0x11e940d88 'r' 'int'
