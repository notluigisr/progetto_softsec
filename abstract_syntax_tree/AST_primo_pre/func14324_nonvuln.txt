`-FunctionDecl 0x15a140a00  line:1:12 rt6_info_hash_nhsfn 'int (unsigned int, const struct flowi6 *)' static
  |-ParmVarDecl 0x15a1280d8 <col:32, col:45> col:45 used candidate_count 'unsigned int'
  |-ParmVarDecl 0x15a1286c8 <line:2:11, col:32> col:32 used fl6 'const struct flowi6 *'
  `-CompoundStmt 0x15a141428 <line:3:1, line:29:1>
    |-DeclStmt 0x15a140be0 <line:4:2, col:38>
    | `-VarDecl 0x15a140b18 <col:2, col:26> col:15 used val 'unsigned int' cinit
    |   `-RecoveryExpr 0x15a140bb8 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15a140b80 <col:21> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'
    |-CompoundAssignOperator 0x15a140e00 <line:6:2, col:35> 'unsigned int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x15a140bf8 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    | `-CallExpr 0x15a140dd8 <col:9, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15a140d40 <col:9> 'int ()' Function 0x15a140c88 'ipv6_addr_hash' 'int ()'
    |   `-UnaryOperator 0x15a140dc0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x15a140d98 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15a140d60 <col:25> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'
    |-CompoundAssignOperator 0x15a140f10 <line:7:2, col:35> 'unsigned int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x15a140e30 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    | `-CallExpr 0x15a140ee8 <col:9, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15a140e50 <col:9> 'int ()' Function 0x15a140c88 'ipv6_addr_hash' 'int ()'
    |   `-UnaryOperator 0x15a140ed0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x15a140ea8 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x15a140e70 <col:25> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'
    |-SwitchStmt 0x15a140fb8 <line:10:2, line:22:2>
    | |-ImplicitCastExpr 0x15a140fa0 <line:10:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x15a140f78 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a140f40 <col:10> 'const struct flowi6 *' lvalue ParmVar 0x15a1286c8 'fl6' 'const struct flowi6 *'
    | `-CompoundStmt 0x15a141130 <col:29, line:22:2>
    |   |-BreakStmt 0x15a141098 <line:16:3>
    |   `-BreakStmt 0x15a141128 <line:21:3>
    |-BinaryOperator 0x15a141350 <line:27:2, col:37> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x15a141188 <col:2> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    | `-BinaryOperator 0x15a141330 <col:8, col:37> 'unsigned int' contains-errors '^'
    |   |-BinaryOperator 0x15a141278 <col:8, col:23> 'unsigned int' contains-errors '^'
    |   | |-ImplicitCastExpr 0x15a141260 <col:8> 'unsigned int' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x15a1411a8 <col:8> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    |   | `-ParenExpr 0x15a141240 <col:14, col:23> 'unsigned int' contains-errors
    |   |   `-BinaryOperator 0x15a141220 <col:15, col:22> 'unsigned int' contains-errors '>>'
    |   |     |-ImplicitCastExpr 0x15a141208 <col:15> 'unsigned int' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x15a1411c8 <col:15> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    |   |     `-IntegerLiteral 0x15a1411e8 <col:22> 'int' 7
    |   `-ParenExpr 0x15a141310 <col:27, col:37> 'unsigned int' contains-errors
    |     `-BinaryOperator 0x15a1412f0 <col:28, col:35> 'unsigned int' contains-errors '>>'
    |       |-ImplicitCastExpr 0x15a1412d8 <col:28> 'unsigned int' contains-errors <LValueToRValue>
    |       | `-DeclRefExpr 0x15a141298 <col:28> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
    |       `-IntegerLiteral 0x15a1412b8 <col:35> 'int' 12
    `-ReturnStmt 0x15a141418 <line:28:2, col:15>
      `-ImplicitCastExpr 0x15a141400 <col:9, col:15> 'int' contains-errors <IntegralCast>
        `-BinaryOperator 0x15a1413e0 <col:9, col:15> 'unsigned int' contains-errors '%'
          |-ImplicitCastExpr 0x15a1413b0 <col:9> 'unsigned int' contains-errors <LValueToRValue>
          | `-DeclRefExpr 0x15a141370 <col:9> 'unsigned int' contains-errors lvalue Var 0x15a140b18 'val' 'unsigned int'
          `-ImplicitCastExpr 0x15a1413c8 <col:15> 'unsigned int' <LValueToRValue>
            `-DeclRefExpr 0x15a141390 <col:15> 'unsigned int' lvalue ParmVar 0x15a1280d8 'candidate_count' 'unsigned int'
