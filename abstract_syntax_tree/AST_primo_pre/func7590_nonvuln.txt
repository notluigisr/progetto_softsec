`-FunctionDecl 0x139827460  line:1:5 referenced X509_PURPOSE_add 'int (int, int, int, int (*)(const int *, const int *, int), char *, char *, void *)'
  |-ParmVarDecl 0x13980dcd8 <col:22, col:26> col:26 used id 'int'
  |-ParmVarDecl 0x13980dd58 <col:30, col:34> col:34 used trust 'int'
  |-ParmVarDecl 0x13980ddd8 <col:41, col:45> col:45 used flags 'int'
  |-ParmVarDecl 0x13980e110 <line:2:4, col:53> col:10 used ck 'int (*)(const int *, const int *, int)'
  |-ParmVarDecl 0x13980e190 <line:3:6, col:12> col:12 used name 'char *'
  |-ParmVarDecl 0x13980e210 <col:18, col:24> col:24 used sname 'char *'
  |-ParmVarDecl 0x13980e290 <col:31, col:37> col:37 used arg 'void *'
  `-CompoundStmt 0x13982a0d0 <line:4:1, line:56:1>
    |-DeclStmt 0x139827608 <line:5:2, col:9>
    | `-VarDecl 0x1398275a0 <col:2, col:6> col:6 used idx 'int'
    |-BinaryOperator 0x139827698 <line:6:2, col:16> '<dependent type>' contains-errors '*'
    | |-DeclRefExpr 0x139827620 <col:2> 'int (int, int, int, int (*)(const int *, const int *, int), char *, char *, void *)' Function 0x139827460 'X509_PURPOSE_add' 'int (int, int, int, int (*)(const int *, const int *, int), char *, char *, void *)'
    | `-RecoveryExpr 0x139827678 <col:16> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x139827838 <line:8:2, col:12> 'int' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x1398276b8 <col:2> 'int' lvalue ParmVar 0x13980ddd8 'flags' 'int'
    | `-UnaryOperator 0x139827820 <col:11, col:12> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x139827808 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x1398277e8 <col:12> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x1398278f0 <line:10:2, col:11> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x139827868 <col:2> 'int' lvalue ParmVar 0x13980ddd8 'flags' 'int'
    | `-RecoveryExpr 0x1398278d0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x139827b18 <line:12:2, col:33> 'int' '='
    | |-DeclRefExpr 0x139827920 <col:2> 'int' lvalue Var 0x1398275a0 'idx' 'int'
    | `-CallExpr 0x139827ad8 <col:8, col:33> 'int'
    |   |-ImplicitCastExpr 0x139827ac0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x139827a50 <col:8> 'int ()' Function 0x139827998 'X509_PURPOSE_get_by_id' 'int ()'
    |   `-ImplicitCastExpr 0x139827b00 <col:31> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x139827a70 <col:31> 'int' lvalue ParmVar 0x13980dcd8 'id' 'int'
    |-IfStmt 0x1398281e8 <line:14:2, line:20:9> has_else
    | |-BinaryOperator 0x139827ba8 <line:14:5, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x139827b90 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139827b38 <col:5> 'int' lvalue Var 0x1398275a0 'idx' 'int'
    | | `-UnaryOperator 0x139827b78 <col:12, col:13> 'int' prefix '-'
    | |   `-IntegerLiteral 0x139827b58 <col:13> 'int' 1
    | |-CompoundStmt 0x139828050 <col:16, line:20:2>
    | | `-IfStmt 0x139827ff8 <line:15:3, line:18:3>
    | |   |-RecoveryExpr 0x139827db8 <line:15:6, col:51> '_Bool' contains-errors
    | |   `-CompoundStmt 0x139827fd8 <col:54, line:18:3>
    | |     |-CallExpr 0x139827f78 <line:16:4, col:60> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x139827eb8 <col:4> 'int ()' Function 0x139827e00 'X509V3err' 'int ()'
    | |     | |-RecoveryExpr 0x139827f38 <col:14> '<dependent type>' contains-errors lvalue
    | |     | `-RecoveryExpr 0x139827f58 <col:40> '<dependent type>' contains-errors lvalue
    | |     `-ReturnStmt 0x139827fc8 <line:17:4, col:11>
    | |       `-IntegerLiteral 0x139827fa8 <col:11> 'int' 0
    | `-NullStmt 0x1398281e0 <line:20:9>
    |-IfStmt 0x139829908 <line:23:2, line:26:2>
    | |-BinaryOperator 0x139828338 <line:23:5, col:19> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x1398282d0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->flags
    | | | `-RecoveryExpr 0x1398282b0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x139828318 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1398298f8 <col:46, line:26:2>
    |-IfStmt 0x139829bc0 <line:30:2, line:33:2>
    | |-RecoveryExpr 0x139829b38 <line:30:5, col:27> '_Bool' contains-errors
    | `-CompoundStmt 0x139829ba8 <col:34, line:33:2>
    |   `-ReturnStmt 0x139829b98 <line:32:3, col:10>
    |     `-IntegerLiteral 0x139829b78 <col:10> 'int' 0
    |-IfStmt 0x13982a080 <line:45:2, line:54:2>
    | |-BinaryOperator 0x139829cf0 <line:45:5, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x139829cd8 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139829c80 <col:5> 'int' lvalue Var 0x1398275a0 'idx' 'int'
    | | `-UnaryOperator 0x139829cc0 <col:12, col:13> 'int' prefix '-'
    | |   `-IntegerLiteral 0x139829ca0 <col:13> 'int' 1
    | `-CompoundStmt 0x13982a060 <col:16, line:54:2>
    |   |-IfStmt 0x139829e98 <line:46:3, line:49:3>
    |   | |-RecoveryExpr 0x139829e10 <line:46:6, col:57> '_Bool' contains-errors
    |   | `-CompoundStmt 0x139829e80 <col:60, line:49:3>
    |   |   `-ReturnStmt 0x139829e70 <line:48:4, col:11>
    |   |     `-IntegerLiteral 0x139829e50 <col:11> 'int' 0
    |   `-IfStmt 0x13982a040 <line:50:3, line:53:3>
    |     |-RecoveryExpr 0x139829fb8 <line:50:7, col:42> '_Bool' contains-errors
    |     `-CompoundStmt 0x13982a028 <col:45, line:53:3>
    |       `-ReturnStmt 0x13982a018 <line:52:4, col:11>
    |         `-IntegerLiteral 0x139829ff8 <col:11> 'int' 0
    `-ReturnStmt 0x13982a0c0 <line:55:2, col:9>
      `-IntegerLiteral 0x13982a0a0 <col:9> 'int' 1
