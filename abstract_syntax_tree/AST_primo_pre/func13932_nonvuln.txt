`-FunctionDecl 0x14d122758  line:1:5 ip_setsockopt 'int (struct sock *, int, int, char)'
  |-ParmVarDecl 0x14d80e248 <col:19, col:32> col:32 used sk 'struct sock *'
  |-ParmVarDecl 0x14d80e2c8 <col:36, col:40> col:40 used level 'int'
  |-ParmVarDecl 0x14d80e348 <line:2:3, col:7> col:7 used optname 'int'
  |-ParmVarDecl 0x14d122600 <col:16, col:21> col:21 __user 'char'
  `-CompoundStmt 0x14d122db8 <line:3:1, line:22:1>
    |-DeclStmt 0x14d1228e8 <line:4:2, col:9>
    | `-VarDecl 0x14d122880 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x14d122a58 <line:6:2, line:7:11>
    | |-BinaryOperator 0x14d122990 <line:6:6, col:15> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x14d122900 <col:6> 'int' lvalue ParmVar 0x14d80e2c8 'level' 'int'
    | | `-RecoveryExpr 0x14d122970 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14d122a48 <line:7:3, col:11>
    |   `-UnaryOperator 0x14d122a30 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14d122a18 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14d1229f8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d122d50 <line:9:2, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x14d122a78 <col:2> 'int' lvalue Var 0x14d122880 'err' 'int'
    | `-CallExpr 0x14d122d08 <col:8, col:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d122bb0 <col:8> 'int ()' Function 0x14d122af8 'do_ip_setsockopt' 'int ()'
    |   |-DeclRefExpr 0x14d122bd0 <col:25> 'struct sock *' lvalue ParmVar 0x14d80e248 'sk' 'struct sock *'
    |   |-DeclRefExpr 0x14d122bf0 <col:29> 'int' lvalue ParmVar 0x14d80e2c8 'level' 'int'
    |   |-DeclRefExpr 0x14d122c10 <col:36> 'int' lvalue ParmVar 0x14d80e348 'optname' 'int'
    |   |-RecoveryExpr 0x14d122cc8 <col:45> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14d122ce8 <col:53> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14d122da8 <line:21:2, col:9>
      `-ImplicitCastExpr 0x14d122d90 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d122d70 <col:9> 'int' lvalue Var 0x14d122880 'err' 'int'
