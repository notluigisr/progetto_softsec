`-FunctionDecl 0x13500de88  line:1:12 invalid xar_get_numeric_from_xml_element 'int (int, long *)' static
  |-ParmVarDecl 0x13500dcf0 <col:45, col:62> col:62 invalid reader 'int'
  |-ParmVarDecl 0x13500dda8 <col:70, col:77> col:77 used value 'long *'
  `-CompoundStmt 0x135027d30 <line:2:1, line:17:1>
    |-DeclStmt 0x13500dfc0 <line:3:5, col:27>
    | `-VarDecl 0x13500df58 <col:5, col:21> col:21 referenced invalid numstr 'const int *'
    |-IfStmt 0x135027c30 <line:4:5, line:14:5>
    | |-BinaryOperator 0x13500e3b8 <line:4:9, col:76> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13500e1b8 <col:9, col:38> 'int' contains-errors '=='
    | | | |-CallExpr 0x13500e170 <col:9, col:33> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x13500e130 <col:9> 'int ()' Function 0x13500e078 'xmlTextReaderRead' 'int ()'
    | | | | `-RecoveryExpr 0x13500e150 <col:27> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x13500e198 <col:38> 'int' 1
    | | `-BinaryOperator 0x13500e398 <col:43, col:76> 'int' contains-errors '=='
    | |   |-CallExpr 0x13500e2f8 <col:43, col:71> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x13500e2b8 <col:43> 'int ()' Function 0x13500e200 'xmlTextReaderNodeType' 'int ()'
    | |   | `-RecoveryExpr 0x13500e2d8 <col:65> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13500e378 <col:76> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x135027c10 <col:98, line:14:5>
    |   |-BinaryOperator 0x135027570 <line:5:9, col:48> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x135027400 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13500e3d8 <col:9> 'const int *' lvalue Var 0x13500df58 'numstr' 'const int *'
    |   | `-CallExpr 0x135027548 <col:18, col:48> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x135027508 <col:18> 'int ()' Function 0x135027450 'xmlTextReaderConstValue' 'int ()'
    |   |   `-RecoveryExpr 0x135027528 <col:42> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x135027bf0 <line:6:9, line:13:9>
    |     |-RecoveryExpr 0x135027590 <line:6:13> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x135027bc8 <col:21, line:13:9>
    |       |-BinaryOperator 0x1350277e8 <line:7:13, col:47> 'long' contains-errors '='
    |       | |-UnaryOperator 0x1350275e8 <col:13, col:14> 'long' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x1350275d0 <col:14> 'long *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1350275b0 <col:14> 'long *' lvalue ParmVar 0x13500dda8 'value' 'long *'
    |       | `-ImplicitCastExpr 0x1350277d0 <col:22, col:47> 'long' contains-errors <IntegralCast>
    |       |   `-CallExpr 0x1350277a8 <col:22, col:47> 'int' contains-errors
    |       |     |-ImplicitCastExpr 0x135027790 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x1350276e0 <col:22> 'int ()' Function 0x135027628 'atol' 'int ()'
    |       |     `-CStyleCastExpr 0x135027738 <col:27, col:41> 'const char *' contains-errors <Dependent>
    |       |       `-RecoveryExpr 0x135027700 <col:41> '<dependent type>' contains-errors lvalue
    |       |-IfStmt 0x135027b60 <line:8:13, line:11:13>
    |       | |-BinaryOperator 0x1350278a8 <line:8:17, col:26> 'int' '<'
    |       | | |-ImplicitCastExpr 0x135027878 <col:17, col:18> 'long' <LValueToRValue>
    |       | | | `-UnaryOperator 0x135027840 <col:17, col:18> 'long' lvalue prefix '*' cannot overflow
    |       | | |   `-ImplicitCastExpr 0x135027828 <col:18> 'long *' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x135027808 <col:18> 'long *' lvalue ParmVar 0x13500dda8 'value' 'long *'
    |       | | `-ImplicitCastExpr 0x135027890 <col:26> 'long' <IntegralCast>
    |       | |   `-IntegerLiteral 0x135027858 <col:26> 'int' 0
    |       | `-CompoundStmt 0x135027b40 <col:29, line:11:13>
    |       |   |-CallExpr 0x135027a98 <line:9:17, col:41> 'int'
    |       |   | |-ImplicitCastExpr 0x135027a80 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       |   | | `-DeclRefExpr 0x1350279a8 <col:17> 'int ()' Function 0x1350278f0 'cli_dbgmsg' 'int ()'
    |       |   | |-ImplicitCastExpr 0x135027ac8 <col:28> 'char *' <ArrayToPointerDecay>
    |       |   | | `-StringLiteral 0x135027a10 <col:28> 'char[4]' lvalue "STR"
    |       |   | `-ImplicitCastExpr 0x135027ae0 <col:35, col:36> 'long' <LValueToRValue>
    |       |   |   `-UnaryOperator 0x135027a68 <col:35, col:36> 'long' lvalue prefix '*' cannot overflow
    |       |   |     `-ImplicitCastExpr 0x135027a50 <col:36> 'long *' <LValueToRValue>
    |       |   |       `-DeclRefExpr 0x135027a30 <col:36> 'long *' lvalue ParmVar 0x13500dda8 'value' 'long *'
    |       |   `-ReturnStmt 0x135027b30 <line:10:17, col:24>
    |       |     `-RecoveryExpr 0x135027b10 <col:24> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x135027bb8 <line:12:13, col:20>
    |         `-RecoveryExpr 0x135027b98 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x135027ca8 <line:15:5, col:21> 'int'
    | |-ImplicitCastExpr 0x135027c90 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x135027c50 <col:5> 'int ()' Function 0x1350278f0 'cli_dbgmsg' 'int ()'
    | `-ImplicitCastExpr 0x135027cd0 <col:16> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x135027c70 <col:16> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x135027d20 <line:16:5, col:12>
      `-RecoveryExpr 0x135027d00 <col:12> '<dependent type>' contains-errors lvalue
