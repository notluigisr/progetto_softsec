`-FunctionDecl 0x12b80dfe8  line:1:1 invalid mbc_case_fold 'int (int, const int **, const int *, int *)'
  |-ParmVarDecl 0x12b80dcf0 <col:15, col:32> col:32 invalid flag 'int'
  |-ParmVarDecl 0x12b80ddb0 <col:38, col:52> col:52 invalid pp 'const int **'
  |-ParmVarDecl 0x12b80de30 <line:2:8, col:21> col:21 invalid end 'const int *'
  |-ParmVarDecl 0x12b80dee8 <col:26, col:33> col:33 invalid fold 'int *'
  `-CompoundStmt 0x12b8278f0 <line:3:1, line:26:1>
    |-DeclStmt 0x12b80e180 <line:4:3, col:23>
    | `-VarDecl 0x12b80e0c8 <col:3, col:16> col:16 invalid p 'const int *'
    `-IfStmt 0x12b8278c0 <line:6:3, line:25:3> has_else
      |-CallExpr 0x12b80e330 <line:6:7, col:29> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x12b80e2f0 <col:7> 'int ()' Function 0x12b80e238 'ONIGENC_IS_MBC_ASCII' 'int ()'
      | `-RecoveryExpr 0x12b80e310 <col:28> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x12b827628 <col:32, line:21:3>
      | |-BinaryOperator 0x12b827550 <line:18:5, col:48> '<dependent type>' contains-errors '='
      | | |-UnaryOperator 0x12b80e390 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x12b80e378 <col:6> '<dependent type>' contains-errors <LValueToRValue>
      | | |   `-RecoveryExpr 0x12b80e358 <col:6> '<dependent type>' contains-errors lvalue
      | | `-CallExpr 0x12b827528 <col:13, col:48> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x12b8274b8 <col:13> 'int ()' Function 0x12b827400 'ONIGENC_ASCII_CODE_TO_LOWER_CASE' 'int ()'
      | |   `-UnaryOperator 0x12b827510 <col:46, col:47> '<dependent type>' contains-errors prefix '*' cannot overflow
      | |     `-ImplicitCastExpr 0x12b8274f8 <col:47> '<dependent type>' contains-errors <LValueToRValue>
      | |       `-RecoveryExpr 0x12b8274d8 <col:47> '<dependent type>' contains-errors lvalue
      | |-UnaryOperator 0x12b8275e0 <line:19:5, col:10> '<dependent type>' contains-errors postfix '++' cannot overflow
      | | `-ParenExpr 0x12b8275c0 <col:5, col:9> '<dependent type>' contains-errors
      | |   `-UnaryOperator 0x12b8275a8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
      | |     `-ImplicitCastExpr 0x12b827590 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      | |       `-RecoveryExpr 0x12b827570 <col:7> '<dependent type>' contains-errors lvalue
      | `-ReturnStmt 0x12b827618 <line:20:5, col:12>
      |   `-IntegerLiteral 0x12b8275f8 <col:12> 'int' 1
      `-CompoundStmt 0x12b8278a8 <line:22:8, line:25:3>
        `-ReturnStmt 0x12b827898 <line:23:5, line:24:20>
          `-CallExpr 0x12b827850 <line:23:12, line:24:20> '<dependent type>' contains-errors
            |-DeclRefExpr 0x12b827730 <line:23:12> 'int ()' Function 0x12b827678 'onigenc_unicode_mbc_case_fold' 'int ()'
            |-RecoveryExpr 0x12b827830 <col:42> '<dependent type>' contains-errors lvalue
            |-RecoveryExpr 0x12b827768 <col:62> '<dependent type>' contains-errors lvalue
            |-RecoveryExpr 0x12b827788 <line:24:7> '<dependent type>' contains-errors lvalue
            |-RecoveryExpr 0x12b8277a8 <col:11> '<dependent type>' contains-errors lvalue
            `-RecoveryExpr 0x12b8277c8 <col:16> '<dependent type>' contains-errors lvalue
