`-FunctionDecl 0x126942238  line:1:1 invalid accountingDiffTolerated 'int (int, int, const char *, const char *, int, enum XML_Account)'
  |-ParmVarDecl 0x1269288f0 <col:25, col:36> col:36 invalid originParser 'int'
  |-ParmVarDecl 0x126928970 <col:50, col:54> col:54 used tok 'int'
  |-ParmVarDecl 0x1269289f0 <col:59, col:71> col:71 used before 'const char *'
  |-ParmVarDecl 0x126928a70 <line:2:25, col:37> col:37 used after 'const char *'
  |-ParmVarDecl 0x126928af0 <col:44, col:48> col:48 used source_line 'int'
  |-ParmVarDecl 0x1269420b8 <line:3:25, col:42> col:42 invalid account 'enum XML_Account'
  `-CompoundStmt 0x127009800 <col:51, line:51:1>
    |-SwitchStmt 0x126942348 <line:5:3, line:11:3>
    | |-ImplicitCastExpr 0x126942330 <line:5:11> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126942310 <col:11> 'int' lvalue ParmVar 0x126928970 'tok' 'int'
    | `-CompoundStmt 0x126942418 <col:16, line:11:3>
    |   `-ReturnStmt 0x126942408 <line:10:5, col:12>
    |     `-RecoveryExpr 0x1269423e8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126942510 <line:13:3, line:14:12>
    | |-BinaryOperator 0x1269424a8 <line:13:7, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x126942430 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x126942488 <col:18> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x126942500 <line:14:5, col:12>
    |   `-RecoveryExpr 0x1269424e0 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1269425b0 <line:16:3, col:40>
    | `-VarDecl 0x126942548 <col:3, col:16> col:16 used levelsAwayFromRootParser 'unsigned int'
    |-DeclStmt 0x126942878 <line:17:3, line:18:65>
    | `-VarDecl 0x1269425e0 <line:17:3, col:20> col:20 invalid rootParser 'const int'
    |-CallExpr 0x126942a28 <line:19:3, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126942970 <col:3> 'int ()' Function 0x1269428b8 'assert' 'int ()'
    | `-UnaryOperator 0x126942a10 <col:10, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x1269429f8 <col:12, col:24> '<dependent type>' contains-errors <LValueToRValue>
    |     `-CXXDependentScopeMemberExpr 0x1269429b0 <col:12, col:24> '<dependent type>' contains-errors lvalue ->m_parentParser
    |       `-RecoveryExpr 0x126942990 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126942ba8 <line:21:3, line:22:72>
    | `-VarDecl 0x126942a68 <line:21:3, col:13> col:13 isDirect 'const int'
    |-DeclStmt 0x126942cd0 <line:23:3, col:45>
    | `-VarDecl 0x126942bd8 <col:3, col:19> col:19 invalid bytesMore 'const int'
    |-DeclStmt 0x126942fd8 <line:34:3, line:36:54>
    | `-VarDecl 0x126942df0 <line:34:3, col:21> col:21 invalid countBytesOutput 'const int'
    |-DeclStmt 0x127008fc8 <line:37:3, line:38:54>
    | `-VarDecl 0x127008e18 <line:37:3, line:38:53> line:37:15 used amplificationFactor 'const float' cinit
    |   `-CallExpr 0x127008fa0 <line:38:9, col:53> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127008f60 <col:9> 'int ()' Function 0x127008ea8 'accountingGetCurrentAmplification' 'int ()'
    |     `-RecoveryExpr 0x127008f80 <col:43> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1270092a0 <line:39:3, line:42:68>
    | `-VarDecl 0x127008ff8 <line:39:3, col:18> col:18 invalid tolerated 'const int'
    |-IfStmt 0x1270097b0 <line:44:3, line:48:3>
    | |-BinaryOperator 0x127009388 <line:44:7, col:46> 'int' contains-errors '>='
    | | |-CXXDependentScopeMemberExpr 0x127009320 <col:7, col:32> '<dependent type>' contains-errors lvalue .debugLevel
    | | | `-CXXDependentScopeMemberExpr 0x1270092d8 <col:7, col:19> '<dependent type>' contains-errors lvalue ->m_accounting
    | | |   `-RecoveryExpr 0x1270092b8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x127009368 <col:46> 'int' 2
    | `-CompoundStmt 0x127009790 <col:49, line:48:3>
    |   |-CallExpr 0x127009528 <line:45:5, col:41> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x127009488 <col:5> 'int ()' Function 0x1270093d0 'accountingReportStats' 'int ()'
    |   | |-RecoveryExpr 0x1270094a8 <col:27> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x127009510 <col:39> 'char[1]' lvalue ""
    |   `-CallExpr 0x127009738 <line:46:5, line:47:57> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x127009638 <line:46:5> 'int ()' Function 0x127009580 'accountingReportDiff' 'int ()'
    |     |-RecoveryExpr 0x127009658 <col:26> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x127009678 <col:38> 'unsigned int' lvalue Var 0x126942548 'levelsAwayFromRootParser' 'unsigned int'
    |     |-DeclRefExpr 0x127009698 <col:64> 'const char *' lvalue ParmVar 0x1269289f0 'before' 'const char *'
    |     |-DeclRefExpr 0x1270096b8 <col:72> 'const char *' lvalue ParmVar 0x126928a70 'after' 'const char *'
    |     |-RecoveryExpr 0x1270096d8 <line:47:26> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x1270096f8 <col:37> 'int' lvalue ParmVar 0x126928af0 'source_line' 'int'
    |     `-RecoveryExpr 0x127009718 <col:50> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1270097f0 <line:50:3, col:10>
      `-RecoveryExpr 0x1270097d0 <col:10> '<dependent type>' contains-errors lvalue
