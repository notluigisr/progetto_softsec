`-FunctionDecl 0x12c128288  line:1:5 invalid clientSetNameOrReply 'int (int *, int *)'
  |-ParmVarDecl 0x12c128128 <col:26, col:34> col:34 referenced invalid c 'int *'
  |-ParmVarDecl 0x12c1281a8 <col:37, col:43> col:43 invalid name 'int *'
  `-CompoundStmt 0x12c1424d8 <col:49, line:25:1>
    |-DeclStmt 0x12c1285d0 <line:2:5, col:32>
    | `-VarDecl 0x12c128358 <col:5, col:31> col:9 used len 'int' cinit
    |   `-CallExpr 0x12c1285a8 <col:15, col:31> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c128520 <col:15> 'int ()' Function 0x12c128468 'sdslen' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x12c128560 <col:22, col:28> '<dependent type>' contains-errors lvalue ->ptr
    |       `-RecoveryExpr 0x12c128540 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12c1286d0 <line:3:5, col:24>
    | `-VarDecl 0x12c128600 <col:5, col:21> col:11 used p 'char *' cinit
    |   `-CXXDependentScopeMemberExpr 0x12c128688 <col:15, col:21> '<dependent type>' contains-errors lvalue ->ptr
    |     `-RecoveryExpr 0x12c128668 <col:15> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c141b00 <line:6:5, line:10:5>
    | |-BinaryOperator 0x12c128740 <line:6:9, col:16> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x12c128728 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x12c1286e8 <col:9> 'int' contains-errors lvalue Var 0x12c128358 'len' 'int'
    | | `-IntegerLiteral 0x12c128708 <col:16> 'int' 0
    | `-CompoundStmt 0x12c141ad8 <col:19, line:10:5>
    |   |-IfStmt 0x12c141968 <line:7:9, col:42>
    |   | |-CXXDependentScopeMemberExpr 0x12c128780 <col:13, col:16> '<dependent type>' contains-errors lvalue ->name
    |   | | `-RecoveryExpr 0x12c128760 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x12c141940 <col:22, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12c1418b8 <col:22> 'int ()' Function 0x12c141800 'decrRefCount' 'int ()'
    |   |   `-CXXDependentScopeMemberExpr 0x12c1418f8 <col:35, col:38> '<dependent type>' contains-errors lvalue ->name
    |   |     `-RecoveryExpr 0x12c1418d8 <col:35> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12c141a70 <line:8:9, col:19> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c1419d0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->name
    |   | | `-RecoveryExpr 0x12c1419a8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c141988 <col:9> 'int *' lvalue ParmVar 0x12c128128 'c' 'int *'
    |   | `-RecoveryExpr 0x12c141a50 <col:19> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12c141ac8 <line:9:9, col:16>
    |     `-RecoveryExpr 0x12c141aa8 <col:16> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x12c142108 <line:13:5, line:20:5>
    | |-DeclStmt 0x12c141bc0 <line:13:10, col:19>
    | | `-VarDecl 0x12c141b38 <col:10, col:18> col:14 used j 'int' cinit
    | |   `-IntegerLiteral 0x12c141ba0 <col:18> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c141c48 <col:21, col:25> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x12c141c18 <col:21> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c141bd8 <col:21> 'int' lvalue Var 0x12c141b38 'j' 'int'
    | | `-ImplicitCastExpr 0x12c141c30 <col:25> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12c141bf8 <col:25> 'int' contains-errors lvalue Var 0x12c128358 'len' 'int'
    | |-UnaryOperator 0x12c141c88 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x12c141c68 <col:30> 'int' lvalue Var 0x12c141b38 'j' 'int'
    | `-CompoundStmt 0x12c1420f0 <col:35, line:20:5>
    |   `-IfStmt 0x12c1420d0 <line:14:9, line:19:9>
    |     |-BinaryOperator 0x12c141e90 <line:14:13, col:34> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x12c141d78 <col:13, col:20> 'int' contains-errors '<'
    |     | | |-ImplicitCastExpr 0x12c141d60 <col:13, col:16> 'int' contains-errors <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x12c141d48 <col:13, col:16> 'char' contains-errors <LValueToRValue>
    |     | | |   `-ArraySubscriptExpr 0x12c141d10 <col:13, col:16> 'char' contains-errors lvalue
    |     | | |     |-ImplicitCastExpr 0x12c141ce0 <col:13> 'char *' contains-errors <LValueToRValue>
    |     | | |     | `-DeclRefExpr 0x12c141ca0 <col:13> 'char *' contains-errors lvalue Var 0x12c128600 'p' 'char *'
    |     | | |     `-ImplicitCastExpr 0x12c141cf8 <col:15> 'int' <LValueToRValue>
    |     | | |       `-DeclRefExpr 0x12c141cc0 <col:15> 'int' lvalue Var 0x12c141b38 'j' 'int'
    |     | | `-CharacterLiteral 0x12c141d30 <col:20> 'int' 33
    |     | `-BinaryOperator 0x12c141e70 <col:27, col:34> 'int' contains-errors '>'
    |     |   |-ImplicitCastExpr 0x12c141e58 <col:27, col:30> 'int' contains-errors <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x12c141e40 <col:27, col:30> 'char' contains-errors <LValueToRValue>
    |     |   |   `-ArraySubscriptExpr 0x12c141e08 <col:27, col:30> 'char' contains-errors lvalue
    |     |   |     |-ImplicitCastExpr 0x12c141dd8 <col:27> 'char *' contains-errors <LValueToRValue>
    |     |   |     | `-DeclRefExpr 0x12c141d98 <col:27> 'char *' contains-errors lvalue Var 0x12c128600 'p' 'char *'
    |     |   |     `-ImplicitCastExpr 0x12c141df0 <col:29> 'int' <LValueToRValue>
    |     |   |       `-DeclRefExpr 0x12c141db8 <col:29> 'int' lvalue Var 0x12c141b38 'j' 'int'
    |     |   `-CharacterLiteral 0x12c141e28 <col:34> 'int' 126
    |     `-CompoundStmt 0x12c1420b0 <col:39, line:19:9>
    |       |-CallExpr 0x12c142038 <line:15:13, line:17:22> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12c141f90 <line:15:13> 'int ()' Function 0x12c141ed8 'addReplyError' 'int ()'
    |       | |-RecoveryExpr 0x12c141fb0 <col:27> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x12c142010 <line:16:17, line:17:17> 'char[7]' lvalue "STRSTR"
    |       `-ReturnStmt 0x12c1420a0 <line:18:13, col:20>
    |         `-RecoveryExpr 0x12c142080 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c142258 <line:21:5, col:38>
    | |-CXXDependentScopeMemberExpr 0x12c142160 <col:9, col:12> '<dependent type>' contains-errors lvalue ->name
    | | `-RecoveryExpr 0x12c142140 <col:9> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12c142230 <col:18, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c1421a8 <col:18> 'int ()' Function 0x12c141800 'decrRefCount' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12c1421e8 <col:31, col:34> '<dependent type>' contains-errors lvalue ->name
    |     `-RecoveryExpr 0x12c1421c8 <col:31> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c142328 <line:22:5, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12c1422c0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->name
    | | `-RecoveryExpr 0x12c142298 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c142278 <col:5> 'int *' lvalue ParmVar 0x12c128128 'c' 'int *'
    | `-RecoveryExpr 0x12c142308 <col:15> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c142468 <line:23:5, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c142428 <col:5> 'int ()' Function 0x12c142370 'incrRefCount' 'int ()'
    | `-RecoveryExpr 0x12c142448 <col:18> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12c1424c8 <line:24:5, col:12>
      `-RecoveryExpr 0x12c1424a8 <col:12> '<dependent type>' contains-errors lvalue
