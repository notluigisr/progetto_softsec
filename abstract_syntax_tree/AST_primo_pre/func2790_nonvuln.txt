`-FunctionDecl 0x159928318  line:1:1 invalid memxor 'int (void *, const void *, int)'
  |-ParmVarDecl 0x1599280d8 <col:8, col:14> col:14 used dst_in 'void *'
  |-ParmVarDecl 0x159928188 <col:22, col:34> col:34 used src_in 'const void *'
  |-ParmVarDecl 0x159928220 <col:42, col:49> col:49 referenced invalid n 'int'
  `-CompoundStmt 0x1599435f0 <line:2:1, line:34:1>
    |-DeclStmt 0x1599284e0 <line:3:3, col:30>
    | `-VarDecl 0x159928428 <col:3, col:24> col:18 used dst 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x1599284c8 <col:24> 'unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x1599284b0 <col:24> 'void *' <LValueToRValue>
    |       `-DeclRefExpr 0x159928490 <col:24> 'void *' lvalue ParmVar 0x1599280d8 'dst_in' 'void *'
    |-DeclStmt 0x159928600 <line:4:3, col:36>
    | `-VarDecl 0x159928548 <col:3, col:30> col:24 used src 'const unsigned char *' cinit
    |   `-ImplicitCastExpr 0x1599285e8 <col:30> 'const unsigned char *' <BitCast>
    |     `-ImplicitCastExpr 0x1599285d0 <col:30> 'const void *' <LValueToRValue>
    |       `-DeclRefExpr 0x1599285b0 <col:30> 'const void *' lvalue ParmVar 0x159928188 'src_in' 'const void *'
    |-IfStmt 0x1599422e8 <line:6:3, line:26:5>
    | |-BinaryOperator 0x159928690 <line:6:7, col:12> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x159928618 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x159928670 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1599422b0 <line:7:5, line:26:5>
    |   |-DeclStmt 0x159928730 <line:8:7, col:17>
    |   | `-VarDecl 0x1599286c8 <col:7, col:16> col:16 used i 'unsigned int'
    |   |-DeclStmt 0x1599287c8 <line:9:7, col:22>
    |   | `-VarDecl 0x159928760 <col:7, col:16> col:16 used offset 'unsigned int'
    |   |-UnaryExprOrTypeTraitExpr 0x159941840 <line:10:7, col:14> 'unsigned long' contains-errors sizeof
    |   | `-RecoveryExpr 0x159941820 <col:14> '<dependent type>' contains-errors lvalue
    |   |-ForStmt 0x159941d40 <line:12:7, line:16:2>
    |   | |-BinaryOperator 0x159941a88 <line:12:12, col:36> 'unsigned int' contains-errors '='
    |   | | |-DeclRefExpr 0x159941860 <col:12> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'
    |   | | `-CallExpr 0x159941a60 <col:16, col:36> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x1599419e0 <col:16> 'int ()' Function 0x159941928 'ALIGN_OFFSET' 'int ()'
    |   | |   `-BinaryOperator 0x159941a40 <col:29, col:35> '<dependent type>' contains-errors '+'
    |   | |     |-DeclRefExpr 0x159941a00 <col:29> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'
    |   | |     `-RecoveryExpr 0x159941a20 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x159941b18 <col:39, col:43> 'int' '>'
    |   | | |-ImplicitCastExpr 0x159941ae8 <col:39> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x159941aa8 <col:39> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x159941b00 <col:43> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x159941ac8 <col:43> 'int' 0
    |   | |-UnaryOperator 0x159941b58 <col:46, col:47> 'unsigned int' postfix '--'
    |   | | `-DeclRefExpr 0x159941b38 <col:46> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'
    |   | `-CompoundStmt 0x159941d20 <line:13:2, line:16:2>
    |   |   |-UnaryOperator 0x159941bb8 <line:14:4, col:5> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   |   | `-RecoveryExpr 0x159941b90 <col:4> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x159941b70 <col:4> 'int' lvalue ParmVar 0x159928220 'n' 'int'
    |   |   `-CompoundAssignOperator 0x159941cf0 <line:15:4, col:19> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |     |-ArraySubscriptExpr 0x159941c40 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |     | |-ImplicitCastExpr 0x159941c10 <col:4> 'unsigned char *' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x159941bd0 <col:4> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'
    |   |     | `-ImplicitCastExpr 0x159941c28 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x159941bf0 <col:8> '<dependent type>' contains-errors lvalue
    |   |     `-ArraySubscriptExpr 0x159941cd0 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x159941ca0 <col:14> 'const unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x159941c60 <col:14> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'
    |   |       `-ImplicitCastExpr 0x159941cb8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x159941c80 <col:18> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x159941e40 <line:17:7, col:36> 'unsigned int' contains-errors '='
    |     |-DeclRefExpr 0x159941d78 <col:7> 'unsigned int' lvalue Var 0x159928760 'offset' 'unsigned int'
    |     `-CallExpr 0x159941e18 <col:16, col:36> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x159941d98 <col:16> 'int ()' Function 0x159941928 'ALIGN_OFFSET' 'int ()'
    |       `-BinaryOperator 0x159941df8 <col:29, col:35> '<dependent type>' contains-errors '+'
    |         |-DeclRefExpr 0x159941db8 <col:29> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'
    |         `-RecoveryExpr 0x159941dd8 <col:35> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x159942538 <line:27:3, line:31:5>
    | |-BinaryOperator 0x159942348 <line:27:10, col:14> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x159942308 <col:10> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x159942328 <col:14> 'int' 0
    | `-CompoundStmt 0x159942518 <line:28:5, line:31:5>
    |   |-UnaryOperator 0x1599423b0 <line:29:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   | `-RecoveryExpr 0x159942388 <col:7> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x159942368 <col:7> 'int' lvalue ParmVar 0x159928220 'n' 'int'
    |   `-CompoundAssignOperator 0x1599424e8 <line:30:7, col:22> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-ArraySubscriptExpr 0x159942438 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x159942408 <col:7> 'unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1599423c8 <col:7> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'
    |     | `-ImplicitCastExpr 0x159942420 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x1599423e8 <col:11> '<dependent type>' contains-errors lvalue
    |     `-ArraySubscriptExpr 0x1599424c8 <col:17, col:22> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x159942498 <col:17> 'const unsigned char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x159942458 <col:17> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'
    |       `-ImplicitCastExpr 0x1599424b0 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x159942478 <col:21> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1599435e0 <line:33:3, col:10>
      `-ImplicitCastExpr 0x159942590 <col:10> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x159942578 <col:10> 'unsigned char *' <LValueToRValue>
          `-DeclRefExpr 0x159942558 <col:10> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'
