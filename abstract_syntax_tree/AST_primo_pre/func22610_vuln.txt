`-FunctionDecl 0x15780dda8  line:1:8 PHP_FUNCTION 'int (int)' static
  |-ParmVarDecl 0x15780dcd8 <col:21> col:21 session_id 'int'
  `-CompoundStmt 0x157827f88 <line:2:1, line:22:1>
    |-DeclStmt 0x15780df70 <line:3:2, col:19>
    | `-VarDecl 0x15780deb8 <col:2, col:15> col:8 used name 'char *' cinit
    |   `-RecoveryExpr 0x15780df50 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15780e008 <line:4:2, col:14>
    | `-VarDecl 0x15780dfa0 <col:2, col:6> col:6 used name_len 'int'
    |-IfStmt 0x15780e318 <line:6:2, line:8:2>
    | |-RecoveryExpr 0x15780e2d0 <line:6:6, col:83> '_Bool' contains-errors
    | `-CompoundStmt 0x15780e300 <col:92, line:8:2>
    |   `-ReturnStmt 0x15780e2f0 <line:7:3>
    |-IfStmt 0x1578278f0 <line:10:2, line:14:2> has_else
    | |-CallExpr 0x157827538 <line:10:6, col:11> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1578274b8 <col:6> 'int ()' Function 0x157827400 'PS' 'int ()'
    | | `-RecoveryExpr 0x157827518 <col:9> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x157827788 <col:14, line:12:2>
    | | `-CallExpr 0x157827758 <line:11:3, col:26> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x157827640 <col:3> 'int ()' Function 0x157827588 'RETVAL_STRING' 'int ()'
    | |   |-CallExpr 0x157827730 <col:17, col:22> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x157827660 <col:17> 'int ()' Function 0x157827400 'PS' 'int ()'
    | |   | `-RecoveryExpr 0x157827710 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1578276c0 <col:25> 'int' 1
    | `-CompoundStmt 0x1578278d8 <line:12:9, line:14:2>
    |   `-CallExpr 0x1578278b8 <line:13:3, col:23> 'int'
    |     `-ImplicitCastExpr 0x1578278a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x157827880 <col:3> 'int ()' Function 0x1578277c8 'RETVAL_EMPTY_STRING' 'int ()'
    `-IfStmt 0x157827f68 <line:16:2, line:21:2>
      |-ImplicitCastExpr 0x157827940 <line:16:6> 'char *' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x157827920 <col:6> 'char *' contains-errors lvalue Var 0x15780deb8 'name' 'char *'
      `-CompoundStmt 0x157827f48 <col:12, line:21:2>
        |-IfStmt 0x157827c10 <line:17:3, line:19:3>
        | |-CallExpr 0x1578279d8 <line:17:7, col:12> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x157827958 <col:7> 'int ()' Function 0x157827400 'PS' 'int ()'
        | | `-RecoveryExpr 0x1578279b8 <col:10> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x157827bf8 <col:15, line:19:3>
        |   `-CallExpr 0x157827bd0 <line:18:4, col:16> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x157827ae0 <col:4> 'int ()' Function 0x157827a28 'efree' 'int ()'
        |     `-CallExpr 0x157827ba8 <col:10, col:15> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x157827b00 <col:10> 'int ()' Function 0x157827400 'PS' 'int ()'
        |       `-RecoveryExpr 0x157827b88 <col:13> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x157827f28 <line:20:3, col:35> '<dependent type>' contains-errors '='
          |-CallExpr 0x157827e88 <col:3, col:8> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x157827c30 <col:3> 'int ()' Function 0x157827400 'PS' 'int ()'
          | `-RecoveryExpr 0x157827e68 <col:6> '<dependent type>' contains-errors lvalue
          `-CallExpr 0x157827ec8 <col:12, col:35> 'int' contains-errors
            |-ImplicitCastExpr 0x157827eb0 <col:12> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x157827d70 <col:12> 'int ()' Function 0x157827cb8 'estrndup' 'int ()'
            |-ImplicitCastExpr 0x157827ef8 <col:21> 'char *' contains-errors <LValueToRValue>
            | `-DeclRefExpr 0x157827d90 <col:21> 'char *' contains-errors lvalue Var 0x15780deb8 'name' 'char *'
            `-ImplicitCastExpr 0x157827f10 <col:27> 'int' <LValueToRValue>
              `-DeclRefExpr 0x157827db0 <col:27> 'int' lvalue Var 0x15780dfa0 'name_len' 'int'
