`-FunctionDecl 0x14f02b8b8  line:1:12 invalid __jfs_set_acl 'int (int, struct inode *, int, struct posix_acl *)' static
  |-ParmVarDecl 0x14f00dcf0 <col:26, col:32> col:32 invalid tid 'int'
  |-ParmVarDecl 0x14f00e2e8 <col:37, col:51> col:51 used inode 'struct inode *'
  |-ParmVarDecl 0x14f00e368 <col:58, col:62> col:62 used type 'int'
  |-ParmVarDecl 0x14f02b768 <line:2:10, col:28> col:28 used acl 'struct posix_acl *'
  `-CompoundStmt 0x14f02ca98 <line:3:1, line:46:1>
    |-DeclStmt 0x14f02ba00 <line:4:2, col:15>
    | `-VarDecl 0x14f02b998 <col:2, col:8> col:8 used ea_name 'char *'
    |-DeclStmt 0x14f02ba98 <line:5:2, col:8>
    | `-VarDecl 0x14f02ba30 <col:2, col:6> col:6 used rc 'int'
    |-DeclStmt 0x14f02bb50 <line:6:2, col:14>
    | `-VarDecl 0x14f02bac8 <col:2, col:13> col:6 used size 'int' cinit
    |   `-IntegerLiteral 0x14f02bb30 <col:13> 'int' 0
    |-DeclStmt 0x14f02bc20 <line:7:2, col:20>
    | `-VarDecl 0x14f02bb80 <col:2, col:16> col:8 used value 'char *' cinit
    |   `-RecoveryExpr 0x14f02bc00 <col:16> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x14f02bc70 <line:9:2, line:27:2>
    | |-ImplicitCastExpr 0x14f02bc58 <line:9:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f02bc38 <col:10> 'int' lvalue ParmVar 0x14f00e368 'type' 'int'
    | `-CompoundStmt 0x158808880 <col:16, line:27:2>
    |   |-BinaryOperator 0x14f02bd28 <line:11:3, col:13> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x14f02bcb0 <col:3> 'char *' lvalue Var 0x14f02b998 'ea_name' 'char *'
    |   | `-RecoveryExpr 0x14f02bd08 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14f02c4d0 <line:12:3, line:20:3>
    |   | |-ImplicitCastExpr 0x14f02bd68 <line:12:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14f02bd48 <col:7> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x14f02c498 <col:12, line:20:3>
    |   |   |-BinaryOperator 0x14f02bfe8 <line:13:4, col:49> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x14f02bd80 <col:4> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |   |   | `-CallExpr 0x14f02bfb8 <col:9, col:49> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x14f02bf00 <col:9> 'int ()' Function 0x14f02be48 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-DeclRefExpr 0x14f02bf20 <col:30> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x14f02bfa0 <col:35, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x14f02bf78 <col:36, col:43> '<dependent type>' contains-errors lvalue
    |   |   |       `-DeclRefExpr 0x14f02bf40 <col:36> 'struct inode *' lvalue ParmVar 0x14f00e2e8 'inode' 'struct inode *'
    |   |   |-IfStmt 0x14f02c0c8 <line:14:4, line:15:12>
    |   |   | |-BinaryOperator 0x14f02c060 <line:14:8, col:13> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x14f02c048 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x14f02c008 <col:8> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |   |   | | `-IntegerLiteral 0x14f02c028 <col:13> 'int' 0
    |   |   | `-ReturnStmt 0x14f02c0b8 <line:15:5, col:12>
    |   |   |   `-ImplicitCastExpr 0x14f02c0a0 <col:12> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x14f02c080 <col:12> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |   |   |-BinaryOperator 0x14f02c1a0 <line:16:4, col:21> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x14f02c120 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x14f02c0e8 <col:4> 'struct inode *' lvalue ParmVar 0x14f00e2e8 'inode' 'struct inode *'
    |   |   | `-RecoveryExpr 0x14f02c180 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x14f02c328 <line:17:4, col:26> 'int'
    |   |   | |-ImplicitCastExpr 0x14f02c310 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14f02c2a0 <col:4> 'int ()' Function 0x14f02c1e8 'mark_inode_dirty' 'int ()'
    |   |   | `-ImplicitCastExpr 0x14f02c350 <col:21> 'struct inode *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14f02c2c0 <col:21> 'struct inode *' lvalue ParmVar 0x14f00e2e8 'inode' 'struct inode *'
    |   |   `-IfStmt 0x14f02c478 <line:18:4, line:19:11>
    |   |     |-BinaryOperator 0x14f02c3c0 <line:18:8, col:14> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x14f02c3a8 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x14f02c368 <col:8> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |   |     | `-IntegerLiteral 0x14f02c388 <col:14> 'int' 0
    |   |     `-BinaryOperator 0x14f02c458 <line:19:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x14f02c3e0 <col:5> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x14f02c438 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f02c4f0 <line:21:3>
    |   |-BinaryOperator 0x14f02c588 <line:23:3, col:13> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x14f02c510 <col:3> 'char *' lvalue Var 0x14f02b998 'ea_name' 'char *'
    |   | `-RecoveryExpr 0x14f02c568 <col:13> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f02c5a8 <line:24:3>
    |   `-DefaultStmt 0x158808860 <line:25:2, line:26:11>
    |     `-ReturnStmt 0x158808850 <col:3, col:11>
    |       `-UnaryOperator 0x158808838 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x158808820 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x158808800 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1588091d0 <line:29:2, line:37:2>
    | |-ImplicitCastExpr 0x1588088e0 <line:29:6> 'struct posix_acl *' <LValueToRValue>
    | | `-DeclRefExpr 0x1588088c0 <col:6> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    | `-CompoundStmt 0x158809198 <col:11, line:37:2>
    |   |-BinaryOperator 0x158808aa0 <line:30:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1588088f8 <col:3> 'int' lvalue Var 0x14f02bac8 'size' 'int'
    |   | `-CallExpr 0x158808a78 <col:10, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1588089f8 <col:10> 'int ()' Function 0x158808940 'posix_acl_xattr_size' 'int ()'
    |   |   `-RecoveryExpr 0x158808a50 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x158808a18 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    |   |-BinaryOperator 0x158808cb8 <line:31:3, col:35> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x158808ac0 <col:3> 'char *' contains-errors lvalue Var 0x14f02bb80 'value' 'char *'
    |   | `-CallExpr 0x158808c88 <col:11, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x158808bc0 <col:11> 'int ()' Function 0x158808b08 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x158808be0 <col:19> 'int' lvalue Var 0x14f02bac8 'size' 'int'
    |   |   `-RecoveryExpr 0x158808c68 <col:25> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x158808dd0 <line:32:3, line:33:12>
    |   | |-UnaryOperator 0x158808d10 <line:32:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x158808cf8 <col:8> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x158808cd8 <col:8> 'char *' contains-errors lvalue Var 0x14f02bb80 'value' 'char *'
    |   | `-ReturnStmt 0x158808dc0 <line:33:4, col:12>
    |   |   `-UnaryOperator 0x158808da8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x158808d90 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x158808d70 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x158809078 <line:34:3, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x158808df0 <col:3> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |   | `-CallExpr 0x158809038 <col:8, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x158808ef0 <col:8> 'int ()' Function 0x158808e38 'posix_acl_to_xattr' 'int ()'
    |   |   |-UnaryOperator 0x158809020 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x158809000 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x158808f40 <col:42> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    |   |   |-DeclRefExpr 0x158808f60 <col:47> 'char *' contains-errors lvalue Var 0x14f02bb80 'value' 'char *'
    |   |   `-DeclRefExpr 0x158808f80 <col:54> 'int' lvalue Var 0x14f02bac8 'size' 'int'
    |   `-IfStmt 0x158809178 <line:35:3, line:36:9>
    |     |-BinaryOperator 0x1588090f0 <line:35:7, col:12> 'int' '<'
    |     | |-ImplicitCastExpr 0x1588090d8 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x158809098 <col:7> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    |     | `-IntegerLiteral 0x1588090b8 <col:12> 'int' 0
    |     `-GotoStmt 0x158809160 <line:36:4, col:9> 'out' 0x158809110
    |-BinaryOperator 0x158809420 <line:38:2, col:57> 'int' contains-errors '='
    | |-DeclRefExpr 0x1588091f0 <col:2> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    | `-CallExpr 0x1588093d0 <col:7, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1588092f0 <col:7> 'int ()' Function 0x158809238 '__jfs_setxattr' 'int ()'
    |   |-RecoveryExpr 0x158809310 <col:22> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x158809330 <col:27> 'struct inode *' lvalue ParmVar 0x14f00e2e8 'inode' 'struct inode *'
    |   |-DeclRefExpr 0x158809350 <col:34> 'char *' lvalue Var 0x14f02b998 'ea_name' 'char *'
    |   |-DeclRefExpr 0x158809370 <col:43> 'char *' contains-errors lvalue Var 0x14f02bb80 'value' 'char *'
    |   |-DeclRefExpr 0x158809390 <col:50> 'int' lvalue Var 0x14f02bac8 'size' 'int'
    |   `-IntegerLiteral 0x1588093b0 <col:56> 'int' 0
    |-LabelStmt 0x1588095b8 <line:39:1, line:40:13> 'out'
    | `-CallExpr 0x158809578 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x158809560 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x158809520 <col:2> 'int ()' Function 0x158809468 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x1588095a0 <col:8> 'char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x158809540 <col:8> 'char *' contains-errors lvalue Var 0x14f02bb80 'value' 'char *'
    |-IfStmt 0x14f02ca30 <line:42:2, line:43:34>
    | |-UnaryOperator 0x158809610 <line:42:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1588095f8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1588095d8 <col:7> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
    | `-CallExpr 0x1588097a0 <line:43:3, col:34> 'int'
    |   |-ImplicitCastExpr 0x158809788 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x158809708 <col:3> 'int ()' Function 0x158809650 'set_cached_acl' 'int ()'
    |   |-ImplicitCastExpr 0x1588097d8 <col:18> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x158809728 <col:18> 'struct inode *' lvalue ParmVar 0x14f00e2e8 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x14f02ca00 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x158809748 <col:25> 'int' lvalue ParmVar 0x14f00e368 'type' 'int'
    |   `-ImplicitCastExpr 0x14f02ca18 <col:31> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x158809768 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14f02b768 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x14f02ca88 <line:45:2, col:9>
      `-ImplicitCastExpr 0x14f02ca70 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f02ca50 <col:9> 'int' lvalue Var 0x14f02ba30 'rc' 'int'
