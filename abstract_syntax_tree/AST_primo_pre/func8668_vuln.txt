`-FunctionDecl 0x11f80de88  line:1:18 invalid checkPassword 'int *(int *, int *)' static
  |-ParmVarDecl 0x11f80dd28 <col:32, col:42> col:42 invalid self 'int *'
  |-ParmVarDecl 0x11f80dda8 <col:48, col:58> col:58 invalid args 'int *'
  `-CompoundStmt 0x11f827ca8 <line:2:1, line:18:1>
    |-DeclStmt 0x11f80dff8 <line:3:5, col:28>
    | `-VarDecl 0x11f80df58 <col:5, col:24> col:17 used user 'const char *' cinit
    |   `-RecoveryExpr 0x11f80dfd8 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11f80e0c8 <line:4:5, col:28>
    | `-VarDecl 0x11f80e028 <col:5, col:24> col:17 used pswd 'const char *' cinit
    |   `-RecoveryExpr 0x11f80e0a8 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11f80e198 <line:5:5, col:31>
    | `-VarDecl 0x11f80e0f8 <col:5, col:27> col:17 used service 'const char *' cinit
    |   `-RecoveryExpr 0x11f80e178 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11f80e268 <line:6:5, col:37>
    | `-VarDecl 0x11f80e1c8 <col:5, col:33> col:17 used default_realm 'const char *' cinit
    |   `-RecoveryExpr 0x11f80e248 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11f80e320 <line:7:5, col:19>
    | `-VarDecl 0x11f80e298 <col:5, col:18> col:9 used result 'int' cinit
    |   `-IntegerLiteral 0x11f80e300 <col:18> 'int' 0
    |-IfStmt 0x11f827720 <line:9:5, line:10:16>
    | |-UnaryOperator 0x11f8276c0 <line:9:9, col:78> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x11f827670 <col:10, col:78> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x11f8274b8 <col:10> 'int ()' Function 0x11f827400 'PyArg_ParseTuple' 'int ()'
    | |   |-RecoveryExpr 0x11f8274d8 <col:27> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x11f827540 <col:33> 'char[4]' lvalue "STR"
    | |   |-UnaryOperator 0x11f8275b0 <col:40, col:41> 'const char **' contains-errors prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x11f827560 <col:41> 'const char *' contains-errors lvalue Var 0x11f80df58 'user' 'const char *'
    | |   |-UnaryOperator 0x11f8275e8 <col:47, col:48> 'const char **' contains-errors prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x11f8275c8 <col:48> 'const char *' contains-errors lvalue Var 0x11f80e028 'pswd' 'const char *'
    | |   |-UnaryOperator 0x11f827620 <col:54, col:55> 'const char **' contains-errors prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x11f827600 <col:55> 'const char *' contains-errors lvalue Var 0x11f80e0f8 'service' 'const char *'
    | |   `-UnaryOperator 0x11f827658 <col:64, col:65> 'const char **' contains-errors prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x11f827638 <col:65> 'const char *' contains-errors lvalue Var 0x11f80e1c8 'default_realm' 'const char *'
    | `-ReturnStmt 0x11f827710 <line:10:9, col:16>
    |   `-RecoveryExpr 0x11f8276f0 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11f8279c8 <line:12:5, col:74> 'int' contains-errors '='
    | |-DeclRefExpr 0x11f827740 <col:5> 'int' lvalue Var 0x11f80e298 'result' 'int'
    | `-CallExpr 0x11f827928 <col:14, col:74> 'int' contains-errors
    |   |-ImplicitCastExpr 0x11f827910 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f827840 <col:14> 'int ()' Function 0x11f827788 'authenticate_user_krb5pwd' 'int ()'
    |   |-ImplicitCastExpr 0x11f827968 <col:40> 'const char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11f827860 <col:40> 'const char *' contains-errors lvalue Var 0x11f80df58 'user' 'const char *'
    |   |-ImplicitCastExpr 0x11f827980 <col:46> 'const char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11f827880 <col:46> 'const char *' contains-errors lvalue Var 0x11f80e028 'pswd' 'const char *'
    |   |-ImplicitCastExpr 0x11f827998 <col:52> 'const char *' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11f8278a0 <col:52> 'const char *' contains-errors lvalue Var 0x11f80e0f8 'service' 'const char *'
    |   `-ImplicitCastExpr 0x11f8279b0 <col:61> 'const char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x11f8278c0 <col:61> 'const char *' contains-errors lvalue Var 0x11f80e1c8 'default_realm' 'const char *'
    `-IfStmt 0x11f827c78 <line:14:5, line:17:16> has_else
      |-ImplicitCastExpr 0x11f827a08 <line:14:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x11f8279e8 <col:9> 'int' lvalue Var 0x11f80e298 'result' 'int'
      |-ReturnStmt 0x11f827c20 <line:15:9, col:36>
      | `-BinaryOperator 0x11f827c00 <col:16, col:36> '<dependent type>' contains-errors ','
      |   |-CallExpr 0x11f827bb8 <col:16, col:33> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x11f827b00 <col:16> 'int ()' Function 0x11f827a48 'Py_INCREF' 'int ()'
      |   | `-RecoveryExpr 0x11f827b98 <col:26> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x11f827be0 <col:36> '<dependent type>' contains-errors lvalue
      `-ReturnStmt 0x11f827c68 <line:17:9, col:16>
        `-RecoveryExpr 0x11f827c48 <col:16> '<dependent type>' contains-errors lvalue
