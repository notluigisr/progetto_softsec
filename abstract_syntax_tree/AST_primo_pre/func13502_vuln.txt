`-FunctionDecl 0x13200ddf8  line:1:1 referenced invalid zsetstrokecolorspace 'int (int *)'
  |-ParmVarDecl 0x13200dd28 <col:22, col:32> col:32 invalid i_ctx_p 'int *'
  `-CompoundStmt 0x132027c88 <line:2:1, line:20:1>
    |-DeclStmt 0x13200df28 <line:3:5, col:13>
    | `-VarDecl 0x13200dec0 <col:5, col:9> col:9 used code 'int'
    |-BinaryOperator 0x13200e128 <line:5:5, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x13200df40 <col:5> 'int' lvalue Var 0x13200dec0 'code' 'int'
    | `-CallExpr 0x13200e100 <col:12, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13200e0c0 <col:12> 'int ()' Function 0x13200e008 'zswapcolors' 'int ()'
    |   `-RecoveryExpr 0x13200e0e0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13200e208 <line:6:5, line:7:16>
    | |-BinaryOperator 0x13200e1a0 <line:6:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x13200e188 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13200e148 <col:9> 'int' lvalue Var 0x13200dec0 'code' 'int'
    | | `-IntegerLiteral 0x13200e168 <col:16> 'int' 0
    | `-ReturnStmt 0x13200e1f8 <line:7:9, col:16>
    |   `-ImplicitCastExpr 0x13200e1e0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13200e1c0 <col:16> 'int' lvalue Var 0x13200dec0 'code' 'int'
    |-CallExpr 0x13200e398 <line:11:5, col:19> 'int'
    | |-ImplicitCastExpr 0x13200e380 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13200e308 <col:5> 'int ()' Function 0x13200e250 'check_estack' 'int ()'
    | `-IntegerLiteral 0x13200e328 <col:18> 'int' 1
    |-CallExpr 0x132027558 <line:13:5, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1320274b8 <col:5> 'int ()' Function 0x132027400 'push_op_estack' 'int ()'
    | `-RecoveryExpr 0x132027538 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1320276e8 <line:15:5, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x132027580 <col:5> 'int' lvalue Var 0x13200dec0 'code' 'int'
    | `-CallExpr 0x1320276c0 <col:12, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x132027680 <col:12> 'int ()' Function 0x1320275c8 'zsetcolorspace' 'int ()'
    |   `-RecoveryExpr 0x1320276a0 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x132027c20 <line:16:5, line:17:16>
    | |-BinaryOperator 0x132027760 <line:16:9, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x132027748 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132027708 <col:9> 'int' lvalue Var 0x13200dec0 'code' 'int'
    | | `-IntegerLiteral 0x132027728 <col:17> 'int' 0
    | `-ReturnStmt 0x132027c10 <line:17:9, col:16>
    |   `-ImplicitCastExpr 0x1320277d0 <col:16> 'int' <PointerToIntegral>
    |     `-ImplicitCastExpr 0x1320277b8 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x132027798 <col:16> 'int ()' Function 0x132027400 'push_op_estack' 'int ()'
    `-ReturnStmt 0x132027c78 <line:19:5, col:12>
      `-ImplicitCastExpr 0x132027c60 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x132027c40 <col:12> 'int' lvalue Var 0x13200dec0 'code' 'int'
