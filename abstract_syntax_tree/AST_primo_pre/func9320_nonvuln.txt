`-FunctionDecl 0x15000de88  line:1:8 invalid cJSON_DetachItemFromArray 'int *(int *, int)'
  |-ParmVarDecl 0x15000dd28 <col:34, col:41> col:41 referenced invalid array 'int *'
  |-ParmVarDecl 0x15000dda8 <col:47, col:51> col:51 used which 'int'
  `-CompoundStmt 0x150027c90 <col:60, line:2:141>
    |-IfStmt 0x15000e260 <line:1:122, col:137>
    | |-UnaryOperator 0x15000e200 <col:126, col:127> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15000e1e8 <col:127> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15000e1c8 <col:127> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15000e250 <col:130, col:137>
    |   `-ImplicitCastExpr 0x15000e238 <col:137> 'int *' <NullToPointer>
    |     `-IntegerLiteral 0x15000e218 <col:137> 'int' 0
    |-IfStmt 0x150027b88 <line:2:72, col:109>
    | |-BinaryOperator 0x1500279d0 <col:76, col:86> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1500279b0 <col:76> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x150027948 <col:79, col:86> '<dependent type>' contains-errors lvalue ->child
    | |   `-RecoveryExpr 0x150027928 <col:79> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x150027b68 <col:93, col:109> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x150027a38 <col:93, col:100> '<dependent type>' contains-errors lvalue ->child
    |   | `-RecoveryExpr 0x150027a10 <col:93> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1500279f0 <col:93> 'int *' lvalue ParmVar 0x15000dd28 'array' 'int *'
    |   `-CXXDependentScopeMemberExpr 0x150027b20 <col:106, col:109> '<dependent type>' contains-errors lvalue ->next
    |     `-RecoveryExpr 0x150027b00 <col:106> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x150027c80 <col:132, col:139>
      `-RecoveryExpr 0x150027c60 <col:139> '<dependent type>' contains-errors lvalue
