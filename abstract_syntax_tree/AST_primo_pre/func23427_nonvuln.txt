`-FunctionDecl 0x12c1281c8  line:1:1 invalid messageGetEncoding 'int (const int *)'
  |-ParmVarDecl 0x12c1280f0 <col:20, col:35> col:35 invalid m 'const int *'
  `-CompoundStmt 0x12c1286b8 <line:2:1, line:8:1>
    |-CallExpr 0x12c1284b0 <line:3:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c1283d0 <col:2> 'int ()' Function 0x12c128318 'assert' 'int ()'
    | `-BinaryOperator 0x12c128490 <col:9, col:14> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x12c1283f0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12c128470 <col:14> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c1285c8 <line:5:2, line:6:10>
    | |-BinaryOperator 0x12c128560 <line:5:5, col:28> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12c1284f8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->numberOfEncTypes
    | | | `-RecoveryExpr 0x12c1284d8 <col:5> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12c128540 <col:28> 'int' 0
    | `-ReturnStmt 0x12c1285b8 <line:6:3, col:10>
    |   `-RecoveryExpr 0x12c128598 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12c1286a8 <line:7:2, col:27>
      `-ArraySubscriptExpr 0x12c128688 <col:9, col:27> '<dependent type>' contains-errors lvalue
        |-ImplicitCastExpr 0x12c128670 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
        | `-CXXDependentScopeMemberExpr 0x12c128608 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encodingTypes
        |   `-RecoveryExpr 0x12c1285e8 <col:9> '<dependent type>' contains-errors lvalue
        `-IntegerLiteral 0x12c128650 <col:26> 'int' 0
