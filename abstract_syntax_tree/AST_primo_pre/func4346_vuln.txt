`-FunctionDecl 0x14a128310  line:1:6 invalid GENERAL_NAME_set0_value 'void (int *, int, void *)'
  |-ParmVarDecl 0x14a128128 <col:30, col:44> col:44 referenced invalid a 'int *'
  |-ParmVarDecl 0x14a1281a8 <col:47, col:51> col:51 used type 'int'
  |-ParmVarDecl 0x14a128228 <col:57, col:63> col:63 used value 'void *'
  `-CompoundStmt 0x14a141d10 <line:2:1, line:32:1>
    |-SwitchStmt 0x14a128408 <line:3:5, line:30:5>
    | |-ImplicitCastExpr 0x14a1283f0 <line:3:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14a1283d0 <col:13> 'int' lvalue ParmVar 0x14a1281a8 'type' 'int'
    | `-CompoundStmt 0x14a141bd0 <col:19, line:30:5>
    |   |-BinaryOperator 0x14a128558 <line:6:9, col:22> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a1284f0 <col:9, col:14> '<dependent type>' contains-errors lvalue .other
    |   | | `-CXXDependentScopeMemberExpr 0x14a1284a8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a128480 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a128460 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a128538 <col:22> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   |-BreakStmt 0x14a128578 <line:7:9>
    |   |-BinaryOperator 0x14a128690 <line:10:9, col:26> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a128628 <col:9, col:14> '<dependent type>' contains-errors lvalue .otherName
    |   | | `-CXXDependentScopeMemberExpr 0x14a1285e0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a1285b8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a128598 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a128670 <col:26> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   |-BreakStmt 0x14a1286b0 <line:11:9>
    |   |-BinaryOperator 0x14a141800 <line:16:9, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a128790 <col:9, col:14> '<dependent type>' contains-errors lvalue .ia5
    |   | | `-CXXDependentScopeMemberExpr 0x14a128748 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a128720 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a128700 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a1287d8 <col:20> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   |-BreakStmt 0x14a141820 <line:17:9>
    |   |-BinaryOperator 0x14a141938 <line:20:9, col:21> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a1418d0 <col:9, col:14> '<dependent type>' contains-errors lvalue .dirn
    |   | | `-CXXDependentScopeMemberExpr 0x14a141888 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a141860 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a141840 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a141918 <col:21> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   |-BreakStmt 0x14a141958 <line:21:9>
    |   |-BinaryOperator 0x14a141a70 <line:24:9, col:19> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a141a08 <col:9, col:14> '<dependent type>' contains-errors lvalue .ip
    |   | | `-CXXDependentScopeMemberExpr 0x14a1419c0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a141998 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a141978 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a141a50 <col:19> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   |-BreakStmt 0x14a141a90 <line:25:9>
    |   |-BinaryOperator 0x14a141ba8 <line:28:9, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x14a141b40 <col:9, col:14> '<dependent type>' contains-errors lvalue .rid
    |   | | `-CXXDependentScopeMemberExpr 0x14a141af8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->d
    |   | |   `-RecoveryExpr 0x14a141ad0 <col:9> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14a141ab0 <col:9> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
    |   | `-DeclRefExpr 0x14a141b88 <col:20> 'void *' lvalue ParmVar 0x14a128228 'value' 'void *'
    |   `-BreakStmt 0x14a141bc8 <line:29:9>
    `-BinaryOperator 0x14a141cf0 <line:31:5, col:15> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x14a141c88 <col:5, col:8> '<dependent type>' contains-errors lvalue ->type
      | `-RecoveryExpr 0x14a141c60 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14a141c40 <col:5> 'int *' lvalue ParmVar 0x14a128128 'a' 'int *'
      `-DeclRefExpr 0x14a141cd0 <col:15> 'int' lvalue ParmVar 0x14a1281a8 'type' 'int'
