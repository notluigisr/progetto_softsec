`-FunctionDecl 0x139928d50  line:1:6 invalid TestGatherNd 'void (int *, const int *, int *, const int *, int *, int *, const int *)'
  |-ParmVarDecl 0x139928908 <col:19, col:24> col:24 used param_dims 'int *'
  |-ParmVarDecl 0x1399289a0 <col:36, col:53> col:53 invalid param_data 'const int *'
  |-ParmVarDecl 0x139928a20 <col:65, col:70> col:70 used index_dims 'int *'
  |-ParmVarDecl 0x139928aa0 <line:2:19, col:36> col:36 invalid index_data 'const int *'
  |-ParmVarDecl 0x139928b20 <col:48, col:53> col:53 used output_dims 'int *'
  |-ParmVarDecl 0x139928ba0 <line:3:19, col:30> col:30 referenced invalid output_data 'int *'
  |-ParmVarDecl 0x139928c20 <line:4:19, col:36> col:36 invalid expected_output_data 'const int *'
  `-CompoundStmt 0x139942f90 <col:58, line:35:1>
    |-DeclStmt 0x139942430 <line:17:3, col:38>
    | `-VarDecl 0x139942248 <col:3, col:37> col:7 used inputs_array_data 'int[3]' cinit
    |   `-InitListExpr 0x139942378 <col:29, col:37> 'int[3]'
    |     |-IntegerLiteral 0x1399422b0 <col:30> 'int' 2
    |     |-IntegerLiteral 0x1399422d0 <col:33> 'int' 0
    |     `-IntegerLiteral 0x1399422f0 <col:36> 'int' 1
    |-DeclStmt 0x1399426c0 <line:19:3, col:36>
    | `-VarDecl 0x139942520 <col:3, col:35> col:7 used outputs_array_data 'int[2]' cinit
    |   `-InitListExpr 0x139942628 <col:30, col:35> 'int[2]'
    |     |-IntegerLiteral 0x139942588 <col:31> 'int' 1
    |     `-IntegerLiteral 0x1399425a8 <col:34> 'int' 2
    |-DeclStmt 0x139942960 <line:22:3, col:63>
    | `-VarDecl 0x1399427c0 <col:3, col:28> col:28 invalid registration 'const int'
    |-DeclStmt 0x139942c38 <line:31:3, col:60>
    | `-VarDecl 0x139942ad0 <col:3, col:13> col:13 used output_size 'const int'
    `-ForStmt 0x139942f58 <line:32:3, line:34:3>
      |-DeclStmt 0x139942cf0 <line:32:8, col:17>
      | `-VarDecl 0x139942c68 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x139942cd0 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x139942d78 <col:19, col:23> 'int' '<'
      | |-ImplicitCastExpr 0x139942d48 <col:19> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x139942d08 <col:19> 'int' lvalue Var 0x139942c68 'i' 'int'
      | `-ImplicitCastExpr 0x139942d60 <col:23> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x139942d28 <col:23> 'const int' lvalue Var 0x139942ad0 'output_size' 'const int'
      |-UnaryOperator 0x139942db8 <col:36, col:38> 'int' prefix '++'
      | `-DeclRefExpr 0x139942d98 <col:38> 'int' lvalue Var 0x139942c68 'i' 'int'
      `-CompoundStmt 0x139942f40 <col:41, line:34:3>
        `-CallExpr 0x139942f10 <line:33:5, col:68> '<dependent type>' contains-errors
          |-DeclRefExpr 0x139942dd0 <col:5> 'int ()' Function 0x1399429a0 'TF_LITE_MICRO_EXPECT_EQ' 'int ()'
          |-ArraySubscriptExpr 0x139942e60 <col:29, col:51> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x139942e30 <col:29> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x139942df0 <col:29> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x139942e48 <col:50> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x139942e10 <col:50> 'int' lvalue Var 0x139942c68 'i' 'int'
          `-ArraySubscriptExpr 0x139942ef0 <col:54, col:67> '<dependent type>' contains-errors lvalue
            |-ImplicitCastExpr 0x139942ec0 <col:54> '<dependent type>' contains-errors <LValueToRValue>
            | `-RecoveryExpr 0x139942e80 <col:54> '<dependent type>' contains-errors lvalue
            `-ImplicitCastExpr 0x139942ed8 <col:66> 'int' <LValueToRValue>
              `-DeclRefExpr 0x139942ea0 <col:66> 'int' lvalue Var 0x139942c68 'i' 'int'
