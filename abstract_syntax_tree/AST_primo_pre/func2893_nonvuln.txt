`-FunctionDecl 0x1551281f8  line:1:5 invalid mp_pack 'int (int *)'
  |-ParmVarDecl 0x155128128 <col:13, col:24> col:24 invalid L 'int *'
  `-CompoundStmt 0x155142c80 <col:27, line:31:1>
    |-DeclStmt 0x1551284e8 <line:2:5, col:30>
    | `-VarDecl 0x1551282c0 <col:5, col:29> col:9 used nargs 'int' cinit
    |   `-CallExpr 0x1551284c0 <col:17, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x155128480 <col:17> 'int ()' Function 0x1551283c8 'lua_gettop' 'int ()'
    |     `-RecoveryExpr 0x1551284a0 <col:28> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x155128580 <line:3:5, col:10>
    | `-VarDecl 0x155128518 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x155141848 <line:6:5, line:7:41>
    | |-BinaryOperator 0x155128608 <line:6:9, col:18> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x1551285f0 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x1551285b0 <col:9> 'int' contains-errors lvalue Var 0x1551282c0 'nargs' 'int'
    | | `-IntegerLiteral 0x1551285d0 <col:18> 'int' 0
    | `-ReturnStmt 0x155141838 <line:7:9, col:41>
    |   `-CallExpr 0x155141800 <col:16, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x155128708 <col:16> 'int ()' Function 0x155128650 'luaL_argerror' 'int ()'
    |     |-RecoveryExpr 0x155128728 <col:30> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x155128748 <col:33> 'int' 0
    |     `-StringLiteral 0x1551287b0 <col:36> 'char[4]' lvalue "STR"
    |-IfStmt 0x155141ab8 <line:9:5, line:10:41>
    | |-UnaryOperator 0x1551419d8 <line:9:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1551419a8 <col:10, col:33> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x155141948 <col:10> 'int ()' Function 0x155141890 'lua_checkstack' 'int ()'
    | |   |-RecoveryExpr 0x155141968 <col:25> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x155141988 <col:28> 'int' contains-errors lvalue Var 0x1551282c0 'nargs' 'int'
    | `-ReturnStmt 0x155141aa8 <line:10:9, col:41>
    |   `-CallExpr 0x155141a70 <col:16, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1551419f0 <col:16> 'int ()' Function 0x155128650 'luaL_argerror' 'int ()'
    |     |-RecoveryExpr 0x155141a10 <col:30> '<dependent type>' contains-errors lvalue
    |     |-IntegerLiteral 0x155141a30 <col:33> 'int' 0
    |     `-StringLiteral 0x155141a50 <col:36> 'char[4]' lvalue "STR"
    |-ForStmt 0x1551424d8 <line:13:5, line:25:5>
    | |-BinaryOperator 0x155141c60 <line:13:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x155141c20 <col:9> 'int' lvalue Var 0x155128518 'i' 'int'
    | | `-IntegerLiteral 0x155141c40 <col:13> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x155141cf0 <col:16, col:21> 'int' contains-errors '<='
    | | |-ImplicitCastExpr 0x155141cc0 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x155141c80 <col:16> 'int' lvalue Var 0x155128518 'i' 'int'
    | | `-ImplicitCastExpr 0x155141cd8 <col:21> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x155141ca0 <col:21> 'int' contains-errors lvalue Var 0x1551282c0 'nargs' 'int'
    | |-UnaryOperator 0x155141d30 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x155141d10 <col:28> 'int' lvalue Var 0x155128518 'i' 'int'
    | `-CompoundStmt 0x1551424b0 <col:33, line:25:5>
    |   |-CallExpr 0x155141ea8 <line:15:9, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x155141e28 <col:9> 'int ()' Function 0x155141d70 'luaL_checkstack' 'int ()'
    |   | |-RecoveryExpr 0x155141e48 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-IntegerLiteral 0x155141e68 <col:28> 'int' 1
    |   | `-StringLiteral 0x155141e88 <col:31> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x155142020 <line:16:9, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x155141fc0 <col:9> 'int ()' Function 0x155141f08 'lua_pushvalue' 'int ()'
    |   | |-RecoveryExpr 0x155141fe0 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x155142000 <col:26> 'int' lvalue Var 0x155128518 'i' 'int'
    |   `-CallExpr 0x155142200 <line:18:9, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x155142130 <col:9> 'int ()' Function 0x155142078 'mp_encode_lua_type' 'int ()'
    |     |-RecoveryExpr 0x155142150 <col:28> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x1551421e0 <col:30> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x155142188 <col:34> 'int' 0
    |-CallExpr 0x155142698 <line:26:5, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1551425f0 <col:5> 'int ()' Function 0x155142538 'mp_buf_free' 'int ()'
    | |-RecoveryExpr 0x155142610 <col:17> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x155142678 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x155142c20 <line:29:5, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1551427a8 <col:5> 'int ()' Function 0x1551426f0 'lua_concat' 'int ()'
    | |-RecoveryExpr 0x1551427c8 <col:16> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x155142c00 <col:19> 'int' contains-errors lvalue Var 0x1551282c0 'nargs' 'int'
    `-ReturnStmt 0x155142c70 <line:30:5, col:12>
      `-IntegerLiteral 0x155142c50 <col:12> 'int' 1
