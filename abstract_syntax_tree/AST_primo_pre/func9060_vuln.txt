`-FunctionDecl 0x138128458  line:1:12 invalid rxrpc_krb5_decode_ticket 'int (int **, int *, const int **, unsigned int *)' static
  |-ParmVarDecl 0x138128160 <col:37, col:42> col:42 invalid _ticket 'int **'
  |-ParmVarDecl 0x1381281e0 <col:51, col:56> col:56 invalid _tktlen 'int *'
  |-ParmVarDecl 0x1381282a0 <line:2:9, col:24> col:24 invalid _xdr 'const int **'
  |-ParmVarDecl 0x138128358 <col:30, col:44> col:44 used _toklen 'unsigned int *'
  `-CompoundStmt 0x138143110 <line:3:1, line:34:1>
    |-DeclStmt 0x1381285f0 <line:4:2, col:27>
    | `-VarDecl 0x138128538 <col:2, col:16> col:16 referenced invalid xdr 'const int *'
    |-DeclStmt 0x138128788 <line:5:2, col:37>
    | |-VarDecl 0x138128620 <col:2, col:25> col:15 used toklen 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x1381286d8 <col:24, col:25> 'unsigned int' <LValueToRValue>
    | |   `-UnaryOperator 0x1381286c0 <col:24, col:25> 'unsigned int' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x1381286a8 <col:25> 'unsigned int *' <LValueToRValue>
    | |       `-DeclRefExpr 0x138128688 <col:25> 'unsigned int *' lvalue ParmVar 0x138128358 '_toklen' 'unsigned int *'
    | `-VarDecl 0x138128708 <col:2, col:34> col:34 used len 'unsigned int'
    |-IfStmt 0x1381418e0 <line:8:2, line:9:11>
    | |-BinaryOperator 0x138141818 <line:8:6, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x1381287e0 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1381287a0 <col:6> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    | | `-ImplicitCastExpr 0x138141800 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1381287c0 <col:16> 'int' 4
    | `-ReturnStmt 0x1381418d0 <line:9:3, col:11>
    |   `-UnaryOperator 0x1381418b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1381418a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x138141880 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x138141ca0 <line:11:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138141a60 <col:2> 'int ()' Function 0x1381419a8 '_enter' 'int ()'
    | |-StringLiteral 0x138141ac0 <col:9> 'char[4]' lvalue "STR"
    | |-CallExpr 0x138141c58 <col:16, col:28> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x138141bc0 <col:16> 'int ()' Function 0x138141b08 'ntohl' 'int ()'
    | | `-ArraySubscriptExpr 0x138141c38 <col:22, col:27> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x138141c20 <col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x138141be0 <col:22> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x138141c00 <col:26> 'int' 0
    | `-DeclRefExpr 0x138141c80 <col:31> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    |-BinaryOperator 0x138141d90 <line:13:2, col:20> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x138141cd8 <col:2> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    | `-CallExpr 0x138141d68 <col:8, col:20> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x138141cf8 <col:8> 'int ()' Function 0x138141b08 'ntohl' 'int ()'
    |   `-UnaryOperator 0x138141d50 <col:14, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-UnaryOperator 0x138141d38 <col:15, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
    |       `-RecoveryExpr 0x138141d18 <col:15> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x138141e08 <line:14:2, col:12> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x138141db0 <col:2> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    | `-ImplicitCastExpr 0x138141df0 <col:12> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x138141dd0 <col:12> 'int' 4
    |-IfStmt 0x138141f78 <line:15:2, line:16:11>
    | |-BinaryOperator 0x138141eb0 <line:15:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x138141e38 <col:6> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    | | `-RecoveryExpr 0x138141e90 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x138141f68 <line:16:3, col:11>
    |   `-UnaryOperator 0x138141f50 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x138141f38 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x138141f18 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x138142008 <line:17:2, col:13> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x138141fd0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x138141fb8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x138141f98 <col:3> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x138141fe8 <col:13> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |-CallExpr 0x1381421b8 <line:19:2, col:19> 'int'
    | |-ImplicitCastExpr 0x1381421a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x138142108 <col:2> 'int ()' Function 0x138142050 '_debug' 'int ()'
    | |-ImplicitCastExpr 0x1381421e8 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x138142128 <col:9> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x138142200 <col:16> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x138142148 <col:16> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |-IfStmt 0x138142dd0 <line:21:2, line:28:2>
    | |-BinaryOperator 0x138142288 <line:21:6, col:12> 'int' '>'
    | | |-ImplicitCastExpr 0x138142258 <col:6> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x138142218 <col:6> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    | | `-ImplicitCastExpr 0x138142270 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x138142238 <col:12> 'int' 0
    | `-CompoundStmt 0x138142d98 <col:15, line:28:2>
    |   |-BinaryOperator 0x138142560 <line:22:3, col:42> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1381424f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1381424d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1381422a8 <col:4> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x138142528 <col:14, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1381423d8 <col:14> 'int ()' Function 0x138142320 'kmemdup' 'int ()'
    |   |   |-RecoveryExpr 0x1381423f8 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x138142418 <col:27> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |   |   `-RecoveryExpr 0x138142508 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x138142690 <line:23:3, line:24:12>
    |   | |-UnaryOperator 0x1381425d0 <line:23:7, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-UnaryOperator 0x1381425b8 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x1381425a0 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x138142580 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x138142680 <line:24:4, col:12>
    |   |   `-UnaryOperator 0x138142668 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x138142650 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x138142630 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x138142c00 <line:25:3, col:22> 'unsigned int' '='
    |   | |-DeclRefExpr 0x1381426b0 <col:3> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |   | `-BinaryOperator 0x1381427d0 <col:9, col:22> 'unsigned int' '&'
    |   |   |-ParenExpr 0x138142760 <col:9, col:17> 'unsigned int'
    |   |   | `-BinaryOperator 0x138142740 <col:10, col:16> 'unsigned int' '+'
    |   |   |   |-ImplicitCastExpr 0x138142710 <col:10> 'unsigned int' <LValueToRValue>
    |   |   |   | `-DeclRefExpr 0x1381426d0 <col:10> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |   |   |   `-ImplicitCastExpr 0x138142728 <col:16> 'unsigned int' <IntegralCast>
    |   |   |     `-IntegerLiteral 0x1381426f0 <col:16> 'int' 3
    |   |   `-ImplicitCastExpr 0x1381427b8 <col:21, col:22> 'unsigned int' <IntegralCast>
    |   |     `-UnaryOperator 0x1381427a0 <col:21, col:22> 'int' prefix '~' cannot overflow
    |   |       `-IntegerLiteral 0x138142780 <col:22> 'int' 3
    |   |-CompoundAssignOperator 0x138142c78 <line:26:3, col:13> 'unsigned int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x138142c20 <col:3> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    |   | `-ImplicitCastExpr 0x138142c60 <col:13> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x138142c40 <col:13> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |   `-CompoundAssignOperator 0x138142d68 <line:27:3, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x138142cc8 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x138142ca8 <col:3> 'const int *' lvalue Var 0x138128538 'xdr' 'const int *'
    |     `-BinaryOperator 0x138142d48 <col:10, col:17> 'unsigned int' '>>'
    |       |-ImplicitCastExpr 0x138142d30 <col:10> 'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x138142cf0 <col:10> 'unsigned int' lvalue Var 0x138128708 'len' 'unsigned int'
    |       `-IntegerLiteral 0x138142d10 <col:17> 'int' 2
    |-BinaryOperator 0x138142e60 <line:30:2, col:10> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x138142e28 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x138142e10 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x138142df0 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x138142e40 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x138142f08 <line:31:2, col:13> 'unsigned int' '='
    | |-UnaryOperator 0x138142eb8 <col:2, col:3> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x138142ea0 <col:3> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x138142e80 <col:3> 'unsigned int *' lvalue ParmVar 0x138128358 '_toklen' 'unsigned int *'
    | `-ImplicitCastExpr 0x138142ef0 <col:13> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x138142ed0 <col:13> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    |-CallExpr 0x138143080 <line:32:2, col:22> 'int'
    | |-ImplicitCastExpr 0x138143068 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x138143008 <col:2> 'int ()' Function 0x138142f50 '_leave' 'int ()'
    | |-ImplicitCastExpr 0x1381430b0 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x138143028 <col:9> 'char[4]' lvalue "STR"
    | `-ImplicitCastExpr 0x1381430c8 <col:16> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x138143048 <col:16> 'unsigned int' lvalue Var 0x138128620 'toklen' 'unsigned int'
    `-ReturnStmt 0x138143100 <line:33:2, col:9>
      `-IntegerLiteral 0x1381430e0 <col:9> 'int' 0
