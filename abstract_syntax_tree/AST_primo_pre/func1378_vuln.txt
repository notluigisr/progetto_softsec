`-FunctionDecl 0x156128348  line:1:5 invalid n_ssl3_mac 'int (int *, unsigned char *, int)'
  |-ParmVarDecl 0x156128128 <col:16, col:21> col:21 invalid ssl 'int *'
  |-ParmVarDecl 0x1561281d8 <col:26, col:41> col:41 used md 'unsigned char *'
  |-ParmVarDecl 0x156128258 <col:45, col:49> col:49 used send 'int'
  `-CompoundStmt 0x156144f28 <line:2:2, line:58:2>
    |-DeclStmt 0x156128538 <line:4:2, col:29>
    | |-VarDecl 0x156128438 <col:2, col:17> col:17 used mac_sec 'unsigned char *'
    | `-VarDecl 0x1561284b8 <col:2, col:26> col:26 used seq 'unsigned char *'
    |-DeclStmt 0x1561285d0 <line:6:2, col:24>
    | `-VarDecl 0x156128568 <col:2, col:20> col:20 referenced invalid hash 'const int *'
    |-DeclStmt 0x156128700 <line:7:2, col:27>
    | |-VarDecl 0x156128600 <col:2, col:17> col:17 used p 'unsigned char *'
    | `-VarDecl 0x156128680 <col:2, col:19> col:19 used rec_char 'unsigned char'
    |-DeclStmt 0x156128798 <line:8:2, col:22>
    | `-VarDecl 0x156128730 <col:2, col:15> col:15 used md_size 'unsigned int'
    |-DeclStmt 0x156141868 <line:9:2, col:10>
    | `-VarDecl 0x156141800 <col:2, col:6> col:6 used npad 'int'
    |-DeclStmt 0x156141900 <line:10:2, col:7>
    | `-VarDecl 0x156141898 <col:2, col:6> col:6 used t 'int'
    |-IfStmt 0x156142310 <line:12:2, line:25:3> has_else
    | |-ImplicitCastExpr 0x156141938 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x156141918 <col:6> 'int' lvalue ParmVar 0x156128258 'send' 'int'
    | |-CompoundStmt 0x156141e08 <line:13:3, line:18:3>
    | | |-BinaryOperator 0x156141b98 <line:15:3, col:42> 'unsigned char *' contains-errors '='
    | | | |-DeclRefExpr 0x156141a38 <col:3> 'unsigned char *' lvalue Var 0x156128438 'mac_sec' 'unsigned char *'
    | | | `-UnaryOperator 0x156141b80 <col:12, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-ParenExpr 0x156141b60 <col:13, col:42> '<dependent type>' contains-errors lvalue
    | | |     `-ArraySubscriptExpr 0x156141b40 <col:14, col:41> '<dependent type>' contains-errors lvalue
    | | |       |-ImplicitCastExpr 0x156141b28 <col:14, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | | |       | `-CXXDependentScopeMemberExpr 0x156141ac0 <col:14, col:23> '<dependent type>' contains-errors lvalue ->write_mac_secret
    | | |       |   `-CXXDependentScopeMemberExpr 0x156141a78 <col:14, col:19> '<dependent type>' contains-errors lvalue ->s3
    | | |       |     `-RecoveryExpr 0x156141a58 <col:14> '<dependent type>' contains-errors lvalue
    | | |       `-IntegerLiteral 0x156141b08 <col:40> 'int' 0
    | | |-BinaryOperator 0x156141d18 <line:16:3, col:36> 'unsigned char *' contains-errors '='
    | | | |-DeclRefExpr 0x156141bb8 <col:3> 'unsigned char *' lvalue Var 0x1561284b8 'seq' 'unsigned char *'
    | | | `-UnaryOperator 0x156141d00 <col:8, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-ParenExpr 0x156141ce0 <col:9, col:36> '<dependent type>' contains-errors lvalue
    | | |     `-ArraySubscriptExpr 0x156141cc0 <col:10, col:35> '<dependent type>' contains-errors lvalue
    | | |       |-ImplicitCastExpr 0x156141ca8 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | | |       | `-CXXDependentScopeMemberExpr 0x156141c40 <col:10, col:19> '<dependent type>' contains-errors lvalue ->write_sequence
    | | |       |   `-CXXDependentScopeMemberExpr 0x156141bf8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->s3
    | | |       |     `-RecoveryExpr 0x156141bd8 <col:10> '<dependent type>' contains-errors lvalue
    | | |       `-IntegerLiteral 0x156141c88 <col:34> 'int' 0
    | | `-BinaryOperator 0x156141de8 <line:17:3, col:13> '<dependent type>' contains-errors '='
    | |   |-RecoveryExpr 0x156141d58 <col:3> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x156141d38 <col:3> 'const int *' lvalue Var 0x156128568 'hash' 'const int *'
    | |   `-CXXDependentScopeMemberExpr 0x156141da0 <col:8, col:13> '<dependent type>' contains-errors lvalue ->write_hash
    | |     `-RecoveryExpr 0x156141d80 <col:8> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1561422e8 <line:20:3, line:25:3>
    |   |-BinaryOperator 0x156142078 <line:22:3, col:41> 'unsigned char *' contains-errors '='
    |   | |-DeclRefExpr 0x156141f18 <col:3> 'unsigned char *' lvalue Var 0x156128438 'mac_sec' 'unsigned char *'
    |   | `-UnaryOperator 0x156142060 <col:12, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-ParenExpr 0x156142040 <col:13, col:41> '<dependent type>' contains-errors lvalue
    |   |     `-ArraySubscriptExpr 0x156142020 <col:14, col:40> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x156142008 <col:14, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x156141fa0 <col:14, col:23> '<dependent type>' contains-errors lvalue ->read_mac_secret
    |   |       |   `-CXXDependentScopeMemberExpr 0x156141f58 <col:14, col:19> '<dependent type>' contains-errors lvalue ->s3
    |   |       |     `-RecoveryExpr 0x156141f38 <col:14> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x156141fe8 <col:39> 'int' 0
    |   |-BinaryOperator 0x1561421f8 <line:23:3, col:35> 'unsigned char *' contains-errors '='
    |   | |-DeclRefExpr 0x156142098 <col:3> 'unsigned char *' lvalue Var 0x1561284b8 'seq' 'unsigned char *'
    |   | `-UnaryOperator 0x1561421e0 <col:8, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-ParenExpr 0x1561421c0 <col:9, col:35> '<dependent type>' contains-errors lvalue
    |   |     `-ArraySubscriptExpr 0x1561421a0 <col:10, col:34> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x156142188 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-CXXDependentScopeMemberExpr 0x156142120 <col:10, col:19> '<dependent type>' contains-errors lvalue ->read_sequence
    |   |       |   `-CXXDependentScopeMemberExpr 0x1561420d8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->s3
    |   |       |     `-RecoveryExpr 0x1561420b8 <col:10> '<dependent type>' contains-errors lvalue
    |   |       `-IntegerLiteral 0x156142168 <col:33> 'int' 0
    |   `-BinaryOperator 0x1561422c8 <line:24:3, col:13> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x156142238 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x156142218 <col:3> 'const int *' lvalue Var 0x156128568 'hash' 'const int *'
    |     `-CXXDependentScopeMemberExpr 0x156142280 <col:8, col:13> '<dependent type>' contains-errors lvalue ->read_hash
    |       `-RecoveryExpr 0x156142260 <col:8> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x156142528 <line:27:2, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x156142340 <col:2> 'int' lvalue Var 0x156141898 't' 'int'
    | `-CallExpr 0x156142500 <col:4, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1561424c0 <col:4> 'int ()' Function 0x156142408 'EVP_MD_CTX_size' 'int ()'
    |   `-RecoveryExpr 0x1561424e0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156142608 <line:28:2, line:29:11>
    | |-BinaryOperator 0x1561425a0 <line:28:6, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x156142588 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x156142548 <col:6> 'int' lvalue Var 0x156141898 't' 'int'
    | | `-IntegerLiteral 0x156142568 <col:10> 'int' 0
    | `-ReturnStmt 0x1561425f8 <line:29:3, col:11>
    |   `-UnaryOperator 0x1561425e0 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x1561425c0 <col:11> 'int' 1
    |-BinaryOperator 0x156142698 <line:30:2, col:10> 'unsigned int' '='
    | |-DeclRefExpr 0x156142628 <col:2> 'unsigned int' lvalue Var 0x156128730 'md_size' 'unsigned int'
    | `-ImplicitCastExpr 0x156142680 <col:10> 'unsigned int' <IntegralCast>
    |   `-ImplicitCastExpr 0x156142668 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156142648 <col:10> 'int' lvalue Var 0x156141898 't' 'int'
    |-BinaryOperator 0x156142800 <line:31:2, col:20> 'int' '='
    | |-DeclRefExpr 0x1561426b8 <col:2> 'int' lvalue Var 0x156141800 'npad' 'int'
    | `-ImplicitCastExpr 0x1561427e0 <col:7, col:20> 'int' <IntegralCast>
    |   `-BinaryOperator 0x1561427c0 <col:7, col:20> 'unsigned int' '*'
    |     |-ParenExpr 0x156142768 <col:7, col:18> 'unsigned int'
    |     | `-BinaryOperator 0x156142748 <col:8, col:11> 'unsigned int' '/'
    |     |   |-ImplicitCastExpr 0x156142730 <col:8> 'unsigned int' <IntegralCast>
    |     |   | `-IntegerLiteral 0x1561426d8 <col:8> 'int' 48
    |     |   `-ImplicitCastExpr 0x156142718 <col:11> 'unsigned int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1561426f8 <col:11> 'unsigned int' lvalue Var 0x156128730 'md_size' 'unsigned int'
    |     `-ImplicitCastExpr 0x1561427a8 <col:20> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x156142788 <col:20> 'unsigned int' lvalue Var 0x156128730 'md_size' 'unsigned int'
    |-CallExpr 0x1561429b0 <line:34:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156142900 <col:2> 'int ()' Function 0x156142848 'EVP_MD_CTX_init' 'int ()'
    | `-UnaryOperator 0x156142998 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x156142978 <col:19> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x156142b90 <line:36:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156142ab8 <col:2> 'int ()' Function 0x156142a00 'EVP_MD_CTX_copy_ex' 'int ()'
    | |-UnaryOperator 0x156142b78 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x156142b58 <col:23> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x156142b08 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x156142da0 <line:37:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156142ca0 <col:2> 'int ()' Function 0x156142be8 'EVP_DigestUpdate' 'int ()'
    | |-UnaryOperator 0x156142d88 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x156142d68 <col:20> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x156142cf0 <col:27> 'unsigned char *' lvalue Var 0x156128438 'mac_sec' 'unsigned char *'
    | `-DeclRefExpr 0x156142d10 <col:35> 'unsigned int' lvalue Var 0x156128730 'md_size' 'unsigned int'
    |-CallExpr 0x156142ef0 <line:38:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156142dd8 <col:2> 'int ()' Function 0x156142be8 'EVP_DigestUpdate' 'int ()'
    | |-UnaryOperator 0x156142eb8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x156142e98 <col:20> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x156142ed0 <col:27> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x156142e40 <col:38> 'int' lvalue Var 0x156141800 'npad' 'int'
    |-CallExpr 0x156143028 <line:39:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156142f28 <col:2> 'int ()' Function 0x156142be8 'EVP_DigestUpdate' 'int ()'
    | |-UnaryOperator 0x156143010 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x156142ff0 <col:20> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x156142f78 <col:27> 'unsigned char *' lvalue Var 0x1561284b8 'seq' 'unsigned char *'
    | `-IntegerLiteral 0x156142f98 <col:31> 'int' 8
    |-BinaryOperator 0x156143168 <line:40:2, col:16> 'unsigned char' contains-errors '='
    | |-DeclRefExpr 0x156143060 <col:2> 'unsigned char' lvalue Var 0x156128680 'rec_char' 'unsigned char'
    | `-CXXDependentScopeMemberExpr 0x156143120 <col:11, col:16> '<dependent type>' contains-errors lvalue ->type
    |   `-RecoveryExpr 0x156143100 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1561432a0 <line:41:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x156143188 <col:2> 'int ()' Function 0x156142be8 'EVP_DigestUpdate' 'int ()'
    | |-UnaryOperator 0x156143288 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x156143268 <col:20> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1561431f8 <col:27, col:28> 'unsigned char *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1561431d8 <col:28> 'unsigned char' lvalue Var 0x156128680 'rec_char' 'unsigned char'
    | `-IntegerLiteral 0x156143210 <col:37> 'int' 1
    |-BinaryOperator 0x156143330 <line:42:2, col:4> 'unsigned char *' '='
    | |-DeclRefExpr 0x1561432d8 <col:2> 'unsigned char *' lvalue Var 0x156128600 'p' 'unsigned char *'
    | `-ImplicitCastExpr 0x156143318 <col:4> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1561432f8 <col:4> 'unsigned char *' lvalue ParmVar 0x1561281d8 'md' 'unsigned char *'
    |-CallExpr 0x156144e68 <line:56:2, col:33> 'int'
    | |-ImplicitCastExpr 0x156144e50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x156144de0 <col:2> 'int ()' Function 0x156144d28 'ssl3_record_sequence_update' 'int ()'
    | `-ImplicitCastExpr 0x156144e90 <col:30> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x156144e00 <col:30> 'unsigned char *' lvalue Var 0x1561284b8 'seq' 'unsigned char *'
    `-ReturnStmt 0x156144f18 <line:57:2, col:16>
      `-ImplicitCastExpr 0x156144f00 <col:8, col:16> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x156144ee8 <col:8, col:16> 'unsigned int' <LValueToRValue>
          `-ParenExpr 0x156144ec8 <col:8, col:16> 'unsigned int' lvalue
            `-DeclRefExpr 0x156144ea8 <col:9> 'unsigned int' lvalue Var 0x156128730 'md_size' 'unsigned int'
