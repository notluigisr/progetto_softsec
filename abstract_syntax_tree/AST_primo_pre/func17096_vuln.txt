`-FunctionDecl 0x14c80dda8  line:1:8 PHP_FUNCTION 'int (int)' static
  |-ParmVarDecl 0x14c80dcd8 <col:21> col:21 bzdecompress 'int'
  `-CompoundStmt 0x14c82ba18 <line:2:1, line:50:1>
    |-DeclStmt 0x14c80dfb8 <line:3:2, col:21>
    | |-VarDecl 0x14c80deb8 <col:2, col:8> col:8 used source 'char *'
    | `-VarDecl 0x14c80df38 <col:2, col:17> col:17 used dest 'char *'
    |-DeclStmt 0x14c80e0e8 <line:4:2, col:23>
    | |-VarDecl 0x14c80dfe8 <col:2, col:6> col:6 used source_len 'int'
    | `-VarDecl 0x14c80e068 <col:2, col:18> col:18 used error 'int'
    |-DeclStmt 0x14c80e1b8 <line:5:2, col:16>
    | `-VarDecl 0x14c80e118 <col:2, col:15> col:7 used small 'long' cinit
    |   `-ImplicitCastExpr 0x14c80e1a0 <col:15> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x14c80e180 <col:15> 'int' 0
    |-DeclStmt 0x14c80e288 <line:9:2, col:29>
    | `-VarDecl 0x14c80e1e8 <col:2, col:28> col:21 used size 'unsigned long long' cinit
    |   `-ImplicitCastExpr 0x14c80e270 <col:28> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x14c80e250 <col:28> 'int' 0
    |-IfStmt 0x14c828b98 <line:13:2, line:15:2>
    | |-RecoveryExpr 0x14c828b68 <line:13:6, col:101> '_Bool' contains-errors
    | `-CompoundStmt 0x14c828b88 <col:104, line:15:2>
    |-IfStmt 0x14c828e88 <line:20:2, line:22:2>
    | |-BinaryOperator 0x14c828e58 <line:20:6, col:46> 'int' contains-errors '!='
    | | |-CallExpr 0x14c828e00 <col:6, col:41> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14c828cc8 <col:6> 'int ()' Function 0x14c828c10 'BZ2_bzDecompressInit' 'int ()'
    | | | |-UnaryOperator 0x14c828de8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x14c828dc8 <col:28> '<dependent type>' contains-errors lvalue
    | | | |-IntegerLiteral 0x14c828d18 <col:33> 'int' 0
    | | | `-DeclRefExpr 0x14c828d38 <col:36> 'long' lvalue Var 0x14c80e118 'small' 'long'
    | | `-RecoveryExpr 0x14c828e38 <col:46> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c828e78 <col:53, line:22:2>
    |-WhileStmt 0x14c8294d8 <line:31:2, line:37:2>
    | |-RecoveryExpr 0x14c8291e0 <line:31:9, col:69> '_Bool' contains-errors
    | `-CompoundStmt 0x14c8294c8 <col:72, line:37:2>
    `-IfStmt 0x14c82b8e8 <line:39:2, line:47:2> has_else
      |-RecoveryExpr 0x14c829538 <line:39:6, col:41> '_Bool' contains-errors
      |-CompoundStmt 0x14c829990 <col:48, line:44:2>
      | |-BinaryOperator 0x14c829750 <line:42:3, col:16> 'char' '='
      | | |-ArraySubscriptExpr 0x14c829700 <col:3, col:12> 'char' lvalue
      | | | |-ImplicitCastExpr 0x14c8296d0 <col:3> 'char *' <LValueToRValue>
      | | | | `-DeclRefExpr 0x14c829690 <col:3> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'
      | | | `-ImplicitCastExpr 0x14c8296e8 <col:8> 'unsigned long long' <LValueToRValue>
      | | |   `-DeclRefExpr 0x14c8296b0 <col:8> 'unsigned long long' lvalue Var 0x14c80e1e8 'size' 'unsigned long long'
      | | `-ImplicitCastExpr 0x14c829738 <col:16> 'char' <IntegralCast>
      | |   `-CharacterLiteral 0x14c829720 <col:16> 'int' 0
      | `-CallExpr 0x14c829940 <line:43:3, col:37> 'int'
      |   |-ImplicitCastExpr 0x14c829928 <col:3> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x14c829850 <col:3> 'int ()' Function 0x14c829798 'RETVAL_STRINGL' 'int ()'
      |   |-ImplicitCastExpr 0x14c829978 <col:18> 'char *' <LValueToRValue>
      |   | `-DeclRefExpr 0x14c829870 <col:18> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'
      |   |-CStyleCastExpr 0x14c8298e0 <col:24, col:30> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x14c8298c8 <col:30> 'unsigned long long' <LValueToRValue> part_of_explicit_cast
      |   |   `-DeclRefExpr 0x14c829890 <col:30> 'unsigned long long' lvalue Var 0x14c80e1e8 'size' 'unsigned long long'
      |   `-IntegerLiteral 0x14c829908 <col:36> 'int' 0
      `-CompoundStmt 0x14c82b8c8 <line:44:9, line:47:2>
        |-CallExpr 0x14c82b710 <line:45:3, col:13> 'int'
        | |-ImplicitCastExpr 0x14c82b6f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x14c82b6b8 <col:3> 'int ()' Function 0x14c82b600 'efree' 'int ()'
        | `-ImplicitCastExpr 0x14c82b738 <col:9> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x14c82b6d8 <col:9> 'char *' lvalue Var 0x14c80df38 'dest' 'char *'
        `-CallExpr 0x14c82b888 <line:46:3, col:20> 'int'
          |-ImplicitCastExpr 0x14c82b870 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14c82b830 <col:3> 'int ()' Function 0x14c82b778 'RETVAL_LONG' 'int ()'
          `-ImplicitCastExpr 0x14c82b8b0 <col:15> 'int' <LValueToRValue>
            `-DeclRefExpr 0x14c82b850 <col:15> 'int' lvalue Var 0x14c80e068 'error' 'int'
