`-FunctionDecl 0x132140c18  line:1:12 input_default_setkeycode 'int (struct input_dev *, const struct input_keymap_entry *, unsigned int *)' static
  |-ParmVarDecl 0x132128648 <col:37, col:55> col:55 used dev 'struct input_dev *'
  |-ParmVarDecl 0x132140a28 <line:2:9, col:42> col:42 used ke 'const struct input_keymap_entry *'
  |-ParmVarDecl 0x132140ad8 <line:3:9, col:23> col:23 used old_keycode 'unsigned int *'
  `-CompoundStmt 0x132142e38 <line:4:1, line:59:1>
    |-DeclStmt 0x132140da0 <line:5:2, col:20>
    | `-VarDecl 0x132140d38 <col:2, col:15> col:15 used index 'unsigned int'
    |-DeclStmt 0x132140e38 <line:6:2, col:11>
    | `-VarDecl 0x132140dd0 <col:2, col:6> col:6 used error 'int'
    |-DeclStmt 0x132140ed0 <line:7:2, col:7>
    | `-VarDecl 0x132140e68 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x132141038 <line:9:2, line:10:11>
    | |-UnaryOperator 0x132140f60 <line:9:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x132140f48 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x132140f20 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x132140ee8 <col:7> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | `-ReturnStmt 0x132141028 <line:10:3, col:11>
    |   `-UnaryOperator 0x132141010 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x132140ff8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x132140fd8 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x132141510 <line:12:2, line:18:2> has_else
    | |-BinaryOperator 0x132141110 <line:12:6, col:18> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x132141090 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x132141058 <col:6> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'
    | | `-RecoveryExpr 0x1321410f0 <col:18> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1321411d0 <col:41, line:14:2>
    | | `-BinaryOperator 0x1321411b0 <line:13:3, col:15> 'unsigned int' contains-errors '='
    | |   |-DeclRefExpr 0x132141130 <col:3> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'
    | |   `-RecoveryExpr 0x132141188 <col:11, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x132141150 <col:11> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'
    | `-CompoundStmt 0x1321414f0 <line:14:9, line:18:2>
    |   |-BinaryOperator 0x132141430 <line:15:3, col:46> 'int' '='
    |   | |-DeclRefExpr 0x1321411e8 <col:3> 'int' lvalue Var 0x132140dd0 'error' 'int'
    |   | `-CallExpr 0x1321413e8 <col:11, col:46> 'int'
    |   |   |-ImplicitCastExpr 0x1321413d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x132141320 <col:11> 'int ()' Function 0x132141268 'input_scancode_to_scalar' 'int ()'
    |   |   |-ImplicitCastExpr 0x132141418 <col:36> 'const struct input_keymap_entry *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x132141340 <col:36> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'
    |   |   `-UnaryOperator 0x132141380 <col:40, col:41> 'unsigned int *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x132141360 <col:41> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'
    |   `-IfStmt 0x1321414d0 <line:16:3, line:17:11>
    |     |-ImplicitCastExpr 0x132141470 <line:16:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x132141450 <col:7> 'int' lvalue Var 0x132140dd0 'error' 'int'
    |     `-ReturnStmt 0x1321414c0 <line:17:4, col:11>
    |       `-ImplicitCastExpr 0x1321414a8 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x132141488 <col:11> 'int' lvalue Var 0x132140dd0 'error' 'int'
    |-IfStmt 0x132141688 <line:20:2, line:21:11>
    | |-BinaryOperator 0x1321415c0 <line:20:6, col:20> 'int' contains-errors '>='
    | | |-DeclRefExpr 0x132141540 <col:6> 'unsigned int' lvalue Var 0x132140d38 'index' 'unsigned int'
    | | `-RecoveryExpr 0x132141598 <col:15, col:20> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x132141560 <col:15> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | `-ReturnStmt 0x132141678 <line:21:3, col:11>
    |   `-UnaryOperator 0x132141660 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x132141648 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x132141628 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x132142000 <line:23:2, line:25:11>
    | |-BinaryOperator 0x132141928 <line:23:6, line:24:42> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1321417a8 <line:23:6, col:43> 'int' contains-errors '<'
    | | | |-RecoveryExpr 0x1321416e0 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1321416a8 <col:6> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | | | `-UnaryExprOrTypeTraitExpr 0x132141788 <col:25, col:43> 'unsigned long' contains-errors sizeof
    | | |   `-ParenExpr 0x132141768 <col:31, col:43> '<dependent type>' contains-errors lvalue
    | | |     `-RecoveryExpr 0x132141740 <col:32, col:36> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x132141708 <col:32> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *' non_odr_use_unevaluated
    | | `-ParenExpr 0x132141908 <line:24:4, col:42> '<dependent type>' contains-errors
    | |   `-BinaryOperator 0x1321418e8 <col:5, col:41> '<dependent type>' contains-errors '>>'
    | |     |-RecoveryExpr 0x132141800 <col:5, col:9> '<dependent type>' contains-errors lvalue
    | |     | `-DeclRefExpr 0x1321417c8 <col:5> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'
    | |     `-ParenExpr 0x1321418c8 <col:20, col:41> '<dependent type>' contains-errors
    | |       `-BinaryOperator 0x1321418a8 <col:21, col:40> '<dependent type>' contains-errors '*'
    | |         |-RecoveryExpr 0x132141860 <col:21, col:26> '<dependent type>' contains-errors lvalue
    | |         | `-DeclRefExpr 0x132141828 <col:21> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | |         `-IntegerLiteral 0x132141888 <col:40> 'int' 8
    | `-ReturnStmt 0x1321419e0 <line:25:3, col:11>
    |   `-UnaryOperator 0x1321419c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1321419b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x132141990 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x132142098 <line:27:2, line:46:2>
    | |-ImplicitCastExpr 0x132142080 <line:27:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x132142058 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x132142020 <col:10> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | `-CompoundStmt 0x1321424e8 <col:28, line:46:2>
    |   |-CaseStmt 0x1321420e0 <line:28:3, line:33:3>
    |   | |-IntegerLiteral 0x1321420c0 <line:28:8> 'int' 1
    |   | `-CompoundStmt 0x132142248 <col:11, line:33:3>
    |   |   `-BreakStmt 0x132142240 <line:32:4>
    |   |-CaseStmt 0x132142280 <line:34:3, line:39:3>
    |   | |-IntegerLiteral 0x132142260 <line:34:8> 'int' 2
    |   | `-CompoundStmt 0x1321423a0 <col:11, line:39:3>
    |   |   `-BreakStmt 0x132142398 <line:38:4>
    |   `-DefaultStmt 0x1321424c8 <line:40:3, line:45:3>
    |     `-CompoundStmt 0x1321424b0 <line:40:12, line:45:3>
    |       `-BreakStmt 0x1321424a8 <line:44:4>
    |-CallExpr 0x1321426c0 <line:48:2, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1321425f0 <col:2> 'int ()' Function 0x132142538 '__clear_bit' 'int ()'
    | |-UnaryOperator 0x132142648 <col:14, col:15> 'unsigned int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x132142630 <col:15> 'unsigned int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x132142610 <col:15> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'
    | `-RecoveryExpr 0x132142698 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x132142660 <col:28> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    |-CallExpr 0x1321428b0 <line:49:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1321427d0 <col:2> 'int ()' Function 0x132142718 '__set_bit' 'int ()'
    | |-RecoveryExpr 0x132142828 <col:12, col:16> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1321427f0 <col:12> 'const struct input_keymap_entry *' lvalue ParmVar 0x132140a28 'ke' 'const struct input_keymap_entry *'
    | `-RecoveryExpr 0x132142888 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x132142850 <col:25> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    |-ForStmt 0x132142dd0 <line:51:2, line:56:2>
    | |-BinaryOperator 0x132142920 <line:51:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1321428e0 <col:7> 'int' lvalue Var 0x132140e68 'i' 'int'
    | | `-IntegerLiteral 0x132142900 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1321429c0 <col:14, col:23> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x132142940 <col:14> 'int' lvalue Var 0x132140e68 'i' 'int'
    | | `-RecoveryExpr 0x132142998 <col:18, col:23> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x132142960 <col:18> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    | |-UnaryOperator 0x132142a00 <col:35, col:36> 'int' postfix '++'
    | | `-DeclRefExpr 0x1321429e0 <col:35> 'int' lvalue Var 0x132140e68 'i' 'int'
    | `-CompoundStmt 0x132142db8 <col:40, line:56:2>
    |   `-IfStmt 0x132142d98 <line:52:3, line:55:3>
    |     |-BinaryOperator 0x132142c50 <line:52:7, col:39> 'int' '=='
    |     | |-ImplicitCastExpr 0x132142c38 <col:7, col:33> 'unsigned int' <IntegralCast>
    |     | | `-CallExpr 0x132142b70 <col:7, col:33> 'int'
    |     | |   |-ImplicitCastExpr 0x132142b58 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x132142af8 <col:7> 'int ()' Function 0x132142a40 'input_fetch_keycode' 'int ()'
    |     | |   |-ImplicitCastExpr 0x132142ba0 <col:27> 'struct input_dev *' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x132142b18 <col:27> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    |     | |   `-ImplicitCastExpr 0x132142bb8 <col:32> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x132142b38 <col:32> 'int' lvalue Var 0x132140e68 'i' 'int'
    |     | `-ImplicitCastExpr 0x132142c20 <col:38, col:39> 'unsigned int' <LValueToRValue>
    |     |   `-UnaryOperator 0x132142c08 <col:38, col:39> 'unsigned int' lvalue prefix '*' cannot overflow
    |     |     `-ImplicitCastExpr 0x132142bf0 <col:39> 'unsigned int *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x132142bd0 <col:39> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'
    |     `-CompoundStmt 0x132142d78 <col:52, line:55:3>
    |       |-CallExpr 0x132142d40 <line:53:4, col:39> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x132142c70 <col:4> 'int ()' Function 0x132142718 '__set_bit' 'int ()'
    |       | |-UnaryOperator 0x132142cc8 <col:14, col:15> 'unsigned int' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x132142cb0 <col:15> 'unsigned int *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x132142c90 <col:15> 'unsigned int *' lvalue ParmVar 0x132140ad8 'old_keycode' 'unsigned int *'
    |       | `-RecoveryExpr 0x132142d18 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x132142ce0 <col:28> 'struct input_dev *' lvalue ParmVar 0x132128648 'dev' 'struct input_dev *'
    |       `-BreakStmt 0x132142d70 <line:54:4>
    `-ReturnStmt 0x132142e28 <line:58:2, col:9>
      `-IntegerLiteral 0x132142e08 <col:9> 'int' 0
