`-FunctionDecl 0x1590266b8  line:1:20 soc_device_register 'struct soc_device *(struct soc_device_attribute *)'
  |-ParmVarDecl 0x15900e2e8 <col:40, col:69> col:69 used soc_dev_attr 'struct soc_device_attribute *'
  `-CompoundStmt 0x159029b18 <line:2:1, line:55:1>
    |-DeclStmt 0x1590268a0 <line:3:2, col:28>
    | `-VarDecl 0x159026838 <col:2, col:21> col:21 used soc_dev 'struct soc_device *'
    |-DeclStmt 0x159026b08 <line:4:2, col:48>
    | |-RecordDecl 0x1590268b8 <col:8, col:15> col:15 struct attribute_group
    | `-VarDecl 0x159026a88 <col:2, col:33> col:33 used soc_attr_groups 'const struct attribute_group **'
    |-DeclStmt 0x159026ba0 <line:5:2, col:9>
    | `-VarDecl 0x159026b38 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x159027060 <line:7:2, line:12:2>
    | |-UnaryOperator 0x159026ce0 <line:7:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x159026cc8 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x159026c80 <col:7, col:20> '<dependent type>' contains-errors lvalue .p
    | |     `-RecoveryExpr 0x159026c60 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x159027038 <col:23, line:12:2>
    |   |-IfStmt 0x159026f58 <line:8:3, line:9:25>
    |   | |-DeclRefExpr 0x159026d10 <line:8:7> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'
    |   | `-ReturnStmt 0x159026f48 <line:9:4, col:25>
    |   |   `-CallExpr 0x159026f20 <col:11, col:25> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x159026e40 <col:11> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'
    |   |     `-UnaryOperator 0x159026f08 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x159026ef0 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x159026ed0 <col:20> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x159026fd0 <line:10:3, col:24> 'struct soc_device_attribute *' '='
    |   | |-DeclRefExpr 0x159026f78 <col:3> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'
    |   | `-ImplicitCastExpr 0x159026fb8 <col:24> 'struct soc_device_attribute *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x159026f98 <col:24> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'
    |   `-ReturnStmt 0x159027028 <line:11:3, col:10>
    |     `-RecoveryExpr 0x159027008 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1590273f8 <line:15:2, line:18:2>
    | |-UnaryOperator 0x159027260 <line:15:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x159027248 <col:7> 'struct soc_device *' <LValueToRValue>
    | |   `-DeclRefExpr 0x159027228 <col:7> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    | `-CompoundStmt 0x1590273d8 <col:16, line:18:2>
    |   |-BinaryOperator 0x159027350 <line:16:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x159027278 <col:3> 'int' lvalue Var 0x159026b38 'ret' 'int'
    |   | `-UnaryOperator 0x159027338 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x159027320 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x159027300 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1590273c0 <line:17:3, col:8> 'out1' 0x159027370
    |-BinaryOperator 0x15a008990 <line:20:2, col:67> 'const struct attribute_group **' contains-errors '='
    | |-DeclRefExpr 0x159027418 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    | `-CallExpr 0x15a008958 <col:20, col:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x159027518 <col:20> 'int ()' Function 0x159027460 'kcalloc' 'int ()'
    |   |-IntegerLiteral 0x159027538 <col:28> 'int' 3
    |   |-UnaryExprOrTypeTraitExpr 0x15a008918 <col:31, col:54> 'unsigned long' sizeof
    |   | `-ParenExpr 0x15a0088f8 <col:37, col:54> 'const struct attribute_group *' lvalue
    |   |   `-UnaryOperator 0x15a0088e0 <col:38, col:39> 'const struct attribute_group *' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x15a0088c8 <col:39> 'const struct attribute_group **' <LValueToRValue>
    |   |       `-DeclRefExpr 0x159027558 <col:39> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **' non_odr_use_unevaluated
    |   `-RecoveryExpr 0x15a008938 <col:57> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a008b80 <line:21:2, line:24:2>
    | |-UnaryOperator 0x15a0089e8 <line:21:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15a0089d0 <col:7> 'const struct attribute_group **' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a0089b0 <col:7> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    | `-CompoundStmt 0x15a008b60 <col:24, line:24:2>
    |   |-BinaryOperator 0x15a008ad8 <line:22:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15a008a00 <col:3> 'int' lvalue Var 0x159026b38 'ret' 'int'
    |   | `-UnaryOperator 0x15a008ac0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x15a008aa8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x15a008a88 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x15a008b48 <line:23:3, col:8> 'out2' 0x15a008af8
    |-BinaryOperator 0x15a008d50 <line:25:2, col:24> 'const struct attribute_group *' '='
    | |-ArraySubscriptExpr 0x15a008c80 <col:2, col:19> 'const struct attribute_group *' lvalue
    | | |-ImplicitCastExpr 0x15a008c68 <col:2> 'const struct attribute_group **' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a008ba0 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    | | `-IntegerLiteral 0x15a008bc0 <col:18> 'int' 0
    | `-ImplicitCastExpr 0x15a008d38 <col:23, col:24> 'const struct attribute_group *' <BitCast>
    |   `-UnaryOperator 0x15a008d20 <col:23, col:24> 'const struct attribute_group ***' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x15a008ca0 <col:24> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    |-BinaryOperator 0x15a008e48 <line:26:2, col:37> 'const struct attribute_group *' contains-errors '='
    | |-ArraySubscriptExpr 0x15a008dc8 <col:2, col:19> 'const struct attribute_group *' lvalue
    | | |-ImplicitCastExpr 0x15a008db0 <col:2> 'const struct attribute_group **' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a008d70 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    | | `-IntegerLiteral 0x15a008d90 <col:18> 'int' 1
    | `-RecoveryExpr 0x15a008e20 <col:23, col:37> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x15a008de8 <col:23> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'
    |-BinaryOperator 0x15a0091a0 <line:29:2, col:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x15a008e68 <col:2> 'int' lvalue Var 0x159026b38 'ret' 'int'
    | `-CallExpr 0x15a009160 <col:8, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15a008f68 <col:8> 'int ()' Function 0x15a008eb0 'ida_simple_get' 'int ()'
    |   |-UnaryOperator 0x15a009128 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x15a009108 <col:24> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x15a008fb8 <col:33> 'int' 0
    |   |-IntegerLiteral 0x15a008fd8 <col:36> 'int' 0
    |   `-RecoveryExpr 0x15a009140 <col:39> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a0092a0 <line:30:2, line:31:8>
    | |-BinaryOperator 0x15a009218 <line:30:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x15a009200 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a0091c0 <col:6> 'int' lvalue Var 0x159026b38 'ret' 'int'
    | | `-IntegerLiteral 0x15a0091e0 <col:12> 'int' 0
    | `-GotoStmt 0x15a009288 <line:31:3, col:8> 'out3' 0x15a009238
    |-BinaryOperator 0x15a009340 <line:32:2, col:25> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15a0092f8 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15a0092c0 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    | `-DeclRefExpr 0x15a009320 <col:25> 'int' lvalue Var 0x159026b38 'ret' 'int'
    |-BinaryOperator 0x15a0093e0 <line:34:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x15a009398 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15a009360 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    | `-DeclRefExpr 0x15a0093c0 <col:18> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'
    |-BinaryOperator 0x15a009570 <line:36:2, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a009508 <col:2, col:15> '<dependent type>' contains-errors lvalue .groups
    | | `-RecoveryExpr 0x15a0094e0 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a0094a8 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    | `-DeclRefExpr 0x15a009550 <col:24> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    |-CallExpr 0x159029280 <line:39:2, col:57> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a009718 <col:2> 'int ()' Function 0x15a009660 'dev_set_name' 'int ()'
    | |-UnaryOperator 0x15a009798 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x15a009770 <col:16, col:25> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a009738 <col:16> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    | |-StringLiteral 0x159029200 <col:30> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x159029258 <col:37, col:46> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x159029220 <col:37> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    |-BinaryOperator 0x159029478 <line:41:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x1590292b8 <col:2> 'int' lvalue Var 0x159026b38 'ret' 'int'
    | `-CallExpr 0x159029450 <col:8, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1590293b8 <col:8> 'int ()' Function 0x159029300 'device_register' 'int ()'
    |   `-UnaryOperator 0x159029438 <col:24, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x159029410 <col:25, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1590293d8 <col:25> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    |-IfStmt 0x159029780 <line:42:2, line:45:2>
    | |-ImplicitCastExpr 0x1590294b8 <line:42:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x159029498 <col:6> 'int' lvalue Var 0x159026b38 'ret' 'int'
    | `-CompoundStmt 0x159029760 <col:11, line:45:2>
    |   |-CallExpr 0x159029648 <line:43:3, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1590295b0 <col:3> 'int ()' Function 0x1590294f8 'put_device' 'int ()'
    |   | `-UnaryOperator 0x159029630 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x159029608 <col:15, col:24> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1590295d0 <col:15> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    |   `-ReturnStmt 0x159029750 <line:44:3, col:21>
    |     `-ImplicitCastExpr 0x159029738 <col:10, col:21> 'struct soc_device *' <IntegralToPointer>
    |       `-CallExpr 0x1590296f8 <col:10, col:21> 'int'
    |         |-ImplicitCastExpr 0x1590296e0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x159029670 <col:10> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'
    |         `-ImplicitCastExpr 0x159029720 <col:18> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x159029690 <col:18> 'int' lvalue Var 0x159026b38 'ret' 'int'
    |-ReturnStmt 0x1590297d8 <line:47:2, col:9>
    | `-ImplicitCastExpr 0x1590297c0 <col:9> 'struct soc_device *' <LValueToRValue>
    |   `-DeclRefExpr 0x1590297a0 <col:9> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    |-LabelStmt 0x159029960 <line:49:1, line:50:23> 'out3'
    | `-CallExpr 0x159029920 <col:2, col:23> 'int'
    |   |-ImplicitCastExpr 0x159029908 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1590298c8 <col:2> 'int ()' Function 0x159029810 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x159029948 <col:8> 'const struct attribute_group **' <LValueToRValue>
    |     `-DeclRefExpr 0x1590298e8 <col:8> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'
    |-LabelStmt 0x159029a18 <line:51:1, line:52:15> 'out2'
    | `-CallExpr 0x1590299d8 <col:2, col:15> 'int'
    |   |-ImplicitCastExpr 0x1590299c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x159029980 <col:2> 'int ()' Function 0x159029810 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x159029a00 <col:8> 'struct soc_device *' <LValueToRValue>
    |     `-DeclRefExpr 0x1590299a0 <col:8> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'
    `-LabelStmt 0x159029af8 <line:53:1, line:54:20> 'out1'
      `-ReturnStmt 0x159029ae8 <col:2, col:20>
        `-ImplicitCastExpr 0x159029ad0 <col:9, col:20> 'struct soc_device *' <IntegralToPointer>
          `-CallExpr 0x159029a90 <col:9, col:20> 'int'
            |-ImplicitCastExpr 0x159029a78 <col:9> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x159029a38 <col:9> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'
            `-ImplicitCastExpr 0x159029ab8 <col:17> 'int' <LValueToRValue>
              `-DeclRefExpr 0x159029a58 <col:17> 'int' lvalue Var 0x159026b38 'ret' 'int'
