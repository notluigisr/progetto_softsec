`-FunctionDecl 0x159928348  line:1:1 invalid is_all_code_len_1_items 'int (int, int *)'
  |-ParmVarDecl 0x1599280d8 <col:25, col:29> col:29 used n 'int'
  |-ParmVarDecl 0x159928220 <col:32, col:59> col:53 referenced invalid items 'int *'
  `-CompoundStmt 0x159940a80 <line:2:1, line:11:1>
    |-DeclStmt 0x159928480 <line:3:3, col:8>
    | `-VarDecl 0x159928418 <col:3, col:7> col:7 used i 'int'
    |-ForStmt 0x159940a18 <line:5:3, line:8:3>
    | |-BinaryOperator 0x1599284d8 <line:5:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x159928498 <col:8> 'int' lvalue Var 0x159928418 'i' 'int'
    | | `-IntegerLiteral 0x1599284b8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x159928568 <col:15, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x159928538 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1599284f8 <col:15> 'int' lvalue Var 0x159928418 'i' 'int'
    | | `-ImplicitCastExpr 0x159928550 <col:19> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x159928518 <col:19> 'int' lvalue ParmVar 0x1599280d8 'n' 'int'
    | |-UnaryOperator 0x1599285a8 <col:22, col:23> 'int' postfix '++'
    | | `-DeclRefExpr 0x159928588 <col:22> 'int' lvalue Var 0x159928418 'i' 'int'
    | `-CompoundStmt 0x159940a00 <col:27, line:8:3>
    |   `-IfStmt 0x1599287d0 <line:7:5, col:37>
    |     |-BinaryOperator 0x159928780 <col:9, col:27> 'int' contains-errors '!='
    |     | |-CXXDependentScopeMemberExpr 0x159928738 <col:9, col:15> '<dependent type>' contains-errors lvalue ->code_len
    |     | | `-RecoveryExpr 0x159928718 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x1599286b8 <col:27> 'int' 1
    |     `-ReturnStmt 0x1599287c0 <col:30, col:37>
    |       `-IntegerLiteral 0x1599287a0 <col:37> 'int' 0
    `-ReturnStmt 0x159940a70 <line:10:3, col:10>
      `-IntegerLiteral 0x159940a50 <col:10> 'int' 1
