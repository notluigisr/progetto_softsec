`-FunctionDecl 0x131827568  line:1:1 invalid ast_for_funcdef_impl 'int (struct compiling *, const int *, int *, int)'
  |-ParmVarDecl 0x13180e248 <col:22, col:40> col:40 used c 'struct compiling *'
  |-ParmVarDecl 0x13180e2e0 <col:43, col:55> col:55 invalid n0 'const int *'
  |-ParmVarDecl 0x13180e398 <line:2:22, col:32> col:32 invalid decorator_seq 'int *'
  |-ParmVarDecl 0x131827418 <col:47, col:52> col:52 invalid is_async 'int'
  `-CompoundStmt 0x132809828 <line:3:1, line:40:1>
    |-DeclStmt 0x131827910 <line:5:5, col:56>
    | `-VarDecl 0x131827648 <col:5, col:24> col:24 invalid n 'const int *const'
    |-DeclStmt 0x1318279e0 <line:10:5, col:19>
    | `-VarDecl 0x131827958 <col:5, col:18> col:9 used name_i 'int' cinit
    |   `-IntegerLiteral 0x1318279c0 <col:18> 'int' 1
    |-DeclStmt 0x131827b10 <line:11:5, col:35>
    | |-VarDecl 0x131827a10 <col:5, col:9> col:9 used end_lineno 'int'
    | `-VarDecl 0x131827a90 <col:5, col:21> col:21 used end_col_offset 'int'
    |-CallExpr 0x131827cb0 <line:13:5, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131827c08 <col:5> 'int ()' Function 0x131827b50 'REQ' 'int ()'
    | |-RecoveryExpr 0x131827c28 <col:9> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x131827c90 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131827f78 <line:16:5, line:17:16>
    | |-UnaryOperator 0x131827f18 <line:16:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x131827f00 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x131827ee0 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x131827f68 <line:17:9, col:16>
    |   `-RecoveryExpr 0x131827f48 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x131828268 <line:18:5, line:19:16>
    | |-CallExpr 0x1318281e0 <line:18:9, col:52> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x131828078 <col:9> 'int ()' Function 0x131827fc0 'forbidden_name' 'int ()'
    | | |-DeclRefExpr 0x131828098 <col:24> 'struct compiling *' lvalue ParmVar 0x13180e248 'c' 'struct compiling *'
    | | |-RecoveryExpr 0x1318281c0 <col:27> '<dependent type>' contains-errors lvalue
    | | |-CallExpr 0x131828130 <col:33, col:48> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1318280d0 <col:33> 'int ()' Function 0x131827778 'CHILD' 'int ()'
    | | | |-RecoveryExpr 0x1318280f0 <col:39> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x131828110 <col:42> 'int' lvalue Var 0x131827958 'name_i' 'int'
    | | `-IntegerLiteral 0x131828160 <col:51> 'int' 0
    | `-ReturnStmt 0x131828258 <line:19:9, col:16>
    |   `-RecoveryExpr 0x131828238 <col:16> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x132808e08 <line:23:5, line:28:5>
      |-RecoveryExpr 0x132808b08 <line:23:9, col:37> '_Bool' contains-errors
      `-CompoundStmt 0x132808df0 <col:45, line:28:5>
        `-CompoundAssignOperator 0x132808dc0 <line:27:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          |-DeclRefExpr 0x132808d80 <col:9> 'int' lvalue Var 0x131827958 'name_i' 'int'
          `-IntegerLiteral 0x132808da0 <col:19> 'int' 2
