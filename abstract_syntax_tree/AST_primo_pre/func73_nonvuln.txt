`-FunctionDecl 0x128928238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x128928158 <col:8> col:8 Http1ServerConnectionImplTest 'int'
  |-ParmVarDecl 0x1289280d8 <col:39> col:39 HeaderMutateEmbeddedNul 'int'
  `-CompoundStmt 0x12892af80 <col:64, line:20:1>
    `-ForStmt 0x12892af48 <line:4:3, line:19:3>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x128928550 <line:4:22, col:45> 'int' contains-errors '<'
      | |-RecoveryExpr 0x1289284a8 <col:22> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x128928530 <col:26, col:45> '<dependent type>' contains-errors
      |   `-CXXDependentScopeMemberExpr 0x1289284e8 <col:26, col:40> '<dependent type>' contains-errors lvalue .size
      |     `-RecoveryExpr 0x1289284c8 <col:26> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x1289285c0 <col:48, col:50> '<dependent type>' contains-errors prefix '++' cannot overflow
      | `-RecoveryExpr 0x1289285a0 <col:50> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12892af10 <col:53, line:19:3>
        |-CallExpr 0x128928758 <line:5:5, col:16> 'int'
        | `-ImplicitCastExpr 0x128928740 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |   `-DeclRefExpr 0x1289286f0 <col:5> 'int ()' Function 0x128928638 'initialize' 'int ()'
        |-CallExpr 0x12892a780 <line:10:5, col:73> '<dependent type>' contains-errors
        | |-CXXDependentScopeMemberExpr 0x12892a6f0 <col:5, col:46> '<dependent type>' contains-errors lvalue .WillOnce
        | | `-CallExpr 0x12892a6c0 <col:5, col:44> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x12892a2b8 <col:5> 'int ()' Function 0x12892a200 'EXPECT_CALL' 'int ()'
        | |   |-RecoveryExpr 0x12892a630 <col:17> '<dependent type>' contains-errors lvalue
        | |   `-CallExpr 0x12892a690 <col:29, col:43> '<dependent type>' contains-errors
        | |     |-DeclRefExpr 0x12892a3d0 <col:29> 'int ()' Function 0x12892a318 'newStream' 'int ()'
        | |     |-RecoveryExpr 0x12892a650 <col:39> '<dependent type>' contains-errors lvalue
        | |     `-RecoveryExpr 0x12892a670 <col:42> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x12892a758 <col:55, col:72> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12892a5a8 <col:55> 'int ()' Function 0x12892a4f0 'ReturnRef' 'int ()'
        |   `-RecoveryExpr 0x12892a738 <col:65> '<dependent type>' contains-errors lvalue
        |-DeclStmt 0x12892a948 <line:15:5, col:43>
        | `-VarDecl 0x12892a8e0 <col:5, col:10> col:10 used status 'int' auto
        |-CallExpr 0x12892aac8 <line:16:5, col:29> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12892aa40 <col:5> 'int ()' Function 0x12892a988 'EXPECT_FALSE' 'int ()'
        | `-CallExpr 0x12892aaa8 <col:18, col:28> '<dependent type>' contains-errors
        |   `-RecoveryExpr 0x12892aa80 <col:18, col:25> '<dependent type>' contains-errors lvalue
        |     `-DeclRefExpr 0x12892aa60 <col:18> 'int' lvalue Var 0x12892a8e0 'status' 'int'
        `-CallExpr 0x12892ad80 <line:17:5, col:45> 'int'
          |-ImplicitCastExpr 0x12892ad68 <col:5> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12892abd0 <col:5> 'int ()' Function 0x12892ab18 'EXPECT_TRUE' 'int ()'
          `-CallExpr 0x12892ad28 <col:17, col:44> 'int'
            |-ImplicitCastExpr 0x12892ad10 <col:17> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x12892acd0 <col:17> 'int ()' Function 0x12892ac18 'isCodecProtocolError' 'int ()'
            `-ImplicitCastExpr 0x12892ad50 <col:38> 'int' <LValueToRValue>
              `-DeclRefExpr 0x12892acf0 <col:38> 'int' lvalue Var 0x12892a8e0 'status' 'int'
