`-FunctionDecl 0x12f033398  line:1:13 Sys_TempPath 'const char *(void)'
  `-CompoundStmt 0x12f057ad0 <line:2:1, line:9:1>
    |-DeclStmt 0x12f0577a0 <line:3:2, col:38>
    | `-VarDecl 0x12f0334a0 <col:2, col:37> col:14 used TMPDIR 'const char *' cinit
    |   `-ImplicitCastExpr 0x12f033738 <col:23, col:37> 'const char *' <IntegralToPointer>
    |     `-CallExpr 0x12f0336f8 <col:23, col:37> 'int'
    |       |-ImplicitCastExpr 0x12f0336e0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12f033630 <col:23> 'int ()' Function 0x12f033578 'getenv' 'int ()'
    |       `-ImplicitCastExpr 0x12f033720 <col:31> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x12f033690 <col:31> 'char[4]' lvalue "STR"
    `-IfStmt 0x12f057aa0 <line:5:2, line:8:10> has_else
      |-BinaryOperator 0x12f0579d8 <line:5:6, col:39> 'int' contains-errors '||'
      | |-BinaryOperator 0x12f057930 <col:6, col:16> 'int' contains-errors '=='
      | | |-DeclRefExpr 0x12f0577b8 <col:6> 'const char *' lvalue Var 0x12f0334a0 'TMPDIR' 'const char *'
      | | `-RecoveryExpr 0x12f057910 <col:16> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x12f0579b8 <col:24, col:39> 'int' '=='
      |   |-ImplicitCastExpr 0x12f0579a0 <col:24, col:34> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x12f057988 <col:24, col:34> 'char' <LValueToRValue>
      |   |   `-ArraySubscriptExpr 0x12f057968 <col:24, col:34> 'const char' lvalue
      |   |     |-ImplicitCastExpr 0x12f057950 <col:24> 'const char *' <LValueToRValue>
      |   |     | `-DeclRefExpr 0x12f057810 <col:24> 'const char *' lvalue Var 0x12f0334a0 'TMPDIR' 'const char *'
      |   |     `-IntegerLiteral 0x12f057830 <col:32> 'int' 0
      |   `-CharacterLiteral 0x12f057888 <col:39> 'int' 0
      |-ReturnStmt 0x12f057a48 <line:6:3, col:10>
      | `-ImplicitCastExpr 0x12f057a30 <col:10> 'const char *' <NoOp>
      |   `-ImplicitCastExpr 0x12f057a18 <col:10> 'char *' <ArrayToPointerDecay>
      |     `-StringLiteral 0x12f0579f8 <col:10> 'char[4]' lvalue "STR"
      `-ReturnStmt 0x12f057a90 <line:8:3, col:10>
        `-ImplicitCastExpr 0x12f057a78 <col:10> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x12f057a58 <col:10> 'const char *' lvalue Var 0x12f0334a0 'TMPDIR' 'const char *'
