`-FunctionDecl 0x14f128288  line:1:14 invalid lookup_cert_match 'int *(int *, int *)' static
  |-ParmVarDecl 0x14f128128 <col:32, col:48> col:48 invalid ctx 'int *'
  |-ParmVarDecl 0x14f1281a8 <col:53, col:59> col:59 invalid x 'int *'
  `-CompoundStmt 0x14f142170 <line:2:1, line:21:1>
    |-BinaryOperator 0x14f1285a0 <line:3:5, col:21> '<dependent type>' contains-errors '*'
    | |-CallExpr 0x14f128558 <col:5, col:18> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14f1284a0 <col:5> 'int ()' Function 0x14f1283e8 'STACK_OF' 'int ()'
    | | `-RecoveryExpr 0x14f128538 <col:14> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x14f128580 <col:21> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14f128670 <line:5:5, col:10>
    | `-VarDecl 0x14f128608 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14f141990 <line:8:5, line:9:16>
    | |-BinaryOperator 0x14f141928 <line:8:9, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14f1418e8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14f141908 <col:18> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14f141980 <line:9:9, col:16>
    |   `-RecoveryExpr 0x14f141960 <col:16> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x14f141f18 <line:11:5, line:16:5>
      |-BinaryOperator 0x14f1419f0 <line:11:10, col:14> 'int' '='
      | |-DeclRefExpr 0x14f1419b0 <col:10> 'int' lvalue Var 0x14f128608 'i' 'int'
      | `-IntegerLiteral 0x14f1419d0 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14f141bd8 <col:17, col:38> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14f141a10 <col:17> 'int' lvalue Var 0x14f128608 'i' 'int'
      | `-CallExpr 0x14f141bb0 <col:21, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x14f141b10 <col:21> 'int ()' Function 0x14f141a58 'sk_X509_num' 'int ()'
      |   `-RecoveryExpr 0x14f141b90 <col:33> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14f141c18 <col:41, col:42> 'int' postfix '++'
      | `-DeclRefExpr 0x14f141bf8 <col:41> 'int' lvalue Var 0x14f128608 'i' 'int'
      `-CompoundStmt 0x14f141f00 <col:46, line:16:5>
        `-IfStmt 0x14f141ee0 <line:13:9, line:14:13>
          |-RecoveryExpr 0x14f141eb8 <line:13:13, col:30> '_Bool' contains-errors
          `-BreakStmt 0x14f141ed8 <line:14:13>
