`-FunctionDecl 0x147928310  line:1:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
  |-ParmVarDecl 0x147928128 <col:20, col:30> col:30 referenced invalid r 'int *'
  |-ParmVarDecl 0x1479281a8 <col:33, col:43> col:43 invalid a 'int *'
  |-ParmVarDecl 0x147928228 <col:46, col:56> col:56 invalid b 'int *'
  `-CompoundStmt 0x150009630 <line:2:2, line:7:2>
    |-BinaryOperator 0x147928798 <line:3:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x147928450 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x147928438 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1479283f0 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1479283d0 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x147928418 <col:4> 'int' 4
    | `-CallExpr 0x147928758 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1479285d0 <col:7> 'int ()' Function 0x147928518 'bn_mul_words' 'int ()'
    |   |-UnaryOperator 0x147928688 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x147928668 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x147928648 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x147928630 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1479285f0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x147928610 <col:28> 'int' 0
    |   |-RecoveryExpr 0x1479286a0 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1479286c0 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x147928738 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x147928720 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1479286e0 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x147928700 <col:38> 'int' 0
    |-BinaryOperator 0x150009100 <line:4:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x150008e38 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x150008e20 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x1479287d8 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x1479287b8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x150008e00 <col:4> 'int' 5
    | `-CallExpr 0x1500090c0 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150008f38 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x150008ff0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x150008fd0 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x150008fb0 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x150008f98 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x150008f58 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x150008f78 <col:28> 'int' 1
    |   |-RecoveryExpr 0x150009008 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x150009028 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x1500090a0 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x150009088 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x150009048 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x150009068 <col:38> 'int' 1
    |-BinaryOperator 0x150009388 <line:5:2, col:40> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x1500091a0 <col:2, col:5> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x150009188 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x150009140 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x150009120 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
    | | `-IntegerLiteral 0x150009168 <col:4> 'int' 6
    | `-CallExpr 0x150009348 <col:7, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1500091c0 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
    |   |-UnaryOperator 0x150009278 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ParenExpr 0x150009258 <col:25, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-ArraySubscriptExpr 0x150009238 <col:26, col:29> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x150009220 <col:26> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x1500091e0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x150009200 <col:28> 'int' 2
    |   |-RecoveryExpr 0x150009290 <col:32> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x1500092b0 <col:34> 'int' 4
    |   `-ArraySubscriptExpr 0x150009328 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x150009310 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1500092d0 <col:36> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1500092f0 <col:38> 'int' 2
    `-BinaryOperator 0x150009610 <line:6:2, col:40> '<dependent type>' contains-errors '='
      |-ArraySubscriptExpr 0x150009428 <col:2, col:5> '<dependent type>' contains-errors lvalue
      | |-ImplicitCastExpr 0x150009410 <col:2> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x1500093c8 <col:2> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x1500093a8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'
      | `-IntegerLiteral 0x1500093f0 <col:4> 'int' 7
      `-CallExpr 0x1500095d0 <col:7, col:40> '<dependent type>' contains-errors
        |-DeclRefExpr 0x150009448 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'
        |-UnaryOperator 0x150009500 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
        | `-ParenExpr 0x1500094e0 <col:25, col:30> '<dependent type>' contains-errors lvalue
        |   `-ArraySubscriptExpr 0x1500094c0 <col:26, col:29> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x1500094a8 <col:26> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-RecoveryExpr 0x150009468 <col:26> '<dependent type>' contains-errors lvalue
        |     `-IntegerLiteral 0x150009488 <col:28> 'int' 3
        |-RecoveryExpr 0x150009518 <col:32> '<dependent type>' contains-errors lvalue
        |-IntegerLiteral 0x150009538 <col:34> 'int' 4
        `-ArraySubscriptExpr 0x1500095b0 <col:36, col:39> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x150009598 <col:36> '<dependent type>' contains-errors <LValueToRValue>
          | `-RecoveryExpr 0x150009558 <col:36> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x150009578 <col:38> 'int' 3
