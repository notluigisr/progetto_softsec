`-FunctionDecl 0x14d00de88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x14d00dd28 <col:22, col:37> col:37 referenced invalid context 'int *'
  |-ParmVarDecl 0x14d00dda8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x14d029fa0 <col:64, line:65:1>
    |-CallExpr 0x14d00e248 <line:2:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d00e0a0 <col:3> 'int ()' Function 0x14d00dfe8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14d00e0c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14d00e200 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d00e1c0 <col:30> 'int ()' Function 0x14d00e108 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x14d00e1e0 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14d00e228 <col:47> 'int' 2
    |-CallExpr 0x14d027448 <line:3:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d00e280 <col:3> 'int ()' Function 0x14d00dfe8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x14d00e2a0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x14d027400 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d00e3a0 <col:30> 'int ()' Function 0x14d00e2e8 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x14d00e3c0 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14d027428 <col:48> 'int' 1
    |-DeclStmt 0x14d027518 <line:5:3, line:6:70>
    | `-VarDecl 0x14d027498 <line:5:3, col:15> col:15 used params 'const int *' auto
    |-DeclStmt 0x14d027740 <line:7:3, col:68>
    | `-VarDecl 0x14d027548 <col:3, col:23> col:23 invalid input 'const int *'
    |-DeclStmt 0x14d027888 <line:8:3, col:75>
    | `-VarDecl 0x14d027770 <col:3, col:23> col:23 invalid positions 'const int *'
    |-SwitchStmt 0x14d027ac8 <line:11:3, line:20:3>
    | |-ImplicitCastExpr 0x14d027ab0 <line:11:11, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x14d027a68 <col:11, col:22> '<dependent type>' contains-errors lvalue ->type
    | |   `-RecoveryExpr 0x14d027a48 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d027e28 <col:28, line:20:3>
    |   |-BreakStmt 0x14d027b20 <line:14:7>
    |   `-DefaultStmt 0x14d027e08 <line:15:5, line:18:45>
    |     `-CallExpr 0x14d027dd0 <line:16:7, line:18:45> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x14d027b70 <line:16:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x14d027b48 <col:7> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14d027b28 <col:7> 'int *' lvalue ParmVar 0x14d00dd28 'context' 'int *'
    |       |-RecoveryExpr 0x14d027bb8 <line:17:11> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x14d027c20 <col:20> 'char[4]' lvalue "STR"
    |       `-CallExpr 0x14d027da8 <line:18:11, col:44> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14d027d20 <col:11> 'int ()' Function 0x14d027c68 'TfLiteTypeGetName' 'int ()'
    |         `-CXXDependentScopeMemberExpr 0x14d027d60 <col:29, col:40> '<dependent type>' contains-errors lvalue ->type
    |           `-RecoveryExpr 0x14d027d40 <col:29> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x14d027f30 <line:26:3, line:43:3>
    | |-ImplicitCastExpr 0x14d027f18 <line:26:11, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x14d027ed0 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type
    | |   `-RecoveryExpr 0x14d027eb0 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d028338 <col:24, line:43:3>
    |   |-BreakStmt 0x14d027f58 <line:34:7>
    |   |-CompoundStmt 0x14d028140 <line:35:25, line:38:5>
    |   | `-CallExpr 0x14d028108 <line:37:7, col:57> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14d027f60 <col:7> 'int ()' Function 0x14d00dfe8 'TF_LITE_ENSURE_EQ' 'int ()'
    |   |   |-RecoveryExpr 0x14d027f80 <col:25> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x14d0280c0 <col:34, col:53> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d028080 <col:34> 'int ()' Function 0x14d027fc8 'NumDimensions' 'int ()'
    |   |   | `-RecoveryExpr 0x14d0280a0 <col:48> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x14d0280e8 <col:56> 'int' 1
    |   |-BreakStmt 0x14d028158 <line:38:7>
    |   `-DefaultStmt 0x14d028318 <line:39:5, line:41:58>
    |     `-CallExpr 0x14d0282e0 <line:40:7, line:41:58> '<dependent type>' contains-errors
    |       |-CXXDependentScopeMemberExpr 0x14d0281a8 <line:40:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
    |       | `-RecoveryExpr 0x14d028180 <col:7> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14d028160 <col:7> 'int *' lvalue ParmVar 0x14d00dd28 'context' 'int *'
    |       |-RecoveryExpr 0x14d0281f0 <col:28> '<dependent type>' contains-errors lvalue
    |       |-StringLiteral 0x14d028210 <col:37> 'char[4]' lvalue "STR"
    |       `-CallExpr 0x14d0282b8 <line:41:28, col:57> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14d028230 <col:28> 'int ()' Function 0x14d027c68 'TfLiteTypeGetName' 'int ()'
    |         `-CXXDependentScopeMemberExpr 0x14d028270 <col:46, col:53> '<dependent type>' contains-errors lvalue ->type
    |           `-RecoveryExpr 0x14d028250 <col:46> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14d028460 <line:45:3, col:26>
    | `-VarDecl 0x14d028380 <col:3, col:22> col:7 used axis 'int' cinit
    |   `-RecoveryExpr 0x14d028438 <col:14, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14d028400 <col:14> 'const int *' lvalue Var 0x14d027498 'params' 'const int *'
    |-IfStmt 0x14d0285c0 <line:46:3, line:48:3>
    | |-BinaryOperator 0x14d0284d0 <line:46:7, col:14> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14d0284b8 <col:7> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14d028478 <col:7> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
    | | `-IntegerLiteral 0x14d028498 <col:14> 'int' 0
    | `-CompoundStmt 0x14d0285a8 <col:17, line:48:3>
    |   `-CompoundAssignOperator 0x14d028578 <line:47:5, col:32> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x14d0284f0 <col:5> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
    |     `-CallExpr 0x14d028550 <col:13, col:32> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14d028510 <col:13> 'int ()' Function 0x14d027fc8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x14d028530 <col:27> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d028840 <line:49:3, col:67> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d0286c0 <col:3> 'int ()' Function 0x14d028608 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x14d0286e0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14d028820 <col:27, col:66> 'int' contains-errors '&&'
    |   |-BinaryOperator 0x14d028758 <col:27, col:32> 'int' contains-errors '<='
    |   | |-IntegerLiteral 0x14d028700 <col:27> 'int' 0
    |   | `-ImplicitCastExpr 0x14d028740 <col:32> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d028720 <col:32> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
    |   `-BinaryOperator 0x14d028800 <col:40, col:66> 'int' contains-errors '<'
    |     |-DeclRefExpr 0x14d028778 <col:40> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
    |     `-CallExpr 0x14d0287d8 <col:47, col:66> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14d028798 <col:47> 'int ()' Function 0x14d027fc8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x14d0287b8 <col:61> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14d028a20 <line:51:3, line:52:58>
    | `-VarDecl 0x14d028888 <line:51:3, line:52:57> line:51:13 used num_dimensions 'const int' cinit
    |   `-BinaryOperator 0x14d028a00 <line:52:7, col:57> '<dependent type>' contains-errors '-'
    |     |-BinaryOperator 0x14d0289c0 <col:7, col:53> '<dependent type>' contains-errors '+'
    |     | |-CallExpr 0x14d028930 <col:7, col:26> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14d0288f0 <col:7> 'int ()' Function 0x14d027fc8 'NumDimensions' 'int ()'
    |     | | `-RecoveryExpr 0x14d028910 <col:21> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x14d028998 <col:30, col:53> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14d028958 <col:30> 'int ()' Function 0x14d027fc8 'NumDimensions' 'int ()'
    |     |   `-RecoveryExpr 0x14d028978 <col:44> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14d0289e0 <col:57> 'int' 1
    |-DeclStmt 0x14d028c88 <line:54:3, col:23>
    | `-VarDecl 0x14d028c00 <col:3, col:22> col:7 used output_index 'int' cinit
    |   `-IntegerLiteral 0x14d028c68 <col:22> 'int' 0
    |-ForStmt 0x14d028f88 <line:55:3, line:57:3>
    | |-DeclStmt 0x14d028d40 <line:55:8, col:17>
    | | `-VarDecl 0x14d028cb8 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x14d028d20 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d028dc8 <col:19, col:23> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14d028d98 <col:19> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d028d58 <col:19> 'int' lvalue Var 0x14d028cb8 'i' 'int'
    | | `-ImplicitCastExpr 0x14d028db0 <col:23> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x14d028d78 <col:23> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
    | |-UnaryOperator 0x14d028e08 <col:29, col:31> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d028de8 <col:31> 'int' lvalue Var 0x14d028cb8 'i' 'int'
    | `-CompoundStmt 0x14d028f78 <col:34, line:57:3>
    |-ForStmt 0x14d029308 <line:58:3, line:60:3>
    | |-DeclStmt 0x14d029060 <line:58:8, col:17>
    | | `-VarDecl 0x14d028fd8 <col:8, col:16> col:12 used i 'int' cinit
    | |   `-IntegerLiteral 0x14d029040 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d029148 <col:19, col:40> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d029078 <col:19> 'int' lvalue Var 0x14d028fd8 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x14d029100 <col:23, col:40> '<dependent type>' contains-errors lvalue ->size
    | |   `-CXXDependentScopeMemberExpr 0x14d0290b8 <col:23, col:34> '<dependent type>' contains-errors lvalue ->dims
    | |     `-RecoveryExpr 0x14d029098 <col:23> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14d029188 <col:46, col:48> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d029168 <col:48> 'int' lvalue Var 0x14d028fd8 'i' 'int'
    | `-CompoundStmt 0x14d0292f8 <col:51, line:60:3>
    `-ForStmt 0x14d029ee0 <line:61:3, line:63:3>
      |-DeclStmt 0x14d029c38 <line:61:8, col:24>
      | `-VarDecl 0x14d029358 <col:8, col:23> col:12 used i 'int' cinit
      |   `-BinaryOperator 0x14d029c18 <col:16, col:23> 'int' contains-errors '+'
      |     |-ImplicitCastExpr 0x14d029c00 <col:16> 'int' contains-errors <LValueToRValue>
      |     | `-DeclRefExpr 0x14d0293c0 <col:16> 'int' contains-errors lvalue Var 0x14d028380 'axis' 'int'
      |     `-IntegerLiteral 0x14d0293e0 <col:23> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x14d029d20 <col:26, col:43> 'int' contains-errors '<'
      | |-DeclRefExpr 0x14d029c50 <col:26> 'int' contains-errors lvalue Var 0x14d029358 'i' 'int'
      | `-CXXDependentScopeMemberExpr 0x14d029cd8 <col:30, col:43> '<dependent type>' contains-errors lvalue ->size
      |   `-CXXDependentScopeMemberExpr 0x14d029c90 <col:30, col:37> '<dependent type>' contains-errors lvalue ->dims
      |     `-RecoveryExpr 0x14d029c70 <col:30> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x14d029d60 <col:49, col:51> 'int' contains-errors prefix '++'
      | `-DeclRefExpr 0x14d029d40 <col:51> 'int' contains-errors lvalue Var 0x14d029358 'i' 'int'
      `-CompoundStmt 0x14d029ed0 <col:54, line:63:3>
