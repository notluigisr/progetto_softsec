`-FunctionDecl 0x13f0309a8  line:1:1 __zzip_aligned4 'int (char *)'
  |-ParmVarDecl 0x13f0308d8 <col:17, col:23> col:23 used p 'char *'
  `-CompoundStmt 0x13f054fb0 <line:2:1, line:7:1>
    |-CompoundAssignOperator 0x13f030bb0 <line:4:5, col:23> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    | |-DeclRefExpr 0x13f030aa0 <col:5> 'char *' lvalue ParmVar 0x13f0308d8 'p' 'char *'
    | `-BinaryOperator 0x13f030b90 <col:10, col:23> 'long' '&'
    |   |-ParenExpr 0x13f030b38 <col:10, col:19> 'long'
    |   | `-CStyleCastExpr 0x13f030b10 <col:11, col:18> 'long' <PointerToIntegral>
    |   |   `-ImplicitCastExpr 0x13f030af8 <col:18> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |     `-DeclRefExpr 0x13f030ac0 <col:18> 'char *' lvalue ParmVar 0x13f0308d8 'p' 'char *'
    |   `-ImplicitCastExpr 0x13f030b78 <col:23> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x13f030b58 <col:23> 'int' 1
    |-CompoundAssignOperator 0x13f030cf0 <line:5:5, col:23> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    | |-DeclRefExpr 0x13f030be0 <col:5> 'char *' lvalue ParmVar 0x13f0308d8 'p' 'char *'
    | `-BinaryOperator 0x13f030cd0 <col:10, col:23> 'long' '&'
    |   |-ParenExpr 0x13f030c78 <col:10, col:19> 'long'
    |   | `-CStyleCastExpr 0x13f030c50 <col:11, col:18> 'long' <PointerToIntegral>
    |   |   `-ImplicitCastExpr 0x13f030c38 <col:18> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |     `-DeclRefExpr 0x13f030c00 <col:18> 'char *' lvalue ParmVar 0x13f0308d8 'p' 'char *'
    |   `-ImplicitCastExpr 0x13f030cb8 <col:23> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x13f030c98 <col:23> 'int' 2
    `-ReturnStmt 0x13f054fa0 <line:6:5, col:12>
      `-ImplicitCastExpr 0x13f030d58 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x13f030d40 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x13f030d20 <col:12> 'char *' lvalue ParmVar 0x13f0308d8 'p' 'char *'
