`-FunctionDecl 0x12900df18  line:1:1 invalid longlong_from_string_with_check 'int (int *, const char *, const char *)'
  |-ParmVarDecl 0x12900dd28 <col:33, col:47> col:47 invalid cs 'int *'
  |-ParmVarDecl 0x12900dda8 <col:51, col:63> col:63 used cptr 'const char *'
  |-ParmVarDecl 0x12900de28 <line:2:33, col:45> col:45 used end 'const char *'
  `-CompoundStmt 0x12980af68 <line:3:1, line:21:1>
    |-DeclStmt 0x12900e058 <line:4:3, col:10>
    | `-VarDecl 0x12900dff0 <col:3, col:7> col:7 used err 'int'
    |-DeclStmt 0x12900e168 <line:6:3, col:32>
    | `-VarDecl 0x12900e088 <col:3, col:29> col:9 used end_of_num 'char *' cinit
    |   `-CStyleCastExpr 0x12900e140 <col:21, col:29> 'char *' <NoOp>
    |     `-ImplicitCastExpr 0x12900e128 <col:29> 'const char *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x12900e0f0 <col:29> 'const char *' lvalue ParmVar 0x12900de28 'end' 'const char *'
    |-IfStmt 0x12980af00 <line:10:3, line:19:3>
    | |-BinaryOperator 0x12980ada0 <line:10:7, line:12:76> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x12980ac68 <line:10:7, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x12980ac50 <col:8, col:21> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x12980ac08 <col:8, col:21> '<dependent type>' contains-errors lvalue ->no_errors
    | | |     `-RecoveryExpr 0x12980abe8 <col:8> '<dependent type>' contains-errors lvalue
    | | `-ParenExpr 0x12980ad80 <line:11:7, line:12:76> 'int' contains-errors
    | |   `-BinaryOperator 0x12980ad60 <line:11:8, line:12:75> 'int' contains-errors '||'
    | |     |-BinaryOperator 0x12980ac98 <line:11:8, col:14> 'int' '>'
    | |     | |-ImplicitCastExpr 0x12980ac80 <col:8> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x12980a678 <col:8> 'int' lvalue Var 0x12900dff0 'err' 'int'
    | |     | `-IntegerLiteral 0x12980a698 <col:14> 'int' 0
    | |     `-ParenExpr 0x12980ad40 <line:12:8, col:75> 'int' contains-errors
    | |       `-BinaryOperator 0x12980ad20 <col:9, col:74> 'int' contains-errors '&&'
    | |         |-BinaryOperator 0x12980ad00 <col:9, col:16> 'int' '!='
    | |         | |-ImplicitCastExpr 0x12980acb8 <col:9> 'const char *' <LValueToRValue>
    | |         | | `-DeclRefExpr 0x12980a6f0 <col:9> 'const char *' lvalue ParmVar 0x12900de28 'end' 'const char *'
    | |         | `-ImplicitCastExpr 0x12980ace8 <col:16> 'const char *' <BitCast>
    | |         |   `-ImplicitCastExpr 0x12980acd0 <col:16> 'char *' <LValueToRValue>
    | |         |     `-DeclRefExpr 0x12980a710 <col:16> 'char *' lvalue Var 0x12900e088 'end_of_num' 'char *'
    | |         `-UnaryOperator 0x12980a9a8 <col:30, col:74> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |           `-CallExpr 0x12980a970 <col:31, col:74> '<dependent type>' contains-errors
    | |             |-DeclRefExpr 0x12980a8f0 <col:31> 'int ()' Function 0x12980a838 'check_if_only_end_space' 'int ()'
    | |             |-RecoveryExpr 0x12980a910 <col:55> '<dependent type>' contains-errors lvalue
    | |             |-DeclRefExpr 0x12980a930 <col:59> 'char *' lvalue Var 0x12900e088 'end_of_num' 'char *'
    | |             `-DeclRefExpr 0x12980a950 <col:71> 'const char *' lvalue ParmVar 0x12900de28 'end' 'const char *'
    | `-CompoundStmt 0x12980aef0 <line:13:3, line:19:3>
    `-ReturnStmt 0x12980af58 <line:20:3, col:10>
      `-RecoveryExpr 0x12980af38 <col:10> '<dependent type>' contains-errors lvalue
