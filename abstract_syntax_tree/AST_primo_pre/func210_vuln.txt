`-FunctionDecl 0x159128a88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x159128928 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x1591289a8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x159143d90 <col:64, line:40:1>
    |-DeclStmt 0x159128c78 <line:2:3, line:3:70>
    | `-VarDecl 0x159128b58 <line:2:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x159128f98 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x159128df0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x159128e10 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x159128f50 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x159128f10 <col:30> 'int ()' Function 0x159128e58 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x159128f30 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x159128f78 <col:47> 'int' 1
    |-CallExpr 0x159142188 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x159128fd0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x159142000 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x159142140 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x159142100 <col:30> 'int ()' Function 0x159142048 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x159142120 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x159142168 <col:48> 'int' 1
    |-DeclStmt 0x1591423d0 <line:8:3, col:68>
    | `-VarDecl 0x1591421d8 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x159142738 <line:11:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x159142590 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1591425b0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x1591426f0 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1591426b0 <col:30> 'int ()' Function 0x1591425f8 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x1591426d0 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x159142718 <col:52> 'int' 4
    |-DeclStmt 0x1591428b8 <line:13:3, col:32>
    | `-VarDecl 0x159142788 <col:3, col:28> col:8 used data_type 'int' auto cinit
    |   `-CXXDependentScopeMemberExpr 0x159142870 <col:20, col:28> '<dependent type>' contains-errors lvalue ->type
    |     `-RecoveryExpr 0x159142850 <col:20> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x159142cf8 <line:20:3, col:44>
    | `-VarDecl 0x159142c30 <col:3, col:34> col:13 used block_size 'const int' cinit
    |   `-RecoveryExpr 0x159142cd0 <col:26, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x159142c98 <col:26> 'int *' lvalue Var 0x159128b58 'params' 'int *'
    |-DeclStmt 0x159142e98 <line:21:3, col:48>
    | `-VarDecl 0x159142d28 <col:3, col:47> col:13 used input_height 'const int' cinit
    |   `-ArraySubscriptExpr 0x159142e78 <col:28, col:47> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x159142e60 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x159142df8 <col:28, col:41> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x159142db0 <col:28, col:35> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x159142d90 <col:28> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x159142e40 <col:46> 'int' 1
    |-DeclStmt 0x159143038 <line:22:3, col:47>
    | `-VarDecl 0x159142ec8 <col:3, col:46> col:13 used input_width 'const int' cinit
    |   `-ArraySubscriptExpr 0x159143018 <col:27, col:46> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x159143000 <col:27, col:40> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x159142f98 <col:27, col:40> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x159142f50 <col:27, col:34> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x159142f30 <col:27> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x159142fe0 <col:45> 'int' 2
    |-DeclStmt 0x1591431d8 <line:23:3, col:50>
    | `-VarDecl 0x159143068 <col:3, col:49> col:13 used input_channels 'const int' cinit
    |   `-ArraySubscriptExpr 0x1591431b8 <col:30, col:49> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1591431a0 <col:30, col:43> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x159143138 <col:30, col:43> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x1591430f0 <col:30, col:37> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x1591430d0 <col:30> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x159143180 <col:48> 'int' 3
    |-DeclStmt 0x159143300 <line:24:3, col:48>
    | `-VarDecl 0x159143208 <col:3, col:38> col:7 used output_height 'int' cinit
    |   `-BinaryOperator 0x1591432e0 <col:23, col:38> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x1591432b0 <col:23> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x159143270 <col:23> 'const int' contains-errors lvalue Var 0x159142d28 'input_height' 'const int'
    |     `-ImplicitCastExpr 0x1591432c8 <col:38> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x159143290 <col:38> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    |-DeclStmt 0x159143428 <line:25:3, col:46>
    | `-VarDecl 0x159143330 <col:3, col:36> col:7 used output_width 'int' cinit
    |   `-BinaryOperator 0x159143408 <col:22, col:36> 'int' contains-errors '*'
    |     |-ImplicitCastExpr 0x1591433d8 <col:22> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x159143398 <col:22> 'const int' contains-errors lvalue Var 0x159142ec8 'input_width' 'const int'
    |     `-ImplicitCastExpr 0x1591433f0 <col:36> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x1591433b8 <col:36> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    |-DeclStmt 0x1591435a8 <line:26:3, col:65>
    | `-VarDecl 0x159143458 <col:3, col:55> col:7 used output_channels 'int' cinit
    |   `-BinaryOperator 0x159143588 <col:25, col:55> 'int' contains-errors '/'
    |     |-BinaryOperator 0x159143530 <col:25, col:42> 'int' contains-errors '/'
    |     | |-ImplicitCastExpr 0x159143500 <col:25> 'int' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x1591434c0 <col:25> 'const int' contains-errors lvalue Var 0x159143068 'input_channels' 'const int'
    |     | `-ImplicitCastExpr 0x159143518 <col:42> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x1591434e0 <col:42> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    |     `-ImplicitCastExpr 0x159143570 <col:55> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x159143550 <col:55> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    |-CallExpr 0x1591436b0 <line:28:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1591435c0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x1591435e0 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x159143600 <col:30> 'const int' contains-errors lvalue Var 0x159142d28 'input_height' 'const int'
    | `-BinaryOperator 0x159143690 <col:44, col:60> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x159143660 <col:44> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x159143620 <col:44> 'int' contains-errors lvalue Var 0x159143208 'output_height' 'int'
    |   `-ImplicitCastExpr 0x159143678 <col:60> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x159143640 <col:60> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    |-CallExpr 0x1591437d8 <line:29:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1591436e8 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x159143708 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x159143728 <col:30> 'const int' contains-errors lvalue Var 0x159142ec8 'input_width' 'const int'
    | `-BinaryOperator 0x1591437b8 <col:43, col:58> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x159143788 <col:43> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x159143748 <col:43> 'int' contains-errors lvalue Var 0x159143330 'output_width' 'int'
    |   `-ImplicitCastExpr 0x1591437a0 <col:58> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x159143768 <col:58> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
    `-CallExpr 0x159143958 <line:30:3, line:31:62> '<dependent type>' contains-errors
      |-DeclRefExpr 0x159143810 <line:30:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'
      |-RecoveryExpr 0x159143830 <col:21> '<dependent type>' contains-errors lvalue
      |-DeclRefExpr 0x159143850 <col:30> 'const int' contains-errors lvalue Var 0x159143068 'input_channels' 'const int'
      `-BinaryOperator 0x159143938 <line:31:21, col:52> 'int' contains-errors '*'
        |-BinaryOperator 0x1591438e0 <col:21, col:39> 'int' contains-errors '*'
        | |-ImplicitCastExpr 0x1591438b0 <col:21> 'int' contains-errors <LValueToRValue>
        | | `-DeclRefExpr 0x159143870 <col:21> 'int' contains-errors lvalue Var 0x159143458 'output_channels' 'int'
        | `-ImplicitCastExpr 0x1591438c8 <col:39> 'int' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x159143890 <col:39> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
        `-ImplicitCastExpr 0x159143920 <col:52> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x159143900 <col:52> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'
