`-FunctionDecl 0x144029948  line:1:12 tc_ctl_action 'int (struct sk_buff *, struct nlmsghdr *)' static
  |-ParmVarDecl 0x1448bb248 <col:26, col:42> col:42 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x144029828 <col:47, col:64> col:64 used n 'struct nlmsghdr *'
  `-CompoundStmt 0x144031bf8 <line:2:1, line:44:1>
    |-DeclStmt 0x144029e10 <line:3:2, col:37>
    | |-RecordDecl 0x144029a48 <col:2, col:9> col:9 struct net
    | `-VarDecl 0x144029bb8 <col:2, col:36> col:14 used net 'struct net *' cinit
    |   `-CallExpr 0x144029dd0 <col:20, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x144029d50 <col:20> 'int ()' Function 0x144029c98 'sock_net' 'int ()'
    |     `-RecoveryExpr 0x144029da8 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x144029d70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x1448bb248 'skb' 'struct sk_buff *'
    |-DeclStmt 0x14402a078 <line:4:2, col:37>
    | |-RecordDecl 0x144029e28 <col:2, col:9> col:9 struct nlattr
    | `-VarDecl 0x144029ff8 <col:2, col:17> col:17 invalid tca 'struct nlattr *'
    |-DeclStmt 0x14402a1e8 <line:6:2, col:22>
    | |-VarDecl 0x14402a0a8 <col:2, col:12> col:6 used ret 'int' cinit
    | | `-IntegerLiteral 0x14402a110 <col:12> 'int' 0
    | `-VarDecl 0x14402a148 <col:2, col:21> col:15 used ovr 'int' cinit
    |   `-IntegerLiteral 0x14402a1b0 <col:21> 'int' 0
    |-IfStmt 0x14402a4b8 <line:8:2, line:9:11>
    | |-RecoveryExpr 0x14402a3f0 <line:8:6, col:64> '_Bool' contains-errors
    | `-ReturnStmt 0x14402a4a8 <line:9:3, col:11>
    |   `-UnaryOperator 0x14402a490 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14402a478 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14402a458 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x144031028 <line:12:2, line:13:10>
    | |-BinaryOperator 0x14402a7c0 <line:12:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x14402a7a8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14402a768 <col:6> 'int' lvalue Var 0x14402a0a8 'ret' 'int'
    | | `-IntegerLiteral 0x14402a788 <col:12> 'int' 0
    | `-ReturnStmt 0x144031018 <line:13:3, col:10>
    |   `-ImplicitCastExpr 0x144031000 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14402a7e0 <col:10> 'int' lvalue Var 0x14402a0a8 'ret' 'int'
    |-IfStmt 0x144031370 <line:15:2, line:18:2>
    | |-RecoveryExpr 0x144031098 <line:15:6, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x144031350 <col:32, line:18:2>
    |   |-CallExpr 0x144031268 <line:16:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x144031250 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x144031198 <col:3> 'int ()' Function 0x1440310e0 'pr_notice' 'int ()'
    |   | `-ImplicitCastExpr 0x144031290 <col:13> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x144031200 <col:13> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x144031340 <line:17:3, col:11>
    |     `-UnaryOperator 0x144031328 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x144031310 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x1440312f0 <col:11> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x144031408 <line:21:2, line:41:2>
    | |-ImplicitCastExpr 0x1440313f0 <line:21:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x1440313c8 <col:10, col:13> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x144031390 <col:10> 'struct nlmsghdr *' lvalue ParmVar 0x144029828 'n' 'struct nlmsghdr *'
    | `-CompoundStmt 0x144031b68 <col:25, line:41:2>
    |   |-IfStmt 0x144031528 <line:24:3, line:25:10>
    |   | |-RecoveryExpr 0x1440314a8 <line:24:7, col:24> '_Bool' contains-errors
    |   | `-BinaryOperator 0x144031508 <line:25:4, col:10> 'int' '='
    |   |   |-DeclRefExpr 0x1440314c8 <col:4> 'int' lvalue Var 0x14402a148 'ovr' 'int'
    |   |   `-IntegerLiteral 0x1440314e8 <col:10> 'int' 1
    |   |-LabelStmt 0x144031740 <line:26:1, col:7> 'replay'
    |   | `-NullStmt 0x1440316e8 <col:7>
    |   |-IfStmt 0x1440317b8 <line:28:3, line:29:9>
    |   | |-RecoveryExpr 0x144031780 <line:28:7, col:15> '_Bool' contains-errors
    |   | `-GotoStmt 0x1440317a0 <line:29:4, col:9> 'replay' 0x1440316f0
    |   |-BreakStmt 0x1440317d8 <line:30:3>
    |   |-BreakStmt 0x144031960 <line:34:3>
    |   |-BreakStmt 0x144031a08 <line:38:3>
    |   `-DefaultStmt 0x144031b48 <line:39:2, line:40:7>
    |     `-CallExpr 0x144031b28 <col:3, col:7> 'int'
    |       `-ImplicitCastExpr 0x144031b10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x144031af0 <col:3> 'int ()' Function 0x144031a38 'BUG' 'int ()'
    `-ReturnStmt 0x144031be8 <line:43:2, col:9>
      `-ImplicitCastExpr 0x144031bd0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x144031bb0 <col:9> 'int' lvalue Var 0x14402a0a8 'ret' 'int'
