`-FunctionDecl 0x141928280  line:1:13 invalid php_filter_strip 'void (int *, int)' static
  |-ParmVarDecl 0x141928128 <col:30, col:36> col:36 invalid value 'int *'
  |-ParmVarDecl 0x1419281a8 <col:43, col:53> col:53 invalid flags 'int'
  `-CompoundStmt 0x141944040 <line:2:1, line:29:1>
    |-DeclStmt 0x1419283f0 <line:3:2, col:20>
    | `-VarDecl 0x141928388 <col:2, col:17> col:17 used str 'unsigned char *'
    |-DeclStmt 0x141928520 <line:4:2, col:12>
    | |-VarDecl 0x141928420 <col:2, col:8> col:8 used i 'int'
    | `-VarDecl 0x1419284a0 <col:2, col:11> col:11 used c 'int'
    |-IfStmt 0x141928640 <line:8:2, line:10:2>
    | |-RecoveryExpr 0x1419285f8 <line:8:6, col:93> '_Bool' contains-errors
    | `-CompoundStmt 0x141928628 <col:96, line:10:2>
    |   `-ReturnStmt 0x141928618 <line:9:3>
    |-BinaryOperator 0x141941888 <line:12:2, col:41> 'unsigned char *' contains-errors '='
    | |-DeclRefExpr 0x141928660 <col:2> 'unsigned char *' lvalue Var 0x141928388 'str' 'unsigned char *'
    | `-CStyleCastExpr 0x141941860 <col:8, col:41> 'unsigned char *' contains-errors <Dependent>
    |   `-CallExpr 0x141941820 <col:25, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1419287e0 <col:25> 'int ()' Function 0x141928728 'Z_STRVAL_P' 'int ()'
    |     `-RecoveryExpr 0x141941800 <col:36> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x141941bc0 <line:14:2, col:6> 'int' '='
    | |-DeclRefExpr 0x141941b80 <col:2> 'int' lvalue Var 0x1419284a0 'c' 'int'
    | `-IntegerLiteral 0x141941ba0 <col:6> 'int' 0
    |-ForStmt 0x1419424f8 <line:15:2, line:23:2>
    | |-BinaryOperator 0x141941c20 <line:15:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x141941be0 <col:7> 'int' lvalue Var 0x141928420 'i' 'int'
    | | `-IntegerLiteral 0x141941c00 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x141941cc8 <col:14, col:34> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x141941c40 <col:14> 'int' lvalue Var 0x141928420 'i' 'int'
    | | `-CallExpr 0x141941ca0 <col:18, col:34> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x141941c60 <col:18> 'int ()' Function 0x1419419d0 'Z_STRLEN_P' 'int ()'
    | |   `-RecoveryExpr 0x141941c80 <col:29> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x141941d08 <col:37, col:38> 'int' postfix '++'
    | | `-DeclRefExpr 0x141941ce8 <col:37> 'int' lvalue Var 0x141928420 'i' 'int'
    | `-CompoundStmt 0x1419424e0 <col:42, line:23:2>
    |   `-IfStmt 0x1419424b0 <line:16:3, line:22:3> has_else
    |     |-RecoveryExpr 0x141941e98 <line:16:7, col:57> '_Bool' contains-errors
    |     |-CompoundStmt 0x141941eb8 <col:60, line:17:3>
    |     `-IfStmt 0x141942480 <col:10, line:22:3> has_else
    |       |-RecoveryExpr 0x141942040 <line:17:14, col:61> '_Bool' contains-errors
    |       |-CompoundStmt 0x141942060 <col:64, line:18:3>
    |       `-IfStmt 0x141942450 <col:10, line:22:3> has_else
    |         |-RecoveryExpr 0x1419421e0 <line:18:14, col:68> '_Bool' contains-errors
    |         |-CompoundStmt 0x141942200 <col:71, line:19:3>
    |         `-CompoundStmt 0x141942438 <col:10, line:22:3>
    |           `-UnaryOperator 0x141942420 <line:21:4, col:6> 'int' prefix '++'
    |             `-DeclRefExpr 0x141942400 <col:6> 'int' lvalue Var 0x1419284a0 'c' 'int'
    |-BinaryOperator 0x141942790 <line:26:2, col:18> '<dependent type>' contains-errors '='
    | |-CallExpr 0x141942768 <col:2, col:14> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1419426a8 <col:2> 'int ()' Function 0x1419425f0 'ZSTR_LEN' 'int ()'
    | | `-RecoveryExpr 0x141942748 <col:11> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x141942708 <col:18> 'int' lvalue Var 0x1419284a0 'c' 'int'
    `-CallExpr 0x141943ef8 <line:27:2, col:21> '<dependent type>' contains-errors
      |-DeclRefExpr 0x141943eb8 <col:2> 'int ()' Function 0x141943e00 'zval_ptr_dtor' 'int ()'
      `-RecoveryExpr 0x141943ed8 <col:16> '<dependent type>' contains-errors lvalue
