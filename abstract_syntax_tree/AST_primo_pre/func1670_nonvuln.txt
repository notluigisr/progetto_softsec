`-FunctionDecl 0x14400ddf8  line:1:7 invalid MSG_ReadBigString 'char *(int *)'
  |-ParmVarDecl 0x14400dd28 <col:26, col:33> col:33 invalid msg 'int *'
  `-CompoundStmt 0x144027e48 <col:39, line:27:1>
    |-DeclStmt 0x14400df38 <line:2:2, col:37>
    | `-VarDecl 0x14400ded0 <col:2, col:14> col:14 referenced invalid string 'char' static
    |-DeclStmt 0x14400e068 <line:3:2, col:10>
    | |-VarDecl 0x14400df68 <col:2, col:7> col:7 used l 'int'
    | `-VarDecl 0x14400dfe8 <col:2, col:9> col:9 used c 'int'
    |-BinaryOperator 0x14400e0c0 <line:5:2, col:6> 'int' '='
    | |-DeclRefExpr 0x14400e080 <col:2> 'int' lvalue Var 0x14400df68 'l' 'int'
    | `-IntegerLiteral 0x14400e0a0 <col:6> 'int' 0
    |-DoStmt 0x144027d00 <line:6:2, line:22:31>
    | |-CompoundStmt 0x144027b98 <line:6:5, line:22:2>
    | | |-BinaryOperator 0x14400e2c8 <line:7:3, col:23> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x14400e0e0 <col:3> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | | `-CallExpr 0x14400e2a0 <col:7, col:23> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x14400e260 <col:7> 'int ()' Function 0x14400e1a8 'MSG_ReadByte' 'int ()'
    | | |   `-RecoveryExpr 0x14400e280 <col:20> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x144027840 <line:8:3, line:10:3>
    | | | |-BinaryOperator 0x144027800 <line:8:8, col:24> 'int' '||'
    | | | | |-BinaryOperator 0x14400e358 <col:8, col:14> 'int' '=='
    | | | | | |-ImplicitCastExpr 0x14400e340 <col:8> 'int' <LValueToRValue>
    | | | | | | `-DeclRefExpr 0x14400e2e8 <col:8> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | | | | `-UnaryOperator 0x14400e328 <col:13, col:14> 'int' prefix '-'
    | | | | |   `-IntegerLiteral 0x14400e308 <col:14> 'int' 1
    | | | | `-BinaryOperator 0x14400e3d0 <col:19, col:24> 'int' '=='
    | | | |   |-ImplicitCastExpr 0x14400e3b8 <col:19> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x14400e378 <col:19> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | | |   `-IntegerLiteral 0x14400e398 <col:24> 'int' 0
    | | | `-CompoundStmt 0x144027828 <col:28, line:10:3>
    | | |   `-BreakStmt 0x144027820 <line:9:4>
    | | |-IfStmt 0x144027940 <line:12:3, line:14:3>
    | | | |-BinaryOperator 0x1440278b0 <line:12:8, col:13> 'int' '=='
    | | | | |-ImplicitCastExpr 0x144027898 <col:8> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x144027860 <col:8> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | | | `-CharacterLiteral 0x144027880 <col:13> 'int' 37
    | | | `-CompoundStmt 0x144027928 <col:19, line:14:3>
    | | |   `-BinaryOperator 0x144027908 <line:13:4, col:8> 'int' '='
    | | |     |-DeclRefExpr 0x1440278d0 <col:4> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | |     `-CharacterLiteral 0x1440278f0 <col:8> 'int' 46
    | | |-IfStmt 0x144027a48 <line:16:3, line:18:3>
    | | | |-BinaryOperator 0x1440279b8 <line:16:8, col:12> 'int' '>'
    | | | | |-ImplicitCastExpr 0x1440279a0 <col:8> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x144027960 <col:8> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | | | `-IntegerLiteral 0x144027980 <col:12> 'int' 127
    | | | `-CompoundStmt 0x144027a30 <col:18, line:18:3>
    | | |   `-BinaryOperator 0x144027a10 <line:17:4, col:8> 'int' '='
    | | |     |-DeclRefExpr 0x1440279d8 <col:4> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | |     `-CharacterLiteral 0x1440279f8 <col:8> 'int' 46
    | | |-BinaryOperator 0x144027b40 <line:20:3, col:15> '<dependent type>' contains-errors '='
    | | | |-ArraySubscriptExpr 0x144027b00 <col:3, col:11> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x144027ad0 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x144027a88 <col:3> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x144027a68 <col:3> 'char' lvalue Var 0x14400ded0 'string' 'char'
    | | | | `-ImplicitCastExpr 0x144027ae8 <col:10> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x144027ab0 <col:10> 'int' lvalue Var 0x14400df68 'l' 'int'
    | | | `-DeclRefExpr 0x144027b20 <col:15> 'int' lvalue Var 0x14400dfe8 'c' 'int'
    | | `-UnaryOperator 0x144027b80 <line:21:3, col:4> 'int' postfix '++'
    | |   `-DeclRefExpr 0x144027b60 <col:3> 'int' lvalue Var 0x14400df68 'l' 'int'
    | `-BinaryOperator 0x144027ce0 <line:22:11, col:30> 'int' contains-errors '<'
    |   |-ImplicitCastExpr 0x144027cc8 <col:11> 'unsigned long' <IntegralCast>
    |   | `-ImplicitCastExpr 0x144027cb0 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x144027bd8 <col:11> 'int' lvalue Var 0x14400df68 'l' 'int'
    |   `-BinaryOperator 0x144027c90 <col:15, col:30> 'unsigned long' contains-errors '-'
    |     |-UnaryExprOrTypeTraitExpr 0x144027c38 <col:15, col:28> 'unsigned long' contains-errors sizeof
    |     | `-ParenExpr 0x144027c18 <col:21, col:28> '<dependent type>' contains-errors lvalue
    |     |   `-RecoveryExpr 0x144027bf8 <col:22> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x144027c78 <col:30> 'unsigned long' <IntegralCast>
    |       `-IntegerLiteral 0x144027c58 <col:30> 'int' 1
    |-BinaryOperator 0x144027df8 <line:24:2, col:14> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x144027db8 <col:2, col:10> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x144027d88 <col:2> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x144027d40 <col:2> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x144027d20 <col:2> 'char' lvalue Var 0x14400ded0 'string' 'char'
    | | `-ImplicitCastExpr 0x144027da0 <col:9> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x144027d68 <col:9> 'int' lvalue Var 0x14400df68 'l' 'int'
    | `-IntegerLiteral 0x144027dd8 <col:14> 'int' 0
    `-ReturnStmt 0x144027e38 <line:26:2, col:9>
      `-RecoveryExpr 0x144027e18 <col:9> '<dependent type>' contains-errors lvalue
