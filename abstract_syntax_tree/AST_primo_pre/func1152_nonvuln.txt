`-FunctionDecl 0x15280dda8  line:1:1 acldefault_sql 'int (int)'
  |-ParmVarDecl 0x15280dcd8 <col:16> col:16 PG_FUNCTION_ARGS 'int'
  `-CompoundStmt 0x152828f10 <line:2:1, line:50:1>
    |-DeclStmt 0x15280e108 <line:3:2, col:36>
    | `-VarDecl 0x15280deb0 <col:2, col:35> col:8 used objtypec 'char' cinit
    |   `-ImplicitCastExpr 0x15280e0f0 <col:19, col:35> 'char' <IntegralCast>
    |     `-CallExpr 0x15280e0c8 <col:19, col:35> 'int'
    |       |-ImplicitCastExpr 0x15280e0b0 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15280e040 <col:19> 'int ()' Function 0x15280df88 'PG_GETARG_CHAR' 'int ()'
    |       `-IntegerLiteral 0x15280e060 <col:34> 'int' 0
    `-SwitchStmt 0x15280e170 <line:7:2, line:47:2>
      |-ImplicitCastExpr 0x15280e158 <line:7:10> 'int' <IntegralCast>
      | `-ImplicitCastExpr 0x15280e140 <col:10> 'char' <LValueToRValue>
      |   `-DeclRefExpr 0x15280e120 <col:10> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
      `-CompoundStmt 0x152828c38 <line:8:2, line:47:2>
        |-CaseStmt 0x15280e1c8 <line:9:3, line:10:14>
        | |-ConstantExpr 0x15280e1b0 <line:9:8> 'int'
        | | `-CharacterLiteral 0x15280e198 <col:8> 'int' 99
        | `-BinaryOperator 0x15280e268 <line:10:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x15280e1f0 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x15280e248 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x15280e288 <line:11:4>
        |-CaseStmt 0x15280e2c0 <line:12:3, line:13:14>
        | |-ConstantExpr 0x15280e2a8 <line:12:8> 'int'
        | | `-CharacterLiteral 0x15280e290 <col:8> 'int' 114
        | `-BinaryOperator 0x15280e360 <line:13:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x15280e2e8 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x15280e340 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x15280e380 <line:14:4>
        |-CaseStmt 0x15280e3b8 <line:15:3, line:16:14>
        | |-ConstantExpr 0x15280e3a0 <line:15:8> 'int'
        | | `-CharacterLiteral 0x15280e388 <col:8> 'int' 115
        | `-BinaryOperator 0x152828458 <line:16:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x15280e3e0 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x152828438 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x152828478 <line:17:4>
        |-CaseStmt 0x1528284b0 <line:18:3, line:19:14>
        | |-ConstantExpr 0x152828498 <line:18:8> 'int'
        | | `-CharacterLiteral 0x152828480 <col:8> 'int' 100
        | `-BinaryOperator 0x152828550 <line:19:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x1528284d8 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x152828530 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x152828570 <line:20:4>
        |-CaseStmt 0x1528285a8 <line:21:3, line:22:14>
        | |-ConstantExpr 0x152828590 <line:21:8> 'int'
        | | `-CharacterLiteral 0x152828578 <col:8> 'int' 102
        | `-BinaryOperator 0x152828648 <line:22:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x1528285d0 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x152828628 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x152828668 <line:23:4>
        |-CaseStmt 0x1528286a0 <line:24:3, line:25:14>
        | |-ConstantExpr 0x152828688 <line:24:8> 'int'
        | | `-CharacterLiteral 0x152828670 <col:8> 'int' 108
        | `-BinaryOperator 0x152828740 <line:25:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x1528286c8 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x152828720 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x152828760 <line:26:4>
        |-CaseStmt 0x152828798 <line:27:3, line:28:14>
        | |-ConstantExpr 0x152828780 <line:27:8> 'int'
        | | `-CharacterLiteral 0x152828768 <col:8> 'int' 76
        | `-BinaryOperator 0x152828838 <line:28:4, col:14> 'char' contains-errors '='
        |   |-DeclRefExpr 0x1528287c0 <col:4> 'char' lvalue Var 0x15280deb0 'objtypec' 'char'
        |   `-RecoveryExpr 0x152828818 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x152828858 <line:29:4>
        |-CaseStmt 0x152828890 <line:30:3, <invalid sloc>>
        | |-ConstantExpr 0x152828878 <col:8> 'int'
        | | `-CharacterLiteral 0x152828860 <col:8> 'int' 110
        | `-NullStmt 0x1528288d8 <<invalid sloc>>
        |-BreakStmt 0x1528288e0 <line:32:4>
        |-CaseStmt 0x152828918 <line:33:3, <invalid sloc>>
        | |-ConstantExpr 0x152828900 <col:8> 'int'
        | | `-CharacterLiteral 0x1528288e8 <col:8> 'int' 116
        | `-NullStmt 0x152828940 <<invalid sloc>>
        |-BreakStmt 0x152828948 <line:35:4>
        |-CaseStmt 0x152828980 <line:36:3, <invalid sloc>>
        | |-ConstantExpr 0x152828968 <col:8> 'int'
        | | `-CharacterLiteral 0x152828950 <col:8> 'int' 70
        | `-NullStmt 0x1528289a8 <<invalid sloc>>
        |-BreakStmt 0x1528289b0 <line:38:4>
        |-CaseStmt 0x1528289e8 <line:39:3, <invalid sloc>>
        | |-ConstantExpr 0x1528289d0 <col:8> 'int'
        | | `-CharacterLiteral 0x1528289b8 <col:8> 'int' 83
        | `-NullStmt 0x152828a10 <<invalid sloc>>
        |-BreakStmt 0x152828a18 <line:41:4>
        |-CaseStmt 0x152828a50 <line:42:3, <invalid sloc>>
        | |-ConstantExpr 0x152828a38 <col:8> 'int'
        | | `-CharacterLiteral 0x152828a20 <col:8> 'int' 84
        | `-NullStmt 0x152828a78 <<invalid sloc>>
        |-BreakStmt 0x152828a80 <line:44:4>
        `-DefaultStmt 0x152828c18 <line:45:3, col:10>
          `-NullStmt 0x152828c10 <col:10>
