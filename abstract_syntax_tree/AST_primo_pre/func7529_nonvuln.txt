`-FunctionDecl 0x14000dda8  line:1:12 wq_select_unbound_cpu 'int (int)' static
  |-ParmVarDecl 0x14000dcd8 <col:34, col:38> col:38 used cpu 'int'
  `-CompoundStmt 0x13681cf40 <line:2:1, line:27:1>
    |-DeclStmt 0x14000df38 <line:3:2, col:33>
    | `-VarDecl 0x14000ded0 <col:2, col:14> col:14 referenced invalid printed_dbg_warning 'int' static
    |-DeclStmt 0x14000dfd0 <line:4:2, col:13>
    | `-VarDecl 0x14000df68 <col:2, col:6> col:6 used new_cpu 'int'
    |-IfStmt 0x140027b88 <line:6:2, line:12:2> has_else
    | |-CallExpr 0x14000e1e0 <line:6:6, col:35> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14000e100 <col:6> 'int ()' Function 0x14000e048 'likely' 'int ()'
    | | `-UnaryOperator 0x14000e1c8 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14000e1b0 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14000e190 <col:14> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x140027830 <col:38, line:9:2>
    | | `-IfStmt 0x140027810 <line:7:3, line:8:11>
    | |   |-CallExpr 0x14000e390 <line:7:7, col:47> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x14000e2e8 <col:7> 'int ()' Function 0x14000e230 'cpumask_test_cpu' 'int ()'
    | |   | |-DeclRefExpr 0x14000e308 <col:24> 'int' lvalue ParmVar 0x14000dcd8 'cpu' 'int'
    | |   | `-RecoveryExpr 0x14000e370 <col:29> '<dependent type>' contains-errors lvalue
    | |   `-ReturnStmt 0x140027800 <line:8:4, col:11>
    | |     `-ImplicitCastExpr 0x14000e3e0 <col:11> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x14000e3c0 <col:11> 'int' lvalue ParmVar 0x14000dcd8 'cpu' 'int'
    | `-IfStmt 0x140027b68 <line:9:9, line:12:2>
    |   |-UnaryOperator 0x140027880 <line:9:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x140027868 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x140027848 <col:14> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x140027b48 <col:35, line:12:2>
    |     |-CallExpr 0x140027a48 <line:10:3, col:16> 'int'
    |     | |-ImplicitCastExpr 0x140027a30 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x140027978 <col:3> 'int ()' Function 0x1400278c0 'pr_warn' 'int ()'
    |     | `-ImplicitCastExpr 0x140027a70 <col:11> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x1400279e0 <col:11> 'char[4]' lvalue "STR"
    |     `-BinaryOperator 0x140027b28 <line:11:3, col:25> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x140027aa8 <col:3> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x140027a88 <col:3> 'int' lvalue Var 0x14000ded0 'printed_dbg_warning' 'int'
    |       `-RecoveryExpr 0x140027b08 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140027d88 <line:14:2, line:15:10>
    | |-CallExpr 0x140027d18 <line:14:6, col:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x140027c98 <col:6> 'int ()' Function 0x140027be0 'cpumask_empty' 'int ()'
    | | `-RecoveryExpr 0x140027cf8 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x140027d78 <line:15:3, col:10>
    |   `-ImplicitCastExpr 0x140027d60 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x140027d40 <col:10> 'int' lvalue ParmVar 0x14000dcd8 'cpu' 'int'
    |-BinaryOperator 0x140027f70 <line:17:2, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x140027da8 <col:2> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    | `-CallExpr 0x140027f48 <col:12, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x140027ea8 <col:12> 'int ()' Function 0x140027df0 '__this_cpu_read' 'int ()'
    |   `-RecoveryExpr 0x140027f28 <col:28> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1400281d0 <line:18:2, col:73> 'int' contains-errors '='
    | |-DeclRefExpr 0x140027f90 <col:2> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    | `-CallExpr 0x140028198 <col:12, col:73> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x140028090 <col:12> 'int ()' Function 0x140027fd8 'cpumask_next_and' 'int ()'
    |   |-DeclRefExpr 0x1400280b0 <col:29> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    |   |-RecoveryExpr 0x140028158 <col:38> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x140028178 <col:58> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140028798 <line:19:2, line:23:2>
    | |-CallExpr 0x1400283b0 <line:19:6, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1400282d0 <col:6> 'int ()' Function 0x140028218 'unlikely' 'int ()'
    | | `-BinaryOperator 0x140028390 <col:15, col:26> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x1400282f0 <col:15> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    | |   `-RecoveryExpr 0x140028370 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x140028778 <col:39, line:23:2>
    |   |-BinaryOperator 0x1400285e8 <line:20:3, col:66> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1400283d8 <col:3> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    |   | `-CallExpr 0x1400285b8 <col:13, col:66> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1400284d8 <col:13> 'int ()' Function 0x140028420 'cpumask_first_and' 'int ()'
    |   |   |-RecoveryExpr 0x140028578 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x140028598 <col:51> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x140028758 <line:21:3, line:22:11>
    |     |-CallExpr 0x1400286e8 <line:21:7, col:37> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x140028608 <col:7> 'int ()' Function 0x140028218 'unlikely' 'int ()'
    |     | `-BinaryOperator 0x1400286c8 <col:16, col:27> 'int' contains-errors '>='
    |     |   |-DeclRefExpr 0x140028628 <col:16> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
    |     |   `-RecoveryExpr 0x1400286a8 <col:27> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x140028748 <line:22:4, col:11>
    |       `-ImplicitCastExpr 0x140028730 <col:11> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x140028710 <col:11> 'int' lvalue ParmVar 0x14000dcd8 'cpu' 'int'
    `-ReturnStmt 0x13681cf30 <line:26:2, col:9>
      `-ImplicitCastExpr 0x13681cf18 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13681cef8 <col:9> 'int' lvalue Var 0x14000df68 'new_cpu' 'int'
