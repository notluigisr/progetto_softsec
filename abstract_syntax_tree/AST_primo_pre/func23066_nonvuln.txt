`-FunctionDecl 0x12d9133a8  line:1:6 invalid test_r_str_ansi_len 'int (void)'
  `-CompoundStmt 0x12d92d498 <col:32, line:26:1>
    |-DeclStmt 0x12d9134d0 <line:2:2, col:9>
    | `-VarDecl 0x12d913468 <col:2, col:6> col:6 used len 'int'
    |-BinaryOperator 0x12d913768 <line:4:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d9134e8 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d913728 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d913710 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d913660 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d913750 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d9136c0 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d913900 <line:5:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d9138e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d913868 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d913938 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d913888 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d9138a8 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d913950 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d9138c8 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92ca40 <line:7:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d913968 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92ca00 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d9139c8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d913988 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92ca28 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d9139a8 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92caf8 <line:8:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92cae0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92ca60 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cb30 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92ca80 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92caa0 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cb48 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92cac0 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cc18 <line:10:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cb60 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cbd8 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cbc0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cb80 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cc00 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cba0 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92ccd0 <line:11:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92ccb8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92cc38 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cd08 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92cc58 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92cc78 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cd20 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92cc98 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cdf0 <line:13:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cd38 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cdb0 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cd98 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cd58 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cdd8 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cd78 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92cea8 <line:14:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92ce90 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92ce10 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92cee0 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92ce30 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92ce50 <col:21> 'int' 7
    | `-ImplicitCastExpr 0x12d92cef8 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92ce70 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92cfc8 <line:16:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92cf10 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92cf88 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92cf70 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92cf30 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92cfb0 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92cf50 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92d080 <line:17:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92d068 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92cfe8 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92d0b8 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92d008 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92d028 <col:21> 'int' 8
    | `-ImplicitCastExpr 0x12d92d0d0 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92d048 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92d1a0 <line:19:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92d0e8 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92d160 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92d148 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92d108 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92d188 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92d128 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x12d92d258 <line:20:2, col:29> 'int'
    | |-ImplicitCastExpr 0x12d92d240 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d92d1c0 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
    | |-ImplicitCastExpr 0x12d92d290 <col:16> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12d92d1e0 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
    | |-IntegerLiteral 0x12d92d200 <col:21> 'int' 9
    | `-ImplicitCastExpr 0x12d92d2a8 <col:24> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12d92d220 <col:24> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x12d92d378 <line:22:2, col:29> 'int' '='
    | |-DeclRefExpr 0x12d92d2c0 <col:2> 'int' lvalue Var 0x12d913468 'len' 'int'
    | `-CallExpr 0x12d92d338 <col:8, col:29> 'int'
    |   |-ImplicitCastExpr 0x12d92d320 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d92d2e0 <col:8> 'int ()' Function 0x12d9135a8 'r_str_ansi_len' 'int ()'
    |   `-ImplicitCastExpr 0x12d92d360 <col:24> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d92d300 <col:24> 'char[4]' lvalue "STR"
    `-CallExpr 0x12d92d430 <line:23:2, col:30> 'int'
      |-ImplicitCastExpr 0x12d92d418 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12d92d398 <col:2> 'int ()' Function 0x12d9137b0 'mu_assert_eq' 'int ()'
      |-ImplicitCastExpr 0x12d92d468 <col:16> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x12d92d3b8 <col:16> 'int' lvalue Var 0x12d913468 'len' 'int'
      |-IntegerLiteral 0x12d92d3d8 <col:21> 'int' 10
      `-ImplicitCastExpr 0x12d92d480 <col:25> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x12d92d3f8 <col:25> 'char[4]' lvalue "STR"
