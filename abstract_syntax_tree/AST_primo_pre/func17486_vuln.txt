`-FunctionDecl 0x14e026b10  line:1:13 referenced invalid process_tree 'void (struct rev_info *, struct tree *, int, struct strbuf *, const char *, void *)' static
  |-ParmVarDecl 0x14e00e248 <col:26, col:43> col:43 used revs 'struct rev_info *'
  |-ParmVarDecl 0x14e026628 <line:2:5, col:18> col:18 used tree 'struct tree *'
  |-ParmVarDecl 0x14e0266c0 <line:3:5, col:20> col:20 referenced invalid show 'int'
  |-ParmVarDecl 0x14e026898 <line:4:5, col:20> col:20 used base 'struct strbuf *'
  |-ParmVarDecl 0x14e026918 <line:5:5, col:17> col:17 used name 'const char *'
  |-ParmVarDecl 0x14e026998 <line:6:5, col:11> col:11 used cb_data 'void *'
  `-CompoundStmt 0x14e030de8 <line:7:1, line:63:1>
    |-DeclStmt 0x14e026e50 <line:8:2, col:36>
    | |-RecordDecl 0x14e026be8 <col:2, col:9> col:9 struct object
    | `-VarDecl 0x14e026d58 <col:2, col:30> col:17 used obj 'struct object *' cinit
    |   `-UnaryOperator 0x14e026e20 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14e026df8 <col:24, col:30> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e026dc0 <col:24> 'struct tree *' lvalue ParmVar 0x14e026628 'tree' 'struct tree *'
    |-DeclStmt 0x14e026fe8 <line:9:2, col:23>
    | |-RecordDecl 0x14e026e68 <col:2, col:9> col:9 struct tree_desc
    | `-VarDecl 0x14e026f68 <col:2, col:19> col:19 invalid desc 'struct tree_desc'
    |-DeclStmt 0x14e027178 <line:10:2, col:25>
    | |-RecordDecl 0x14e027000 <col:2, col:9> col:9 struct name_entry
    | `-VarDecl 0x14e0270f8 <col:2, col:20> col:20 invalid entry 'struct name_entry'
    |-DeclStmt 0x14e0274b8 <line:11:2, line:12:49>
    | |-EnumDecl 0x14e027190 <line:11:2, col:7> col:7 interesting
    | `-VarDecl 0x14e0272a8 <col:2, col:19> col:19 referenced invalid match 'enum interesting'
    |-DeclStmt 0x14e0275b0 <line:13:2, col:25>
    | `-VarDecl 0x14e0274e8 <col:2, col:22> col:6 used baselen 'int' cinit
    |   `-RecoveryExpr 0x14e027588 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14e027550 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |-IfStmt 0x14e02d698 <line:15:2, line:16:3>
    | |-UnaryOperator 0x14e02d670 <line:15:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14e02d658 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14e02d600 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14e0275c8 <col:7> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    | `-ReturnStmt 0x14e02d688 <line:16:3>
    |-IfStmt 0x14e02d968 <line:17:2, line:18:12>
    | |-UnaryOperator 0x14e02d6f0 <line:17:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14e02d6d8 <col:7> 'struct object *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x14e02d6b8 <col:7> 'struct object *' contains-errors lvalue Var 0x14e026d58 'obj' 'struct object *'
    | `-CallExpr 0x14e02d928 <line:18:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x14e02d910 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e02d860 <col:3> 'int ()' Function 0x14e02d7a8 'die' 'int ()'
    |   `-ImplicitCastExpr 0x14e02d950 <col:7> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14e02d8c0 <col:7> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e02da68 <line:19:2, line:20:3>
    | |-RecoveryExpr 0x14e02da38 <line:19:6, col:40> '_Bool' contains-errors
    | `-ReturnStmt 0x14e02da58 <line:20:3>
    |-IfStmt 0x14e02df38 <line:21:2, line:25:2>
    | |-BinaryOperator 0x14e02dc58 <line:21:6, col:60> 'int' contains-errors '<'
    | | |-CallExpr 0x14e02dc08 <col:6, col:56> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14e02db68 <col:6> 'int ()' Function 0x14e02dab0 'parse_tree_gently' 'int ()'
    | | | |-DeclRefExpr 0x14e02db88 <col:24> 'struct tree *' lvalue ParmVar 0x14e026628 'tree' 'struct tree *'
    | | | `-RecoveryExpr 0x14e02dbe0 <col:30, col:36> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14e02dba8 <col:30> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    | | `-IntegerLiteral 0x14e02dc38 <col:60> 'int' 0
    | `-CompoundStmt 0x14e02df18 <col:63, line:25:2>
    |   |-IfStmt 0x14e02dce8 <line:22:3, line:23:4>
    |   | |-RecoveryExpr 0x14e02dcb0 <line:22:7, col:13> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x14e02dc78 <col:7> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    |   | `-ReturnStmt 0x14e02dcd8 <line:23:4>
    |   `-CallExpr 0x14e02dee8 <line:24:3, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14e02dd08 <col:3> 'int ()' Function 0x14e02d7a8 'die' 'int ()'
    |     |-StringLiteral 0x14e02dd28 <col:7> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x14e02dec0 <col:14, col:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x14e02de28 <col:14> 'int ()' Function 0x14e02dd70 'oid_to_hex' 'int ()'
    |       `-UnaryOperator 0x14e02dea8 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x14e02de80 <col:26, col:31> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x14e02de48 <col:26> 'struct object *' contains-errors lvalue Var 0x14e026d58 'obj' 'struct object *'
    |-CompoundAssignOperator 0x14e02e020 <line:27:2, col:16> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-RecoveryExpr 0x14e02df90 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e02df58 <col:2> 'struct object *' contains-errors lvalue Var 0x14e026d58 'obj' 'struct object *'
    | `-RecoveryExpr 0x14e02e000 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14e02e118 <line:28:2, col:31> '<dependent type>' contains-errors
    | |-RecoveryExpr 0x14e02e070 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e02e050 <col:2> 'int' lvalue ParmVar 0x14e0266c0 'show' 'int'
    | |-DeclRefExpr 0x14e02e098 <col:7> 'struct object *' contains-errors lvalue Var 0x14e026d58 'obj' 'struct object *'
    | |-DeclRefExpr 0x14e02e0b8 <col:12> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    | |-DeclRefExpr 0x14e02e0d8 <col:18> 'const char *' lvalue ParmVar 0x14e026918 'name' 'const char *'
    | `-DeclRefExpr 0x14e02e0f8 <col:24> 'void *' lvalue ParmVar 0x14e026998 'cb_data' 'void *'
    |-CallExpr 0x14e02e2b0 <line:30:2, col:26> 'int'
    | |-ImplicitCastExpr 0x14e02e298 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14e02e238 <col:2> 'int ()' Function 0x14e02e180 'strbuf_addstr' 'int ()'
    | |-ImplicitCastExpr 0x14e02e2e0 <col:16> 'struct strbuf *' <LValueToRValue>
    | | `-DeclRefExpr 0x14e02e258 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    | `-ImplicitCastExpr 0x14e02e2f8 <col:22> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14e02e278 <col:22> 'const char *' lvalue ParmVar 0x14e026918 'name' 'const char *'
    |-IfStmt 0x14e02e508 <line:31:2, line:32:25>
    | |-RecoveryExpr 0x14e02e348 <line:31:6, col:12> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e02e310 <col:6> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    | `-CallExpr 0x14e02e4c0 <line:32:3, col:25> 'int'
    |   |-ImplicitCastExpr 0x14e02e4a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e02e450 <col:3> 'int ()' Function 0x14e02e398 'strbuf_addch' 'int ()'
    |   |-ImplicitCastExpr 0x14e02e4f0 <col:16> 'struct strbuf *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14e02e470 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |   `-CharacterLiteral 0x14e02e490 <col:22> 'int' 47
    |-CallExpr 0x14e02f728 <line:34:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e02f610 <col:2> 'int ()' Function 0x14e02e550 'init_tree_desc' 'int ()'
    | |-UnaryOperator 0x14e02f650 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14e02f630 <col:18> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x14e02f6a0 <col:24, col:30> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14e02f668 <col:24> 'struct tree *' lvalue ParmVar 0x14e026628 'tree' 'struct tree *'
    | `-RecoveryExpr 0x14e02f700 <col:38, col:44> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14e02f6c8 <col:38> 'struct tree *' lvalue ParmVar 0x14e026628 'tree' 'struct tree *'
    |-WhileStmt 0x14e030a98 <line:36:2, line:60:2>
    | |-CallExpr 0x14e02f8d0 <line:36:9, col:33> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14e02f840 <col:9> 'int ()' Function 0x14e02f788 'tree_entry' 'int ()'
    | | |-UnaryOperator 0x14e02f880 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x14e02f860 <col:21> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14e02f8b8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x14e02f898 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14e030a78 <col:36, line:60:2>
    |   |-IfStmt 0x14e02fd18 <line:37:3, line:44:3>
    |   | |-RecoveryExpr 0x14e02f920 <line:37:7, col:16> '_Bool' contains-errors
    |   | `-CompoundStmt 0x14e02fcf0 <col:41, line:44:3>
    |   |   |-BinaryOperator 0x14e02fc00 <line:38:4, line:39:37> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x14e02f960 <line:38:4> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x14e02f940 <col:4> 'enum interesting' lvalue Var 0x14e0272a8 'match' 'enum interesting'
    |   |   | `-CallExpr 0x14e02fbc0 <col:12, line:39:37> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x14e02fa68 <line:38:12> 'int ()' Function 0x14e02f9b0 'tree_entry_interesting' 'int ()'
    |   |   |   |-UnaryOperator 0x14e02faa8 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   | `-RecoveryExpr 0x14e02fa88 <col:36> '<dependent type>' contains-errors lvalue
    |   |   |   |-DeclRefExpr 0x14e02fac0 <col:43> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |   |   |   |-IntegerLiteral 0x14e02fae0 <col:49> 'int' 0
    |   |   |   `-UnaryOperator 0x14e02fba8 <line:39:14, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-CXXDependentScopeMemberExpr 0x14e02fb60 <col:15, col:29> '<dependent type>' contains-errors lvalue .pathspec
    |   |   |       `-RecoveryExpr 0x14e02fb38 <col:15, col:21> '<dependent type>' contains-errors lvalue
    |   |   |         `-DeclRefExpr 0x14e02fb00 <col:15> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    |   |   |-IfStmt 0x14e02fc68 <line:40:4, line:41:5>
    |   |   | |-RecoveryExpr 0x14e02fc40 <line:40:8, col:17> '_Bool' contains-errors
    |   |   | `-BreakStmt 0x14e02fc60 <line:41:5>
    |   |   `-IfStmt 0x14e02fcd0 <line:42:4, line:43:5>
    |   |     |-RecoveryExpr 0x14e02fca8 <line:42:8, col:17> '_Bool' contains-errors
    |   |     `-ContinueStmt 0x14e02fcc8 <line:43:5>
    |   `-IfStmt 0x14e030a48 <line:46:3, line:59:17> has_else
    |     |-CallExpr 0x14e02fea0 <line:46:7, col:25> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x14e02fe18 <col:7> 'int ()' Function 0x14e02fd60 'S_ISDIR' 'int ()'
    |     | `-CXXDependentScopeMemberExpr 0x14e02fe58 <col:15, col:21> '<dependent type>' contains-errors lvalue .mode
    |     |   `-RecoveryExpr 0x14e02fe38 <col:15> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x14e030188 <line:47:4, line:50:17> '<dependent type>' contains-errors
    |     | |-RecoveryExpr 0x14e02fee8 <line:47:4> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x14e02fec8 <col:4> 'void (struct rev_info *, struct tree *, int, struct strbuf *, const char *, void *)' Function 0x14e026b10 'process_tree' 'void (struct rev_info *, struct tree *, int, struct strbuf *, const char *, void *)'
    |     | |-DeclRefExpr 0x14e02ff10 <col:17> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    |     | |-CallExpr 0x14e030098 <line:48:10, col:32> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14e030010 <col:10> 'int ()' Function 0x14e02ff58 'lookup_tree' 'int ()'
    |     | | `-CXXDependentScopeMemberExpr 0x14e030050 <col:22, col:28> '<dependent type>' contains-errors lvalue .sha1
    |     | |   `-RecoveryExpr 0x14e030030 <col:22> '<dependent type>' contains-errors lvalue
    |     | |-RecoveryExpr 0x14e0300c0 <line:49:10> '<dependent type>' contains-errors lvalue
    |     | |-DeclRefExpr 0x14e0300e0 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |     | |-CXXDependentScopeMemberExpr 0x14e030120 <col:22, col:28> '<dependent type>' contains-errors lvalue .path
    |     | | `-RecoveryExpr 0x14e030100 <col:22> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14e030168 <line:50:10> 'void *' lvalue ParmVar 0x14e026998 'cb_data' 'void *'
    |     `-IfStmt 0x14e030a18 <line:51:8, line:59:17> has_else
    |       |-CallExpr 0x14e030340 <line:51:12, col:34> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14e0302b8 <col:12> 'int ()' Function 0x14e030200 'S_ISGITLINK' 'int ()'
    |       | `-CXXDependentScopeMemberExpr 0x14e0302f8 <col:24, col:30> '<dependent type>' contains-errors lvalue .mode
    |       |   `-RecoveryExpr 0x14e0302d8 <col:24> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x14e030600 <line:52:4, line:54:13> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14e030448 <line:52:4> 'int ()' Function 0x14e030390 'process_gitlink' 'int ()'
    |       | |-DeclRefExpr 0x14e030468 <col:20> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    |       | |-CXXDependentScopeMemberExpr 0x14e0304a8 <col:26, col:32> '<dependent type>' contains-errors lvalue .sha1
    |       | | `-RecoveryExpr 0x14e030488 <col:26> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x14e0304f0 <line:53:6> '<dependent type>' contains-errors lvalue
    |       | |-DeclRefExpr 0x14e030510 <col:12> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |       | |-CXXDependentScopeMemberExpr 0x14e030550 <col:18, col:24> '<dependent type>' contains-errors lvalue .path
    |       | | `-RecoveryExpr 0x14e030530 <col:18> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x14e030598 <line:54:6> 'void *' lvalue ParmVar 0x14e026998 'cb_data' 'void *'
    |       `-CallExpr 0x14e0309c8 <line:56:4, line:59:17> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14e030730 <line:56:4> 'int ()' Function 0x14e030678 'process_blob' 'int ()'
    |         |-DeclRefExpr 0x14e030750 <col:17> 'struct rev_info *' lvalue ParmVar 0x14e00e248 'revs' 'struct rev_info *'
    |         |-CallExpr 0x14e0308d8 <line:57:10, col:32> '<dependent type>' contains-errors
    |         | |-DeclRefExpr 0x14e030850 <col:10> 'int ()' Function 0x14e030798 'lookup_blob' 'int ()'
    |         | `-CXXDependentScopeMemberExpr 0x14e030890 <col:22, col:28> '<dependent type>' contains-errors lvalue .sha1
    |         |   `-RecoveryExpr 0x14e030870 <col:22> '<dependent type>' contains-errors lvalue
    |         |-RecoveryExpr 0x14e030900 <line:58:10> '<dependent type>' contains-errors lvalue
    |         |-DeclRefExpr 0x14e030920 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    |         |-CXXDependentScopeMemberExpr 0x14e030960 <col:22, col:28> '<dependent type>' contains-errors lvalue .path
    |         | `-RecoveryExpr 0x14e030940 <col:22> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x14e0309a8 <line:59:10> 'void *' lvalue ParmVar 0x14e026998 'cb_data' 'void *'
    |-CallExpr 0x14e030c10 <line:61:2, col:29> 'int' contains-errors
    | |-ImplicitCastExpr 0x14e030bf8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14e030b98 <col:2> 'int ()' Function 0x14e030ae0 'strbuf_setlen' 'int ()'
    | |-ImplicitCastExpr 0x14e030c40 <col:16> 'struct strbuf *' <LValueToRValue>
    | | `-DeclRefExpr 0x14e030bb8 <col:16> 'struct strbuf *' lvalue ParmVar 0x14e026898 'base' 'struct strbuf *'
    | `-ImplicitCastExpr 0x14e030c58 <col:22> 'int' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x14e030bd8 <col:22> 'int' contains-errors lvalue Var 0x14e0274e8 'baselen' 'int'
    `-CallExpr 0x14e030da8 <line:62:2, col:23> 'int'
      |-ImplicitCastExpr 0x14e030d90 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14e030d50 <col:2> 'int ()' Function 0x14e030c98 'free_tree_buffer' 'int ()'
      `-ImplicitCastExpr 0x14e030dd0 <col:19> 'struct tree *' <LValueToRValue>
        `-DeclRefExpr 0x14e030d70 <col:19> 'struct tree *' lvalue ParmVar 0x14e026628 'tree' 'struct tree *'
