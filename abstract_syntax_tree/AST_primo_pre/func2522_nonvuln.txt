`-FunctionDecl 0x154928318  line:1:12 invalid getbaseline 'int (const int *, int, int *)' static
  |-ParmVarDecl 0x1549280f0 <col:25, col:38> col:38 invalid f 'const int *'
  |-ParmVarDecl 0x154928170 <col:41, col:45> col:45 used pc 'int'
  |-ParmVarDecl 0x154928228 <col:49, col:54> col:54 used basepc 'int *'
  `-CompoundStmt 0x1549424f0 <col:62, line:24:1>
    `-IfStmt 0x1549424c0 <line:2:3, line:23:3> has_else
      |-BinaryOperator 0x1549285c8 <line:2:7, col:57> 'int' contains-errors '||'
      | |-BinaryOperator 0x154928460 <col:7, col:29> 'int' contains-errors '=='
      | | |-CXXDependentScopeMemberExpr 0x1549283f8 <col:7, col:10> '<dependent type>' contains-errors lvalue ->sizeabslineinfo
      | | | `-RecoveryExpr 0x1549283d8 <col:7> '<dependent type>' contains-errors lvalue
      | | `-IntegerLiteral 0x154928440 <col:29> 'int' 0
      | `-BinaryOperator 0x1549285a8 <col:34, col:57> 'int' contains-errors '<'
      |   |-DeclRefExpr 0x154928480 <col:34> 'int' lvalue ParmVar 0x154928170 'pc' 'int'
      |   `-CXXDependentScopeMemberExpr 0x154928560 <col:39, col:57> '<dependent type>' contains-errors lvalue .pc
      |     `-ArraySubscriptExpr 0x154928540 <col:39, col:55> '<dependent type>' contains-errors lvalue
      |       |-ImplicitCastExpr 0x154928528 <col:39, col:42> '<dependent type>' contains-errors <LValueToRValue>
      |       | `-CXXDependentScopeMemberExpr 0x1549284c0 <col:39, col:42> '<dependent type>' contains-errors lvalue ->abslineinfo
      |       |   `-RecoveryExpr 0x1549284a0 <col:39> '<dependent type>' contains-errors lvalue
      |       `-IntegerLiteral 0x154928508 <col:54> 'int' 0
      |-CompoundStmt 0x154928708 <col:61, line:5:3>
      | |-BinaryOperator 0x154928670 <line:3:5, col:16> 'int' '='
      | | |-UnaryOperator 0x154928620 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x154928608 <col:6> 'int *' <LValueToRValue>
      | | |   `-DeclRefExpr 0x1549285e8 <col:6> 'int *' lvalue ParmVar 0x154928228 'basepc' 'int *'
      | | `-UnaryOperator 0x154928658 <col:15, col:16> 'int' prefix '-'
      | |   `-IntegerLiteral 0x154928638 <col:16> 'int' 1
      | `-ReturnStmt 0x1549286f8 <line:4:5, col:15>
      |   `-CXXDependentScopeMemberExpr 0x1549286b0 <col:12, col:15> '<dependent type>' contains-errors lvalue ->linedefined
      |     `-RecoveryExpr 0x154928690 <col:12> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x154942490 <line:6:8, line:23:3>
        |-DeclStmt 0x1549287a8 <line:7:5, col:19>
        | `-VarDecl 0x154928740 <col:5, col:18> col:18 used i 'unsigned int'
        |-IfStmt 0x1549421a0 <line:8:5, line:20:5> has_else
        | |-BinaryOperator 0x154941970 <line:8:9, col:54> 'int' contains-errors '>='
        | | |-DeclRefExpr 0x1549287c0 <col:9> 'int' lvalue ParmVar 0x154928170 'pc' 'int'
        | | `-CXXDependentScopeMemberExpr 0x154941928 <col:15, col:54> '<dependent type>' contains-errors lvalue .pc
        | |   `-ArraySubscriptExpr 0x154941908 <col:15, col:52> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x1549418f0 <col:15, col:18> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-CXXDependentScopeMemberExpr 0x154941800 <col:15, col:18> '<dependent type>' contains-errors lvalue ->abslineinfo
        | |     |   `-RecoveryExpr 0x1549287e0 <col:15> '<dependent type>' contains-errors lvalue
        | |     `-BinaryOperator 0x1549418d0 <col:30, col:51> '<dependent type>' contains-errors '-'
        | |       |-CXXDependentScopeMemberExpr 0x154941868 <col:30, col:33> '<dependent type>' contains-errors lvalue ->sizeabslineinfo
        | |       | `-RecoveryExpr 0x154941848 <col:30> '<dependent type>' contains-errors lvalue
        | |       `-IntegerLiteral 0x1549418b0 <col:51> 'int' 1
        | |-BinaryOperator 0x154941a58 <line:9:7, col:32> 'unsigned int' contains-errors '='
        | | |-DeclRefExpr 0x154941990 <col:7> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        | | `-BinaryOperator 0x154941a38 <col:11, col:32> '<dependent type>' contains-errors '-'
        | |   |-CXXDependentScopeMemberExpr 0x1549419d0 <col:11, col:14> '<dependent type>' contains-errors lvalue ->sizeabslineinfo
        | |   | `-RecoveryExpr 0x1549419b0 <col:11> '<dependent type>' contains-errors lvalue
        | |   `-IntegerLiteral 0x154941a18 <col:32> 'int' 1
        | `-CompoundStmt 0x154942178 <line:10:10, line:20:5>
        |   |-DeclStmt 0x154941ba0 <line:11:7, col:46>
        |   | `-VarDecl 0x154941a90 <col:7, col:45> col:20 used j 'unsigned int' cinit
        |   |   `-BinaryOperator 0x154941b80 <col:24, col:45> '<dependent type>' contains-errors '-'
        |   |     |-CXXDependentScopeMemberExpr 0x154941b18 <col:24, col:27> '<dependent type>' contains-errors lvalue ->sizeabslineinfo
        |   |     | `-RecoveryExpr 0x154941af8 <col:24> '<dependent type>' contains-errors lvalue
        |   |     `-IntegerLiteral 0x154941b60 <col:45> 'int' 1
        |   |-BinaryOperator 0x154941c10 <line:12:7, col:11> 'unsigned int' '='
        |   | |-DeclRefExpr 0x154941bb8 <col:7> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        |   | `-ImplicitCastExpr 0x154941bf8 <col:11> 'unsigned int' <IntegralCast>
        |   |   `-IntegerLiteral 0x154941bd8 <col:11> 'int' 0
        |   `-WhileStmt 0x154942158 <line:13:7, line:19:7>
        |     |-BinaryOperator 0x154941cf8 <line:13:14, col:22> 'int' contains-errors '<'
        |     | |-ImplicitCastExpr 0x154941ce0 <col:14> 'unsigned int' <LValueToRValue>
        |     | | `-DeclRefExpr 0x154941c30 <col:14> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        |     | `-BinaryOperator 0x154941cc0 <col:18, col:22> 'unsigned int' contains-errors '-'
        |     |   |-ImplicitCastExpr 0x154941c90 <col:18> 'unsigned int' contains-errors <LValueToRValue>
        |     |   | `-DeclRefExpr 0x154941c50 <col:18> 'unsigned int' contains-errors lvalue Var 0x154941a90 'j' 'unsigned int'
        |     |   `-ImplicitCastExpr 0x154941ca8 <col:22> 'unsigned int' <IntegralCast>
        |     |     `-IntegerLiteral 0x154941c70 <col:22> 'int' 1
        |     `-CompoundStmt 0x154942138 <col:25, line:19:7>
        |       |-DeclStmt 0x154941ea0 <line:14:9, col:37>
        |       | `-VarDecl 0x154941d30 <col:9, col:36> col:22 used m 'unsigned int' cinit
        |       |   `-BinaryOperator 0x154941e80 <col:26, col:36> 'unsigned int' contains-errors '/'
        |       |     |-ParenExpr 0x154941e28 <col:26, col:32> 'unsigned int' contains-errors
        |       |     | `-BinaryOperator 0x154941e08 <col:27, col:31> 'unsigned int' contains-errors '+'
        |       |     |   |-ImplicitCastExpr 0x154941dd8 <col:27> 'unsigned int' contains-errors <LValueToRValue>
        |       |     |   | `-DeclRefExpr 0x154941d98 <col:27> 'unsigned int' contains-errors lvalue Var 0x154941a90 'j' 'unsigned int'
        |       |     |   `-ImplicitCastExpr 0x154941df0 <col:31> 'unsigned int' <LValueToRValue>
        |       |     |     `-DeclRefExpr 0x154941db8 <col:31> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        |       |     `-ImplicitCastExpr 0x154941e68 <col:36> 'unsigned int' <IntegralCast>
        |       |       `-IntegerLiteral 0x154941e48 <col:36> 'int' 2
        |       `-IfStmt 0x154942108 <line:15:9, line:18:15> has_else
        |         |-BinaryOperator 0x154941ff8 <line:15:13, col:37> 'int' contains-errors '>='
        |         | |-DeclRefExpr 0x154941eb8 <col:13> 'int' lvalue ParmVar 0x154928170 'pc' 'int'
        |         | `-CXXDependentScopeMemberExpr 0x154941fb0 <col:19, col:37> '<dependent type>' contains-errors lvalue .pc
        |         |   `-ArraySubscriptExpr 0x154941f90 <col:19, col:35> '<dependent type>' contains-errors lvalue
        |         |     |-ImplicitCastExpr 0x154941f60 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>
        |         |     | `-CXXDependentScopeMemberExpr 0x154941ef8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->abslineinfo
        |         |     |   `-RecoveryExpr 0x154941ed8 <col:19> '<dependent type>' contains-errors lvalue
        |         |     `-ImplicitCastExpr 0x154941f78 <col:34> 'unsigned int' contains-errors <LValueToRValue>
        |         |       `-DeclRefExpr 0x154941f40 <col:34> 'unsigned int' contains-errors lvalue Var 0x154941d30 'm' 'unsigned int'
        |         |-BinaryOperator 0x154942070 <line:16:11, col:15> 'unsigned int' contains-errors '='
        |         | |-DeclRefExpr 0x154942018 <col:11> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        |         | `-ImplicitCastExpr 0x154942058 <col:15> 'unsigned int' contains-errors <LValueToRValue>
        |         |   `-DeclRefExpr 0x154942038 <col:15> 'unsigned int' contains-errors lvalue Var 0x154941d30 'm' 'unsigned int'
        |         `-BinaryOperator 0x1549420e8 <line:18:11, col:15> 'unsigned int' contains-errors '='
        |           |-DeclRefExpr 0x154942090 <col:11> 'unsigned int' contains-errors lvalue Var 0x154941a90 'j' 'unsigned int'
        |           `-ImplicitCastExpr 0x1549420d0 <col:15> 'unsigned int' contains-errors <LValueToRValue>
        |             `-DeclRefExpr 0x1549420b0 <col:15> 'unsigned int' contains-errors lvalue Var 0x154941d30 'm' 'unsigned int'
        |-BinaryOperator 0x154942340 <line:21:5, col:33> 'int' contains-errors '='
        | |-UnaryOperator 0x154942208 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
        | | `-ImplicitCastExpr 0x1549421f0 <col:6> 'int *' <LValueToRValue>
        | |   `-DeclRefExpr 0x1549421d0 <col:6> 'int *' lvalue ParmVar 0x154928228 'basepc' 'int *'
        | `-CXXDependentScopeMemberExpr 0x1549422f8 <col:15, col:33> '<dependent type>' contains-errors lvalue .pc
        |   `-ArraySubscriptExpr 0x1549422d8 <col:15, col:31> '<dependent type>' contains-errors lvalue
        |     |-ImplicitCastExpr 0x1549422a8 <col:15, col:18> '<dependent type>' contains-errors <LValueToRValue>
        |     | `-CXXDependentScopeMemberExpr 0x154942240 <col:15, col:18> '<dependent type>' contains-errors lvalue ->abslineinfo
        |     |   `-RecoveryExpr 0x154942220 <col:15> '<dependent type>' contains-errors lvalue
        |     `-ImplicitCastExpr 0x1549422c0 <col:30> 'unsigned int' <LValueToRValue>
        |       `-DeclRefExpr 0x154942288 <col:30> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
        `-ReturnStmt 0x154942480 <line:22:5, col:30>
          `-CXXDependentScopeMemberExpr 0x154942438 <col:12, col:30> '<dependent type>' contains-errors lvalue .line
            `-ArraySubscriptExpr 0x154942418 <col:12, col:28> '<dependent type>' contains-errors lvalue
              |-ImplicitCastExpr 0x1549423e8 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
              | `-CXXDependentScopeMemberExpr 0x154942380 <col:12, col:15> '<dependent type>' contains-errors lvalue ->abslineinfo
              |   `-RecoveryExpr 0x154942360 <col:12> '<dependent type>' contains-errors lvalue
              `-ImplicitCastExpr 0x154942400 <col:27> 'unsigned int' <LValueToRValue>
                `-DeclRefExpr 0x1549423c8 <col:27> 'unsigned int' lvalue Var 0x154928740 'i' 'unsigned int'
