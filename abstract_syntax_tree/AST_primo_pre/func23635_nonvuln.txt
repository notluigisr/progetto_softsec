`-FunctionDecl 0x15580de88  line:1:6 invalid FromkLinuxSigset 'int (const int *, int *)'
  |-ParmVarDecl 0x15580dcf0 <col:23, col:46> col:46 invalid input 'const int *'
  |-ParmVarDecl 0x15580dda8 <col:53, col:63> col:63 referenced invalid output 'int *'
  `-CompoundStmt 0x155827f40 <col:71, line:16:1>
    |-IfStmt 0x15580e0f0 <line:2:3, line:5:3>
    | |-BinaryOperator 0x15580dfe0 <line:2:7, col:18> 'int' contains-errors '||'
    | | |-UnaryOperator 0x15580df78 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x15580df60 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x15580df40 <col:8> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x15580dfc8 <col:17, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x15580dfb0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x15580df90 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15580e0d8 <col:26, line:5:3>
    |   `-BinaryOperator 0x15580e0a0 <line:3:5, col:14> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x15580e020 <col:5> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x15580e000 <col:5> 'int *' lvalue ParmVar 0x15580dda8 'output' 'int *'
    |     `-RecoveryExpr 0x15580e080 <col:14> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15580e2b0 <line:6:3, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15580e270 <col:3> 'int ()' Function 0x15580e1b8 'sigemptyset' 'int ()'
    | `-RecoveryExpr 0x15580e290 <col:15> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x155827ec0 <line:7:3, line:14:3>
    | |-DeclStmt 0x15580e378 <line:7:8, col:26>
    | | `-VarDecl 0x15580e2f0 <col:8, col:25> col:12 used klinux_sig 'int' cinit
    | |   `-IntegerLiteral 0x15580e358 <col:25> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x155827820 <col:28, col:41> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x15580e390 <col:28> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'
    | | `-RecoveryExpr 0x155827800 <col:41> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x155827860 <col:54, col:64> 'int' postfix '++'
    | | `-DeclRefExpr 0x155827840 <col:54> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'
    | `-CompoundStmt 0x155827ea8 <col:68, line:14:3>
    |   `-IfStmt 0x155827e88 <line:8:5, line:13:5>
    |     |-CallExpr 0x1558279b8 <line:8:9, col:45> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x155827958 <col:9> 'int ()' Function 0x1558278a0 'klinux_sigismember' 'int ()'
    |     | |-RecoveryExpr 0x155827978 <col:28> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x155827998 <col:35> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'
    |     `-CompoundStmt 0x155827e68 <col:48, line:13:5>
    |       |-DeclStmt 0x155827c18 <line:9:7, col:51>
    |       | `-VarDecl 0x155827a00 <col:7, col:50> col:11 used sig 'int' cinit
    |       |   `-CallExpr 0x155827bd8 <col:17, col:50> 'int'
    |       |     |-ImplicitCastExpr 0x155827bc0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x155827b48 <col:17> 'int ()' Function 0x155827a90 'FromkLinuxSignalNumber' 'int ()'
    |       |     `-ImplicitCastExpr 0x155827c00 <col:40> 'int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x155827b68 <col:40> 'int' lvalue Var 0x15580e2f0 'klinux_sig' 'int'
    |       `-IfStmt 0x155827e48 <line:10:7, line:12:7>
    |         |-BinaryOperator 0x155827ca0 <line:10:11, col:19> 'int' '!='
    |         | |-ImplicitCastExpr 0x155827c88 <col:11> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x155827c30 <col:11> 'int' lvalue Var 0x155827a00 'sig' 'int'
    |         | `-UnaryOperator 0x155827c70 <col:18, col:19> 'int' prefix '-'
    |         |   `-IntegerLiteral 0x155827c50 <col:19> 'int' 1
    |         `-CompoundStmt 0x155827e30 <col:22, line:12:7>
    |           `-CallExpr 0x155827e00 <line:11:9, col:30> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x155827da0 <col:9> 'int ()' Function 0x155827ce8 'sigaddset' 'int ()'
    |             |-RecoveryExpr 0x155827dc0 <col:19> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x155827de0 <col:27> 'int' lvalue Var 0x155827a00 'sig' 'int'
    `-ReturnStmt 0x155827f30 <line:15:3, col:10>
      `-RecoveryExpr 0x155827f10 <col:10> '<dependent type>' contains-errors lvalue
