`-FunctionDecl 0x10704e568  line:1:1 invalid yy_symbol_value_print 'int (int *, int, const int *const)'
  |-ParmVarDecl 0x10704e328 <col:24, col:30> col:30 invalid yyoutput 'int *'
  |-ParmVarDecl 0x10704e3a8 <col:40, col:44> col:44 used yytype 'int'
  |-ParmVarDecl 0x10704e428 <col:52, col:74> col:74 invalid yyvaluep 'const int *const'
  `-CompoundStmt 0x10704e9b8 <line:2:1, line:12:1>
    |-CallExpr 0x10704e840 <line:4:3, col:13> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x10704e7c0 <col:3> 'int ()' Function 0x10704e708 'YYUSE' 'int ()'
    | `-RecoveryExpr 0x10704e820 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x10704e8c8 <line:5:3, line:6:5>
    | |-UnaryOperator 0x10704e8a0 <line:5:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x10704e888 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x10704e868 <col:8> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x10704e8b8 <line:6:5>
    `-CallExpr 0x10704e978 <line:11:3, col:16> 'int'
      |-ImplicitCastExpr 0x10704e960 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x10704e8e8 <col:3> 'int ()' Function 0x10704e708 'YYUSE' 'int ()'
      `-ImplicitCastExpr 0x10704e9a0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x10704e908 <col:10> 'int' lvalue ParmVar 0x10704e3a8 'yytype' 'int'
