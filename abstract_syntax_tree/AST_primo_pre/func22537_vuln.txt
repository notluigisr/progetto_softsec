`-FunctionDecl 0x12a80df78  line:1:1 invalid scroll_idl 'int (int, int, int, int)'
  |-ParmVarDecl 0x12a80dcf0 <col:12, col:32> col:32 invalid n 'int'
  |-ParmVarDecl 0x12a80dd70 <col:35, col:39> col:39 del 'int'
  |-ParmVarDecl 0x12a80ddf0 <col:44, col:48> col:48 ins 'int'
  |-ParmVarDecl 0x12a80de70 <col:53, col:66> col:66 invalid blank 'int'
  `-CompoundStmt 0x12b00a668 <line:2:1, line:41:1>
    |-DeclStmt 0x12a80e0c0 <line:3:5, col:10>
    | `-VarDecl 0x12a80e058 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x12a80e1e0 <line:5:5, line:6:9>
    | |-RecoveryExpr 0x12a80e178 <line:5:9, col:81> '_Bool' contains-errors
    | `-ReturnStmt 0x12a80e1d0 <line:6:2, col:9>
    |   `-RecoveryExpr 0x12a80e1b0 <col:9> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12b009960 <line:9:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b0098b8 <col:5> 'int ()' Function 0x12b009800 'UpdateAttrs' 'int ()'
    | |-RecoveryExpr 0x12b009940 <col:17> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12b0098f0 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b00a1c0 <line:10:5, line:22:5> has_else
    | |-BinaryOperator 0x12b009a48 <line:10:9, col:19> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12b0099d0 <col:9, col:14> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x12b009990 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x12b0099b0 <col:14> 'int' 1
    | | `-RecoveryExpr 0x12b009a28 <col:19> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12b009c68 <col:32, line:12:5>
    | | `-CallExpr 0x12b009c38 <line:11:2, col:34> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12b009b48 <col:2> 'int ()' Function 0x12b009a90 'NCURSES_PUTP2' 'int ()'
    | |   |-StringLiteral 0x12b009bb0 <col:16> 'char[4]' lvalue "STR"
    | |   `-RecoveryExpr 0x12b009c18 <col:23> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x12b00a190 <line:12:12, line:22:5> has_else
    |   |-RecoveryExpr 0x12b009c98 <line:12:16> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x12b009fe0 <col:34, line:18:5>
    |   | `-CallExpr 0x12b009e28 <line:13:2, col:19> 'int'
    |   |   |-ImplicitCastExpr 0x12b009e10 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12b009d98 <col:2> 'int ()' Function 0x12b009ce0 'TPUTS_TRACE' 'int ()'
    |   |   `-ImplicitCastExpr 0x12b009e50 <col:14> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x12b009db8 <col:14> 'char[4]' lvalue "STR"
    |   `-CompoundStmt 0x12b00a178 <line:18:12, line:22:5>
    |     `-ForStmt 0x12b00a140 <line:19:2, line:21:2>
    |       |-BinaryOperator 0x12b00a038 <line:19:7, col:11> 'int' '='
    |       | |-DeclRefExpr 0x12b009ff8 <col:7> 'int' lvalue Var 0x12a80e058 'i' 'int'
    |       | `-IntegerLiteral 0x12b00a018 <col:11> 'int' 0
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x12b00a098 <col:14, col:18> 'int' contains-errors '<'
    |       | |-DeclRefExpr 0x12b00a058 <col:14> 'int' lvalue Var 0x12a80e058 'i' 'int'
    |       | `-RecoveryExpr 0x12b00a078 <col:18> '<dependent type>' contains-errors lvalue
    |       |-UnaryOperator 0x12b00a0d8 <col:21, col:22> 'int' postfix '++'
    |       | `-DeclRefExpr 0x12b00a0b8 <col:21> 'int' lvalue Var 0x12a80e058 'i' 'int'
    |       `-CompoundStmt 0x12b00a130 <col:26, line:21:2>
    `-IfStmt 0x12b00a638 <line:26:5, line:38:5> has_else
      |-RecoveryExpr 0x12b00a2d0 <line:26:9, col:19> '_Bool' contains-errors
      |-CompoundStmt 0x12b00a330 <col:32, line:28:5>
      `-IfStmt 0x12b00a608 <col:12, line:38:5> has_else
        |-RecoveryExpr 0x12b00a340 <line:28:16> '_Bool' contains-errors
        |-CompoundStmt 0x12b00a458 <col:34, line:34:5>
        | `-CallExpr 0x12b00a3b8 <line:29:2, col:19> 'int'
        |   |-ImplicitCastExpr 0x12b00a3a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12b00a360 <col:2> 'int ()' Function 0x12b009ce0 'TPUTS_TRACE' 'int ()'
        |   `-ImplicitCastExpr 0x12b00a3e0 <col:14> 'char *' <ArrayToPointerDecay>
        |     `-StringLiteral 0x12b00a380 <col:14> 'char[4]' lvalue "STR"
        `-CompoundStmt 0x12b00a5f0 <line:34:12, line:38:5>
          `-ForStmt 0x12b00a5b8 <line:35:2, line:37:2>
            |-BinaryOperator 0x12b00a4b0 <line:35:7, col:11> 'int' '='
            | |-DeclRefExpr 0x12b00a470 <col:7> 'int' lvalue Var 0x12a80e058 'i' 'int'
            | `-IntegerLiteral 0x12b00a490 <col:11> 'int' 0
            |-<<<NULL>>>
            |-BinaryOperator 0x12b00a510 <col:14, col:18> 'int' contains-errors '<'
            | |-DeclRefExpr 0x12b00a4d0 <col:14> 'int' lvalue Var 0x12a80e058 'i' 'int'
            | `-RecoveryExpr 0x12b00a4f0 <col:18> '<dependent type>' contains-errors lvalue
            |-UnaryOperator 0x12b00a550 <col:21, col:22> 'int' postfix '++'
            | `-DeclRefExpr 0x12b00a530 <col:21> 'int' lvalue Var 0x12a80e058 'i' 'int'
            `-CompoundStmt 0x12b00a5a8 <col:26, line:37:2>
