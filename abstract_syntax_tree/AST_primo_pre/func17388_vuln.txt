`-FunctionDecl 0x13780de88  line:1:12 invalid fts3SpecialInsert 'int (int *, int *)' static
  |-ParmVarDecl 0x13780dd28 <col:30, col:41> col:41 invalid p 'int *'
  |-ParmVarDecl 0x13780dda8 <col:44, col:59> col:59 invalid pVal 'int *'
  `-CompoundStmt 0x13782a940 <col:64, line:34:1>
    |-DeclStmt 0x13780dfc0 <line:2:3, col:9>
    | `-VarDecl 0x13780df58 <col:3, col:7> col:7 used rc 'int'
    |-DeclStmt 0x13780e258 <line:3:3, col:60>
    | `-VarDecl 0x13780dff0 <col:3, col:59> col:15 used zVal 'const char *' cinit
    |   `-CStyleCastExpr 0x13780e230 <col:22, col:59> 'const char *' contains-errors <Dependent>
    |     `-CallExpr 0x13780e1f0 <col:36, col:59> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13780e1b0 <col:36> 'int ()' Function 0x13780e0f8 'sqlite3_value_text' 'int ()'
    |       `-RecoveryExpr 0x13780e1d0 <col:55> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x137828448 <line:4:3, col:39>
    | `-VarDecl 0x13780e288 <col:3, col:38> col:7 used nVal 'int' cinit
    |   `-CallExpr 0x137828420 <col:14, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13780e3d0 <col:14> 'int ()' Function 0x13780e318 'sqlite3_value_bytes' 'int ()'
    |     `-RecoveryExpr 0x137828400 <col:34> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13782a8c8 <line:6:3, line:31:3> has_else
    | |-UnaryOperator 0x137828498 <line:6:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x137828480 <col:8> 'const char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x137828460 <col:8> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    | |-CompoundStmt 0x1378284f8 <col:14, line:8:3>
    | | `-ReturnStmt 0x1378284e8 <line:7:5, col:12>
    | |   `-RecoveryExpr 0x1378284c8 <col:12> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x13782a898 <line:8:9, line:31:3> has_else
    |   |-BinaryOperator 0x137828820 <line:8:13, col:58> 'int' contains-errors '&&'
    |   | |-BinaryOperator 0x137828568 <col:13, col:19> 'int' contains-errors '=='
    |   | | |-ImplicitCastExpr 0x137828550 <col:13> 'int' contains-errors <LValueToRValue>
    |   | | | `-DeclRefExpr 0x137828510 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'
    |   | | `-IntegerLiteral 0x137828530 <col:19> 'int' 8
    |   | `-BinaryOperator 0x137828800 <col:24, col:58> 'int' contains-errors '=='
    |   |   |-IntegerLiteral 0x137828588 <col:24> 'int' 0
    |   |   `-CallExpr 0x137828798 <col:27, col:58> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x137828780 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x137828688 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'
    |   |     |-ImplicitCastExpr 0x1378287d0 <col:44> 'const char *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1378286a8 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |   |     |-ImplicitCastExpr 0x1378287e8 <col:50> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x137828710 <col:50> 'char[4]' lvalue "STR"
    |   |     `-IntegerLiteral 0x137828730 <col:57> 'int' 8
    |   |-CompoundStmt 0x1378289f0 <col:61, line:10:3>
    |   | `-BinaryOperator 0x1378289d0 <line:9:5, col:29> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x137828840 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |   |   `-CallExpr 0x1378289a0 <col:10, col:29> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x137828940 <col:10> 'int ()' Function 0x137828888 'fts3DoOptimize' 'int ()'
    |   |     |-RecoveryExpr 0x137828960 <col:25> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x137828980 <col:28> 'int' 0
    |   `-IfStmt 0x13782a868 <line:10:9, line:31:3> has_else
    |     |-BinaryOperator 0x137828bc0 <line:10:13, col:58> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x137828a60 <col:13, col:19> 'int' contains-errors '=='
    |     | | |-ImplicitCastExpr 0x137828a48 <col:13> 'int' contains-errors <LValueToRValue>
    |     | | | `-DeclRefExpr 0x137828a08 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'
    |     | | `-IntegerLiteral 0x137828a28 <col:19> 'int' 7
    |     | `-BinaryOperator 0x137828ba0 <col:24, col:58> 'int' contains-errors '=='
    |     |   |-IntegerLiteral 0x137828a80 <col:24> 'int' 0
    |     |   `-CallExpr 0x137828b38 <col:27, col:58> 'int' contains-errors
    |     |     |-ImplicitCastExpr 0x137828b20 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x137828aa0 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'
    |     |     |-ImplicitCastExpr 0x137828b70 <col:44> 'const char *' contains-errors <LValueToRValue>
    |     |     | `-DeclRefExpr 0x137828ac0 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |     |     |-ImplicitCastExpr 0x137828b88 <col:50> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x137828ae0 <col:50> 'char[4]' lvalue "STR"
    |     |     `-IntegerLiteral 0x137828b00 <col:57> 'int' 7
    |     |-CompoundStmt 0x137828d68 <col:61, line:12:3>
    |     | `-BinaryOperator 0x137828d48 <line:11:5, col:25> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x137828be0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |     |   `-CallExpr 0x137828d20 <col:10, col:25> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x137828ce0 <col:10> 'int ()' Function 0x137828c28 'fts3DoRebuild' 'int ()'
    |     |     `-RecoveryExpr 0x137828d00 <col:24> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x13782a838 <line:12:9, line:31:3> has_else
    |       |-BinaryOperator 0x137828f38 <line:12:13, col:60> 'int' contains-errors '&&'
    |       | |-BinaryOperator 0x137828dd8 <col:13, col:19> 'int' contains-errors '=='
    |       | | |-ImplicitCastExpr 0x137828dc0 <col:13> 'int' contains-errors <LValueToRValue>
    |       | | | `-DeclRefExpr 0x137828d80 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'
    |       | | `-IntegerLiteral 0x137828da0 <col:19> 'int' 15
    |       | `-BinaryOperator 0x137828f18 <col:25, col:60> 'int' contains-errors '=='
    |       |   |-IntegerLiteral 0x137828df8 <col:25> 'int' 0
    |       |   `-CallExpr 0x137828eb0 <col:28, col:60> 'int' contains-errors
    |       |     |-ImplicitCastExpr 0x137828e98 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x137828e18 <col:28> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'
    |       |     |-ImplicitCastExpr 0x137828ee8 <col:45> 'const char *' contains-errors <LValueToRValue>
    |       |     | `-DeclRefExpr 0x137828e38 <col:45> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |       |     |-ImplicitCastExpr 0x137828f00 <col:51> 'char *' <ArrayToPointerDecay>
    |       |     | `-StringLiteral 0x137828e58 <col:51> 'char[4]' lvalue "STR"
    |       |     `-IntegerLiteral 0x137828e78 <col:58> 'int' 15
    |       |-CompoundStmt 0x1378290e0 <col:63, line:14:3>
    |       | `-BinaryOperator 0x1378290c0 <line:13:5, col:32> 'int' contains-errors '='
    |       |   |-DeclRefExpr 0x137828f58 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |       |   `-CallExpr 0x137829098 <col:10, col:32> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x137829058 <col:10> 'int ()' Function 0x137828fa0 'fts3DoIntegrityCheck' 'int ()'
    |       |     `-RecoveryExpr 0x137829078 <col:31> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x13782a808 <line:14:9, line:31:3> has_else
    |         |-BinaryOperator 0x1378292b0 <line:14:13, col:57> 'int' contains-errors '&&'
    |         | |-BinaryOperator 0x137829150 <col:13, col:18> 'int' contains-errors '>'
    |         | | |-ImplicitCastExpr 0x137829138 <col:13> 'int' contains-errors <LValueToRValue>
    |         | | | `-DeclRefExpr 0x1378290f8 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'
    |         | | `-IntegerLiteral 0x137829118 <col:18> 'int' 6
    |         | `-BinaryOperator 0x137829290 <col:23, col:57> 'int' contains-errors '=='
    |         |   |-IntegerLiteral 0x137829170 <col:23> 'int' 0
    |         |   `-CallExpr 0x137829228 <col:26, col:57> 'int' contains-errors
    |         |     |-ImplicitCastExpr 0x137829210 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |         |     | `-DeclRefExpr 0x137829190 <col:26> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'
    |         |     |-ImplicitCastExpr 0x137829260 <col:43> 'const char *' contains-errors <LValueToRValue>
    |         |     | `-DeclRefExpr 0x1378291b0 <col:43> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |         |     |-ImplicitCastExpr 0x137829278 <col:49> 'char *' <ArrayToPointerDecay>
    |         |     | `-StringLiteral 0x1378291d0 <col:49> 'char[4]' lvalue "STR"
    |         |     `-IntegerLiteral 0x1378291f0 <col:56> 'int' 6
    |         |-CompoundStmt 0x13782a300 <col:60, line:16:3>
    |         | `-BinaryOperator 0x13782a2e0 <line:15:5, col:37> 'int' contains-errors '='
    |         |   |-DeclRefExpr 0x1378292d0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |         |   `-CallExpr 0x13782a2b0 <col:10, col:37> '<dependent type>' contains-errors
    |         |     |-DeclRefExpr 0x1378293d0 <col:10> 'int ()' Function 0x137829318 'fts3DoIncrmerge' 'int ()'
    |         |     |-RecoveryExpr 0x13782a200 <col:26> '<dependent type>' contains-errors lvalue
    |         |     `-UnaryOperator 0x13782a298 <col:29, col:36> 'const char *' contains-errors prefix '&' cannot overflow
    |         |       `-ArraySubscriptExpr 0x13782a278 <col:30, col:36> 'const char' contains-errors lvalue
    |         |         |-ImplicitCastExpr 0x13782a260 <col:30> 'const char *' contains-errors <LValueToRValue>
    |         |         | `-DeclRefExpr 0x13782a220 <col:30> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |         |         `-IntegerLiteral 0x13782a240 <col:35> 'int' 6
    |         `-IfStmt 0x13782a7d8 <line:16:9, line:31:3> has_else
    |           |-BinaryOperator 0x13782a4d0 <line:16:13, col:59> 'int' contains-errors '&&'
    |           | |-BinaryOperator 0x13782a370 <col:13, col:18> 'int' contains-errors '>'
    |           | | |-ImplicitCastExpr 0x13782a358 <col:13> 'int' contains-errors <LValueToRValue>
    |           | | | `-DeclRefExpr 0x13782a318 <col:13> 'int' contains-errors lvalue Var 0x13780e288 'nVal' 'int'
    |           | | `-IntegerLiteral 0x13782a338 <col:18> 'int' 10
    |           | `-BinaryOperator 0x13782a4b0 <col:24, col:59> 'int' contains-errors '=='
    |           |   |-IntegerLiteral 0x13782a390 <col:24> 'int' 0
    |           |   `-CallExpr 0x13782a448 <col:27, col:59> 'int' contains-errors
    |           |     |-ImplicitCastExpr 0x13782a430 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |           |     | `-DeclRefExpr 0x13782a3b0 <col:27> 'int ()' Function 0x1378285d0 'sqlite3_strnicmp' 'int ()'
    |           |     |-ImplicitCastExpr 0x13782a480 <col:44> 'const char *' contains-errors <LValueToRValue>
    |           |     | `-DeclRefExpr 0x13782a3d0 <col:44> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |           |     |-ImplicitCastExpr 0x13782a498 <col:50> 'char *' <ArrayToPointerDecay>
    |           |     | `-StringLiteral 0x13782a3f0 <col:50> 'char[4]' lvalue "STR"
    |           |     `-IntegerLiteral 0x13782a410 <col:57> 'int' 10
    |           |-CompoundStmt 0x13782a710 <col:62, line:29:3>
    |           | `-BinaryOperator 0x13782a6f0 <line:17:5, col:42> 'int' contains-errors '='
    |           |   |-DeclRefExpr 0x13782a4f0 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |           |   `-CallExpr 0x13782a6c0 <col:10, col:42> '<dependent type>' contains-errors
    |           |     |-DeclRefExpr 0x13782a5f0 <col:10> 'int ()' Function 0x13782a538 'fts3DoAutoincrmerge' 'int ()'
    |           |     |-RecoveryExpr 0x13782a610 <col:30> '<dependent type>' contains-errors lvalue
    |           |     `-UnaryOperator 0x13782a6a8 <col:33, col:41> 'const char *' contains-errors prefix '&' cannot overflow
    |           |       `-ArraySubscriptExpr 0x13782a688 <col:34, col:41> 'const char' contains-errors lvalue
    |           |         |-ImplicitCastExpr 0x13782a670 <col:34> 'const char *' contains-errors <LValueToRValue>
    |           |         | `-DeclRefExpr 0x13782a630 <col:34> 'const char *' contains-errors lvalue Var 0x13780dff0 'zVal' 'const char *'
    |           |         `-IntegerLiteral 0x13782a650 <col:39> 'int' 10
    |           `-CompoundStmt 0x13782a7c0 <line:29:8, line:31:3>
    |             `-BinaryOperator 0x13782a7a0 <line:30:5, col:10> 'int' contains-errors '='
    |               |-DeclRefExpr 0x13782a728 <col:5> 'int' lvalue Var 0x13780df58 'rc' 'int'
    |               `-RecoveryExpr 0x13782a780 <col:10> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13782a930 <line:33:3, col:10>
      `-ImplicitCastExpr 0x13782a918 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13782a8f8 <col:10> 'int' lvalue Var 0x13780df58 'rc' 'int'
