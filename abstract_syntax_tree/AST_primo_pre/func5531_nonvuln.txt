`-FunctionDecl 0x13c00e3f0  line:1:13 invalid testReloadDirty 'void (int *)' static
  |-ParmVarDecl 0x13c00e328 <col:29, col:37> col:37 invalid tc 'int *'
  `-CompoundStmt 0x13c028c98 <col:41, line:21:1>
    |-DeclStmt 0x13c00e550 <line:3:5, col:10>
    | `-VarDecl 0x13c00e4e8 <col:5, col:9> col:9 used r 'int'
    |-BinaryOperator 0x13c00e8f0 <line:7:5, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c00e728 <col:5> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    | `-CallExpr 0x13c00e8c8 <col:9, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c00e828 <col:9> 'int ()' Function 0x13c00e770 'aug_load' 'int ()'
    |   `-RecoveryExpr 0x13c00e8a8 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c028260 <line:8:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c028200 <col:5> 'int ()' Function 0x13c00e938 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x13c028220 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13c028240 <col:28> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    |-BinaryOperator 0x13c0284d0 <line:11:5, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c028290 <col:5> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    | `-CallExpr 0x13c0284a0 <col:9, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c028390 <col:9> 'int ()' Function 0x13c0282d8 'aug_set' 'int ()'
    |   |-RecoveryExpr 0x13c028480 <col:17> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c028410 <col:22> 'char[4]' lvalue "STR"
    |-CallExpr 0x13c028550 <line:12:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c0284f0 <col:5> 'int ()' Function 0x13c00e938 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x13c028510 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13c028530 <col:28> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    |-BinaryOperator 0x13c028668 <line:14:5, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c028580 <col:5> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    | `-CallExpr 0x13c028640 <col:9, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c0285a0 <col:9> 'int ()' Function 0x13c00e770 'aug_load' 'int ()'
    |   `-RecoveryExpr 0x13c028620 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c0286e8 <line:15:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c028688 <col:5> 'int ()' Function 0x13c00e938 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x13c0286a8 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13c0286c8 <col:28> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    |-BinaryOperator 0x13c028958 <line:17:5, col:35> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c028718 <col:5> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    | `-CallExpr 0x13c028920 <col:9, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c028818 <col:9> 'int ()' Function 0x13c028760 'aug_match' 'int ()'
    |   |-RecoveryExpr 0x13c0288e0 <col:19> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x13c028850 <col:24> 'char[4]' lvalue "STR"
    |   `-RecoveryExpr 0x13c028900 <col:31> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13c028ad8 <line:18:5, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c028a58 <col:5> 'int ()' Function 0x13c0289a0 'CuAssertIntEquals' 'int ()'
    | |-RecoveryExpr 0x13c028a78 <col:23> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x13c028a98 <col:27> 'int' 1
    | `-DeclRefExpr 0x13c028ab8 <col:30> 'int' lvalue Var 0x13c00e4e8 'r' 'int'
    `-CallExpr 0x13c028c70 <line:20:5, col:18> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c028bf0 <col:5> 'int ()' Function 0x13c028b38 'aug_close' 'int ()'
      `-RecoveryExpr 0x13c028c50 <col:15> '<dependent type>' contains-errors lvalue
