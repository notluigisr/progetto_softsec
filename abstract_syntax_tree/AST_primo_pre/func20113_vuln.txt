`-FunctionDecl 0x15380de58  line:1:1 invalid authtrust 'int (int, long)'
  |-ParmVarDecl 0x15380dcf0 <line:2:2, col:11> col:11 invalid id 'int'
  |-ParmVarDecl 0x15380dd70 <line:3:2, col:10> col:10 used trust 'long'
  `-CompoundStmt 0x1531236c8 <line:5:1, line:48:1>
    |-DeclStmt 0x15380dff0 <line:8:2, col:18>
    | `-VarDecl 0x15380df88 <col:2, col:10> col:10 used lifetime 'long'
    |-ForStmt 0x153122dd0 <line:12:2, line:15:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15380e2f8 <line:12:21, col:27> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x15380e2b8 <col:21> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15380e2d8 <col:27> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x153122c48 <col:33, col:42> '<dependent type>' contains-errors '='
    | | |-RecoveryExpr 0x15380e3b0 <col:33> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x153122c00 <col:38, col:42> '<dependent type>' contains-errors lvalue ->hlink
    | |   `-RecoveryExpr 0x15380e3d0 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x153122db8 <col:49, line:15:2>
    |   `-IfStmt 0x153122d98 <line:13:3, line:14:4>
    |     |-BinaryOperator 0x153122d70 <line:13:7, col:17> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x153122c68 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-CXXDependentScopeMemberExpr 0x153122d28 <col:13, col:17> '<dependent type>' contains-errors lvalue ->keyid
    |     |   `-RecoveryExpr 0x153122d08 <col:13> '<dependent type>' contains-errors lvalue
    |     `-BreakStmt 0x153122d90 <line:14:4>
    |-IfStmt 0x153122fb8 <line:16:2, line:17:3>
    | |-BinaryOperator 0x153122f88 <line:16:6, col:24> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x153122f10 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x153122ef8 <col:7> 'long' <LValueToRValue>
    | | |   `-DeclRefExpr 0x153122e08 <col:7> 'long' lvalue ParmVar 0x15380dd70 'trust' 'long'
    | | `-BinaryOperator 0x153122f68 <col:16, col:24> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x153122f28 <col:16> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x153122f48 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x153122fa8 <line:17:3>
    |-IfStmt 0x153123388 <line:20:2, line:39:2>
    | |-RecoveryExpr 0x153122fd8 <line:20:6, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x153123360 <col:18, line:39:2>
    |   |-IfStmt 0x153123088 <line:21:3, line:24:3>
    |   | |-RecoveryExpr 0x153123018 <line:21:7, col:22> '_Bool' contains-errors
    |   | `-CompoundStmt 0x153123078 <col:26, line:24:3>
    |   |-IfStmt 0x153123230 <line:27:3, line:34:3>
    |   | |-BinaryOperator 0x153123118 <line:27:7, col:15> 'int' '>'
    |   | | |-ImplicitCastExpr 0x1531230e8 <col:7> 'long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1531230a8 <col:7> 'long' lvalue ParmVar 0x15380dd70 'trust' 'long'
    |   | | `-ImplicitCastExpr 0x153123100 <col:15> 'long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1531230c8 <col:15> 'int' 0
    |   | `-CompoundStmt 0x153123218 <col:18, line:34:3>
    |   |   `-ReturnStmt 0x153123208 <line:33:4>
    |   `-ReturnStmt 0x153123350 <line:38:3>
    `-IfStmt 0x153123518 <line:42:2, line:46:2> has_else
      |-BinaryOperator 0x153123418 <line:42:6, col:14> 'int' '>'
      | |-ImplicitCastExpr 0x1531233e8 <col:6> 'long' <LValueToRValue>
      | | `-DeclRefExpr 0x1531233a8 <col:6> 'long' lvalue ParmVar 0x15380dd70 'trust' 'long'
      | `-ImplicitCastExpr 0x153123400 <col:14> 'long' <IntegralCast>
      |   `-IntegerLiteral 0x1531233c8 <col:14> 'int' 1
      |-CompoundStmt 0x153123478 <col:17, line:44:2>
      `-CompoundStmt 0x153123500 <col:9, line:46:2>
        `-BinaryOperator 0x1531234e0 <line:45:3, col:14> 'long' '='
          |-DeclRefExpr 0x153123488 <col:3> 'long' lvalue Var 0x15380df88 'lifetime' 'long'
          `-ImplicitCastExpr 0x1531234c8 <col:14> 'long' <IntegralCast>
            `-IntegerLiteral 0x1531234a8 <col:14> 'int' 0
