`-FunctionDecl 0x12a128118  line:1:1 SYSCALL_DEFINE1 'int ()'
  `-CompoundStmt 0x12a142090 <line:2:1, line:22:1>
    |-DeclStmt 0x12a128288 <line:3:2, col:11>
    | `-VarDecl 0x12a128220 <col:2, col:6> col:6 used error 'int'
    |-DeclStmt 0x12a1284d8 <line:4:2, col:29>
    | |-RecordDecl 0x12a1282a0 <col:2, col:9> col:9 struct eventpoll
    | `-VarDecl 0x12a128408 <col:2, col:25> col:20 used ep 'struct eventpoll *' cinit
    |   `-RecoveryExpr 0x12a1284a0 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12a1286c8 <line:7:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a1285d0 <col:2> 'int ()' Function 0x12a128518 'BUILD_BUG_ON' 'int ()'
    | `-BinaryOperator 0x12a1286a8 <col:15, col:32> 'int' contains-errors '!='
    |   |-RecoveryExpr 0x12a128668 <col:15> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12a128688 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a1418a8 <line:9:2, line:10:11>
    | |-BinaryOperator 0x12a1287e0 <line:9:6, col:15> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x12a128770 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12a1287c8 <col:14, col:15> '<dependent type>' contains-errors prefix '~' cannot overflow
    | |   `-ImplicitCastExpr 0x12a1287b0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x12a128790 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a141898 <line:10:3, col:11>
    |   `-UnaryOperator 0x12a141880 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12a141868 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12a141848 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a141b00 <line:12:2, col:22> 'int' contains-errors '='
    | |-DeclRefExpr 0x12a1418c8 <col:2> 'int' lvalue Var 0x12a128220 'error' 'int'
    | `-CallExpr 0x12a141ad8 <col:10, col:22> 'int' contains-errors
    |   |-ImplicitCastExpr 0x12a141ac0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a1419c8 <col:10> 'int ()' Function 0x12a141910 'ep_alloc' 'int ()'
    |   `-UnaryOperator 0x12a141a70 <col:19, col:20> 'struct eventpoll **' contains-errors prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12a1419e8 <col:20> 'struct eventpoll *' contains-errors lvalue Var 0x12a128408 'ep' 'struct eventpoll *'
    |-IfStmt 0x12a141be0 <line:13:2, line:14:10>
    | |-BinaryOperator 0x12a141b78 <line:13:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x12a141b60 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a141b20 <col:6> 'int' lvalue Var 0x12a128220 'error' 'int'
    | | `-IntegerLiteral 0x12a141b40 <col:14> 'int' 0
    | `-ReturnStmt 0x12a141bd0 <line:14:3, col:10>
    |   `-ImplicitCastExpr 0x12a141bb8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12a141b98 <col:10> 'int' lvalue Var 0x12a128220 'error' 'int'
    |-IfStmt 0x12a142028 <line:18:2, line:19:13>
    | |-BinaryOperator 0x12a141e90 <line:18:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x12a141e78 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12a141e38 <col:6> 'int' lvalue Var 0x12a128220 'error' 'int'
    | | `-IntegerLiteral 0x12a141e58 <col:14> 'int' 0
    | `-CallExpr 0x12a141fe8 <line:19:3, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x12a141fd0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a141f90 <col:3> 'int ()' Function 0x12a141ed8 'ep_free' 'int ()'
    |   `-ImplicitCastExpr 0x12a142010 <col:11> 'struct eventpoll *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12a141fb0 <col:11> 'struct eventpoll *' contains-errors lvalue Var 0x12a128408 'ep' 'struct eventpoll *'
    `-ReturnStmt 0x12a142080 <line:21:2, col:9>
      `-ImplicitCastExpr 0x12a142068 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a142048 <col:9> 'int' lvalue Var 0x12a128220 'error' 'int'
