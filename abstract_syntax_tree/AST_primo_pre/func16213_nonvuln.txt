`-FunctionDecl 0x13580ee58  line:1:12 invalid _gnutls_send_supplemental 'int (int, int)' static
  |-ParmVarDecl 0x13580ecf0 <col:38, col:55> col:55 invalid session 'int'
  |-ParmVarDecl 0x13580ed70 <col:64, col:68> col:68 used again 'int'
  `-CompoundStmt 0x135828f68 <line:2:1, line:38:1>
    |-DeclStmt 0x13580efc8 <line:4:2, col:13>
    | `-VarDecl 0x13580ef40 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x13580efa8 <col:12> 'int' 0
    |-CallExpr 0x13580f1e0 <line:6:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13580f140 <col:2> 'int ()' Function 0x13580f088 '_gnutls_debug_log' 'int ()'
    | |-StringLiteral 0x13580f1a0 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x13580f1c0 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x135828ef0 <line:8:2, line:35:2> has_else
    | |-ImplicitCastExpr 0x13580f230 <line:8:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13580f210 <col:6> 'int' lvalue ParmVar 0x13580ed70 'again' 'int'
    | |-BinaryOperator 0x135828298 <line:9:3, line:11:38> 'int' contains-errors '='
    | | |-DeclRefExpr 0x13580f248 <line:9:3> 'int' lvalue Var 0x13580ef40 'ret' 'int'
    | | `-CallExpr 0x135828260 <line:10:7, line:11:38> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x13580f348 <line:10:7> 'int ()' Function 0x13580f290 '_gnutls_send_handshake' 'int ()'
    | |   |-RecoveryExpr 0x13580f368 <col:30> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x135828220 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x135828240 <line:11:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x135828ec0 <line:12:7, line:35:2>
    |   |-CallExpr 0x135828448 <line:14:3, col:27> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x135828398 <col:3> 'int ()' Function 0x1358282e0 '_gnutls_buffer_init' 'int ()'
    |   | `-UnaryOperator 0x135828430 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x135828410 <col:24> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x135828698 <line:16:3, col:47> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x135828470 <col:3> 'int' lvalue Var 0x13580ef40 'ret' 'int'
    |   | `-CallExpr 0x135828668 <col:9, col:47> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x135828570 <col:9> 'int ()' Function 0x1358284b8 '_gnutls_gen_supplemental' 'int ()'
    |   |   |-RecoveryExpr 0x135828590 <col:34> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x135828650 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x135828630 <col:44> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x135828900 <line:17:3, line:20:3>
    |   | |-BinaryOperator 0x135828710 <line:17:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1358286f8 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1358286b8 <col:7> 'int' lvalue Var 0x13580ef40 'ret' 'int'
    |   | | `-IntegerLiteral 0x1358286d8 <col:13> 'int' 0
    |   | `-CompoundStmt 0x1358288e0 <col:16, line:20:3>
    |   |   |-CallExpr 0x135828878 <line:18:4, col:18> 'int'
    |   |   | `-ImplicitCastExpr 0x135828860 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x135828810 <col:4> 'int ()' Function 0x135828758 'gnutls_assert' 'int ()'
    |   |   `-ReturnStmt 0x1358288d0 <line:19:4, col:11>
    |   |     `-ImplicitCastExpr 0x1358288b8 <col:11> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x135828898 <col:11> 'int' lvalue Var 0x13580ef40 'ret' 'int'
    |   `-IfStmt 0x135828c40 <line:25:3, line:28:3>
    |     |-BinaryOperator 0x135828b60 <line:25:7, col:16> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x135828b20 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x135828b40 <col:16> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x135828c20 <col:22, line:28:3>
    |       |-CallExpr 0x135828bb8 <line:26:4, col:18> 'int'
    |       | `-ImplicitCastExpr 0x135828ba0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       |   `-DeclRefExpr 0x135828b80 <col:4> 'int ()' Function 0x135828758 'gnutls_assert' 'int ()'
    |       `-ReturnStmt 0x135828c10 <line:27:4, col:11>
    |         `-RecoveryExpr 0x135828bf0 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x135828f58 <line:37:2, col:9>
      `-ImplicitCastExpr 0x135828f40 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x135828f20 <col:9> 'int' lvalue Var 0x13580ef40 'ret' 'int'
