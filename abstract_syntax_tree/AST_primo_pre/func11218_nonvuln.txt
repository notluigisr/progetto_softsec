`-FunctionDecl 0x127928558  line:1:1 invalid process_acl 'int (int *, const int *, int *, const char *, const char *, int *, int *)'
  |-ParmVarDecl 0x127928128 <col:13, col:37> col:37 referenced invalid ctx 'int *'
  |-ParmVarDecl 0x1279281a8 <line:2:13, col:32> col:32 invalid acl 'const int *'
  |-ParmVarDecl 0x127928228 <line:3:13, col:21> col:21 invalid root 'int *'
  |-ParmVarDecl 0x1279282a8 <line:4:13, col:25> col:25 used repository 'const char *'
  |-ParmVarDecl 0x127928328 <line:5:13, col:25> col:25 used user 'const char *'
  |-ParmVarDecl 0x1279283a8 <line:6:13, col:25> col:25 invalid result_pool 'int *'
  |-ParmVarDecl 0x127928428 <line:7:13, col:25> col:25 invalid scratch_pool 'int *'
  `-CompoundStmt 0x127942d18 <line:8:1, line:46:1>
    |-DeclStmt 0x1279286b8 <line:10:3, col:8>
    | `-VarDecl 0x127928650 <col:3, col:7> col:7 used i 'int'
    |-IfStmt 0x127941af0 <line:14:3, line:15:5>
    | |-UnaryOperator 0x127941ac8 <line:14:7, col:76> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x127941a88 <col:8, col:76> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1279418b8 <col:8> 'int ()' Function 0x127941800 'svn_authz__get_acl_access' 'int ()'
    | |   |-UnaryOperator 0x127941a70 <col:34, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-CXXDependentScopeMemberExpr 0x127941a28 <col:35, col:47> '<dependent type>' contains-errors lvalue .rights
    | |   |   `-RecoveryExpr 0x127941a08 <col:35> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x127941950 <col:55> '<dependent type>' contains-errors lvalue
    | |   |-DeclRefExpr 0x127941970 <col:60> 'const char *' lvalue ParmVar 0x127928328 'user' 'const char *'
    | |   `-DeclRefExpr 0x127941990 <col:66> 'const char *' lvalue ParmVar 0x1279282a8 'repository' 'const char *'
    | `-ReturnStmt 0x127941ae0 <line:15:5>
    |-ForStmt 0x127942850 <line:22:3, line:40:5>
    | |-BinaryOperator 0x127941bd8 <line:22:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x127941b98 <col:8> 'int' lvalue Var 0x127928650 'i' 'int'
    | | `-IntegerLiteral 0x127941bb8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127941cc8 <col:15, col:30> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x127941bf8 <col:15> 'int' lvalue Var 0x127928650 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x127941c80 <col:19, col:30> '<dependent type>' contains-errors lvalue ->nelts
    | |   `-CXXDependentScopeMemberExpr 0x127941c38 <col:19, col:24> '<dependent type>' contains-errors lvalue ->path
    | |     `-RecoveryExpr 0x127941c18 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x127941d08 <col:37, col:39> 'int' prefix '++'
    | | `-DeclRefExpr 0x127941ce8 <col:39> 'int' lvalue Var 0x127928650 'i' 'int'
    | `-CompoundStmt 0x127942830 <line:23:5, line:40:5>
    |   |-DeclStmt 0x127941f28 <line:24:7, line:25:66>
    |   | `-VarDecl 0x127941d38 <line:24:7, col:34> col:34 invalid step 'const int *'
    |   `-IfStmt 0x127942800 <line:28:7, line:39:9> has_else
    |     |-BinaryOperator 0x127942608 <line:28:14, line:31:71> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x127942320 <line:28:14, line:30:55> 'int' contains-errors '||'
    |     | | |-BinaryOperator 0x1279420c8 <line:28:14, line:29:29> 'int' contains-errors '||'
    |     | | | |-UnaryOperator 0x127941fc0 <line:28:14, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | | | | `-ImplicitCastExpr 0x127941fa8 <col:15, col:21> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | |   `-CXXDependentScopeMemberExpr 0x127941f60 <col:15, col:21> '<dependent type>' contains-errors lvalue ->node
    |     | | | |     `-RecoveryExpr 0x127941f40 <col:15> '<dependent type>' contains-errors lvalue
    |     | | | `-BinaryOperator 0x1279420a8 <line:29:14, col:29> 'int' contains-errors '>='
    |     | | |   |-DeclRefExpr 0x127941fd8 <col:14> 'int' lvalue Var 0x127928650 'i' 'int'
    |     | | |   `-CXXDependentScopeMemberExpr 0x127942060 <col:19, col:29> '<dependent type>' contains-errors lvalue .len
    |     | | |     `-CXXDependentScopeMemberExpr 0x127942018 <col:19, col:24> '<dependent type>' contains-errors lvalue ->rule
    |     | | |       `-RecoveryExpr 0x127941ff8 <col:19> '<dependent type>' contains-errors lvalue
    |     | | `-BinaryOperator 0x127942300 <line:30:14, col:55> 'int' contains-errors '!='
    |     | |   |-CXXDependentScopeMemberExpr 0x127942150 <col:14, col:29> '<dependent type>' contains-errors lvalue ->kind
    |     | |   | `-CXXDependentScopeMemberExpr 0x127942108 <col:14, col:20> '<dependent type>' contains-errors lvalue ->segment
    |     | |   |   `-RecoveryExpr 0x1279420e8 <col:14> '<dependent type>' contains-errors lvalue
    |     | |   `-CXXDependentScopeMemberExpr 0x1279422b8 <col:37, col:55> '<dependent type>' contains-errors lvalue .kind
    |     | |     `-ArraySubscriptExpr 0x127942298 <col:37, col:53> '<dependent type>' contains-errors lvalue
    |     | |       |-ImplicitCastExpr 0x127942268 <col:37, col:47> '<dependent type>' contains-errors <LValueToRValue>
    |     | |       | `-CXXDependentScopeMemberExpr 0x127942200 <col:37, col:47> '<dependent type>' contains-errors lvalue .path
    |     | |       |   `-CXXDependentScopeMemberExpr 0x1279421b8 <col:37, col:42> '<dependent type>' contains-errors lvalue ->rule
    |     | |       |     `-RecoveryExpr 0x127942198 <col:37> '<dependent type>' contains-errors lvalue
    |     | |       `-ImplicitCastExpr 0x127942280 <col:52> 'int' <LValueToRValue>
    |     | |         `-DeclRefExpr 0x127942248 <col:52> 'int' lvalue Var 0x127928650 'i' 'int'
    |     | `-BinaryOperator 0x1279425e8 <line:31:14, col:71> 'int' contains-errors '!='
    |     |   |-CXXDependentScopeMemberExpr 0x1279423f0 <col:14, col:37> '<dependent type>' contains-errors lvalue .data
    |     |   | `-CXXDependentScopeMemberExpr 0x1279423a8 <col:14, col:29> '<dependent type>' contains-errors lvalue ->pattern
    |     |   |   `-CXXDependentScopeMemberExpr 0x127942360 <col:14, col:20> '<dependent type>' contains-errors lvalue ->segment
    |     |   |     `-RecoveryExpr 0x127942340 <col:14> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x1279425a0 <col:45, col:71> '<dependent type>' contains-errors lvalue .data
    |     |     `-CXXDependentScopeMemberExpr 0x127942558 <col:45, col:63> '<dependent type>' contains-errors lvalue .pattern
    |     |       `-ArraySubscriptExpr 0x127942538 <col:45, col:61> '<dependent type>' contains-errors lvalue
    |     |         |-ImplicitCastExpr 0x127942508 <col:45, col:55> '<dependent type>' contains-errors <LValueToRValue>
    |     |         | `-CXXDependentScopeMemberExpr 0x1279424a0 <col:45, col:55> '<dependent type>' contains-errors lvalue .path
    |     |         |   `-CXXDependentScopeMemberExpr 0x127942458 <col:45, col:50> '<dependent type>' contains-errors lvalue ->rule
    |     |         |     `-RecoveryExpr 0x127942438 <col:45> '<dependent type>' contains-errors lvalue
    |     |         `-ImplicitCastExpr 0x127942520 <col:60> 'int' <LValueToRValue>
    |     |           `-DeclRefExpr 0x1279424e8 <col:60> 'int' lvalue Var 0x127928650 'i' 'int'
    |     |-CompoundStmt 0x127942748 <line:32:9, line:35:9>
    |     | |-BinaryOperator 0x127942720 <line:33:11, col:30> '<dependent type>' contains-errors '='
    |     | | |-CXXDependentScopeMemberExpr 0x1279426b8 <col:11, col:22> '<dependent type>' contains-errors lvalue ->nelts
    |     | | | `-CXXDependentScopeMemberExpr 0x127942670 <col:11, col:16> '<dependent type>' contains-errors lvalue ->path
    |     | | |   `-RecoveryExpr 0x127942648 <col:11> '<dependent type>' contains-errors lvalue
    |     | | |     `-DeclRefExpr 0x127942628 <col:11> 'int *' lvalue ParmVar 0x127928128 'ctx' 'int *'
    |     | | `-DeclRefExpr 0x127942700 <col:30> 'int' lvalue Var 0x127928650 'i' 'int'
    |     | `-BreakStmt 0x127942740 <line:34:11>
    |     `-CompoundStmt 0x1279427d0 <line:37:9, line:39:9>
    `-CallExpr 0x127942cc0 <line:43:3, line:45:40> '<dependent type>' contains-errors
      |-DeclRefExpr 0x127942968 <line:43:3> 'int ()' Function 0x1279428b0 'insert_path' 'int ()'
      |-RecoveryExpr 0x127942988 <col:15> '<dependent type>' contains-errors lvalue
      |-RecoveryExpr 0x127942c68 <col:20> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x127942ca8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-RecoveryExpr 0x127942c88 <col:27> '<dependent type>' contains-errors lvalue
      |-BinaryOperator 0x127942ac0 <line:44:15, col:31> '<dependent type>' contains-errors '-'
      | |-CXXDependentScopeMemberExpr 0x127942a58 <col:15, col:25> '<dependent type>' contains-errors lvalue .len
      | | `-CXXDependentScopeMemberExpr 0x127942a10 <col:15, col:20> '<dependent type>' contains-errors lvalue ->rule
      | |   `-RecoveryExpr 0x1279429f0 <col:15> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x127942aa0 <col:31> 'int' lvalue Var 0x127928650 'i' 'int'
      |-BinaryOperator 0x127942bb0 <col:34, col:51> '<dependent type>' contains-errors '+'
      | |-CXXDependentScopeMemberExpr 0x127942b48 <col:34, col:44> '<dependent type>' contains-errors lvalue .path
      | | `-CXXDependentScopeMemberExpr 0x127942b00 <col:34, col:39> '<dependent type>' contains-errors lvalue ->rule
      | |   `-RecoveryExpr 0x127942ae0 <col:34> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x127942b90 <col:51> 'int' lvalue Var 0x127928650 'i' 'int'
      |-RecoveryExpr 0x127942bd0 <line:45:15> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x127942bf0 <col:28> '<dependent type>' contains-errors lvalue
