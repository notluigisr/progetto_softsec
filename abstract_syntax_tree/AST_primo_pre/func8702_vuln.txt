`-FunctionDecl 0x12800de88  line:1:14 invalid LessEqualEval 'int (int *, int *)'
  |-ParmVarDecl 0x12800dd28 <col:28, col:43> col:43 referenced invalid context 'int *'
  |-ParmVarDecl 0x12800dda8 <col:52, col:64> col:64 invalid node 'int *'
  `-CompoundStmt 0x11f9230b0 <col:70, line:34:1>
    |-DeclStmt 0x12800e1d0 <line:2:3, col:70>
    | `-VarDecl 0x12800df58 <col:3, col:23> col:23 invalid input1 'const int *'
    |-DeclStmt 0x12800e318 <line:3:3, col:70>
    | `-VarDecl 0x12800e200 <col:3, col:23> col:23 invalid input2 'const int *'
    `-SwitchStmt 0x11f922de8 <line:6:3, line:32:3>
      |-ImplicitCastExpr 0x11f922dd0 <line:6:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x11f922d88 <col:11, col:19> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x11f922d68 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x11f923070 <col:25, line:32:3>
        |-BreakStmt 0x11f922e28 <line:10:7>
        |-BreakStmt 0x11f922e78 <line:14:7>
        |-BreakStmt 0x11f922e80 <line:18:7>
        |-BreakStmt 0x11f922e88 <line:22:7>
        |-BreakStmt 0x11f922e90 <line:26:7>
        `-DefaultStmt 0x11f923050 <line:27:5, line:30:40>
          `-CallExpr 0x11f923018 <line:28:7, line:30:40> '<dependent type>' contains-errors
            |-CXXDependentScopeMemberExpr 0x11f922ee0 <line:28:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError
            | `-RecoveryExpr 0x11f922eb8 <col:7> '<dependent type>' contains-errors lvalue
            |   `-DeclRefExpr 0x11f922e98 <col:7> 'int *' lvalue ParmVar 0x12800dd28 'context' 'int *'
            |-RecoveryExpr 0x11f922f28 <col:28> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x11f922f90 <line:29:28> 'char[4]' lvalue "STR"
            `-CXXDependentScopeMemberExpr 0x11f922fd0 <line:30:28, col:36> '<dependent type>' contains-errors lvalue ->type
              `-RecoveryExpr 0x11f922fb0 <col:28> '<dependent type>' contains-errors lvalue
