`-FunctionDecl 0x1541284f8  line:1:1 invalid TIFFWriteDirectoryTagCheckedRationalArray 'int (int *, int *, int *, int, int, float *)'
  |-ParmVarDecl 0x154128128 <col:43, col:49> col:49 invalid tif 'int *'
  |-ParmVarDecl 0x1541281a8 <col:54, col:62> col:62 invalid ndir 'int *'
  |-ParmVarDecl 0x154128228 <col:68, col:82> col:82 invalid dir 'int *'
  |-ParmVarDecl 0x1541282a8 <col:87, col:94> col:94 invalid tag 'int'
  |-ParmVarDecl 0x154128328 <col:99, col:106> col:106 invalid count 'int'
  |-ParmVarDecl 0x1541283d8 <col:113, col:120> col:120 used value 'float *'
  `-CompoundStmt 0x15600d848 <line:2:1, line:44:1>
    |-DeclStmt 0x154128760 <line:3:2, col:36>
    | `-VarDecl 0x154128650 <col:2, col:31> col:20 used module 'const char[4]' static cinit
    |   `-StringLiteral 0x154128700 <col:31> 'const char[4]' "STR"
    |-DeclStmt 0x156009868 <line:5:2, col:11>
    | `-VarDecl 0x156009800 <col:2, col:9> col:9 used na 'float *'
    |-DeclStmt 0x156009918 <line:8:2, col:7>
    | `-VarDecl 0x1560098b0 <col:2, col:6> col:6 used o 'int'
    |-IfStmt 0x156009f60 <line:11:2, line:15:2>
    | |-BinaryOperator 0x156009cf0 <line:11:6, col:9> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x156009cb0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x156009cd0 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x156009f40 <line:12:2, line:15:2>
    |   |-CallExpr 0x156009eb8 <line:13:3, col:48> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x156009df0 <col:3> 'int ()' Function 0x156009d38 'TIFFErrorExt' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x156009e30 <col:16, col:21> '<dependent type>' contains-errors lvalue ->tif_clientdata
    |   | | `-RecoveryExpr 0x156009e10 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-DeclRefExpr 0x156009e78 <col:36> 'const char[4]' lvalue Var 0x154128650 'module' 'const char[4]'
    |   | `-StringLiteral 0x156009e98 <col:43> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x156009f30 <line:14:3, col:11>
    |     `-ParenExpr 0x156009f10 <col:9, col:11> 'int'
    |       `-IntegerLiteral 0x156009ef0 <col:10> 'int' 0
    `-ReturnStmt 0x15600d838 <line:43:2, col:10>
      `-ImplicitCastExpr 0x15600d820 <col:8, col:10> 'int' <LValueToRValue>
        `-ParenExpr 0x15600d800 <col:8, col:10> 'int' lvalue
          `-DeclRefExpr 0x15600d7e0 <col:9> 'int' lvalue Var 0x1560098b0 'o' 'int'
