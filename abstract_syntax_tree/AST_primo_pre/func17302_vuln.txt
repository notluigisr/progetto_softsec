`-FunctionDecl 0x1279281a0  line:1:13 utab_unlock 'void (int)' static
  |-ParmVarDecl 0x1279280d8 <col:25, col:29> col:29 used fd 'int'
  `-CompoundStmt 0x127941f90 <line:2:1, line:7:1>
    `-IfStmt 0x127941f70 <line:3:2, line:6:2>
      |-BinaryOperator 0x1279282f0 <line:3:6, col:12> 'int' '>='
      | |-ImplicitCastExpr 0x1279282d8 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x127928298 <col:6> 'int' lvalue ParmVar 0x1279280d8 'fd' 'int'
      | `-IntegerLiteral 0x1279282b8 <col:12> 'int' 0
      `-CompoundStmt 0x127941f50 <col:15, line:6:2>
        |-CallExpr 0x127928710 <line:4:3, col:31> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x127928440 <col:3> 'int ()' Function 0x127928388 'DBG' 'int ()'
        | |-RecoveryExpr 0x127928698 <col:7> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x1279286d0 <col:15, col:30> 'int'
        |   |-ImplicitCastExpr 0x1279286b8 <col:15> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x127928558 <col:15> 'int ()' Function 0x1279284a0 'mnt_debug' 'int ()'
        |   `-ImplicitCastExpr 0x1279286f8 <col:25> 'char *' <ArrayToPointerDecay>
        |     `-StringLiteral 0x1279285c0 <col:25> 'char[4]' lvalue "STR"
        `-CallExpr 0x127941f10 <line:5:3, col:11> 'int'
          |-ImplicitCastExpr 0x127941ef8 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x127941eb8 <col:3> 'int ()' Function 0x127941e00 'close' 'int ()'
          `-ImplicitCastExpr 0x127941f38 <col:9> 'int' <LValueToRValue>
            `-DeclRefExpr 0x127941ed8 <col:9> 'int' lvalue ParmVar 0x1279280d8 'fd' 'int'
