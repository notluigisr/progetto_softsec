`-FunctionDecl 0x147108a98  line:1:1 invalid dlmmap 'int (void *, int, int, int, int, int)'
  |-ParmVarDecl 0x1471086d8 <col:9, col:15> col:15 used start 'void *'
  |-ParmVarDecl 0x147108770 <col:22, col:29> col:29 invalid length 'int'
  |-ParmVarDecl 0x1471087f0 <col:37, col:41> col:41 used prot 'int'
  |-ParmVarDecl 0x147108870 <line:2:2, col:6> col:6 used flags 'int'
  |-ParmVarDecl 0x1471088f0 <col:13, col:17> col:17 used fd 'int'
  |-ParmVarDecl 0x147108970 <col:21, col:27> col:27 invalid offset 'int'
  `-CompoundStmt 0x1471242a8 <line:3:1, line:38:1>
    |-DeclStmt 0x147108bf0 <line:4:3, col:12>
    | `-VarDecl 0x147108b88 <col:3, col:9> col:9 used ptr 'void *'
    |-IfStmt 0x147123540 <line:11:3, line:15:5>
    | |-BinaryOperator 0x147122ce0 <line:11:7, col:44> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x147122c88 <col:7, col:18> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x147122c68 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x147122aa0 <col:17, col:18> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x147122a80 <col:18> 'int' 1
    | | `-CallExpr 0x147122cc0 <col:23, col:44> 'int'
    | |   `-ImplicitCastExpr 0x147122ca8 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x147122bb8 <col:23> 'int ()' Function 0x147122b00 'is_emutramp_enabled' 'int ()'
    | `-CompoundStmt 0x147123520 <line:12:5, line:15:5>
    |   |-BinaryOperator 0x147123078 <line:13:7, col:70> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147122d00 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x147123028 <col:13, col:70> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147122e00 <col:13> 'int ()' Function 0x147122d48 'mmap' 'int ()'
    |   |   |-DeclRefExpr 0x147122e20 <col:19> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147122e40 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x147123008 <col:34, col:42> '<dependent type>' contains-errors '&'
    |   |   | |-DeclRefExpr 0x147122e60 <col:34> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   | `-UnaryOperator 0x147122ff0 <col:41, col:42> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x147122fd8 <col:42> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x147122fb8 <col:42> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x147122ee8 <col:53> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   |-DeclRefExpr 0x147122f08 <col:60> 'int' lvalue ParmVar 0x1471088f0 'fd' 'int'
    |   |   `-RecoveryExpr 0x147122f28 <col:64> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x147123510 <line:14:7, col:14>
    |     `-ImplicitCastExpr 0x1471230d0 <col:14> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x1471230b8 <col:14> 'void *' <LValueToRValue>
    |         `-DeclRefExpr 0x147123098 <col:14> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |-IfStmt 0x147123c30 <line:17:3, line:26:5>
    | |-BinaryOperator 0x1471237d0 <line:17:7, col:44> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x147123760 <col:7, col:18> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x147123740 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x147123598 <col:17, col:18> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x147123578 <col:18> 'int' 1
    | | `-UnaryOperator 0x1471237b8 <col:23, col:44> 'int' prefix '!' cannot overflow
    | |   `-CallExpr 0x147123798 <col:24, col:44> 'int'
    | |     `-ImplicitCastExpr 0x147123780 <col:24> 'int (*)()' <FunctionToPointerDecay>
    | |       `-DeclRefExpr 0x1471236b0 <col:24> 'int ()' Function 0x1471235f8 'is_selinux_enabled' 'int ()'
    | `-CompoundStmt 0x147123c10 <line:18:5, line:26:5>
    |   |-BinaryOperator 0x147123a38 <line:19:7, col:69> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147123800 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x1471239e8 <col:13, col:69> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147123820 <col:13> 'int ()' Function 0x147122d48 'mmap' 'int ()'
    |   |   |-DeclRefExpr 0x147123840 <col:19> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147123860 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x1471239c8 <col:34, col:41> '<dependent type>' contains-errors '|'
    |   |   | |-DeclRefExpr 0x147123880 <col:34> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   | `-RecoveryExpr 0x1471239a8 <col:41> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x1471238d8 <col:52> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   |-DeclRefExpr 0x1471238f8 <col:59> 'int' lvalue ParmVar 0x1471088f0 'fd' 'int'
    |   |   `-RecoveryExpr 0x147123918 <col:63> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x147123bf0 <line:21:7, line:23:9>
    |     |-RecoveryExpr 0x147123b70 <line:21:11, col:61> '_Bool' contains-errors
    |     `-ReturnStmt 0x147123be0 <line:23:2, col:9>
    |       `-ImplicitCastExpr 0x147123bc8 <col:9> 'int' <PointerToIntegral>
    |         `-ImplicitCastExpr 0x147123bb0 <col:9> 'void *' <LValueToRValue>
    |           `-DeclRefExpr 0x147123b90 <col:9> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |-IfStmt 0x147124170 <line:28:3, line:35:5>
    | |-RecoveryExpr 0x147123ca8 <line:28:7, col:35> '_Bool' contains-errors
    | `-CompoundStmt 0x147124150 <line:29:5, line:35:5>
    |   |-BinaryOperator 0x147123fd0 <line:31:7, col:62> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x147123dc8 <col:7> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    |   | `-CallExpr 0x147123f88 <col:13, col:62> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x147123ec8 <col:13> 'int ()' Function 0x147123e10 'dlmmap_locked' 'int ()'
    |   |   |-DeclRefExpr 0x147123ee8 <col:28> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
    |   |   |-RecoveryExpr 0x147123f08 <col:35> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x147123f28 <col:43> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
    |   |   |-DeclRefExpr 0x147123f48 <col:49> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
    |   |   `-RecoveryExpr 0x147123f68 <col:56> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x147124140 <line:34:7, col:14>
    |     `-ImplicitCastExpr 0x147124128 <col:14> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x147124110 <col:14> 'void *' <LValueToRValue>
    |         `-DeclRefExpr 0x1471240f0 <col:14> 'void *' lvalue Var 0x147108b88 'ptr' 'void *'
    `-ReturnStmt 0x147124298 <line:37:3, col:59>
      `-CallExpr 0x147124250 <col:10, col:59> '<dependent type>' contains-errors
        |-DeclRefExpr 0x147124190 <col:10> 'int ()' Function 0x147123e10 'dlmmap_locked' 'int ()'
        |-DeclRefExpr 0x1471241b0 <col:25> 'void *' lvalue ParmVar 0x1471086d8 'start' 'void *'
        |-RecoveryExpr 0x1471241d0 <col:32> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x1471241f0 <col:40> 'int' lvalue ParmVar 0x1471087f0 'prot' 'int'
        |-DeclRefExpr 0x147124210 <col:46> 'int' lvalue ParmVar 0x147108870 'flags' 'int'
        `-RecoveryExpr 0x147124230 <col:53> '<dependent type>' contains-errors lvalue
