`-FunctionDecl 0x12001ac38  line:1:12 invalid decode_getacl 'int (struct xdr_stream *, struct rpc_rqst *, int *)' static
  |-ParmVarDecl 0x107106a48 <col:26, col:45> col:45 used xdr 'struct xdr_stream *'
  |-ParmVarDecl 0x12001aa28 <col:50, col:67> col:67 used req 'struct rpc_rqst *'
  |-ParmVarDecl 0x12001aaf8 <line:2:3, col:11> col:11 referenced invalid acl_len 'int *'
  `-CompoundStmt 0x10711f520 <line:3:1, line:40:1>
    |-DeclStmt 0x12001afa0 <line:7:2, col:41>
    | |-RecordDecl 0x12001ad10 <col:2, col:9> col:9 struct kvec
    | `-VarDecl 0x12001ae78 <col:2, col:37> col:15 iov 'struct kvec *' cinit
    |   `-CXXDependentScopeMemberExpr 0x12001af40 <col:21, col:37> '<dependent type>' contains-errors lvalue .head
    |     `-RecoveryExpr 0x12001af18 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12001aee0 <col:21> 'struct rpc_rqst *' lvalue ParmVar 0x12001aa28 'req' 'struct rpc_rqst *'
    |-DeclStmt 0x12001b038 <line:8:2, col:12>
    | `-VarDecl 0x12001afd0 <col:2, col:6> col:6 used status 'int'
    |-BinaryOperator 0x12001b0c0 <line:10:2, col:13> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x12001b088 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12001b070 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12001b050 <col:3> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12001b0a0 <col:13> 'int' 0
    |-IfStmt 0x12001b3b0 <line:11:2, line:12:8>
    | |-RecoveryExpr 0x12001b328 <line:11:6, col:51> '_Bool' contains-errors
    | `-GotoStmt 0x12001b398 <line:12:3, col:8> 'out' 0x12001b348
    |-IfStmt 0x12001b5d0 <line:13:2, line:14:8>
    | |-RecoveryExpr 0x12001b598 <line:13:6, col:52> '_Bool' contains-errors
    | `-GotoStmt 0x12001b5b8 <line:14:3, col:8> 'out' 0x12001b348
    |-IfStmt 0x12001b860 <line:15:2, line:16:8>
    | |-RecoveryExpr 0x12001b828 <line:15:6, col:62> '_Bool' contains-errors
    | `-GotoStmt 0x12001b848 <line:16:3, col:8> 'out' 0x12001b348
    |-IfStmt 0x10711eee8 <line:18:2, line:19:11>
    | |-RecoveryExpr 0x10711ee20 <line:18:6, col:50> '_Bool' contains-errors
    | `-ReturnStmt 0x10711eed8 <line:19:3, col:11>
    |   `-UnaryOperator 0x10711eec0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x10711eea8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x10711ee88 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x10711f488 <line:20:2, line:36:3> has_else
    | |-RecoveryExpr 0x10711f058 <line:20:6, col:41> '_Bool' contains-errors
    | |-CompoundStmt 0x10711f448 <col:44, line:35:2>
    | | `-IfStmt 0x10711f2b8 <line:27:3, line:32:3>
    | |   |-RecoveryExpr 0x10711f120 <line:27:7, col:17> '_Bool' contains-errors
    | |   `-CompoundStmt 0x10711f2a8 <col:24, line:32:3>
    | `-NullStmt 0x10711f480 <line:36:3>
    `-LabelStmt 0x10711f500 <line:38:1, line:39:9> 'out'
      `-ReturnStmt 0x10711f4f0 <col:2, col:9>
        `-ImplicitCastExpr 0x10711f4d8 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x10711f4b8 <col:9> 'int' lvalue Var 0x12001afd0 'status' 'int'
