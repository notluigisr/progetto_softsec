`-FunctionDecl 0x158928238  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x158928158 <col:6> col:6 Context 'int'
  |-ParmVarDecl 0x1589280d8 <col:15> col:15 EmptyHeadersAttributes 'int'
  `-CompoundStmt 0x158941170 <col:39, line:7:1>
    |-DeclStmt 0x158928438 <line:3:3, col:61>
    | `-VarDecl 0x158928380 <col:3, col:8> col:8 used header 'int' auto
    |-CallExpr 0x158940c28 <line:4:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158928560 <col:3> 'int ()' Function 0x1589284a8 'EXPECT_FALSE' 'int ()'
    | `-CallExpr 0x158940c08 <col:16, col:33> '<dependent type>' contains-errors
    |   `-RecoveryExpr 0x158940be0 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x158928580 <col:16> 'int' lvalue Var 0x158928380 'header' 'int'
    |-CallExpr 0x158940ec8 <line:5:3, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158940d30 <col:3> 'int ()' Function 0x158940c78 'EXPECT_EQ' 'int ()'
    | |-IntegerLiteral 0x158940d50 <col:13> 'int' 0
    | `-CallExpr 0x158940ea8 <col:16, col:29> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x158940e60 <col:16, col:24> '<dependent type>' contains-errors lvalue .size
    |     `-RecoveryExpr 0x158940e40 <col:16> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x158941148 <line:6:3, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x158940fd8 <col:3> 'int ()' Function 0x158940f20 'EXPECT_TRUE' 'int ()'
      `-CallExpr 0x158941128 <col:15, col:29> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x1589410e0 <col:15, col:23> '<dependent type>' contains-errors lvalue .empty
          `-RecoveryExpr 0x1589410c0 <col:15> '<dependent type>' contains-errors lvalue
