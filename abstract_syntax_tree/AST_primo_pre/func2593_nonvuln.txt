`-FunctionDecl 0x14f128288  line:1:12 invalid idp_check_dp 'int (int *, int *)' static
  |-ParmVarDecl 0x14f128128 <col:25, col:42> col:42 invalid a 'int *'
  |-ParmVarDecl 0x14f1281a8 <col:45, col:62> col:62 invalid b 'int *'
  `-CompoundStmt 0x14f1432d0 <line:2:2, line:65:2>
    |-DeclStmt 0x14f128518 <line:6:2, col:10>
    | |-VarDecl 0x14f128418 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x14f128498 <col:2, col:9> col:9 used j 'int'
    |-IfStmt 0x14f128620 <line:7:2, line:8:10>
    | |-BinaryOperator 0x14f1285d0 <line:7:6, col:13> 'int' contains-errors '||'
    | | |-UnaryOperator 0x14f128568 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x14f128550 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x14f128530 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14f1285b8 <col:12, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x14f1285a0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x14f128580 <col:13> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14f128610 <line:8:3, col:10>
    |   `-IntegerLiteral 0x14f1285f0 <col:10> 'int' 1
    |-IfStmt 0x14f1420f0 <line:9:2, line:34:3> has_else
    | |-BinaryOperator 0x14f1286c8 <line:9:6, col:17> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x14f128660 <col:6, col:9> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x14f128640 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14f1286a8 <col:17> 'int' 1
    | |-CompoundStmt 0x14f141df0 <line:10:3, line:26:3>
    | | |-IfStmt 0x14f1287b0 <line:11:3, line:12:11>
    | | | |-UnaryOperator 0x14f128768 <line:11:7, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x14f128750 <col:8, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-CXXDependentScopeMemberExpr 0x14f128708 <col:8, col:11> '<dependent type>' contains-errors lvalue ->dpname
    | | | |     `-RecoveryExpr 0x14f1286e8 <col:8> '<dependent type>' contains-errors lvalue
    | | | `-ReturnStmt 0x14f1287a0 <line:12:4, col:11>
    | | |   `-IntegerLiteral 0x14f128780 <col:11> 'int' 0
    | | `-IfStmt 0x14f141cb8 <line:14:3, line:22:4>
    | |   |-BinaryOperator 0x14f141868 <line:14:7, col:18> 'int' contains-errors '=='
    | |   | |-CXXDependentScopeMemberExpr 0x14f141800 <col:7, col:10> '<dependent type>' contains-errors lvalue ->type
    | |   | | `-RecoveryExpr 0x14f1287d0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | `-IntegerLiteral 0x14f141848 <col:18> 'int' 1
    | |   `-CompoundStmt 0x14f141c98 <line:15:4, line:22:4>
    | |     |-IfStmt 0x14f141950 <line:16:4, line:17:12>
    | |     | |-UnaryOperator 0x14f141908 <line:16:8, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |     | | `-ImplicitCastExpr 0x14f1418f0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |     | |   `-CXXDependentScopeMemberExpr 0x14f1418a8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->dpname
    | |     | |     `-RecoveryExpr 0x14f141888 <col:9> '<dependent type>' contains-errors lvalue
    | |     | `-ReturnStmt 0x14f141940 <line:17:5, col:12>
    | |     |   `-IntegerLiteral 0x14f141920 <col:12> 'int' 0
    | |     `-IfStmt 0x14f141c68 <line:18:4, line:21:12> has_else
    | |       |-UnaryOperator 0x14f141bf0 <line:18:8, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |       | `-CallExpr 0x14f141bc0 <col:9, col:43> '<dependent type>' contains-errors
    | |       |   |-DeclRefExpr 0x14f141ad0 <col:9> 'int ()' Function 0x14f141a18 'X509_NAME_cmp' 'int ()'
    | |       |   |-CXXDependentScopeMemberExpr 0x14f141b10 <col:23, col:26> '<dependent type>' contains-errors lvalue ->dpname
    | |       |   | `-RecoveryExpr 0x14f141af0 <col:23> '<dependent type>' contains-errors lvalue
    | |       |   `-CXXDependentScopeMemberExpr 0x14f141b78 <col:34, col:37> '<dependent type>' contains-errors lvalue ->dpname
    | |       |     `-RecoveryExpr 0x14f141b58 <col:34> '<dependent type>' contains-errors lvalue
    | |       |-ReturnStmt 0x14f141c28 <line:19:5, col:12>
    | |       | `-IntegerLiteral 0x14f141c08 <col:12> 'int' 1
    | |       `-ReturnStmt 0x14f141c58 <line:21:5, col:12>
    | |         `-IntegerLiteral 0x14f141c38 <col:12> 'int' 0
    | `-IfStmt 0x14f1420d0 <line:27:7, line:34:3>
    |   |-BinaryOperator 0x14f141e98 <line:27:11, col:22> 'int' contains-errors '=='
    |   | |-CXXDependentScopeMemberExpr 0x14f141e30 <col:11, col:14> '<dependent type>' contains-errors lvalue ->type
    |   | | `-RecoveryExpr 0x14f141e10 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x14f141e78 <col:22> 'int' 1
    |   `-CompoundStmt 0x14f1420b8 <line:28:3, line:34:3>
    |     `-IfStmt 0x14f141f80 <line:29:3, line:30:11>
    |       |-UnaryOperator 0x14f141f38 <line:29:7, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       | `-ImplicitCastExpr 0x14f141f20 <col:8, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       |   `-CXXDependentScopeMemberExpr 0x14f141ed8 <col:8, col:11> '<dependent type>' contains-errors lvalue ->dpname
    |       |     `-RecoveryExpr 0x14f141eb8 <col:8> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x14f141f70 <line:30:4, col:11>
    |         `-IntegerLiteral 0x14f141f50 <col:11> 'int' 0
    |-IfStmt 0x14f142678 <line:37:2, line:48:3>
    | |-RecoveryExpr 0x14f142138 <line:37:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14f142658 <line:38:3, line:48:3>
    |   |-ForStmt 0x14f1425f0 <line:39:3, line:46:4>
    |   | |-BinaryOperator 0x14f142198 <line:39:8, col:12> 'int' '='
    |   | | |-DeclRefExpr 0x14f142158 <col:8> 'int' lvalue Var 0x14f128418 'i' 'int'
    |   | | `-IntegerLiteral 0x14f142178 <col:12> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14f142380 <col:15, col:43> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x14f1421b8 <col:15> 'int' lvalue Var 0x14f128418 'i' 'int'
    |   | | `-CallExpr 0x14f142358 <col:19, col:43> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14f1422b8 <col:19> 'int ()' Function 0x14f142200 'sk_GENERAL_NAME_num' 'int ()'
    |   | |   `-RecoveryExpr 0x14f142338 <col:39> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14f1423c0 <col:46, col:47> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x14f1423a0 <col:46> 'int' lvalue Var 0x14f128418 'i' 'int'
    |   | `-CompoundStmt 0x14f1425d0 <line:40:4, line:46:4>
    |   |   |-IfStmt 0x14f142520 <line:42:4, line:43:5>
    |   |   | |-RecoveryExpr 0x14f1424f8 <line:42:8, col:22> '_Bool' contains-errors
    |   |   | `-ContinueStmt 0x14f142518 <line:43:5>
    |   |   `-IfStmt 0x14f1425b0 <line:44:4, line:45:12>
    |   |     |-RecoveryExpr 0x14f142560 <line:44:8, col:48> '_Bool' contains-errors
    |   |     `-ReturnStmt 0x14f1425a0 <line:45:5, col:12>
    |   |       `-IntegerLiteral 0x14f142580 <col:12> 'int' 1
    |   `-ReturnStmt 0x14f142648 <line:47:3, col:10>
    |     `-IntegerLiteral 0x14f142628 <col:10> 'int' 0
    |-ForStmt 0x14f143268 <line:52:2, line:61:3>
    | |-BinaryOperator 0x14f1426d8 <line:52:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x14f142698 <col:7> 'int' lvalue Var 0x14f128418 'i' 'int'
    | | `-IntegerLiteral 0x14f1426b8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14f142c28 <col:14, col:54> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14f1426f8 <col:14> 'int' lvalue Var 0x14f128418 'i' 'int'
    | | `-CallExpr 0x14f142c00 <col:18, col:54> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14f142718 <col:18> 'int ()' Function 0x14f142200 'sk_GENERAL_NAME_num' 'int ()'
    | |   `-CXXDependentScopeMemberExpr 0x14f1427a0 <col:38, col:46> '<dependent type>' contains-errors lvalue .fullname
    | |     `-CXXDependentScopeMemberExpr 0x14f142758 <col:38, col:41> '<dependent type>' contains-errors lvalue ->name
    | |       `-RecoveryExpr 0x14f142738 <col:38> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14f142c68 <col:57, col:58> 'int' postfix '++'
    | | `-DeclRefExpr 0x14f142c48 <col:57> 'int' lvalue Var 0x14f128418 'i' 'int'
    | `-CompoundStmt 0x14f143250 <line:53:3, line:61:3>
    |   `-ForStmt 0x14f143218 <line:55:3, line:60:4>
    |     |-BinaryOperator 0x14f142de0 <line:55:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x14f142da0 <col:8> 'int' lvalue Var 0x14f128498 'j' 'int'
    |     | `-IntegerLiteral 0x14f142dc0 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x14f142f18 <col:15, col:55> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x14f142e00 <col:15> 'int' lvalue Var 0x14f128498 'j' 'int'
    |     | `-CallExpr 0x14f142ef0 <col:19, col:55> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14f142e20 <col:19> 'int ()' Function 0x14f142200 'sk_GENERAL_NAME_num' 'int ()'
    |     |   `-CXXDependentScopeMemberExpr 0x14f142ea8 <col:39, col:47> '<dependent type>' contains-errors lvalue .fullname
    |     |     `-CXXDependentScopeMemberExpr 0x14f142e60 <col:39, col:42> '<dependent type>' contains-errors lvalue ->name
    |     |       `-RecoveryExpr 0x14f142e40 <col:39> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x14f142f58 <col:58, col:59> 'int' postfix '++'
    |     | `-DeclRefExpr 0x14f142f38 <col:58> 'int' lvalue Var 0x14f128498 'j' 'int'
    |     `-CompoundStmt 0x14f143200 <line:56:4, line:60:4>
    |       `-IfStmt 0x14f1431e0 <line:58:4, line:59:12>
    |         |-RecoveryExpr 0x14f143190 <line:58:8, col:36> '_Bool' contains-errors
    |         `-ReturnStmt 0x14f1431d0 <line:59:5, col:12>
    |           `-IntegerLiteral 0x14f1431b0 <col:12> 'int' 1
    `-ReturnStmt 0x14f1432c0 <line:63:2, col:9>
      `-IntegerLiteral 0x14f1432a0 <col:9> 'int' 0
