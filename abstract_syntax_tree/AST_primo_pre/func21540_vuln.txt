`-FunctionDecl 0x12780df18  line:1:1 invalid dissect_ac_if_hdr_body 'int (int *, int, int *)'
  |-ParmVarDecl 0x12780dd28 <col:24, col:34> col:34 invalid tvb 'int *'
  |-ParmVarDecl 0x12780dda8 <col:39, col:44> col:44 used offset 'int'
  |-ParmVarDecl 0x12780de28 <col:52, col:65> col:65 invalid pinfo 'int *'
  `-CompoundStmt 0x127829800 <line:3:1, line:47:1>
    |-DeclStmt 0x12780e058 <line:4:5, col:26>
    | `-VarDecl 0x12780dff0 <col:5, col:14> col:14 used offset_start 'int'
    |-DeclStmt 0x12780e0f0 <line:7:5, col:17>
    | `-VarDecl 0x12780e088 <col:5, col:14> col:14 used ver 'double'
    |-BinaryOperator 0x12780e178 <line:12:5, col:20> 'int' '='
    | |-DeclRefExpr 0x12780e120 <col:5> 'int' lvalue Var 0x12780dff0 'offset_start' 'int'
    | `-ImplicitCastExpr 0x12780e160 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12780e140 <col:20> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    |-BinaryOperator 0x127827b78 <line:16:5, col:61> 'double' contains-errors '='
    | |-DeclRefExpr 0x127827958 <col:5> 'double' lvalue Var 0x12780e088 'ver' 'double'
    | `-BinaryOperator 0x127827b58 <col:11, col:61> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x127827ab0 <col:11> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x127827b38 <col:23, col:61> '<dependent type>' contains-errors '/'
    |     |-CallExpr 0x127827b10 <col:23, col:57> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x127827990 <col:23> 'int ()' Function 0x127827800 'USB_AUDIO_BCD44_TO_DEC' 'int ()'
    |     | `-BinaryOperator 0x127827af0 <col:46, col:53> '<dependent type>' contains-errors '&'
    |     |   |-RecoveryExpr 0x127827ad0 <col:46> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x1278279c8 <col:53> 'int' 255
    |     `-FloatingLiteral 0x127827a30 <col:61> 'double' 1.000000e+02
    |-CallExpr 0x127827e70 <line:18:5, line:19:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x127827c78 <line:18:5> 'int ()' Function 0x127827bc0 'proto_tree_add_double_format_value' 'int ()'
    | |-RecoveryExpr 0x127827e30 <col:40> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x127827e50 <col:46> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x127827cc8 <line:19:13> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x127827ce8 <col:18> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    | |-IntegerLiteral 0x127827d08 <col:26> 'int' 2
    | |-DeclRefExpr 0x127827d28 <col:29> 'double' lvalue Var 0x12780e088 'ver' 'double'
    | |-StringLiteral 0x127827d90 <col:34> 'char[4]' lvalue "STR"
    | `-DeclRefExpr 0x127827db0 <col:41> 'double' lvalue Var 0x12780e088 'ver' 'double'
    |-IfStmt 0x127828168 <line:21:5, line:25:5>
    | |-RecoveryExpr 0x127827ed0 <line:21:8, col:9> '_Bool' contains-errors
    | `-CompoundStmt 0x127828158 <col:26, line:25:5>
    |-CompoundAssignOperator 0x1278281c8 <line:27:5, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x127828188 <col:5> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    | `-IntegerLiteral 0x1278281a8 <col:15> 'int' 2
    |-IfStmt 0x127828740 <line:30:5, line:44:5>
    | |-RecoveryExpr 0x127828218 <line:30:9, col:20> '_Bool' contains-errors
    | `-CompoundStmt 0x127828720 <col:23, line:44:5>
    |   |-CompoundAssignOperator 0x1278283d8 <line:33:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x127828398 <col:9> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    |   | `-IntegerLiteral 0x1278283b8 <col:19> 'int' 2
    |   `-UnaryOperator 0x127828618 <line:37:9, col:15> 'int' postfix '++'
    |     `-DeclRefExpr 0x1278285f8 <col:9> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
    `-ReturnStmt 0x1278287f0 <line:46:5, col:19>
      `-BinaryOperator 0x1278287d0 <col:12, col:19> 'int' '-'
        |-ImplicitCastExpr 0x1278287a0 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x127828760 <col:12> 'int' lvalue ParmVar 0x12780dda8 'offset' 'int'
        `-ImplicitCastExpr 0x1278287b8 <col:19> 'int' <LValueToRValue>
          `-DeclRefExpr 0x127828780 <col:19> 'int' lvalue Var 0x12780dff0 'offset_start' 'int'
