`-FunctionDecl 0x13a922748  line:1:12 esp6_input 'int (struct xfrm_state *, struct sk_buff *)' static
  |-ParmVarDecl 0x13b00e248 <col:23, col:42> col:42 used x 'struct xfrm_state *'
  |-ParmVarDecl 0x13a922628 <col:45, col:61> col:61 used skb 'struct sk_buff *'
  `-CompoundStmt 0x13c00a2a8 <line:2:1, line:65:1>
    |-DeclStmt 0x13a922a38 <line:3:2, col:25>
    | |-RecordDecl 0x13a922848 <col:2, col:9> col:9 struct ip_esp_hdr
    | `-VarDecl 0x13a9229b8 <col:2, col:21> col:21 used esph 'struct ip_esp_hdr *'
    |-DeclStmt 0x13a922c98 <line:4:2, col:32>
    | |-RecordDecl 0x13a922a50 <col:2, col:9> col:9 struct esp_data
    | `-VarDecl 0x13a922bb8 <col:2, col:28> col:19 used esp 'struct esp_data *' cinit
    |   `-RecoveryExpr 0x13a922c58 <col:25, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13a922c20 <col:25> 'struct xfrm_state *' lvalue ParmVar 0x13b00e248 'x' 'struct xfrm_state *'
    |-DeclStmt 0x13a922ef8 <line:5:2, col:38>
    | |-RecordDecl 0x13a922cb0 <col:2, col:9> col:9 struct crypto_aead
    | `-VarDecl 0x13a922e18 <col:2, col:34> col:22 used aead 'struct crypto_aead *' cinit
    |   `-RecoveryExpr 0x13a922eb8 <col:29, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13a922e80 <col:29> 'struct esp_data *' contains-errors lvalue Var 0x13a922bb8 'esp' 'struct esp_data *'
    |-DeclStmt 0x13a9230f8 <line:6:2, col:26>
    | |-RecordDecl 0x13a922f10 <col:2, col:9> col:9 struct aead_request
    | `-VarDecl 0x13a923078 <col:2, col:23> col:23 used req 'struct aead_request *'
    |-DeclStmt 0x13a923200 <line:7:2, col:25>
    | `-VarDecl 0x13a923198 <col:2, col:18> col:18 used trailer 'struct sk_buff *'
    |-DeclStmt 0x13a923558 <line:8:2, col:64>
    | `-VarDecl 0x13a923230 <col:2, col:6> col:6 used elen 'int'
    |-DeclStmt 0x13b027400 <line:9:2, col:12>
    | `-VarDecl 0x13a923588 <col:2, col:6> col:6 used nfrags 'int'
    |-DeclStmt 0x13b0274b8 <line:10:2, col:13>
    | `-VarDecl 0x13b027430 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x13b027498 <col:12> 'int' 0
    |-DeclStmt 0x13b027550 <line:11:2, col:11>
    | `-VarDecl 0x13b0274e8 <col:2, col:8> col:8 used tmp 'void *'
    |-DeclStmt 0x13b027768 <line:13:2, col:24>
    | |-RecordDecl 0x13b027580 <col:2, col:9> col:9 struct scatterlist
    | `-VarDecl 0x13b0276e8 <col:2, col:22> col:22 used sg 'struct scatterlist *'
    |-DeclStmt 0x13b027870 <line:14:2, col:25>
    | `-VarDecl 0x13b027808 <col:2, col:22> col:22 used asg 'struct scatterlist *'
    |-IfStmt 0x13b027bb8 <line:16:2, line:19:2>
    | |-RecoveryExpr 0x13b027a18 <line:16:6, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x13b027b98 <col:42, line:19:2>
    |   |-BinaryOperator 0x13b027b10 <line:17:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b027a38 <col:3> 'int' lvalue Var 0x13b027430 'ret' 'int'
    |   | `-UnaryOperator 0x13b027af8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x13b027ae0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x13b027ac0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x13b027b80 <line:18:3, col:8> 'out' 0x13b027b30
    |-IfStmt 0x13b027d80 <line:21:2, line:24:2>
    | |-BinaryOperator 0x13b027c30 <line:21:6, col:14> 'int' '<='
    | | |-ImplicitCastExpr 0x13b027c18 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b027bd8 <col:6> 'int' lvalue Var 0x13a923230 'elen' 'int'
    | | `-IntegerLiteral 0x13b027bf8 <col:14> 'int' 0
    | `-CompoundStmt 0x13b027d60 <col:17, line:24:2>
    |   |-BinaryOperator 0x13b027d28 <line:22:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b027c50 <col:3> 'int' lvalue Var 0x13b027430 'ret' 'int'
    |   | `-UnaryOperator 0x13b027d10 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x13b027cf8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x13b027cd8 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x13b027d48 <line:23:3, col:8> 'out' 0x13b027b30
    |-IfStmt 0x13b0281b0 <line:26:2, line:29:2>
    | |-BinaryOperator 0x13b028060 <line:26:6, col:50> 'int' '<'
    | | |-ParenExpr 0x13b028020 <col:6, col:46> 'int'
    | | | `-BinaryOperator 0x13b028000 <col:7, col:45> 'int' '='
    | | |   |-DeclRefExpr 0x13b027da0 <col:7> 'int' lvalue Var 0x13a923588 'nfrags' 'int'
    | | |   `-CallExpr 0x13b027fb0 <col:16, col:45> 'int'
    | | |     |-ImplicitCastExpr 0x13b027f98 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x13b027ea0 <col:16> 'int ()' Function 0x13b027de8 'skb_cow_data' 'int ()'
    | | |     |-ImplicitCastExpr 0x13b027fe8 <col:29> 'struct sk_buff *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x13b027ec0 <col:29> 'struct sk_buff *' lvalue ParmVar 0x13a922628 'skb' 'struct sk_buff *'
    | | |     |-IntegerLiteral 0x13b027ee0 <col:34> 'int' 0
    | | |     `-UnaryOperator 0x13b027f80 <col:37, col:38> 'struct sk_buff **' prefix '&' cannot overflow
    | | |       `-DeclRefExpr 0x13b027f00 <col:38> 'struct sk_buff *' lvalue Var 0x13a923198 'trailer' 'struct sk_buff *'
    | | `-IntegerLiteral 0x13b028040 <col:50> 'int' 0
    | `-CompoundStmt 0x13b028190 <col:53, line:29:2>
    |   |-BinaryOperator 0x13b028158 <line:27:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b028080 <col:3> 'int' lvalue Var 0x13b027430 'ret' 'int'
    |   | `-UnaryOperator 0x13b028140 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x13b028128 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x13b028108 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x13b028178 <line:28:3, col:8> 'out' 0x13b027b30
    |-BinaryOperator 0x13b0282a8 <line:31:2, col:9> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b0281d0 <col:2> 'int' lvalue Var 0x13b027430 'ret' 'int'
    | `-UnaryOperator 0x13b028290 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x13b028278 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x13b028258 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b029310 <line:32:2, col:38> 'void *' contains-errors '='
    | |-DeclRefExpr 0x13b0282c8 <col:2> 'void *' lvalue Var 0x13b0274e8 'tmp' 'void *'
    | `-ImplicitCastExpr 0x13b0292f8 <col:8, col:38> 'void *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x13b0292b0 <col:8, col:38> 'int' contains-errors
    |     |-ImplicitCastExpr 0x13b029298 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13b0283c8 <col:8> 'int ()' Function 0x13b028310 'esp_alloc_tmp' 'int ()'
    |     |-ImplicitCastExpr 0x13b0292e0 <col:22> 'struct crypto_aead *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x13b029200 <col:22> 'struct crypto_aead *' contains-errors lvalue Var 0x13a922e18 'aead' 'struct crypto_aead *'
    |     `-BinaryOperator 0x13b029278 <col:28, col:37> 'int' '+'
    |       |-ImplicitCastExpr 0x13b029260 <col:28> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x13b029220 <col:28> 'int' lvalue Var 0x13a923588 'nfrags' 'int'
    |       `-IntegerLiteral 0x13b029240 <col:37> 'int' 1
    |-IfStmt 0x13b029398 <line:33:2, line:34:8>
    | |-UnaryOperator 0x13b029368 <line:33:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b029350 <col:7> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b029330 <col:7> 'void *' lvalue Var 0x13b0274e8 'tmp' 'void *'
    | `-GotoStmt 0x13b029380 <line:34:3, col:8> 'out' 0x13b027b30
    |-BinaryOperator 0x13b029578 <line:36:2, col:25> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13b029530 <col:2, col:19> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x13b0294f0 <col:2, col:16> 'int'
    | |   |-ImplicitCastExpr 0x13b0294d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13b029498 <col:2> 'int ()' Function 0x13b0293e0 'ESP_SKB_CB' 'int ()'
    | |   `-ImplicitCastExpr 0x13b029518 <col:13> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13b0294b8 <col:13> 'struct sk_buff *' lvalue ParmVar 0x13a922628 'skb' 'struct sk_buff *'
    | `-DeclRefExpr 0x13b029558 <col:25> 'void *' lvalue Var 0x13b0274e8 'tmp' 'void *'
    |-BinaryOperator 0x13b029a80 <line:39:2, col:28> 'struct scatterlist *' contains-errors '='
    | |-DeclRefExpr 0x13b029890 <col:2> 'struct scatterlist *' lvalue Var 0x13b027808 'asg' 'struct scatterlist *'
    | `-ImplicitCastExpr 0x13b029a68 <col:8, col:28> 'struct scatterlist *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x13b029a08 <col:8, col:28> 'int' contains-errors
    |     |-ImplicitCastExpr 0x13b0299f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13b029990 <col:8> 'int ()' Function 0x13b0298d8 'esp_req_sg' 'int ()'
    |     |-ImplicitCastExpr 0x13b029a38 <col:19> 'struct crypto_aead *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x13b0299b0 <col:19> 'struct crypto_aead *' contains-errors lvalue Var 0x13a922e18 'aead' 'struct crypto_aead *'
    |     `-ImplicitCastExpr 0x13b029a50 <col:25> 'struct aead_request *' <LValueToRValue>
    |       `-DeclRefExpr 0x13b0299d0 <col:25> 'struct aead_request *' lvalue Var 0x13a923078 'req' 'struct aead_request *'
    |-BinaryOperator 0x13b029b48 <line:40:2, col:13> 'struct scatterlist *' contains-errors '='
    | |-DeclRefExpr 0x13b029aa0 <col:2> 'struct scatterlist *' lvalue Var 0x13b0276e8 'sg' 'struct scatterlist *'
    | `-RecoveryExpr 0x13b029b18 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13b029ac0 <col:7> 'struct scatterlist *' lvalue Var 0x13b027808 'asg' 'struct scatterlist *'
    |   `-IntegerLiteral 0x13b029ae0 <col:13> 'int' 1
    |-BinaryOperator 0x13b029d00 <line:44:2, col:35> 'struct ip_esp_hdr *' contains-errors '='
    | |-DeclRefExpr 0x13b029bc8 <col:2> 'struct ip_esp_hdr *' lvalue Var 0x13a9229b8 'esph' 'struct ip_esp_hdr *'
    | `-CStyleCastExpr 0x13b029cd8 <col:9, col:35> 'struct ip_esp_hdr *' contains-errors <Dependent>
    |   `-RecoveryExpr 0x13b029c20 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13b029be8 <col:30> 'struct sk_buff *' lvalue ParmVar 0x13a922628 'skb' 'struct sk_buff *'
    |-CallExpr 0x13b029ed8 <line:49:2, col:26> 'int'
    | |-ImplicitCastExpr 0x13b029ec0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13b029e60 <col:2> 'int ()' Function 0x13b029da8 'sg_init_table' 'int ()'
    | |-ImplicitCastExpr 0x13b029f08 <col:16> 'struct scatterlist *' <LValueToRValue>
    | | `-DeclRefExpr 0x13b029e80 <col:16> 'struct scatterlist *' lvalue Var 0x13b0276e8 'sg' 'struct scatterlist *'
    | `-ImplicitCastExpr 0x13b029f20 <col:20> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x13b029ea0 <col:20> 'int' lvalue Var 0x13a923588 'nfrags' 'int'
    |-BinaryOperator 0x13c009fb0 <line:57:2, col:31> 'int' '='
    | |-DeclRefExpr 0x13c009e18 <col:2> 'int' lvalue Var 0x13b027430 'ret' 'int'
    | `-CallExpr 0x13c009f70 <col:8, col:31> 'int'
    |   |-ImplicitCastExpr 0x13c009f58 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13c009f18 <col:8> 'int ()' Function 0x13c009e60 'crypto_aead_decrypt' 'int ()'
    |   `-ImplicitCastExpr 0x13c009f98 <col:28> 'struct aead_request *' <LValueToRValue>
    |     `-DeclRefExpr 0x13c009f38 <col:28> 'struct aead_request *' lvalue Var 0x13a923078 'req' 'struct aead_request *'
    |-IfStmt 0x13c00a028 <line:58:2, line:59:8>
    | |-RecoveryExpr 0x13c009ff0 <line:58:6, col:14> '_Bool' contains-errors
    | `-GotoStmt 0x13c00a010 <line:59:3, col:8> 'out' 0x13b027b30
    |-BinaryOperator 0x13c00a220 <line:61:2, col:32> 'int' '='
    | |-DeclRefExpr 0x13c00a048 <col:2> 'int' lvalue Var 0x13b027430 'ret' 'int'
    | `-CallExpr 0x13c00a1c0 <col:8, col:32> 'int'
    |   |-ImplicitCastExpr 0x13c00a1a8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13c00a148 <col:8> 'int ()' Function 0x13c00a090 'esp_input_done2' 'int ()'
    |   |-ImplicitCastExpr 0x13c00a1f0 <col:24> 'struct sk_buff *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13c00a168 <col:24> 'struct sk_buff *' lvalue ParmVar 0x13a922628 'skb' 'struct sk_buff *'
    |   `-ImplicitCastExpr 0x13c00a208 <col:29> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13c00a188 <col:29> 'int' lvalue Var 0x13b027430 'ret' 'int'
    `-LabelStmt 0x13c00a288 <line:63:1, line:64:9> 'out'
      `-ReturnStmt 0x13c00a278 <col:2, col:9>
        `-ImplicitCastExpr 0x13c00a260 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x13c00a240 <col:9> 'int' lvalue Var 0x13b027430 'ret' 'int'
