`-FunctionDecl 0x13b941bc8  line:1:1 invalid ec_p_init 'int (int, enum gcry_mpi_ec_models, enum ecc_dialects, int, int, int, int)'
  |-ParmVarDecl 0x13b9280f0 <col:12, col:21> col:21 referenced invalid ctx 'int'
  |-ParmVarDecl 0x13b928698 <col:26, col:50> col:50 invalid model 'enum gcry_mpi_ec_models'
  |-ParmVarDecl 0x13b941820 <line:2:12, col:30> col:30 invalid dialect 'enum ecc_dialects'
  |-ParmVarDecl 0x13b9418a0 <line:3:12, col:16> col:16 used flags 'int'
  |-ParmVarDecl 0x13b941920 <line:4:12, col:23> col:23 invalid p 'int'
  |-ParmVarDecl 0x13b9419a0 <col:26, col:37> col:37 invalid a 'int'
  |-ParmVarDecl 0x13b941a20 <col:40, col:51> col:51 invalid b 'int'
  `-CompoundStmt 0x13b943780 <line:5:1, line:53:1>
    |-DeclStmt 0x13b941d28 <line:6:3, col:8>
    | `-VarDecl 0x13b941cc0 <col:3, col:7> col:7 used i 'int'
    |-DeclStmt 0x13b941dc0 <line:7:3, col:25>
    | `-VarDecl 0x13b941d58 <col:3, col:14> col:14 used use_barrett 'int' static
    |-IfStmt 0x13b9421a8 <line:9:3, line:15:5>
    | |-UnaryOperator 0x13b941e10 <line:9:7, col:8> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b941df8 <col:8> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b941dd8 <col:8> 'int' lvalue Var 0x13b941d58 'use_barrett' 'int'
    | `-CompoundStmt 0x13b942190 <line:10:5, line:15:5>
    |   `-IfStmt 0x13b942160 <line:11:7, line:14:24> has_else
    |     |-CallExpr 0x13b942048 <line:11:11, col:24> 'int'
    |     | |-ImplicitCastExpr 0x13b942030 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x13b941f80 <col:11> 'int ()' Function 0x13b941ec8 'getenv' 'int ()'
    |     | `-ImplicitCastExpr 0x13b942070 <col:19> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x13b941fe0 <col:19> 'char[4]' lvalue "STR"
    |     |-BinaryOperator 0x13b9420c8 <line:12:9, col:23> 'int' '='
    |     | |-DeclRefExpr 0x13b942088 <col:9> 'int' lvalue Var 0x13b941d58 'use_barrett' 'int'
    |     | `-IntegerLiteral 0x13b9420a8 <col:23> 'int' 1
    |     `-BinaryOperator 0x13b942140 <line:14:9, col:24> 'int' '='
    |       |-DeclRefExpr 0x13b9420e8 <col:9> 'int' lvalue Var 0x13b941d58 'use_barrett' 'int'
    |       `-UnaryOperator 0x13b942128 <col:23, col:24> 'int' prefix '-'
    |         `-IntegerLiteral 0x13b942108 <col:24> 'int' 1
    |-BinaryOperator 0x13b942278 <line:19:3, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b942210 <col:3, col:8> '<dependent type>' contains-errors lvalue ->model
    | | `-RecoveryExpr 0x13b9421e8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b9421c8 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-RecoveryExpr 0x13b942258 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b942348 <line:20:3, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b9422e0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->dialect
    | | `-RecoveryExpr 0x13b9422b8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b942298 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-RecoveryExpr 0x13b942328 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b942418 <line:21:3, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b9423b0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->flags
    | | `-RecoveryExpr 0x13b942388 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b942368 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-DeclRefExpr 0x13b9423f8 <col:16> 'int' lvalue ParmVar 0x13b9418a0 'flags' 'int'
    |-IfStmt 0x13b942798 <line:22:3, line:25:34> has_else
    | |-BinaryOperator 0x13b9424b0 <line:22:7, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13b942438 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b942490 <col:18> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x13b942580 <line:23:5, col:18> '<dependent type>' contains-errors '='
    | | |-CXXDependentScopeMemberExpr 0x13b942518 <col:5, col:10> '<dependent type>' contains-errors lvalue ->nbits
    | | | `-RecoveryExpr 0x13b9424f0 <col:5> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x13b9424d0 <col:5> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | | `-IntegerLiteral 0x13b942560 <col:18> 'int' 256
    | `-BinaryOperator 0x13b942778 <line:25:5, col:34> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x13b9425e8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->nbits
    |   | `-RecoveryExpr 0x13b9425c0 <col:5> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13b9425a0 <col:5> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    |   `-CallExpr 0x13b942750 <col:18, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13b942710 <col:18> 'int ()' Function 0x13b942658 'mpi_get_nbits' 'int ()'
    |     `-RecoveryExpr 0x13b942730 <col:33> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b9429b8 <line:26:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b942828 <col:3, col:8> '<dependent type>' contains-errors lvalue ->p
    | | `-RecoveryExpr 0x13b942800 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b9427c8 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-CallExpr 0x13b942990 <col:12, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b942950 <col:12> 'int ()' Function 0x13b942898 'mpi_copy' 'int ()'
    |   `-RecoveryExpr 0x13b942970 <col:22> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b942ad0 <line:27:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b942a20 <col:3, col:8> '<dependent type>' contains-errors lvalue ->a
    | | `-RecoveryExpr 0x13b9429f8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b9429d8 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-CallExpr 0x13b942aa8 <col:12, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b942a68 <col:12> 'int ()' Function 0x13b942898 'mpi_copy' 'int ()'
    |   `-RecoveryExpr 0x13b942a88 <col:22> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b942be8 <line:28:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b942b38 <col:3, col:8> '<dependent type>' contains-errors lvalue ->b
    | | `-RecoveryExpr 0x13b942b10 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b942af0 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-CallExpr 0x13b942bc0 <col:12, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b942b80 <col:12> 'int ()' Function 0x13b942898 'mpi_copy' 'int ()'
    |   `-RecoveryExpr 0x13b942ba0 <col:22> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b943038 <line:30:3, col:74> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b942c98 <col:3, col:10> '<dependent type>' contains-errors lvalue .p_barrett
    | | `-CXXDependentScopeMemberExpr 0x13b942c50 <col:3, col:8> '<dependent type>' contains-errors lvalue ->t
    | |   `-RecoveryExpr 0x13b942c28 <col:3> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13b942c08 <col:3> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
    | `-ConditionalOperator 0x13b943008 <col:22, col:74> '<dependent type>' contains-errors
    |   |-BinaryOperator 0x13b942fc8 <col:22, col:36> 'int' '>'
    |   | |-ImplicitCastExpr 0x13b942fb0 <col:22> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13b942ce0 <col:22> 'int' lvalue Var 0x13b941d58 'use_barrett' 'int'
    |   | `-IntegerLiteral 0x13b942d00 <col:36> 'int' 0
    |   |-CallExpr 0x13b942ee0 <col:39, col:72> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b942e38 <col:39> 'int ()' Function 0x13b942d80 '_gcry_mpi_barrett_init' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x13b942e78 <col:63, col:68> '<dependent type>' contains-errors lvalue ->p
    |   | | `-RecoveryExpr 0x13b942e58 <col:63> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x13b942ec0 <col:71> 'int' 0
    |   `-RecoveryExpr 0x13b942fe8 <col:74> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b943178 <line:32:3, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b943138 <col:3> 'int ()' Function 0x13b943080 '_gcry_mpi_ec_get_reset' 'int ()'
    | `-RecoveryExpr 0x13b943158 <col:27> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x13b943748 <line:35:3, line:36:47>
      |-BinaryOperator 0x13b9431e0 <line:35:8, col:10> 'int' '='
      | |-DeclRefExpr 0x13b9431a0 <col:8> 'int' lvalue Var 0x13b941cc0 'i' 'int'
      | `-IntegerLiteral 0x13b9431c0 <col:10> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13b9433f8 <col:13, col:34> 'int' contains-errors '<'
      | |-DeclRefExpr 0x13b943200 <col:13> 'int' lvalue Var 0x13b941cc0 'i' 'int'
      | `-CallExpr 0x13b9433d0 <col:16, col:34> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x13b943300 <col:16> 'int ()' Function 0x13b943248 'DIM' 'int ()'
      |   `-CXXDependentScopeMemberExpr 0x13b943388 <col:20, col:27> '<dependent type>' contains-errors lvalue .scratch
      |     `-CXXDependentScopeMemberExpr 0x13b943340 <col:20, col:25> '<dependent type>' contains-errors lvalue ->t
      |       `-RecoveryExpr 0x13b943320 <col:20> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x13b943438 <col:37, col:38> 'int' postfix '++'
      | `-DeclRefExpr 0x13b943418 <col:37> 'int' lvalue Var 0x13b941cc0 'i' 'int'
      `-BinaryOperator 0x13b943728 <line:36:5, col:47> '<dependent type>' contains-errors '='
        |-ArraySubscriptExpr 0x13b943578 <col:5, col:21> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x13b943548 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>
        | | `-CXXDependentScopeMemberExpr 0x13b9434e0 <col:5, col:12> '<dependent type>' contains-errors lvalue .scratch
        | |   `-CXXDependentScopeMemberExpr 0x13b943498 <col:5, col:10> '<dependent type>' contains-errors lvalue ->t
        | |     `-RecoveryExpr 0x13b943470 <col:5> '<dependent type>' contains-errors lvalue
        | |       `-DeclRefExpr 0x13b943450 <col:5> 'int' lvalue ParmVar 0x13b9280f0 'ctx' 'int'
        | `-ImplicitCastExpr 0x13b943560 <col:20> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13b943528 <col:20> 'int' lvalue Var 0x13b941cc0 'i' 'int'
        `-CallExpr 0x13b943700 <col:25, col:47> '<dependent type>' contains-errors
          |-DeclRefExpr 0x13b943678 <col:25> 'int ()' Function 0x13b9435c0 'mpi_alloc_like' 'int ()'
          `-CXXDependentScopeMemberExpr 0x13b9436b8 <col:41, col:46> '<dependent type>' contains-errors lvalue ->p
            `-RecoveryExpr 0x13b943698 <col:41> '<dependent type>' contains-errors lvalue
