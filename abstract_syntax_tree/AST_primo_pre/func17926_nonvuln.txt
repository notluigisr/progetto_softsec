`-FunctionDecl 0x13500e278  line:1:12 invalid load_certs_crls 'int (int *, const char *, int, const char *, int *, const char *, int (*)())' static
  |-ParmVarDecl 0x13500dd28 <col:28, col:33> col:33 invalid err 'int *'
  |-ParmVarDecl 0x13500dda8 <col:38, col:50> col:50 used file 'const char *'
  |-ParmVarDecl 0x13500de28 <col:56, col:60> col:60 used format 'int'
  |-ParmVarDecl 0x13500dea8 <line:2:2, col:14> col:14 used pass 'const char *'
  |-ParmVarDecl 0x13500df28 <col:20, col:28> col:28 invalid e 'int *'
  |-ParmVarDecl 0x13500dfa8 <col:31, col:43> col:43 used desc 'const char *'
  |-ParmVarDecl 0x13500e0d0 <line:3:2, <invalid sloc>> col:2 referenced invalid STACK_OF 'int (*)()'
  `-CompoundStmt 0x135029fd0 <line:4:2, line:98:2>
    |-DeclStmt 0x13500e3d8 <line:5:2, col:7>
    | `-VarDecl 0x13500e370 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x1350275b8 <line:7:2, col:29> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x135027578 <col:2, col:23> '<dependent type>' contains-errors '*'
    | | |-CallExpr 0x135027530 <col:2, col:20> '<dependent type>' contains-errors
    | | | |-RecoveryExpr 0x135027438 <col:2> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x135027418 <col:2> 'int (*)()' lvalue ParmVar 0x13500e0d0 'STACK_OF' 'int (*)()'
    | | | `-RecoveryExpr 0x135027510 <col:11> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x135027558 <col:23> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x135027598 <col:29> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x135027690 <line:10:2, col:12>
    | `-VarDecl 0x135027608 <col:2, col:11> col:6 used rv 'int' cinit
    |   `-IntegerLiteral 0x135027670 <col:11> 'int' 0
    |-IfStmt 0x1350279f8 <line:15:2, line:19:3>
    | |-BinaryOperator 0x135027760 <line:15:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x1350276e8 <col:6> 'int' lvalue ParmVar 0x13500de28 'format' 'int'
    | | `-RecoveryExpr 0x135027740 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1350279d8 <line:16:3, line:19:3>
    |   |-CallExpr 0x135027970 <line:17:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1350278a8 <col:3> 'int ()' Function 0x1350277f0 'BIO_printf' 'int ()'
    |   | |-RecoveryExpr 0x1350278c8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x135027930 <col:18> 'char[4]' lvalue "STR"
    |   | `-DeclRefExpr 0x135027950 <col:25> 'const char *' lvalue ParmVar 0x13500dfa8 'desc' 'const char *'
    |   `-ReturnStmt 0x1350279c8 <line:18:3, col:10>
    |     `-IntegerLiteral 0x1350279a8 <col:10> 'int' 0
    |-IfStmt 0x1350281a8 <line:26:2, line:32:3>
    | |-RecoveryExpr 0x135027d68 <line:26:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x135028180 <line:27:3, line:32:3>
    |   |-CallExpr 0x135027fc8 <line:28:3, line:29:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x135027d88 <line:28:3> 'int ()' Function 0x1350277f0 'BIO_printf' 'int ()'
    |   | |-RecoveryExpr 0x135027da8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x135027dc8 <col:19> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x135027de8 <line:29:5> 'const char *' lvalue ParmVar 0x13500dfa8 'desc' 'const char *'
    |   | `-ConditionalOperator 0x135027f98 <col:11, col:25> 'const char *'
    |   |   |-ImplicitCastExpr 0x135027e68 <col:11> 'const char *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x135027e08 <col:11> 'const char *' lvalue ParmVar 0x13500dda8 'file' 'const char *'
    |   |   |-ImplicitCastExpr 0x135027e80 <col:18> 'const char *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x135027e28 <col:18> 'const char *' lvalue ParmVar 0x13500dda8 'file' 'const char *'
    |   |   `-ImplicitCastExpr 0x135027f80 <col:25> 'const char *' <BitCast>
    |   |     `-ImplicitCastExpr 0x135027e98 <col:25> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x135027e48 <col:25> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x135028128 <line:30:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1350280e8 <col:3> 'int ()' Function 0x135028030 'ERR_print_errors' 'int ()'
    |   | `-RecoveryExpr 0x135028108 <col:20> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x135028170 <line:31:3, col:10>
    |     `-IntegerLiteral 0x135028150 <col:10> 'int' 0
    |-IfStmt 0x135028df8 <line:39:2, line:44:3>
    | |-RecoveryExpr 0x1350283c8 <line:39:6> '_Bool' contains-errors
    | `-CompoundStmt 0x135028de0 <line:40:3, line:44:3>
    |   `-IfStmt 0x135028dc0 <line:42:3, line:43:9>
    |     |-RecoveryExpr 0x135028d38 <line:42:7, col:9> '_Bool' contains-errors
    |     `-GotoStmt 0x135028da8 <line:43:4, col:9> 'end' 0x135028d58
    |-IfStmt 0x135028fe0 <line:46:2, line:51:3>
    | |-RecoveryExpr 0x135028e18 <line:46:6> '_Bool' contains-errors
    | `-CompoundStmt 0x135028fc8 <line:47:3, line:51:3>
    |   `-IfStmt 0x135028fa8 <line:49:3, line:50:9>
    |     |-RecoveryExpr 0x135028f70 <line:49:7, col:9> '_Bool' contains-errors
    |     `-GotoStmt 0x135028f90 <line:50:4, col:9> 'end' 0x135028d58
    |-IfStmt 0x1350297f8 <line:70:2, line:71:8>
    | |-RecoveryExpr 0x135029778 <line:70:6, col:39> '_Bool' contains-errors
    | `-BinaryOperator 0x1350297d8 <line:71:3, col:8> 'int' '='
    |   |-DeclRefExpr 0x135029798 <col:3> 'int' lvalue Var 0x135027608 'rv' 'int'
    |   `-IntegerLiteral 0x1350297b8 <col:8> 'int' 1
    |-IfStmt 0x1350299b8 <line:73:2, line:74:8>
    | |-RecoveryExpr 0x135029938 <line:73:6, col:41> '_Bool' contains-errors
    | `-BinaryOperator 0x135029998 <line:74:3, col:8> 'int' '='
    |   |-DeclRefExpr 0x135029958 <col:3> 'int' lvalue Var 0x135027608 'rv' 'int'
    |   `-IntegerLiteral 0x135029978 <col:8> 'int' 1
    |-LabelStmt 0x135029b00 <line:76:2, col:5> 'end'
    | `-NullStmt 0x135029af8 <col:5>
    |-IfStmt 0x135029f68 <line:81:2, line:96:3>
    | |-BinaryOperator 0x135029b78 <line:81:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x135029b60 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x135029b20 <col:6> 'int' lvalue Var 0x135027608 'rv' 'int'
    | | `-IntegerLiteral 0x135029b40 <col:12> 'int' 0
    | `-CompoundStmt 0x135029f40 <line:82:3, line:96:3>
    |   |-IfStmt 0x135029ce8 <line:83:3, line:87:4>
    |   | |-RecoveryExpr 0x135029b98 <line:83:7> '_Bool' contains-errors
    |   | `-CompoundStmt 0x135029cd8 <line:84:4, line:87:4>
    |   |-IfStmt 0x135029e38 <line:88:3, line:92:4>
    |   | |-RecoveryExpr 0x135029d08 <line:88:7> '_Bool' contains-errors
    |   | `-CompoundStmt 0x135029e28 <line:89:4, line:92:4>
    |   `-CallExpr 0x135029f18 <line:95:3, col:23> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x135029ed8 <col:3> 'int ()' Function 0x135028030 'ERR_print_errors' 'int ()'
    |     `-RecoveryExpr 0x135029ef8 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x135029fc0 <line:97:2, col:9>
      `-ImplicitCastExpr 0x135029fa8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x135029f88 <col:9> 'int' lvalue Var 0x135027608 'rv' 'int'
