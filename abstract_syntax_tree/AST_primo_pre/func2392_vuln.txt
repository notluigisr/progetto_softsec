`-FunctionDecl 0x11d941800  line:1:11 invalid stored 'int (struct state *)'
  |-ParmVarDecl 0x11d928668 <col:18, col:32> col:32 used s 'struct state *'
  `-CompoundStmt 0x11e808c28 <line:2:1, line:32:1>
    |-DeclStmt 0x11d941930 <line:3:5, col:17>
    | `-VarDecl 0x11d9418c8 <col:5, col:14> col:14 used len 'unsigned int'
    |-BinaryOperator 0x11d9419c8 <line:6:5, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11d941980 <col:5, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11d941948 <col:5> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | `-IntegerLiteral 0x11d9419a8 <col:17> 'int' 0
    |-BinaryOperator 0x11d941a68 <line:7:5, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11d941a20 <col:5, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11d9419e8 <col:5> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | `-IntegerLiteral 0x11d941a48 <col:17> 'int' 0
    |-IfStmt 0x11d941bd8 <line:10:5, col:41>
    | |-BinaryOperator 0x11d941b88 <col:9, col:27> 'int' contains-errors '>'
    | | |-BinaryOperator 0x11d941b08 <col:9, col:20> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x11d941ac0 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x11d941a88 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | `-IntegerLiteral 0x11d941ae8 <col:20> 'int' 4
    | | `-RecoveryExpr 0x11d941b60 <col:24, col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11d941b28 <col:24> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | `-ReturnStmt 0x11d941bc8 <col:34, col:41>
    |   `-IntegerLiteral 0x11d941ba8 <col:41> 'int' 2
    |-BinaryOperator 0x11d941d28 <line:11:5, col:27> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x11d941bf8 <col:5> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | `-ArraySubscriptExpr 0x11d941d08 <col:11, col:27> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x11d941cf0 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x11d941c50 <col:11, col:14> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x11d941c18 <col:11> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |   `-UnaryOperator 0x11d941cd8 <col:17, col:25> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-RecoveryExpr 0x11d941cb0 <col:17, col:20> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x11d941c78 <col:17> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |-CompoundAssignOperator 0x11d941eb8 <line:12:5, col:33> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x11d941d48 <col:5> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | `-BinaryOperator 0x11d941e98 <col:12, col:33> '<dependent type>' contains-errors '<<'
    |   |-ArraySubscriptExpr 0x11d941e58 <col:12, col:28> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x11d941e40 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-RecoveryExpr 0x11d941da0 <col:12, col:15> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x11d941d68 <col:12> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |   | `-UnaryOperator 0x11d941e28 <col:18, col:26> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   |   `-RecoveryExpr 0x11d941e00 <col:18, col:21> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x11d941dc8 <col:18> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |   `-IntegerLiteral 0x11d941e78 <col:33> 'int' 8
    |-IfStmt 0x11d9423a0 <line:13:5, line:15:17>
    | |-BinaryOperator 0x11d942338 <line:13:9, line:14:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x11d9420c0 <line:13:9, col:42> 'int' contains-errors '!='
    | | | |-ArraySubscriptExpr 0x11d941fd8 <col:9, col:25> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x11d941fc0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x11d941f20 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | | | | |   `-DeclRefExpr 0x11d941ee8 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | | `-UnaryOperator 0x11d941fa8 <col:15, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | | |   `-RecoveryExpr 0x11d941f80 <col:15, col:18> '<dependent type>' contains-errors lvalue
    | | | |     `-DeclRefExpr 0x11d941f48 <col:15> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | `-ParenExpr 0x11d9420a0 <col:30, col:42> 'unsigned int'
    | | |   `-BinaryOperator 0x11d942080 <col:31, col:38> 'unsigned int' '&'
    | | |     |-UnaryOperator 0x11d942030 <col:31, col:32> 'unsigned int' prefix '~' cannot overflow
    | | |     | `-ImplicitCastExpr 0x11d942018 <col:32> 'unsigned int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x11d941ff8 <col:32> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | | |     `-ImplicitCastExpr 0x11d942068 <col:38> 'unsigned int' <IntegralCast>
    | | |       `-IntegerLiteral 0x11d942048 <col:38> 'int' 255
    | | `-BinaryOperator 0x11d942318 <line:14:9, col:49> 'int' contains-errors '!='
    | |   |-ArraySubscriptExpr 0x11d9421d0 <col:9, col:25> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x11d9421b8 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x11d942118 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | |   | |   `-DeclRefExpr 0x11d9420e0 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | |   | `-UnaryOperator 0x11d9421a0 <col:15, col:23> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |   |   `-RecoveryExpr 0x11d942178 <col:15, col:18> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x11d942140 <col:15> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | |   `-ParenExpr 0x11d9422f8 <col:30, col:49> 'unsigned int'
    | |     `-BinaryOperator 0x11d9422d8 <col:31, col:45> 'unsigned int' '&'
    | |       |-ParenExpr 0x11d942280 <col:31, col:41> 'unsigned int'
    | |       | `-BinaryOperator 0x11d942260 <col:32, col:40> 'unsigned int' '>>'
    | |       |   |-UnaryOperator 0x11d942228 <col:32, col:33> 'unsigned int' prefix '~' cannot overflow
    | |       |   | `-ImplicitCastExpr 0x11d942210 <col:33> 'unsigned int' <LValueToRValue>
    | |       |   |   `-DeclRefExpr 0x11d9421f0 <col:33> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | |       |   `-IntegerLiteral 0x11d942240 <col:40> 'int' 8
    | |       `-ImplicitCastExpr 0x11d9422c0 <col:45> 'unsigned int' <IntegralCast>
    | |         `-IntegerLiteral 0x11d9422a0 <col:45> 'int' 255
    | `-ReturnStmt 0x11d942390 <line:15:9, col:17>
    |   `-UnaryOperator 0x11d942378 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x11d942358 <col:17> 'int' 2
    |-IfStmt 0x11d942510 <line:18:5, col:43>
    | |-BinaryOperator 0x11d9424c0 <col:9, col:29> 'int' contains-errors '>'
    | | |-BinaryOperator 0x11d942440 <col:9, col:20> '<dependent type>' contains-errors '+'
    | | | |-RecoveryExpr 0x11d9423f8 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x11d9423c0 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | `-DeclRefExpr 0x11d942420 <col:20> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | | `-RecoveryExpr 0x11d942498 <col:26, col:29> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x11d942460 <col:26> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | `-ReturnStmt 0x11d942500 <col:36, col:43>
    |   `-IntegerLiteral 0x11d9424e0 <col:43> 'int' 2
    |-IfStmt 0x11e808bc8 <line:19:5, line:28:5> has_else
    | |-BinaryOperator 0x11d9425e8 <line:19:9, col:19> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x11d942568 <col:9, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11d942530 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | `-RecoveryExpr 0x11d9425c8 <col:19> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x11e808a28 <col:24, line:24:5>
    | | |-IfStmt 0x11d942758 <line:20:9, line:21:20>
    | | | |-BinaryOperator 0x11d942708 <line:20:13, col:34> 'int' contains-errors '>'
    | | | | |-BinaryOperator 0x11d942688 <col:13, col:25> '<dependent type>' contains-errors '+'
    | | | | | |-RecoveryExpr 0x11d942640 <col:13, col:16> '<dependent type>' contains-errors lvalue
    | | | | | | `-DeclRefExpr 0x11d942608 <col:13> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | | | `-DeclRefExpr 0x11d942668 <col:25> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | | | | `-RecoveryExpr 0x11d9426e0 <col:31, col:34> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x11d9426a8 <col:31> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | | | `-ReturnStmt 0x11d942748 <line:21:13, col:20>
    | | |   `-IntegerLiteral 0x11d942728 <col:20> 'int' 1
    | | `-WhileStmt 0x11e808a08 <line:22:9, line:23:51>
    | |   |-UnaryOperator 0x11d942798 <line:22:16, col:19> 'unsigned int' postfix '--'
    | |   | `-DeclRefExpr 0x11d942778 <col:16> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    | |   `-BinaryOperator 0x11e8089e8 <line:23:13, col:51> '<dependent type>' contains-errors '='
    | |     |-ArraySubscriptExpr 0x11e8088b8 <col:13, col:31> '<dependent type>' contains-errors lvalue
    | |     | |-ImplicitCastExpr 0x11e8088a0 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     | | `-RecoveryExpr 0x11e808800 <col:13, col:16> '<dependent type>' contains-errors lvalue
    | |     | |   `-DeclRefExpr 0x11d9427b0 <col:13> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | |     | `-UnaryOperator 0x11e808888 <col:20, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |     |   `-RecoveryExpr 0x11e808860 <col:20, col:23> '<dependent type>' contains-errors lvalue
    | |     |     `-DeclRefExpr 0x11e808828 <col:20> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | |     `-ArraySubscriptExpr 0x11e8089c8 <col:35, col:51> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x11e8089b0 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-RecoveryExpr 0x11e808910 <col:35, col:38> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x11e8088d8 <col:35> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | |       `-UnaryOperator 0x11e808998 <col:41, col:49> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |         `-RecoveryExpr 0x11e808970 <col:41, col:44> '<dependent type>' contains-errors lvalue
    | |           `-DeclRefExpr 0x11e808938 <col:41> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    | `-CompoundStmt 0x11e808ba8 <line:25:10, line:28:5>
    |   |-CompoundAssignOperator 0x11e808ac8 <line:26:9, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x11e808a80 <col:9, col:12> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x11e808a48 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |   | `-DeclRefExpr 0x11e808aa8 <col:22> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    |   `-CompoundAssignOperator 0x11e808b78 <line:27:9, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x11e808b30 <col:9, col:12> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x11e808af8 <col:9> 'struct state *' lvalue ParmVar 0x11d928668 's' 'struct state *'
    |     `-DeclRefExpr 0x11e808b58 <col:21> 'unsigned int' lvalue Var 0x11d9418c8 'len' 'unsigned int'
    `-ReturnStmt 0x11e808c18 <line:31:5, col:12>
      `-IntegerLiteral 0x11e808bf8 <col:12> 'int' 0
