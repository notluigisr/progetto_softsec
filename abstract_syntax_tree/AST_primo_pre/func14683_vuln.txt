`-FunctionDecl 0x13d928498  line:1:5 invalid touch_file 'int (const char *, int, int, int, int, int)'
  |-ParmVarDecl 0x13d9280d8 <col:16, col:28> col:28 used path 'const char *'
  |-ParmVarDecl 0x13d928170 <col:34, col:39> col:39 invalid parents 'int'
  |-ParmVarDecl 0x13d9281f0 <col:48, col:55> col:55 invalid stamp 'int'
  |-ParmVarDecl 0x13d928270 <col:62, col:68> col:68 invalid uid 'int'
  |-ParmVarDecl 0x13d9282f0 <col:73, col:79> col:79 invalid gid 'int'
  |-ParmVarDecl 0x13d928370 <col:84, col:91> col:91 invalid mode 'int'
  `-CompoundStmt 0x13d942ca0 <col:97, line:38:1>
    |-DeclStmt 0x13d9285f0 <line:3:9, col:14>
    | `-VarDecl 0x13d928588 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x13d941800 <line:5:9, col:20> 'int'
    | |-ImplicitCastExpr 0x13d9287d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13d928760 <col:9> 'int ()' Function 0x13d9286a8 'assert' 'int ()'
    | `-ImplicitCastExpr 0x13d941828 <col:16> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x13d928780 <col:16> 'const char *' lvalue ParmVar 0x13d9280d8 'path' 'const char *'
    |-IfStmt 0x13d941a00 <line:7:9, line:8:41>
    | |-RecoveryExpr 0x13d941840 <line:7:13> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13d9419b8 <line:8:17, col:41> 'int'
    |   |-ImplicitCastExpr 0x13d9419a0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13d941940 <col:17> 'int ()' Function 0x13d941888 'mkdir_parents' 'int ()'
    |   |-ImplicitCastExpr 0x13d9419e8 <col:31> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d941960 <col:31> 'const char *' lvalue ParmVar 0x13d9280d8 'path' 'const char *'
    |   `-IntegerLiteral 0x13d941980 <col:37> 'int' 493
    |-IfStmt 0x13d941e48 <line:11:9, line:12:25>
    | |-BinaryOperator 0x13d941d80 <line:11:13, col:18> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13d941d60 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13d941d20 <col:18> 'int' 0
    | `-ReturnStmt 0x13d941e38 <line:12:17, col:25>
    |   `-UnaryOperator 0x13d941e20 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d941e08 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d941de8 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d942278 <line:14:9, line:18:9>
    | |-BinaryOperator 0x13d941ee0 <line:14:13, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13d941e68 <col:13> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13d941ec0 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13d942258 <col:35, line:18:9>
    |   |-BinaryOperator 0x13d9420f8 <line:15:17, col:36> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13d941f00 <col:17> 'int' lvalue Var 0x13d928588 'r' 'int'
    |   | `-CallExpr 0x13d9420c8 <col:21, col:36> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13d942000 <col:21> 'int ()' Function 0x13d941f48 'fchmod' 'int ()'
    |   |   |-RecoveryExpr 0x13d9420a8 <col:28> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x13d942038 <col:32> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13d942238 <line:16:17, line:17:33>
    |     |-BinaryOperator 0x13d942170 <line:16:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x13d942158 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x13d942118 <col:21> 'int' lvalue Var 0x13d928588 'r' 'int'
    |     | `-IntegerLiteral 0x13d942138 <col:25> 'int' 0
    |     `-ReturnStmt 0x13d942228 <line:17:25, col:33>
    |       `-UnaryOperator 0x13d942210 <col:32, col:33> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13d9421f8 <col:33> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13d9421d8 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d9424e0 <line:20:9, line:24:9>
    | |-RecoveryExpr 0x13d9422d8 <line:20:13, col:42> '_Bool' contains-errors
    | `-CompoundStmt 0x13d9424d0 <col:55, line:24:9>
    |-IfStmt 0x13d942bc8 <line:26:9, line:33:17> has_else
    | |-RecoveryExpr 0x13d942520 <line:26:13, col:22> '_Bool' contains-errors
    | |-CompoundStmt 0x13d942b58 <col:37, line:32:9>
    | | |-DeclStmt 0x13d9426d0 <line:27:17, col:38>
    | | | |-RecordDecl 0x13d942540 <col:17, col:24> col:24 struct timespec
    | | | `-VarDecl 0x13d942650 <col:17, col:33> col:33 referenced invalid ts 'int'
    | | |-CallExpr 0x13d9428b0 <line:29:17, col:45> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13d9427c8 <col:17> 'int ()' Function 0x13d942710 'timespec_store' 'int ()'
    | | | |-UnaryOperator 0x13d942878 <col:32, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-ArraySubscriptExpr 0x13d942858 <col:33, col:37> '<dependent type>' contains-errors lvalue
    | | | |   |-ImplicitCastExpr 0x13d942840 <col:33> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   | `-RecoveryExpr 0x13d942800 <col:33> '<dependent type>' contains-errors lvalue
    | | | |   `-IntegerLiteral 0x13d942820 <col:36> 'int' 0
    | | | `-RecoveryExpr 0x13d942890 <col:40> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13d9429f8 <line:30:17, col:29> '<dependent type>' contains-errors '='
    | |   |-ArraySubscriptExpr 0x13d942960 <col:17, col:21> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x13d942948 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x13d942900 <col:17> '<dependent type>' contains-errors lvalue
    | |   | |   `-DeclRefExpr 0x13d9428e0 <col:17> 'int' lvalue Var 0x13d942650 'ts' 'int'
    | |   | `-IntegerLiteral 0x13d942928 <col:20> 'int' 1
    | |   `-ArraySubscriptExpr 0x13d9429d8 <col:25, col:29> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x13d9429c0 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x13d942980 <col:25> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x13d9429a0 <col:28> 'int' 0
    | `-NullStmt 0x13d942bc0 <line:33:17>
    `-ReturnStmt 0x13d942c90 <line:37:9, col:16>
      `-IntegerLiteral 0x13d942c70 <col:16> 'int' 0
