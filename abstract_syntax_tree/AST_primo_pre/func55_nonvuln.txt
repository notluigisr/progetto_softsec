`-FunctionDecl 0x11f80dfa8  line:1:12 invalid phar_dir_seek 'int (int *, int, int, int *)' static
  |-ParmVarDecl 0x11f80dd28 <col:26, col:38> col:38 invalid stream 'int *'
  |-ParmVarDecl 0x11f80dda8 <col:46, col:52> col:52 referenced invalid offset 'int'
  |-ParmVarDecl 0x11f80de28 <col:60, col:64> col:64 used whence 'int'
  |-ParmVarDecl 0x11f80dea8 <col:72, col:79> col:79 invalid newoffset 'int *'
  `-CompoundStmt 0x11e11eca0 <line:2:1, line:27:1>
    |-IfStmt 0x11f80e198 <line:5:2, line:7:2>
    | |-UnaryOperator 0x11f80e120 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f80e108 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x11f80e0e8 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f80e180 <col:13, line:7:2>
    |   `-ReturnStmt 0x11f80e170 <line:6:3, col:11>
    |     `-UnaryOperator 0x11f80e158 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x11f80e138 <col:11> 'int' 1
    |-IfStmt 0x11e11e420 <line:9:2, line:12:2>
    | |-BinaryOperator 0x11f80e230 <line:9:6, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x11f80e1b8 <col:6> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    | | `-RecoveryExpr 0x11f80e210 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e11e400 <col:26, line:12:2>
    |   |-BinaryOperator 0x11f80e2c8 <line:10:3, col:12> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11f80e250 <col:3> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    |   | `-RecoveryExpr 0x11f80e2a8 <col:12> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x11e11e3e0 <line:11:3, col:43> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x11f80e308 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x11f80e2e8 <col:3> 'int' lvalue ParmVar 0x11f80dda8 'offset' 'int'
    |     `-BinaryOperator 0x11e11e3c0 <col:12, col:43> '<dependent type>' contains-errors '+'
    |       |-CallExpr 0x11e11e398 <col:12, col:39> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x11e11e2b8 <col:12> 'int ()' Function 0x11e11e200 'zend_hash_num_elements' 'int ()'
    |       | `-RecoveryExpr 0x11e11e378 <col:35> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x11e11e318 <col:43> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e11e678 <line:14:2, line:16:2>
    | |-BinaryOperator 0x11e11e4b8 <line:14:6, col:16> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x11e11e440 <col:6> 'int' lvalue ParmVar 0x11f80de28 'whence' 'int'
    | | `-RecoveryExpr 0x11e11e498 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e11e660 <col:26, line:16:2>
    |   `-CallExpr 0x11e11e638 <line:15:3, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11e11e5b8 <col:3> 'int ()' Function 0x11e11e500 'zend_hash_internal_pointer_reset' 'int ()'
    |     `-RecoveryExpr 0x11e11e618 <col:36> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x11e11ec70 <line:18:2, line:26:2> has_else
      |-BinaryOperator 0x11e11e6d8 <line:18:6, col:15> 'int' contains-errors '<'
      | |-RecoveryExpr 0x11e11e698 <col:6> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x11e11e6b8 <col:15> 'int' 0
      |-CompoundStmt 0x11e11e740 <col:18, line:20:2>
      | `-ReturnStmt 0x11e11e730 <line:19:3, col:11>
      |   `-UnaryOperator 0x11e11e718 <col:10, col:11> 'int' prefix '-'
      |     `-IntegerLiteral 0x11e11e6f8 <col:11> 'int' 1
      `-CompoundStmt 0x11e11ec48 <line:20:9, line:26:2>
        |-BinaryOperator 0x11e11e7c8 <line:21:3, col:16> '<dependent type>' contains-errors '='
        | |-UnaryOperator 0x11e11e790 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | `-ImplicitCastExpr 0x11e11e778 <col:4> '<dependent type>' contains-errors <LValueToRValue>
        | |   `-RecoveryExpr 0x11e11e758 <col:4> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x11e11e7a8 <col:16> 'int' 0
        |-WhileStmt 0x11e11ebf8 <line:22:3, line:24:3>
        | |-BinaryOperator 0x11e11eb38 <line:22:10, col:65> 'int' contains-errors '&&'
        | | |-BinaryOperator 0x11e11ea90 <col:10, col:23> 'int' contains-errors '<'
        | | | |-UnaryOperator 0x11e11ea78 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | | | `-ImplicitCastExpr 0x11e11ea60 <col:11> '<dependent type>' contains-errors <LValueToRValue>
        | | | |   `-RecoveryExpr 0x11e11e7e8 <col:11> '<dependent type>' contains-errors lvalue
        | | | `-RecoveryExpr 0x11e11e838 <col:23> '<dependent type>' contains-errors lvalue
        | | `-BinaryOperator 0x11e11eb18 <col:33, col:65> 'int' contains-errors '=='
        | |   |-CallExpr 0x11e11ead0 <col:33, col:60> '<dependent type>' contains-errors
        | |   | |-DeclRefExpr 0x11e11e958 <col:33> 'int ()' Function 0x11e11e8a0 'zend_hash_move_forward' 'int ()'
        | |   | `-RecoveryExpr 0x11e11eab0 <col:56> '<dependent type>' contains-errors lvalue
        | |   `-RecoveryExpr 0x11e11eaf8 <col:65> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x11e11ebe0 <col:74, line:24:3>
        |   `-UnaryOperator 0x11e11ebc8 <line:23:4, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow
        |     `-ParenExpr 0x11e11eba8 <col:6, col:17> '<dependent type>' contains-errors
        |       `-UnaryOperator 0x11e11eb90 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
        |         `-ImplicitCastExpr 0x11e11eb78 <col:8> '<dependent type>' contains-errors <LValueToRValue>
        |           `-RecoveryExpr 0x11e11eb58 <col:8> '<dependent type>' contains-errors lvalue
        `-ReturnStmt 0x11e11ec38 <line:25:3, col:10>
          `-IntegerLiteral 0x11e11ec18 <col:10> 'int' 0
