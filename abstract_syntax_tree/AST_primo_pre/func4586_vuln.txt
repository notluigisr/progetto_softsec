`-FunctionDecl 0x13c9283a8  line:1:1 invalid read_new_length 'int (int, int *, int *, int *)'
  |-ParmVarDecl 0x13c9280f0 <col:17, col:30> col:30 invalid inp 'int'
  |-ParmVarDecl 0x13c9281a8 <line:2:3, col:12> col:12 invalid r_len 'int *'
  |-ParmVarDecl 0x13c928228 <col:19, col:28> col:28 invalid r_size 'int *'
  |-ParmVarDecl 0x13c9282a8 <col:36, col:45> col:45 invalid r_partial 'int *'
  `-CompoundStmt 0x13c942340 <line:3:1, line:21:1>
    |-DeclStmt 0x13c928588 <line:4:2, col:11>
    | |-VarDecl 0x13c928488 <col:2, col:6> col:6 used c 'int'
    | `-VarDecl 0x13c928508 <col:2, col:9> col:9 used c1 'int'
    |-BinaryOperator 0x13c928788 <line:6:2, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x13c9285a0 <col:2> 'int' lvalue Var 0x13c928488 'c' 'int'
    | `-CallExpr 0x13c928760 <col:6, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c928720 <col:6> 'int ()' Function 0x13c928668 'cdk_stream_getc' 'int ()'
    |   `-RecoveryExpr 0x13c928740 <col:22> '<dependent type>' contains-errors lvalue
    |-UnaryOperator 0x13c941820 <line:7:2, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
    | `-ParenExpr 0x13c941800 <col:2, col:10> '<dependent type>' contains-errors
    |   `-UnaryOperator 0x13c9287e0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x13c9287c8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13c9287a8 <col:4> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13c942310 <line:8:2, line:20:2> has_else
      |-BinaryOperator 0x13c941890 <line:8:6, col:10> 'int' '<'
      | |-ImplicitCastExpr 0x13c941878 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x13c941838 <col:6> 'int' lvalue Var 0x13c928488 'c' 'int'
      | `-IntegerLiteral 0x13c941858 <col:10> 'int' 192
      |-BinaryOperator 0x13c941920 <line:9:3, col:12> '<dependent type>' contains-errors '='
      | |-UnaryOperator 0x13c9418e8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | `-ImplicitCastExpr 0x13c9418d0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
      | |   `-RecoveryExpr 0x13c9418b0 <col:4> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x13c941900 <col:12> 'int' lvalue Var 0x13c928488 'c' 'int'
      `-IfStmt 0x13c9422e0 <line:10:7, line:20:2> has_else
        |-BinaryOperator 0x13c941a30 <line:10:11, col:28> 'int' '&&'
        | |-BinaryOperator 0x13c941998 <col:11, col:16> 'int' '>='
        | | |-ImplicitCastExpr 0x13c941980 <col:11> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13c941940 <col:11> 'int' lvalue Var 0x13c928488 'c' 'int'
        | | `-IntegerLiteral 0x13c941960 <col:16> 'int' 192
        | `-BinaryOperator 0x13c941a10 <col:23, col:28> 'int' '<='
        |   |-ImplicitCastExpr 0x13c9419f8 <col:23> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x13c9419b8 <col:23> 'int' lvalue Var 0x13c928488 'c' 'int'
        |   `-IntegerLiteral 0x13c9419d8 <col:28> 'int' 223
        |-CompoundStmt 0x13c941d80 <col:33, line:14:2>
        | |-BinaryOperator 0x13c941ad8 <line:11:3, col:27> 'int' contains-errors '='
        | | |-DeclRefExpr 0x13c941a50 <col:3> 'int' lvalue Var 0x13c928508 'c1' 'int'
        | | `-CallExpr 0x13c941ab0 <col:8, col:27> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x13c941a70 <col:8> 'int ()' Function 0x13c928668 'cdk_stream_getc' 'int ()'
        | |   `-RecoveryExpr 0x13c941a90 <col:24> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x13c941b68 <line:12:3, col:12> '<dependent type>' contains-errors postfix '++' cannot overflow
        | | `-ParenExpr 0x13c941b48 <col:3, col:11> '<dependent type>' contains-errors
        | |   `-UnaryOperator 0x13c941b30 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
        | |     `-ImplicitCastExpr 0x13c941b18 <col:5> '<dependent type>' contains-errors <LValueToRValue>
        | |       `-RecoveryExpr 0x13c941af8 <col:5> '<dependent type>' contains-errors lvalue
        | `-BinaryOperator 0x13c941d60 <line:13:3, col:36> '<dependent type>' contains-errors '='
        |   |-UnaryOperator 0x13c941bb8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | `-ImplicitCastExpr 0x13c941ba0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
        |   |   `-RecoveryExpr 0x13c941b80 <col:4> '<dependent type>' contains-errors lvalue
        |   `-BinaryOperator 0x13c941d40 <col:12, col:36> 'int' '+'
        |     |-BinaryOperator 0x13c941d00 <col:12, col:31> 'int' '+'
        |     | |-ParenExpr 0x13c941ca8 <col:12, col:27> 'int'
        |     | | `-BinaryOperator 0x13c941c88 <col:13, col:26> 'int' '<<'
        |     | |   |-ParenExpr 0x13c941c48 <col:13, col:21> 'int'
        |     | |   | `-BinaryOperator 0x13c941c28 <col:14, col:18> 'int' '-'
        |     | |   |   |-ImplicitCastExpr 0x13c941c10 <col:14> 'int' <LValueToRValue>
        |     | |   |   | `-DeclRefExpr 0x13c941bd0 <col:14> 'int' lvalue Var 0x13c928488 'c' 'int'
        |     | |   |   `-IntegerLiteral 0x13c941bf0 <col:18> 'int' 192
        |     | |   `-IntegerLiteral 0x13c941c68 <col:26> 'int' 8
        |     | `-ImplicitCastExpr 0x13c941ce8 <col:31> 'int' <LValueToRValue>
        |     |   `-DeclRefExpr 0x13c941cc8 <col:31> 'int' lvalue Var 0x13c928508 'c1' 'int'
        |     `-IntegerLiteral 0x13c941d20 <col:36> 'int' 192
        `-IfStmt 0x13c9422b0 <line:14:9, line:20:2> has_else
          |-BinaryOperator 0x13c941e00 <line:14:13, col:18> 'int' '=='
          | |-ImplicitCastExpr 0x13c941de8 <col:13> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x13c941da8 <col:13> 'int' lvalue Var 0x13c928488 'c' 'int'
          | `-IntegerLiteral 0x13c941dc8 <col:18> 'int' 255
          |-CompoundStmt 0x13c942098 <col:23, line:17:2>
          | |-BinaryOperator 0x13c941fb8 <line:15:3, col:23> '<dependent type>' contains-errors '='
          | | |-UnaryOperator 0x13c941e58 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
          | | | `-ImplicitCastExpr 0x13c941e40 <col:4> '<dependent type>' contains-errors <LValueToRValue>
          | | |   `-RecoveryExpr 0x13c941e20 <col:4> '<dependent type>' contains-errors lvalue
          | | `-CallExpr 0x13c941f90 <col:12, col:23> '<dependent type>' contains-errors
          | |   |-DeclRefExpr 0x13c941f50 <col:12> 'int ()' Function 0x13c941e98 'read_32' 'int ()'
          | |   `-RecoveryExpr 0x13c941f70 <col:20> '<dependent type>' contains-errors lvalue
          | `-CompoundAssignOperator 0x13c942068 <line:16:3, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |   |-ParenExpr 0x13c942028 <col:3, col:11> '<dependent type>' contains-errors
          |   | `-UnaryOperator 0x13c942010 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
          |   |   `-ImplicitCastExpr 0x13c941ff8 <col:5> '<dependent type>' contains-errors <LValueToRValue>
          |   |     `-RecoveryExpr 0x13c941fd8 <col:5> '<dependent type>' contains-errors lvalue
          |   `-IntegerLiteral 0x13c942048 <col:16> 'int' 4
          `-CompoundStmt 0x13c942290 <line:17:9, line:20:2>
            |-BinaryOperator 0x13c9421e0 <line:18:3, col:26> '<dependent type>' contains-errors '='
            | |-UnaryOperator 0x13c9420f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
            | | `-ImplicitCastExpr 0x13c9420d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
            | |   `-RecoveryExpr 0x13c9420b8 <col:4> '<dependent type>' contains-errors lvalue
            | `-BinaryOperator 0x13c9421c0 <col:12, col:26> 'int' '<<'
            |   |-IntegerLiteral 0x13c942108 <col:12> 'int' 1
            |   `-ParenExpr 0x13c9421a0 <col:17, col:26> 'int'
            |     `-BinaryOperator 0x13c942180 <col:18, col:22> 'int' '&'
            |       |-ImplicitCastExpr 0x13c942168 <col:18> 'int' <LValueToRValue>
            |       | `-DeclRefExpr 0x13c942128 <col:18> 'int' lvalue Var 0x13c928488 'c' 'int'
            |       `-IntegerLiteral 0x13c942148 <col:22> 'int' 31
            `-BinaryOperator 0x13c942270 <line:19:3, col:16> '<dependent type>' contains-errors '='
              |-UnaryOperator 0x13c942238 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
              | `-ImplicitCastExpr 0x13c942220 <col:4> '<dependent type>' contains-errors <LValueToRValue>
              |   `-RecoveryExpr 0x13c942200 <col:4> '<dependent type>' contains-errors lvalue
              `-IntegerLiteral 0x13c942250 <col:16> 'int' 1
