`-FunctionDecl 0x12e8fb3f8  line:1:19 invalid hfs_btree_open 'struct hfs_btree *(struct super_block *, int, int)'
  |-ParmVarDecl 0x12e02b8e8 <col:34, col:54> col:54 used sb 'struct super_block *'
  |-ParmVarDecl 0x12e02b980 <col:58, col:62> col:62 invalid id 'int'
  |-ParmVarDecl 0x12e8fb200 <col:66, col:79> col:79 invalid keycmp 'int'
  `-CompoundStmt 0x12e053948 <line:2:1, line:107:1>
    |-DeclStmt 0x12e8fb5b0 <line:3:2, col:24>
    | `-VarDecl 0x12e8fb548 <col:2, col:20> col:20 used tree 'struct hfs_btree *'
    |-DeclStmt 0x12e8fb7b8 <line:4:2, col:35>
    | |-RecordDecl 0x12e8fb5c8 <col:2, col:9> col:9 struct hfs_btree_header_rec
    | `-VarDecl 0x12e8fb738 <col:2, col:31> col:31 used head 'struct hfs_btree_header_rec *'
    |-DeclStmt 0x12e8fb9b8 <line:5:2, col:31>
    | |-RecordDecl 0x12e8fb7d0 <col:2, col:9> col:9 struct address_space
    | `-VarDecl 0x12e8fb938 <col:2, col:24> col:24 used mapping 'struct address_space *'
    |-DeclStmt 0x12e8fbbb8 <line:6:2, col:19>
    | |-RecordDecl 0x12e8fb9d0 <col:2, col:9> col:9 struct page
    | `-VarDecl 0x12e8fbb38 <col:2, col:15> col:15 used page 'struct page *'
    |-DeclStmt 0x12e8fbc50 <line:7:2, col:19>
    | `-VarDecl 0x12e8fbbe8 <col:2, col:15> col:15 used size 'unsigned int'
    |-IfStmt 0x12e8fbf20 <line:10:2, line:11:10>
    | |-UnaryOperator 0x12e8fbec0 <line:10:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e8fbea8 <col:7> 'struct hfs_btree *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e8fbe88 <col:7> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-ReturnStmt 0x12e8fbf10 <line:11:3, col:10>
    |   `-RecoveryExpr 0x12e8fbef0 <col:10> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e8fc0b8 <line:13:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e8fc020 <col:2> 'int ()' Function 0x12e8fbf68 'mutex_init' 'int ()'
    | `-UnaryOperator 0x12e8fc0a0 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12e8fc078 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e8fc040 <col:14> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-CallExpr 0x12e900a58 <line:14:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e8fc1c0 <col:2> 'int ()' Function 0x12e8fc108 'spin_lock_init' 'int ()'
    | `-UnaryOperator 0x12e900a40 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12e900a18 <col:18, col:24> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e8fc1e0 <col:18> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-BinaryOperator 0x12e900b00 <line:16:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e900ab8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e900a80 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-DeclRefExpr 0x12e900ae0 <col:13> 'struct super_block *' lvalue ParmVar 0x12e02b8e8 'sb' 'struct super_block *'
    |-BinaryOperator 0x12e900ba0 <line:17:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e900b58 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e900b20 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-RecoveryExpr 0x12e900b80 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e900c40 <line:18:2, col:17> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e900bf8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e900bc0 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-RecoveryExpr 0x12e900c20 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12e900e30 <line:20:2, col:34> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e900c98 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e900c60 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e900e00 <col:16, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e900da0 <col:16> 'int ()' Function 0x12e900ce8 'iget_locked' 'int ()'
    |   |-DeclRefExpr 0x12e900dc0 <col:28> 'struct super_block *' lvalue ParmVar 0x12e02b8e8 'sb' 'struct super_block *'
    |   `-RecoveryExpr 0x12e900de0 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e900f48 <line:21:2, line:22:8>
    | |-UnaryOperator 0x12e900ec8 <line:21:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e900eb0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12e900e88 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e900e50 <col:7> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-GotoStmt 0x12e900f30 <line:22:3, col:8> 'free_tree' 0x12e900ee0
    |-CompoundStmt 0x12e04ff40 <line:24:2, line:42:2>
    | |-DeclStmt 0x12e901508 <line:25:2, col:39>
    | | |-RecordDecl 0x12e901148 <col:2, col:9> col:9 struct hfs_mdb
    | | `-VarDecl 0x12e9012b8 <col:2, col:36> col:18 used mdb 'struct hfs_mdb *' cinit
    | |   `-RecoveryExpr 0x12e9014c8 <col:24, col:36> '<dependent type>' contains-errors lvalue
    | |     `-CallExpr 0x12e901488 <col:24, col:33> 'int'
    | |       |-ImplicitCastExpr 0x12e901470 <col:24> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x12e901400 <col:24> 'int ()' Function 0x12e901348 'HFS_SB' 'int ()'
    | |       `-ImplicitCastExpr 0x12e9014b0 <col:31> 'struct super_block *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12e901420 <col:31> 'struct super_block *' lvalue ParmVar 0x12e02b8e8 'sb' 'struct super_block *'
    | |-BinaryOperator 0x12e901710 <line:26:2, col:30> '<dependent type>' contains-errors '='
    | | |-CXXDependentScopeMemberExpr 0x12e9016a8 <col:2, col:22> '<dependent type>' contains-errors lvalue ->flags
    | | | `-CallExpr 0x12e901680 <col:2, col:19> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x12e901600 <col:2> 'int ()' Function 0x12e901548 'HFS_I' 'int ()'
    | | |   `-RecoveryExpr 0x12e901658 <col:8, col:14> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x12e901620 <col:8> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | | `-IntegerLiteral 0x12e9016f0 <col:30> 'int' 0
    | |-CallExpr 0x12e901858 <line:27:2, col:46> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e901730 <col:2> 'int ()' Function 0x12e8fbf68 'mutex_init' 'int ()'
    | | `-UnaryOperator 0x12e901840 <col:13, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-CXXDependentScopeMemberExpr 0x12e9017f8 <col:14, col:34> '<dependent type>' contains-errors lvalue ->extents_lock
    | |     `-CallExpr 0x12e9017d0 <col:14, col:31> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x12e901750 <col:14> 'int ()' Function 0x12e901548 'HFS_I' 'int ()'
    | |       `-RecoveryExpr 0x12e9017a8 <col:20, col:26> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x12e901770 <col:20> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-SwitchStmt 0x12e9018b8 <line:28:2, line:41:2>
    |   |-ImplicitCastExpr 0x12e9018a0 <line:28:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x12e901880 <col:10> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x12e04ff08 <col:14, line:41:2>
    |     |-CallExpr 0x12e04f8e8 <line:30:3, line:31:54> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12e9019c0 <line:30:3> 'int ()' Function 0x12e901908 'hfs_inode_read_fork' 'int ()'
    |     | |-RecoveryExpr 0x12e04f618 <col:23, col:29> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e9019e0 <col:23> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |     | |-RecoveryExpr 0x12e04f678 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04f640 <col:36> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | |-RecoveryExpr 0x12e04f6d8 <col:53, col:58> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04f6a0 <col:53> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | |-RecoveryExpr 0x12e04f738 <line:31:9, col:14> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04f700 <col:9> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | `-CallExpr 0x12e04f8c0 <col:26, col:53> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x12e04f840 <col:26> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |     |   `-RecoveryExpr 0x12e04f898 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12e04f860 <col:38> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     |-BreakStmt 0x12e04fa20 <line:33:3>
    |     |-CallExpr 0x12e04fc70 <line:35:3, line:36:54> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12e04fa28 <line:35:3> 'int ()' Function 0x12e901908 'hfs_inode_read_fork' 'int ()'
    |     | |-RecoveryExpr 0x12e04fa80 <col:23, col:29> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04fa48 <col:23> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |     | |-RecoveryExpr 0x12e04fae0 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04faa8 <col:36> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | |-RecoveryExpr 0x12e04fb40 <col:53, col:58> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04fb08 <col:53> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | |-RecoveryExpr 0x12e04fba0 <line:36:9, col:14> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x12e04fb68 <col:9> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     | `-CallExpr 0x12e04fc48 <col:26, col:53> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x12e04fbc8 <col:26> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |     |   `-RecoveryExpr 0x12e04fc20 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12e04fbe8 <col:38> 'struct hfs_mdb *' contains-errors lvalue Var 0x12e9012b8 'mdb' 'struct hfs_mdb *'
    |     |-BreakStmt 0x12e04fda8 <line:38:3>
    |     `-DefaultStmt 0x12e04fee8 <line:39:2, line:40:7>
    |       `-CallExpr 0x12e04fec8 <col:3, col:7> 'int'
    |         `-ImplicitCastExpr 0x12e04feb0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |           `-DeclRefExpr 0x12e04fe90 <col:3> 'int ()' Function 0x12e04fdd8 'BUG' 'int ()'
    |-CallExpr 0x12e0500d0 <line:43:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e050050 <col:2> 'int ()' Function 0x12e04ff98 'unlock_new_inode' 'int ()'
    | `-RecoveryExpr 0x12e0500a8 <col:19, col:25> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e050070 <col:19> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-IfStmt 0x12e050398 <line:45:2, line:48:2>
    | |-UnaryOperator 0x12e050200 <line:45:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e0501e8 <col:7, col:27> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12e0501a0 <col:7, col:27> '<dependent type>' contains-errors lvalue ->first_blocks
    | |     `-CallExpr 0x12e050178 <col:7, col:24> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x12e0500f8 <col:7> 'int ()' Function 0x12e901548 'HFS_I' 'int ()'
    | |       `-RecoveryExpr 0x12e050150 <col:13, col:19> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x12e050118 <col:13> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CompoundStmt 0x12e050380 <col:41, line:48:2>
    |   `-GotoStmt 0x12e050368 <line:47:3, col:8> 'free_inode' 0x12e050318
    |-BinaryOperator 0x12e050480 <line:50:2, col:25> 'struct address_space *' contains-errors '='
    | |-DeclRefExpr 0x12e0503b8 <col:2> 'struct address_space *' lvalue Var 0x12e8fb938 'mapping' 'struct address_space *'
    | `-CXXDependentScopeMemberExpr 0x12e050438 <col:12, col:25> '<dependent type>' contains-errors lvalue ->i_mapping
    |   `-RecoveryExpr 0x12e050410 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e0503d8 <col:12> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-IfStmt 0x12e050790 <line:52:2, line:53:8>
    | |-CallExpr 0x12e050738 <line:52:6, col:17> 'int'
    | | |-ImplicitCastExpr 0x12e050720 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12e0506e0 <col:6> 'int ()' Function 0x12e050628 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x12e050760 <col:13> 'struct page *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e050700 <col:13> 'struct page *' lvalue Var 0x12e8fbb38 'page' 'struct page *'
    | `-GotoStmt 0x12e050778 <line:53:3, col:8> 'free_inode' 0x12e050318
    |-BinaryOperator 0x12e050b50 <line:57:2, col:37> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e050a80 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e050a48 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e050b28 <col:15, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e050aa8 <col:15> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e050b00 <col:27, col:33> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e050ac8 <col:27> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e050c78 <line:58:2, col:49> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e050ba8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e050b70 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e050c50 <col:21, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e050bd0 <col:21> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e050c28 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e050bf0 <col:33> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e050da0 <line:59:2, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e050cd0 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e050c98 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e050d78 <col:20, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e050cf8 <col:20> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e050d50 <col:32, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e050d18 <col:32> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e050ec8 <line:60:2, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e050df8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e050dc0 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e050ea0 <col:20, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e050e20 <col:20> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e050e78 <col:32, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e050e40 <col:32> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e050ff0 <line:61:2, col:49> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e050f20 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e050ee8 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e050fc8 <col:21, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e050f48 <col:21> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e050fa0 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e050f68 <col:33> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e051118 <line:62:2, col:49> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e051048 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e051010 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e0510f0 <col:21, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e051070 <col:21> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e0510c8 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e051090 <col:33> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e051240 <line:63:2, col:49> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e051170 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e051138 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e051218 <col:21, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e051198 <col:21> 'int ()' Function 0x12e04f788 'be32_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e0511f0 <col:33, col:39> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e0511b8 <col:33> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e051448 <line:64:2, col:47> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e051298 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e051260 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e051420 <col:20, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e0513a0 <col:20> 'int ()' Function 0x12e0512e8 'be16_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e0513f8 <col:32, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e0513c0 <col:32> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e051570 <line:65:2, col:51> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e0514a0 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e051468 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e051548 <col:22, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e0514c8 <col:22> 'int ()' Function 0x12e0512e8 'be16_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e051520 <col:34, col:40> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e0514e8 <col:34> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e0526a8 <line:66:2, col:39> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e0515c8 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e051590 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-CallExpr 0x12e052680 <col:16, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e052600 <col:16> 'int ()' Function 0x12e0512e8 'be16_to_cpu' 'int ()'
    |   `-RecoveryExpr 0x12e052658 <col:28, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e052620 <col:28> 'struct hfs_btree_header_rec *' lvalue Var 0x12e8fb738 'head' 'struct hfs_btree_header_rec *'
    |-BinaryOperator 0x12e052748 <line:68:2, col:15> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12e0526c8 <col:2> 'unsigned int' lvalue Var 0x12e8fbbe8 'size' 'unsigned int'
    | `-RecoveryExpr 0x12e052720 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e0526e8 <col:9> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-IfStmt 0x12e052960 <line:69:2, line:70:8>
    | |-UnaryOperator 0x12e0528e0 <line:69:6, col:25> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12e0528a0 <col:7, col:25> 'int'
    | |   |-ImplicitCastExpr 0x12e052888 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12e052848 <col:7> 'int ()' Function 0x12e052790 'is_power_of_2' 'int ()'
    | |   `-ImplicitCastExpr 0x12e0528c8 <col:21> 'unsigned int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12e052868 <col:21> 'unsigned int' lvalue Var 0x12e8fbbe8 'size' 'unsigned int'
    | `-GotoStmt 0x12e052948 <line:70:3, col:8> 'fail_page' 0x12e0528f8
    |-IfStmt 0x12e052a28 <line:71:2, line:72:8>
    | |-UnaryOperator 0x12e0529f8 <line:71:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e0529e0 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12e0529b8 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e052980 <col:7> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-GotoStmt 0x12e052a10 <line:72:3, col:8> 'fail_page' 0x12e0528f8
    |-SwitchStmt 0x12e052a80 <line:73:2, line:90:2>
    | |-ImplicitCastExpr 0x12e052a68 <line:73:10> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x12e052a48 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e052dd0 <col:14, line:90:2>
    |   |-IfStmt 0x12e052bd8 <line:75:3, line:79:3>
    |   | |-RecoveryExpr 0x12e052b08 <line:75:7, col:28> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12e052bc0 <col:48, line:79:3>
    |   |   `-GotoStmt 0x12e052ba8 <line:78:4, col:9> 'fail_page' 0x12e0528f8
    |   |-BreakStmt 0x12e052bf8 <line:80:3>
    |   |-IfStmt 0x12e052d30 <line:82:3, line:86:3>
    |   | |-RecoveryExpr 0x12e052c60 <line:82:7, col:28> '_Bool' contains-errors
    |   | `-CompoundStmt 0x12e052d18 <col:48, line:86:3>
    |   |   `-GotoStmt 0x12e052d00 <line:85:4, col:9> 'fail_page' 0x12e0528f8
    |   |-BreakStmt 0x12e052d50 <line:87:3>
    |   `-DefaultStmt 0x12e052db0 <line:88:2, line:89:7>
    |     `-CallExpr 0x12e052d90 <col:3, col:7> 'int'
    |       `-ImplicitCastExpr 0x12e052d78 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x12e052d58 <col:3> 'int ()' Function 0x12e04fdd8 'BUG' 'int ()'
    |-BinaryOperator 0x12e053020 <line:92:2, col:38> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12e052e40 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e052e08 <col:2> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    | `-BinaryOperator 0x12e053000 <col:26, col:38> 'int' '-'
    |   |-CallExpr 0x12e052fa0 <col:26, col:34> 'int'
    |   | |-ImplicitCastExpr 0x12e052f88 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e052f48 <col:26> 'int ()' Function 0x12e052e90 'ffs' 'int ()'
    |   | `-ImplicitCastExpr 0x12e052fc8 <col:30> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e052f68 <col:30> 'unsigned int' lvalue Var 0x12e8fbbe8 'size' 'unsigned int'
    |   `-IntegerLiteral 0x12e052fe0 <col:38> 'int' 1
    |-CallExpr 0x12e053258 <line:95:2, col:13> 'int'
    | |-ImplicitCastExpr 0x12e053240 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e053200 <col:2> 'int ()' Function 0x12e053148 'kunmap' 'int ()'
    | `-ImplicitCastExpr 0x12e053280 <col:9> 'struct page *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e053220 <col:9> 'struct page *' lvalue Var 0x12e8fbb38 'page' 'struct page *'
    |-CallExpr 0x12e0533d0 <line:96:2, col:25> 'int'
    | |-ImplicitCastExpr 0x12e0533b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e053378 <col:2> 'int ()' Function 0x12e0532c0 'page_cache_release' 'int ()'
    | `-ImplicitCastExpr 0x12e0533f8 <col:21> 'struct page *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e053398 <col:21> 'struct page *' lvalue Var 0x12e8fbb38 'page' 'struct page *'
    |-ReturnStmt 0x12e053448 <line:97:2, col:9>
    | `-ImplicitCastExpr 0x12e053430 <col:9> 'struct hfs_btree *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e053410 <col:9> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    |-LabelStmt 0x12e0534f0 <line:99:1, line:100:25> 'fail_page'
    | `-CallExpr 0x12e0534b0 <col:2, col:25> 'int'
    |   |-ImplicitCastExpr 0x12e053498 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12e053458 <col:2> 'int ()' Function 0x12e0532c0 'page_cache_release' 'int ()'
    |   `-ImplicitCastExpr 0x12e0534d8 <col:21> 'struct page *' <LValueToRValue>
    |     `-DeclRefExpr 0x12e053478 <col:21> 'struct page *' lvalue Var 0x12e8fbb38 'page' 'struct page *'
    |-LabelStmt 0x12e053608 <line:101:1, col:11> 'free_inode'
    | `-NullStmt 0x12e053600 <col:11>
    |-CallExpr 0x12e053788 <line:103:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e053708 <col:2> 'int ()' Function 0x12e053650 'iput' 'int ()'
    | `-RecoveryExpr 0x12e053760 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e053728 <col:7> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
    `-LabelStmt 0x12e053928 <line:104:1, line:105:12> 'free_tree'
      `-CallExpr 0x12e0538e8 <col:2, col:12> 'int'
        |-ImplicitCastExpr 0x12e0538d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12e053890 <col:2> 'int ()' Function 0x12e0537d8 'kfree' 'int ()'
        `-ImplicitCastExpr 0x12e053910 <col:8> 'struct hfs_btree *' <LValueToRValue>
          `-DeclRefExpr 0x12e0538b0 <col:8> 'struct hfs_btree *' lvalue Var 0x12e8fb548 'tree' 'struct hfs_btree *'
