`-FunctionDecl 0x10300dfa8  line:1:1 invalid pdf14_dev_spec_op 'int (int *, int, void *, int)'
  |-ParmVarDecl 0x10300dd28 <col:19, col:30> col:30 referenced invalid pdev 'int *'
  |-ParmVarDecl 0x10300dda8 <col:36, col:40> col:40 used dev_spec_op 'int'
  |-ParmVarDecl 0x10300de28 <line:2:19, col:25> col:25 used data 'void *'
  |-ParmVarDecl 0x10300dea8 <col:31, col:35> col:35 used size 'int'
  `-CompoundStmt 0x103028040 <line:3:1, line:37:1>
    |-IfStmt 0x10300e188 <line:6:5, line:7:16>
    | |-BinaryOperator 0x10300e138 <line:6:9, col:24> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x10300e0c0 <col:9> 'int' lvalue ParmVar 0x10300dda8 'dev_spec_op' 'int'
    | | `-RecoveryExpr 0x10300e118 <col:24> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x10300e178 <line:7:9, col:16>
    |   `-IntegerLiteral 0x10300e158 <col:16> 'int' 1
    |-IfStmt 0x10300e350 <line:8:5, line:12:5>
    | |-BinaryOperator 0x10300e220 <line:8:9, col:24> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x10300e1a8 <col:9> 'int' lvalue ParmVar 0x10300dda8 'dev_spec_op' 'int'
    | | `-RecoveryExpr 0x10300e200 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x10300e338 <col:47, line:12:5>
    |   `-ReturnStmt 0x10300e328 <line:11:9, col:16>
    |     `-IntegerLiteral 0x10300e308 <col:16> 'int' 1
    |-IfStmt 0x103027948 <line:13:5, line:20:5>
    | |-BinaryOperator 0x103027800 <line:13:9, col:24> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x10300e370 <col:9> 'int' lvalue ParmVar 0x10300dda8 'dev_spec_op' 'int'
    | | `-RecoveryExpr 0x10300e3c8 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x103027930 <col:44, line:20:5>
    |   `-IfStmt 0x103027910 <line:16:9, line:19:9>
    |     |-RecoveryExpr 0x1030278a8 <line:16:13, col:26> '_Bool' contains-errors
    |     `-CompoundStmt 0x1030278f8 <col:32, line:19:9>
    |       `-ReturnStmt 0x1030278e8 <line:18:13, col:20>
    |         `-IntegerLiteral 0x1030278c8 <col:20> 'int' 1
    |-IfStmt 0x103027d20 <line:21:5, line:30:5>
    | |-RecoveryExpr 0x103027988 <line:21:9, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x103027d00 <col:45, line:30:5>
    |   |-DeclStmt 0x103027a28 <line:23:9, col:17>
    |   | `-VarDecl 0x1030279c0 <col:9, col:13> col:13 used code 'int'
    |   `-IfStmt 0x103027cd0 <line:25:9, line:29:9> has_else
    |     |-BinaryOperator 0x103027c58 <line:25:13, col:21> 'int' '=='
    |     | |-ImplicitCastExpr 0x103027c40 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x103027c00 <col:13> 'int' lvalue Var 0x1030279c0 'code' 'int'
    |     | `-IntegerLiteral 0x103027c20 <col:21> 'int' 0
    |     |-CompoundStmt 0x103027c78 <col:24, line:27:9>
    |     `-CompoundStmt 0x103027cb8 <col:16, line:29:9>
    |       `-ReturnStmt 0x103027ca8 <line:28:13, col:20>
    |         `-IntegerLiteral 0x103027c88 <col:20> 'int' 0
    |-IfStmt 0x103027e50 <line:31:5, line:33:5>
    | |-RecoveryExpr 0x103027d80 <line:31:9, col:62> '_Bool' contains-errors
    | `-CompoundStmt 0x103027e40 <col:83, line:33:5>
    `-ReturnStmt 0x103028030 <line:35:5, col:64>
      `-CallExpr 0x103027ff0 <col:12, col:64> '<dependent type>' contains-errors
        |-DeclRefExpr 0x103027f50 <col:12> 'int ()' Function 0x103027e98 'gx_default_dev_spec_op' 'int ()'
        |-RecoveryExpr 0x103027f70 <col:35> '<dependent type>' contains-errors lvalue
        |-DeclRefExpr 0x103027f90 <col:41> 'int' lvalue ParmVar 0x10300dda8 'dev_spec_op' 'int'
        |-DeclRefExpr 0x103027fb0 <col:54> 'void *' lvalue ParmVar 0x10300de28 'data' 'void *'
        `-DeclRefExpr 0x103027fd0 <col:60> 'int' lvalue ParmVar 0x10300dea8 'size' 'int'
