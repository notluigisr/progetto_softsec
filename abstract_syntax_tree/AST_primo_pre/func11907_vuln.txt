`-FunctionDecl 0x14692bd58  line:1:1 pipe_iov_copy_from_user 'int (void *, struct iovec *, unsigned long, int)'
  |-ParmVarDecl 0x1469132d8 <col:25, col:31> col:31 used to 'void *'
  |-ParmVarDecl 0x1469138c8 <col:35, col:49> col:49 used iov 'struct iovec *'
  |-ParmVarDecl 0x146913948 <col:54, col:68> col:68 used len 'unsigned long'
  |-ParmVarDecl 0x14692bc00 <line:2:4, col:8> col:8 used atomic 'int'
  `-CompoundStmt 0x14692cb68 <line:3:1, line:24:1>
    |-DeclStmt 0x14692bee8 <line:4:2, col:20>
    | `-VarDecl 0x14692be80 <col:2, col:16> col:16 used copy 'unsigned long'
    |-WhileStmt 0x14692cb18 <line:6:2, line:22:2>
    | |-BinaryOperator 0x14692bf70 <line:6:9, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x14692bf40 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14692bf00 <col:9> 'unsigned long' lvalue ParmVar 0x146913948 'len' 'unsigned long'
    | | `-ImplicitCastExpr 0x14692bf58 <col:15> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x14692bf20 <col:15> 'int' 0
    | `-CompoundStmt 0x14692cad8 <col:18, line:22:2>
    |   |-WhileStmt 0x14692c080 <line:7:3, line:8:7>
    |   | |-UnaryOperator 0x14692c008 <line:7:10, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14692bff0 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x14692bfc8 <col:11, col:16> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14692bf90 <col:11> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |   | `-ImplicitCastExpr 0x14692c068 <line:8:4, col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x14692c040 <col:4, col:7> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14692c020 <col:4> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |   |-IfStmt 0x14692c838 <line:11:3, line:17:3> has_else
    |   | |-ImplicitCastExpr 0x14692c2b0 <line:11:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14692c290 <col:7> 'int' lvalue ParmVar 0x14692bc00 'atomic' 'int'
    |   | |-CompoundStmt 0x14692c568 <col:15, line:14:3>
    |   | | `-IfStmt 0x14692c548 <line:12:4, line:13:13>
    |   | |   |-CallExpr 0x14692c468 <line:12:8, col:57> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x14692c3a8 <col:8> 'int ()' Function 0x14692c2f0 '__copy_from_user_inatomic' 'int ()'
    |   | |   | |-DeclRefExpr 0x14692c3c8 <col:34> 'void *' lvalue ParmVar 0x1469132d8 'to' 'void *'
    |   | |   | |-RecoveryExpr 0x14692c420 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |   | |   | | `-DeclRefExpr 0x14692c3e8 <col:38> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |   | |   | `-DeclRefExpr 0x14692c448 <col:53> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    |   | |   `-ReturnStmt 0x14692c538 <line:13:5, col:13>
    |   | |     `-UnaryOperator 0x14692c520 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |       `-ImplicitCastExpr 0x14692c508 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | |         `-RecoveryExpr 0x14692c4e8 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14692c820 <line:14:10, line:17:3>
    |   |   `-IfStmt 0x14692c800 <line:15:4, line:16:13>
    |   |     |-CallExpr 0x14692c720 <line:15:8, col:46> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x14692c660 <col:8> 'int ()' Function 0x14692c5a8 'copy_from_user' 'int ()'
    |   |     | |-DeclRefExpr 0x14692c680 <col:23> 'void *' lvalue ParmVar 0x1469132d8 'to' 'void *'
    |   |     | |-RecoveryExpr 0x14692c6d8 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |   |     | | `-DeclRefExpr 0x14692c6a0 <col:27> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |   |     | `-DeclRefExpr 0x14692c700 <col:42> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    |   |     `-ReturnStmt 0x14692c7f0 <line:16:5, col:13>
    |   |       `-UnaryOperator 0x14692c7d8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |         `-ImplicitCastExpr 0x14692c7c0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |           `-RecoveryExpr 0x14692c7a0 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x14692c8c0 <line:18:3, col:9> 'void *' '+=' ComputeLHSTy='void *' ComputeResultTy='void *'
    |   | |-DeclRefExpr 0x14692c868 <col:3> 'void *' lvalue ParmVar 0x1469132d8 'to' 'void *'
    |   | `-ImplicitCastExpr 0x14692c8a8 <col:9> 'unsigned long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14692c888 <col:9> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    |   |-CompoundAssignOperator 0x14692c948 <line:19:3, col:10> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x14692c8f0 <col:3> 'unsigned long' lvalue ParmVar 0x146913948 'len' 'unsigned long'
    |   | `-ImplicitCastExpr 0x14692c930 <col:10> 'unsigned long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14692c910 <col:10> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    |   |-CompoundAssignOperator 0x14692c9f8 <line:20:3, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-RecoveryExpr 0x14692c9b0 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x14692c978 <col:3> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |   | `-DeclRefExpr 0x14692c9d8 <col:20> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    |   `-CompoundAssignOperator 0x14692caa8 <line:21:3, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x14692ca60 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14692ca28 <col:3> 'struct iovec *' lvalue ParmVar 0x1469138c8 'iov' 'struct iovec *'
    |     `-DeclRefExpr 0x14692ca88 <col:19> 'unsigned long' lvalue Var 0x14692be80 'copy' 'unsigned long'
    `-ReturnStmt 0x14692cb58 <line:23:2, col:9>
      `-IntegerLiteral 0x14692cb38 <col:9> 'int' 0
