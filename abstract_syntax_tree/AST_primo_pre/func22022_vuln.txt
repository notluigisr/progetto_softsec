`-FunctionDecl 0x14a928288  line:1:1 invalid clear_evalarg 'int (int *, int *)'
  |-ParmVarDecl 0x14a928128 <col:15, col:26> col:26 referenced invalid evalarg 'int *'
  |-ParmVarDecl 0x14a9281a8 <col:35, col:44> col:44 referenced invalid eap 'int *'
  `-CompoundStmt 0x14a941fa8 <line:2:1, line:24:1>
    `-IfStmt 0x14a941f88 <line:3:5, line:23:5>
      |-BinaryOperator 0x14a9283b8 <line:3:9, col:20> 'int' contains-errors '!='
      | |-RecoveryExpr 0x14a928340 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x14a928398 <col:20> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x14a941f60 <line:4:5, line:23:5>
        |-IfStmt 0x14a941c08 <line:5:2, line:19:2>
        | |-BinaryOperator 0x14a928498 <line:5:6, col:30> 'int' contains-errors '!='
        | | |-CXXDependentScopeMemberExpr 0x14a9283f8 <col:6, col:15> '<dependent type>' contains-errors lvalue ->eval_tofree
        | | | `-RecoveryExpr 0x14a9283d8 <col:6> '<dependent type>' contains-errors lvalue
        | | `-RecoveryExpr 0x14a928478 <col:30> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x14a941be8 <line:6:2, line:19:2>
        |   |-IfStmt 0x14a941ab0 <line:7:6, line:17:32> has_else
        |   | |-BinaryOperator 0x14a928530 <line:7:10, col:17> 'int' contains-errors '!='
        |   | | |-RecoveryExpr 0x14a9284b8 <col:10> '<dependent type>' contains-errors lvalue
        |   | | `-RecoveryExpr 0x14a928510 <col:17> '<dependent type>' contains-errors lvalue
        |   | |-CompoundStmt 0x14a9419d8 <line:8:6, line:15:6>
        |   | | |-CallExpr 0x14a928738 <line:12:3, col:31> '<dependent type>' contains-errors
        |   | | | |-DeclRefExpr 0x14a9286b0 <col:3> 'int ()' Function 0x14a9285f8 'vim_free' 'int ()'
        |   | | | `-CXXDependentScopeMemberExpr 0x14a9286f0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->cmdline_tofree
        |   | | |   `-RecoveryExpr 0x14a9286d0 <col:12> '<dependent type>' contains-errors lvalue
        |   | | |-BinaryOperator 0x14a941898 <line:13:3, col:31> '<dependent type>' contains-errors '='
        |   | | | |-CXXDependentScopeMemberExpr 0x14a9287a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->cmdline_tofree
        |   | | | | `-RecoveryExpr 0x14a928780 <col:3> '<dependent type>' contains-errors lvalue
        |   | | | |   `-DeclRefExpr 0x14a928760 <col:3> 'int *' lvalue ParmVar 0x14a9281a8 'eap' 'int *'
        |   | | | `-UnaryOperator 0x14a941880 <col:25, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | | |   `-ImplicitCastExpr 0x14a941868 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>
        |   | | |     `-CXXDependentScopeMemberExpr 0x14a941820 <col:26, col:31> '<dependent type>' contains-errors lvalue ->cmdlinep
        |   | | |       `-RecoveryExpr 0x14a941800 <col:26> '<dependent type>' contains-errors lvalue
        |   | | `-BinaryOperator 0x14a9419b8 <line:14:3, col:29> '<dependent type>' contains-errors '='
        |   | |   |-UnaryOperator 0x14a941938 <col:3, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   | |   | `-ImplicitCastExpr 0x14a941920 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>
        |   | |   |   `-CXXDependentScopeMemberExpr 0x14a9418d8 <col:4, col:9> '<dependent type>' contains-errors lvalue ->cmdlinep
        |   | |   |     `-RecoveryExpr 0x14a9418b8 <col:4> '<dependent type>' contains-errors lvalue
        |   | |   `-CXXDependentScopeMemberExpr 0x14a941970 <col:20, col:29> '<dependent type>' contains-errors lvalue ->eval_tofree
        |   | |     `-RecoveryExpr 0x14a941950 <col:20> '<dependent type>' contains-errors lvalue
        |   | `-CallExpr 0x14a941a88 <line:17:3, col:32> '<dependent type>' contains-errors
        |   |   |-DeclRefExpr 0x14a941a00 <col:3> 'int ()' Function 0x14a9285f8 'vim_free' 'int ()'
        |   |   `-CXXDependentScopeMemberExpr 0x14a941a40 <col:12, col:21> '<dependent type>' contains-errors lvalue ->eval_tofree
        |   |     `-RecoveryExpr 0x14a941a20 <col:12> '<dependent type>' contains-errors lvalue
        |   `-BinaryOperator 0x14a941bc8 <line:18:6, col:29> '<dependent type>' contains-errors '='
        |     |-CXXDependentScopeMemberExpr 0x14a941b28 <col:6, col:15> '<dependent type>' contains-errors lvalue ->eval_tofree
        |     | `-RecoveryExpr 0x14a941b00 <col:6> '<dependent type>' contains-errors lvalue
        |     |   `-DeclRefExpr 0x14a941ae0 <col:6> 'int *' lvalue ParmVar 0x14a928128 'evalarg' 'int *'
        |     `-RecoveryExpr 0x14a941ba8 <col:29> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x14a941da8 <line:21:2, col:43> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14a941d08 <col:2> 'int ()' Function 0x14a941c50 'ga_clear_strings' 'int ()'
        | `-UnaryOperator 0x14a941d90 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-CXXDependentScopeMemberExpr 0x14a941d48 <col:20, col:29> '<dependent type>' contains-errors lvalue ->eval_tofree_ga
        |     `-RecoveryExpr 0x14a941d28 <col:20> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x14a941f38 <line:22:2, col:39> '<dependent type>' contains-errors
          |-DeclRefExpr 0x14a941eb0 <col:2> 'int ()' Function 0x14a941df8 'VIM_CLEAR' 'int ()'
          `-CXXDependentScopeMemberExpr 0x14a941ef0 <col:12, col:21> '<dependent type>' contains-errors lvalue ->eval_tofree_lambda
            `-RecoveryExpr 0x14a941ed0 <col:12> '<dependent type>' contains-errors lvalue
