`-FunctionDecl 0x14000df10  line:1:13 invalid tiny_dispatch 'void (const int *, int *, int)' static
  |-ParmVarDecl 0x14000dcf0 <col:27, col:48> col:48 invalid entry 'const int *'
  |-ParmVarDecl 0x14000dda8 <col:55, col:64> col:64 invalid msg 'int *'
  |-ParmVarDecl 0x14000de28 <col:69, col:78> col:78 referenced invalid msg_size 'int'
  `-CompoundStmt 0x140027598 <line:2:1, line:10:1>
    `-IfStmt 0x140027510 <line:3:5, line:7:5>
      |-UnaryOperator 0x14000e2a0 <line:3:9, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x14000e260 <col:10, col:49> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x14000e130 <col:10> 'int ()' Function 0x14000e078 'pb_parse' 'int ()'
      |   |-RecoveryExpr 0x14000e150 <col:19> '<dependent type>' contains-errors lvalue
      |   |-RecoveryExpr 0x14000e170 <col:26> '<dependent type>' contains-errors lvalue
      |   |-RecoveryExpr 0x14000e190 <col:31> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x14000e240 <col:41> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1400274f0 <col:52, line:7:5>
        |-CallExpr 0x1400274b0 <line:4:9, line:5:39> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x14000e398 <line:4:9> 'int ()' Function 0x14000e2e0 'call_msg_failure_handler' 'int ()'
        | |-RecoveryExpr 0x140027490 <col:34> '<dependent type>' contains-errors lvalue
        | `-StringLiteral 0x140027440 <line:5:34> 'char[4]' lvalue "STR"
        `-ReturnStmt 0x1400274e0 <line:6:9>
