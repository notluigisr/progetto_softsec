`-FunctionDecl 0x1259418d8  line:1:12 invalid replmd_delete_link_value 'int (struct ldb_module *, struct replmd_private *, int *, struct ldb_dn *, const struct dsdb_schema *, const struct dsdb_attribute *, int, int, struct GUID *, struct dsdb_dn *, struct ldb_val *)' static
  |-ParmVarDecl 0x125928648 <col:37, col:56> col:56 used module 'struct ldb_module *'
  |-ParmVarDecl 0x125940a28 <line:2:9, col:32> col:32 used replmd_private 'struct replmd_private *'
  |-ParmVarDecl 0x125940af8 <line:3:9, col:21> col:21 invalid mem_ctx 'int *'
  |-ParmVarDecl 0x125940cc8 <line:4:9, col:24> col:24 used src_obj_dn 'struct ldb_dn *'
  |-ParmVarDecl 0x125940e98 <line:5:9, col:35> col:35 used schema 'const struct dsdb_schema *'
  |-ParmVarDecl 0x125941068 <line:6:9, col:38> col:38 used attr 'const struct dsdb_attribute *'
  |-ParmVarDecl 0x1259410e8 <line:7:9, col:18> col:18 invalid seq_num 'int'
  |-ParmVarDecl 0x125941168 <line:8:9, col:14> col:14 invalid is_active 'int'
  |-ParmVarDecl 0x125941338 <line:9:9, col:22> col:22 used target_guid 'struct GUID *'
  |-ParmVarDecl 0x125941508 <line:10:9, col:25> col:25 used target_dsdb_dn 'struct dsdb_dn *'
  |-ParmVarDecl 0x1259416d8 <line:11:9, col:25> col:25 used output_val 'struct ldb_val *'
  `-CompoundStmt 0x125947200 <line:12:1, line:44:1>
    |-DeclStmt 0x126008c28 <line:13:2, col:54>
    | |-RecordDecl 0x126008800 <col:2, col:9> col:9 struct ldb_context
    | `-VarDecl 0x126008968 <col:2, col:53> col:22 used ldb 'struct ldb_context *' cinit
    |   `-ImplicitCastExpr 0x126008bf8 <col:28, col:53> 'struct ldb_context *' <IntegralToPointer>
    |     `-CallExpr 0x126008bb8 <col:28, col:53> 'int'
    |       |-ImplicitCastExpr 0x126008ba0 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x126008b30 <col:28> 'int ()' Function 0x126008a78 'ldb_module_get_ctx' 'int ()'
    |       `-ImplicitCastExpr 0x126008be0 <col:47> 'struct ldb_module *' <LValueToRValue>
    |         `-DeclRefExpr 0x126008b50 <col:47> 'struct ldb_module *' lvalue ParmVar 0x125928648 'module' 'struct ldb_module *'
    |-DeclStmt 0x126008d98 <line:16:2, col:41>
    | `-VarDecl 0x126008cf8 <col:2, col:37> col:21 used invocation_id 'const struct GUID *' cinit
    |   `-RecoveryExpr 0x126008d78 <col:37> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x126008e30 <line:17:2, col:9>
    | `-VarDecl 0x126008dc8 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x126009158 <line:20:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126009068 <col:2> 'int ()' Function 0x126008fb0 'unix_to_nt_time' 'int ()'
    | |-UnaryOperator 0x126009120 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x126009100 <col:19> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x126009138 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x126009338 <line:22:2, col:46> 'const struct GUID *' contains-errors '='
    | |-DeclRefExpr 0x126009188 <col:2> 'const struct GUID *' contains-errors lvalue Var 0x126008cf8 'invocation_id' 'const struct GUID *'
    | `-ImplicitCastExpr 0x126009320 <col:18, col:46> 'const struct GUID *' <IntegralToPointer>
    |   `-CallExpr 0x1260092e0 <col:18, col:46> 'int'
    |     |-ImplicitCastExpr 0x1260092c8 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x126009288 <col:18> 'int ()' Function 0x1260091d0 'samdb_ntds_invocation_id' 'int ()'
    |     `-ImplicitCastExpr 0x126009308 <col:43> 'struct ldb_context *' <LValueToRValue>
    |       `-DeclRefExpr 0x1260092a8 <col:43> 'struct ldb_context *' lvalue Var 0x126008968 'ldb' 'struct ldb_context *'
    |-IfStmt 0x126009450 <line:23:2, line:25:2>
    | |-BinaryOperator 0x1260093d0 <line:23:6, col:23> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x126009358 <col:6> 'const struct GUID *' contains-errors lvalue Var 0x126008cf8 'invocation_id' 'const struct GUID *'
    | | `-RecoveryExpr 0x1260093b0 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126009438 <col:29, line:25:2>
    |   `-ReturnStmt 0x126009428 <line:24:3, col:10>
    |     `-RecoveryExpr 0x126009408 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126009760 <line:28:2, line:37:2>
    | |-RecoveryExpr 0x126009470 <line:28:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126009748 <col:17, line:37:2>
    |   `-IfStmt 0x126009728 <line:34:3, line:36:3>
    |     |-RecoveryExpr 0x1260096a8 <line:34:7, col:14> '_Bool' contains-errors
    |     `-CompoundStmt 0x126009710 <col:27, line:36:3>
    |       `-ReturnStmt 0x126009700 <line:35:4, col:11>
    |         `-ImplicitCastExpr 0x1260096e8 <col:11> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x1260096c8 <col:11> 'int' lvalue Var 0x126008dc8 'ret' 'int'
    `-ReturnStmt 0x1259471f0 <line:43:2, col:9>
      `-ImplicitCastExpr 0x1259471d8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1259471b8 <col:9> 'int' lvalue Var 0x126008dc8 'ret' 'int'
