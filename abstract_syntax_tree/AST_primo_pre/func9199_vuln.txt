`-FunctionDecl 0x136094c88  line:1:13 invalid ParseSampler 'int (int *, int)' static
  |-ParmVarDecl 0x136094b28 <col:26, col:35> col:35 referenced invalid sampler 'int *'
  |-ParmVarDecl 0x136094ba8 <col:44, <invalid sloc>> col:47 invalid 'int'
  `-CompoundStmt 0x1360adfa8 <line:2:78, line:44:1>
    |-CallExpr 0x136095090 <line:3:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136094ea0 <col:3> 'int ()' Function 0x136094de8 'ParseStringProperty' 'int ()'
    | |-UnaryOperator 0x136094f28 <col:23, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x136094ee0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->name
    | |   `-RecoveryExpr 0x136094ec0 <col:24> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136095030 <col:39> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136095050 <col:44> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136094fb0 <col:47> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136095070 <col:54> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x136095190 <line:5:3, col:21>
    | `-VarDecl 0x1360950f0 <col:3, col:20> col:7 used minFilter 'int' cinit
    |   `-UnaryOperator 0x136095178 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x136095158 <col:20> 'int' 1
    |-DeclStmt 0x1368202a0 <line:6:3, col:21>
    | `-VarDecl 0x136820200 <col:3, col:20> col:7 used magFilter 'int' cinit
    |   `-UnaryOperator 0x136820288 <col:19, col:20> 'int' prefix '-'
    |     `-IntegerLiteral 0x136820268 <col:20> 'int' 1
    |-DeclStmt 0x136820370 <line:7:3, col:43>
    | `-VarDecl 0x1368202d0 <col:3, col:15> col:7 used wrapS 'int' cinit
    |   `-RecoveryExpr 0x136820350 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x136820440 <line:8:3, col:43>
    | `-VarDecl 0x1368203a0 <col:3, col:15> col:7 used wrapT 'int' cinit
    |   `-RecoveryExpr 0x136820420 <col:15> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1368206a0 <line:10:3, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136820538 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x136820578 <col:24, col:25> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x136820558 <col:25> 'int' lvalue Var 0x1360950f0 'minFilter' 'int'
    | |-RecoveryExpr 0x136820640 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136820660 <col:41> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x1368205c0 <col:44> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136820680 <col:51> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x136820850 <line:11:3, col:56> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1368206e8 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x136820728 <col:24, col:25> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x136820708 <col:25> 'int' lvalue Var 0x136820200 'magFilter' 'int'
    | |-RecoveryExpr 0x1368207f0 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x136820810 <col:41> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136820770 <col:44> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x136820830 <col:51> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x136820a00 <line:12:3, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136820898 <col:3> 'int ()' Function 0x136820480 'ParseIntegerProperty' 'int ()'
    | |-UnaryOperator 0x1368208d8 <col:24, col:25> 'int *' contains-errors prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1368208b8 <col:25> 'int' contains-errors lvalue Var 0x1368202d0 'wrapS' 'int'
    | |-RecoveryExpr 0x1368209a0 <col:32> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x1368209c0 <col:37> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x136820920 <col:40> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x1368209e0 <col:47> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136820b70 <line:19:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820b08 <col:3, col:12> '<dependent type>' contains-errors lvalue ->minFilter
    | | `-RecoveryExpr 0x136820ae0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820ac0 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820b50 <col:24> 'int' lvalue Var 0x1360950f0 'minFilter' 'int'
    |-BinaryOperator 0x136820c40 <line:20:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820bd8 <col:3, col:12> '<dependent type>' contains-errors lvalue ->magFilter
    | | `-RecoveryExpr 0x136820bb0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820b90 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820c20 <col:24> 'int' lvalue Var 0x136820200 'magFilter' 'int'
    |-BinaryOperator 0x136820d10 <line:21:3, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820ca8 <col:3, col:12> '<dependent type>' contains-errors lvalue ->wrapS
    | | `-RecoveryExpr 0x136820c80 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820c60 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820cf0 <col:20> 'int' contains-errors lvalue Var 0x1368202d0 'wrapS' 'int'
    |-BinaryOperator 0x136820de0 <line:22:3, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136820d78 <col:3, col:12> '<dependent type>' contains-errors lvalue ->wrapT
    | | `-RecoveryExpr 0x136820d50 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136820d30 <col:3> 'int *' lvalue ParmVar 0x136094b28 'sampler' 'int *'
    | `-DeclRefExpr 0x136820dc0 <col:20> 'int' contains-errors lvalue Var 0x1368203a0 'wrapT' 'int'
    `-IfStmt 0x1360adf88 <line:28:3, line:41:3>
      |-RecoveryExpr 0x136821140 <line:28:7> '_Bool' contains-errors
      `-CompoundStmt 0x1360adf68 <col:54, line:41:3>
        |-CompoundStmt 0x1360addd8 <line:29:5, line:34:5>
        | `-IfStmt 0x1360addb8 <line:31:7, line:33:7>
        |   |-RecoveryExpr 0x1360adaf8 <line:31:11, col:34> '_Bool' contains-errors
        |   `-CompoundStmt 0x1360adda8 <col:37, line:33:7>
        `-CompoundStmt 0x1360adf50 <line:35:5, line:40:5>
          `-IfStmt 0x1360adf30 <line:37:7, line:39:7>
            |-RecoveryExpr 0x1360ade30 <line:37:11, col:34> '_Bool' contains-errors
            `-CompoundStmt 0x1360adf20 <col:37, line:39:7>
