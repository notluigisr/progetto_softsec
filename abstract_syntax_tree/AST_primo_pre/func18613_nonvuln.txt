`-FunctionDecl 0x12d00de88  line:1:12 invalid phar_test_compression 'int (int *, void *)' static
  |-ParmVarDecl 0x12d00dd28 <col:34, col:40> col:40 invalid zv 'int *'
  |-ParmVarDecl 0x12d00dda8 <col:44, col:50> col:50 used argument 'void *'
  `-CompoundStmt 0x12d028320 <line:2:1, line:22:1>
    |-IfStmt 0x12d00e098 <line:5:2, line:7:2>
    | |-CXXDependentScopeMemberExpr 0x12d00dff0 <line:5:6, col:13> '<dependent type>' contains-errors lvalue ->is_deleted
    | | `-RecoveryExpr 0x12d00dfd0 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d00e080 <col:25, line:7:2>
    |   `-ReturnStmt 0x12d00e070 <line:6:3, col:10>
    |     `-RecoveryExpr 0x12d00e050 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d027f60 <line:9:2, line:13:2>
    | |-UnaryOperator 0x12d00e2d0 <line:9:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12d00e2a8 <col:7, col:21> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12d00e210 <col:7> 'int ()' Function 0x12d00e158 'PHAR_G' 'int ()'
    | |   `-RecoveryExpr 0x12d00e288 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d027f48 <col:24, line:13:2>
    |   `-IfStmt 0x12d027f28 <line:10:3, line:12:3>
    |     |-BinaryOperator 0x12d027e20 <line:10:7, col:22> '<dependent type>' contains-errors '&'
    |     | |-CXXDependentScopeMemberExpr 0x12d00e3a0 <col:7, col:14> '<dependent type>' contains-errors lvalue ->flags
    |     | | `-RecoveryExpr 0x12d00e380 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12d027e00 <col:22> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12d027f10 <col:47, line:12:3>
    |       `-BinaryOperator 0x12d027ef0 <line:11:4, col:24> 'int' '='
    |         |-UnaryOperator 0x12d027eb8 <col:4, col:13> 'int' lvalue prefix '*' cannot overflow
    |         | `-CStyleCastExpr 0x12d027e90 <col:5, col:13> 'int *' <BitCast>
    |         |   `-ImplicitCastExpr 0x12d027e78 <col:13> 'void *' <LValueToRValue> part_of_explicit_cast
    |         |     `-DeclRefExpr 0x12d027e40 <col:13> 'void *' lvalue ParmVar 0x12d00dda8 'argument' 'void *'
    |         `-IntegerLiteral 0x12d027ed0 <col:24> 'int' 0
    |-IfStmt 0x12d0282b8 <line:15:2, line:19:2>
    | |-UnaryOperator 0x12d028040 <line:15:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12d028018 <col:7, col:22> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12d027f80 <col:7> 'int ()' Function 0x12d00e158 'PHAR_G' 'int ()'
    | |   `-RecoveryExpr 0x12d027ff8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d0282a0 <col:25, line:19:2>
    |   `-IfStmt 0x12d028280 <line:16:3, line:18:3>
    |     |-BinaryOperator 0x12d028178 <line:16:7, col:22> '<dependent type>' contains-errors '&'
    |     | |-CXXDependentScopeMemberExpr 0x12d028110 <col:7, col:14> '<dependent type>' contains-errors lvalue ->flags
    |     | | `-RecoveryExpr 0x12d0280f0 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12d028158 <col:22> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x12d028268 <col:46, line:18:3>
    |       `-BinaryOperator 0x12d028248 <line:17:4, col:24> 'int' '='
    |         |-UnaryOperator 0x12d028210 <col:4, col:13> 'int' lvalue prefix '*' cannot overflow
    |         | `-CStyleCastExpr 0x12d0281e8 <col:5, col:13> 'int *' <BitCast>
    |         |   `-ImplicitCastExpr 0x12d0281d0 <col:13> 'void *' <LValueToRValue> part_of_explicit_cast
    |         |     `-DeclRefExpr 0x12d028198 <col:13> 'void *' lvalue ParmVar 0x12d00dda8 'argument' 'void *'
    |         `-IntegerLiteral 0x12d028228 <col:24> 'int' 0
    `-ReturnStmt 0x12d028310 <line:21:2, col:9>
      `-RecoveryExpr 0x12d0282f0 <col:9> '<dependent type>' contains-errors lvalue
