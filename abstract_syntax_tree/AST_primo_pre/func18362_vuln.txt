`-FunctionDecl 0x12e027578  line:1:11 invalid decode 'int (struct state *, struct huffman *)'
  |-ParmVarDecl 0x12e00e268 <col:18, col:32> col:32 used s 'struct state *'
  |-ParmVarDecl 0x12e027458 <col:35, col:51> col:51 used h 'struct huffman *'
  `-CompoundStmt 0x12e029280 <line:2:1, line:21:1>
    |-DeclStmt 0x12e0276b0 <line:3:5, col:12>
    | `-VarDecl 0x12e027648 <col:5, col:9> col:9 used len 'int'
    |-DeclStmt 0x12e027748 <line:4:5, col:13>
    | `-VarDecl 0x12e0276e0 <col:5, col:9> col:9 used code 'int'
    |-DeclStmt 0x12e0277e0 <line:5:5, col:14>
    | `-VarDecl 0x12e027778 <col:5, col:9> col:9 used first 'int'
    |-DeclStmt 0x12e027878 <line:6:5, col:14>
    | `-VarDecl 0x12e027810 <col:5, col:9> col:9 used count 'int'
    |-DeclStmt 0x12e027910 <line:7:5, col:14>
    | `-VarDecl 0x12e0278a8 <col:5, col:9> col:9 used index 'int'
    |-BinaryOperator 0x12e0279e8 <line:9:5, col:28> 'int' '='
    | |-DeclRefExpr 0x12e027928 <col:5> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    | `-BinaryOperator 0x12e0279c8 <col:12, col:28> 'int' '='
    |   |-DeclRefExpr 0x12e027948 <col:12> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   `-BinaryOperator 0x12e0279a8 <col:20, col:28> 'int' '='
    |     |-DeclRefExpr 0x12e027968 <col:20> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |     `-IntegerLiteral 0x12e027988 <col:28> 'int' 0
    |-ForStmt 0x12e029200 <line:10:5, line:19:5>
    | |-BinaryOperator 0x12e027a48 <line:10:10, col:16> 'int' '='
    | | |-DeclRefExpr 0x12e027a08 <col:10> 'int' lvalue Var 0x12e027648 'len' 'int'
    | | `-IntegerLiteral 0x12e027a28 <col:16> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e027ae0 <col:19, col:26> 'int' contains-errors '<='
    | | |-DeclRefExpr 0x12e027a68 <col:19> 'int' lvalue Var 0x12e027648 'len' 'int'
    | | `-RecoveryExpr 0x12e027ac0 <col:26> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x12e027b20 <col:35, col:38> 'int' postfix '++'
    | | `-DeclRefExpr 0x12e027b00 <col:35> 'int' lvalue Var 0x12e027648 'len' 'int'
    | `-CompoundStmt 0x12e0283b8 <col:42, line:19:5>
    |   |-CompoundAssignOperator 0x12e027da0 <line:11:9, col:26> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e027b38 <col:9> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   | `-CallExpr 0x12e027d58 <col:17, col:26> 'int'
    |   |   |-ImplicitCastExpr 0x12e027d40 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12e027cb0 <col:17> 'int ()' Function 0x12e027bf8 'bits' 'int ()'
    |   |   |-ImplicitCastExpr 0x12e027d88 <col:22> 'struct state *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12e027cd0 <col:22> 'struct state *' lvalue ParmVar 0x12e00e268 's' 'struct state *'
    |   |   `-IntegerLiteral 0x12e027cf0 <col:25> 'int' 1
    |   |-BinaryOperator 0x12e027ec0 <line:12:9, col:29> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e027dd0 <col:9> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   | `-ArraySubscriptExpr 0x12e027ea0 <col:17, col:29> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12e027e70 <col:17, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12e027e28 <col:17, col:20> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x12e027df0 <col:17> 'struct huffman *' lvalue ParmVar 0x12e027458 'h' 'struct huffman *'
    |   |   `-ImplicitCastExpr 0x12e027e88 <col:26> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12e027e50 <col:26> 'int' lvalue Var 0x12e027648 'len' 'int'
    |   |-IfStmt 0x12e028178 <line:13:9, line:14:52>
    |   | |-BinaryOperator 0x12e027fa8 <line:13:13, col:28> 'int' '<'
    |   | | |-ImplicitCastExpr 0x12e027f90 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12e027ee0 <col:13> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   | | `-BinaryOperator 0x12e027f70 <col:20, col:28> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x12e027f40 <col:20> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x12e027f00 <col:20> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | |   `-ImplicitCastExpr 0x12e027f58 <col:28> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x12e027f20 <col:28> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   | `-ReturnStmt 0x12e028168 <line:14:13, col:52>
    |   |   `-ArraySubscriptExpr 0x12e028148 <col:20, col:52> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x12e028130 <col:20, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-RecoveryExpr 0x12e028000 <col:20, col:23> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x12e027fc8 <col:20> 'struct huffman *' lvalue ParmVar 0x12e027458 'h' 'struct huffman *'
    |   |     `-BinaryOperator 0x12e028110 <col:30, col:51> 'int' '+'
    |   |       |-ImplicitCastExpr 0x12e0280f8 <col:30> 'int' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x12e028028 <col:30> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |   |       `-ParenExpr 0x12e0280d8 <col:38, col:51> 'int'
    |   |         `-BinaryOperator 0x12e0280b8 <col:39, col:46> 'int' '-'
    |   |           |-ImplicitCastExpr 0x12e028088 <col:39> 'int' <LValueToRValue>
    |   |           | `-DeclRefExpr 0x12e028048 <col:39> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |   |           `-ImplicitCastExpr 0x12e0280a0 <col:46> 'int' <LValueToRValue>
    |   |             `-DeclRefExpr 0x12e028068 <col:46> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   |-CompoundAssignOperator 0x12e0281f0 <line:15:9, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e028198 <col:9> 'int' lvalue Var 0x12e0278a8 'index' 'int'
    |   | `-ImplicitCastExpr 0x12e0281d8 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e0281b8 <col:18> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   |-CompoundAssignOperator 0x12e028278 <line:16:9, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e028220 <col:9> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | `-ImplicitCastExpr 0x12e028260 <col:18> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e028240 <col:18> 'int' lvalue Var 0x12e027810 'count' 'int'
    |   |-CompoundAssignOperator 0x12e028300 <line:17:9, col:19> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x12e0282a8 <col:9> 'int' lvalue Var 0x12e027778 'first' 'int'
    |   | `-IntegerLiteral 0x12e0282c8 <col:19> 'int' 1
    |   `-CompoundAssignOperator 0x12e028388 <line:18:9, col:18> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x12e028330 <col:9> 'int' lvalue Var 0x12e0276e0 'code' 'int'
    |     `-IntegerLiteral 0x12e028350 <col:18> 'int' 1
    `-ReturnStmt 0x12e029270 <line:20:5, col:13>
      `-UnaryOperator 0x12e029258 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x12e029238 <col:13> 'int' 9
