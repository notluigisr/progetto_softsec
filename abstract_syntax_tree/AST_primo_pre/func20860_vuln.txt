`-FunctionDecl 0x139128310  line:1:6 referenced invalid Huff_transmit 'void (int *, int, int *)'
  |-ParmVarDecl 0x139128128 <col:21, col:29> col:29 invalid huff 'int *'
  |-ParmVarDecl 0x1391281a8 <col:35, col:39> col:39 used ch 'int'
  |-ParmVarDecl 0x139128228 <col:43, col:49> col:49 invalid fout 'int *'
  `-CompoundStmt 0x13a009de0 <col:55, line:12:1>
    |-DeclStmt 0x139128450 <line:2:2, col:7>
    | `-VarDecl 0x1391283e8 <col:2, col:6> col:6 used i 'int'
    `-IfStmt 0x13a009db0 <line:3:2, line:11:2> has_else
      |-BinaryOperator 0x139128638 <line:3:6, col:23> 'int' contains-errors '=='
      | |-ArraySubscriptExpr 0x1391285f8 <col:6, col:18> '<dependent type>' contains-errors lvalue
      | | |-ImplicitCastExpr 0x1391285c8 <col:6, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | | `-CXXDependentScopeMemberExpr 0x139128488 <col:6, col:12> '<dependent type>' contains-errors lvalue ->loc
      | | |   `-RecoveryExpr 0x139128468 <col:6> '<dependent type>' contains-errors lvalue
      | | `-ImplicitCastExpr 0x1391285e0 <col:16> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x1391284d0 <col:16> 'int' lvalue ParmVar 0x1391281a8 'ch' 'int'
      | `-RecoveryExpr 0x139128618 <col:23> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x13a009a38 <col:29, line:9:2>
      | |-CallExpr 0x139128750 <line:5:3, col:32> '<dependent type>' contains-errors
      | | |-RecoveryExpr 0x139128678 <col:3> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x139128658 <col:3> 'void (int *, int, int *)' Function 0x139128310 'Huff_transmit' 'void (int *, int, int *)'
      | | |-RecoveryExpr 0x1391286a0 <col:17> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x139128730 <col:23> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x1391286d8 <col:28> '<dependent type>' contains-errors lvalue
      | `-ForStmt 0x13a009a00 <line:6:3, line:8:3>
      |   |-BinaryOperator 0x1391287c8 <line:6:8, col:12> 'int' '='
      |   | |-DeclRefExpr 0x139128788 <col:8> 'int' lvalue Var 0x1391283e8 'i' 'int'
      |   | `-IntegerLiteral 0x1391287a8 <col:12> 'int' 7
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x13a009658 <col:15, col:20> 'int' '>='
      |   | |-ImplicitCastExpr 0x13a009640 <col:15> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x13a009600 <col:15> 'int' lvalue Var 0x1391283e8 'i' 'int'
      |   | `-IntegerLiteral 0x13a009620 <col:20> 'int' 0
      |   |-UnaryOperator 0x13a009698 <col:23, col:24> 'int' postfix '--'
      |   | `-DeclRefExpr 0x13a009678 <col:23> 'int' lvalue Var 0x1391283e8 'i' 'int'
      |   `-CompoundStmt 0x13a0099e8 <col:28, line:8:3>
      |     `-CallExpr 0x13a0099b8 <line:7:4, col:41> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x13a009810 <col:4> 'int ()' Function 0x13a009758 'add_bit' 'int ()'
      |       |-CStyleCastExpr 0x13a009970 <col:12, col:34> 'char' <IntegralCast>
      |       | `-ParenExpr 0x13a009950 <col:18, col:34> 'int'
      |       |   `-BinaryOperator 0x13a009900 <col:19, col:31> 'int' '&'
      |       |     |-ParenExpr 0x13a0098c0 <col:19, col:27> 'int'
      |       |     | `-BinaryOperator 0x13a0098a0 <col:20, col:26> 'int' '>>'
      |       |     |   |-ImplicitCastExpr 0x13a009870 <col:20> 'int' <LValueToRValue>
      |       |     |   | `-DeclRefExpr 0x13a009830 <col:20> 'int' lvalue ParmVar 0x1391281a8 'ch' 'int'
      |       |     |   `-ImplicitCastExpr 0x13a009888 <col:26> 'int' <LValueToRValue>
      |       |     |     `-DeclRefExpr 0x13a009850 <col:26> 'int' lvalue Var 0x1391283e8 'i' 'int'
      |       |     `-IntegerLiteral 0x13a0098e0 <col:31> 'int' 1
      |       `-RecoveryExpr 0x13a009998 <col:37> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13a009d98 <line:9:9, line:11:2>
        `-CallExpr 0x13a009d60 <line:10:3, col:33> '<dependent type>' contains-errors
          |-DeclRefExpr 0x13a009b38 <col:3> 'int ()' Function 0x13a009a80 'send' 'int ()'
          |-ArraySubscriptExpr 0x13a009d20 <col:8, col:20> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x13a009cf0 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
          | | `-CXXDependentScopeMemberExpr 0x13a009b78 <col:8, col:14> '<dependent type>' contains-errors lvalue ->loc
          | |   `-RecoveryExpr 0x13a009b58 <col:8> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x13a009d08 <col:18> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x13a009bc0 <col:18> 'int' lvalue ParmVar 0x1391281a8 'ch' 'int'
          |-RecoveryExpr 0x13a009d40 <col:23> '<dependent type>' contains-errors lvalue
          `-RecoveryExpr 0x13a009c48 <col:29> '<dependent type>' contains-errors lvalue
