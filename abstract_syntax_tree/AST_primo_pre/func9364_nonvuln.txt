`-FunctionDecl 0x12b129600  line:1:12 input_handlers_seq_show 'int (struct seq_file *, void *)' static
  |-ParmVarDecl 0x12b111248 <col:36, col:53> col:53 used seq 'struct seq_file *'
  |-ParmVarDecl 0x12b1112c8 <col:58, col:64> col:64 used v 'void *'
  `-CompoundStmt 0x12a00dc00 <line:2:1, line:14:1>
    |-DeclStmt 0x12b129a70 <line:3:2, col:77>
    | |-RecordDecl 0x12b129700 <col:2, col:9> col:9 struct input_handler
    | `-VarDecl 0x12b129868 <col:2, col:24> col:24 used handler 'struct input_handler *'
    |-DeclStmt 0x12b129da8 <line:4:2, col:71>
    | |-RecordDecl 0x12b129a88 <col:2, col:8> col:8 union input_seq_state
    | `-VarDecl 0x12b129bf8 <col:2, col:64> col:25 used state 'union input_seq_state *' cinit
    |   `-CStyleCastExpr 0x12b129d68 <col:33, col:64> 'union input_seq_state *' contains-errors <Dependent>
    |     `-UnaryOperator 0x12b129cc0 <col:58, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12b129c98 <col:59, col:64> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12b129c60 <col:59> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'
    |-CallExpr 0x12b12a000 <line:6:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b129ea0 <col:2> 'int ()' Function 0x12b129de8 'seq_printf' 'int ()'
    | |-DeclRefExpr 0x12b129ec0 <col:13> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'
    | |-StringLiteral 0x12b129f20 <col:18> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x12b129f78 <col:25, col:32> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12b129f40 <col:25> 'union input_seq_state *' contains-errors lvalue Var 0x12b129bf8 'state' 'union input_seq_state *'
    | `-RecoveryExpr 0x12b129fd8 <col:37, col:46> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12b129fa0 <col:37> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'
    |-IfStmt 0x12b12a288 <line:7:2, line:8:22>
    | |-RecoveryExpr 0x12b12a078 <line:7:6, col:15> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12b12a040 <col:6> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'
    | `-CallExpr 0x12b12a228 <line:8:3, col:22> 'int'
    |   |-ImplicitCastExpr 0x12b12a210 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12b12a180 <col:3> 'int ()' Function 0x12b12a0c8 'seq_puts' 'int ()'
    |   |-ImplicitCastExpr 0x12b12a258 <col:12> 'struct seq_file *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12b12a1a0 <col:12> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'
    |   `-ImplicitCastExpr 0x12b12a270 <col:17> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12b12a1c0 <col:17> 'char[4]' lvalue "STR"
    |-IfStmt 0x12b12a400 <line:9:2, line:10:40>
    | |-RecoveryExpr 0x12b12a2e0 <line:9:6, col:15> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12b12a2a8 <col:6> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'
    | `-CallExpr 0x12b12a3c8 <line:10:3, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b12a308 <col:3> 'int ()' Function 0x12b129de8 'seq_printf' 'int ()'
    |   |-DeclRefExpr 0x12b12a328 <col:14> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'
    |   |-StringLiteral 0x12b12a348 <col:19> 'char[4]' lvalue "STR"
    |   `-RecoveryExpr 0x12b12a3a0 <col:26, col:35> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12b12a368 <col:26> 'struct input_handler *' lvalue Var 0x12b129868 'handler' 'struct input_handler *'
    |-CallExpr 0x12b12a570 <line:11:2, col:20> 'int'
    | |-ImplicitCastExpr 0x12b12a558 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b12a500 <col:2> 'int ()' Function 0x12b12a448 'seq_putc' 'int ()'
    | |-ImplicitCastExpr 0x12b12a5a0 <col:11> 'struct seq_file *' <LValueToRValue>
    | | `-DeclRefExpr 0x12b12a520 <col:11> 'struct seq_file *' lvalue ParmVar 0x12b111248 'seq' 'struct seq_file *'
    | `-CharacterLiteral 0x12b12a540 <col:16> 'int' 10
    `-ReturnStmt 0x12b12a5d8 <line:13:2, col:9>
      `-IntegerLiteral 0x12b12a5b8 <col:9> 'int' 0
