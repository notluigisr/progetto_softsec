`-FunctionDecl 0x132128648  line:1:1 log_tx 'int (const char *, const char *, const char *, const char *, unsigned int)'
  |-ParmVarDecl 0x1321280d8 <col:9, col:21> col:21 used q 'const char *'
  |-ParmVarDecl 0x132128250 <col:24, col:42> col:35 used qtype 'const char *'
  |-ParmVarDecl 0x1321282d0 <col:45, col:57> col:57 used control 'const char *'
  |-ParmVarDecl 0x132128450 <line:2:21, col:42> col:32 used servers 'const char *'
  |-ParmVarDecl 0x1321284d0 <col:45, col:58> col:58 used gluelessness 'unsigned int'
  `-CompoundStmt 0x132143110 <line:3:1, line:24:1>
    |-DeclStmt 0x132140a00 <line:4:5, col:14>
    | `-VarDecl 0x132128778 <col:5, col:13> col:9 used i 'int' cinit
    |   `-IntegerLiteral 0x1321287e0 <col:13> 'int' 0
    |-CallExpr 0x132140c08 <line:6:5, col:18> 'int'
    | |-ImplicitCastExpr 0x132140bf0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x132140b40 <col:5> 'int ()' Function 0x132140a88 'string' 'int ()'
    | `-ImplicitCastExpr 0x132140c30 <col:13> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x132140ba0 <col:13> 'char[4]' lvalue "STR"
    |-CallExpr 0x132140d80 <line:7:5, col:25> 'int'
    | |-ImplicitCastExpr 0x132140d68 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x132140d28 <col:5> 'int ()' Function 0x132140c70 'number' 'int ()'
    | `-ImplicitCastExpr 0x132140da8 <col:13> 'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x132140d48 <col:13> 'unsigned int' lvalue ParmVar 0x1321284d0 'gluelessness' 'unsigned int'
    |-CallExpr 0x132140ed8 <line:8:5, col:12> 'int'
    | `-ImplicitCastExpr 0x132140ec0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x132140ea0 <col:5> 'int ()' Function 0x132140de8 'space' 'int ()'
    |-CallExpr 0x132141030 <line:9:5, col:19> 'int'
    | |-ImplicitCastExpr 0x132141018 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x132140fd8 <col:5> 'int ()' Function 0x132140f20 'logtype' 'int ()'
    | `-ImplicitCastExpr 0x132141058 <col:14> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x132140ff8 <col:14> 'const char *' lvalue ParmVar 0x132128250 'qtype' 'const char *'
    |-CallExpr 0x1321410a8 <line:10:5, col:12> 'int'
    | `-ImplicitCastExpr 0x132141090 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x132141070 <col:5> 'int ()' Function 0x132140de8 'space' 'int ()'
    |-CallExpr 0x132141200 <line:11:5, col:12> 'int'
    | |-ImplicitCastExpr 0x1321411e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1321411a8 <col:5> 'int ()' Function 0x1321410f0 'name' 'int ()'
    | `-ImplicitCastExpr 0x132141228 <col:11> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1321411c8 <col:11> 'const char *' lvalue ParmVar 0x1321280d8 'q' 'const char *'
    |-CallExpr 0x132141278 <line:12:5, col:12> 'int'
    | `-ImplicitCastExpr 0x132141260 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x132141240 <col:5> 'int ()' Function 0x132140de8 'space' 'int ()'
    |-CallExpr 0x1321412f0 <line:13:5, col:18> 'int'
    | |-ImplicitCastExpr 0x1321412d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x132141298 <col:5> 'int ()' Function 0x1321410f0 'name' 'int ()'
    | `-ImplicitCastExpr 0x132141318 <col:11> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1321412b8 <col:11> 'const char *' lvalue ParmVar 0x1321282d0 'control' 'const char *'
    |-ForStmt 0x132141930 <line:14:5, line:21:5>
    | |-BinaryOperator 0x132141370 <line:14:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x132141330 <col:10> 'int' lvalue Var 0x132128778 'i' 'int'
    | | `-IntegerLiteral 0x132141350 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1321413e8 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1321413d0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x132141390 <col:17> 'int' lvalue Var 0x132128778 'i' 'int'
    | | `-IntegerLiteral 0x1321413b0 <col:21> 'int' 64
    | |-CompoundAssignOperator 0x132141448 <col:25, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x132141408 <col:25> 'int' lvalue Var 0x132128778 'i' 'int'
    | | `-IntegerLiteral 0x132141428 <col:30> 'int' 4
    | `-CompoundStmt 0x132141918 <line:15:5, line:21:5>
    |   `-IfStmt 0x1321418f8 <line:16:9, line:20:9>
    |     |-CallExpr 0x132141660 <line:16:13, col:45> 'int'
    |     | |-ImplicitCastExpr 0x132141648 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x132141558 <col:13> 'int ()' Function 0x1321414a0 'byte_diff' 'int ()'
    |     | |-BinaryOperator 0x1321415e8 <col:24, col:34> 'const char *' '+'
    |     | | |-ImplicitCastExpr 0x1321415b8 <col:24> 'const char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x132141578 <col:24> 'const char *' lvalue ParmVar 0x132128450 'servers' 'const char *'
    |     | | `-ImplicitCastExpr 0x1321415d0 <col:34> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x132141598 <col:34> 'int' lvalue Var 0x132128778 'i' 'int'
    |     | |-IntegerLiteral 0x132141608 <col:37> 'int' 4
    |     | `-ImplicitCastExpr 0x132141698 <col:40> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x132141628 <col:40> 'char[4]' lvalue "STR"
    |     `-CompoundStmt 0x1321418d8 <line:17:9, line:20:9>
    |       |-CallExpr 0x1321416e8 <line:18:13, col:20> 'int'
    |       | `-ImplicitCastExpr 0x1321416d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       |   `-DeclRefExpr 0x1321416b0 <col:13> 'int ()' Function 0x132140de8 'space' 'int ()'
    |       `-CallExpr 0x1321418b0 <line:19:13, col:28> 'int'
    |         |-ImplicitCastExpr 0x132141898 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x1321417e8 <col:13> 'int ()' Function 0x132141730 'ip' 'int ()'
    |         `-BinaryOperator 0x132141878 <col:17, col:27> 'const char *' '+'
    |           |-ImplicitCastExpr 0x132141848 <col:17> 'const char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x132141808 <col:17> 'const char *' lvalue ParmVar 0x132128450 'servers' 'const char *'
    |           `-ImplicitCastExpr 0x132141860 <col:27> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x132141828 <col:27> 'int' lvalue Var 0x132128778 'i' 'int'
    `-CallExpr 0x1321430f0 <line:23:5, col:11> 'int'
      `-ImplicitCastExpr 0x1321430d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x1321430b8 <col:5> 'int ()' Function 0x132143000 'line' 'int ()'
