`-FunctionDecl 0x14b80dda8  line:1:5 ber_get_content_length 'int (int)'
  |-ParmVarDecl 0x14b80dcd8 <col:28, col:32> col:32 used length 'int'
  `-CompoundStmt 0x14b80e058 <line:2:1, line:7:1>
    `-IfStmt 0x14b80e028 <line:3:2, line:6:19> has_else
      |-BinaryOperator 0x14b80def8 <line:3:6, col:15> 'int' '>'
      | |-ImplicitCastExpr 0x14b80dee0 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14b80dea0 <col:6> 'int' lvalue ParmVar 0x14b80dcd8 'length' 'int'
      | `-IntegerLiteral 0x14b80dec0 <col:15> 'int' 129
      |-ReturnStmt 0x14b80df90 <line:4:3, col:19>
      | `-BinaryOperator 0x14b80df70 <col:10, col:19> 'int' '-'
      |   |-ImplicitCastExpr 0x14b80df58 <col:10> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x14b80df18 <col:10> 'int' lvalue ParmVar 0x14b80dcd8 'length' 'int'
      |   `-IntegerLiteral 0x14b80df38 <col:19> 'int' 4
      `-ReturnStmt 0x14b80e018 <line:6:3, col:19>
        `-BinaryOperator 0x14b80dff8 <col:10, col:19> 'int' '-'
          |-ImplicitCastExpr 0x14b80dfe0 <col:10> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x14b80dfa0 <col:10> 'int' lvalue ParmVar 0x14b80dcd8 'length' 'int'
          `-IntegerLiteral 0x14b80dfc0 <col:19> 'int' 2
