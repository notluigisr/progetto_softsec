`-FunctionDecl 0x12f00ddf0  line:1:6 invalid color_esycc_to_rgb 'void (int *)'
  |-ParmVarDecl 0x12f00dd28 <col:25, col:38> col:38 referenced invalid image 'int *'
  `-CompoundStmt 0x12f02b330 <line:2:1, line:49:1>
    |-DeclStmt 0x12f00e1d8 <line:3:2, col:34>
    | |-VarDecl 0x12f00deb8 <col:2, col:6> col:6 used y 'int'
    | |-VarDecl 0x12f00df38 <col:2, col:9> col:9 used cb 'int'
    | |-VarDecl 0x12f00dfb8 <col:2, col:13> col:13 used cr 'int'
    | |-VarDecl 0x12f00e038 <col:2, col:17> col:17 used sign1 'int'
    | |-VarDecl 0x12f00e0b8 <col:2, col:24> col:24 used sign2 'int'
    | `-VarDecl 0x12f00e138 <col:2, col:31> col:31 used val 'int'
    |-DeclStmt 0x12f027428 <line:4:2, col:27>
    | |-VarDecl 0x12f00e208 <col:2, col:15> col:15 used w 'unsigned int'
    | |-VarDecl 0x12f00e288 <col:2, col:18> col:18 used h 'unsigned int'
    | |-VarDecl 0x12f00e308 <col:2, col:21> col:21 used max 'unsigned int'
    | `-VarDecl 0x12f00e388 <col:2, col:26> col:26 used i 'unsigned int'
    |-DeclStmt 0x12f027688 <line:5:2, col:50>
    | `-VarDecl 0x12f027458 <col:2, col:49> col:6 used flip_value 'int' cinit
    |   `-ParenExpr 0x12f027668 <col:19, col:49> '<dependent type>' contains-errors
    |     `-BinaryOperator 0x12f027648 <col:20, col:48> '<dependent type>' contains-errors '<<'
    |       |-IntegerLiteral 0x12f0274c0 <col:20> 'int' 1
    |       `-ParenExpr 0x12f027628 <col:25, col:48> '<dependent type>' contains-errors
    |         `-BinaryOperator 0x12f027608 <col:26, col:47> '<dependent type>' contains-errors '-'
    |           |-CXXDependentScopeMemberExpr 0x12f0275a0 <col:26, col:42> '<dependent type>' contains-errors lvalue .prec
    |           | `-ArraySubscriptExpr 0x12f027580 <col:26, col:40> '<dependent type>' contains-errors lvalue
    |           |   |-ImplicitCastExpr 0x12f027568 <col:26, col:33> '<dependent type>' contains-errors <LValueToRValue>
    |           |   | `-CXXDependentScopeMemberExpr 0x12f027500 <col:26, col:33> '<dependent type>' contains-errors lvalue ->comps
    |           |   |   `-RecoveryExpr 0x12f0274e0 <col:26> '<dependent type>' contains-errors lvalue
    |           |   `-IntegerLiteral 0x12f027548 <col:39> 'int' 0
    |           `-IntegerLiteral 0x12f0275e8 <col:47> 'int' 1
    |-DeclStmt 0x12f0278c8 <line:6:2, col:49>
    | `-VarDecl 0x12f0276b8 <col:2, col:48> col:6 used max_value 'int' cinit
    |   `-BinaryOperator 0x12f0278a8 <col:18, col:48> '<dependent type>' contains-errors '-'
    |     |-ParenExpr 0x12f027868 <col:18, col:44> '<dependent type>' contains-errors
    |     | `-BinaryOperator 0x12f027848 <col:19, col:40> '<dependent type>' contains-errors '<<'
    |     |   |-IntegerLiteral 0x12f027720 <col:19> 'int' 1
    |     |   `-CXXDependentScopeMemberExpr 0x12f027800 <col:24, col:40> '<dependent type>' contains-errors lvalue .prec
    |     |     `-ArraySubscriptExpr 0x12f0277e0 <col:24, col:38> '<dependent type>' contains-errors lvalue
    |     |       |-ImplicitCastExpr 0x12f0277c8 <col:24, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |     |       | `-CXXDependentScopeMemberExpr 0x12f027760 <col:24, col:31> '<dependent type>' contains-errors lvalue ->comps
    |     |       |   `-RecoveryExpr 0x12f027740 <col:24> '<dependent type>' contains-errors lvalue
    |     |       `-IntegerLiteral 0x12f0277a8 <col:37> 'int' 0
    |     `-IntegerLiteral 0x12f027888 <col:48> 'int' 1
    |-IfStmt 0x12f027998 <line:8:2, col:26>
    | |-BinaryOperator 0x12f027968 <col:5, col:23> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x12f027900 <col:5, col:12> '<dependent type>' contains-errors lvalue ->numcomps
    | | | `-RecoveryExpr 0x12f0278e0 <col:5> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12f027948 <col:23> 'int' 3
    | `-ReturnStmt 0x12f027988 <col:26>
    |-BinaryOperator 0x12f027ae0 <line:10:2, col:22> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12f0279b8 <col:2> 'unsigned int' lvalue Var 0x12f00e208 'w' 'unsigned int'
    | `-CXXDependentScopeMemberExpr 0x12f027a98 <col:6, col:22> '<dependent type>' contains-errors lvalue .w
    |   `-ArraySubscriptExpr 0x12f027a78 <col:6, col:20> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12f027a60 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x12f0279f8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->comps
    |     |   `-RecoveryExpr 0x12f0279d8 <col:6> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x12f027a40 <col:19> 'int' 0
    |-BinaryOperator 0x12f027c28 <line:11:2, col:22> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12f027b00 <col:2> 'unsigned int' lvalue Var 0x12f00e288 'h' 'unsigned int'
    | `-CXXDependentScopeMemberExpr 0x12f027be0 <col:6, col:22> '<dependent type>' contains-errors lvalue .h
    |   `-ArraySubscriptExpr 0x12f027bc0 <col:6, col:20> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12f027ba8 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x12f027b40 <col:6, col:13> '<dependent type>' contains-errors lvalue ->comps
    |     |   `-RecoveryExpr 0x12f027b20 <col:6> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x12f027b88 <col:19> 'int' 0
    |-BinaryOperator 0x12f027db0 <line:13:2, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f027c48 <col:2> 'int' lvalue Var 0x12f00e038 'sign1' 'int'
    | `-CStyleCastExpr 0x12f027d88 <col:10, col:31> 'int' contains-errors <Dependent>
    |   `-CXXDependentScopeMemberExpr 0x12f027d28 <col:15, col:31> '<dependent type>' contains-errors lvalue .sgnd
    |     `-ArraySubscriptExpr 0x12f027d08 <col:15, col:29> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x12f027cf0 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-CXXDependentScopeMemberExpr 0x12f027c88 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
    |       |   `-RecoveryExpr 0x12f027c68 <col:15> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x12f027cd0 <col:28> 'int' 1
    |-BinaryOperator 0x12f027f38 <line:14:2, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x12f027dd0 <col:2> 'int' lvalue Var 0x12f00e0b8 'sign2' 'int'
    | `-CStyleCastExpr 0x12f027f10 <col:10, col:31> 'int' contains-errors <Dependent>
    |   `-CXXDependentScopeMemberExpr 0x12f027eb0 <col:15, col:31> '<dependent type>' contains-errors lvalue .sgnd
    |     `-ArraySubscriptExpr 0x12f027e90 <col:15, col:29> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x12f027e78 <col:15, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-CXXDependentScopeMemberExpr 0x12f027e10 <col:15, col:22> '<dependent type>' contains-errors lvalue ->comps
    |       |   `-RecoveryExpr 0x12f027df0 <col:15> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x12f027e58 <col:28> 'int' 2
    |-BinaryOperator 0x12f028008 <line:16:2, col:12> 'unsigned int' '='
    | |-DeclRefExpr 0x12f027f58 <col:2> 'unsigned int' lvalue Var 0x12f00e308 'max' 'unsigned int'
    | `-BinaryOperator 0x12f027fe8 <col:8, col:12> 'unsigned int' '*'
    |   |-ImplicitCastExpr 0x12f027fb8 <col:8> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12f027f78 <col:8> 'unsigned int' lvalue Var 0x12f00e208 'w' 'unsigned int'
    |   `-ImplicitCastExpr 0x12f027fd0 <col:12> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x12f027f98 <col:12> 'unsigned int' lvalue Var 0x12f00e288 'h' 'unsigned int'
    |-ForStmt 0x12f02b1f0 <line:18:2, line:46:2>
    | |-BinaryOperator 0x12f028080 <line:18:6, col:10> 'unsigned int' '='
    | | |-DeclRefExpr 0x12f028028 <col:6> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x12f028068 <col:10> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12f028048 <col:10> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12f028110 <col:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x12f0280e0 <col:13> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f0280a0 <col:13> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x12f0280f8 <col:17> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f0280c0 <col:17> 'unsigned int' lvalue Var 0x12f00e308 'max' 'unsigned int'
    | |-UnaryOperator 0x12f028150 <col:22, col:24> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x12f028130 <col:24> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    | `-CompoundStmt 0x12f02b170 <line:19:2, line:46:2>
    |   |-BinaryOperator 0x12f028300 <line:21:3, col:29> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12f028168 <col:3> 'int' lvalue Var 0x12f00deb8 'y' 'int'
    |   | `-ArraySubscriptExpr 0x12f0282e0 <col:7, col:29> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12f0282b0 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x12f028248 <col:7, col:23> '<dependent type>' contains-errors lvalue .data
    |   |   |   `-ArraySubscriptExpr 0x12f028228 <col:7, col:21> '<dependent type>' contains-errors lvalue
    |   |   |     |-ImplicitCastExpr 0x12f028210 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     | `-CXXDependentScopeMemberExpr 0x12f0281a8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->comps
    |   |   |     |   `-RecoveryExpr 0x12f028188 <col:7> '<dependent type>' contains-errors lvalue
    |   |   |     `-IntegerLiteral 0x12f0281f0 <col:20> 'int' 0
    |   |   `-ImplicitCastExpr 0x12f0282c8 <col:28> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f028290 <col:28> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |   |-BinaryOperator 0x12f0294b8 <col:32, col:59> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12f028320 <col:32> 'int' lvalue Var 0x12f00df38 'cb' 'int'
    |   | `-ArraySubscriptExpr 0x12f029498 <col:37, col:59> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12f029468 <col:37, col:53> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x12f029400 <col:37, col:53> '<dependent type>' contains-errors lvalue .data
    |   |   |   `-ArraySubscriptExpr 0x12f0283e0 <col:37, col:51> '<dependent type>' contains-errors lvalue
    |   |   |     |-ImplicitCastExpr 0x12f0283c8 <col:37, col:44> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     | `-CXXDependentScopeMemberExpr 0x12f028360 <col:37, col:44> '<dependent type>' contains-errors lvalue ->comps
    |   |   |     |   `-RecoveryExpr 0x12f028340 <col:37> '<dependent type>' contains-errors lvalue
    |   |   |     `-IntegerLiteral 0x12f0283a8 <col:50> 'int' 1
    |   |   `-ImplicitCastExpr 0x12f029480 <col:58> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f029448 <col:58> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |   |-BinaryOperator 0x12f029670 <col:62, col:89> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12f0294d8 <col:62> 'int' lvalue Var 0x12f00dfb8 'cr' 'int'
    |   | `-ArraySubscriptExpr 0x12f029650 <col:67, col:89> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12f029620 <col:67, col:83> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-CXXDependentScopeMemberExpr 0x12f0295b8 <col:67, col:83> '<dependent type>' contains-errors lvalue .data
    |   |   |   `-ArraySubscriptExpr 0x12f029598 <col:67, col:81> '<dependent type>' contains-errors lvalue
    |   |   |     |-ImplicitCastExpr 0x12f029580 <col:67, col:74> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     | `-CXXDependentScopeMemberExpr 0x12f029518 <col:67, col:74> '<dependent type>' contains-errors lvalue ->comps
    |   |   |     |   `-RecoveryExpr 0x12f0294f8 <col:67> '<dependent type>' contains-errors lvalue
    |   |   |     `-IntegerLiteral 0x12f029560 <col:80> 'int' 2
    |   |   `-ImplicitCastExpr 0x12f029638 <col:88> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f029600 <col:88> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |   |-IfStmt 0x12f029768 <line:23:3, col:21>
    |   | |-UnaryOperator 0x12f0296c8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12f0296b0 <col:8> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f029690 <col:8> 'int' lvalue Var 0x12f00e038 'sign1' 'int'
    |   | `-CompoundAssignOperator 0x12f029738 <col:15, col:21> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x12f0296e0 <col:15> 'int' lvalue Var 0x12f00df38 'cb' 'int'
    |   |   `-ImplicitCastExpr 0x12f029720 <col:21> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f029700 <col:21> 'int' contains-errors lvalue Var 0x12f027458 'flip_value' 'int'
    |   |-IfStmt 0x12f029860 <line:24:3, col:21>
    |   | |-UnaryOperator 0x12f0297c0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12f0297a8 <col:8> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f029788 <col:8> 'int' lvalue Var 0x12f00e0b8 'sign2' 'int'
    |   | `-CompoundAssignOperator 0x12f029830 <col:15, col:21> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x12f0297d8 <col:15> 'int' lvalue Var 0x12f00dfb8 'cr' 'int'
    |   |   `-ImplicitCastExpr 0x12f029818 <col:21> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x12f0297f8 <col:21> 'int' contains-errors lvalue Var 0x12f027458 'flip_value' 'int'
    |   |-BinaryOperator 0x12f029c48 <line:26:3, line:28:45> 'int' '='
    |   | |-DeclRefExpr 0x12f029880 <line:26:3> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | `-CStyleCastExpr 0x12f029c20 <col:9, line:28:45> 'int' <FloatingToIntegral>
    |   |   `-ParenExpr 0x12f029c00 <line:27:3, line:28:45> 'float'
    |   |     `-BinaryOperator 0x12f029ba8 <line:27:4, line:28:42> 'float' '+'
    |   |       |-BinaryOperator 0x12f029b28 <line:27:4, line:28:30> 'float' '+'
    |   |       | |-BinaryOperator 0x12f029a10 <line:27:4, col:41> 'float' '-'
    |   |       | | |-CStyleCastExpr 0x12f0298f0 <col:4, col:11> 'float' <IntegralToFloating>
    |   |       | | | `-ImplicitCastExpr 0x12f0298d8 <col:11> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | | |   `-DeclRefExpr 0x12f0298a0 <col:11> 'int' lvalue Var 0x12f00deb8 'y' 'int'
    |   |       | | `-BinaryOperator 0x12f0299f0 <col:15, col:41> 'float' '*'
    |   |       | |   |-CStyleCastExpr 0x12f029950 <col:15, col:22> 'float' <FloatingCast>
    |   |       | |   | `-FloatingLiteral 0x12f029918 <col:22> 'double' 3.680000e-05
    |   |       | |   `-CStyleCastExpr 0x12f0299c8 <col:34, col:41> 'float' <IntegralToFloating>
    |   |       | |     `-ImplicitCastExpr 0x12f0299b0 <col:41> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | |       `-DeclRefExpr 0x12f029978 <col:41> 'int' lvalue Var 0x12f00df38 'cb' 'int'
    |   |       | `-BinaryOperator 0x12f029b08 <line:28:6, col:30> 'float' '*'
    |   |       |   |-CStyleCastExpr 0x12f029a68 <col:6, col:13> 'float' <FloatingCast>
    |   |       |   | `-FloatingLiteral 0x12f029a30 <col:13> 'double' 1.401990e+00
    |   |       |   `-CStyleCastExpr 0x12f029ae0 <col:23, col:30> 'float' <IntegralToFloating>
    |   |       |     `-ImplicitCastExpr 0x12f029ac8 <col:30> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       |       `-DeclRefExpr 0x12f029a90 <col:30> 'int' lvalue Var 0x12f00dfb8 'cr' 'int'
    |   |       `-CStyleCastExpr 0x12f029b80 <col:35, col:42> 'float' <FloatingCast>
    |   |         `-FloatingLiteral 0x12f029b48 <col:42> 'double' 5.000000e-01
    |   |-IfStmt 0x12f029e68 <line:30:3, col:63> has_else
    |   | |-BinaryOperator 0x12f029cd8 <col:6, col:12> 'int' contains-errors '>'
    |   | | |-ImplicitCastExpr 0x12f029ca8 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12f029c68 <col:6> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f029cc0 <col:12> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f029c88 <col:12> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | |-BinaryOperator 0x12f029d50 <col:23, col:29> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x12f029cf8 <col:23> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f029d38 <col:29> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f029d18 <col:29> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | `-IfStmt 0x12f029e48 <col:45, col:63>
    |   |   |-BinaryOperator 0x12f029dc8 <col:48, col:54> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x12f029db0 <col:48> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x12f029d70 <col:48> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |   | `-IntegerLiteral 0x12f029d90 <col:54> 'int' 0
    |   |   `-BinaryOperator 0x12f029e28 <col:57, col:63> 'int' '='
    |   |     |-DeclRefExpr 0x12f029de8 <col:57> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |     `-IntegerLiteral 0x12f029e08 <col:63> 'int' 0
    |   |-BinaryOperator 0x12f02a058 <line:31:3, col:29> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12f02a018 <col:3, col:25> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12f029fe8 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x12f029f80 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
    |   | | |   `-ArraySubscriptExpr 0x12f029f60 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   | | |     |-ImplicitCastExpr 0x12f029f48 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     | `-CXXDependentScopeMemberExpr 0x12f029ee0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
    |   | | |     |   `-RecoveryExpr 0x12f029eb8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     |     `-DeclRefExpr 0x12f029e98 <col:3> 'int *' lvalue ParmVar 0x12f00dd28 'image' 'int *'
    |   | | |     `-IntegerLiteral 0x12f029f28 <col:16> 'int' 0
    |   | | `-ImplicitCastExpr 0x12f02a000 <col:24> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f029fc8 <col:24> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |   | `-DeclRefExpr 0x12f02a038 <col:29> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |-BinaryOperator 0x12f02a4c8 <line:33:3, line:35:47> 'int' '='
    |   | |-DeclRefExpr 0x12f02a078 <line:33:3> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | `-CStyleCastExpr 0x12f02a4a0 <col:9, line:35:47> 'int' <FloatingToIntegral>
    |   |   `-ParenExpr 0x12f02a480 <line:34:3, line:35:47> 'float'
    |   |     `-BinaryOperator 0x12f02a428 <line:34:4, line:35:44> 'float' '+'
    |   |       |-BinaryOperator 0x12f02a3a0 <line:34:4, line:35:32> 'float' '-'
    |   |       | |-BinaryOperator 0x12f02a288 <line:34:4, col:56> 'float' '-'
    |   |       | | |-BinaryOperator 0x12f02a170 <col:4, col:27> 'float' '*'
    |   |       | | | |-CStyleCastExpr 0x12f02a0d0 <col:4, col:11> 'float' <FloatingCast>
    |   |       | | | | `-FloatingLiteral 0x12f02a098 <col:11> 'double' 1.000300e+00
    |   |       | | | `-CStyleCastExpr 0x12f02a148 <col:20, col:27> 'float' <IntegralToFloating>
    |   |       | | |   `-ImplicitCastExpr 0x12f02a130 <col:27> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | | |     `-DeclRefExpr 0x12f02a0f8 <col:27> 'int' lvalue Var 0x12f00deb8 'y' 'int'
    |   |       | | `-BinaryOperator 0x12f02a268 <col:31, col:56> 'float' '*'
    |   |       | |   |-CStyleCastExpr 0x12f02a1c8 <col:31, col:38> 'float' <FloatingCast>
    |   |       | |   | `-FloatingLiteral 0x12f02a190 <col:38> 'double' 3.441250e-01
    |   |       | |   `-CStyleCastExpr 0x12f02a240 <col:49, col:56> 'float' <IntegralToFloating>
    |   |       | |     `-ImplicitCastExpr 0x12f02a228 <col:56> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | |       `-DeclRefExpr 0x12f02a1f0 <col:56> 'int' lvalue Var 0x12f00df38 'cb' 'int'
    |   |       | `-BinaryOperator 0x12f02a380 <line:35:6, col:32> 'float' '*'
    |   |       |   |-CStyleCastExpr 0x12f02a2e0 <col:6, col:13> 'float' <FloatingCast>
    |   |       |   | `-FloatingLiteral 0x12f02a2a8 <col:13> 'double' 7.141128e-01
    |   |       |   `-CStyleCastExpr 0x12f02a358 <col:25, col:32> 'float' <IntegralToFloating>
    |   |       |     `-ImplicitCastExpr 0x12f02a340 <col:32> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       |       `-DeclRefExpr 0x12f02a308 <col:32> 'int' lvalue Var 0x12f00dfb8 'cr' 'int'
    |   |       `-CStyleCastExpr 0x12f02a400 <col:37, col:44> 'float' <FloatingCast>
    |   |         `-FloatingLiteral 0x12f02a3c0 <col:44> 'double' 5.000000e-01
    |   |-IfStmt 0x12f02a6e8 <line:37:3, col:63> has_else
    |   | |-BinaryOperator 0x12f02a558 <col:6, col:12> 'int' contains-errors '>'
    |   | | |-ImplicitCastExpr 0x12f02a528 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12f02a4e8 <col:6> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f02a540 <col:12> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f02a508 <col:12> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | |-BinaryOperator 0x12f02a5d0 <col:23, col:29> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x12f02a578 <col:23> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f02a5b8 <col:29> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f02a598 <col:29> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | `-IfStmt 0x12f02a6c8 <col:45, col:63>
    |   |   |-BinaryOperator 0x12f02a648 <col:48, col:54> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x12f02a630 <col:48> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x12f02a5f0 <col:48> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |   | `-IntegerLiteral 0x12f02a610 <col:54> 'int' 0
    |   |   `-BinaryOperator 0x12f02a6a8 <col:57, col:63> 'int' '='
    |   |     |-DeclRefExpr 0x12f02a668 <col:57> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |     `-IntegerLiteral 0x12f02a688 <col:63> 'int' 0
    |   |-BinaryOperator 0x12f02a8d8 <line:38:3, col:29> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x12f02a898 <col:3, col:25> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x12f02a868 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x12f02a800 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
    |   | | |   `-ArraySubscriptExpr 0x12f02a7e0 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   | | |     |-ImplicitCastExpr 0x12f02a7c8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     | `-CXXDependentScopeMemberExpr 0x12f02a760 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
    |   | | |     |   `-RecoveryExpr 0x12f02a738 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     |     `-DeclRefExpr 0x12f02a718 <col:3> 'int *' lvalue ParmVar 0x12f00dd28 'image' 'int *'
    |   | | |     `-IntegerLiteral 0x12f02a7a8 <col:16> 'int' 1
    |   | | `-ImplicitCastExpr 0x12f02a880 <col:24> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f02a848 <col:24> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |   | `-DeclRefExpr 0x12f02a8b8 <col:29> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |-BinaryOperator 0x12f02ad40 <line:40:3, line:42:45> 'int' '='
    |   | |-DeclRefExpr 0x12f02a8f8 <line:40:3> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | `-CStyleCastExpr 0x12f02ad18 <col:9, line:42:45> 'int' <FloatingToIntegral>
    |   |   `-ParenExpr 0x12f02acf8 <line:41:3, line:42:45> 'float'
    |   |     `-BinaryOperator 0x12f02aca0 <line:41:4, line:42:42> 'float' '+'
    |   |       |-BinaryOperator 0x12f02ac20 <line:41:4, line:42:30> 'float' '-'
    |   |       | |-BinaryOperator 0x12f02ab08 <line:41:4, col:57> 'float' '+'
    |   |       | | |-BinaryOperator 0x12f02a9f0 <col:4, col:29> 'float' '*'
    |   |       | | | |-CStyleCastExpr 0x12f02a950 <col:4, col:11> 'float' <FloatingCast>
    |   |       | | | | `-FloatingLiteral 0x12f02a918 <col:11> 'double' 9.998230e-01
    |   |       | | | `-CStyleCastExpr 0x12f02a9c8 <col:22, col:29> 'float' <IntegralToFloating>
    |   |       | | |   `-ImplicitCastExpr 0x12f02a9b0 <col:29> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | | |     `-DeclRefExpr 0x12f02a978 <col:29> 'int' lvalue Var 0x12f00deb8 'y' 'int'
    |   |       | | `-BinaryOperator 0x12f02aae8 <col:33, col:57> 'float' '*'
    |   |       | |   |-CStyleCastExpr 0x12f02aa48 <col:33, col:40> 'float' <FloatingCast>
    |   |       | |   | `-FloatingLiteral 0x12f02aa10 <col:40> 'double' 1.772040e+00
    |   |       | |   `-CStyleCastExpr 0x12f02aac0 <col:50, col:57> 'float' <IntegralToFloating>
    |   |       | |     `-ImplicitCastExpr 0x12f02aaa8 <col:57> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       | |       `-DeclRefExpr 0x12f02aa70 <col:57> 'int' lvalue Var 0x12f00df38 'cb' 'int'
    |   |       | `-BinaryOperator 0x12f02ac00 <line:42:6, col:30> 'float' '*'
    |   |       |   |-CStyleCastExpr 0x12f02ab60 <col:6, col:13> 'float' <FloatingCast>
    |   |       |   | `-FloatingLiteral 0x12f02ab28 <col:13> 'double' 8.000000e-06
    |   |       |   `-CStyleCastExpr 0x12f02abd8 <col:23, col:30> 'float' <IntegralToFloating>
    |   |       |     `-ImplicitCastExpr 0x12f02abc0 <col:30> 'int' <LValueToRValue> part_of_explicit_cast
    |   |       |       `-DeclRefExpr 0x12f02ab88 <col:30> 'int' lvalue Var 0x12f00dfb8 'cr' 'int'
    |   |       `-CStyleCastExpr 0x12f02ac78 <col:35, col:42> 'float' <FloatingCast>
    |   |         `-FloatingLiteral 0x12f02ac40 <col:42> 'double' 5.000000e-01
    |   |-IfStmt 0x12f02af60 <line:44:3, col:63> has_else
    |   | |-BinaryOperator 0x12f02add0 <col:6, col:12> 'int' contains-errors '>'
    |   | | |-ImplicitCastExpr 0x12f02ada0 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12f02ad60 <col:6> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f02adb8 <col:12> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f02ad80 <col:12> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | |-BinaryOperator 0x12f02ae48 <col:23, col:29> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x12f02adf0 <col:23> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   | | `-ImplicitCastExpr 0x12f02ae30 <col:29> 'int' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12f02ae10 <col:29> 'int' contains-errors lvalue Var 0x12f0276b8 'max_value' 'int'
    |   | `-IfStmt 0x12f02af40 <col:45, col:63>
    |   |   |-BinaryOperator 0x12f02aec0 <col:48, col:54> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x12f02aea8 <col:48> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x12f02ae68 <col:48> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |   | `-IntegerLiteral 0x12f02ae88 <col:54> 'int' 0
    |   |   `-BinaryOperator 0x12f02af20 <col:57, col:63> 'int' '='
    |   |     |-DeclRefExpr 0x12f02aee0 <col:57> 'int' lvalue Var 0x12f00e138 'val' 'int'
    |   |     `-IntegerLiteral 0x12f02af00 <col:63> 'int' 0
    |   `-BinaryOperator 0x12f02b150 <line:45:3, col:29> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x12f02b110 <col:3, col:25> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x12f02b0e0 <col:3, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x12f02b078 <col:3, col:19> '<dependent type>' contains-errors lvalue .data
    |     | |   `-ArraySubscriptExpr 0x12f02b058 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |     | |     |-ImplicitCastExpr 0x12f02b040 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     | |     | `-CXXDependentScopeMemberExpr 0x12f02afd8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->comps
    |     | |     |   `-RecoveryExpr 0x12f02afb0 <col:3> '<dependent type>' contains-errors lvalue
    |     | |     |     `-DeclRefExpr 0x12f02af90 <col:3> 'int *' lvalue ParmVar 0x12f00dd28 'image' 'int *'
    |     | |     `-IntegerLiteral 0x12f02b020 <col:16> 'int' 2
    |     | `-ImplicitCastExpr 0x12f02b0f8 <col:24> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12f02b0c0 <col:24> 'unsigned int' lvalue Var 0x12f00e388 'i' 'unsigned int'
    |     `-DeclRefExpr 0x12f02b130 <col:29> 'int' lvalue Var 0x12f00e138 'val' 'int'
    `-BinaryOperator 0x12f02b310 <line:47:2, col:23> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x12f02b270 <col:2, col:9> '<dependent type>' contains-errors lvalue ->color_space
      | `-RecoveryExpr 0x12f02b248 <col:2> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12f02b228 <col:2> 'int *' lvalue ParmVar 0x12f00dd28 'image' 'int *'
      `-RecoveryExpr 0x12f02b2f0 <col:23> '<dependent type>' contains-errors lvalue
