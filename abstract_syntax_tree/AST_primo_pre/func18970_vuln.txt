`-FunctionDecl 0x14c141b18  line:1:12 prepare_to_clone_next_submodule 'int (const struct cache_entry *, struct child_process *, struct submodule_update_clone *, struct strbuf *)' static
  |-ParmVarDecl 0x14c129248 <col:44, col:70> col:70 used ce 'const struct cache_entry *'
  |-ParmVarDecl 0x14c141628 <line:2:9, col:31> col:31 used child 'struct child_process *'
  |-ParmVarDecl 0x14c1417f8 <line:3:9, col:40> col:40 used suc 'struct submodule_update_clone *'
  |-ParmVarDecl 0x14c1419c8 <line:4:9, col:24> col:24 used out 'struct strbuf *'
  `-CompoundStmt 0x14c147cd0 <line:5:1, line:92:1>
    |-DeclStmt 0x14c141e68 <line:6:2, col:36>
    | |-RecordDecl 0x14c141c28 <col:8, col:15> col:15 struct submodule
    | `-VarDecl 0x14c141d98 <col:2, col:32> col:26 used sub 'const struct submodule *' cinit
    |   `-RecoveryExpr 0x14c141e30 <col:32> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c141f50 <line:7:2, col:44>
    | `-VarDecl 0x14c141ed0 <col:2, col:16> col:16 invalid displaypath_sb 'struct strbuf'
    |-DeclStmt 0x14c142008 <line:8:2, col:32>
    | `-VarDecl 0x14c141f88 <col:2, col:16> col:16 invalid sb 'struct strbuf'
    |-DeclStmt 0x14c1420d8 <line:9:2, col:32>
    | `-VarDecl 0x14c142038 <col:2, col:28> col:14 used displaypath 'const char *' cinit
    |   `-RecoveryExpr 0x14c1420b8 <col:28> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c142190 <line:10:2, col:23>
    | `-VarDecl 0x14c142108 <col:2, col:22> col:6 used needs_cloning 'int' cinit
    |   `-IntegerLiteral 0x14c142170 <col:22> 'int' 0
    |-IfStmt 0x14c144790 <line:12:2, line:20:2>
    | |-CallExpr 0x14c142348 <line:12:6, col:17> 'int'
    | | |-ImplicitCastExpr 0x14c142330 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14c1422c0 <col:6> 'int ()' Function 0x14c142208 'ce_stage' 'int ()'
    | | `-ImplicitCastExpr 0x14c142370 <col:15> 'const struct cache_entry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c1422e0 <col:15> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    | `-CompoundStmt 0x14c144760 <col:20, line:20:2>
    |   |-IfStmt 0x14c144248 <line:13:3, line:16:31> has_else
    |   | |-RecoveryExpr 0x14c1423c0 <line:13:7, col:12> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x14c142388 <col:7> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |   | |-CallExpr 0x14c144040 <line:14:4, col:59> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x14c1424c8 <col:4> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'
    |   | | |-UnaryOperator 0x14c142508 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | `-RecoveryExpr 0x14c1424e8 <col:17> '<dependent type>' contains-errors lvalue
    |   | | |-StringLiteral 0x14c142560 <col:21> 'char[4]' lvalue "STR"
    |   | | |-RecoveryExpr 0x14c1425b8 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x14c142580 <col:28> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |   | | `-RecoveryExpr 0x14c144018 <col:51, col:55> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14c1425e0 <col:51> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |   | `-CallExpr 0x14c144218 <line:16:4, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14c144160 <col:4> 'int ()' Function 0x14c1440a8 'strbuf_addstr' 'int ()'
    |   |   |-UnaryOperator 0x14c1441a0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x14c144180 <col:19> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x14c1441f0 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14c1441b8 <col:23> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |   |-CallExpr 0x14c144528 <line:17:3, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14c144278 <col:3> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'
    |   | |-DeclRefExpr 0x14c144298 <col:15> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | |-CallExpr 0x14c1444e8 <col:20, col:27> 'int'
    |   | | |-ImplicitCastExpr 0x14c1444d0 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x14c144398 <col:20> 'int ()' Function 0x14c1442e0 '_' 'int ()'
    |   | | `-ImplicitCastExpr 0x14c144510 <col:22> 'char *' <ArrayToPointerDecay>
    |   | |   `-StringLiteral 0x14c1443b8 <col:22> 'char[4]' lvalue "STR"
    |   | `-CXXDependentScopeMemberExpr 0x14c144450 <col:30, col:33> '<dependent type>' contains-errors lvalue .buf
    |   |   `-RecoveryExpr 0x14c144430 <col:30> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14c1446b0 <line:18:3, col:25> 'int'
    |   | |-ImplicitCastExpr 0x14c144698 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c144640 <col:3> 'int ()' Function 0x14c144588 'strbuf_addch' 'int ()'
    |   | |-ImplicitCastExpr 0x14c1446e0 <col:16> 'struct strbuf *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c144660 <col:16> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | `-CharacterLiteral 0x14c144680 <col:21> 'int' 10
    |   `-GotoStmt 0x14c144748 <line:19:3, col:8> 'cleanup' 0x14c1446f8
    |-BinaryOperator 0x14c1449e8 <line:22:2, col:47> 'const struct submodule *' contains-errors '='
    | |-DeclRefExpr 0x14c1447b0 <col:2> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'
    | `-CallExpr 0x14c1449b8 <col:8, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c1448b0 <col:8> 'int ()' Function 0x14c1447f8 'submodule_from_path' 'int ()'
    |   |-RecoveryExpr 0x14c144998 <col:28> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14c144920 <col:39, col:43> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c1448e8 <col:39> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |-IfStmt 0x14c144d78 <line:24:2, line:28:21> has_else
    | |-RecoveryExpr 0x14c144a40 <line:24:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c144a08 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | |-BinaryOperator 0x14c144cb8 <line:25:3, line:26:35> 'const char *' contains-errors '='
    | | |-DeclRefExpr 0x14c144a68 <line:25:3> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'
    | | `-CallExpr 0x14c144c80 <col:17, line:26:35> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14c144b68 <line:25:17> 'int ()' Function 0x14c144ab0 'relative_path' 'int ()'
    | |   |-RecoveryExpr 0x14c144bc0 <col:31, col:36> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14c144b88 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | |   |-RecoveryExpr 0x14c144c20 <line:26:10, col:14> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14c144be8 <col:10> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    | |   `-UnaryOperator 0x14c144c68 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x14c144c48 <col:21> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14c144d58 <line:28:3, col:21> 'const char *' contains-errors '='
    |   |-DeclRefExpr 0x14c144cd8 <col:3> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'
    |   `-RecoveryExpr 0x14c144d30 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c144cf8 <col:17> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |-IfStmt 0x14c145038 <line:30:2, line:33:2>
    | |-UnaryOperator 0x14c144de0 <line:30:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c144dc8 <col:7> 'const struct submodule *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x14c144da8 <col:7> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'
    | `-CompoundStmt 0x14c145018 <col:12, line:33:2>
    |   |-CallExpr 0x14c144f70 <line:31:3, col:52> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x14c144f58 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c144ed8 <col:3> 'int ()' Function 0x14c144e20 'next_submodule_warn_missing' 'int ()'
    |   | |-ImplicitCastExpr 0x14c144fa8 <col:31> 'struct submodule_update_clone *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c144ef8 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |   | |-ImplicitCastExpr 0x14c144fc0 <col:36> 'struct strbuf *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c144f18 <col:36> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | `-ImplicitCastExpr 0x14c144fd8 <col:41> 'const char *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14c144f38 <col:41> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'
    |   `-GotoStmt 0x14c145000 <line:32:3, col:8> 'cleanup' 0x14c1446f8
    |-IfStmt 0x14c1454e0 <line:35:2, line:41:2>
    | |-RecoveryExpr 0x14c145250 <line:35:6, line:37:49> '_Bool' contains-errors
    | `-CompoundStmt 0x14c1454b8 <col:52, line:41:2>
    |   |-CallExpr 0x14c145380 <line:38:3, col:41> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x14c145368 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c145270 <col:3> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'
    |   | |-ImplicitCastExpr 0x14c1453b8 <col:15> 'struct strbuf *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c145290 <col:15> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | |-CallExpr 0x14c145308 <col:20, col:27> 'int'
    |   | | |-ImplicitCastExpr 0x14c1452f0 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x14c1452b0 <col:20> 'int ()' Function 0x14c1442e0 '_' 'int ()'
    |   | | `-ImplicitCastExpr 0x14c145330 <col:22> 'char *' <ArrayToPointerDecay>
    |   | |   `-StringLiteral 0x14c1452d0 <col:22> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x14c1453d0 <col:30> 'const char *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14c145348 <col:30> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'
    |   |-CallExpr 0x14c145458 <line:39:3, col:25> 'int'
    |   | |-ImplicitCastExpr 0x14c145440 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c1453e8 <col:3> 'int ()' Function 0x14c144588 'strbuf_addch' 'int ()'
    |   | |-ImplicitCastExpr 0x14c145488 <col:16> 'struct strbuf *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c145408 <col:16> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | `-CharacterLiteral 0x14c145428 <col:21> 'int' 10
    |   `-GotoStmt 0x14c1454a0 <line:40:3, col:8> 'cleanup' 0x14c1446f8
    |-IfStmt 0x14c1457d0 <line:44:2, line:47:2>
    | |-RecoveryExpr 0x14c145660 <line:44:6, col:51> '_Bool' contains-errors
    | `-CompoundStmt 0x14c1457b0 <col:54, line:47:2>
    |   |-CallExpr 0x14c145718 <line:45:3, col:52> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x14c145700 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c145680 <col:3> 'int ()' Function 0x14c144e20 'next_submodule_warn_missing' 'int ()'
    |   | |-ImplicitCastExpr 0x14c145750 <col:31> 'struct submodule_update_clone *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c1456a0 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |   | |-ImplicitCastExpr 0x14c145768 <col:36> 'struct strbuf *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c1456c0 <col:36> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'
    |   | `-ImplicitCastExpr 0x14c145780 <col:41> 'const char *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14c1456e0 <col:41> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'
    |   `-GotoStmt 0x14c145798 <line:46:3, col:8> 'cleanup' 0x14c1446f8
    |-CallExpr 0x14c145928 <line:49:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c1458d0 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'
    | `-UnaryOperator 0x14c145910 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c1458f0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c145a28 <line:50:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c145950 <col:2> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'
    | |-UnaryOperator 0x14c145990 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14c145970 <col:15> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14c1459a8 <col:19> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x14c145a00 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14c1459c8 <col:26> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |-BinaryOperator 0x14c145c28 <line:51:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c145a60 <col:2> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'
    | `-UnaryOperator 0x14c145c10 <col:18, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-CallExpr 0x14c145be8 <col:19, col:37> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c145b60 <col:19> 'int ()' Function 0x14c145aa8 'file_exists' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x14c145ba0 <col:31, col:34> '<dependent type>' contains-errors lvalue .buf
    |       `-RecoveryExpr 0x14c145b80 <col:31> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c145ca0 <line:53:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c145c48 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'
    | `-UnaryOperator 0x14c145c88 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c145c68 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c146110 <line:54:2, line:56:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c145cc8 <line:54:2> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'
    | |-UnaryOperator 0x14c145d08 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14c145ce8 <col:15> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14c145d20 <col:19> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x14c145d78 <col:26, col:30> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c145d40 <col:26> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    | |-CallExpr 0x14c145f18 <line:55:4, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14c145e80 <col:4> 'int ()' Function 0x14c145dc8 'oid_to_hex' 'int ()'
    | | `-UnaryOperator 0x14c145f00 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x14c145ed8 <col:16, col:20> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14c145ea0 <col:16> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    | |-CallExpr 0x14c1460d0 <col:26, col:37> 'int'
    | | |-ImplicitCastExpr 0x14c1460b8 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14c145f40 <col:26> 'int ()' Function 0x14c142208 'ce_stage' 'int ()'
    | | `-ImplicitCastExpr 0x14c1460f8 <col:35> 'const struct cache_entry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c145f60 <col:35> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    | |-DeclRefExpr 0x14c145fd8 <line:56:4> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'
    | `-RecoveryExpr 0x14c146038 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14c146000 <col:19> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'
    |-CallExpr 0x14c146348 <line:57:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c146248 <col:2> 'int ()' Function 0x14c146190 'string_list_append' 'int ()'
    | |-UnaryOperator 0x14c1462c8 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14c1462a0 <col:22, col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14c146268 <col:22> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | `-CXXDependentScopeMemberExpr 0x14c146300 <col:41, col:44> '<dependent type>' contains-errors lvalue .buf
    |   `-RecoveryExpr 0x14c1462e0 <col:41> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c1463e0 <line:59:2, line:60:8>
    | |-UnaryOperator 0x14c1463b0 <line:59:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c146398 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c146378 <col:7> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'
    | `-GotoStmt 0x14c1463c8 <line:60:3, col:8> 'cleanup' 0x14c1446f8
    |-BinaryOperator 0x14c146480 <line:62:2, col:19> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14c146438 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c146400 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-IntegerLiteral 0x14c146460 <col:19> 'int' 1
    |-BinaryOperator 0x14c146520 <line:63:2, col:20> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14c1464d8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c1464a0 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-IntegerLiteral 0x14c146500 <col:20> 'int' 1
    |-BinaryOperator 0x14c1465c0 <line:64:2, col:28> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14c146578 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c146540 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-IntegerLiteral 0x14c1465a0 <col:28> 'int' 1
    |-BinaryOperator 0x14c146678 <line:65:2, col:16> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14c146618 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c1465e0 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-UnaryOperator 0x14c146660 <col:15, col:16> 'int' prefix '-'
    |   `-IntegerLiteral 0x14c146640 <col:16> 'int' 1
    |-CallExpr 0x14c146830 <line:66:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c146778 <col:2> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x14c1467f8 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14c1467d0 <col:19, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14c146798 <col:19> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-StringLiteral 0x14c146810 <col:32> 'char[4]' lvalue "STR"
    |-CallExpr 0x14c146918 <line:67:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c146860 <col:2> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x14c1468e0 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14c1468b8 <col:19, col:26> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14c146880 <col:19> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    | `-StringLiteral 0x14c1468f8 <col:32> 'char[4]' lvalue "STR"
    |-IfStmt 0x14c146a90 <line:68:2, line:69:38>
    | |-RecoveryExpr 0x14c146980 <line:68:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c146948 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | `-CallExpr 0x14c146a60 <line:69:3, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c1469a8 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x14c146a28 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c146a00 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c1469c8 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    |   `-StringLiteral 0x14c146a40 <col:33> 'char[4]' lvalue "STR"
    |-IfStmt 0x14c146bf8 <line:70:2, line:71:38>
    | |-RecoveryExpr 0x14c146ae8 <line:70:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c146ab0 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | `-CallExpr 0x14c146bc8 <line:71:3, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c146b10 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x14c146b90 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c146b68 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c146b30 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    |   `-StringLiteral 0x14c146ba8 <col:33> 'char[4]' lvalue "STR"
    |-IfStmt 0x14c147090 <line:74:2, line:75:38>
    | |-BinaryOperator 0x14c146f70 <line:74:6, col:58> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x14c146ea8 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14c146e70 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | | `-BinaryOperator 0x14c146f50 <col:32, col:58> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x14c146f08 <col:32, col:37> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14c146ed0 <col:32> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'
    | |   `-IntegerLiteral 0x14c146f30 <col:58> 'int' 1
    | `-CallExpr 0x14c147060 <line:75:3, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c146f90 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x14c147028 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c147000 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c146fb0 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    |   `-StringLiteral 0x14c147040 <col:33> 'char[4]' lvalue "STR"
    |-IfStmt 0x14c1479a0 <line:79:2, line:83:2>
    | |-CXXDependentScopeMemberExpr 0x14c147458 <line:79:6, col:22> '<dependent type>' contains-errors lvalue .nr
    | | `-RecoveryExpr 0x14c147430 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14c1473f8 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | `-CompoundStmt 0x14c147980 <col:26, line:83:2>
    |   |-DeclStmt 0x14c147688 <line:80:3, col:32>
    |   | |-RecordDecl 0x14c1474a0 <col:3, col:10> col:10 struct string_list_item
    |   | `-VarDecl 0x14c147608 <col:3, col:28> col:28 used item 'struct string_list_item *'
    |   `-CallExpr 0x14c147838 <line:81:3, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c147780 <col:3> 'int ()' Function 0x14c1476c8 'for_each_string_list_item' 'int ()'
    |     |-DeclRefExpr 0x14c1477a0 <col:29> 'struct string_list_item *' lvalue Var 0x14c147608 'item' 'struct string_list_item *'
    |     `-UnaryOperator 0x14c147820 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x14c1477f8 <col:36, col:41> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x14c1477c0 <col:36> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |-IfStmt 0x14c147b48 <line:84:2, line:85:43>
    | |-RecoveryExpr 0x14c1479f8 <line:84:6, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14c1479c0 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    | `-CallExpr 0x14c147b18 <line:85:3, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c147a20 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x14c147aa0 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c147a78 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c147a40 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'
    |   `-RecoveryExpr 0x14c147af0 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14c147ab8 <col:33> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'
    |-LabelStmt 0x14c147be8 <line:87:1, line:88:30> 'cleanup'
    | `-CallExpr 0x14c147bc0 <col:2, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c147b68 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'
    |   `-UnaryOperator 0x14c147ba8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c147b88 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14c147c60 <line:89:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c147c08 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'
    | `-UnaryOperator 0x14c147c48 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c147c28 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14c147cc0 <line:91:2, col:9>
      `-ImplicitCastExpr 0x14c147ca8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c147c88 <col:9> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'
