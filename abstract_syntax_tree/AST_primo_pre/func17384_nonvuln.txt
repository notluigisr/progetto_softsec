`-FunctionDecl 0x155928310  line:1:20 invalid get_hwc_palette 'void (int *, int, int *)' static inline
  |-ParmVarDecl 0x155928128 <col:36, col:48> col:48 invalid state 'int *'
  |-ParmVarDecl 0x1559281a8 <col:55, col:59> col:59 used crt 'int'
  |-ParmVarDecl 0x155928228 <col:64, col:73> col:73 referenced invalid palette 'int *'
  `-CompoundStmt 0x1560090f8 <line:2:1, line:25:1>
    |-DeclStmt 0x155928450 <line:3:5, col:10>
    | `-VarDecl 0x1559283e8 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x1560090c0 <line:7:5, line:24:5>
      |-BinaryOperator 0x1559284a8 <line:7:10, col:14> 'int' '='
      | |-DeclRefExpr 0x155928468 <col:10> 'int' lvalue Var 0x1559283e8 'i' 'int'
      | `-IntegerLiteral 0x155928488 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x155928520 <col:17, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x155928508 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1559284c8 <col:17> 'int' lvalue Var 0x1559283e8 'i' 'int'
      | `-IntegerLiteral 0x1559284e8 <col:21> 'int' 3
      |-UnaryOperator 0x155928560 <col:24, col:25> 'int' postfix '++'
      | `-DeclRefExpr 0x155928540 <col:24> 'int' lvalue Var 0x1559283e8 'i' 'int'
      `-CompoundStmt 0x1560090a0 <col:29, line:24:5>
        |-IfStmt 0x1560088a8 <line:8:9, line:14:9> has_else
        | |-BinaryOperator 0x155928610 <line:8:13, col:22> 'int' '=='
        | | |-BinaryOperator 0x1559285d0 <col:13, col:17> 'int' '+'
        | | | |-ImplicitCastExpr 0x1559285b8 <col:13> 'int' <LValueToRValue>
        | | | | `-DeclRefExpr 0x155928578 <col:13> 'int' lvalue Var 0x1559283e8 'i' 'int'
        | | | `-IntegerLiteral 0x155928598 <col:17> 'int' 1
        | | `-IntegerLiteral 0x1559285f0 <col:22> 'int' 3
        | |-CompoundStmt 0x155928750 <col:25, line:11:9>
        | `-CompoundStmt 0x156008898 <col:16, line:14:9>
        `-IfStmt 0x156008a80 <line:16:9, line:20:9> has_else
          |-BinaryOperator 0x156008970 <line:16:13, col:22> 'int' '=='
          | |-BinaryOperator 0x156008930 <col:13, col:17> 'int' '+'
          | | |-ImplicitCastExpr 0x156008918 <col:13> 'int' <LValueToRValue>
          | | | `-DeclRefExpr 0x1560088d8 <col:13> 'int' lvalue Var 0x1559283e8 'i' 'int'
          | | `-IntegerLiteral 0x1560088f8 <col:17> 'int' 1
          | `-IntegerLiteral 0x156008950 <col:22> 'int' 2
          |-CompoundStmt 0x156008a08 <col:25, line:18:9>
          `-CompoundStmt 0x156008a70 <col:16, line:20:9>
