`-FunctionDecl 0x10100ddf0  line:1:24 invalid ax25_cb_put 'void (int *)' static inline
  |-ParmVarDecl 0x10100dd28 <col:36, col:45> col:45 invalid ax25 'int *'
  `-CompoundStmt 0x10100e300 <line:2:1, line:7:1>
    `-IfStmt 0x10100e2e0 <line:3:2, line:6:2>
      |-CallExpr 0x10100e0a0 <line:3:6, col:43> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x10100e000 <col:6> 'int ()' Function 0x10100df48 'refcount_dec_and_test' 'int ()'
      | `-UnaryOperator 0x10100e088 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   `-CXXDependentScopeMemberExpr 0x10100e040 <col:29, col:35> '<dependent type>' contains-errors lvalue ->refcount
      |     `-RecoveryExpr 0x10100e020 <col:29> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x10100e2c0 <col:46, line:6:2>
        |-CallExpr 0x10100e230 <line:4:3, col:23> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x10100e1a8 <col:3> 'int ()' Function 0x10100e0f0 'kfree' 'int ()'
        | `-CXXDependentScopeMemberExpr 0x10100e1e8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->digipeat
        |   `-RecoveryExpr 0x10100e1c8 <col:9> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x10100e298 <line:5:3, col:13> '<dependent type>' contains-errors
          |-DeclRefExpr 0x10100e258 <col:3> 'int ()' Function 0x10100e0f0 'kfree' 'int ()'
          `-RecoveryExpr 0x10100e278 <col:9> '<dependent type>' contains-errors lvalue
