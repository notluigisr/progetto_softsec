`-FunctionDecl 0x14000df28  line:1:1 main 'int (int, char **)'
  |-ParmVarDecl 0x14000dcd8 <col:7, col:11> col:11 used argc 'int'
  |-ParmVarDecl 0x14000de00 <col:17, col:28> col:23 used argv 'char **'
  `-CompoundStmt 0x140026898 <line:2:1, line:8:1>
    |-CallExpr 0x14000e2e8 <line:3:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14000e150 <col:3> 'int ()' Function 0x14000e098 'g_test_init' 'int ()'
    | |-UnaryOperator 0x14000e1c0 <col:16, col:17> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x14000e170 <col:17> 'int' lvalue ParmVar 0x14000dcd8 'argc' 'int'
    | |-UnaryOperator 0x14000e260 <col:23, col:24> 'char ***' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x14000e1d8 <col:24> 'char **' lvalue ParmVar 0x14000de00 'argv' 'char **'
    | `-RecoveryExpr 0x14000e2c8 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1400266e8 <line:5:3, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140026600 <col:3> 'int ()' Function 0x14000e348 'g_test_add_func' 'int ()'
    | |-StringLiteral 0x140026660 <col:20> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x1400266c8 <col:27> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x140026888 <line:7:3, col:22>
      `-CallExpr 0x140026868 <col:10, col:22> 'int'
        `-ImplicitCastExpr 0x140026850 <col:10> 'int (*)()' <FunctionToPointerDecay>
          `-DeclRefExpr 0x1400267f8 <col:10> 'int ()' Function 0x140026740 'g_test_run' 'int ()'
