`-FunctionDecl 0x1249149b8  line:1:1 http_splitline 'int (struct worker *, int, struct http *, const struct http_conn *, int, int, int)'
  |-ParmVarDecl 0x1248fc048 <col:16, col:31> col:31 used w 'struct worker *'
  |-ParmVarDecl 0x1248fc0c8 <col:34, col:38> col:38 used fd 'int'
  |-ParmVarDecl 0x1249144c8 <col:42, col:55> col:55 used hp 'struct http *'
  |-ParmVarDecl 0x124914698 <line:2:5, col:29> col:29 used htc 'const struct http_conn *'
  |-ParmVarDecl 0x124914718 <col:34, col:38> col:38 used h1 'int'
  |-ParmVarDecl 0x124914798 <col:42, col:46> col:46 used h2 'int'
  |-ParmVarDecl 0x124914818 <col:50, col:54> col:54 used h3 'int'
  `-CompoundStmt 0x123812308 <line:3:1, line:74:1>
    |-DeclStmt 0x124914bf8 <line:4:2, col:13>
    | |-VarDecl 0x124914af8 <col:2, col:8> col:8 used p 'char *'
    | `-VarDecl 0x124914b78 <col:2, col:12> col:12 used q 'char *'
    |-CallExpr 0x124914de8 <line:6:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124914d40 <col:2> 'int ()' Function 0x124914c88 'CHECK_OBJ_NOTNULL' 'int ()'
    | |-DeclRefExpr 0x124914d60 <col:20> 'const struct http_conn *' lvalue ParmVar 0x124914698 'htc' 'const struct http_conn *'
    | `-RecoveryExpr 0x124914dc8 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x124914ec0 <line:7:2, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124914e18 <col:2> 'int ()' Function 0x124914c88 'CHECK_OBJ_NOTNULL' 'int ()'
    | |-DeclRefExpr 0x124914e38 <col:20> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | `-RecoveryExpr 0x124914ea0 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x124915050 <line:10:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124914fd0 <col:2> 'int ()' Function 0x124914f18 'Tcheck' 'int ()'
    | `-RecoveryExpr 0x124915028 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x124914ff0 <col:9> 'const struct http_conn *' lvalue ParmVar 0x124914698 'htc' 'const struct http_conn *'
    |-ForStmt 0x124915390 <line:13:2, line:14:3>
    | |-BinaryOperator 0x124915140 <line:13:7, col:22> 'char *' contains-errors '='
    | | |-DeclRefExpr 0x124915078 <col:7> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | | `-CXXDependentScopeMemberExpr 0x1249150f8 <col:11, col:22> '<dependent type>' contains-errors lvalue .b
    | |   `-RecoveryExpr 0x1249150d0 <col:11, col:16> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x124915098 <col:11> 'const struct http_conn *' lvalue ParmVar 0x124914698 'htc' 'const struct http_conn *'
    | |-<<<NULL>>>
    | |-CallExpr 0x1249152f8 <col:26, col:38> 'int'
    | | |-ImplicitCastExpr 0x1249152e0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x124915240 <col:26> 'int ()' Function 0x124915188 'vct_islws' 'int ()'
    | | `-ImplicitCastExpr 0x124915338 <col:36, col:37> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x124915320 <col:36, col:37> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x124915298 <col:36, col:37> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x124915280 <col:37> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x124915260 <col:37> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | |-UnaryOperator 0x124915370 <col:41, col:42> 'char *' postfix '++'
    | | `-DeclRefExpr 0x124915350 <col:41> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-ContinueStmt 0x124915388 <line:14:3>
    |-BinaryOperator 0x12380b238 <line:17:2, col:6> 'char *' '='
    | |-DeclRefExpr 0x1249153c8 <col:2> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    | `-ImplicitCastExpr 0x12380b220 <col:6> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12380b200 <col:6> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-ForStmt 0x12380b6b0 <line:18:2, line:21:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-UnaryOperator 0x12380b418 <line:18:9, col:21> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12380b3c0 <col:10, col:21> 'int'
    | |   |-ImplicitCastExpr 0x12380b3a8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12380b338 <col:10> 'int ()' Function 0x12380b280 'vct_issp' 'int ()'
    | |   `-ImplicitCastExpr 0x12380b400 <col:19, col:20> 'int' <IntegralCast>
    | |     `-ImplicitCastExpr 0x12380b3e8 <col:19, col:20> 'char' <LValueToRValue>
    | |       `-UnaryOperator 0x12380b390 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
    | |         `-ImplicitCastExpr 0x12380b378 <col:20> 'char *' <LValueToRValue>
    | |           `-DeclRefExpr 0x12380b358 <col:20> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | |-UnaryOperator 0x12380b450 <col:24, col:25> 'char *' postfix '++'
    | | `-DeclRefExpr 0x12380b430 <col:24> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CompoundStmt 0x12380b698 <col:29, line:21:2>
    |   `-IfStmt 0x12380b678 <line:19:3, line:20:15>
    |     |-CallExpr 0x12380b5d0 <line:19:7, col:19> 'int'
    |     | |-ImplicitCastExpr 0x12380b5b8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x12380b548 <col:7> 'int ()' Function 0x12380b490 'vct_isctl' 'int ()'
    |     | `-ImplicitCastExpr 0x12380b610 <col:17, col:18> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x12380b5f8 <col:17, col:18> 'char' <LValueToRValue>
    |     |     `-UnaryOperator 0x12380b5a0 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x12380b588 <col:18> 'char *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12380b568 <col:18> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     `-ReturnStmt 0x12380b668 <line:20:4, col:15>
    |       `-ParenExpr 0x12380b648 <col:11, col:15> 'int'
    |         `-IntegerLiteral 0x12380b628 <col:12> 'int' 400
    |-BinaryOperator 0x12380b820 <line:22:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12380b7b8 <col:2, col:13> '<dependent type>' contains-errors lvalue .b
    | | `-ArraySubscriptExpr 0x12380b798 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x12380b768 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x12380b720 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12380b6e8 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x12380b780 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12380b748 <col:9> 'int' lvalue ParmVar 0x124914718 'h1' 'int'
    | `-DeclRefExpr 0x12380b800 <col:17> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    |-BinaryOperator 0x12380b978 <line:23:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12380b910 <col:2, col:13> '<dependent type>' contains-errors lvalue .e
    | | `-ArraySubscriptExpr 0x12380b8f0 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x12380b8c0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x12380b878 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12380b840 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x12380b8d8 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12380b8a0 <col:9> 'int' lvalue ParmVar 0x124914718 'h1' 'int'
    | `-DeclRefExpr 0x12380b958 <col:17> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-ForStmt 0x12380bc18 <line:26:2, line:29:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-CallExpr 0x12380ba20 <line:26:9, col:20> 'int'
    | | |-ImplicitCastExpr 0x12380ba08 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12380b998 <col:9> 'int ()' Function 0x12380b280 'vct_issp' 'int ()'
    | | `-ImplicitCastExpr 0x12380ba60 <col:18, col:19> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12380ba48 <col:18, col:19> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12380b9f0 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x12380b9d8 <col:19> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12380b9b8 <col:19> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | |-UnaryOperator 0x12380ba98 <col:23, col:24> 'char *' postfix '++'
    | | `-DeclRefExpr 0x12380ba78 <col:23> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CompoundStmt 0x12380bc00 <col:28, line:29:2>
    |   `-IfStmt 0x12380bbe0 <line:27:3, line:28:15>
    |     |-CallExpr 0x12380bb38 <line:27:7, col:19> 'int'
    |     | |-ImplicitCastExpr 0x12380bb20 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x12380bab0 <col:7> 'int ()' Function 0x12380b490 'vct_isctl' 'int ()'
    |     | `-ImplicitCastExpr 0x12380bb78 <col:17, col:18> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x12380bb60 <col:17, col:18> 'char' <LValueToRValue>
    |     |     `-UnaryOperator 0x12380bb08 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x12380baf0 <col:18> 'char *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12380bad0 <col:18> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     `-ReturnStmt 0x12380bbd0 <line:28:4, col:15>
    |       `-ParenExpr 0x12380bbb0 <col:11, col:15> 'int'
    |         `-IntegerLiteral 0x12380bb90 <col:12> 'int' 400
    |-BinaryOperator 0x12380bca8 <line:32:2, col:6> 'char *' '='
    | |-DeclRefExpr 0x12380bc50 <col:2> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    | `-ImplicitCastExpr 0x12380bc90 <col:6> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x12380bc70 <col:6> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-ForStmt 0x12380bf60 <line:33:2, line:36:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-UnaryOperator 0x12380bda8 <line:33:9, col:22> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x12380bd50 <col:10, col:22> 'int'
    | |   |-ImplicitCastExpr 0x12380bd38 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12380bcc8 <col:10> 'int ()' Function 0x124915188 'vct_islws' 'int ()'
    | |   `-ImplicitCastExpr 0x12380bd90 <col:20, col:21> 'int' <IntegralCast>
    | |     `-ImplicitCastExpr 0x12380bd78 <col:20, col:21> 'char' <LValueToRValue>
    | |       `-UnaryOperator 0x12380bd20 <col:20, col:21> 'char' lvalue prefix '*' cannot overflow
    | |         `-ImplicitCastExpr 0x12380bd08 <col:21> 'char *' <LValueToRValue>
    | |           `-DeclRefExpr 0x12380bce8 <col:21> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | |-UnaryOperator 0x12380bde0 <col:25, col:26> 'char *' postfix '++'
    | | `-DeclRefExpr 0x12380bdc0 <col:25> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CompoundStmt 0x12380bf48 <col:30, line:36:2>
    |   `-IfStmt 0x12380bf28 <line:34:3, line:35:15>
    |     |-CallExpr 0x12380be80 <line:34:7, col:19> 'int'
    |     | |-ImplicitCastExpr 0x12380be68 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x12380bdf8 <col:7> 'int ()' Function 0x12380b490 'vct_isctl' 'int ()'
    |     | `-ImplicitCastExpr 0x12380bec0 <col:17, col:18> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x12380bea8 <col:17, col:18> 'char' <LValueToRValue>
    |     |     `-UnaryOperator 0x12380be50 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x12380be38 <col:18> 'char *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x12380be18 <col:18> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     `-ReturnStmt 0x12380bf18 <line:35:4, col:15>
    |       `-ParenExpr 0x12380bef8 <col:11, col:15> 'int'
    |         `-IntegerLiteral 0x12380bed8 <col:12> 'int' 400
    |-BinaryOperator 0x12380c0d0 <line:37:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12380c068 <col:2, col:13> '<dependent type>' contains-errors lvalue .b
    | | `-ArraySubscriptExpr 0x12380c048 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x12380c018 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x12380bfd0 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12380bf98 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x12380c030 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12380bff8 <col:9> 'int' lvalue ParmVar 0x124914798 'h2' 'int'
    | `-DeclRefExpr 0x12380c0b0 <col:17> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    |-BinaryOperator 0x123810468 <line:38:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123810400 <col:2, col:13> '<dependent type>' contains-errors lvalue .e
    | | `-ArraySubscriptExpr 0x12380c1a0 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x12380c170 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x12380c128 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12380c0f0 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x12380c188 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12380c150 <col:9> 'int' lvalue ParmVar 0x124914798 'h2' 'int'
    | `-DeclRefExpr 0x123810448 <col:17> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-IfStmt 0x1238106e8 <line:40:2, line:41:14>
    | |-UnaryOperator 0x123810680 <line:40:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x123810658 <col:7, col:22> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x123810568 <col:7> 'int ()' Function 0x1238104b0 'Tlen' 'int ()'
    | |   `-ArraySubscriptExpr 0x123810638 <col:12, col:21> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x123810608 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x1238105c0 <col:12, col:16> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x123810588 <col:12> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |     `-ImplicitCastExpr 0x123810620 <col:19> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x1238105e8 <col:19> 'int' lvalue ParmVar 0x124914798 'h2' 'int'
    | `-ReturnStmt 0x1238106d8 <line:41:3, col:14>
    |   `-ParenExpr 0x1238106b8 <col:10, col:14> 'int'
    |     `-IntegerLiteral 0x123810698 <col:11> 'int' 400
    |-ForStmt 0x123810988 <line:44:2, line:47:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-CallExpr 0x123810790 <line:44:9, col:20> 'int'
    | | |-ImplicitCastExpr 0x123810778 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x123810708 <col:9> 'int ()' Function 0x12380b280 'vct_issp' 'int ()'
    | | `-ImplicitCastExpr 0x1238107d0 <col:18, col:19> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1238107b8 <col:18, col:19> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x123810760 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x123810748 <col:19> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x123810728 <col:19> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | |-UnaryOperator 0x123810808 <col:23, col:24> 'char *' postfix '++'
    | | `-DeclRefExpr 0x1238107e8 <col:23> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CompoundStmt 0x123810970 <col:28, line:47:2>
    |   `-IfStmt 0x123810950 <line:45:3, line:46:15>
    |     |-CallExpr 0x1238108a8 <line:45:7, col:19> 'int'
    |     | |-ImplicitCastExpr 0x123810890 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x123810820 <col:7> 'int ()' Function 0x12380b490 'vct_isctl' 'int ()'
    |     | `-ImplicitCastExpr 0x1238108e8 <col:17, col:18> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x1238108d0 <col:17, col:18> 'char' <LValueToRValue>
    |     |     `-UnaryOperator 0x123810878 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
    |     |       `-ImplicitCastExpr 0x123810860 <col:18> 'char *' <LValueToRValue>
    |     |         `-DeclRefExpr 0x123810840 <col:18> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     `-ReturnStmt 0x123810940 <line:46:4, col:15>
    |       `-ParenExpr 0x123810920 <col:11, col:15> 'int'
    |         `-IntegerLiteral 0x123810900 <col:12> 'int' 400
    |-BinaryOperator 0x123810a18 <line:50:2, col:6> 'char *' '='
    | |-DeclRefExpr 0x1238109c0 <col:2> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    | `-ImplicitCastExpr 0x123810a00 <col:6> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1238109e0 <col:6> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-IfStmt 0x1238110d8 <line:51:2, line:55:2>
    | |-UnaryOperator 0x123810bf8 <line:51:6, col:20> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x123810ba0 <col:7, col:20> 'int'
    | |   |-ImplicitCastExpr 0x123810b88 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x123810b18 <col:7> 'int ()' Function 0x123810a60 'vct_iscrlf' 'int ()'
    | |   `-ImplicitCastExpr 0x123810be0 <col:18, col:19> 'int' <IntegralCast>
    | |     `-ImplicitCastExpr 0x123810bc8 <col:18, col:19> 'char' <LValueToRValue>
    | |       `-UnaryOperator 0x123810b70 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
    | |         `-ImplicitCastExpr 0x123810b58 <col:19> 'char *' <LValueToRValue>
    | |           `-DeclRefExpr 0x123810b38 <col:19> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CompoundStmt 0x1238110c0 <col:23, line:55:2>
    |   `-ForStmt 0x123811088 <line:52:3, line:54:16>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-UnaryOperator 0x123810cf0 <line:52:10, col:24> 'int' prefix '!' cannot overflow
    |     | `-CallExpr 0x123810c98 <col:11, col:24> 'int'
    |     |   |-ImplicitCastExpr 0x123810c80 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x123810c10 <col:11> 'int ()' Function 0x123810a60 'vct_iscrlf' 'int ()'
    |     |   `-ImplicitCastExpr 0x123810cd8 <col:22, col:23> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x123810cc0 <col:22, col:23> 'char' <LValueToRValue>
    |     |       `-UnaryOperator 0x123810c68 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow
    |     |         `-ImplicitCastExpr 0x123810c50 <col:23> 'char *' <LValueToRValue>
    |     |           `-DeclRefExpr 0x123810c30 <col:23> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     |-UnaryOperator 0x123810d28 <col:27, col:28> 'char *' postfix '++'
    |     | `-DeclRefExpr 0x123810d08 <col:27> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |     `-IfStmt 0x123811068 <line:53:4, line:54:16>
    |       |-BinaryOperator 0x123810ff8 <line:53:8, col:38> 'int' '&&'
    |       | |-UnaryOperator 0x123810f00 <col:8, col:21> 'int' prefix '!' cannot overflow
    |       | | `-CallExpr 0x123810ea8 <col:9, col:21> 'int'
    |       | |   |-ImplicitCastExpr 0x123810e90 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | |   | `-DeclRefExpr 0x123810e20 <col:9> 'int ()' Function 0x123810d68 'vct_issep' 'int ()'
    |       | |   `-ImplicitCastExpr 0x123810ee8 <col:19, col:20> 'int' <IntegralCast>
    |       | |     `-ImplicitCastExpr 0x123810ed0 <col:19, col:20> 'char' <LValueToRValue>
    |       | |       `-UnaryOperator 0x123810e78 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow
    |       | |         `-ImplicitCastExpr 0x123810e60 <col:20> 'char *' <LValueToRValue>
    |       | |           `-DeclRefExpr 0x123810e40 <col:20> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |       | `-CallExpr 0x123810fa0 <col:26, col:38> 'int'
    |       |   |-ImplicitCastExpr 0x123810f88 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x123810f18 <col:26> 'int ()' Function 0x12380b490 'vct_isctl' 'int ()'
    |       |   `-ImplicitCastExpr 0x123810fe0 <col:36, col:37> 'int' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x123810fc8 <col:36, col:37> 'char' <LValueToRValue>
    |       |       `-UnaryOperator 0x123810f70 <col:36, col:37> 'char' lvalue prefix '*' cannot overflow
    |       |         `-ImplicitCastExpr 0x123810f58 <col:37> 'char *' <LValueToRValue>
    |       |           `-DeclRefExpr 0x123810f38 <col:37> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |       `-ReturnStmt 0x123811058 <line:54:5, col:16>
    |         `-ParenExpr 0x123811038 <col:12, col:16> 'int'
    |           `-IntegerLiteral 0x123811018 <col:13> 'int' 400
    |-BinaryOperator 0x123811230 <line:56:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1238111c8 <col:2, col:13> '<dependent type>' contains-errors lvalue .b
    | | `-ArraySubscriptExpr 0x1238111a8 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x123811178 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x123811130 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x1238110f8 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x123811190 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x123811158 <col:9> 'int' lvalue ParmVar 0x124914818 'h3' 'int'
    | `-DeclRefExpr 0x123811210 <col:17> 'char *' lvalue Var 0x124914b78 'q' 'char *'
    |-BinaryOperator 0x123811388 <line:57:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x123811320 <col:2, col:13> '<dependent type>' contains-errors lvalue .e
    | | `-ArraySubscriptExpr 0x123811300 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1238112d0 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x123811288 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x123811250 <col:2> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |   `-ImplicitCastExpr 0x1238112e8 <col:9> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1238112b0 <col:9> 'int' lvalue ParmVar 0x124914818 'h3' 'int'
    | `-DeclRefExpr 0x123811368 <col:17> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-CompoundAssignOperator 0x123811550 <line:60:2, col:21> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    | |-DeclRefExpr 0x1238113a8 <col:2> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    | `-CallExpr 0x123811510 <col:7, col:21> 'int'
    |   |-ImplicitCastExpr 0x1238114f8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1238114b8 <col:7> 'int ()' Function 0x123811400 'vct_skipcrlf' 'int ()'
    |   `-ImplicitCastExpr 0x123811538 <col:20> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x1238114d8 <col:20> 'char *' lvalue Var 0x124914af8 'p' 'char *'
    |-BinaryOperator 0x1238116e0 <line:62:2, col:18> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x1238116b0 <col:2, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x123811698 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x123811650 <col:3, col:14> '<dependent type>' contains-errors lvalue .e
    | |     `-ArraySubscriptExpr 0x123811630 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x123811600 <col:3, col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-RecoveryExpr 0x1238115b8 <col:3, col:7> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x123811580 <col:3> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |       `-ImplicitCastExpr 0x123811618 <col:10> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x1238115e0 <col:10> 'int' lvalue ParmVar 0x124914718 'h1' 'int'
    | `-CharacterLiteral 0x1238116c8 <col:18> 'int' 0
    |-CallExpr 0x123811898 <line:63:2, col:20> 'int'
    | |-ImplicitCastExpr 0x123811880 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1238117e0 <col:2> 'int ()' Function 0x123811728 'WSLH' 'int ()'
    | |-ImplicitCastExpr 0x1238118d8 <col:7> 'struct worker *' <LValueToRValue>
    | | `-DeclRefExpr 0x123811800 <col:7> 'struct worker *' lvalue ParmVar 0x1248fc048 'w' 'struct worker *'
    | |-ImplicitCastExpr 0x1238118f0 <col:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123811820 <col:10> 'int' lvalue ParmVar 0x1248fc0c8 'fd' 'int'
    | |-ImplicitCastExpr 0x123811908 <col:14> 'struct http *' <LValueToRValue>
    | | `-DeclRefExpr 0x123811840 <col:14> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | `-ImplicitCastExpr 0x123811920 <col:18> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x123811860 <col:18> 'int' lvalue ParmVar 0x124914718 'h1' 'int'
    |-BinaryOperator 0x123811a98 <line:65:2, col:18> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x123811a68 <col:2, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x123811a50 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x123811a08 <col:3, col:14> '<dependent type>' contains-errors lvalue .e
    | |     `-ArraySubscriptExpr 0x1238119e8 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | |       |-ImplicitCastExpr 0x1238119b8 <col:3, col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |       | `-RecoveryExpr 0x123811970 <col:3, col:7> '<dependent type>' contains-errors lvalue
    | |       |   `-DeclRefExpr 0x123811938 <col:3> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | |       `-ImplicitCastExpr 0x1238119d0 <col:10> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x123811998 <col:10> 'int' lvalue ParmVar 0x124914798 'h2' 'int'
    | `-CharacterLiteral 0x123811a80 <col:18> 'int' 0
    |-CallExpr 0x123811b70 <line:66:2, col:20> 'int'
    | |-ImplicitCastExpr 0x123811b58 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x123811ab8 <col:2> 'int ()' Function 0x123811728 'WSLH' 'int ()'
    | |-ImplicitCastExpr 0x123811bb0 <col:7> 'struct worker *' <LValueToRValue>
    | | `-DeclRefExpr 0x123811ad8 <col:7> 'struct worker *' lvalue ParmVar 0x1248fc048 'w' 'struct worker *'
    | |-ImplicitCastExpr 0x123811bc8 <col:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x123811af8 <col:10> 'int' lvalue ParmVar 0x1248fc0c8 'fd' 'int'
    | |-ImplicitCastExpr 0x123811be0 <col:14> 'struct http *' <LValueToRValue>
    | | `-DeclRefExpr 0x123811b18 <col:14> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    | `-ImplicitCastExpr 0x123811bf8 <col:18> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x123811b38 <col:18> 'int' lvalue ParmVar 0x124914798 'h2' 'int'
    |-IfStmt 0x123812040 <line:68:2, line:71:2>
    | |-RecoveryExpr 0x123811d28 <line:68:6, col:22> '_Bool' contains-errors
    | `-CompoundStmt 0x123812020 <col:28, line:71:2>
    |   |-BinaryOperator 0x123811ea8 <line:69:3, col:19> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x123811e78 <col:3, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x123811e60 <col:4, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-CXXDependentScopeMemberExpr 0x123811e18 <col:4, col:15> '<dependent type>' contains-errors lvalue .e
    |   | |     `-ArraySubscriptExpr 0x123811df8 <col:4, col:13> '<dependent type>' contains-errors lvalue
    |   | |       |-ImplicitCastExpr 0x123811dc8 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       | `-RecoveryExpr 0x123811d80 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |   | |       |   `-DeclRefExpr 0x123811d48 <col:4> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    |   | |       `-ImplicitCastExpr 0x123811de0 <col:11> 'int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x123811da8 <col:11> 'int' lvalue ParmVar 0x124914818 'h3' 'int'
    |   | `-CharacterLiteral 0x123811e90 <col:19> 'int' 0
    |   `-CallExpr 0x123811f80 <line:70:3, col:21> 'int'
    |     |-ImplicitCastExpr 0x123811f68 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123811ec8 <col:3> 'int ()' Function 0x123811728 'WSLH' 'int ()'
    |     |-ImplicitCastExpr 0x123811fc0 <col:8> 'struct worker *' <LValueToRValue>
    |     | `-DeclRefExpr 0x123811ee8 <col:8> 'struct worker *' lvalue ParmVar 0x1248fc048 'w' 'struct worker *'
    |     |-ImplicitCastExpr 0x123811fd8 <col:11> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x123811f08 <col:11> 'int' lvalue ParmVar 0x1248fc0c8 'fd' 'int'
    |     |-ImplicitCastExpr 0x123811ff0 <col:15> 'struct http *' <LValueToRValue>
    |     | `-DeclRefExpr 0x123811f28 <col:15> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
    |     `-ImplicitCastExpr 0x123812008 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x123811f48 <col:19> 'int' lvalue ParmVar 0x124914818 'h3' 'int'
    `-ReturnStmt 0x1238122f8 <line:73:2, col:46>
      `-ParenExpr 0x1238122d8 <col:9, col:46> 'int'
        `-CallExpr 0x123812218 <col:10, col:45> 'int'
          |-ImplicitCastExpr 0x123812200 <col:10> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x123812140 <col:10> 'int ()' Function 0x123812088 'http_dissect_hdrs' 'int ()'
          |-ImplicitCastExpr 0x123812260 <col:28> 'struct worker *' <LValueToRValue>
          | `-DeclRefExpr 0x123812160 <col:28> 'struct worker *' lvalue ParmVar 0x1248fc048 'w' 'struct worker *'
          |-ImplicitCastExpr 0x123812278 <col:31> 'struct http *' <LValueToRValue>
          | `-DeclRefExpr 0x123812180 <col:31> 'struct http *' lvalue ParmVar 0x1249144c8 'hp' 'struct http *'
          |-ImplicitCastExpr 0x123812290 <col:35> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x1238121a0 <col:35> 'int' lvalue ParmVar 0x1248fc0c8 'fd' 'int'
          |-ImplicitCastExpr 0x1238122a8 <col:39> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x1238121c0 <col:39> 'char *' lvalue Var 0x124914af8 'p' 'char *'
          `-ImplicitCastExpr 0x1238122c0 <col:42> 'const struct http_conn *' <LValueToRValue>
            `-DeclRefExpr 0x1238121e0 <col:42> 'const struct http_conn *' lvalue ParmVar 0x124914698 'htc' 'const struct http_conn *'
