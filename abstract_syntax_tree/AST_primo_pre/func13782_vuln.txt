`-FunctionDecl 0x14d8082d8  line:1:1 invalid state_index 'int (struct dfa *, const int *, int)'
  |-ParmVarDecl 0x14d128e48 <col:14, col:26> col:26 used d 'struct dfa *'
  |-ParmVarDecl 0x14d128ee0 <col:29, col:49> col:49 invalid s 'const int *'
  |-ParmVarDecl 0x14d128f60 <col:52, col:56> col:56 used context 'int'
  `-CompoundStmt 0x14d143d18 <line:2:1, line:57:1>
    |-DeclStmt 0x14d808438 <line:3:3, col:15>
    | `-VarDecl 0x14d8083b0 <col:3, col:14> col:7 used hash 'int' cinit
    |   `-IntegerLiteral 0x14d808418 <col:14> 'int' 0
    |-DeclStmt 0x14d8084d0 <line:4:3, col:17>
    | `-VarDecl 0x14d808468 <col:3, col:7> col:7 used constraint 'int'
    |-DeclStmt 0x14d808600 <line:5:3, col:11>
    | |-VarDecl 0x14d808500 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x14d808580 <col:3, col:10> col:10 used j 'int'
    |-ForStmt 0x14d808a08 <line:7:3, line:8:45>
    | |-BinaryOperator 0x14d808658 <line:7:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14d808618 <col:8> 'int' lvalue Var 0x14d808500 'i' 'int'
    | | `-IntegerLiteral 0x14d808638 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d808700 <col:15, col:22> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d808678 <col:15> 'int' lvalue Var 0x14d808500 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x14d8086b8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->nelem
    | |   `-RecoveryExpr 0x14d808698 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14d808740 <col:29, col:31> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d808720 <col:31> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-CompoundAssignOperator 0x14d8089d8 <line:8:5, col:45> 'int' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x14d808758 <col:5> 'int' lvalue Var 0x14d8083b0 'hash' 'int'
    |   `-BinaryOperator 0x14d8089b8 <col:13, col:45> '<dependent type>' contains-errors '+'
    |     |-CXXDependentScopeMemberExpr 0x14d808850 <col:13, col:25> '<dependent type>' contains-errors lvalue .index
    |     | `-ArraySubscriptExpr 0x14d808830 <col:13, col:23> '<dependent type>' contains-errors lvalue
    |     |   |-ImplicitCastExpr 0x14d808800 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | `-CXXDependentScopeMemberExpr 0x14d808798 <col:13, col:16> '<dependent type>' contains-errors lvalue ->elems
    |     |   |   `-RecoveryExpr 0x14d808778 <col:13> '<dependent type>' contains-errors lvalue
    |     |   `-ImplicitCastExpr 0x14d808818 <col:22> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x14d8087e0 <col:22> 'int' lvalue Var 0x14d808500 'i' 'int'
    |     `-CXXDependentScopeMemberExpr 0x14d808970 <col:33, col:45> '<dependent type>' contains-errors lvalue .constraint
    |       `-ArraySubscriptExpr 0x14d808950 <col:33, col:43> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x14d808920 <col:33, col:36> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-CXXDependentScopeMemberExpr 0x14d8088b8 <col:33, col:36> '<dependent type>' contains-errors lvalue ->elems
    |         |   `-RecoveryExpr 0x14d808898 <col:33> '<dependent type>' contains-errors lvalue
    |         `-ImplicitCastExpr 0x14d808938 <col:42> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x14d808900 <col:42> 'int' lvalue Var 0x14d808500 'i' 'int'
    |-ForStmt 0x14d80a448 <line:11:3, line:23:5>
    | |-BinaryOperator 0x14d808a80 <line:11:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14d808a40 <col:8> 'int' lvalue Var 0x14d808500 'i' 'int'
    | | `-IntegerLiteral 0x14d808a60 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d808b20 <col:15, col:22> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d808aa0 <col:15> 'int' lvalue Var 0x14d808500 'i' 'int'
    | | `-RecoveryExpr 0x14d808af8 <col:19, col:22> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d808ac0 <col:19> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |-UnaryOperator 0x14d808b60 <col:30, col:32> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d808b40 <col:32> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-CompoundStmt 0x14d80a420 <line:12:5, line:23:5>
    |   |-IfStmt 0x14d809058 <line:13:7, line:15:9>
    |   | |-BinaryOperator 0x14d809030 <line:13:11, line:14:38> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x14d808eb8 <line:13:11, col:71> 'int' contains-errors '||'
    |   | | | |-BinaryOperator 0x14d808cb0 <col:11, col:32> 'int' contains-errors '!='
    |   | | | | |-DeclRefExpr 0x14d808b78 <col:11> 'int' lvalue Var 0x14d8083b0 'hash' 'int'
    |   | | | | `-CXXDependentScopeMemberExpr 0x14d808c68 <col:19, col:32> '<dependent type>' contains-errors lvalue .hash
    |   | | | |   `-ArraySubscriptExpr 0x14d808c48 <col:19, col:30> '<dependent type>' contains-errors lvalue
    |   | | | |     |-ImplicitCastExpr 0x14d808c18 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | |     | `-RecoveryExpr 0x14d808bd0 <col:19, col:22> '<dependent type>' contains-errors lvalue
    |   | | | |     |   `-DeclRefExpr 0x14d808b98 <col:19> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   | | | |     `-ImplicitCastExpr 0x14d808c30 <col:29> 'int' <LValueToRValue>
    |   | | | |       `-DeclRefExpr 0x14d808bf8 <col:29> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   | | | `-BinaryOperator 0x14d808e98 <col:40, col:71> 'int' contains-errors '!='
    |   | | |   |-CXXDependentScopeMemberExpr 0x14d808cf0 <col:40, col:43> '<dependent type>' contains-errors lvalue ->nelem
    |   | | |   | `-RecoveryExpr 0x14d808cd0 <col:40> '<dependent type>' contains-errors lvalue
    |   | | |   `-CXXDependentScopeMemberExpr 0x14d808e50 <col:52, col:71> '<dependent type>' contains-errors lvalue .nelem
    |   | | |     `-CXXDependentScopeMemberExpr 0x14d808e08 <col:52, col:65> '<dependent type>' contains-errors lvalue .elems
    |   | | |       `-ArraySubscriptExpr 0x14d808de8 <col:52, col:63> '<dependent type>' contains-errors lvalue
    |   | | |         |-ImplicitCastExpr 0x14d808db8 <col:52, col:55> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |         | `-RecoveryExpr 0x14d808d70 <col:52, col:55> '<dependent type>' contains-errors lvalue
    |   | | |         |   `-DeclRefExpr 0x14d808d38 <col:52> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   | | |         `-ImplicitCastExpr 0x14d808dd0 <col:62> 'int' <LValueToRValue>
    |   | | |           `-DeclRefExpr 0x14d808d98 <col:62> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   | | `-BinaryOperator 0x14d809010 <line:14:14, col:38> 'int' contains-errors '!='
    |   | |   |-DeclRefExpr 0x14d808ed8 <col:14> 'int' lvalue ParmVar 0x14d128f60 'context' 'int'
    |   | |   `-CXXDependentScopeMemberExpr 0x14d808fc8 <col:25, col:38> '<dependent type>' contains-errors lvalue .context
    |   | |     `-ArraySubscriptExpr 0x14d808fa8 <col:25, col:36> '<dependent type>' contains-errors lvalue
    |   | |       |-ImplicitCastExpr 0x14d808f78 <col:25, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       | `-RecoveryExpr 0x14d808f30 <col:25, col:28> '<dependent type>' contains-errors lvalue
    |   | |       |   `-DeclRefExpr 0x14d808ef8 <col:25> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   | |       `-ImplicitCastExpr 0x14d808f90 <col:35> 'int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14d808f58 <col:35> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   | `-ContinueStmt 0x14d809050 <line:15:9>
    |   |-ForStmt 0x14d80a2d8 <line:16:7, line:20:11>
    |   | |-BinaryOperator 0x14d8090b8 <line:16:12, col:16> 'int' '='
    |   | | |-DeclRefExpr 0x14d809078 <col:12> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   | | `-IntegerLiteral 0x14d809098 <col:16> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x14d809160 <col:19, col:26> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x14d8090d8 <col:19> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x14d809118 <col:23, col:26> '<dependent type>' contains-errors lvalue ->nelem
    |   | |   `-RecoveryExpr 0x14d8090f8 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14d8091a0 <col:33, col:35> 'int' prefix '++'
    |   | | `-DeclRefExpr 0x14d809180 <col:35> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   | `-IfStmt 0x14d80a2b8 <line:17:9, line:20:11>
    |   |   |-BinaryOperator 0x14d80a290 <line:17:13, line:19:65> 'int' contains-errors '||'
    |   |   | |-BinaryOperator 0x14d809f18 <line:17:13, line:18:44> 'int' contains-errors '!='
    |   |   | | |-CXXDependentScopeMemberExpr 0x14d809cb8 <line:17:13, col:25> '<dependent type>' contains-errors lvalue .constraint
    |   |   | | | `-ArraySubscriptExpr 0x14d809c98 <col:13, col:23> '<dependent type>' contains-errors lvalue
    |   |   | | |   |-ImplicitCastExpr 0x14d809c68 <col:13, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | |   | `-CXXDependentScopeMemberExpr 0x14d809c00 <col:13, col:16> '<dependent type>' contains-errors lvalue ->elems
    |   |   | | |   |   `-RecoveryExpr 0x14d8091b8 <col:13> '<dependent type>' contains-errors lvalue
    |   |   | | |   `-ImplicitCastExpr 0x14d809c80 <col:22> 'int' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x14d809c48 <col:22> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   |   | | `-CXXDependentScopeMemberExpr 0x14d809ed0 <line:18:16, col:44> '<dependent type>' contains-errors lvalue .constraint
    |   |   | |   `-ArraySubscriptExpr 0x14d809eb0 <col:16, col:42> '<dependent type>' contains-errors lvalue
    |   |   | |     |-ImplicitCastExpr 0x14d809e80 <col:16, col:35> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |     | `-CXXDependentScopeMemberExpr 0x14d809e18 <col:16, col:35> '<dependent type>' contains-errors lvalue .elems
    |   |   | |     |   `-CXXDependentScopeMemberExpr 0x14d809dd0 <col:16, col:29> '<dependent type>' contains-errors lvalue .elems
    |   |   | |     |     `-ArraySubscriptExpr 0x14d809db0 <col:16, col:27> '<dependent type>' contains-errors lvalue
    |   |   | |     |       |-ImplicitCastExpr 0x14d809d80 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | |     |       | `-RecoveryExpr 0x14d809d38 <col:16, col:19> '<dependent type>' contains-errors lvalue
    |   |   | |     |       |   `-DeclRefExpr 0x14d809d00 <col:16> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   |   | |     |       `-ImplicitCastExpr 0x14d809d98 <col:26> 'int' <LValueToRValue>
    |   |   | |     |         `-DeclRefExpr 0x14d809d60 <col:26> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   |   | |     `-ImplicitCastExpr 0x14d809e98 <col:41> 'int' <LValueToRValue>
    |   |   | |       `-DeclRefExpr 0x14d809e60 <col:41> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   |   | `-BinaryOperator 0x14d80a270 <line:19:16, col:65> 'int' contains-errors '!='
    |   |   |   |-CXXDependentScopeMemberExpr 0x14d80a010 <col:16, col:28> '<dependent type>' contains-errors lvalue .index
    |   |   |   | `-ArraySubscriptExpr 0x14d809ff0 <col:16, col:26> '<dependent type>' contains-errors lvalue
    |   |   |   |   |-ImplicitCastExpr 0x14d809fc0 <col:16, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   |   | `-CXXDependentScopeMemberExpr 0x14d809f58 <col:16, col:19> '<dependent type>' contains-errors lvalue ->elems
    |   |   |   |   |   `-RecoveryExpr 0x14d809f38 <col:16> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-ImplicitCastExpr 0x14d809fd8 <col:25> 'int' <LValueToRValue>
    |   |   |   |     `-DeclRefExpr 0x14d809fa0 <col:25> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   |   |   `-CXXDependentScopeMemberExpr 0x14d80a228 <col:37, col:65> '<dependent type>' contains-errors lvalue .index
    |   |   |     `-ArraySubscriptExpr 0x14d80a208 <col:37, col:63> '<dependent type>' contains-errors lvalue
    |   |   |       |-ImplicitCastExpr 0x14d80a1d8 <col:37, col:56> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       | `-CXXDependentScopeMemberExpr 0x14d80a170 <col:37, col:56> '<dependent type>' contains-errors lvalue .elems
    |   |   |       |   `-CXXDependentScopeMemberExpr 0x14d80a128 <col:37, col:50> '<dependent type>' contains-errors lvalue .elems
    |   |   |       |     `-ArraySubscriptExpr 0x14d80a108 <col:37, col:48> '<dependent type>' contains-errors lvalue
    |   |   |       |       |-ImplicitCastExpr 0x14d80a0d8 <col:37, col:40> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       |       | `-RecoveryExpr 0x14d80a090 <col:37, col:40> '<dependent type>' contains-errors lvalue
    |   |   |       |       |   `-DeclRefExpr 0x14d80a058 <col:37> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   |   |       |       `-ImplicitCastExpr 0x14d80a0f0 <col:47> 'int' <LValueToRValue>
    |   |   |       |         `-DeclRefExpr 0x14d80a0b8 <col:47> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   |   |       `-ImplicitCastExpr 0x14d80a1f0 <col:62> 'int' <LValueToRValue>
    |   |   |         `-DeclRefExpr 0x14d80a1b8 <col:62> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   |   `-BreakStmt 0x14d80a2b0 <line:20:11>
    |   `-IfStmt 0x14d80a400 <line:21:7, line:22:16>
    |     |-BinaryOperator 0x14d80a398 <line:21:11, col:19> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x14d80a310 <col:11> 'int' lvalue Var 0x14d808580 'j' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x14d80a350 <col:16, col:19> '<dependent type>' contains-errors lvalue ->nelem
    |     |   `-RecoveryExpr 0x14d80a330 <col:16> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x14d80a3f0 <line:22:9, col:16>
    |       `-ImplicitCastExpr 0x14d80a3d8 <col:16> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x14d80a3b8 <col:16> 'int' lvalue Var 0x14d808500 'i' 'int'
    |-CallExpr 0x14d80a760 <line:26:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80a5e0 <col:3> 'int ()' Function 0x14d80a528 'REALLOC_IF_NECESSARY' 'int ()'
    | |-RecoveryExpr 0x14d80a638 <col:24, col:27> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d80a600 <col:24> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |-RecoveryExpr 0x14d80a698 <col:35, col:38> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d80a660 <col:35> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | `-BinaryOperator 0x14d80a740 <col:46, col:58> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x14d80a6f8 <col:46, col:49> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14d80a6c0 <col:46> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   `-IntegerLiteral 0x14d80a720 <col:58> 'int' 1
    |-BinaryOperator 0x14d80a8d0 <line:27:3, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d80a868 <col:3, col:16> '<dependent type>' contains-errors lvalue .hash
    | | `-ArraySubscriptExpr 0x14d80a848 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14d80a818 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14d80a7d0 <col:3, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14d80a798 <col:3> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |   `-ImplicitCastExpr 0x14d80a830 <col:13> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d80a7f8 <col:13> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-DeclRefExpr 0x14d80a8b0 <col:23> 'int' lvalue Var 0x14d8083b0 'hash' 'int'
    |-CallExpr 0x14d80ab88 <line:28:3, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80a9d0 <col:3> 'int ()' Function 0x14d80a918 'alloc_position_set' 'int ()'
    | |-UnaryOperator 0x14d80ab08 <col:22, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x14d80aac0 <col:23, col:36> '<dependent type>' contains-errors lvalue .elems
    | |   `-ArraySubscriptExpr 0x14d80aaa0 <col:23, col:34> '<dependent type>' contains-errors lvalue
    | |     |-ImplicitCastExpr 0x14d80aa70 <col:23, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | |     | `-RecoveryExpr 0x14d80aa28 <col:23, col:26> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x14d80a9f0 <col:23> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |     `-ImplicitCastExpr 0x14d80aa88 <col:33> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x14d80aa50 <col:33> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-CXXDependentScopeMemberExpr 0x14d80ab40 <col:43, col:46> '<dependent type>' contains-errors lvalue ->nelem
    |   `-RecoveryExpr 0x14d80ab20 <col:43> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d142228 <line:29:3, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d1420b8 <col:3> 'int ()' Function 0x14d142000 'copy' 'int ()'
    | |-RecoveryExpr 0x14d1420d8 <col:8> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x14d142210 <col:11, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14d1421c8 <col:12, col:25> '<dependent type>' contains-errors lvalue .elems
    |     `-ArraySubscriptExpr 0x14d1421a8 <col:12, col:23> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x14d142178 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x14d142130 <col:12, col:15> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x14d1420f8 <col:12> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |       `-ImplicitCastExpr 0x14d142190 <col:22> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x14d142158 <col:22> 'int' lvalue Var 0x14d808500 'i' 'int'
    |-BinaryOperator 0x14d142390 <line:30:3, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d142328 <col:3, col:16> '<dependent type>' contains-errors lvalue .context
    | | `-ArraySubscriptExpr 0x14d142308 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14d1422d8 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14d142290 <col:3, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14d142258 <col:3> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |   `-ImplicitCastExpr 0x14d1422f0 <col:13> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d1422b8 <col:13> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-DeclRefExpr 0x14d142370 <col:26> 'int' lvalue ParmVar 0x14d128f60 'context' 'int'
    |-BinaryOperator 0x14d1424e8 <line:31:3, col:26> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d142480 <col:3, col:16> '<dependent type>' contains-errors lvalue .backref
    | | `-ArraySubscriptExpr 0x14d142460 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14d142430 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14d1423e8 <col:3, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14d1423b0 <col:3> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |   `-ImplicitCastExpr 0x14d142448 <col:13> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d142410 <col:13> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-IntegerLiteral 0x14d1424c8 <col:26> 'int' 0
    |-BinaryOperator 0x14d142640 <line:32:3, col:29> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d1425d8 <col:3, col:16> '<dependent type>' contains-errors lvalue .constraint
    | | `-ArraySubscriptExpr 0x14d1425b8 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14d142588 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14d142540 <col:3, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14d142508 <col:3> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |   `-ImplicitCastExpr 0x14d1425a0 <col:13> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d142568 <col:13> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-IntegerLiteral 0x14d142620 <col:29> 'int' 0
    |-BinaryOperator 0x14d142798 <line:33:3, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d142730 <col:3, col:16> '<dependent type>' contains-errors lvalue .first_end
    | | `-ArraySubscriptExpr 0x14d142710 <col:3, col:14> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x14d1426e0 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   | `-RecoveryExpr 0x14d142698 <col:3, col:6> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x14d142660 <col:3> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    | |   `-ImplicitCastExpr 0x14d1426f8 <col:13> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d1426c0 <col:13> 'int' lvalue Var 0x14d808500 'i' 'int'
    | `-IntegerLiteral 0x14d142778 <col:28> 'int' 0
    |-IfStmt 0x14d142af0 <line:34:3, line:38:5>
    | |-RecoveryExpr 0x14d1427b8 <line:34:7> '_Bool' contains-errors
    | `-CompoundStmt 0x14d142ad8 <line:35:5, line:38:5>
    |   `-BinaryOperator 0x14d142958 <line:36:7, col:33> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x14d1428f0 <col:7, col:25> '<dependent type>' contains-errors lvalue .nelem
    |     | `-CXXDependentScopeMemberExpr 0x14d1428a8 <col:7, col:20> '<dependent type>' contains-errors lvalue .mbps
    |     |   `-ArraySubscriptExpr 0x14d142888 <col:7, col:18> '<dependent type>' contains-errors lvalue
    |     |     |-ImplicitCastExpr 0x14d142858 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |     |     | `-RecoveryExpr 0x14d142810 <col:7, col:10> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x14d1427d8 <col:7> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |     |     `-ImplicitCastExpr 0x14d142870 <col:17> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x14d142838 <col:17> 'int' lvalue Var 0x14d808500 'i' 'int'
    |     `-IntegerLiteral 0x14d142938 <col:33> 'int' 0
    |-ForStmt 0x14d143c20 <line:39:3, line:52:7>
    | |-BinaryOperator 0x14d142b50 <line:39:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14d142b10 <col:8> 'int' lvalue Var 0x14d808580 'j' 'int'
    | | `-IntegerLiteral 0x14d142b30 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d142bf8 <col:15, col:22> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d142b70 <col:15> 'int' lvalue Var 0x14d808580 'j' 'int'
    | | `-CXXDependentScopeMemberExpr 0x14d142bb0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->nelem
    | |   `-RecoveryExpr 0x14d142b90 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14d142c38 <col:29, col:31> 'int' prefix '++'
    | | `-DeclRefExpr 0x14d142c18 <col:31> 'int' lvalue Var 0x14d808580 'j' 'int'
    | `-IfStmt 0x14d143bf0 <line:40:5, line:52:7> has_else
    |   |-BinaryOperator 0x14d142e40 <line:40:9, col:40> 'int' contains-errors '<'
    |   | |-ArraySubscriptExpr 0x14d142e00 <col:9, col:36> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x14d142dd0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-RecoveryExpr 0x14d142c88 <col:9, col:12> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x14d142c50 <col:9> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   | | `-ImplicitCastExpr 0x14d142de8 <col:19, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-CXXDependentScopeMemberExpr 0x14d142d88 <col:19, col:31> '<dependent type>' contains-errors lvalue .index
    |   | |     `-ArraySubscriptExpr 0x14d142d68 <col:19, col:29> '<dependent type>' contains-errors lvalue
    |   | |       |-ImplicitCastExpr 0x14d142d38 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |   | |       | `-CXXDependentScopeMemberExpr 0x14d142cd0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->elems
    |   | |       |   `-RecoveryExpr 0x14d142cb0 <col:19> '<dependent type>' contains-errors lvalue
    |   | |       `-ImplicitCastExpr 0x14d142d50 <col:28> 'int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x14d142d18 <col:28> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   | `-IntegerLiteral 0x14d142e20 <col:40> 'int' 0
    |   |-CompoundStmt 0x14d143730 <line:41:7, line:47:7>
    |   | |-BinaryOperator 0x14d142fa0 <line:42:9, col:34> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x14d142e60 <col:9> 'int' lvalue Var 0x14d808468 'constraint' 'int'
    |   | | `-CXXDependentScopeMemberExpr 0x14d142f58 <col:22, col:34> '<dependent type>' contains-errors lvalue .constraint
    |   | |   `-ArraySubscriptExpr 0x14d142f38 <col:22, col:32> '<dependent type>' contains-errors lvalue
    |   | |     |-ImplicitCastExpr 0x14d142f08 <col:22, col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     | `-CXXDependentScopeMemberExpr 0x14d142ea0 <col:22, col:25> '<dependent type>' contains-errors lvalue ->elems
    |   | |     |   `-RecoveryExpr 0x14d142e80 <col:22> '<dependent type>' contains-errors lvalue
    |   | |     `-ImplicitCastExpr 0x14d142f20 <col:31> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14d142ee8 <col:31> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   | |-IfStmt 0x14d1432a0 <line:43:9, line:44:38>
    |   | | |-RecoveryExpr 0x14d143118 <line:43:13, col:62> '_Bool' contains-errors
    |   | | `-CompoundAssignOperator 0x14d143270 <line:44:11, col:38> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |   |-CXXDependentScopeMemberExpr 0x14d143208 <col:11, col:24> '<dependent type>' contains-errors lvalue .constraint
    |   | |   | `-ArraySubscriptExpr 0x14d1431e8 <col:11, col:22> '<dependent type>' contains-errors lvalue
    |   | |   |   |-ImplicitCastExpr 0x14d1431b8 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   |   | `-RecoveryExpr 0x14d143170 <col:11, col:14> '<dependent type>' contains-errors lvalue
    |   | |   |   |   `-DeclRefExpr 0x14d143138 <col:11> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   | |   |   `-ImplicitCastExpr 0x14d1431d0 <col:21> 'int' <LValueToRValue>
    |   | |   |     `-DeclRefExpr 0x14d143198 <col:21> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   | |   `-DeclRefExpr 0x14d143250 <col:38> 'int' lvalue Var 0x14d808468 'constraint' 'int'
    |   | `-IfStmt 0x14d143710 <line:45:9, line:46:63>
    |   |   |-UnaryOperator 0x14d1433f0 <line:45:13, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x14d1433d8 <col:15, col:28> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   `-CXXDependentScopeMemberExpr 0x14d143390 <col:15, col:28> '<dependent type>' contains-errors lvalue .first_end
    |   |   |     `-ArraySubscriptExpr 0x14d143370 <col:15, col:26> '<dependent type>' contains-errors lvalue
    |   |   |       |-ImplicitCastExpr 0x14d143340 <col:15, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |       | `-RecoveryExpr 0x14d1432f8 <col:15, col:18> '<dependent type>' contains-errors lvalue
    |   |   |       |   `-DeclRefExpr 0x14d1432c0 <col:15> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   |   |       `-ImplicitCastExpr 0x14d143358 <col:25> 'int' <LValueToRValue>
    |   |   |         `-DeclRefExpr 0x14d143320 <col:25> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   |   `-BinaryOperator 0x14d1436f0 <line:46:11, col:63> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x14d1434d8 <col:11, col:24> '<dependent type>' contains-errors lvalue .first_end
    |   |     | `-ArraySubscriptExpr 0x14d1434b8 <col:11, col:22> '<dependent type>' contains-errors lvalue
    |   |     |   |-ImplicitCastExpr 0x14d143488 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   | `-RecoveryExpr 0x14d143440 <col:11, col:14> '<dependent type>' contains-errors lvalue
    |   |     |   |   `-DeclRefExpr 0x14d143408 <col:11> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   |     |   `-ImplicitCastExpr 0x14d1434a0 <col:21> 'int' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x14d143468 <col:21> 'int' lvalue Var 0x14d808500 'i' 'int'
    |   |     `-ArraySubscriptExpr 0x14d1436d0 <col:36, col:63> '<dependent type>' contains-errors lvalue
    |   |       |-ImplicitCastExpr 0x14d1436a0 <col:36, col:39> '<dependent type>' contains-errors <LValueToRValue>
    |   |       | `-RecoveryExpr 0x14d143558 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x14d143520 <col:36> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |   |       `-ImplicitCastExpr 0x14d1436b8 <col:46, col:58> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-CXXDependentScopeMemberExpr 0x14d143658 <col:46, col:58> '<dependent type>' contains-errors lvalue .index
    |   |           `-ArraySubscriptExpr 0x14d143638 <col:46, col:56> '<dependent type>' contains-errors lvalue
    |   |             |-ImplicitCastExpr 0x14d143608 <col:46, col:49> '<dependent type>' contains-errors <LValueToRValue>
    |   |             | `-CXXDependentScopeMemberExpr 0x14d1435a0 <col:46, col:49> '<dependent type>' contains-errors lvalue ->elems
    |   |             |   `-RecoveryExpr 0x14d143580 <col:46> '<dependent type>' contains-errors lvalue
    |   |             `-ImplicitCastExpr 0x14d143620 <col:55> 'int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x14d1435e8 <col:55> 'int' lvalue Var 0x14d808580 'j' 'int'
    |   `-IfStmt 0x14d143bd0 <line:48:10, line:52:7>
    |     |-RecoveryExpr 0x14d143928 <line:48:14, col:46> '_Bool' contains-errors
    |     `-CompoundStmt 0x14d143bb8 <line:49:7, line:52:7>
    |       `-BinaryOperator 0x14d143b98 <line:51:9, col:32> '<dependent type>' contains-errors '='
    |         |-CXXDependentScopeMemberExpr 0x14d143b30 <col:9, col:22> '<dependent type>' contains-errors lvalue .backref
    |         | `-ArraySubscriptExpr 0x14d143b10 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |         |   |-ImplicitCastExpr 0x14d143ae0 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>
    |         |   | `-RecoveryExpr 0x14d143a98 <col:9, col:12> '<dependent type>' contains-errors lvalue
    |         |   |   `-DeclRefExpr 0x14d143a60 <col:9> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    |         |   `-ImplicitCastExpr 0x14d143af8 <col:19> 'int' <LValueToRValue>
    |         |     `-DeclRefExpr 0x14d143ac0 <col:19> 'int' lvalue Var 0x14d808500 'i' 'int'
    |         `-IntegerLiteral 0x14d143b78 <col:32> 'int' 1
    |-UnaryOperator 0x14d143cb8 <line:54:3, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-RecoveryExpr 0x14d143c90 <col:5, col:8> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14d143c58 <col:5> 'struct dfa *' lvalue ParmVar 0x14d128e48 'd' 'struct dfa *'
    `-ReturnStmt 0x14d143d08 <line:56:3, col:10>
      `-ImplicitCastExpr 0x14d143cf0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d143cd0 <col:10> 'int' lvalue Var 0x14d808500 'i' 'int'
