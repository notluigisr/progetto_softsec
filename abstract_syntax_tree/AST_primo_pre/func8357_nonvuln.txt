`-FunctionDecl 0x12980df18  line:1:12 referenced invalid vfswrap_ftruncate 'int (int *, int *, int)' static
  |-ParmVarDecl 0x12980dd28 <col:30, col:49> col:49 invalid handle 'int *'
  |-ParmVarDecl 0x12980dda8 <col:57, col:71> col:71 invalid fsp 'int *'
  |-ParmVarDecl 0x12980de28 <col:76, col:82> col:82 invalid len 'int'
  `-CompoundStmt 0x12b0090c0 <line:2:1, line:58:1>
    |-DeclStmt 0x12980e090 <line:3:2, col:17>
    | `-VarDecl 0x12980dff0 <col:2, col:16> col:6 used result 'int' cinit
    |   `-UnaryOperator 0x12980e078 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x12980e058 <col:16> 'int' 1
    |-DeclStmt 0x12980e170 <line:6:2, col:12>
    | `-VarDecl 0x12980e0d0 <col:2, col:11> col:7 used c 'char' cinit
    |   `-ImplicitCastExpr 0x12980e158 <col:11> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x12980e138 <col:11> 'int' 0
    |-CallExpr 0x12980e380 <line:8:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12980e2e0 <col:2> 'int ()' Function 0x12980e228 'START_PROFILE' 'int ()'
    | `-RecoveryExpr 0x12980e360 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129122d38 <line:10:2, line:14:2>
    | |-BinaryOperator 0x129122928 <line:10:6, col:51> 'int' contains-errors '&&'
    | | |-CallExpr 0x129122868 <col:6, col:40> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1291226b8 <col:6> 'int ()' Function 0x129122600 'lp_strict_allocate' 'int ()'
    | | | `-CallExpr 0x129122840 <col:25, col:39> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x1291227b8 <col:25> 'int ()' Function 0x129122700 'SNUM' 'int ()'
    | | |   `-CXXDependentScopeMemberExpr 0x1291227f8 <col:30, col:35> '<dependent type>' contains-errors lvalue ->conn
    | | |     `-RecoveryExpr 0x1291227d8 <col:30> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x129122910 <col:45, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x1291228f8 <col:46, col:51> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x1291228b0 <col:46, col:51> '<dependent type>' contains-errors lvalue ->is_sparse
    | |       `-RecoveryExpr 0x129122890 <col:46> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x129122d10 <col:62, line:14:2>
    |   |-BinaryOperator 0x129122b00 <line:11:3, col:54> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x129122948 <col:3> 'int' lvalue Var 0x12980dff0 'result' 'int'
    |   | `-CallExpr 0x129122ac8 <col:12, col:54> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x129122a48 <col:12> 'int ()' Function 0x129122990 'strict_allocate_ftruncate' 'int ()'
    |   |   |-RecoveryExpr 0x129122a68 <col:38> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x129122a88 <col:46> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x129122aa8 <col:51> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x129122ca0 <line:12:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x129122c00 <col:3> 'int ()' Function 0x129122b48 'END_PROFILE' 'int ()'
    |   | `-RecoveryExpr 0x129122c80 <col:15> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x129122d00 <line:13:3, col:10>
    |     `-ImplicitCastExpr 0x129122ce8 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x129122cc8 <col:10> 'int' lvalue Var 0x12980dff0 'result' 'int'
    |-BinaryOperator 0x129122f78 <line:18:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x129122d58 <col:2> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | `-CallExpr 0x129122f48 <col:11, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129122e58 <col:11> 'int ()' Function 0x129122da0 'ftruncate' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x129122ee0 <col:21, col:30> '<dependent type>' contains-errors lvalue ->fd
    |   | `-CXXDependentScopeMemberExpr 0x129122e98 <col:21, col:26> '<dependent type>' contains-errors lvalue ->fh
    |   |   `-RecoveryExpr 0x129122e78 <col:21> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x129122f28 <col:34> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129123078 <line:19:2, line:20:8>
    | |-BinaryOperator 0x129122ff0 <line:19:6, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x129122fd8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x129122f98 <col:6> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | | `-IntegerLiteral 0x129122fb8 <col:16> 'int' 0
    | `-GotoStmt 0x129123060 <line:20:3, col:8> 'done' 0x129123010
    |-IfStmt 0x1291233c8 <line:26:2, line:28:2>
    | |-UnaryOperator 0x129123380 <line:26:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x129123358 <col:7, col:29> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1291232c0 <col:7> 'int ()' Function 0x129123208 'NT_STATUS_IS_OK' 'int ()'
    | |   `-RecoveryExpr 0x129123338 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1291233b0 <col:32, line:28:2>
    |   `-GotoStmt 0x129123398 <line:27:3, col:8> 'done' 0x129123010
    |-IfStmt 0x12b008c78 <line:38:2, line:41:2>
    | |-BinaryOperator 0x1291235b8 <line:38:6, col:25> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x129123570 <col:6, col:11> '<dependent type>' contains-errors lvalue ->st_ex_size
    | | | `-RecoveryExpr 0x129123550 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x129123510 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b008c58 <col:30, line:41:2>
    |   |-BinaryOperator 0x12b008c20 <line:39:3, col:12> 'int' '='
    |   | |-DeclRefExpr 0x1291235d8 <col:3> 'int' lvalue Var 0x12980dff0 'result' 'int'
    |   | `-IntegerLiteral 0x12b008c00 <col:12> 'int' 0
    |   `-GotoStmt 0x12b008c40 <line:40:3, col:8> 'done' 0x129123010
    |-IfStmt 0x12b008d08 <line:43:2, line:46:2>
    | |-RecoveryExpr 0x12b008cb8 <line:43:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x12b008cf0 <col:29, line:46:2>
    |   `-GotoStmt 0x12b008cd8 <line:45:3, col:8> 'done' 0x129123010
    |-IfStmt 0x12b008fb0 <line:48:2, line:50:2>
    | |-BinaryOperator 0x12b008f60 <line:48:6, col:41> 'int' contains-errors '!='
    | | |-CallExpr 0x12b008f00 <col:6, col:38> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12b008e08 <col:6> 'int ()' Function 0x12b008d50 'SMB_VFS_PWRITE' 'int ()'
    | | | |-RecoveryExpr 0x12b008e28 <col:21> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x12b008e68 <col:26, col:27> 'char *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x12b008e48 <col:27> 'char' lvalue Var 0x12980e0d0 'c' 'char'
    | | | |-IntegerLiteral 0x12b008e80 <col:30> 'int' 1
    | | | `-BinaryOperator 0x12b008ee0 <col:33, col:37> '<dependent type>' contains-errors '-'
    | | |   |-RecoveryExpr 0x12b008ea0 <col:33> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x12b008ec0 <col:37> 'int' 1
    | | `-IntegerLiteral 0x12b008f40 <col:41> 'int' 1
    | `-CompoundStmt 0x12b008f98 <col:44, line:50:2>
    |   `-GotoStmt 0x12b008f80 <line:49:3, col:8> 'done' 0x129123010
    |-BinaryOperator 0x12b009010 <line:52:2, col:11> 'int' '='
    | |-DeclRefExpr 0x12b008fd0 <col:2> 'int' lvalue Var 0x12980dff0 'result' 'int'
    | `-IntegerLiteral 0x12b008ff0 <col:11> 'int' 0
    |-LabelStmt 0x12b009058 <line:54:3, col:7> 'done'
    | `-NullStmt 0x12b009050 <col:7>
    `-ReturnStmt 0x12b0090b0 <line:57:2, col:9>
      `-ImplicitCastExpr 0x12b009098 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12b009078 <col:9> 'int' lvalue Var 0x12980dff0 'result' 'int'
