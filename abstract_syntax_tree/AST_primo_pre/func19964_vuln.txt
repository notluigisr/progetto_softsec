`-FunctionDecl 0x15700de88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x15700dd28 <col:22, col:37> col:37 referenced invalid context 'int *'
  |-ParmVarDecl 0x15700dda8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x15702a4a0 <col:64, line:55:1>
    |-CallExpr 0x157027a00 <line:5:3, col:65> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15700e170 <col:3> 'int ()' Function 0x15700e0b8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x15700e190 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x15700e2d0 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15700e290 <col:30> 'int ()' Function 0x15700e1d8 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x15700e2b0 <col:40> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x15700e3b0 <col:47, col:53> '<dependent type>' contains-errors lvalue ->values_count
    |   `-RecoveryExpr 0x15700e390 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x157027be0 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x157027a38 <col:3> 'int ()' Function 0x15700e0b8 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x157027a58 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x157027b98 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x157027b58 <col:30> 'int ()' Function 0x157027aa0 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x157027b78 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x157027bc0 <col:48> 'int' 1
    |-DeclStmt 0x157027e30 <line:8:3, col:58>
    | `-VarDecl 0x157027c30 <col:3, col:23> col:23 invalid input0 'const int *'
    |-DeclStmt 0x157028050 <line:9:3, col:55>
    | `-VarDecl 0x157027e60 <col:3, col:54> col:13 used dimension_size 'const int' cinit
    |   `-BinaryOperator 0x157028030 <col:30, col:54> '<dependent type>' contains-errors '+'
    |     |-CallExpr 0x157027fe8 <col:30, col:50> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x157027fa8 <col:30> 'int ()' Function 0x157027ef0 'NumDimensions' 'int ()'
    |     | `-RecoveryExpr 0x157027fc8 <col:44> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x157028010 <col:54> 'int' 1
    |-IfStmt 0x1570281c0 <line:10:3, line:12:3>
    | |-BinaryOperator 0x157028170 <line:10:7, col:20> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x157028128 <col:7, col:13> '<dependent type>' contains-errors lvalue ->axis
    | | | `-RecoveryExpr 0x157028108 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1570280c8 <col:20> 'int' 0
    | `-CompoundStmt 0x1570281b0 <col:23, line:12:3>
    |-CallExpr 0x1570284a0 <line:13:3, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1570282c0 <col:3> 'int ()' Function 0x157028208 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x1570282e0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x157028480 <col:27, col:58> 'int' contains-errors '>='
    |   |-CallExpr 0x157028340 <col:27, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x157028300 <col:27> 'int ()' Function 0x157027ef0 'NumDimensions' 'int ()'
    |   | `-RecoveryExpr 0x157028320 <col:41> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x157028438 <col:52, col:58> '<dependent type>' contains-errors lvalue ->axis
    |     `-RecoveryExpr 0x157028418 <col:52> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x157028668 <line:14:3, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1570284d0 <col:3> 'int ()' Function 0x157028208 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x1570284f0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x157028648 <col:27, col:41> 'int' contains-errors '>='
    |   |-CXXDependentScopeMemberExpr 0x157028600 <col:27, col:33> '<dependent type>' contains-errors lvalue ->axis
    |   | `-RecoveryExpr 0x1570285e0 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x157028570 <col:41> 'int' 0
    |-IfStmt 0x157029040 <line:16:3, line:22:3>
    | |-RecoveryExpr 0x157028908 <line:16:7, line:18:55> '_Bool' contains-errors
    | `-CompoundStmt 0x157029028 <col:69, line:22:3>
    |   `-CallExpr 0x157028ff0 <line:19:5, line:20:57> '<dependent type>' contains-errors
    |     |-CXXDependentScopeMemberExpr 0x157028970 <line:19:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError
    |     | `-RecoveryExpr 0x157028948 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x157028928 <col:5> 'int *' lvalue ParmVar 0x15700dd28 'context' 'int *'
    |     |-RecoveryExpr 0x1570289b8 <col:26> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x157028e40 <col:35> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x157028fc8 <line:20:26, col:56> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x157028f40 <col:26> 'int ()' Function 0x157028e88 'TfLiteTypeGetName' 'int ()'
    |       `-CXXDependentScopeMemberExpr 0x157028f80 <col:44, col:52> '<dependent type>' contains-errors lvalue ->type
    |         `-RecoveryExpr 0x157028f60 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1570297d8 <line:31:3, col:51>
    | `-VarDecl 0x157029708 <col:3, col:25> col:25 invalid input_shape 'const int *'
    |-DeclStmt 0x157029a38 <line:33:3, col:12>
    | `-VarDecl 0x1570299b0 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x157029a18 <col:11> 'int' 0
    `-ForStmt 0x157029d90 <line:34:3, line:40:3>
      |-DeclStmt 0x157029af0 <line:34:8, col:21>
      | `-VarDecl 0x157029a68 <col:8, col:20> col:12 used index 'int' cinit
      |   `-IntegerLiteral 0x157029ad0 <col:20> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x157029b78 <col:23, col:31> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x157029b48 <col:23> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x157029b08 <col:23> 'int' lvalue Var 0x157029a68 'index' 'int'
      | `-ImplicitCastExpr 0x157029b60 <col:31> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x157029b28 <col:31> 'const int' contains-errors lvalue Var 0x157027e60 'dimension_size' 'const int'
      |-UnaryOperator 0x157029bb8 <col:47, col:49> 'int' prefix '++'
      | `-DeclRefExpr 0x157029b98 <col:49> 'int' lvalue Var 0x157029a68 'index' 'int'
      `-CompoundStmt 0x157029d78 <col:56, line:40:3>
        `-IfStmt 0x157029d48 <line:35:5, line:39:5> has_else
          |-RecoveryExpr 0x157029bf0 <line:35:9, col:24> '_Bool' contains-errors
          |-CompoundStmt 0x157029c30 <col:30, line:37:5>
          `-CompoundStmt 0x157029d38 <col:12, line:39:5>
