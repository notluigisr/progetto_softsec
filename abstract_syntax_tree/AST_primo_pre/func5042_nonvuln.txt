`-FunctionDecl 0x149928310  line:1:6 invalid sqlite3UniqueConstraint 'void (int *, int, int *)'
  |-ParmVarDecl 0x149928128 <line:2:3, col:10> col:10 invalid pParse 'int *'
  |-ParmVarDecl 0x1499281a8 <line:3:3, col:7> col:7 used onError 'int'
  |-ParmVarDecl 0x149928228 <line:4:3, col:10> col:10 invalid pIdx 'int *'
  `-CompoundStmt 0x14a009720 <line:5:2, line:31:1>
    |-DeclStmt 0x149928450 <line:6:3, col:13>
    | `-VarDecl 0x1499283e8 <col:3, col:9> col:9 used zErr 'char *'
    |-DeclStmt 0x1499284e8 <line:7:3, col:8>
    | `-VarDecl 0x149928480 <col:3, col:7> col:7 used j 'int'
    `-IfStmt 0x14a009328 <line:13:3, line:25:3> has_else
      |-CXXDependentScopeMemberExpr 0x1499418c8 <line:13:7, col:13> '<dependent type>' contains-errors lvalue ->aColExpr
      | `-RecoveryExpr 0x1499418a8 <col:7> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x149941bb0 <col:23, line:15:3>
      | `-CallExpr 0x149941b78 <line:14:5, col:52> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x1499419f0 <col:5> 'int ()' Function 0x149941938 'sqlite3_str_appendf' 'int ()'
      |   |-UnaryOperator 0x149941b60 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | `-RecoveryExpr 0x149941b40 <col:26> '<dependent type>' contains-errors lvalue
      |   |-StringLiteral 0x149941a80 <col:34> 'char[4]' lvalue "STR"
      |   `-CXXDependentScopeMemberExpr 0x149941ac0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->zName
      |     `-RecoveryExpr 0x149941aa0 <col:41> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x14a009310 <line:15:8, line:25:3>
        `-ForStmt 0x14a0092d8 <line:16:5, line:24:5>
          |-BinaryOperator 0x149941c08 <line:16:9, col:11> 'int' '='
          | |-DeclRefExpr 0x149941bc8 <col:9> 'int' lvalue Var 0x149928480 'j' 'int'
          | `-IntegerLiteral 0x149941be8 <col:11> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x149941cb0 <col:14, col:22> 'int' contains-errors '<'
          | |-DeclRefExpr 0x149941c28 <col:14> 'int' lvalue Var 0x149928480 'j' 'int'
          | `-CXXDependentScopeMemberExpr 0x149941c68 <col:16, col:22> '<dependent type>' contains-errors lvalue ->nKeyCol
          |   `-RecoveryExpr 0x149941c48 <col:16> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x149941cf0 <col:31, col:32> 'int' postfix '++'
          | `-DeclRefExpr 0x149941cd0 <col:31> 'int' lvalue Var 0x149928480 'j' 'int'
          `-CompoundStmt 0x14a009298 <col:35, line:24:5>
            |-DeclStmt 0x149941d88 <line:17:7, col:17>
            | `-VarDecl 0x149941d20 <col:7, col:13> col:13 used zCol 'char *'
            |-CallExpr 0x149941fb8 <line:18:7, col:36> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x149941e80 <col:7> 'int ()' Function 0x149941dc8 'assert' 'int ()'
            | `-BinaryOperator 0x149941f98 <col:15, col:34> 'int' contains-errors '>='
            |   |-ArraySubscriptExpr 0x149941f58 <col:15, col:31> '<dependent type>' contains-errors lvalue
            |   | |-ImplicitCastExpr 0x149941f28 <col:15, col:21> '<dependent type>' contains-errors <LValueToRValue>
            |   | | `-CXXDependentScopeMemberExpr 0x149941ec0 <col:15, col:21> '<dependent type>' contains-errors lvalue ->aiColumn
            |   | |   `-RecoveryExpr 0x149941ea0 <col:15> '<dependent type>' contains-errors lvalue
            |   | `-ImplicitCastExpr 0x149941f40 <col:30> 'int' <LValueToRValue>
            |   |   `-DeclRefExpr 0x149941f08 <col:30> 'int' lvalue Var 0x149928480 'j' 'int'
            |   `-IntegerLiteral 0x149941f78 <col:34> 'int' 0
            |-IfStmt 0x149942388 <line:20:7, col:51>
            | |-ImplicitCastExpr 0x149942158 <col:11> 'int' <LValueToRValue>
            | | `-DeclRefExpr 0x149942138 <col:11> 'int' lvalue Var 0x149928480 'j' 'int'
            | `-CallExpr 0x149942350 <col:15, col:51> '<dependent type>' contains-errors
            |   |-DeclRefExpr 0x149942250 <col:15> 'int ()' Function 0x149942198 'sqlite3_str_append' 'int ()'
            |   |-UnaryOperator 0x149942338 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
            |   | `-RecoveryExpr 0x149942318 <col:35> '<dependent type>' contains-errors lvalue
            |   |-StringLiteral 0x1499422a0 <col:43> 'char[4]' lvalue "STR"
            |   `-IntegerLiteral 0x1499422c0 <col:50> 'int' 2
            |-CallExpr 0x149942608 <line:21:7, col:49> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x149942488 <col:7> 'int ()' Function 0x1499423d0 'sqlite3_str_appendall' 'int ()'
            | |-UnaryOperator 0x149942588 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | `-RecoveryExpr 0x149942568 <col:30> '<dependent type>' contains-errors lvalue
            | `-CXXDependentScopeMemberExpr 0x1499425c0 <col:38, col:44> '<dependent type>' contains-errors lvalue ->zName
            |   `-RecoveryExpr 0x1499425a0 <col:38> '<dependent type>' contains-errors lvalue
            |-CallExpr 0x149942738 <line:22:7, col:43> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x149942638 <col:7> 'int ()' Function 0x149942198 'sqlite3_str_append' 'int ()'
            | |-UnaryOperator 0x149942720 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | `-RecoveryExpr 0x149942700 <col:27> '<dependent type>' contains-errors lvalue
            | |-StringLiteral 0x149942688 <col:35> 'char[4]' lvalue "STR"
            | `-IntegerLiteral 0x1499426a8 <col:42> 'int' 1
            `-CallExpr 0x14a009268 <line:23:7, col:42> '<dependent type>' contains-errors
              |-DeclRefExpr 0x149942770 <col:7> 'int ()' Function 0x1499423d0 'sqlite3_str_appendall' 'int ()'
              |-UnaryOperator 0x14a009250 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
              | `-RecoveryExpr 0x14a009230 <col:30> '<dependent type>' contains-errors lvalue
              `-DeclRefExpr 0x1499427c0 <col:38> 'char *' lvalue Var 0x149941d20 'zCol' 'char *'
