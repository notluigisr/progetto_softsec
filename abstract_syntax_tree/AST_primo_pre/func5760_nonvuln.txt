`-FunctionDecl 0x1471282e0  line:1:13 invalid pgpPrtTime 'void (const char *, const int *, int)' static
  |-ParmVarDecl 0x1471280d8 <col:24, col:37> col:37 used pre 'const char *'
  |-ParmVarDecl 0x147128170 <col:42, col:57> col:57 invalid p 'const int *'
  |-ParmVarDecl 0x1471281f0 <col:60, col:67> col:67 invalid plen 'int'
  `-CompoundStmt 0x15080aaa0 <line:2:1, line:15:1>
    |-IfStmt 0x147128448 <line:3:5, col:18>
    | |-UnaryOperator 0x147128420 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x147128408 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1471283e8 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x147128438 <col:18>
    |-IfStmt 0x150808800 <line:4:5, line:5:28>
    | |-BinaryOperator 0x147128520 <line:4:9, col:17> 'int' '&&'
    | | |-ImplicitCastExpr 0x1471284d8 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x147128468 <col:9> 'const char *' lvalue ParmVar 0x1471280d8 'pre' 'const char *'
    | | `-ImplicitCastExpr 0x147128508 <col:16, col:17> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1471284f0 <col:16, col:17> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x1471284c0 <col:16, col:17> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1471284a8 <col:17> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x147128488 <col:17> 'const char *' lvalue ParmVar 0x1471280d8 'pre' 'const char *'
    | `-CallExpr 0x1471287b8 <line:5:2, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1471286a0 <col:2> 'int ()' Function 0x1471285e8 'fprintf' 'int ()'
    |   |-RecoveryExpr 0x147128798 <col:10> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x147128720 <col:18> 'char[4]' lvalue "STR"
    |   `-DeclRefExpr 0x147128740 <col:25> 'const char *' lvalue ParmVar 0x1471280d8 'pre' 'const char *'
    `-IfStmt 0x15080aa70 <line:6:5, line:14:5> has_else
      |-BinaryOperator 0x150808860 <line:6:9, col:17> 'int' contains-errors '=='
      | |-RecoveryExpr 0x150808820 <col:9> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x150808840 <col:17> 'int' 4
      |-CompoundStmt 0x1508095c8 <col:20, line:12:5>
      | |-DeclStmt 0x150808988 <line:7:2, col:16>
      | | `-VarDecl 0x150808920 <col:2, col:15> col:7 used buf 'char[1024]'
      | `-DeclStmt 0x150809230 <line:9:2, col:45>
      |   |-RecordDecl 0x1508089a0 <col:2, col:9> col:9 struct tm
      |   |-VarDecl 0x150808a98 <col:2, col:12> col:12 invalid _tm 'struct tm'
      |   `-VarDecl 0x150808fa8 <col:2, col:44> col:18 used tms 'struct tm *' cinit
      |     `-CallExpr 0x1508091e0 <col:24, col:44> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x1508090f0 <col:24> 'int ()' Function 0x150809038 'localtime_r' 'int ()'
      |       |-UnaryOperator 0x1508091c8 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
      |       | `-RecoveryExpr 0x1508091a8 <col:37> '<dependent type>' contains-errors lvalue
      |       `-UnaryOperator 0x150809160 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
      |         `-RecoveryExpr 0x150809140 <col:41> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15080aa58 <line:12:12, line:14:5>
        `-CallExpr 0x15080aa20 <line:13:2, col:27> '<dependent type>' contains-errors
          |-DeclRefExpr 0x1508096c8 <col:2> 'int ()' Function 0x150809610 'pgpPrtHex' 'int ()'
          |-StringLiteral 0x150809730 <col:12> 'char[1]' lvalue ""
          |-BinaryOperator 0x150809788 <col:16, col:18> '<dependent type>' contains-errors '+'
          | |-RecoveryExpr 0x150809748 <col:16> '<dependent type>' contains-errors lvalue
          | `-IntegerLiteral 0x150809768 <col:18> 'int' 1
          `-BinaryOperator 0x15080aa00 <col:21, col:26> '<dependent type>' contains-errors '-'
            |-RecoveryExpr 0x1508097a8 <col:21> '<dependent type>' contains-errors lvalue
            `-IntegerLiteral 0x1508097c8 <col:26> 'int' 1
