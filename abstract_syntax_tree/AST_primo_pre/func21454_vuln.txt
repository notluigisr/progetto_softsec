`-FunctionDecl 0x13e924118  line:1:1 invalid ds_fgetstr 'int (int *, int *, char)'
  |-ParmVarDecl 0x13e923f28 <col:13, col:19> col:19 invalid f 'int *'
  |-ParmVarDecl 0x13e923fa8 <col:22, col:38> col:38 referenced invalid s 'int *'
  |-ParmVarDecl 0x13e924020 <col:41, col:46> col:46 used eos 'char'
  `-CompoundStmt 0x13e93e368 <line:2:1, line:29:1>
    |-DeclStmt 0x13e924258 <line:3:3, col:13>
    | `-VarDecl 0x13e9241f0 <col:3, col:7> col:7 used insize 'int'
    |-DeclStmt 0x13e9242f0 <line:4:3, col:14>
    | `-VarDecl 0x13e924288 <col:3, col:7> col:7 used strsize 'int'
    |-DeclStmt 0x13e924388 <line:5:3, col:14>
    | `-VarDecl 0x13e924320 <col:3, col:7> col:7 used next_ch 'int'
    |-BinaryOperator 0x13e9243e0 <line:8:3, col:12> 'int' '='
    | |-DeclRefExpr 0x13e9243a0 <col:3> 'int' lvalue Var 0x13e9241f0 'insize' 'int'
    | `-IntegerLiteral 0x13e9243c0 <col:12> 'int' 0
    |-BinaryOperator 0x13e924488 <line:9:3, col:16> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e924400 <col:3> 'int' lvalue Var 0x13e924288 'strsize' 'int'
    | `-CXXDependentScopeMemberExpr 0x13e924440 <col:13, col:16> '<dependent type>' contains-errors lvalue ->ds_length
    |   `-RecoveryExpr 0x13e924420 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13e93d720 <line:12:3, col:20> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e9244a8 <col:3> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
    | `-CallExpr 0x13e93d6f8 <col:13, col:20> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e93d6b8 <col:13> 'int ()' Function 0x13e93d600 'getc' 'int ()'
    |   `-RecoveryExpr 0x13e93d6d8 <col:19> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x13e93df60 <line:13:3, line:22:5>
    | |-BinaryOperator 0x13e93d970 <line:13:10, col:39> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13e93d910 <col:10, col:21> 'int' '!='
    | | | |-ImplicitCastExpr 0x13e93d8c8 <col:10> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13e93d740 <col:10> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
    | | | `-ImplicitCastExpr 0x13e93d8f8 <col:21> 'int' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x13e93d8e0 <col:21> 'char' <LValueToRValue>
    | | |     `-DeclRefExpr 0x13e93d760 <col:21> 'char' lvalue ParmVar 0x13e924020 'eos' 'char'
    | | `-BinaryOperator 0x13e93d950 <col:28, col:39> 'int' contains-errors '!='
    | |   |-DeclRefExpr 0x13e93d7e8 <col:28> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
    | |   `-RecoveryExpr 0x13e93d930 <col:39> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e93df38 <line:14:5, line:22:5>
    |   |-IfStmt 0x13e93dd30 <line:15:7, line:19:2>
    |   | |-BinaryOperator 0x13e93da40 <line:15:11, col:31> 'int' '>='
    |   | | |-ImplicitCastExpr 0x13e93da28 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13e93d990 <col:11> 'int' lvalue Var 0x13e9241f0 'insize' 'int'
    |   | | `-BinaryOperator 0x13e93da08 <col:21, col:31> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x13e93d9f0 <col:21> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13e93d9b0 <col:21> 'int' lvalue Var 0x13e924288 'strsize' 'int'
    |   | |   `-IntegerLiteral 0x13e93d9d0 <col:31> 'int' 1
    |   | `-CompoundStmt 0x13e93dd10 <line:16:2, line:19:2>
    |   |   |-CallExpr 0x13e93dc38 <line:17:4, col:33> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13e93db40 <col:4> 'int ()' Function 0x13e93da88 'ds_resize' 'int ()'
    |   |   | |-RecoveryExpr 0x13e93db60 <col:15> '<dependent type>' contains-errors lvalue
    |   |   | `-BinaryOperator 0x13e93dc18 <col:18, col:32> 'int' '+'
    |   |   |   |-BinaryOperator 0x13e93dbd8 <col:18, col:28> 'int' '*'
    |   |   |   | |-ImplicitCastExpr 0x13e93dbc0 <col:18> 'int' <LValueToRValue>
    |   |   |   | | `-DeclRefExpr 0x13e93db80 <col:18> 'int' lvalue Var 0x13e924288 'strsize' 'int'
    |   |   |   | `-IntegerLiteral 0x13e93dba0 <col:28> 'int' 2
    |   |   |   `-IntegerLiteral 0x13e93dbf8 <col:32> 'int' 2
    |   |   `-BinaryOperator 0x13e93dcf0 <line:18:4, col:17> 'int' contains-errors '='
    |   |     |-DeclRefExpr 0x13e93dc68 <col:4> 'int' lvalue Var 0x13e924288 'strsize' 'int'
    |   |     `-CXXDependentScopeMemberExpr 0x13e93dca8 <col:14, col:17> '<dependent type>' contains-errors lvalue ->ds_length
    |   |       `-RecoveryExpr 0x13e93dc88 <col:14> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13e93de70 <line:20:7, col:32> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x13e93de30 <col:7, col:28> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x13e93de18 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x13e93dd98 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ds_string
    |   | | |   `-RecoveryExpr 0x13e93dd70 <col:7> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x13e93dd50 <col:7> 'int *' lvalue ParmVar 0x13e923fa8 's' 'int *'
    |   | | `-UnaryOperator 0x13e93de00 <col:20, col:26> 'int' postfix '++'
    |   | |   `-DeclRefExpr 0x13e93dde0 <col:20> 'int' lvalue Var 0x13e9241f0 'insize' 'int'
    |   | `-DeclRefExpr 0x13e93de50 <col:32> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
    |   `-BinaryOperator 0x13e93df18 <line:21:7, col:24> 'int' contains-errors '='
    |     |-DeclRefExpr 0x13e93de90 <col:7> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
    |     `-CallExpr 0x13e93def0 <col:17, col:24> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13e93deb0 <col:17> 'int ()' Function 0x13e93d600 'getc' 'int ()'
    |       `-RecoveryExpr 0x13e93ded0 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13e93e098 <line:23:3, col:28> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x13e93e060 <col:3, col:24> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x13e93e048 <col:3, col:6> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x13e93dfc8 <col:3, col:6> '<dependent type>' contains-errors lvalue ->ds_string
    | | |   `-RecoveryExpr 0x13e93dfa0 <col:3> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x13e93df80 <col:3> 'int *' lvalue ParmVar 0x13e923fa8 's' 'int *'
    | | `-UnaryOperator 0x13e93e030 <col:16, col:22> 'int' postfix '++'
    | |   `-DeclRefExpr 0x13e93e010 <col:16> 'int' lvalue Var 0x13e9241f0 'insize' 'int'
    | `-CharacterLiteral 0x13e93e080 <col:28> 'int' 0
    `-IfStmt 0x13e93e338 <line:25:3, line:28:15> has_else
      |-BinaryOperator 0x13e93e258 <line:25:7, col:33> 'int' contains-errors '&&'
      | |-BinaryOperator 0x13e93e1f8 <col:7, col:17> 'int' '=='
      | | |-ImplicitCastExpr 0x13e93e1e0 <col:7> 'int' <LValueToRValue>
      | | | `-DeclRefExpr 0x13e93e0b8 <col:7> 'int' lvalue Var 0x13e9241f0 'insize' 'int'
      | | `-IntegerLiteral 0x13e93e0d8 <col:17> 'int' 1
      | `-BinaryOperator 0x13e93e238 <col:22, col:33> 'int' contains-errors '=='
      |   |-DeclRefExpr 0x13e93e130 <col:22> 'int' lvalue Var 0x13e924320 'next_ch' 'int'
      |   `-RecoveryExpr 0x13e93e218 <col:33> '<dependent type>' contains-errors lvalue
      |-ReturnStmt 0x13e93e2b0 <line:26:5, col:12>
      | `-RecoveryExpr 0x13e93e290 <col:12> '<dependent type>' contains-errors lvalue
      `-ReturnStmt 0x13e93e328 <line:28:5, col:15>
        `-CXXDependentScopeMemberExpr 0x13e93e2e0 <col:12, col:15> '<dependent type>' contains-errors lvalue ->ds_string
          `-RecoveryExpr 0x13e93e2c0 <col:12> '<dependent type>' contains-errors lvalue
