`-FunctionDecl 0x12100e0c8  line:1:12 invalid local_open2 'int (int *, int *, const char *, int, int *, int *)' static
  |-ParmVarDecl 0x12100dd28 <col:24, col:35> col:35 invalid fs_ctx 'int *'
  |-ParmVarDecl 0x12100dda8 <col:43, col:53> col:53 invalid dir_path 'int *'
  |-ParmVarDecl 0x12100de28 <col:63, col:75> col:75 used name 'const char *'
  |-ParmVarDecl 0x12100dea8 <line:2:24, col:28> col:28 used flags 'int'
  |-ParmVarDecl 0x12100df28 <col:35, col:43> col:43 referenced invalid credp 'int *'
  |-ParmVarDecl 0x12100dfa8 <col:50, col:68> col:68 referenced invalid fs 'int *'
  `-CompoundStmt 0x12200a010 <line:3:1, line:55:1>
    |-DeclStmt 0x12100e258 <line:4:5, col:16>
    | `-VarDecl 0x12100e1b8 <col:5, col:15> col:9 used fd 'int' cinit
    |   `-UnaryOperator 0x12100e240 <col:14, col:15> 'int' prefix '-'
    |     `-IntegerLiteral 0x12100e220 <col:15> 'int' 1
    |-DeclStmt 0x12100e328 <line:5:5, col:17>
    | `-VarDecl 0x12100e288 <col:5, col:16> col:9 used err 'int' cinit
    |   `-UnaryOperator 0x12100e310 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x12100e2f0 <col:16> 'int' 1
    |-DeclStmt 0x12100e3c0 <line:6:5, col:14>
    | `-VarDecl 0x12100e358 <col:5, col:9> col:9 used dirfd 'int'
    |-CompoundAssignOperator 0x120923468 <line:9:5, col:14> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x12100e3d8 <col:5> 'int' lvalue ParmVar 0x12100dea8 'flags' 'int'
    | `-RecoveryExpr 0x120923448 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1209236e8 <line:11:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x120923498 <col:5> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    | `-CallExpr 0x1209236b8 <col:13, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120923610 <col:13> 'int ()' Function 0x120923558 'local_opendir_nofollow' 'int ()'
    |   |-RecoveryExpr 0x120923630 <col:36> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x120923670 <col:44, col:54> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x120923650 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1209237f8 <line:12:5, line:14:5>
    | |-BinaryOperator 0x120923778 <line:12:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x120923760 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x120923708 <col:9> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    | | `-UnaryOperator 0x120923748 <col:18, col:19> 'int' prefix '-'
    | |   `-IntegerLiteral 0x120923728 <col:19> 'int' 1
    | `-CompoundStmt 0x1209237e0 <col:22, line:14:5>
    |   `-ReturnStmt 0x1209237d0 <line:13:9, col:17>
    |     `-UnaryOperator 0x1209237b8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x120923798 <col:17> 'int' 1
    |-IfStmt 0x1220094a8 <line:17:5, line:43:5> has_else
    | |-BinaryOperator 0x1209239f8 <line:17:9, line:18:32> 'int' contains-errors '||'
    | | |-BinaryOperator 0x120923998 <line:17:9, col:32> '<dependent type>' contains-errors '&'
    | | | |-CXXDependentScopeMemberExpr 0x120923838 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | `-RecoveryExpr 0x120923818 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x120923978 <col:32> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1209239d8 <line:18:9, col:32> '<dependent type>' contains-errors '&'
    | |   |-CXXDependentScopeMemberExpr 0x1209238d8 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | |   | `-RecoveryExpr 0x1209238b8 <col:9> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x1209239b8 <col:32> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x122008d98 <col:53, line:33:5>
    | | |-BinaryOperator 0x120923c70 <line:19:9, col:64> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x120923a18 <col:9> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    | | | `-CallExpr 0x120923c30 <col:14, col:64> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x120923b18 <col:14> 'int ()' Function 0x120923a60 'openat_file' 'int ()'
    | | |   |-DeclRefExpr 0x120923b38 <col:26> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    | | |   |-DeclRefExpr 0x120923b58 <col:33> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    | | |   |-DeclRefExpr 0x120923b78 <col:39> 'int' lvalue ParmVar 0x12100dea8 'flags' 'int'
    | | |   `-RecoveryExpr 0x120923c10 <col:46> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x120923da0 <line:20:9, line:22:9>
    | | | |-BinaryOperator 0x120923d00 <line:20:13, col:20> 'int' '=='
    | | | | |-ImplicitCastExpr 0x120923ce8 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x120923c90 <col:13> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    | | | | `-UnaryOperator 0x120923cd0 <col:19, col:20> 'int' prefix '-'
    | | | |   `-IntegerLiteral 0x120923cb0 <col:20> 'int' 1
    | | | `-CompoundStmt 0x120923d88 <col:23, line:22:9>
    | | |   `-GotoStmt 0x120923d70 <line:21:13, col:18> 'out' 0x120923d20
    | | |-BinaryOperator 0x120923f50 <line:23:9, col:41> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x120923e08 <col:9, col:16> '<dependent type>' contains-errors lvalue ->fc_mode
    | | | | `-RecoveryExpr 0x120923de0 <col:9> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x120923dc0 <col:9> 'int *' lvalue ParmVar 0x12100df28 'credp' 'int *'
    | | | `-BinaryOperator 0x120923f30 <col:26, col:41> '<dependent type>' contains-errors '|'
    | | |   |-CXXDependentScopeMemberExpr 0x120923e70 <col:26, col:33> '<dependent type>' contains-errors lvalue ->fc_mode
    | | |   | `-RecoveryExpr 0x120923e50 <col:26> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x120923f10 <col:41> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x122008c38 <line:24:9, line:29:9> has_else
    | | | |-BinaryOperator 0x120924030 <line:24:13, col:36> '<dependent type>' contains-errors '&'
    | | | | |-CXXDependentScopeMemberExpr 0x120923f90 <col:13, col:21> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | | `-RecoveryExpr 0x120923f70 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x120924010 <col:36> '<dependent type>' contains-errors lvalue
    | | | |-CompoundStmt 0x120924228 <col:52, line:27:9>
    | | | | `-BinaryOperator 0x120924208 <line:26:13, col:55> 'int' contains-errors '='
    | | | |   |-DeclRefExpr 0x120924050 <col:13> 'int' lvalue Var 0x12100e288 'err' 'int'
    | | | |   `-CallExpr 0x1209241d0 <col:19, col:55> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x120924150 <col:19> 'int ()' Function 0x120924098 'local_set_xattrat' 'int ()'
    | | | |     |-DeclRefExpr 0x120924170 <col:37> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    | | | |     |-DeclRefExpr 0x120924190 <col:44> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    | | | |     `-RecoveryExpr 0x1209241b0 <col:50> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x122008c20 <line:27:16, line:29:9>
    | | |   `-BinaryOperator 0x122008c00 <line:28:13, col:66> 'int' contains-errors '='
    | | |     |-DeclRefExpr 0x120924240 <col:13> 'int' lvalue Var 0x12100e288 'err' 'int'
    | | |     `-CallExpr 0x1209243c0 <col:19, col:66> '<dependent type>' contains-errors
    | | |       |-DeclRefExpr 0x120924340 <col:19> 'int ()' Function 0x120924288 'local_set_mapped_file_attrat' 'int ()'
    | | |       |-DeclRefExpr 0x120924360 <col:48> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    | | |       |-DeclRefExpr 0x120924380 <col:55> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    | | |       `-RecoveryExpr 0x1209243a0 <col:61> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x122008d78 <line:30:9, line:32:9>
    | |   |-BinaryOperator 0x122008cd8 <line:30:13, col:21> 'int' '=='
    | |   | |-ImplicitCastExpr 0x122008cc0 <col:13> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x122008c68 <col:13> 'int' lvalue Var 0x12100e288 'err' 'int'
    | |   | `-UnaryOperator 0x122008ca8 <col:20, col:21> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x122008c88 <col:21> 'int' 1
    | |   `-CompoundStmt 0x122008d60 <col:24, line:32:9>
    | |     `-GotoStmt 0x122008d48 <line:31:13, col:18> 'err_end' 0x122008cf8
    | `-IfStmt 0x122009488 <line:33:12, line:43:5>
    |   |-RecoveryExpr 0x122008f10 <line:33:16, line:34:52> '_Bool' contains-errors
    |   `-CompoundStmt 0x122009458 <col:55, line:43:5>
    |     |-BinaryOperator 0x122009078 <line:35:9, col:60> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x122008f30 <col:9> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    |     | `-CallExpr 0x122009038 <col:14, col:60> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x122008f50 <col:14> 'int ()' Function 0x120923a60 'openat_file' 'int ()'
    |     |   |-DeclRefExpr 0x122008f70 <col:26> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x122008f90 <col:33> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    |     |   |-DeclRefExpr 0x122008fb0 <col:39> 'int' lvalue ParmVar 0x12100dea8 'flags' 'int'
    |     |   `-CXXDependentScopeMemberExpr 0x122008ff0 <col:46, col:53> '<dependent type>' contains-errors lvalue ->fc_mode
    |     |     `-RecoveryExpr 0x122008fd0 <col:46> '<dependent type>' contains-errors lvalue
    |     |-IfStmt 0x122009158 <line:36:9, line:38:9>
    |     | |-BinaryOperator 0x122009108 <line:36:13, col:20> 'int' '=='
    |     | | |-ImplicitCastExpr 0x1220090f0 <col:13> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x122009098 <col:13> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    |     | | `-UnaryOperator 0x1220090d8 <col:19, col:20> 'int' prefix '-'
    |     | |   `-IntegerLiteral 0x1220090b8 <col:20> 'int' 1
    |     | `-CompoundStmt 0x122009140 <col:23, line:38:9>
    |     |   `-GotoStmt 0x122009128 <line:37:13, col:18> 'out' 0x120923d20
    |     |-BinaryOperator 0x122009358 <line:39:9, col:68> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x122009178 <col:9> 'int' lvalue Var 0x12100e288 'err' 'int'
    |     | `-CallExpr 0x122009318 <col:15, col:68> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x122009278 <col:15> 'int ()' Function 0x1220091c0 'local_set_cred_passthrough' 'int ()'
    |     |   |-RecoveryExpr 0x122009298 <col:42> '<dependent type>' contains-errors lvalue
    |     |   |-DeclRefExpr 0x1220092b8 <col:50> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x1220092d8 <col:57> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    |     |   `-RecoveryExpr 0x1220092f8 <col:63> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x122009438 <line:40:9, line:42:9>
    |       |-BinaryOperator 0x1220093e8 <line:40:13, col:21> 'int' '=='
    |       | |-ImplicitCastExpr 0x1220093d0 <col:13> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x122009378 <col:13> 'int' lvalue Var 0x12100e288 'err' 'int'
    |       | `-UnaryOperator 0x1220093b8 <col:20, col:21> 'int' prefix '-'
    |       |   `-IntegerLiteral 0x122009398 <col:21> 'int' 1
    |       `-CompoundStmt 0x122009420 <col:24, line:42:9>
    |         `-GotoStmt 0x122009408 <line:41:13, col:18> 'err_end' 0x122008cf8
    |-BinaryOperator 0x122009530 <line:44:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1220094d8 <col:5> 'int' lvalue Var 0x12100e288 'err' 'int'
    | `-ImplicitCastExpr 0x122009518 <col:11> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1220094f8 <col:11> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    |-BinaryOperator 0x122009600 <line:45:5, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x122009598 <col:5, col:9> '<dependent type>' contains-errors lvalue ->fd
    | | `-RecoveryExpr 0x122009570 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x122009550 <col:5> 'int *' lvalue ParmVar 0x12100dfa8 'fs' 'int *'
    | `-DeclRefExpr 0x1220095e0 <col:14> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    |-GotoStmt 0x122009620 <line:46:5, col:10> 'out' 0x120923d20
    |-LabelStmt 0x122009938 <line:48:1, line:50:67> 'err_end'
    | `-CallExpr 0x122009900 <line:49:5, line:50:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x122009718 <line:49:5> 'int ()' Function 0x122009660 'unlinkat_preserve_errno' 'int ()'
    |   |-DeclRefExpr 0x122009738 <col:29> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    |   |-DeclRefExpr 0x122009758 <col:36> 'const char *' lvalue ParmVar 0x12100de28 'name' 'const char *'
    |   `-ConditionalOperator 0x1220098d0 <line:50:29, col:66> '<dependent type>' contains-errors
    |     |-BinaryOperator 0x122009890 <col:29, col:37> '<dependent type>' contains-errors '&'
    |     | |-DeclRefExpr 0x122009778 <col:29> 'int' lvalue ParmVar 0x12100dea8 'flags' 'int'
    |     | `-RecoveryExpr 0x122009870 <col:37> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x1220098b0 <col:51> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1220097e8 <col:66> 'int' 0
    |-CallExpr 0x122009ac8 <line:51:5, col:28> 'int'
    | |-ImplicitCastExpr 0x122009ab0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x122009a38 <col:5> 'int ()' Function 0x122009980 'close_preserve_errno' 'int ()'
    | `-ImplicitCastExpr 0x122009af0 <col:26> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x122009a58 <col:26> 'int' lvalue Var 0x12100e1b8 'fd' 'int'
    |-LabelStmt 0x122009ba0 <line:52:1, line:53:31> 'out'
    | `-CallExpr 0x122009b60 <col:5, col:31> 'int'
    |   |-ImplicitCastExpr 0x122009b48 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x122009b08 <col:5> 'int ()' Function 0x122009980 'close_preserve_errno' 'int ()'
    |   `-ImplicitCastExpr 0x122009b88 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x122009b28 <col:26> 'int' lvalue Var 0x12100e358 'dirfd' 'int'
    `-ReturnStmt 0x12200a000 <line:54:5, col:12>
      `-ImplicitCastExpr 0x122009be0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x122009bc0 <col:12> 'int' lvalue Var 0x12100e288 'err' 'int'
