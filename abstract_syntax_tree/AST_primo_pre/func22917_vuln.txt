`-FunctionDecl 0x14b00de88  line:1:12 invalid jp2_pclr_getdata 'int (int *, int *)' static
  |-ParmVarDecl 0x14b00dd28 <col:29, col:40> col:40 invalid box 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:45, col:59> col:59 invalid in 'int *'
  `-CompoundStmt 0x14a922ef0 <line:2:1, line:37:1>
    |-DeclStmt 0x14b00e0a0 <line:4:2, col:13>
    | `-VarDecl 0x14b00e038 <col:2, col:6> col:6 used lutsize 'int'
    |-DeclStmt 0x14b00e138 <line:5:2, col:16>
    | `-VarDecl 0x14b00e0d0 <col:2, col:15> col:15 used i 'unsigned int'
    |-DeclStmt 0x14b00e1d0 <line:6:2, col:16>
    | `-VarDecl 0x14b00e168 <col:2, col:15> col:15 used j 'unsigned int'
    |-IfStmt 0x14b027810 <line:11:2, line:14:2>
    | |-BinaryOperator 0x14b027790 <line:11:6, line:12:36> 'int' contains-errors '||'
    | | |-CallExpr 0x14b0276b0 <line:11:6, col:41> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x14b00e360 <col:6> 'int ()' Function 0x14b00e2a8 'jp2_getuint16' 'int ()'
    | | | |-RecoveryExpr 0x14b00e380 <col:20> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x14b027698 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-CXXDependentScopeMemberExpr 0x14b027650 <col:25, col:31> '<dependent type>' contains-errors lvalue ->numlutents
    | | |     `-RecoveryExpr 0x14b027630 <col:25> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14b027760 <line:12:4, col:36> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14b027528 <col:4> 'int ()' Function 0x14b027470 'jp2_getuint8' 'int ()'
    | |   |-RecoveryExpr 0x14b027548 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x14b027748 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x14b027700 <col:22, col:28> '<dependent type>' contains-errors lvalue ->numchans
    | |       `-RecoveryExpr 0x14b0276e0 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b0277f8 <col:39, line:14:2>
    |   `-ReturnStmt 0x14b0277e8 <line:13:3, col:11>
    |     `-UnaryOperator 0x14b0277d0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x14b0277b0 <col:11> 'int' 1
    |-BinaryOperator 0x14b027a40 <line:15:2, col:37> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b027830 <col:2> 'int' lvalue Var 0x14b00e038 'lutsize' 'int'
    | `-BinaryOperator 0x14b027a20 <col:12, col:37> '<dependent type>' contains-errors '*'
    |   |-CXXDependentScopeMemberExpr 0x14b027970 <col:12, col:18> '<dependent type>' contains-errors lvalue ->numlutents
    |   | `-RecoveryExpr 0x14b027950 <col:12> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14b0279d8 <col:31, col:37> '<dependent type>' contains-errors lvalue ->numchans
    |     `-RecoveryExpr 0x14b0279b8 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b027c78 <line:16:2, line:18:2>
    | |-RecoveryExpr 0x14b027bf8 <line:16:6, col:65> '_Bool' contains-errors
    | `-CompoundStmt 0x14b027c60 <col:68, line:18:2>
    |   `-ReturnStmt 0x14b027c50 <line:17:3, col:11>
    |     `-UnaryOperator 0x14b027c38 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x14b027c18 <col:11> 'int' 1
    |-IfStmt 0x14b027e10 <line:19:2, line:21:2>
    | |-RecoveryExpr 0x14b027d90 <line:19:6, col:68> '_Bool' contains-errors
    | `-CompoundStmt 0x14b027df8 <col:71, line:21:2>
    |   `-ReturnStmt 0x14b027de8 <line:20:3, col:11>
    |     `-UnaryOperator 0x14b027dd0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x14b027db0 <col:11> 'int' 1
    |-ForStmt 0x14b028180 <line:22:2, line:26:2>
    | |-BinaryOperator 0x14b027e88 <line:22:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x14b027e30 <col:7> 'unsigned int' lvalue Var 0x14b00e0d0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x14b027e70 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14b027e50 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14b027fb0 <col:14, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14b027ea8 <col:14> 'unsigned int' lvalue Var 0x14b00e0d0 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x14b027f68 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numchans
    | |   `-RecoveryExpr 0x14b027f48 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14b027ff0 <col:34, col:36> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x14b027fd0 <col:36> 'unsigned int' lvalue Var 0x14b00e0d0 'i' 'unsigned int'
    | `-CompoundStmt 0x14b028168 <col:39, line:26:2>
    |   `-IfStmt 0x14b028148 <line:23:3, line:25:3>
    |     |-RecoveryExpr 0x14b0280c8 <line:23:7, col:37> '_Bool' contains-errors
    |     `-CompoundStmt 0x14b028130 <col:40, line:25:3>
    |       `-ReturnStmt 0x14b028120 <line:24:4, col:12>
    |         `-UnaryOperator 0x14b028108 <col:11, col:12> 'int' prefix '-'
    |           `-IntegerLiteral 0x14b0280e8 <col:12> 'int' 1
    `-ReturnStmt 0x14a922ee0 <line:36:2, col:9>
      `-IntegerLiteral 0x14a922ec0 <col:9> 'int' 0
