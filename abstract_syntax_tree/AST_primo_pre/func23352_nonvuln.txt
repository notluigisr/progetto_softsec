`-FunctionDecl 0x13180dda8  line:1:1 execdict 'int (char *)'
  |-ParmVarDecl 0x13180dcd8 <col:10, col:16> col:16 used word 'char *'
  `-CompoundStmt 0x131123f08 <line:2:1, line:30:1>
    |-DeclStmt 0x13180dfb8 <line:3:5, col:22>
    | |-VarDecl 0x13180deb8 <col:5, col:11> col:11 used w 'char *'
    | `-VarDecl 0x13180df38 <col:5, col:15> col:15 used dictcmd 'char *'
    |-IfStmt 0x131828520 <line:6:5, line:9:5>
    | |-BinaryOperator 0x13180e2c8 <line:6:9, col:53> 'int' contains-errors '||'
    | | |-BinaryOperator 0x13180e228 <col:9, col:36> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x13180e1d0 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x13180e1b8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x13180e198 <col:10> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x13180e208 <col:28, col:36> 'int' contains-errors '=='
    | | |   |-DeclRefExpr 0x13180e048 <col:28> 'char *' lvalue ParmVar 0x13180dcd8 'word' 'char *'
    | | |   `-RecoveryExpr 0x13180e1e8 <col:36> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13180e2a8 <col:44, col:53> 'int' '=='
    | |   |-ImplicitCastExpr 0x13180e290 <col:44, col:45> 'int' <IntegralCast>
    | |   | `-ImplicitCastExpr 0x13180e278 <col:44, col:45> 'char' <LValueToRValue>
    | |   |   `-UnaryOperator 0x13180e260 <col:44, col:45> 'char' lvalue prefix '*' cannot overflow
    | |   |     `-ImplicitCastExpr 0x13180e248 <col:45> 'char *' <LValueToRValue>
    | |   |       `-DeclRefExpr 0x13180e0c0 <col:45> 'char *' lvalue ParmVar 0x13180dcd8 'word' 'char *'
    | |   `-CharacterLiteral 0x13180e110 <col:53> 'int' 0
    | `-CompoundStmt 0x131828500 <col:59, line:9:5>
    |   |-CallExpr 0x1318284c0 <line:7:2, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x131828400 <col:2> 'int ()' Function 0x13180e348 'displayBuffer' 'int ()'
    |   | |-RecoveryExpr 0x131828480 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1318284a0 <col:28> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1318284f0 <line:8:2>
    |-BinaryOperator 0x131828b40 <line:10:5, col:28> 'char *' '='
    | |-DeclRefExpr 0x131828540 <col:5> 'char *' lvalue Var 0x13180deb8 'w' 'char *'
    | `-ImplicitCastExpr 0x131828708 <col:9, col:28> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x1318286c8 <col:9, col:28> 'int'
    |     |-ImplicitCastExpr 0x1318286b0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x131828640 <col:9> 'int ()' Function 0x131828588 'conv_to_system' 'int ()'
    |     `-ImplicitCastExpr 0x1318286f0 <col:24> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x131828660 <col:24> 'char *' lvalue ParmVar 0x13180dcd8 'word' 'char *'
    |-IfStmt 0x131828d38 <line:11:5, line:14:5>
    | |-BinaryOperator 0x131828bf8 <line:11:9, col:15> 'int' '=='
    | | |-ImplicitCastExpr 0x131828be0 <col:9, col:10> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x131828bc8 <col:9, col:10> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x131828b98 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x131828b80 <col:10> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x131828b60 <col:10> 'char *' lvalue Var 0x13180deb8 'w' 'char *'
    | | `-CharacterLiteral 0x131828bb0 <col:15> 'int' 0
    | `-CompoundStmt 0x131828d18 <col:21, line:14:5>
    |   |-CallExpr 0x131828cd8 <line:12:2, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x131828c18 <col:2> 'int ()' Function 0x13180e348 'displayBuffer' 'int ()'
    |   | |-RecoveryExpr 0x131828c98 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x131828cb8 <col:28> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x131828d08 <line:13:2>
    |-BinaryOperator 0x1318293d8 <line:15:5, line:16:48> 'char *' contains-errors '='
    | |-DeclRefExpr 0x131828d58 <line:15:5> 'char *' lvalue Var 0x13180df38 'dictcmd' 'char *'
    | `-CXXDependentScopeMemberExpr 0x131829390 <col:15, line:16:48> '<dependent type>' contains-errors lvalue ->ptr
    |   `-CallExpr 0x131829358 <line:15:15, line:16:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x131828e58 <line:15:15> 'int ()' Function 0x131828da0 'Sprintf' 'int ()'
    |     |-StringLiteral 0x131828ec0 <col:23> 'char[4]' lvalue "STR"
    |     |-RecoveryExpr 0x131829278 <col:30> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x131829330 <line:16:9, col:42> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x131829308 <col:9, col:39> 'int'
    |         |-ImplicitCastExpr 0x1318292f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x131828fd8 <col:9> 'int ()' Function 0x131828f20 'Str_form_quote' 'int ()'
    |         `-CallExpr 0x1318292b0 <col:24, col:38> 'int'
    |           |-ImplicitCastExpr 0x131829298 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x1318290d8 <col:24> 'int ()' Function 0x131829020 'Strnew_charp' 'int ()'
    |           `-ImplicitCastExpr 0x1318292d8 <col:37> 'char *' <LValueToRValue>
    |             `-DeclRefExpr 0x1318290f8 <col:37> 'char *' lvalue Var 0x13180deb8 'w' 'char *'
    `-IfStmt 0x131123eb8 <line:18:5, line:28:5> has_else
      |-RecoveryExpr 0x131123b40 <line:18:9, col:16> '_Bool' contains-errors
      |-CompoundStmt 0x131123c90 <col:22, line:21:5>
      | `-ReturnStmt 0x131123c80 <line:20:2>
      `-IfStmt 0x131123e98 <line:22:10, line:28:5>
        |-RecoveryExpr 0x131123ca8 <line:22:14, col:21> '_Bool' contains-errors
        `-CompoundStmt 0x131123e88 <col:32, line:28:5>
