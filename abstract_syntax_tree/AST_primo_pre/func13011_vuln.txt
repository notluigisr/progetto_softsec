`-FunctionDecl 0x1419067a0  line:1:6 invalid luaT_adjustvarargs 'void (int *, int, int *, const int *)'
  |-ParmVarDecl 0x141906528 <col:26, col:37> col:37 invalid L 'int *'
  |-ParmVarDecl 0x1419065a8 <col:40, col:44> col:44 used nfixparams 'int'
  |-ParmVarDecl 0x141906628 <col:56, col:66> col:66 referenced invalid ci 'int *'
  |-ParmVarDecl 0x1419066a8 <line:2:26, col:39> col:39 invalid p 'const int *'
  `-CompoundStmt 0x143008b00 <col:42, line:18:1>
    |-DeclStmt 0x1419068e8 <line:3:3, col:8>
    | `-VarDecl 0x141906880 <col:3, col:7> col:7 used i 'int'
    |-DeclStmt 0x14191fc68 <line:4:3, col:47>
    | `-VarDecl 0x141906918 <col:3, col:46> col:7 used actual 'int' cinit
    |   `-BinaryOperator 0x14191fc48 <col:16, col:46> '<dependent type>' contains-errors '-'
    |     |-CallExpr 0x14191fc00 <col:16, col:42> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x141906ae0 <col:16> 'int ()' Function 0x141906a28 'cast_int' 'int ()'
    |     | `-BinaryOperator 0x141906bd0 <col:25, col:38> '<dependent type>' contains-errors '-'
    |     |   |-CXXDependentScopeMemberExpr 0x141906b20 <col:25, col:28> '<dependent type>' contains-errors lvalue ->top
    |     |   | `-RecoveryExpr 0x141906b00 <col:25> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x141906b88 <col:34, col:38> '<dependent type>' contains-errors lvalue ->func
    |     |     `-RecoveryExpr 0x141906b68 <col:34> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14191fc28 <col:46> 'int' 1
    |-DeclStmt 0x14191fd90 <line:5:3, col:35>
    | `-VarDecl 0x14191fc98 <col:3, col:25> col:7 used nextra 'int' cinit
    |   `-BinaryOperator 0x14191fd70 <col:16, col:25> 'int' contains-errors '-'
    |     |-ImplicitCastExpr 0x14191fd40 <col:16> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x14191fd00 <col:16> 'int' contains-errors lvalue Var 0x141906918 'actual' 'int'
    |     `-ImplicitCastExpr 0x14191fd58 <col:25> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14191fd20 <col:25> 'int' lvalue ParmVar 0x1419065a8 'nfixparams' 'int'
    |-BinaryOperator 0x14191fee8 <line:6:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14191fe80 <col:3, col:11> '<dependent type>' contains-errors lvalue .nextraargs
    | | `-CXXDependentScopeMemberExpr 0x14191fe38 <col:3, col:9> '<dependent type>' contains-errors lvalue .l
    | |   `-CXXDependentScopeMemberExpr 0x14191fdf0 <col:3, col:7> '<dependent type>' contains-errors lvalue ->u
    | |     `-RecoveryExpr 0x14191fdc8 <col:3> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14191fda8 <col:3> 'int *' lvalue ParmVar 0x141906628 'ci' 'int *'
    | `-DeclRefExpr 0x14191fec8 <col:24> 'int' contains-errors lvalue Var 0x14191fc98 'nextra' 'int'
    |-CallExpr 0x1419200d0 <line:7:3, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14191ffe8 <col:3> 'int ()' Function 0x14191ff30 'checkstackGC' 'int ()'
    | |-RecoveryExpr 0x141920008 <col:16> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x1419200b0 <col:19, col:37> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x141920048 <col:19, col:22> '<dependent type>' contains-errors lvalue ->maxstacksize
    |   | `-RecoveryExpr 0x141920028 <col:19> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x141920090 <col:37> 'int' 1
    |-CallExpr 0x141920308 <line:9:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1419201e0 <col:3> 'int ()' Function 0x141920128 'setobjs2s' 'int ()'
    | |-RecoveryExpr 0x141920200 <col:13> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x141920288 <col:16, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x141920240 <col:16, col:19> '<dependent type>' contains-errors lvalue ->top
    | |   `-RecoveryExpr 0x141920220 <col:16> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x1419202c0 <col:26, col:30> '<dependent type>' contains-errors lvalue ->func
    |   `-RecoveryExpr 0x1419202a0 <col:26> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x141920920 <line:11:3, line:14:3>
    | |-BinaryOperator 0x141920380 <line:11:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x141920340 <col:8> 'int' lvalue Var 0x141906880 'i' 'int'
    | | `-IntegerLiteral 0x141920360 <col:12> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x141920410 <col:15, col:20> 'int' '<='
    | | |-ImplicitCastExpr 0x1419203e0 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1419203a0 <col:15> 'int' lvalue Var 0x141906880 'i' 'int'
    | | `-ImplicitCastExpr 0x1419203f8 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1419203c0 <col:20> 'int' lvalue ParmVar 0x1419065a8 'nfixparams' 'int'
    | |-UnaryOperator 0x141920450 <col:32, col:33> 'int' postfix '++'
    | | `-DeclRefExpr 0x141920430 <col:32> 'int' lvalue Var 0x141906880 'i' 'int'
    | `-CompoundStmt 0x141920900 <col:37, line:14:3>
    |   |-CallExpr 0x1419205d0 <line:12:5, col:40> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x141920468 <col:5> 'int ()' Function 0x141920128 'setobjs2s' 'int ()'
    |   | |-RecoveryExpr 0x141920488 <col:15> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x141920510 <col:18, col:24> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x1419204c8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->top
    |   | |   `-RecoveryExpr 0x1419204a8 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1419205b0 <col:28, col:39> '<dependent type>' contains-errors '+'
    |   |   |-CXXDependentScopeMemberExpr 0x141920548 <col:28, col:32> '<dependent type>' contains-errors lvalue ->func
    |   |   | `-RecoveryExpr 0x141920528 <col:28> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x141920590 <col:39> 'int' lvalue Var 0x141906880 'i' 'int'
    |   `-CallExpr 0x1419208d8 <line:13:5, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1419206e8 <col:5> 'int ()' Function 0x141920630 'setnilvalue' 'int ()'
    |     `-CallExpr 0x1419208b0 <col:17, col:33> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1419207e8 <col:17> 'int ()' Function 0x141920730 's2v' 'int ()'
    |       `-BinaryOperator 0x141920890 <col:21, col:32> '<dependent type>' contains-errors '+'
    |         |-CXXDependentScopeMemberExpr 0x141920828 <col:21, col:25> '<dependent type>' contains-errors lvalue ->func
    |         | `-RecoveryExpr 0x141920808 <col:21> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x141920870 <col:32> 'int' lvalue Var 0x141906880 'i' 'int'
    |-CompoundAssignOperator 0x141920a60 <line:15:3, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x1419209a0 <col:3, col:7> '<dependent type>' contains-errors lvalue ->func
    | | `-RecoveryExpr 0x141920978 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x141920958 <col:3> 'int *' lvalue ParmVar 0x141906628 'ci' 'int *'
    | `-BinaryOperator 0x141920a40 <col:15, col:24> 'int' contains-errors '+'
    |   |-ImplicitCastExpr 0x141920a28 <col:15> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1419209e8 <col:15> 'int' contains-errors lvalue Var 0x141906918 'actual' 'int'
    |   `-IntegerLiteral 0x141920a08 <col:24> 'int' 1
    |-CompoundAssignOperator 0x141920b98 <line:16:3, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x141920ad8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->top
    | | `-RecoveryExpr 0x141920ab0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x141920a90 <col:3> 'int *' lvalue ParmVar 0x141906628 'ci' 'int *'
    | `-BinaryOperator 0x141920b78 <col:14, col:23> 'int' contains-errors '+'
    |   |-ImplicitCastExpr 0x141920b60 <col:14> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x141920b20 <col:14> 'int' contains-errors lvalue Var 0x141906918 'actual' 'int'
    |   `-IntegerLiteral 0x141920b40 <col:23> 'int' 1
    `-CallExpr 0x143008ad8 <line:17:3, col:59> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1430088b8 <col:3> 'int ()' Function 0x143008800 'lua_assert' 'int ()'
      `-BinaryOperator 0x143008ab8 <col:14, col:49> 'int' contains-errors '&&'
        |-BinaryOperator 0x1430089a8 <col:14, col:28> 'int' contains-errors '<='
        | |-CXXDependentScopeMemberExpr 0x1430088f8 <col:14, col:17> '<dependent type>' contains-errors lvalue ->top
        | | `-RecoveryExpr 0x1430088d8 <col:14> '<dependent type>' contains-errors lvalue
        | `-CXXDependentScopeMemberExpr 0x143008960 <col:24, col:28> '<dependent type>' contains-errors lvalue ->top
        |   `-RecoveryExpr 0x143008940 <col:24> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x143008a98 <col:35, col:49> 'int' contains-errors '<='
          |-CXXDependentScopeMemberExpr 0x1430089e8 <col:35, col:39> '<dependent type>' contains-errors lvalue ->top
          | `-RecoveryExpr 0x1430089c8 <col:35> '<dependent type>' contains-errors lvalue
          `-CXXDependentScopeMemberExpr 0x143008a50 <col:46, col:49> '<dependent type>' contains-errors lvalue ->stack_last
            `-RecoveryExpr 0x143008a30 <col:46> '<dependent type>' contains-errors lvalue
