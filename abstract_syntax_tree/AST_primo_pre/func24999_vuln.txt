`-FunctionDecl 0x130141f58  line:1:12 invalid vvalue_tvb_vector_internal 'int (int *, int, struct vt_vector *, struct vtype_data *, int)' static
  |-ParmVarDecl 0x130128528 <col:39, col:49> col:49 invalid tvb 'int *'
  |-ParmVarDecl 0x1301285a8 <col:54, col:58> col:58 used offset 'int'
  |-ParmVarDecl 0x130128b98 <col:66, col:84> col:84 used val 'struct vt_vector *'
  |-ParmVarDecl 0x130141d68 <col:89, col:108> col:108 used type 'struct vtype_data *'
  |-ParmVarDecl 0x130141de8 <col:114, col:120> col:120 invalid num 'int'
  `-CompoundStmt 0x128008ff8 <line:2:1, line:38:1>
    |-DeclStmt 0x1301420e0 <line:3:2, col:30>
    | `-VarDecl 0x130142040 <col:2, col:24> col:12 used offset_in 'const int' cinit
    |   `-ImplicitCastExpr 0x1301420c8 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1301420a8 <col:24> 'int' lvalue ParmVar 0x1301285a8 'offset' 'int'
    |-DeclStmt 0x130142250 <line:4:2, col:45>
    | `-VarDecl 0x130142110 <col:2, col:17> col:17 invalid varsize 'const int'
    |-DeclStmt 0x130142418 <line:5:2, col:84>
    | `-VarDecl 0x130142280 <col:2, col:14> col:14 invalid elsize 'const int'
    |-DeclStmt 0x1301424c8 <line:7:2, col:9>
    | `-VarDecl 0x130142460 <col:2, col:6> col:6 used len 'int'
    |-IfStmt 0x130142730 <line:11:2, line:14:2>
    | |-RecoveryExpr 0x1301424f8 <line:11:6, col:39> '_Bool' contains-errors
    | `-CompoundStmt 0x130142718 <col:50, line:14:2>
    |   `-CallExpr 0x1301426f0 <line:13:3, col:28> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x130142670 <col:3> 'int ()' Function 0x1301425b8 'THROW' 'int ()'
    |     `-RecoveryExpr 0x1301426d0 <col:9> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1301428f0 <line:17:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x130142830 <col:2> 'int ()' Function 0x130142778 'tvb_ensure_bytes_exist' 'int ()'
    | |-RecoveryExpr 0x130142850 <col:25> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x130142870 <col:30> 'int' lvalue ParmVar 0x1301285a8 'offset' 'int'
    | `-BinaryOperator 0x1301428d0 <col:38, col:47> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x130142890 <col:38> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1301428b0 <col:47> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1301429c0 <line:22:2, col:13> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x130142978 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x130142940 <col:2> 'struct vt_vector *' lvalue ParmVar 0x130128b98 'val' 'struct vt_vector *'
    | `-RecoveryExpr 0x1301429a0 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1280087c8 <line:24:2, col:60> 'int' contains-errors
    | |-ImplicitCastExpr 0x1280087b0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x130142b68 <col:2> 'int ()' Function 0x130142ab0 'DISSECTOR_ASSERT' 'int ()'
    | `-BinaryOperator 0x128008760 <col:19, col:59> 'int' contains-errors '=='
    |   |-CStyleCastExpr 0x128008618 <col:19, col:32> 'void *' contains-errors <Dependent>
    |   | `-UnaryOperator 0x130142be8 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x130142bc0 <col:27, col:32> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x130142b88 <col:27> 'struct vt_vector *' lvalue ParmVar 0x130128b98 'val' 'struct vt_vector *'
    |   `-ParenExpr 0x128008740 <col:37, col:59> 'void *' contains-errors
    |     `-CStyleCastExpr 0x128008718 <col:38, col:53> 'void *' contains-errors <Dependent>
    |       `-UnaryOperator 0x1280086e8 <col:45, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-CXXDependentScopeMemberExpr 0x1280086a0 <col:46, col:53> '<dependent type>' contains-errors lvalue .vt_ui1
    |           `-RecoveryExpr 0x128008678 <col:46, col:51> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x128008640 <col:46> 'struct vt_vector *' lvalue ParmVar 0x130128b98 'val' 'struct vt_vector *'
    `-ReturnStmt 0x128008fe8 <line:37:2, col:18>
      `-BinaryOperator 0x128008f70 <col:9, col:18> 'int' '-'
        |-ImplicitCastExpr 0x128008f40 <col:9> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x128008f00 <col:9> 'int' lvalue ParmVar 0x1301285a8 'offset' 'int'
        `-ImplicitCastExpr 0x128008f58 <col:18> 'int' <LValueToRValue>
          `-DeclRefExpr 0x128008f20 <col:18> 'const int' lvalue Var 0x130142040 'offset_in' 'const int'
