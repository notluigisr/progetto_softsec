`-FunctionDecl 0x14b1290c8  line:1:12 invalid read_residual_partitioned_rice_ 'int (int *, unsigned int, unsigned int, int *, int *, int)'
  |-ParmVarDecl 0x14b128d28 <col:44, col:65> col:65 referenced invalid decoder 'int *'
  |-ParmVarDecl 0x14b128da8 <col:74, col:83> col:83 used predictor_order 'unsigned int'
  |-ParmVarDecl 0x14b128e28 <col:100, col:109> col:109 used partition_order 'unsigned int'
  |-ParmVarDecl 0x14b128ea8 <col:126, col:177> col:177 referenced invalid partitioned_rice_contents 'int *'
  |-ParmVarDecl 0x14b128f28 <col:204, col:217> col:217 referenced invalid residual 'int *'
  |-ParmVarDecl 0x14b128fa8 <col:227, col:238> col:238 invalid is_extended 'int'
  `-CompoundStmt 0x14b145a10 <line:2:1, line:57:1>
    |-DeclStmt 0x14b129220 <line:4:2, col:7>
    | `-VarDecl 0x14b1291b8 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x14b1293d8 <line:5:2, col:31>
    | |-VarDecl 0x14b129250 <col:2, col:11> col:11 used partition 'unsigned int'
    | |-VarDecl 0x14b1292d0 <col:2, col:22> col:22 used sample 'unsigned int'
    | `-VarDecl 0x14b129350 <col:2, col:30> col:30 used u 'unsigned int'
    |-DeclStmt 0x14b1424f8 <line:6:2, col:51>
    | `-VarDecl 0x14b142418 <col:2, col:36> col:17 used partitions 'const unsigned int' cinit
    |   `-BinaryOperator 0x14b1424d8 <col:30, col:36> 'unsigned int' '<<'
    |     |-IntegerLiteral 0x14b142480 <col:30> 'unsigned int' 1
    |     `-ImplicitCastExpr 0x14b1424c0 <col:36> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x14b1424a0 <col:36> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
    |-DeclStmt 0x14b142950 <line:7:2, col:180>
    | `-VarDecl 0x14b142528 <col:2, col:165> col:17 used partition_samples 'const unsigned int' cinit
    |   `-ConditionalOperator 0x14b142920 <col:37, col:165> '<dependent type>' contains-errors
    |     |-BinaryOperator 0x14b142600 <col:37, col:55> 'int' '>'
    |     | |-ImplicitCastExpr 0x14b1425d0 <col:37> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14b142590 <col:37> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
    |     | `-ImplicitCastExpr 0x14b1425e8 <col:55> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x14b1425b0 <col:55> 'int' 0
    |     |-BinaryOperator 0x14b142780 <col:58, col:103> '<dependent type>' contains-errors '>>'
    |     | |-CXXDependentScopeMemberExpr 0x14b142718 <col:58, col:90> '<dependent type>' contains-errors lvalue .blocksize
    |     | | `-CXXDependentScopeMemberExpr 0x14b1426d0 <col:58, col:83> '<dependent type>' contains-errors lvalue .header
    |     | |   `-CXXDependentScopeMemberExpr 0x14b142688 <col:58, col:77> '<dependent type>' contains-errors lvalue ->frame
    |     | |     `-CXXDependentScopeMemberExpr 0x14b142640 <col:58, col:67> '<dependent type>' contains-errors lvalue ->private_
    |     | |       `-RecoveryExpr 0x14b142620 <col:58> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x14b142760 <col:103> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
    |     `-BinaryOperator 0x14b142900 <col:121, col:165> '<dependent type>' contains-errors '-'
    |       |-CXXDependentScopeMemberExpr 0x14b142898 <col:121, col:153> '<dependent type>' contains-errors lvalue .blocksize
    |       | `-CXXDependentScopeMemberExpr 0x14b142850 <col:121, col:146> '<dependent type>' contains-errors lvalue .header
    |       |   `-CXXDependentScopeMemberExpr 0x14b142808 <col:121, col:140> '<dependent type>' contains-errors lvalue ->frame
    |       |     `-CXXDependentScopeMemberExpr 0x14b1427c0 <col:121, col:130> '<dependent type>' contains-errors lvalue ->private_
    |       |       `-RecoveryExpr 0x14b1427a0 <col:121> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14b1428e0 <col:165> 'unsigned int' lvalue ParmVar 0x14b128da8 'predictor_order' 'unsigned int'
    |-DeclStmt 0x14b142ad8 <line:8:2, col:157>
    | `-VarDecl 0x14b142980 <col:2, col:99> col:17 used plen 'const unsigned int' cinit
    |   `-ConditionalOperator 0x14b142aa8 <col:24, col:99> '<dependent type>' contains-errors
    |     |-RecoveryExpr 0x14b1429e8 <col:24> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x14b142a68 <col:37> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14b142a88 <col:99> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14b142c60 <line:9:2, col:163>
    | `-VarDecl 0x14b142b08 <col:2, col:102> col:17 used pesc 'const unsigned int' cinit
    |   `-ConditionalOperator 0x14b142c30 <col:24, col:102> '<dependent type>' contains-errors
    |     |-RecoveryExpr 0x14b142b70 <col:24> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x14b142bf0 <col:37> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14b142c10 <col:102> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b144028 <line:12:2, line:25:2> has_else
    | |-BinaryOperator 0x14b142ce8 <line:12:5, col:24> 'int' '=='
    | | |-ImplicitCastExpr 0x14b142cb8 <col:5> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b142c78 <col:5> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
    | | `-ImplicitCastExpr 0x14b142cd0 <col:24> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14b142c98 <col:24> 'int' 0
    | |-CompoundStmt 0x14b143298 <col:27, line:18:2>
    | | `-IfStmt 0x14b143278 <line:13:3, line:17:3>
    | |   |-BinaryOperator 0x14b142e68 <line:13:6, col:50> 'int' contains-errors '<'
    | |   | |-CXXDependentScopeMemberExpr 0x14b142e00 <col:6, col:38> '<dependent type>' contains-errors lvalue .blocksize
    | |   | | `-CXXDependentScopeMemberExpr 0x14b142db8 <col:6, col:31> '<dependent type>' contains-errors lvalue .header
    | |   | |   `-CXXDependentScopeMemberExpr 0x14b142d70 <col:6, col:25> '<dependent type>' contains-errors lvalue ->frame
    | |   | |     `-CXXDependentScopeMemberExpr 0x14b142d28 <col:6, col:15> '<dependent type>' contains-errors lvalue ->private_
    | |   | |       `-RecoveryExpr 0x14b142d08 <col:6> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14b142e48 <col:50> 'unsigned int' lvalue ParmVar 0x14b128da8 'predictor_order' 'unsigned int'
    | |   `-CompoundStmt 0x14b143250 <col:67, line:17:3>
    | |     |-CallExpr 0x14b143088 <line:14:4, col:78> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x14b142fe0 <col:4> 'int ()' Function 0x14b142f28 'send_error_to_client_' 'int ()'
    | |     | |-RecoveryExpr 0x14b143000 <col:26> '<dependent type>' contains-errors lvalue
    | |     | `-RecoveryExpr 0x14b143068 <col:35> '<dependent type>' contains-errors lvalue
    | |     |-BinaryOperator 0x14b1431e8 <line:15:4, col:33> '<dependent type>' contains-errors '='
    | |     | |-CXXDependentScopeMemberExpr 0x14b143148 <col:4, col:25> '<dependent type>' contains-errors lvalue ->state
    | |     | | `-CXXDependentScopeMemberExpr 0x14b143100 <col:4, col:13> '<dependent type>' contains-errors lvalue ->protected_
    | |     | |   `-RecoveryExpr 0x14b1430d8 <col:4> '<dependent type>' contains-errors lvalue
    | |     | |     `-DeclRefExpr 0x14b1430b8 <col:4> 'int *' lvalue ParmVar 0x14b128d28 'decoder' 'int *'
    | |     | `-RecoveryExpr 0x14b1431c8 <col:33> '<dependent type>' contains-errors lvalue
    | |     `-ReturnStmt 0x14b143240 <line:16:4, col:11>
    | |       `-RecoveryExpr 0x14b143220 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b144010 <line:19:7, line:25:2>
    |   `-IfStmt 0x14b143ff0 <line:20:3, line:24:3>
    |     |-BinaryOperator 0x14b143320 <line:20:6, col:26> 'int' contains-errors '<'
    |     | |-ImplicitCastExpr 0x14b1432f0 <col:6> 'unsigned int' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x14b1432b0 <col:6> 'const unsigned int' contains-errors lvalue Var 0x14b142528 'partition_samples' 'const unsigned int'
    |     | `-ImplicitCastExpr 0x14b143308 <col:26> 'unsigned int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x14b1432d0 <col:26> 'unsigned int' lvalue ParmVar 0x14b128da8 'predictor_order' 'unsigned int'
    |     `-CompoundStmt 0x14b143fc8 <col:43, line:24:3>
    |       |-CallExpr 0x14b143e00 <line:21:4, col:78> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x14b143340 <col:4> 'int ()' Function 0x14b142f28 'send_error_to_client_' 'int ()'
    |       | |-RecoveryExpr 0x14b143360 <col:26> '<dependent type>' contains-errors lvalue
    |       | `-RecoveryExpr 0x14b1433c8 <col:35> '<dependent type>' contains-errors lvalue
    |       |-BinaryOperator 0x14b143f60 <line:22:4, col:33> '<dependent type>' contains-errors '='
    |       | |-CXXDependentScopeMemberExpr 0x14b143ec0 <col:4, col:25> '<dependent type>' contains-errors lvalue ->state
    |       | | `-CXXDependentScopeMemberExpr 0x14b143e78 <col:4, col:13> '<dependent type>' contains-errors lvalue ->protected_
    |       | |   `-RecoveryExpr 0x14b143e50 <col:4> '<dependent type>' contains-errors lvalue
    |       | |     `-DeclRefExpr 0x14b143e30 <col:4> 'int *' lvalue ParmVar 0x14b128d28 'decoder' 'int *'
    |       | `-RecoveryExpr 0x14b143f40 <col:33> '<dependent type>' contains-errors lvalue
    |       `-ReturnStmt 0x14b143fb8 <line:23:4, col:11>
    |         `-RecoveryExpr 0x14b143f98 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b144480 <line:27:2, line:30:2>
    | |-UnaryOperator 0x14b144380 <line:27:5, col:135> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14b144350 <col:6, col:135> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14b144138 <col:6> 'int ()' Function 0x14b144080 'FLAC__format_entropy_coding_method_partitioned_rice_contents_ensure_size' 'int ()'
    | |   |-RecoveryExpr 0x14b144158 <col:79> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x14b144308 <col:106, col:134> 'int'
    | |     |-ImplicitCastExpr 0x14b1442f0 <col:106> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x14b144258 <col:106> 'int ()' Function 0x14b1441a0 'flac_max' 'int ()'
    | |     |-IntegerLiteral 0x14b144278 <col:115> 'unsigned int' 6
    | |     `-ImplicitCastExpr 0x14b144338 <col:119> 'unsigned int' <LValueToRValue>
    | |       `-DeclRefExpr 0x14b144298 <col:119> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
    | `-CompoundStmt 0x14b144470 <col:138, line:30:2>
    |-BinaryOperator 0x14b1444f8 <line:32:2, col:11> 'unsigned int' '='
    | |-DeclRefExpr 0x14b1444a0 <col:2> 'unsigned int' lvalue Var 0x14b1292d0 'sample' 'unsigned int'
    | `-ImplicitCastExpr 0x14b1444e0 <col:11> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x14b1444c0 <col:11> 'int' 0
    `-ForStmt 0x14b1459d8 <line:33:2, line:54:2>
      |-BinaryOperator 0x14b144570 <line:33:6, col:18> 'unsigned int' '='
      | |-DeclRefExpr 0x14b144518 <col:6> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
      | `-ImplicitCastExpr 0x14b144558 <col:18> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x14b144538 <col:18> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14b144600 <col:21, col:33> 'int' '<'
      | |-ImplicitCastExpr 0x14b1445d0 <col:21> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x14b144590 <col:21> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
      | `-ImplicitCastExpr 0x14b1445e8 <col:33> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x14b1445b0 <col:33> 'const unsigned int' lvalue Var 0x14b142418 'partitions' 'const unsigned int'
      |-UnaryOperator 0x14b144698 <col:45, col:54> 'unsigned int' postfix '++'
      | `-DeclRefExpr 0x14b144678 <col:45> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
      `-CompoundStmt 0x14b1459c0 <col:58, line:54:2>
        `-IfStmt 0x14b145990 <line:37:3, line:53:3> has_else
          |-RecoveryExpr 0x14b1449c0 <line:37:6, col:23> '_Bool' contains-errors
          |-CompoundStmt 0x14b1450b0 <col:29, line:43:3>
          | |-BinaryOperator 0x14b144b00 <line:38:4, col:53> '<dependent type>' contains-errors '='
          | | |-ArraySubscriptExpr 0x14b144ac0 <col:4, col:49> '<dependent type>' contains-errors lvalue
          | | | |-ImplicitCastExpr 0x14b144a90 <col:4, col:31> '<dependent type>' contains-errors <LValueToRValue>
          | | | | `-CXXDependentScopeMemberExpr 0x14b144a28 <col:4, col:31> '<dependent type>' contains-errors lvalue ->raw_bits
          | | | |   `-RecoveryExpr 0x14b144a00 <col:4> '<dependent type>' contains-errors lvalue
          | | | |     `-DeclRefExpr 0x14b1449e0 <col:4> 'int *' lvalue ParmVar 0x14b128ea8 'partitioned_rice_contents' 'int *'
          | | | `-ImplicitCastExpr 0x14b144aa8 <col:40> 'unsigned int' <LValueToRValue>
          | | |   `-DeclRefExpr 0x14b144a70 <col:40> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
          | | `-IntegerLiteral 0x14b144ae0 <col:53> 'int' 0
          | |-BinaryOperator 0x14b144d98 <line:39:4, col:89> 'unsigned int' contains-errors '='
          | | |-DeclRefExpr 0x14b144b20 <col:4> 'unsigned int' lvalue Var 0x14b129350 'u' 'unsigned int'
          | | `-ConditionalOperator 0x14b144d68 <col:8, col:89> 'unsigned int' contains-errors
          | |   |-ParenExpr 0x14b144c80 <col:8, col:46> 'int'
          | |   | `-BinaryOperator 0x14b144c60 <col:9, col:45> 'int' '||'
          | |   |   |-BinaryOperator 0x14b144bb0 <col:9, col:28> 'int' '=='
          | |   |   | |-ImplicitCastExpr 0x14b144b80 <col:9> 'unsigned int' <LValueToRValue>
          | |   |   | | `-DeclRefExpr 0x14b144b40 <col:9> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
          | |   |   | `-ImplicitCastExpr 0x14b144b98 <col:28> 'unsigned int' <IntegralCast>
          | |   |   |   `-IntegerLiteral 0x14b144b60 <col:28> 'int' 0
          | |   |   `-BinaryOperator 0x14b144c40 <col:33, col:45> 'int' '>'
          | |   |     |-ImplicitCastExpr 0x14b144c10 <col:33> 'unsigned int' <LValueToRValue>
          | |   |     | `-DeclRefExpr 0x14b144bd0 <col:33> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
          | |   |     `-ImplicitCastExpr 0x14b144c28 <col:45> 'unsigned int' <IntegralCast>
          | |   |       `-IntegerLiteral 0x14b144bf0 <col:45> 'int' 0
          | |   |-ImplicitCastExpr 0x14b144d50 <col:49> 'unsigned int' contains-errors <LValueToRValue>
          | |   | `-DeclRefExpr 0x14b144ca0 <col:49> 'const unsigned int' contains-errors lvalue Var 0x14b142528 'partition_samples' 'const unsigned int'
          | |   `-BinaryOperator 0x14b144d30 <col:69, col:89> 'unsigned int' contains-errors '-'
          | |     |-ImplicitCastExpr 0x14b144d00 <col:69> 'unsigned int' contains-errors <LValueToRValue>
          | |     | `-DeclRefExpr 0x14b144cc0 <col:69> 'const unsigned int' contains-errors lvalue Var 0x14b142528 'partition_samples' 'const unsigned int'
          | |     `-ImplicitCastExpr 0x14b144d18 <col:89> 'unsigned int' <LValueToRValue>
          | |       `-DeclRefExpr 0x14b144ce0 <col:89> 'unsigned int' lvalue ParmVar 0x14b128da8 'predictor_order' 'unsigned int'
          | `-CompoundAssignOperator 0x14b145080 <line:42:4, col:14> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
          |   |-DeclRefExpr 0x14b145028 <col:4> 'unsigned int' lvalue Var 0x14b1292d0 'sample' 'unsigned int'
          |   `-ImplicitCastExpr 0x14b145068 <col:14> 'unsigned int' <LValueToRValue>
          |     `-DeclRefExpr 0x14b145048 <col:14> 'unsigned int' lvalue Var 0x14b129350 'u' 'unsigned int'
          `-CompoundStmt 0x14b145978 <line:44:8, line:53:3>
            `-ForStmt 0x14b145940 <line:48:4, line:52:4>
              |-BinaryOperator 0x14b1454e8 <line:48:8, col:57> 'unsigned int' '='
              | |-DeclRefExpr 0x14b1452c8 <col:8> 'unsigned int' lvalue Var 0x14b129350 'u' 'unsigned int'
              | `-ConditionalOperator 0x14b1454b8 <col:12, col:57> 'unsigned int'
              |   |-ParenExpr 0x14b145428 <col:12, col:50> 'int'
              |   | `-BinaryOperator 0x14b145408 <col:13, col:49> 'int' '||'
              |   |   |-BinaryOperator 0x14b145358 <col:13, col:32> 'int' '=='
              |   |   | |-ImplicitCastExpr 0x14b145328 <col:13> 'unsigned int' <LValueToRValue>
              |   |   | | `-DeclRefExpr 0x14b1452e8 <col:13> 'unsigned int' lvalue ParmVar 0x14b128e28 'partition_order' 'unsigned int'
              |   |   | `-ImplicitCastExpr 0x14b145340 <col:32> 'unsigned int' <IntegralCast>
              |   |   |   `-IntegerLiteral 0x14b145308 <col:32> 'int' 0
              |   |   `-BinaryOperator 0x14b1453e8 <col:37, col:49> 'int' '>'
              |   |     |-ImplicitCastExpr 0x14b1453b8 <col:37> 'unsigned int' <LValueToRValue>
              |   |     | `-DeclRefExpr 0x14b145378 <col:37> 'unsigned int' lvalue Var 0x14b129250 'partition' 'unsigned int'
              |   |     `-ImplicitCastExpr 0x14b1453d0 <col:49> 'unsigned int' <IntegralCast>
              |   |       `-IntegerLiteral 0x14b145398 <col:49> 'int' 0
              |   |-ImplicitCastExpr 0x14b1454a0 <col:53> 'unsigned int' <IntegralCast>
              |   | `-IntegerLiteral 0x14b145448 <col:53> 'int' 0
              |   `-ImplicitCastExpr 0x14b145488 <col:57> 'unsigned int' <LValueToRValue>
              |     `-DeclRefExpr 0x14b145468 <col:57> 'unsigned int' lvalue ParmVar 0x14b128da8 'predictor_order' 'unsigned int'
              |-<<<NULL>>>
              |-BinaryOperator 0x14b145578 <col:74, col:78> 'int' contains-errors '<'
              | |-ImplicitCastExpr 0x14b145548 <col:74> 'unsigned int' <LValueToRValue>
              | | `-DeclRefExpr 0x14b145508 <col:74> 'unsigned int' lvalue Var 0x14b129350 'u' 'unsigned int'
              | `-ImplicitCastExpr 0x14b145560 <col:78> 'unsigned int' contains-errors <LValueToRValue>
              |   `-DeclRefExpr 0x14b145528 <col:78> 'const unsigned int' contains-errors lvalue Var 0x14b142528 'partition_samples' 'const unsigned int'
              |-BinaryOperator 0x14b145608 <col:97, col:108> 'unsigned int' ','
              | |-UnaryOperator 0x14b1455b8 <col:97, col:98> 'unsigned int' postfix '++'
              | | `-DeclRefExpr 0x14b145598 <col:97> 'unsigned int' lvalue Var 0x14b129350 'u' 'unsigned int'
              | `-UnaryOperator 0x14b1455f0 <col:102, col:108> 'unsigned int' postfix '++'
              |   `-DeclRefExpr 0x14b1455d0 <col:102> 'unsigned int' lvalue Var 0x14b1292d0 'sample' 'unsigned int'
              `-CompoundStmt 0x14b145928 <col:112, line:52:4>
                `-BinaryOperator 0x14b145908 <line:51:5, col:24> '<dependent type>' contains-errors '='
                  |-ArraySubscriptExpr 0x14b1458c8 <col:5, col:20> '<dependent type>' contains-errors lvalue
                  | |-ImplicitCastExpr 0x14b145898 <col:5> '<dependent type>' contains-errors <LValueToRValue>
                  | | `-RecoveryExpr 0x14b145850 <col:5> '<dependent type>' contains-errors lvalue
                  | |   `-DeclRefExpr 0x14b145830 <col:5> 'int *' lvalue ParmVar 0x14b128f28 'residual' 'int *'
                  | `-ImplicitCastExpr 0x14b1458b0 <col:14> 'unsigned int' <LValueToRValue>
                  |   `-DeclRefExpr 0x14b145878 <col:14> 'unsigned int' lvalue Var 0x14b1292d0 'sample' 'unsigned int'
                  `-DeclRefExpr 0x14b1458e8 <col:24> 'int' lvalue Var 0x14b1291b8 'i' 'int'
