`-FunctionDecl 0x14000df18  line:1:16 invalid base64 'int *(int, const char *, int)'
  |-ParmVarDecl 0x14000dcf0 <col:23, col:27> col:27 used encode 'int'
  |-ParmVarDecl 0x14000dd70 <col:35, col:47> col:47 used in 'const char *'
  |-ParmVarDecl 0x14000ddf0 <col:51, col:55> col:55 used len 'int'
  `-CompoundStmt 0x140029710 <col:60, line:37:1>
    |-DeclStmt 0x14000e0b8 <line:3:5, col:14>
    | `-VarDecl 0x14000e050 <col:5, col:11> col:11 used out 'char *'
    |-DeclStmt 0x14000e150 <line:4:5, col:10>
    | `-VarDecl 0x14000e0e8 <col:5, col:9> col:9 used n 'int'
    |-IfStmt 0x140027588 <line:7:5, line:8:16>
    | |-UnaryOperator 0x140027528 <line:7:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x140027510 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1400274f0 <col:9> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x140027578 <line:8:9, col:16>
    |   `-RecoveryExpr 0x140027558 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x140027748 <line:9:5, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140027688 <col:5> 'int ()' Function 0x1400275d0 'BIO_set_flags' 'int ()'
    | |-RecoveryExpr 0x140027708 <col:19> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x140027728 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140027b98 <line:11:5, line:14:5>
    | |-UnaryOperator 0x140027990 <line:11:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x140027978 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x140027958 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x140027b78 <col:14, line:14:5>
    |   |-CallExpr 0x140027b08 <line:12:9, col:21> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x140027a88 <col:9> 'int ()' Function 0x1400279d0 'str_free' 'int ()'
    |   | `-RecoveryExpr 0x140027ae8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x140027b68 <line:13:9, col:16>
    |     `-RecoveryExpr 0x140027b48 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1400281a8 <line:19:5, line:24:5> has_else
    | |-ImplicitCastExpr 0x140027f50 <line:19:8> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x140027f30 <col:8> 'int' lvalue ParmVar 0x14000dcf0 'encode' 'int'
    | |-CompoundStmt 0x140028168 <col:16, line:22:5>
    | `-CompoundStmt 0x140028198 <col:12, line:24:5>
    |-IfStmt 0x140029640 <line:30:5, line:34:5>
    | |-BinaryOperator 0x140029470 <line:30:8, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x140029458 <col:8> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x140029418 <col:8> 'int' lvalue Var 0x14000e0e8 'n' 'int'
    | | `-IntegerLiteral 0x140029438 <col:10> 'int' 0
    | `-CompoundStmt 0x140029628 <col:13, line:34:5>
    |   `-CallExpr 0x1400295e8 <line:32:9, col:21> 'int'
    |     |-ImplicitCastExpr 0x1400295d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x140029590 <col:9> 'int ()' Function 0x1400279d0 'str_free' 'int ()'
    |     `-ImplicitCastExpr 0x140029610 <col:18> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1400295b0 <col:18> 'char *' lvalue Var 0x14000e050 'out' 'char *'
    `-ReturnStmt 0x140029700 <line:36:5, col:12>
      `-ImplicitCastExpr 0x1400296b8 <col:12> 'int *' <BitCast>
        `-ImplicitCastExpr 0x1400296a0 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x140029680 <col:12> 'char *' lvalue Var 0x14000e050 'out' 'char *'
