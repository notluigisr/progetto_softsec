`-FunctionDecl 0x120128418  line:1:12 invalid tls_construct_cke_dhe 'int (int *, unsigned char **, int *, int *)' static
  |-ParmVarDecl 0x120128128 <col:34, col:39> col:39 invalid s 'int *'
  |-ParmVarDecl 0x120128210 <col:42, col:58> col:58 used p 'unsigned char **'
  |-ParmVarDecl 0x120128290 <col:61, col:66> col:66 used len 'int *'
  |-ParmVarDecl 0x120128310 <col:71, col:76> col:76 al 'int *'
  `-CompoundStmt 0x10500a168 <line:2:1, line:36:1>
    |-DeclStmt 0x120128590 <line:5:5, col:26>
    | `-VarDecl 0x120128528 <col:5, col:19> col:19 invalid pub_key 'const int *'
    |-IfStmt 0x105009450 <line:9:5, line:12:5>
    | |-BinaryOperator 0x120128798 <line:9:9, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x120128758 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x120128778 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x105009430 <col:23, line:12:5>
    |   |-CallExpr 0x1050093d0 <line:10:9, col:65> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x105009310 <col:9> 'int ()' Function 0x105009258 'SSLerr' 'int ()'
    |   | |-RecoveryExpr 0x105009390 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1050093b0 <col:45> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x105009420 <line:11:9, col:16>
    |     `-IntegerLiteral 0x105009400 <col:16> 'int' 0
    |-IfStmt 0x105009978 <line:16:5, line:20:5>
    | |-RecoveryExpr 0x1050097f0 <line:16:9, col:57> '_Bool' contains-errors
    | `-CompoundStmt 0x105009960 <col:60, line:20:5>
    |   `-ReturnStmt 0x105009950 <line:19:9, col:16>
    |     `-IntegerLiteral 0x105009930 <col:16> 'int' 0
    |-BinaryOperator 0x105009c68 <line:24:5, col:32> 'int' contains-errors '='
    | |-UnaryOperator 0x105009b08 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x105009af0 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x105009ad0 <col:6> 'int *' lvalue ParmVar 0x120128290 'len' 'int *'
    | `-CallExpr 0x105009c40 <col:12, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x105009c00 <col:12> 'int ()' Function 0x105009b48 'BN_num_bytes' 'int ()'
    |   `-RecoveryExpr 0x105009c20 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x105009e78 <line:25:5, col:17> 'int'
    | |-ImplicitCastExpr 0x105009e60 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x105009d68 <col:5> 'int ()' Function 0x105009cb0 's2n' 'int ()'
    | |-ImplicitCastExpr 0x105009ea8 <col:9, col:10> 'int' <LValueToRValue>
    | | `-UnaryOperator 0x105009dc0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x105009da8 <col:10> 'int *' <LValueToRValue>
    | |     `-DeclRefExpr 0x105009d88 <col:10> 'int *' lvalue ParmVar 0x120128290 'len' 'int *'
    | `-ImplicitCastExpr 0x105009ec0 <col:15, col:16> 'unsigned char *' <LValueToRValue>
    |   `-UnaryOperator 0x105009e10 <col:15, col:16> 'unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x105009df8 <col:16> 'unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x105009dd8 <col:16> 'unsigned char **' lvalue ParmVar 0x120128210 'p' 'unsigned char **'
    |-CallExpr 0x10500a048 <line:26:5, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x105009fb8 <col:5> 'int ()' Function 0x105009f00 'BN_bn2bin' 'int ()'
    | |-RecoveryExpr 0x105009fd8 <col:15> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x10500a030 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x10500a018 <col:25> 'unsigned char **' <LValueToRValue>
    |     `-DeclRefExpr 0x105009ff8 <col:25> 'unsigned char **' lvalue ParmVar 0x120128210 'p' 'unsigned char **'
    |-CompoundAssignOperator 0x10500a0e8 <line:27:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-UnaryOperator 0x10500a0b0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x10500a098 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x10500a078 <col:6> 'int *' lvalue ParmVar 0x120128290 'len' 'int *'
    | `-IntegerLiteral 0x10500a0c8 <col:13> 'int' 2
    `-ReturnStmt 0x10500a158 <line:30:5, col:12>
      `-IntegerLiteral 0x10500a138 <col:12> 'int' 1
