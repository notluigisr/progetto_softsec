`-FunctionDecl 0x12f80e0c0  line:1:13 invalid framebuffer_update_request 'void (int *, int, int, int, int, int)' static
  |-ParmVarDecl 0x12f80dd28 <col:40, col:50> col:50 referenced invalid vs 'int *'
  |-ParmVarDecl 0x12f80dda8 <col:54, col:58> col:58 used incremental 'int'
  |-ParmVarDecl 0x12f80de28 <line:2:40, col:44> col:44 x_position 'int'
  |-ParmVarDecl 0x12f80dea8 <col:56, col:60> col:60 used y_position 'int'
  |-ParmVarDecl 0x12f80df28 <line:3:40, col:44> col:44 w 'int'
  |-ParmVarDecl 0x12f80dfa8 <col:47, col:51> col:51 used h 'int'
  `-CompoundStmt 0x12f828d30 <line:4:1, line:25:1>
    |-DeclStmt 0x12f80e218 <line:5:5, col:10>
    | `-VarDecl 0x12f80e1b0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x12f827540 <line:6:5, col:78>
    | `-VarDecl 0x12f80e248 <col:5, col:18> col:18 invalid width 'const int'
    |-DeclStmt 0x12f8277b0 <line:7:5, col:53>
    | `-VarDecl 0x12f827570 <col:5, col:18> col:18 invalid height 'const int'
    |-IfStmt 0x12f8278a0 <line:9:5, line:11:5>
    | |-BinaryOperator 0x12f827808 <line:9:9, col:22> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x12f8277c8 <col:9> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
    | | `-RecoveryExpr 0x12f8277e8 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f827888 <col:30, line:11:5>
    |   `-BinaryOperator 0x12f827868 <line:10:9, col:22> 'int' contains-errors '='
    |     |-DeclRefExpr 0x12f827828 <col:9> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
    |     `-RecoveryExpr 0x12f827848 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f827a48 <line:12:5, line:14:5>
    | |-BinaryOperator 0x12f827970 <line:12:9, col:27> 'int' contains-errors '>='
    | | |-BinaryOperator 0x12f827930 <col:9, col:22> 'int' '+'
    | | | |-ImplicitCastExpr 0x12f827900 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12f8278c0 <col:9> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
    | | | `-ImplicitCastExpr 0x12f827918 <col:22> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12f8278e0 <col:22> 'int' lvalue ParmVar 0x12f80dfa8 'h' 'int'
    | | `-RecoveryExpr 0x12f827950 <col:27> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f827a30 <col:35, line:14:5>
    |   `-BinaryOperator 0x12f827a10 <line:13:9, col:22> 'int' contains-errors '='
    |     |-DeclRefExpr 0x12f827990 <col:9> 'int' lvalue ParmVar 0x12f80dfa8 'h' 'int'
    |     `-BinaryOperator 0x12f8279f0 <col:13, col:22> '<dependent type>' contains-errors '-'
    |       |-RecoveryExpr 0x12f8279b0 <col:13> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12f8279d0 <col:22> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
    |-BinaryOperator 0x12f827b18 <line:16:5, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f827ab0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->need_update
    | | `-RecoveryExpr 0x12f827a88 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f827a68 <col:5> 'int *' lvalue ParmVar 0x12f80dd28 'vs' 'int *'
    | `-IntegerLiteral 0x12f827af8 <col:23> 'int' 1
    `-IfStmt 0x12f828d10 <line:17:5, line:24:5>
      |-UnaryOperator 0x12f827b70 <line:17:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x12f827b58 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12f827b38 <col:10> 'int' lvalue ParmVar 0x12f80dda8 'incremental' 'int'
      `-CompoundStmt 0x12f828cf0 <col:23, line:24:5>
        |-BinaryOperator 0x12f827c38 <line:18:9, col:28> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x12f827bd0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->force_update
        | | `-RecoveryExpr 0x12f827ba8 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x12f827b88 <col:9> 'int *' lvalue ParmVar 0x12f80dd28 'vs' 'int *'
        | `-IntegerLiteral 0x12f827c18 <col:28> 'int' 1
        `-ForStmt 0x12f828cb8 <line:19:9, line:23:9>
          |-BinaryOperator 0x12f827c98 <line:19:14, col:18> 'int' '='
          | |-DeclRefExpr 0x12f827c58 <col:14> 'int' lvalue Var 0x12f80e1b0 'i' 'int'
          | `-IntegerLiteral 0x12f827c78 <col:18> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x12f827d28 <col:21, col:25> 'int' '<'
          | |-ImplicitCastExpr 0x12f827cf8 <col:21> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x12f827cb8 <col:21> 'int' lvalue Var 0x12f80e1b0 'i' 'int'
          | `-ImplicitCastExpr 0x12f827d10 <col:25> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x12f827cd8 <col:25> 'int' lvalue ParmVar 0x12f80dfa8 'h' 'int'
          |-UnaryOperator 0x12f827d68 <col:28, col:29> 'int' postfix '++'
          | `-DeclRefExpr 0x12f827d48 <col:28> 'int' lvalue Var 0x12f80e1b0 'i' 'int'
          `-CompoundStmt 0x12f828c98 <col:33, line:23:9>
            |-CallExpr 0x12f827ff0 <line:20:13, col:59> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x12f827e60 <col:13> 'int ()' Function 0x12f827da8 'bitmap_set' 'int ()'
            | |-ArraySubscriptExpr 0x12f827f90 <col:24, col:48> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x12f827f78 <col:24, col:28> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x12f827ea0 <col:24, col:28> '<dependent type>' contains-errors lvalue ->dirty
            | | |   `-RecoveryExpr 0x12f827e80 <col:24> '<dependent type>' contains-errors lvalue
            | | `-BinaryOperator 0x12f827f58 <col:34, col:47> 'int' '+'
            | |   |-ImplicitCastExpr 0x12f827f28 <col:34> 'int' <LValueToRValue>
            | |   | `-DeclRefExpr 0x12f827ee8 <col:34> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
            | |   `-ImplicitCastExpr 0x12f827f40 <col:47> 'int' <LValueToRValue>
            | |     `-DeclRefExpr 0x12f827f08 <col:47> 'int' lvalue Var 0x12f80e1b0 'i' 'int'
            | |-IntegerLiteral 0x12f827fb0 <col:51> 'int' 0
            | `-RecoveryExpr 0x12f827fd0 <col:54> '<dependent type>' contains-errors lvalue
            `-CallExpr 0x12f828c60 <line:21:13, line:22:48> '<dependent type>' contains-errors
              |-DeclRefExpr 0x12f828108 <line:21:13> 'int ()' Function 0x12f828050 'bitmap_clear' 'int ()'
              |-ArraySubscriptExpr 0x12f828c00 <col:26, col:50> '<dependent type>' contains-errors lvalue
              | |-ImplicitCastExpr 0x12f8283e0 <col:26, col:30> '<dependent type>' contains-errors <LValueToRValue>
              | | `-CXXDependentScopeMemberExpr 0x12f828148 <col:26, col:30> '<dependent type>' contains-errors lvalue ->dirty
              | |   `-RecoveryExpr 0x12f828128 <col:26> '<dependent type>' contains-errors lvalue
              | `-BinaryOperator 0x12f8283c0 <col:36, col:49> 'int' '+'
              |   |-ImplicitCastExpr 0x12f828390 <col:36> 'int' <LValueToRValue>
              |   | `-DeclRefExpr 0x12f828190 <col:36> 'int' lvalue ParmVar 0x12f80dea8 'y_position' 'int'
              |   `-ImplicitCastExpr 0x12f8283a8 <col:49> 'int' <LValueToRValue>
              |     `-DeclRefExpr 0x12f8281b0 <col:49> 'int' lvalue Var 0x12f80e1b0 'i' 'int'
              |-RecoveryExpr 0x12f828258 <col:53> '<dependent type>' contains-errors lvalue
              `-BinaryOperator 0x12f828c40 <line:22:26, col:43> '<dependent type>' contains-errors '-'
                |-RecoveryExpr 0x12f828c20 <col:26> '<dependent type>' contains-errors lvalue
                `-RecoveryExpr 0x12f828290 <col:43> '<dependent type>' contains-errors lvalue
