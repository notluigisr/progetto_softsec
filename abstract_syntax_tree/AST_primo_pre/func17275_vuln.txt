`-FunctionDecl 0x14800ddf8  line:1:1 invalid dvi_document_file_exporter_end 'int (int *)'
  |-ParmVarDecl 0x14800dd28 <col:33, col:49> col:49 invalid exporter 'int *'
  `-CompoundStmt 0x148028620 <line:2:1, line:31:1>
    |-DeclStmt 0x14800df28 <line:3:2, col:21>
    | `-VarDecl 0x14800dec0 <col:2, col:9> col:9 used command_line 'char *'
    |-DeclStmt 0x14800dfc0 <line:4:2, col:16>
    | `-VarDecl 0x14800df58 <col:2, col:7> col:7 used exit_stat 'int'
    |-BinaryOperator 0x148027bb8 <line:10:2, line:13:37> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14800e1e8 <line:10:2> 'char *' lvalue Var 0x14800dec0 'command_line' 'char *'
    | `-CallExpr 0x148027b78 <col:17, line:13:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14800e2e8 <line:10:17> 'int ()' Function 0x14800e230 'g_strdup_printf' 'int ()'
    |   |-StringLiteral 0x14800e350 <col:34> 'char[4]' lvalue "STR"
    |   |-CXXDependentScopeMemberExpr 0x148027a18 <line:11:6, col:35> '<dependent type>' contains-errors lvalue ->str
    |   | `-CXXDependentScopeMemberExpr 0x1480279d0 <col:6, col:20> '<dependent type>' contains-errors lvalue ->exporter_opts
    |   |   `-RecoveryExpr 0x1480279b0 <col:6> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x148027a80 <line:12:6, col:20> '<dependent type>' contains-errors lvalue ->exporter_filename
    |   | `-RecoveryExpr 0x148027a60 <col:6> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x148027b30 <line:13:6, col:29> '<dependent type>' contains-errors lvalue ->filename
    |     `-CXXDependentScopeMemberExpr 0x148027ae8 <col:6, col:20> '<dependent type>' contains-errors lvalue ->context
    |       `-RecoveryExpr 0x148027ac8 <col:6> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x148027f48 <line:21:2, col:22> 'int'
    | |-ImplicitCastExpr 0x148027f30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x148027eb8 <col:2> 'int ()' Function 0x148027e00 'g_free' 'int ()'
    | `-ImplicitCastExpr 0x148027f70 <col:10> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x148027ed8 <col:10> 'char *' lvalue Var 0x14800dec0 'command_line' 'char *'
    `-IfStmt 0x1480284d0 <line:23:2, line:27:2> has_else
      |-RecoveryExpr 0x148027f88 <line:23:6, col:17> '_Bool' contains-errors
      |-CompoundStmt 0x1480280c8 <col:24, line:25:2>
      `-IfStmt 0x1480284b0 <col:9, line:27:2>
        |-RecoveryExpr 0x1480283e0 <line:25:13, col:64> '_Bool' contains-errors
        `-CompoundStmt 0x148028498 <col:77, line:27:2>
          `-CallExpr 0x148028458 <line:26:3, col:19> 'int'
            |-ImplicitCastExpr 0x148028440 <col:3> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x148028400 <col:3> 'int ()' Function 0x148027fd0 'g_warning' 'int ()'
            `-ImplicitCastExpr 0x148028480 <col:14> 'char *' <ArrayToPointerDecay>
              `-StringLiteral 0x148028420 <col:14> 'char[4]' lvalue "STR"
