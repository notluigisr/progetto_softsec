`-FunctionDecl 0x15600dfa8  line:1:1 invalid read_old_length 'int (int, int, int *, int *)'
  |-ParmVarDecl 0x15600dcf0 <col:17, col:30> col:30 invalid inp 'int'
  |-ParmVarDecl 0x15600dd70 <col:35, col:39> col:39 used ctb 'int'
  |-ParmVarDecl 0x15600de28 <col:44, col:53> col:53 invalid r_len 'int *'
  |-ParmVarDecl 0x15600dea8 <col:60, col:69> col:69 invalid r_size 'int *'
  `-CompoundStmt 0x156027ce0 <line:2:1, line:18:1>
    |-DeclStmt 0x15600e168 <line:3:2, col:23>
    | `-VarDecl 0x15600e088 <col:2, col:19> col:6 used llen 'int' cinit
    |   `-BinaryOperator 0x15600e148 <col:13, col:19> 'int' '&'
    |     |-ImplicitCastExpr 0x15600e130 <col:13> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15600e0f0 <col:13> 'int' lvalue ParmVar 0x15600dd70 'ctb' 'int'
    |     `-IntegerLiteral 0x15600e110 <col:19> 'int' 3
    `-IfStmt 0x156027cb0 <line:5:2, line:17:2> has_else
      |-BinaryOperator 0x15600e1d8 <line:5:6, col:14> 'int' '=='
      | |-ImplicitCastExpr 0x15600e1c0 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x15600e180 <col:6> 'int' lvalue Var 0x15600e088 'llen' 'int'
      | `-IntegerLiteral 0x15600e1a0 <col:14> 'int' 0
      |-CompoundStmt 0x1560274d0 <col:17, line:8:2>
      | |-BinaryOperator 0x156027428 <line:6:3, col:31> '<dependent type>' contains-errors '='
      | | |-UnaryOperator 0x15600e230 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x15600e218 <col:4> '<dependent type>' contains-errors <LValueToRValue>
      | | |   `-RecoveryExpr 0x15600e1f8 <col:4> '<dependent type>' contains-errors lvalue
      | | `-CallExpr 0x156027400 <col:12, col:31> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x15600e3a0 <col:12> 'int ()' Function 0x15600e2e8 'cdk_stream_getc' 'int ()'
      | |   `-RecoveryExpr 0x15600e3c0 <col:28> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x1560274b8 <line:7:3, col:12> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   `-ParenExpr 0x156027498 <col:3, col:11> '<dependent type>' contains-errors
      |     `-UnaryOperator 0x156027480 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
      |       `-ImplicitCastExpr 0x156027468 <col:5> '<dependent type>' contains-errors <LValueToRValue>
      |         `-RecoveryExpr 0x156027448 <col:5> '<dependent type>' contains-errors lvalue
      `-IfStmt 0x156027c80 <line:8:9, line:17:2> has_else
        |-BinaryOperator 0x156027548 <line:8:13, col:21> 'int' '=='
        | |-ImplicitCastExpr 0x156027530 <col:13> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x1560274f0 <col:13> 'int' lvalue Var 0x15600e088 'llen' 'int'
        | `-IntegerLiteral 0x156027510 <col:21> 'int' 1
        |-CompoundStmt 0x1560277e0 <col:24, line:11:2>
        | |-BinaryOperator 0x156027700 <line:9:3, col:23> '<dependent type>' contains-errors '='
        | | |-UnaryOperator 0x1560275a0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | | `-ImplicitCastExpr 0x156027588 <col:4> '<dependent type>' contains-errors <LValueToRValue>
        | | |   `-RecoveryExpr 0x156027568 <col:4> '<dependent type>' contains-errors lvalue
        | | `-CallExpr 0x1560276d8 <col:12, col:23> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x156027698 <col:12> 'int ()' Function 0x1560275e0 'read_16' 'int ()'
        | |   `-RecoveryExpr 0x1560276b8 <col:20> '<dependent type>' contains-errors lvalue
        | `-CompoundAssignOperator 0x1560277b0 <line:10:3, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        |   |-ParenExpr 0x156027770 <col:3, col:11> '<dependent type>' contains-errors
        |   | `-UnaryOperator 0x156027758 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
        |   |   `-ImplicitCastExpr 0x156027740 <col:5> '<dependent type>' contains-errors <LValueToRValue>
        |   |     `-RecoveryExpr 0x156027720 <col:5> '<dependent type>' contains-errors lvalue
        |   `-IntegerLiteral 0x156027790 <col:16> 'int' 2
        `-IfStmt 0x156027c50 <line:11:9, line:17:2> has_else
          |-BinaryOperator 0x156027858 <line:11:13, col:21> 'int' '=='
          | |-ImplicitCastExpr 0x156027840 <col:13> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x156027800 <col:13> 'int' lvalue Var 0x15600e088 'llen' 'int'
          | `-IntegerLiteral 0x156027820 <col:21> 'int' 2
          |-CompoundStmt 0x156027af0 <col:24, line:14:2>
          | |-BinaryOperator 0x156027a10 <line:12:3, col:23> '<dependent type>' contains-errors '='
          | | |-UnaryOperator 0x1560278b0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
          | | | `-ImplicitCastExpr 0x156027898 <col:4> '<dependent type>' contains-errors <LValueToRValue>
          | | |   `-RecoveryExpr 0x156027878 <col:4> '<dependent type>' contains-errors lvalue
          | | `-CallExpr 0x1560279e8 <col:12, col:23> '<dependent type>' contains-errors
          | |   |-DeclRefExpr 0x1560279a8 <col:12> 'int ()' Function 0x1560278f0 'read_32' 'int ()'
          | |   `-RecoveryExpr 0x1560279c8 <col:20> '<dependent type>' contains-errors lvalue
          | `-CompoundAssignOperator 0x156027ac0 <line:13:3, col:16> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |   |-ParenExpr 0x156027a80 <col:3, col:11> '<dependent type>' contains-errors
          |   | `-UnaryOperator 0x156027a68 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow
          |   |   `-ImplicitCastExpr 0x156027a50 <col:5> '<dependent type>' contains-errors <LValueToRValue>
          |   |     `-RecoveryExpr 0x156027a30 <col:5> '<dependent type>' contains-errors lvalue
          |   `-IntegerLiteral 0x156027aa0 <col:16> 'int' 4
          `-CompoundStmt 0x156027c30 <line:14:9, line:17:2>
            |-BinaryOperator 0x156027b80 <line:15:3, col:12> '<dependent type>' contains-errors '='
            | |-UnaryOperator 0x156027b48 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
            | | `-ImplicitCastExpr 0x156027b30 <col:4> '<dependent type>' contains-errors <LValueToRValue>
            | |   `-RecoveryExpr 0x156027b10 <col:4> '<dependent type>' contains-errors lvalue
            | `-IntegerLiteral 0x156027b60 <col:12> 'int' 0
            `-BinaryOperator 0x156027c10 <line:16:3, col:13> '<dependent type>' contains-errors '='
              |-UnaryOperator 0x156027bd8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
              | `-ImplicitCastExpr 0x156027bc0 <col:4> '<dependent type>' contains-errors <LValueToRValue>
              |   `-RecoveryExpr 0x156027ba0 <col:4> '<dependent type>' contains-errors lvalue
              `-IntegerLiteral 0x156027bf0 <col:13> 'int' 0
