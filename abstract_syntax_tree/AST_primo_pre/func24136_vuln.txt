`-FunctionDecl 0x12900de48  line:1:6 invalid keyctl_read_key 'long (int, char)'
  |-ParmVarDecl 0x12900dcf0 <col:22, col:35> col:35 invalid keyid 'int'
  |-ParmVarDecl 0x12900dd68 <col:42, col:47> col:47 __user 'char'
  `-CompoundStmt 0x12902cdc0 <line:2:1, line:46:1>
    |-DeclStmt 0x12900e0e8 <line:3:2, col:17>
    | |-RecordDecl 0x12900df00 <col:2, col:9> col:9 struct key
    | `-VarDecl 0x12900e068 <col:2, col:14> col:14 used key 'struct key *'
    |-DeclStmt 0x12900e180 <line:5:2, col:10>
    | `-VarDecl 0x12900e118 <col:2, col:7> col:7 used ret 'long'
    |-IfStmt 0x12902b8e0 <line:9:2, line:12:2>
    | |-CallExpr 0x12902b738 <line:9:6, col:20> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12902b6b8 <col:6> 'int ()' Function 0x12902b600 'IS_ERR' 'int ()'
    | | `-RecoveryExpr 0x12902b718 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12902b8c0 <col:23, line:12:2>
    |   |-BinaryOperator 0x12902b838 <line:10:3, col:10> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x12902b760 <col:3> 'long' lvalue Var 0x12900e118 'ret' 'long'
    |   | `-UnaryOperator 0x12902b820 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12902b808 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12902b7e8 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12902b8a8 <line:11:3, col:8> 'error' 0x12902b858
    |-BinaryOperator 0x12902bac8 <line:14:2, col:30> 'struct key *' contains-errors '='
    | |-DeclRefExpr 0x12902b900 <col:2> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    | `-CallExpr 0x12902baa0 <col:8, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12902ba00 <col:8> 'int ()' Function 0x12902b948 'key_ref_to_ptr' 'int ()'
    |   `-RecoveryExpr 0x12902ba80 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12902bcf8 <line:17:2, col:45> 'long' contains-errors '='
    | |-DeclRefExpr 0x12902bae8 <col:2> 'long' lvalue Var 0x12900e118 'ret' 'long'
    | `-CallExpr 0x12902bcc8 <col:8, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12902bbe8 <col:8> 'int ()' Function 0x12902bb30 'key_permission' 'int ()'
    |   |-RecoveryExpr 0x12902bc88 <col:23> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12902bca8 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12902be10 <line:18:2, line:19:8>
    | |-BinaryOperator 0x12902bd88 <line:18:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x12902bd58 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x12902bd18 <col:6> 'long' lvalue Var 0x12900e118 'ret' 'long'
    | | `-ImplicitCastExpr 0x12902bd70 <col:13> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x12902bd38 <col:13> 'int' 0
    | `-GotoStmt 0x12902bdf8 <line:19:3, col:8> 'can_read_key' 0x12902bda8
    |-IfStmt 0x12902bf40 <line:20:2, line:21:8>
    | |-BinaryOperator 0x12902bf08 <line:20:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12902be30 <col:6> 'long' lvalue Var 0x12900e118 'ret' 'long'
    | | `-UnaryOperator 0x12902bef0 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x12902bed8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x12902beb8 <col:14> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x12902bf28 <line:21:3, col:8> 'error' 0x12902b858
    |-IfStmt 0x12902c298 <line:24:2, line:27:2>
    | |-UnaryOperator 0x12902c100 <line:24:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x12902c0d8 <col:7, col:31> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x12902c040 <col:7> 'int ()' Function 0x12902bf88 'is_key_possessed' 'int ()'
    | |   `-RecoveryExpr 0x12902c0b8 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12902c278 <col:34, line:27:2>
    |   |-BinaryOperator 0x12902c1f0 <line:25:3, col:10> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x12902c118 <col:3> 'long' lvalue Var 0x12900e118 'ret' 'long'
    |   | `-UnaryOperator 0x12902c1d8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12902c1c0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12902c1a0 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12902c260 <line:26:3, col:8> 'error2' 0x12902c210
    |-LabelStmt 0x12902c4c0 <line:30:1, line:31:24> 'can_read_key'
    | `-BinaryOperator 0x12902c4a0 <col:2, col:24> 'long' '='
    |   |-DeclRefExpr 0x12902c2b8 <col:2> 'long' lvalue Var 0x12900e118 'ret' 'long'
    |   `-ImplicitCastExpr 0x12902c488 <col:8, col:24> 'long' <IntegralCast>
    |     `-CallExpr 0x12902c448 <col:8, col:24> 'int'
    |       |-ImplicitCastExpr 0x12902c430 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12902c3b8 <col:8> 'int ()' Function 0x12902c300 'key_validate' 'int ()'
    |       `-ImplicitCastExpr 0x12902c470 <col:21> 'struct key *' <LValueToRValue>
    |         `-DeclRefExpr 0x12902c3d8 <col:21> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    |-IfStmt 0x12902cba0 <line:32:2, line:40:2>
    | |-BinaryOperator 0x12902c550 <line:32:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x12902c520 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x12902c4e0 <col:6> 'long' lvalue Var 0x12900e118 'ret' 'long'
    | | `-ImplicitCastExpr 0x12902c538 <col:13> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x12902c500 <col:13> 'int' 0
    | `-CompoundStmt 0x12902cb80 <col:16, line:40:2>
    |   |-BinaryOperator 0x12902c650 <line:33:3, col:10> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x12902c570 <col:3> 'long' lvalue Var 0x12900e118 'ret' 'long'
    |   | `-UnaryOperator 0x12902c638 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12902c620 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12902c600 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12902cb60 <line:34:3, line:39:3>
    |     |-CXXDependentScopeMemberExpr 0x12902c6d0 <line:34:7, col:18> '<dependent type>' contains-errors lvalue ->read
    |     | `-RecoveryExpr 0x12902c6a8 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12902c670 <col:7> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    |     `-CompoundStmt 0x12902cb40 <col:24, line:39:3>
    |       |-CallExpr 0x12902c890 <line:36:4, col:23> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12902c7f8 <col:4> 'int ()' Function 0x12902c740 'down_read' 'int ()'
    |       | `-UnaryOperator 0x12902c878 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       |   `-RecoveryExpr 0x12902c850 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |       |     `-DeclRefExpr 0x12902c818 <col:15> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    |       `-CallExpr 0x12902cb18 <line:38:4, col:21> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x12902ca80 <col:4> 'int ()' Function 0x12902c9c8 'up_read' 'int ()'
    |         `-UnaryOperator 0x12902cb00 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           `-RecoveryExpr 0x12902cad8 <col:13, col:18> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x12902caa0 <col:13> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    |-LabelStmt 0x12902cd38 <line:42:1, line:43:13> 'error2'
    | `-CallExpr 0x12902ccf8 <col:2, col:13> 'int'
    |   |-ImplicitCastExpr 0x12902cce0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12902cca0 <col:2> 'int ()' Function 0x12902cbe8 'key_put' 'int ()'
    |   `-ImplicitCastExpr 0x12902cd20 <col:10> 'struct key *' <LValueToRValue>
    |     `-DeclRefExpr 0x12902ccc0 <col:10> 'struct key *' lvalue Var 0x12900e068 'key' 'struct key *'
    `-LabelStmt 0x12902cda0 <line:44:1, line:45:9> 'error'
      `-ReturnStmt 0x12902cd90 <col:2, col:9>
        `-ImplicitCastExpr 0x12902cd78 <col:9> 'long' <LValueToRValue>
          `-DeclRefExpr 0x12902cd58 <col:9> 'long' lvalue Var 0x12900e118 'ret' 'long'
