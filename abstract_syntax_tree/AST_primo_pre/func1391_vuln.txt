`-FunctionDecl 0x1579281c8  line:1:17 invalid pac_sub 'int (int)' static
  |-ParmVarDecl 0x1579280f0 <col:25, col:34> col:34 invalid i 'int'
  `-CompoundStmt 0x157941938 <line:2:1, line:14:1>
    |-DeclStmt 0x157928690 <line:3:5, line:6:6>
    | `-VarDecl 0x157928368 <line:3:5, col:32> col:26 invalid sub 'const int[16]' static
    |-DeclStmt 0x157928728 <line:8:5, col:10>
    | `-VarDecl 0x1579286c0 <col:5, col:9> col:9 used b 'int'
    |-ForStmt 0x1579418b8 <line:10:5, line:12:5>
    | |-BinaryOperator 0x157928780 <line:10:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x157928740 <col:10> 'int' lvalue Var 0x1579286c0 'b' 'int'
    | | `-IntegerLiteral 0x157928760 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x157941800 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1579287e0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1579287a0 <col:17> 'int' lvalue Var 0x1579286c0 'b' 'int'
    | | `-IntegerLiteral 0x1579287c0 <col:21> 'int' 64
    | |-CompoundAssignOperator 0x157941860 <col:25, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x157941820 <col:25> 'int' lvalue Var 0x1579286c0 'b' 'int'
    | | `-IntegerLiteral 0x157941840 <col:30> 'int' 16
    | `-CompoundStmt 0x1579418a8 <col:34, line:12:5>
    `-ReturnStmt 0x157941928 <line:13:5, col:12>
      `-RecoveryExpr 0x157941908 <col:12> '<dependent type>' contains-errors lvalue
