`-FunctionDecl 0x158128288  line:1:1 invalid ikev1_cert_print 'int (int *, char)'
  |-ParmVarDecl 0x158128128 <col:18, col:38> col:38 invalid ndo 'int *'
  |-ParmVarDecl 0x1581281a0 <col:43, col:50> col:50 tpay 'char'
  `-CompoundStmt 0x158143588 <line:6:1, line:31:1>
    |-DeclStmt 0x158128528 <line:7:2, col:31>
    | |-RecordDecl 0x158128340 <col:8, col:15> col:15 struct ikev1_pl_cert
    | `-VarDecl 0x1581284a8 <col:2, col:30> col:30 used p 'const struct ikev1_pl_cert *'
    |-DeclStmt 0x158141a70 <line:8:2, col:27>
    | `-VarDecl 0x158128590 <col:2, col:23> col:23 invalid cert 'struct ikev1_pl_cert'
    |-DeclStmt 0x158141da0 <line:9:2, line:13:3>
    | `-VarDecl 0x158141ae8 <line:9:2, line:13:2> line:9:21 used certstr 'const char *[3]' static cinit
    |   `-InitListExpr 0x158141c58 <col:33, line:13:2> 'const char *[3]'
    |     |-ImplicitCastExpr 0x158141cb0 <line:10:3> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x158141c98 <col:3> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x158141b90 <col:3> 'char[4]' lvalue "STR"
    |     |-ImplicitCastExpr 0x158141ce8 <line:11:3> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x158141cd0 <col:3> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x158141bb0 <col:3> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x158141d28 <line:12:3> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x158141d10 <col:3> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x158141bd0 <col:3> 'char[4]' lvalue "STR"
    |-ImplicitCastExpr 0x158142398 <line:18:2, col:14> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x158142368 <col:2, col:14> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x158142268 <col:2> 'int ()' Function 0x1581421b0 'ND_TCHECK' 'int ()'
    |   `-UnaryOperator 0x1581422c0 <col:12, col:13> 'const struct ikev1_pl_cert' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x1581422a8 <col:13> 'const struct ikev1_pl_cert *' <LValueToRValue>
    |       `-DeclRefExpr 0x158142288 <col:13> 'const struct ikev1_pl_cert *' lvalue Var 0x1581284a8 'p' 'const struct ikev1_pl_cert *'
    |-CallExpr 0x1581425b8 <line:19:2, col:43> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158142490 <col:2> 'int ()' Function 0x1581423d8 'UNALIGNED_MEMCPY' 'int ()'
    | |-UnaryOperator 0x1581424d0 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x1581424b0 <col:20> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x158142598 <col:26> '<dependent type>' contains-errors lvalue
    | `-UnaryExprOrTypeTraitExpr 0x158142540 <col:31, col:42> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x158142520 <col:37, col:42> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x158142500 <col:38> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x158142ff0 <line:21:2, col:57> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1581426e8 <col:2> 'int ()' Function 0x158141e58 'ND_PRINT' 'int ()'
    | `-ParenExpr 0x158142fd0 <col:11, col:56> '<dependent type>' contains-errors
    |   `-BinaryOperator 0x158142fb0 <col:12, col:55> '<dependent type>' contains-errors ','
    |     |-BinaryOperator 0x158142748 <col:12, col:16> 'char[4]' contains-errors ','
    |     | |-RecoveryExpr 0x158142708 <col:12> '<dependent type>' contains-errors lvalue
    |     | `-StringLiteral 0x158142728 <col:16> 'char[4]' lvalue "STR"
    |     `-CallExpr 0x158142f80 <col:23, col:55> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x158142eb8 <col:23> 'int ()' Function 0x158142e00 'STR_OR_ID' 'int ()'
    |       |-ParenExpr 0x158142f40 <col:33, col:45> '<dependent type>' contains-errors lvalue
    |       | `-CXXDependentScopeMemberExpr 0x158142ef8 <col:34, col:39> '<dependent type>' contains-errors lvalue .encode
    |       |   `-RecoveryExpr 0x158142ed8 <col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x158142f60 <col:48> 'const char *[3]' lvalue Var 0x158141ae8 'certstr' 'const char *[3]'
    |-IfStmt 0x1581434a0 <line:22:2, line:26:2>
    | |-BinaryOperator 0x158143178 <line:22:6, col:32> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1581430a0 <col:6, col:15> 'int' contains-errors '<'
    | | | |-IntegerLiteral 0x158143018 <col:6> 'int' 2
    | | | `-CXXDependentScopeMemberExpr 0x158143058 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | |   `-RecoveryExpr 0x158143038 <col:10> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x158143158 <col:28, col:32> 'int' contains-errors '<'
    | |   |-IntegerLiteral 0x1581430c0 <col:28> 'int' 4
    | |   `-RecoveryExpr 0x158143138 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x158143480 <col:42, line:26:2>
    |   |-CallExpr 0x158143238 <line:23:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x158143198 <col:3> 'int ()' Function 0x158141e58 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x158143218 <col:12, col:22> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x1581431f8 <col:13, col:17> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x1581431b8 <col:13> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x1581431d8 <col:17> 'char[4]' lvalue "STR"
    |   `-IfStmt 0x158143460 <line:24:3, line:25:9>
    |     |-RecoveryExpr 0x1581433d8 <line:24:7, col:62> '_Bool' contains-errors
    |     `-GotoStmt 0x158143448 <line:25:4, col:9> 'trunc' 0x1581433f8
    `-LabelStmt 0x158143568 <line:28:1, col:6> 'trunc'
      `-NullStmt 0x158143560 <col:6>
