`-FunctionDecl 0x13d1289a8  line:1:1 hstore_from_array 'int (int)'
  |-ParmVarDecl 0x13d1288d8 <col:19> col:19 PG_FUNCTION_ARGS 'int'
  `-CompoundStmt 0x13d1432d0 <line:2:1, line:82:1>
    |-DeclStmt 0x13d128e98 <line:4:2, col:34>
    | `-VarDecl 0x13d128ca8 <col:2, col:33> col:8 used ndims 'int' cinit
    |   `-CallExpr 0x13d128e70 <col:16, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d128df0 <col:16> 'int ()' Function 0x13d128d38 'ARR_NDIM' 'int ()'
    |     `-RecoveryExpr 0x13d128e50 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13d128f30 <line:5:2, col:13>
    | `-VarDecl 0x13d128ec8 <col:2, col:8> col:8 used count 'int'
    |-DeclStmt 0x13e808868 <line:11:2, col:16>
    | `-VarDecl 0x13e808800 <col:2, col:8> col:8 used in_count 'int'
    |-DeclStmt 0x13e808900 <line:12:2, col:9>
    | `-VarDecl 0x13e808898 <col:2, col:8> col:8 used i 'int'
    |-CallExpr 0x13e808c40 <line:14:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e8089f8 <col:2> 'int ()' Function 0x13e808940 'Assert' 'int ()'
    | `-BinaryOperator 0x13e808c20 <col:9, col:35> 'int' contains-errors '=='
    |   |-CallExpr 0x13e808bd8 <col:9, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13e808af8 <col:9> 'int ()' Function 0x13e808a40 'ARR_ELEMTYPE' 'int ()'
    |   | `-RecoveryExpr 0x13e808bb8 <col:22> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13e808c00 <col:35> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x13e808ca0 <line:16:2, line:40:2>
    | |-ImplicitCastExpr 0x13e808c88 <line:16:10> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x13e808c68 <col:10> 'int' contains-errors lvalue Var 0x13d128ca8 'ndims' 'int'
    | `-CompoundStmt 0x13e8097c0 <line:17:2, line:40:2>
    |   |-CaseStmt 0x13e808d00 <line:18:3, <invalid sloc>>
    |   | |-ConstantExpr 0x13e808ce8 <col:8> 'int'
    |   | | `-IntegerLiteral 0x13e808cc8 <col:8> 'int' 0
    |   | `-NullStmt 0x13e808e68 <<invalid sloc>>
    |   |-CaseStmt 0x13e808fa8 <line:22:3, <invalid sloc>>
    |   | |-ConstantExpr 0x13e808f90 <col:8> 'int'
    |   | | `-IntegerLiteral 0x13e808f70 <col:8> 'int' 1
    |   | `-NullStmt 0x13e8094e8 <<invalid sloc>>
    |   |-BreakStmt 0x13e8094f0 <line:27:4>
    |   |-CaseStmt 0x13e809530 <line:29:3, <invalid sloc>>
    |   | |-ConstantExpr 0x13e809518 <col:8> 'int'
    |   | | `-IntegerLiteral 0x13e8094f8 <col:8> 'int' 2
    |   | `-NullStmt 0x13e8096b0 <<invalid sloc>>
    |   |-BreakStmt 0x13e8096b8 <line:34:4>
    |   `-DefaultStmt 0x13e8097a0 <line:36:3, col:10>
    |     `-NullStmt 0x13e809798 <col:10>
    |-BinaryOperator 0x13d141450 <line:46:2, col:21> 'int' '='
    | |-DeclRefExpr 0x13d1413b8 <col:2> 'int' lvalue Var 0x13d128ec8 'count' 'int'
    | `-BinaryOperator 0x13d141430 <col:10, col:21> 'int' '/'
    |   |-ImplicitCastExpr 0x13d141418 <col:10> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13d1413d8 <col:10> 'int' lvalue Var 0x13e808800 'in_count' 'int'
    |   `-IntegerLiteral 0x13d1413f8 <col:21> 'int' 2
    `-ForStmt 0x13d1430f8 <line:50:2, line:75:2>
      |-BinaryOperator 0x13d1415d0 <line:50:7, col:11> 'int' '='
      | |-DeclRefExpr 0x13d141590 <col:7> 'int' lvalue Var 0x13e808898 'i' 'int'
      | `-IntegerLiteral 0x13d1415b0 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13d141660 <col:14, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x13d141630 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x13d1415f0 <col:14> 'int' lvalue Var 0x13e808898 'i' 'int'
      | `-ImplicitCastExpr 0x13d141648 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x13d141610 <col:18> 'int' lvalue Var 0x13d128ec8 'count' 'int'
      |-UnaryOperator 0x13d1416a0 <col:25, col:27> 'int' prefix '++'
      | `-DeclRefExpr 0x13d141680 <col:27> 'int' lvalue Var 0x13e808898 'i' 'int'
      `-CompoundStmt 0x13d1430e0 <line:51:2, line:75:2>
        `-IfStmt 0x13d1430b0 <line:57:3, line:74:3> has_else
          |-RecoveryExpr 0x13d1418e0 <line:57:7, col:25> '_Bool' contains-errors
          |-CompoundStmt 0x13d141dd0 <line:58:3, line:65:3>
          `-CompoundStmt 0x13d1430a0 <line:67:3, line:74:3>
