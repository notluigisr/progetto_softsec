`-FunctionDecl 0x13c9281a8  line:1:1 dwg_errstrings 'int (int)'
  |-ParmVarDecl 0x13c9280d8 <col:17, col:21> col:21 used error 'int'
  `-CompoundStmt 0x13c942a98 <line:2:1, line:35:1>
    |-IfStmt 0x13c928560 <line:3:3, line:4:27>
    | |-BinaryOperator 0x13c9282f8 <line:3:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9282e0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9282a0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9282c0 <col:15> 'int' 1
    | `-CallExpr 0x13c928530 <line:4:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c928440 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c928510 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9284c0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9286d0 <line:5:3, line:6:27>
    | |-BinaryOperator 0x13c9285d8 <line:5:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9285c0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c928580 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9285a0 <col:15> 'int' 2
    | `-CallExpr 0x13c9286a0 <line:6:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9285f8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c928680 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c928630 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940a50 <line:7:3, line:8:27>
    | |-BinaryOperator 0x13c928748 <line:7:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c928730 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9286f0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c928710 <col:15> 'int' 4
    | `-CallExpr 0x13c940a20 <line:8:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c928768 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940a00 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9287a0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940bc0 <line:9:3, line:10:27>
    | |-BinaryOperator 0x13c940ac8 <line:9:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940ab0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940a70 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940a90 <col:15> 'int' 8
    | `-CallExpr 0x13c940b90 <line:10:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940ae8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940b70 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940b20 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940d30 <line:11:3, line:12:27>
    | |-BinaryOperator 0x13c940c38 <line:11:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940c20 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940be0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940c00 <col:15> 'int' 16
    | `-CallExpr 0x13c940d00 <line:12:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940c58 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940ce0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940c90 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c940ea0 <line:13:3, line:14:27>
    | |-BinaryOperator 0x13c940da8 <line:13:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940d90 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940d50 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940d70 <col:15> 'int' 32
    | `-CallExpr 0x13c940e70 <line:14:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940dc8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940e50 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940e00 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941010 <line:15:3, line:16:27>
    | |-BinaryOperator 0x13c940f18 <line:15:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c940f00 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c940ec0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c940ee0 <col:15> 'int' 64
    | `-CallExpr 0x13c940fe0 <line:16:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c940f38 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c940fc0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c940f70 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941180 <line:18:3, line:19:27>
    | |-BinaryOperator 0x13c941088 <line:18:7, col:15> 'int' '>'
    | | |-ImplicitCastExpr 0x13c941070 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941030 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941050 <col:15> 'int' 127
    | `-CallExpr 0x13c941150 <line:19:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9410a8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941130 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9410e0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9412f0 <line:20:3, line:21:27>
    | |-BinaryOperator 0x13c9411f8 <line:20:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9411e0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9411a0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9411c0 <col:15> 'int' 128
    | `-CallExpr 0x13c9412c0 <line:21:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941218 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9412a0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941250 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941460 <line:22:3, line:23:27>
    | |-BinaryOperator 0x13c941368 <line:22:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941350 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941310 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941330 <col:15> 'int' 256
    | `-CallExpr 0x13c941430 <line:23:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941388 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941410 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9413c0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9415d0 <line:24:3, line:25:27>
    | |-BinaryOperator 0x13c9414d8 <line:24:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9414c0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941480 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9414a0 <col:15> 'int' 512
    | `-CallExpr 0x13c9415a0 <line:25:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9414f8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941580 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941530 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c941740 <line:26:3, line:27:27>
    | |-BinaryOperator 0x13c941648 <line:26:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941630 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9415f0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941610 <col:15> 'int' 1024
    | `-CallExpr 0x13c941710 <line:27:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941668 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9416f0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c9416a0 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9418b0 <line:28:3, line:29:27>
    | |-BinaryOperator 0x13c9417b8 <line:28:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c9417a0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c941760 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c941780 <col:15> 'int' 2048
    | `-CallExpr 0x13c941880 <line:29:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9417d8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c941860 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941810 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c942830 <line:30:3, line:31:27>
    | |-BinaryOperator 0x13c941928 <line:30:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c941910 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c9418d0 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c9418f0 <col:15> 'int' 4096
    | `-CallExpr 0x13c942800 <line:31:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c941948 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c9419d0 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c941980 <col:22> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c9429a0 <line:32:3, line:33:27>
    | |-BinaryOperator 0x13c9428a8 <line:32:7, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x13c942890 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c942850 <col:7> 'int' lvalue ParmVar 0x13c9280d8 'error' 'int'
    | | `-IntegerLiteral 0x13c942870 <col:15> 'int' 8192
    | `-CallExpr 0x13c942970 <line:33:5, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13c9428c8 <col:5> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
    |   |-RecoveryExpr 0x13c942950 <col:14> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x13c942900 <col:22> 'char[4]' lvalue "STR"
    `-CallExpr 0x13c942a68 <line:34:3, col:25> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c9429c0 <col:3> 'int ()' Function 0x13c928388 'HANDLER' 'int ()'
      |-RecoveryExpr 0x13c942a48 <col:12> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x13c9429f8 <col:20> 'char[4]' lvalue "STR"
