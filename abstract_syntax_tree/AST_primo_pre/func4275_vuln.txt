`-FunctionDecl 0x153128758  line:1:12 propagate_one 'int (struct mount *)' static
  |-ParmVarDecl 0x153128648 <col:26, col:40> col:40 used m 'struct mount *'
  `-CompoundStmt 0x153144798 <line:2:1, line:52:1>
    |-DeclStmt 0x153140b40 <line:3:2, col:21>
    | `-VarDecl 0x153140ad8 <col:2, col:16> col:16 used child 'struct mount *'
    |-DeclStmt 0x153140bd8 <line:4:2, col:10>
    | `-VarDecl 0x153140b70 <col:2, col:6> col:6 used type 'int'
    |-IfStmt 0x153140e18 <line:6:2, line:7:10>
    | |-CallExpr 0x153140da8 <line:6:6, col:18> 'int'
    | | |-ImplicitCastExpr 0x153140d90 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x153140d20 <col:6> 'int ()' Function 0x153140c68 'IS_MNT_NEW' 'int ()'
    | | `-ImplicitCastExpr 0x153140dd0 <col:17> 'struct mount *' <LValueToRValue>
    | |   `-DeclRefExpr 0x153140d40 <col:17> 'struct mount *' lvalue ParmVar 0x153128648 'm' 'struct mount *'
    | `-ReturnStmt 0x153140e08 <line:7:3, col:10>
    |   `-IntegerLiteral 0x153140de8 <col:10> 'int' 0
    |-IfStmt 0x153141168 <line:9:2, line:10:10>
    | |-UnaryOperator 0x153141120 <line:9:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1531410f0 <col:7, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x153140f18 <col:7> 'int ()' Function 0x153140e60 'is_subdir' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x1531410a8 <col:17, col:21> '<dependent type>' contains-errors lvalue ->m_dentry
    | |   | `-RecoveryExpr 0x153141088 <col:17> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x153140ff8 <col:31, col:38> '<dependent type>' contains-errors lvalue .mnt_root
    | |     `-RecoveryExpr 0x153140fd0 <col:31, col:34> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x153140f98 <col:31> 'struct mount *' lvalue ParmVar 0x153128648 'm' 'struct mount *'
    | `-ReturnStmt 0x153141158 <line:10:3, col:10>
    |   `-IntegerLiteral 0x153141138 <col:10> 'int' 0
    |-IfStmt 0x153143a10 <line:11:2, line:33:2> has_else
    | |-CallExpr 0x153141310 <line:11:6, col:24> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x153141268 <col:6> 'int ()' Function 0x1531411b0 'peers' 'int ()'
    | | |-DeclRefExpr 0x153141288 <col:12> 'struct mount *' lvalue ParmVar 0x153128648 'm' 'struct mount *'
    | | `-RecoveryExpr 0x1531412f0 <col:15> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x1531413d8 <col:27, line:13:2>
    | | `-BinaryOperator 0x1531413b8 <line:12:3, col:10> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x153141340 <col:3> 'int' lvalue Var 0x153140b70 'type' 'int'
    | |   `-RecoveryExpr 0x153141398 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1531439f0 <line:13:9, line:33:2>
    |   |-DeclStmt 0x153141528 <line:14:3, col:22>
    |   | |-VarDecl 0x153141418 <col:3, col:17> col:17 used n 'struct mount *'
    |   | `-VarDecl 0x1531414a8 <col:3, col:21> col:21 used p 'struct mount *'
    |   `-ForStmt 0x153143800 <line:15:3, line:28:3>
    |     |-BinaryOperator 0x153141598 <line:15:8, col:12> 'struct mount *' '='
    |     | |-DeclRefExpr 0x153141540 <col:8> 'struct mount *' lvalue Var 0x153141418 'n' 'struct mount *'
    |     | `-ImplicitCastExpr 0x153141580 <col:12> 'struct mount *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x153141560 <col:12> 'struct mount *' lvalue ParmVar 0x153128648 'm' 'struct mount *'
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x153141610 <col:17, col:21> 'struct mount *' '='
    |     | |-DeclRefExpr 0x1531415b8 <col:17> 'struct mount *' lvalue Var 0x153141418 'n' 'struct mount *'
    |     | `-ImplicitCastExpr 0x1531415f8 <col:21> 'struct mount *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1531415d8 <col:21> 'struct mount *' lvalue Var 0x1531414a8 'p' 'struct mount *'
    |     `-CompoundStmt 0x1531437e0 <col:24, line:28:3>
    |       |-BinaryOperator 0x1531416b0 <line:16:4, col:11> 'struct mount *' contains-errors '='
    |       | |-DeclRefExpr 0x153141630 <col:4> 'struct mount *' lvalue Var 0x1531414a8 'p' 'struct mount *'
    |       | `-RecoveryExpr 0x153141688 <col:8, col:11> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x153141650 <col:8> 'struct mount *' lvalue Var 0x153141418 'n' 'struct mount *'
    |       `-IfStmt 0x1531437c0 <line:17:4, line:27:4>
    |         |-BinaryOperator 0x153141958 <line:17:8, col:43> 'int' contains-errors '||'
    |         | |-BinaryOperator 0x1531418e0 <col:8, col:13> 'int' contains-errors '=='
    |         | | |-DeclRefExpr 0x1531416d0 <col:8> 'struct mount *' lvalue Var 0x1531414a8 'p' 'struct mount *'
    |         | | `-RecoveryExpr 0x1531418c0 <col:13> '<dependent type>' contains-errors lvalue
    |         | `-CallExpr 0x153141918 <col:28, col:43> 'int'
    |         |   |-ImplicitCastExpr 0x153141900 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |         |   | `-DeclRefExpr 0x153141808 <col:28> 'int ()' Function 0x153141750 'IS_MNT_MARKED' 'int ()'
    |         |   `-ImplicitCastExpr 0x153141940 <col:42> 'struct mount *' <LValueToRValue>
    |         |     `-DeclRefExpr 0x153141828 <col:42> 'struct mount *' lvalue Var 0x1531414a8 'p' 'struct mount *'
    |         `-CompoundStmt 0x153143798 <col:46, line:27:4>
    |           |-WhileStmt 0x153143578 <line:18:5, line:21:5>
    |           | |-BinaryOperator 0x153143488 <line:18:12, col:37> 'int' contains-errors '!='
    |           | | |-CXXDependentScopeMemberExpr 0x153143440 <col:12, col:23> '<dependent type>' contains-errors lvalue ->mnt_master
    |           | | | `-RecoveryExpr 0x153143420 <col:12> '<dependent type>' contains-errors lvalue
    |           | | `-DeclRefExpr 0x1531419d8 <col:37> 'struct mount *' lvalue Var 0x1531414a8 'p' 'struct mount *'
    |           | `-CompoundStmt 0x153143568 <col:40, line:21:5>
    |           |-IfStmt 0x153143770 <line:22:5, line:25:5>
    |           | |-UnaryOperator 0x153143688 <line:22:9, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
    |           | | `-CallExpr 0x153143658 <col:10, col:28> '<dependent type>' contains-errors
    |           | |   |-DeclRefExpr 0x153143598 <col:10> 'int ()' Function 0x1531411b0 'peers' 'int ()'
    |           | |   |-DeclRefExpr 0x1531435b8 <col:16> 'struct mount *' lvalue Var 0x153141418 'n' 'struct mount *'
    |           | |   `-RecoveryExpr 0x153143638 <col:19> '<dependent type>' contains-errors lvalue
    |           | `-CompoundStmt 0x153143760 <col:31, line:25:5>
    |           `-BreakStmt 0x153143790 <line:26:5>
    |-IfStmt 0x153143f68 <line:39:2, line:40:23>
    | |-CallExpr 0x153143da0 <line:39:6, col:18> 'int'
    | | |-ImplicitCastExpr 0x153143d88 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x153143d48 <col:6> 'int ()' Function 0x153143c90 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x153143dc8 <col:13> 'struct mount *' <LValueToRValue>
    | |   `-DeclRefExpr 0x153143d68 <col:13> 'struct mount *' lvalue Var 0x153140ad8 'child' 'struct mount *'
    | `-ReturnStmt 0x153143f58 <line:40:3, col:23>
    |   `-CallExpr 0x153143f18 <col:10, col:23> 'int'
    |     |-ImplicitCastExpr 0x153143f00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x153143ec0 <col:10> 'int ()' Function 0x153143e08 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x153143f40 <col:18> 'struct mount *' <LValueToRValue>
    |       `-DeclRefExpr 0x153143ee0 <col:18> 'struct mount *' lvalue Var 0x153140ad8 'child' 'struct mount *'
    |-IfStmt 0x1531445d0 <line:45:2, line:49:2>
    | |-RecoveryExpr 0x153144210 <line:45:6, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x1531445b8 <col:36, line:49:2>
    |   `-CallExpr 0x153144490 <line:47:3, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x153144410 <col:3> 'int ()' Function 0x153144358 'SET_MNT_MARK' 'int ()'
    |     `-RecoveryExpr 0x153144468 <col:16, col:19> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x153144430 <col:16> 'struct mount *' lvalue ParmVar 0x153128648 'm' 'struct mount *'
    `-ReturnStmt 0x153144788 <line:51:2, col:9>
      `-IntegerLiteral 0x153144768 <col:9> 'int' 0
