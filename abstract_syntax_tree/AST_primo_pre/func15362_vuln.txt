`-FunctionDecl 0x1230544d8  line:1:29 invalid dce120_clock_source_create 'struct clock_source *(struct dc_context *, struct dc_bios *, enum clock_source_id, const struct dce110_clk_src_regs *, int)' static
  |-ParmVarDecl 0x12303c2e8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'
  |-ParmVarDecl 0x123053ec8 <line:3:2, col:18> col:18 used bios 'struct dc_bios *'
  |-ParmVarDecl 0x123054048 <line:4:2, col:23> col:23 invalid id 'enum clock_source_id'
  |-ParmVarDecl 0x123054218 <line:5:2, col:36> col:36 used regs 'const struct dce110_clk_src_regs *'
  |-ParmVarDecl 0x1230542b0 <line:6:2, col:7> col:7 invalid dp_clk_src 'int'
  `-CompoundStmt 0x123056f00 <line:7:1, line:22:1>
    |-DeclStmt 0x1230549a0 <line:8:2, line:9:40>
    | |-RecordDecl 0x1230545a8 <line:8:2, col:9> col:9 struct dce110_clk_src
    | `-VarDecl 0x123054718 <col:2, col:25> col:25 used clk_src 'struct dce110_clk_src *'
    |-IfStmt 0x123054a50 <line:11:2, line:12:10>
    | |-UnaryOperator 0x1230549f0 <line:11:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1230549d8 <col:7> 'struct dce110_clk_src *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1230549b8 <col:7> 'struct dce110_clk_src *' lvalue Var 0x123054718 'clk_src' 'struct dce110_clk_src *'
    | `-ReturnStmt 0x123054a40 <line:12:3, col:10>
    |   `-RecoveryExpr 0x123054a20 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123056d30 <line:14:2, line:18:2>
    | |-CallExpr 0x123054d38 <line:14:6, line:15:35> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x123054b50 <line:14:6> 'int ()' Function 0x123054a98 'dce112_clk_src_construct' 'int ()'
    | | |-DeclRefExpr 0x123054b70 <col:31> 'struct dce110_clk_src *' lvalue Var 0x123054718 'clk_src' 'struct dce110_clk_src *'
    | | |-DeclRefExpr 0x123054b90 <col:40> 'struct dc_context *' lvalue ParmVar 0x12303c2e8 'ctx' 'struct dc_context *'
    | | |-DeclRefExpr 0x123054bb0 <col:45> 'struct dc_bios *' lvalue ParmVar 0x123053ec8 'bios' 'struct dc_bios *'
    | | |-RecoveryExpr 0x123054bd0 <col:51> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x123054bf0 <line:15:10> 'const struct dce110_clk_src_regs *' lvalue ParmVar 0x123054218 'regs' 'const struct dce110_clk_src_regs *'
    | | |-UnaryOperator 0x123054ce8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x123054cc8 <col:17> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x123054d20 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x123054d00 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x123056d10 <col:38, line:18:2>
    |   |-BinaryOperator 0x123056c68 <line:16:3, col:30> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x123056c00 <col:3, col:17> '<dependent type>' contains-errors lvalue .dp_clk_src
    |   | | `-RecoveryExpr 0x123054dc8 <col:3, col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x123054d90 <col:3> 'struct dce110_clk_src *' lvalue Var 0x123054718 'clk_src' 'struct dce110_clk_src *'
    |   | `-RecoveryExpr 0x123056c48 <col:30> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x123056d00 <line:17:3, col:20>
    |     `-UnaryOperator 0x123056ce8 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x123056cc0 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x123056c88 <col:11> 'struct dce110_clk_src *' lvalue Var 0x123054718 'clk_src' 'struct dce110_clk_src *'
    |-CallExpr 0x123056e98 <line:20:2, col:20> 'int'
    | `-ImplicitCastExpr 0x123056e80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x123056e30 <col:2> 'int ()' Function 0x123056d78 'BREAK_TO_DEBUGGER' 'int ()'
    `-ReturnStmt 0x123056ef0 <line:21:2, col:9>
      `-RecoveryExpr 0x123056ed0 <col:9> '<dependent type>' contains-errors lvalue
