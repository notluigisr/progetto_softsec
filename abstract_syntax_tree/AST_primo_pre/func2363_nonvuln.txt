`-FunctionDecl 0x1301281c8  line:1:5 invalid gdImageGrayScale 'int (int)'
  |-ParmVarDecl 0x1301280f0 <col:22, col:33> col:33 invalid src 'int'
  `-CompoundStmt 0x130142388 <line:2:1, line:33:1>
    |-DeclStmt 0x130128390 <line:3:2, col:10>
    | |-VarDecl 0x130128290 <col:2, col:6> col:6 used x 'int'
    | `-VarDecl 0x130128310 <col:2, col:9> col:9 used y 'int'
    |-DeclStmt 0x1301285d0 <line:4:2, col:13>
    | |-VarDecl 0x1301283c0 <col:2, col:6> col:6 used r 'int'
    | |-VarDecl 0x130128440 <col:2, col:8> col:8 used g 'int'
    | |-VarDecl 0x1301284c0 <col:2, col:10> col:10 used b 'int'
    | `-VarDecl 0x130128540 <col:2, col:12> col:12 used a 'int'
    |-DeclStmt 0x130128700 <line:5:2, col:18>
    | |-VarDecl 0x130128600 <col:2, col:6> col:6 used new_pxl 'int'
    | `-VarDecl 0x130128680 <col:2, col:15> col:15 used pxl 'int'
    |-DeclStmt 0x128008290 <line:6:2, col:46>
    | `-TypedefDecl 0x128008238 <col:2, col:45> col:16 referenced FuncPtr 'int (*)()'
    |   `-PointerType 0x1301287b0 'int (*)()'
    |     `-ParenType 0x130128750 'int ()' sugar
    |       `-FunctionNoProtoType 0x130128720 'int ()' cdecl
    |         `-BuiltinType 0x130055710 'int'
    |-DeclStmt 0x128008388 <line:7:2, col:11>
    | `-VarDecl 0x128008320 <col:2, col:10> col:10 used f 'FuncPtr':'int (*)()'
    |-BinaryOperator 0x128008550 <line:8:2, col:28> 'FuncPtr':'int (*)()' contains-errors '='
    | |-DeclRefExpr 0x1280083a0 <col:2> 'FuncPtr':'int (*)()' lvalue Var 0x128008320 'f' 'FuncPtr':'int (*)()'
    | `-CallExpr 0x128008528 <col:6, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1280084e8 <col:6> 'int ()' Function 0x128008430 'GET_PIXEL_FUNCTION' 'int ()'
    |   `-RecoveryExpr 0x128008508 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x128008650 <line:10:2, line:12:2>
    | |-BinaryOperator 0x1280085e8 <line:10:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x128008570 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1280085c8 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128008638 <col:17, line:12:2>
    |   `-ReturnStmt 0x128008628 <line:11:3, col:10>
    |     `-IntegerLiteral 0x128008608 <col:10> 'int' 0
    |-ForStmt 0x130142320 <line:14:2, line:31:2>
    | |-BinaryOperator 0x1280086b0 <line:14:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x128008670 <col:7> 'int' lvalue Var 0x130128310 'y' 'int'
    | | `-IntegerLiteral 0x128008690 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x128008758 <col:12, col:19> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1280086d0 <col:12> 'int' lvalue Var 0x130128310 'y' 'int'
    | | `-CXXDependentScopeMemberExpr 0x128008710 <col:14, col:19> '<dependent type>' contains-errors lvalue ->sy
    | |   `-RecoveryExpr 0x1280086f0 <col:14> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x128008798 <col:23, col:25> 'int' prefix '++'
    | | `-DeclRefExpr 0x128008778 <col:25> 'int' lvalue Var 0x130128310 'y' 'int'
    | `-CompoundStmt 0x130142308 <col:28, line:31:2>
    |   `-ForStmt 0x1301422d0 <line:15:3, line:30:3>
    |     |-BinaryOperator 0x1280087f0 <line:15:8, col:10> 'int' '='
    |     | |-DeclRefExpr 0x1280087b0 <col:8> 'int' lvalue Var 0x130128290 'x' 'int'
    |     | `-IntegerLiteral 0x1280087d0 <col:10> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x128008898 <col:13, col:20> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x128008810 <col:13> 'int' lvalue Var 0x130128290 'x' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x128008850 <col:15, col:20> '<dependent type>' contains-errors lvalue ->sx
    |     |   `-RecoveryExpr 0x128008830 <col:15> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x1280088d8 <col:24, col:26> 'int' prefix '++'
    |     | `-DeclRefExpr 0x1280088b8 <col:26> 'int' lvalue Var 0x130128290 'x' 'int'
    |     `-CompoundStmt 0x130142278 <col:29, line:30:3>
    |       |-BinaryOperator 0x1280089c8 <line:16:4, col:22> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1280088f0 <col:4> 'int' lvalue Var 0x130128680 'pxl' 'int'
    |       | `-CallExpr 0x128008990 <col:10, col:22> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x128008910 <col:10> 'FuncPtr':'int (*)()' lvalue Var 0x128008320 'f' 'FuncPtr':'int (*)()'
    |       |   |-RecoveryExpr 0x128008930 <col:13> '<dependent type>' contains-errors lvalue
    |       |   |-DeclRefExpr 0x128008950 <col:18> 'int' lvalue Var 0x130128290 'x' 'int'
    |       |   `-DeclRefExpr 0x128008970 <col:21> 'int' lvalue Var 0x130128310 'y' 'int'
    |       |-BinaryOperator 0x128008b78 <line:17:4, col:27> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1280089e8 <col:4> 'int' lvalue Var 0x1301283c0 'r' 'int'
    |       | `-CallExpr 0x128008b48 <col:8, col:27> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x128008ae8 <col:8> 'int ()' Function 0x128008a30 'gdImageRed' 'int ()'
    |       |   |-RecoveryExpr 0x128008b08 <col:19> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x128008b28 <col:24> 'int' lvalue Var 0x130128680 'pxl' 'int'
    |       |-BinaryOperator 0x128008d28 <line:18:4, col:29> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x128008b98 <col:4> 'int' lvalue Var 0x130128440 'g' 'int'
    |       | `-CallExpr 0x128008cf8 <col:8, col:29> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x128008c98 <col:8> 'int ()' Function 0x128008be0 'gdImageGreen' 'int ()'
    |       |   |-RecoveryExpr 0x128008cb8 <col:21> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x128008cd8 <col:26> 'int' lvalue Var 0x130128680 'pxl' 'int'
    |       |-BinaryOperator 0x128008ed8 <line:19:4, col:28> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x128008d48 <col:4> 'int' lvalue Var 0x1301284c0 'b' 'int'
    |       | `-CallExpr 0x128008ea8 <col:8, col:28> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x128008e48 <col:8> 'int ()' Function 0x128008d90 'gdImageBlue' 'int ()'
    |       |   |-RecoveryExpr 0x128008e68 <col:20> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x128008e88 <col:25> 'int' lvalue Var 0x130128680 'pxl' 'int'
    |       |-BinaryOperator 0x128009088 <line:20:4, col:29> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x128008ef8 <col:4> 'int' lvalue Var 0x130128540 'a' 'int'
    |       | `-CallExpr 0x128009058 <col:8, col:29> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x128008ff8 <col:8> 'int ()' Function 0x128008f40 'gdImageAlpha' 'int ()'
    |       |   |-RecoveryExpr 0x128009018 <col:21> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x128009038 <col:26> 'int' lvalue Var 0x130128680 'pxl' 'int'
    |       |-BinaryOperator 0x1301419c8 <line:21:4, col:53> 'int' '='
    |       | |-DeclRefExpr 0x1280090a8 <col:4> 'int' lvalue Var 0x1301283c0 'r' 'int'
    |       | `-BinaryOperator 0x1301419a8 <col:8, col:53> 'int' '='
    |       |   |-DeclRefExpr 0x1280090c8 <col:8> 'int' lvalue Var 0x130128440 'g' 'int'
    |       |   `-BinaryOperator 0x130141988 <col:12, col:53> 'int' '='
    |       |     |-DeclRefExpr 0x1280090e8 <col:12> 'int' lvalue Var 0x1301284c0 'b' 'int'
    |       |     `-CStyleCastExpr 0x130141960 <col:16, col:53> 'int' <FloatingToIntegral>
    |       |       `-ParenExpr 0x130141940 <col:22, col:53> 'double'
    |       |         `-BinaryOperator 0x1301418e8 <col:23, col:52> 'double' '+'
    |       |           |-BinaryOperator 0x130141838 <col:23, col:41> 'double' '+'
    |       |           | |-BinaryOperator 0x128009178 <col:23, col:30> 'double' '*'
    |       |           | | |-FloatingLiteral 0x128009108 <col:23> 'double' 2.990000e-01
    |       |           | | `-ImplicitCastExpr 0x128009160 <col:30> 'double' <IntegralToFloating>
    |       |           | |   `-ImplicitCastExpr 0x128009148 <col:30> 'int' <LValueToRValue>
    |       |           | |     `-DeclRefExpr 0x128009128 <col:30> 'int' lvalue Var 0x1301283c0 'r' 'int'
    |       |           | `-BinaryOperator 0x130141818 <col:34, col:41> 'double' '*'
    |       |           |   |-FloatingLiteral 0x128009198 <col:34> 'double' 5.870000e-01
    |       |           |   `-ImplicitCastExpr 0x130141800 <col:41> 'double' <IntegralToFloating>
    |       |           |     `-ImplicitCastExpr 0x1280091d8 <col:41> 'int' <LValueToRValue>
    |       |           |       `-DeclRefExpr 0x1280091b8 <col:41> 'int' lvalue Var 0x130128440 'g' 'int'
    |       |           `-BinaryOperator 0x1301418c8 <col:45, col:52> 'double' '*'
    |       |             |-FloatingLiteral 0x130141858 <col:45> 'double' 1.140000e-01
    |       |             `-ImplicitCastExpr 0x1301418b0 <col:52> 'double' <IntegralToFloating>
    |       |               `-ImplicitCastExpr 0x130141898 <col:52> 'int' <LValueToRValue>
    |       |                 `-DeclRefExpr 0x130141878 <col:52> 'int' lvalue Var 0x1301284c0 'b' 'int'
    |       |-BinaryOperator 0x130141bf0 <line:23:4, col:55> 'int' contains-errors '='
    |       | |-DeclRefExpr 0x1301419e8 <col:4> 'int' lvalue Var 0x130128600 'new_pxl' 'int'
    |       | `-CallExpr 0x130141ba8 <col:14, col:55> '<dependent type>' contains-errors
    |       |   |-DeclRefExpr 0x130141ae8 <col:14> 'int ()' Function 0x130141a30 'gdImageColorAllocateAlpha' 'int ()'
    |       |   |-RecoveryExpr 0x130141b08 <col:40> '<dependent type>' contains-errors lvalue
    |       |   |-DeclRefExpr 0x130141b28 <col:45> 'int' lvalue Var 0x1301283c0 'r' 'int'
    |       |   |-DeclRefExpr 0x130141b48 <col:48> 'int' lvalue Var 0x130128440 'g' 'int'
    |       |   |-DeclRefExpr 0x130141b68 <col:51> 'int' lvalue Var 0x1301284c0 'b' 'int'
    |       |   `-DeclRefExpr 0x130141b88 <col:54> 'int' lvalue Var 0x130128540 'a' 'int'
    |       |-IfStmt 0x130141ee0 <line:24:4, line:26:4>
    |       | |-BinaryOperator 0x130141c80 <line:24:8, col:20> 'int' '=='
    |       | | |-ImplicitCastExpr 0x130141c68 <col:8> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x130141c10 <col:8> 'int' lvalue Var 0x130128600 'new_pxl' 'int'
    |       | | `-UnaryOperator 0x130141c50 <col:19, col:20> 'int' prefix '-'
    |       | |   `-IntegerLiteral 0x130141c30 <col:20> 'int' 1
    |       | `-CompoundStmt 0x130141ec8 <col:23, line:26:4>
    |       |   `-BinaryOperator 0x130141ea8 <line:25:5, col:55> 'int' contains-errors '='
    |       |     |-DeclRefExpr 0x130141ca0 <col:5> 'int' lvalue Var 0x130128600 'new_pxl' 'int'
    |       |     `-CallExpr 0x130141e60 <col:15, col:55> '<dependent type>' contains-errors
    |       |       |-DeclRefExpr 0x130141da0 <col:15> 'int ()' Function 0x130141ce8 'gdImageColorClosestAlpha' 'int ()'
    |       |       |-RecoveryExpr 0x130141dc0 <col:40> '<dependent type>' contains-errors lvalue
    |       |       |-DeclRefExpr 0x130141de0 <col:45> 'int' lvalue Var 0x1301283c0 'r' 'int'
    |       |       |-DeclRefExpr 0x130141e00 <col:48> 'int' lvalue Var 0x130128440 'g' 'int'
    |       |       |-DeclRefExpr 0x130141e20 <col:51> 'int' lvalue Var 0x1301284c0 'b' 'int'
    |       |       `-DeclRefExpr 0x130141e40 <col:54> 'int' lvalue Var 0x130128540 'a' 'int'
    |       `-IfStmt 0x130142258 <line:27:4, line:29:4>
    |         |-BinaryOperator 0x130142060 <line:27:8, col:32> 'int' contains-errors '&&'
    |         | |-ParenExpr 0x130141f78 <col:8, col:15> 'int'
    |         | | `-BinaryOperator 0x130141f58 <col:9, col:14> 'int' '>='
    |         | |   |-ImplicitCastExpr 0x130141f40 <col:9> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x130141f00 <col:9> 'int' lvalue Var 0x130128310 'y' 'int'
    |         | |   `-IntegerLiteral 0x130141f20 <col:14> 'int' 0
    |         | `-ParenExpr 0x130142040 <col:20, col:32> 'int' contains-errors
    |         |   `-BinaryOperator 0x130142020 <col:21, col:30> 'int' contains-errors '<'
    |         |     |-DeclRefExpr 0x130141f98 <col:21> 'int' lvalue Var 0x130128310 'y' 'int'
    |         |     `-CXXDependentScopeMemberExpr 0x130141fd8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->sy
    |         |       `-RecoveryExpr 0x130141fb8 <col:25> '<dependent type>' contains-errors lvalue
    |         `-CompoundStmt 0x130142240 <col:35, line:29:4>
    |           `-CallExpr 0x130142200 <line:28:5, col:40> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x130142160 <col:5> 'int ()' Function 0x1301420a8 'gdImageSetPixel' 'int ()'
    |             |-RecoveryExpr 0x130142180 <col:22> '<dependent type>' contains-errors lvalue
    |             |-DeclRefExpr 0x1301421a0 <col:27> 'int' lvalue Var 0x130128290 'x' 'int'
    |             |-DeclRefExpr 0x1301421c0 <col:30> 'int' lvalue Var 0x130128310 'y' 'int'
    |             `-DeclRefExpr 0x1301421e0 <col:33> 'int' lvalue Var 0x130128600 'new_pxl' 'int'
    `-ReturnStmt 0x130142378 <line:32:2, col:9>
      `-IntegerLiteral 0x130142358 <col:9> 'int' 1
