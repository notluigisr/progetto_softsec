`-FunctionDecl 0x12400dfb8  line:1:12 init_dumping 'int (char *, int (*)(char *))' static
  |-ParmVarDecl 0x12400dcd8 <col:25, col:31> col:31 used database 'char *'
  |-ParmVarDecl 0x12400de90 <col:41, col:60> col:45 used init_func 'int (*)(char *)'
  `-CompoundStmt 0x124028600 <line:2:1, line:27:1>
    |-IfStmt 0x124027930 <line:3:3, line:7:3>
    | |-CallExpr 0x12400e288 <line:3:7, col:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12400e1e0 <col:7> 'int ()' Function 0x12400e128 'mysql_select_db' 'int ()'
    | | |-RecoveryExpr 0x12400e268 <col:23> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12400e218 <col:30> 'char *' lvalue ParmVar 0x12400dcd8 'database' 'char *'
    | `-CompoundStmt 0x124027910 <line:4:3, line:7:3>
    |   |-CallExpr 0x1240278b0 <line:5:5, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12400e398 <col:5> 'int ()' Function 0x12400e2e0 'DB_error' 'int ()'
    |   | |-RecoveryExpr 0x124027890 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x124027840 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x124027900 <line:6:5, col:12>
    |     `-IntegerLiteral 0x1240278e0 <col:12> 'int' 1
    |-IfStmt 0x1240285b0 <line:8:3, line:25:3>
    | |-BinaryOperator 0x124027aa0 <line:8:7, col:17> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x124027a38 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x124027a20 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x124027a00 <col:8> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x124027a88 <col:16, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x124027a70 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x124027a50 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124028598 <line:9:3, line:25:3>
    |   `-IfStmt 0x124028578 <line:10:5, line:24:5>
    |     |-BinaryOperator 0x124027b50 <line:10:9, col:26> 'int' contains-errors '||'
    |     | |-RecoveryExpr 0x124027b10 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x124027b30 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x124028538 <line:11:5, line:24:5>
    |       |-DeclStmt 0x124027c80 <line:13:7, col:45>
    |       | `-VarDecl 0x124027c18 <col:7, col:12> col:12 invalid quoted_database_buf 'char'
    |       |-DeclStmt 0x124027f00 <line:14:7, col:75>
    |       | `-VarDecl 0x124027cb0 <col:7, col:74> col:13 used qdatabase 'char *' cinit
    |       |   `-CallExpr 0x124027ec8 <col:24, col:74> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x124027df8 <col:24> 'int ()' Function 0x124027d40 'quote_name' 'int ()'
    |       |     |-DeclRefExpr 0x124027e18 <col:35> 'char *' lvalue ParmVar 0x12400dcd8 'database' 'char *'
    |       |     |-RecoveryExpr 0x124027e38 <col:44> '<dependent type>' contains-errors lvalue
    |       |     `-RecoveryExpr 0x124027ea8 <col:64> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x1240280f0 <line:16:7, line:17:37> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x124027ff8 <line:16:7> 'int ()' Function 0x124027f40 'print_comment' 'int ()'
    |       | |-RecoveryExpr 0x1240280d0 <col:21> '<dependent type>' contains-errors lvalue
    |       | |-IntegerLiteral 0x124028030 <col:37> 'int' 0
    |       | |-StringLiteral 0x124028050 <line:17:21> 'char[4]' lvalue "STR"
    |       | `-DeclRefExpr 0x124028070 <col:28> 'char *' contains-errors lvalue Var 0x124027cb0 'qdatabase' 'char *'
    |       |-CallExpr 0x124028188 <line:20:7, col:26> 'int' contains-errors
    |       | |-ImplicitCastExpr 0x124028170 <col:7> 'int (*)(char *)' <LValueToRValue>
    |       | | `-DeclRefExpr 0x124028130 <col:7> 'int (*)(char *)' lvalue ParmVar 0x12400de90 'init_func' 'int (*)(char *)'
    |       | `-ImplicitCastExpr 0x1240281b0 <col:17> 'char *' contains-errors <LValueToRValue>
    |       |   `-DeclRefExpr 0x124028150 <col:17> 'char *' contains-errors lvalue Var 0x124027cb0 'qdatabase' 'char *'
    |       |-CallExpr 0x124028378 <line:22:7, col:46> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1240282a8 <col:7> 'int ()' Function 0x1240281f0 'fprintf' 'int ()'
    |       | |-RecoveryExpr 0x124028358 <col:15> '<dependent type>' contains-errors lvalue
    |       | |-StringLiteral 0x1240282e0 <col:30> 'char[4]' lvalue "STR"
    |       | `-DeclRefExpr 0x124028300 <col:37> 'char *' contains-errors lvalue Var 0x124027cb0 'qdatabase' 'char *'
    |       `-CallExpr 0x124028510 <line:23:7, col:30> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x124028490 <col:7> 'int ()' Function 0x1240283d8 'check_io' 'int ()'
    |         `-RecoveryExpr 0x1240284f0 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1240285f0 <line:26:3, col:10>
      `-IntegerLiteral 0x1240285d0 <col:10> 'int' 0
