`-FunctionDecl 0x1279281a8  line:1:1 do_modelines 'int (int)'
  |-ParmVarDecl 0x1279280d8 <col:14, col:18> col:18 used flags 'int'
  `-CompoundStmt 0x1279434b0 <line:2:1, line:26:1>
    |-DeclStmt 0x127928338 <line:4:5, col:17>
    | `-VarDecl 0x1279282d0 <col:5, col:10> col:10 used nmlines 'int'
    |-DeclStmt 0x1279283f0 <line:5:5, col:27>
    | `-VarDecl 0x127928368 <col:5, col:26> col:16 used entered 'int' static cinit
    |   `-IntegerLiteral 0x1279283d0 <col:26> 'int' 0
    |-IfStmt 0x127928538 <line:7:5, line:8:2>
    | |-RecoveryExpr 0x127928508 <line:7:9, col:54> '_Bool' contains-errors
    | `-ReturnStmt 0x127928528 <line:8:2>
    |-IfStmt 0x1279285a0 <line:12:5, line:13:2>
    | |-ImplicitCastExpr 0x127928578 <line:12:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x127928558 <col:9> 'int' lvalue Var 0x127928368 'entered' 'int'
    | `-ReturnStmt 0x127928590 <line:13:2>
    |-UnaryOperator 0x1279285e0 <line:15:5, col:7> 'int' prefix '++'
    | `-DeclRefExpr 0x1279285c0 <col:7> 'int' lvalue Var 0x127928368 'entered' 'int'
    |-ForStmt 0x127942d60 <line:16:5, line:19:16>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1279429f8 <line:16:20, col:84> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x127942998 <col:20, col:59> 'int' contains-errors '&&'
    | | | |-CXXDependentScopeMemberExpr 0x127942860 <col:20, col:28> '<dependent type>' contains-errors lvalue ->b_p_ml
    | | | | `-RecoveryExpr 0x127942840 <col:20> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x127942978 <col:38, col:59> 'int' contains-errors '<='
    | | |   |-RecoveryExpr 0x1279428a8 <col:38> '<dependent type>' contains-errors lvalue
    | | |   `-CXXDependentScopeMemberExpr 0x127942930 <col:46, col:59> '<dependent type>' contains-errors lvalue .ml_line_count
    | | |     `-CXXDependentScopeMemberExpr 0x1279428e8 <col:46, col:54> '<dependent type>' contains-errors lvalue ->b_ml
    | | |       `-RecoveryExpr 0x1279428c8 <col:46> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1279429d8 <col:76, col:84> 'int' contains-errors '<='
    | |   |-RecoveryExpr 0x1279429b8 <col:76> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1279287c8 <col:84> 'int' lvalue Var 0x1279282d0 'nmlines' 'int'
    | |-UnaryOperator 0x127942a68 <line:17:16, col:18> '<dependent type>' contains-errors prefix '++' cannot overflow
    | | `-RecoveryExpr 0x127942a48 <col:18> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x127942d40 <line:18:2, line:19:16>
    |   |-BinaryOperator 0x127942cc0 <line:18:6, col:35> 'int' contains-errors '=='
    |   | |-CallExpr 0x127942c70 <col:6, col:30> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x127942b90 <col:6> 'int ()' Function 0x127942ad8 'chk_modeline' 'int ()'
    |   | | |-RecoveryExpr 0x127942c50 <col:19> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x127942bc8 <col:25> 'int' lvalue ParmVar 0x1279280d8 'flags' 'int'
    |   | `-RecoveryExpr 0x127942ca0 <col:35> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x127942d20 <line:19:6, col:16> 'int' '='
    |     |-DeclRefExpr 0x127942ce0 <col:6> 'int' lvalue Var 0x1279282d0 'nmlines' 'int'
    |     `-IntegerLiteral 0x127942d00 <col:16> 'int' 0
    |-ForStmt 0x127943440 <line:21:5, line:24:16>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x127943340 <line:21:45, line:22:49> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x127943210 <line:21:45, col:82> 'int' contains-errors '&&'
    | | | |-BinaryOperator 0x1279431b0 <col:45, col:70> 'int' contains-errors '&&'
    | | | | |-CXXDependentScopeMemberExpr 0x127943128 <col:45, col:53> '<dependent type>' contains-errors lvalue ->b_p_ml
    | | | | | `-RecoveryExpr 0x127943108 <col:45> '<dependent type>' contains-errors lvalue
    | | | | `-BinaryOperator 0x127943190 <col:63, col:70> 'int' contains-errors '>'
    | | | |   |-RecoveryExpr 0x127943170 <col:63> '<dependent type>' contains-errors lvalue
    | | | |   `-IntegerLiteral 0x127942ef0 <col:70> 'int' 0
    | | | `-BinaryOperator 0x1279431f0 <col:75, col:82> 'int' contains-errors '>'
    | | |   |-RecoveryExpr 0x1279431d0 <col:75> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x127942f68 <col:82> 'int' lvalue Var 0x1279282d0 'nmlines' 'int'
    | | `-BinaryOperator 0x127943320 <line:22:13, col:49> 'int' contains-errors '>'
    | |   |-RecoveryExpr 0x127943230 <col:13> '<dependent type>' contains-errors lvalue
    | |   `-BinaryOperator 0x127943300 <col:20, col:49> '<dependent type>' contains-errors '-'
    | |     |-CXXDependentScopeMemberExpr 0x1279432b8 <col:20, col:33> '<dependent type>' contains-errors lvalue .ml_line_count
    | |     | `-CXXDependentScopeMemberExpr 0x127943270 <col:20, col:28> '<dependent type>' contains-errors lvalue ->b_ml
    | |     |   `-RecoveryExpr 0x127943250 <col:20> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x127943088 <col:49> 'int' lvalue Var 0x1279282d0 'nmlines' 'int'
    | |-<<<NULL>>>
    | `-IfStmt 0x127943420 <line:23:2, line:24:16>
    |   |-RecoveryExpr 0x1279433a0 <line:23:6, col:35> '_Bool' contains-errors
    |   `-BinaryOperator 0x127943400 <line:24:6, col:16> 'int' '='
    |     |-DeclRefExpr 0x1279433c0 <col:6> 'int' lvalue Var 0x1279282d0 'nmlines' 'int'
    |     `-IntegerLiteral 0x1279433e0 <col:16> 'int' 0
    `-UnaryOperator 0x127943498 <line:25:5, col:7> 'int' prefix '--'
      `-DeclRefExpr 0x127943478 <col:7> 'int' lvalue Var 0x127928368 'entered' 'int'
