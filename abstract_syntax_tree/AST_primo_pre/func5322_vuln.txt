`-FunctionDecl 0x12f928200  line:1:6 invalid RunOneAveragePoolTest 'void (const int)'
  |-ParmVarDecl 0x12f9280f0 <col:28, <invalid sloc>> col:44 invalid 'const int'
  `-CompoundStmt 0x12f941990 <line:4:62, line:20:1>
    |-DeclStmt 0x12f928438 <line:5:3, col:50>
    | `-VarDecl 0x12f9282c8 <col:3, col:49> col:13 used buffer_size 'const int' cinit
    |   `-CallExpr 0x12f928418 <col:27, col:49> '<dependent type>' contains-errors
    |     `-CXXDependentScopeMemberExpr 0x12f9283d0 <col:27, col:40> '<dependent type>' contains-errors lvalue .FlatSize
    |       `-RecoveryExpr 0x12f9283b0 <col:27> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12f928480 <line:6:3> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12f9284d0 <line:7:3> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12f928520 <line:9:3> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x12f928570 <line:12:3> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x12f941958 <line:16:3, line:19:3>
      |-DeclStmt 0x12f928630 <line:16:8, col:17>
      | `-VarDecl 0x12f9285a8 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x12f928610 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x12f9286b8 <col:19, col:23> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x12f928688 <col:19> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12f928648 <col:19> 'int' lvalue Var 0x12f9285a8 'i' 'int'
      | `-ImplicitCastExpr 0x12f9286a0 <col:23> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x12f928668 <col:23> 'const int' contains-errors lvalue Var 0x12f9282c8 'buffer_size' 'const int'
      |-UnaryOperator 0x12f9286f8 <col:36, col:37> 'int' postfix '++'
      | `-DeclRefExpr 0x12f9286d8 <col:36> 'int' lvalue Var 0x12f9285a8 'i' 'int'
      `-CompoundStmt 0x12f941948 <col:41, line:19:3>
