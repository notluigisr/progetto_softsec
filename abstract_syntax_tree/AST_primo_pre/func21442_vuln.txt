`-FunctionDecl 0x14a826748  line:1:12 perf_trace_event_perm 'int (struct ftrace_event_call *, struct perf_event *)' static
  |-ParmVarDecl 0x14a80e248 <col:34, col:60> col:60 used tp_event 'struct ftrace_event_call *'
  |-ParmVarDecl 0x14a826628 <line:2:6, col:25> col:25 used p_event 'struct perf_event *'
  `-CompoundStmt 0x14a8292f8 <line:3:1, line:24:1>
    |-IfStmt 0x14a826f90 <line:5:2, line:7:11>
    | |-BinaryOperator 0x14a826ec8 <line:5:6, line:6:54> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14a826e48 <line:5:6, line:6:27> 'int' '&&'
    | | | |-CallExpr 0x14a826dd0 <line:5:6, col:39> 'int'
    | | | | |-ImplicitCastExpr 0x14a826db8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | | `-DeclRefExpr 0x14a826970 <col:6> 'int ()' Function 0x14a8268b8 'ftrace_event_is_function' 'int ()'
    | | | | `-ImplicitCastExpr 0x14a826df8 <col:31> 'struct ftrace_event_call *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x14a826990 <col:31> 'struct ftrace_event_call *' lvalue ParmVar 0x14a80e248 'tp_event' 'struct ftrace_event_call *'
    | | | `-CallExpr 0x14a826e28 <line:6:6, col:27> 'int'
    | | |   `-ImplicitCastExpr 0x14a826e10 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |     `-DeclRefExpr 0x14a826b18 <col:6> 'int ()' Function 0x14a826a60 'perf_paranoid_kernel' 'int ()'
    | | `-UnaryOperator 0x14a826eb0 <col:32, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x14a826e88 <col:33, col:54> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14a826c70 <col:33> 'int ()' Function 0x14a826bb8 'capable' 'int ()'
    | |     `-RecoveryExpr 0x14a826e68 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14a826f80 <line:7:3, col:11>
    |   `-UnaryOperator 0x14a826f68 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14a826f50 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14a826f30 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a8270e0 <line:10:2, line:11:10>
    | |-RecoveryExpr 0x14a827090 <line:10:6, col:51> '_Bool' contains-errors
    | `-ReturnStmt 0x14a8270d0 <line:11:3, col:10>
    |   `-IntegerLiteral 0x14a8270b0 <col:10> 'int' 0
    |-IfStmt 0x14a827318 <line:14:2, line:17:2>
    | |-BinaryOperator 0x14a8271b8 <line:14:6, col:31> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14a827138 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x14a827100 <col:6> 'struct perf_event *' lvalue ParmVar 0x14a826628 'p_event' 'struct perf_event *'
    | | `-RecoveryExpr 0x14a827198 <col:31> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14a827300 <col:49, line:17:2>
    |   `-IfStmt 0x14a8272e0 <line:15:3, line:16:11>
    |     |-BinaryOperator 0x14a827290 <line:15:7, col:25> '<dependent type>' contains-errors '&'
    |     | |-RecoveryExpr 0x14a827210 <col:7, col:17> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x14a8271d8 <col:7> 'struct ftrace_event_call *' lvalue ParmVar 0x14a80e248 'tp_event' 'struct ftrace_event_call *'
    |     | `-RecoveryExpr 0x14a827270 <col:25> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x14a8272d0 <line:16:4, col:11>
    |       `-IntegerLiteral 0x14a8272b0 <col:11> 'int' 0
    |-IfStmt 0x14a8292a8 <line:20:2, line:21:11>
    | |-BinaryOperator 0x14a8275d8 <line:20:6, col:62> 'int' contains-errors '&&'
    | | |-CallExpr 0x14a827558 <col:6, col:35> 'int'
    | | | `-ImplicitCastExpr 0x14a827540 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x14a827418 <col:6> 'int ()' Function 0x14a827360 'perf_paranoid_tracepoint_raw' 'int ()'
    | | `-UnaryOperator 0x14a8275c0 <col:40, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x14a827598 <col:41, col:62> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14a827470 <col:41> 'int ()' Function 0x14a826bb8 'capable' 'int ()'
    | |     `-RecoveryExpr 0x14a827578 <col:49> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14a829298 <line:21:3, col:11>
    |   `-UnaryOperator 0x14a829280 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14a829268 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14a829248 <col:11> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14a8292e8 <line:23:2, col:9>
      `-IntegerLiteral 0x14a8292c8 <col:9> 'int' 0
