`-FunctionDecl 0x11f00ddc8  line:1:1 invalid xmlSchemaFreeAttribute 'int (int)'
  |-ParmVarDecl 0x11f00dcf0 <col:24, col:46> col:46 invalid attr 'int'
  `-CompoundStmt 0x11f027628 <line:2:1, line:10:1>
    |-IfStmt 0x11f00df20 <line:3:5, line:4:9>
    | |-BinaryOperator 0x11f00def0 <line:3:9, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11f00de78 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11f00ded0 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11f00df10 <line:4:9>
    |-IfStmt 0x11f00e230 <line:5:5, line:6:32>
    | |-BinaryOperator 0x11f00e000 <line:5:9, col:24> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x11f00df60 <col:9, col:15> '<dependent type>' contains-errors lvalue ->annot
    | | | `-RecoveryExpr 0x11f00df40 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11f00dfe0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x11f00e208 <line:6:2, col:32> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f00e180 <col:2> 'int ()' Function 0x11f00e0c8 'xmlSchemaFreeAnnot' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x11f00e1c0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->annot
    |     `-RecoveryExpr 0x11f00e1a0 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f0274c0 <line:7:5, line:8:33>
    | |-BinaryOperator 0x11f00e310 <line:7:9, col:25> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x11f00e270 <col:9, col:15> '<dependent type>' contains-errors lvalue ->defVal
    | | | `-RecoveryExpr 0x11f00e250 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x11f00e2f0 <col:25> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x11f027498 <line:8:2, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f027410 <col:2> 'int ()' Function 0x11f00e358 'xmlSchemaFreeValue' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x11f027450 <col:21, col:27> '<dependent type>' contains-errors lvalue ->defVal
    |     `-RecoveryExpr 0x11f027430 <col:21> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11f027600 <line:9:5, col:17> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11f0275c0 <col:5> 'int ()' Function 0x11f027508 'xmlFree' 'int ()'
      `-RecoveryExpr 0x11f0275e0 <col:13> '<dependent type>' contains-errors lvalue
