`-FunctionDecl 0x14d128e38  line:1:5 audit_tag_tree 'int (char *, char *)'
  |-ParmVarDecl 0x14d128cd8 <col:20, col:26> col:26 used old 'char *'
  |-ParmVarDecl 0x14d128d58 <col:31, col:37> col:37 used new 'char *'
  `-CompoundStmt 0x14d80b800 <line:2:1, line:118:1>
    |-DeclStmt 0x14d1417b8 <line:3:2, col:34>
    | |-RecordDecl 0x14d128f38 <col:2, col:9> col:9 struct list_head
    | |-VarDecl 0x14d129038 <col:2, col:19> col:19 invalid cursor 'struct list_head'
    | `-VarDecl 0x14d141730 <col:2, col:27> col:27 invalid barrier 'struct list_head'
    |-DeclStmt 0x14d141870 <line:4:2, col:16>
    | `-VarDecl 0x14d1417e8 <col:2, col:15> col:6 used failed 'int' cinit
    |   `-IntegerLiteral 0x14d141850 <col:15> 'int' 0
    |-DeclStmt 0x14d141a08 <line:5:2, col:18>
    | |-RecordDecl 0x14d141888 <col:2, col:9> col:9 struct path
    | `-VarDecl 0x14d141988 <col:2, col:14> col:14 invalid path 'struct path'
    |-DeclStmt 0x14d141c08 <line:6:2, col:25>
    | |-RecordDecl 0x14d141a20 <col:2, col:9> col:9 struct vfsmount
    | `-VarDecl 0x14d141b88 <col:2, col:19> col:19 used tagged 'struct vfsmount *'
    |-DeclStmt 0x14d141cd8 <line:7:2, col:23>
    | `-VarDecl 0x14d141c70 <col:2, col:19> col:19 invalid list 'struct list_head'
    |-DeclStmt 0x14d141de0 <line:8:2, col:22>
    | `-VarDecl 0x14d141d78 <col:2, col:19> col:19 used mnt 'struct vfsmount *'
    |-DeclStmt 0x14d141fe8 <line:9:2, col:23>
    | |-RecordDecl 0x14d141df8 <col:2, col:9> col:9 struct dentry
    | `-VarDecl 0x14d141f68 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x14d142080 <line:10:2, col:9>
    | `-VarDecl 0x14d142018 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x14d1422b0 <line:12:2, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x14d142098 <col:2> 'int' lvalue Var 0x14d142018 'err' 'int'
    | `-CallExpr 0x14d142278 <col:8, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d1421e0 <col:8> 'int ()' Function 0x14d142128 'kern_path' 'int ()'
    |   |-DeclRefExpr 0x14d142200 <col:18> 'char *' lvalue ParmVar 0x14d128d58 'new' 'char *'
    |   |-IntegerLiteral 0x14d142220 <col:23> 'int' 0
    |   `-UnaryOperator 0x14d142260 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14d142240 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d142350 <line:13:2, line:14:10>
    | |-ImplicitCastExpr 0x14d1422f0 <line:13:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14d1422d0 <col:6> 'int' lvalue Var 0x14d142018 'err' 'int'
    | `-ReturnStmt 0x14d142340 <line:14:3, col:10>
    |   `-ImplicitCastExpr 0x14d142328 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14d142308 <col:10> 'int' lvalue Var 0x14d142018 'err' 'int'
    |-BinaryOperator 0x14d142590 <line:15:2, col:47> 'struct vfsmount *' contains-errors '='
    | |-DeclRefExpr 0x14d142370 <col:2> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    | `-CallExpr 0x14d142560 <col:11, col:47> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d142470 <col:11> 'int ()' Function 0x14d1423b8 'collect_mounts' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x14d1424b0 <col:26, col:31> '<dependent type>' contains-errors lvalue .mnt
    |   | `-RecoveryExpr 0x14d142490 <col:26> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14d142518 <col:36, col:41> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x14d1424f8 <col:36> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d147d10 <line:16:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d147cb8 <col:2> 'int ()' Function 0x14d147c00 'path_put' 'int ()'
    | `-UnaryOperator 0x14d147cf8 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d147cd8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d147e30 <line:17:2, line:18:11>
    | |-UnaryOperator 0x14d147d70 <line:17:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14d147d58 <col:7> 'struct vfsmount *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d147d38 <col:7> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    | `-ReturnStmt 0x14d147e20 <line:18:3, col:11>
    |   `-UnaryOperator 0x14d147e08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14d147df0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14d147dd0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d147f40 <line:20:2, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x14d147e50 <col:2> 'int' lvalue Var 0x14d142018 'err' 'int'
    | `-CallExpr 0x14d147f08 <col:8, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d147e70 <col:8> 'int ()' Function 0x14d142128 'kern_path' 'int ()'
    |   |-DeclRefExpr 0x14d147e90 <col:18> 'char *' lvalue ParmVar 0x14d128cd8 'old' 'char *'
    |   |-IntegerLiteral 0x14d147eb0 <col:23> 'int' 0
    |   `-UnaryOperator 0x14d147ef0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14d147ed0 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d1481b0 <line:21:2, line:24:2>
    | |-ImplicitCastExpr 0x14d147f80 <line:21:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14d147f60 <col:6> 'int' lvalue Var 0x14d142018 'err' 'int'
    | `-CompoundStmt 0x14d148190 <col:11, line:24:2>
    |   |-CallExpr 0x14d148108 <line:22:3, col:31> 'int'
    |   | |-ImplicitCastExpr 0x14d1480f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d148078 <col:3> 'int ()' Function 0x14d147fc0 'drop_collected_mounts' 'int ()'
    |   | `-ImplicitCastExpr 0x14d148130 <col:25> 'struct vfsmount *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d148098 <col:25> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    |   `-ReturnStmt 0x14d148180 <line:23:3, col:10>
    |     `-ImplicitCastExpr 0x14d148168 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14d148148 <col:10> 'int' lvalue Var 0x14d142018 'err' 'int'
    |-BinaryOperator 0x14d148380 <line:25:2, col:23> 'struct vfsmount *' contains-errors '='
    | |-DeclRefExpr 0x14d1481d0 <col:2> 'struct vfsmount *' lvalue Var 0x14d141d78 'mnt' 'struct vfsmount *'
    | `-CallExpr 0x14d148358 <col:8, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d1482d0 <col:8> 'int ()' Function 0x14d148218 'mntget' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14d148310 <col:15, col:20> '<dependent type>' contains-errors lvalue .mnt
    |     `-RecoveryExpr 0x14d1482f0 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d148550 <line:26:2, col:27> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x14d1483a0 <col:2> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    | `-CallExpr 0x14d148528 <col:11, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d1484a0 <col:11> 'int ()' Function 0x14d1483e8 'dget' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x14d1484e0 <col:16, col:21> '<dependent type>' contains-errors lvalue .dentry
    |     `-RecoveryExpr 0x14d1484c0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d1485c8 <line:27:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d148570 <col:2> 'int ()' Function 0x14d147c00 'path_put' 'int ()'
    | `-UnaryOperator 0x14d1485b0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d148590 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d1489d0 <line:29:2, line:30:26>
    | |-BinaryOperator 0x14d148730 <line:29:6, col:51> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14d148670 <col:6, col:24> 'int' contains-errors '=='
    | | | |-DeclRefExpr 0x14d1485f0 <col:6> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    | | | `-RecoveryExpr 0x14d148648 <col:16, col:24> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x14d148610 <col:16> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    | | `-BinaryOperator 0x14d148710 <col:36, col:51> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x14d148690 <col:36> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    | |   `-RecoveryExpr 0x14d1486e8 <col:46, col:51> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14d1486b0 <col:46> 'struct vfsmount *' lvalue Var 0x14d141d78 'mnt' 'struct vfsmount *'
    | `-CallExpr 0x14d1489a0 <line:30:3, col:26> 'int'
    |   |-ImplicitCastExpr 0x14d148988 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14d148830 <col:3> 'int ()' Function 0x14d148778 'follow_up' 'int ()'
    |   |-UnaryOperator 0x14d1488d0 <col:13, col:14> 'struct vfsmount **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x14d148850 <col:14> 'struct vfsmount *' lvalue Var 0x14d141d78 'mnt' 'struct vfsmount *'
    |   `-UnaryOperator 0x14d148970 <col:19, col:20> 'struct dentry **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x14d1488e8 <col:20> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    |-CallExpr 0x14d148ba0 <line:32:2, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d148ad0 <col:2> 'int ()' Function 0x14d148a18 'list_add_tail' 'int ()'
    | |-UnaryOperator 0x14d148b10 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14d148af0 <col:17> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x14d148b88 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d148b60 <col:24, col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14d148b28 <col:24> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    |-CallExpr 0x14d808968 <line:34:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d8088b8 <col:2> 'int ()' Function 0x14d808800 'mutex_lock' 'int ()'
    | `-UnaryOperator 0x14d808950 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d808930 <col:14> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d808b60 <line:35:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d808a70 <col:2> 'int ()' Function 0x14d8089b8 'list_add' 'int ()'
    | |-UnaryOperator 0x14d808ab0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14d808a90 <col:12> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x14d808b48 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d808b28 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d808c20 <line:36:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d808b90 <col:2> 'int ()' Function 0x14d8089b8 'list_add' 'int ()'
    | |-UnaryOperator 0x14d808bd0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14d808bb0 <col:12> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x14d808c08 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d808be8 <col:21> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14d80a460 <line:38:2, line:86:2>
    | |-RecoveryExpr 0x14d808cb8 <line:38:9, col:25> '_Bool' contains-errors
    | `-CompoundStmt 0x14d80a3f8 <col:36, line:86:2>
    |   |-DeclStmt 0x14d808ec8 <line:39:3, col:26>
    |   | |-RecordDecl 0x14d808cd8 <col:3, col:10> col:10 struct audit_tree
    |   | `-VarDecl 0x14d808e48 <col:3, col:22> col:22 used tree 'struct audit_tree *'
    |   |-DeclStmt 0x14d808f70 <line:40:3, col:21>
    |   | `-VarDecl 0x14d808f08 <col:3, col:20> col:20 used p 'struct vfsmount *'
    |   |-CallExpr 0x14d809268 <line:43:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x14d809250 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d809210 <col:3> 'int ()' Function 0x14d809158 'get_tree' 'int ()'
    |   | `-ImplicitCastExpr 0x14d809290 <col:12> 'struct audit_tree *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d809230 <col:12> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   |-CallExpr 0x14d8093e0 <line:44:3, col:19> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d809388 <col:3> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    |   | `-UnaryOperator 0x14d8093c8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14d8093a8 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14d8094d8 <line:45:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d809408 <col:3> 'int ()' Function 0x14d8089b8 'list_add' 'int ()'
    |   | |-UnaryOperator 0x14d809448 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x14d809428 <col:13> '<dependent type>' contains-errors lvalue
    |   | `-UnaryOperator 0x14d8094c0 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14d809498 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14d809460 <col:22> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   |-BinaryOperator 0x14d809738 <line:48:3, col:43> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14d809608 <col:3> 'int' lvalue Var 0x14d142018 'err' 'int'
    |   | `-CallExpr 0x14d809700 <col:9, col:43> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14d809628 <col:9> 'int ()' Function 0x14d142128 'kern_path' 'int ()'
    |   |   |-RecoveryExpr 0x14d809680 <col:19, col:25> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14d809648 <col:19> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   |   |-IntegerLiteral 0x14d8096a8 <col:35> 'int' 0
    |   |   `-UnaryOperator 0x14d8096e8 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x14d8096c8 <col:39> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14d809998 <line:49:3, line:53:3>
    |   | |-ImplicitCastExpr 0x14d809778 <line:49:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14d809758 <col:7> 'int' lvalue Var 0x14d142018 'err' 'int'
    |   | `-CompoundStmt 0x14d809978 <col:12, line:53:3>
    |   |   |-CallExpr 0x14d809910 <line:50:4, col:17> 'int'
    |   |   | |-ImplicitCastExpr 0x14d8098f8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14d8098b8 <col:4> 'int ()' Function 0x14d809800 'put_tree' 'int ()'
    |   |   | `-ImplicitCastExpr 0x14d809938 <col:13> 'struct audit_tree *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14d8098d8 <col:13> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   |   `-ContinueStmt 0x14d809970 <line:52:4>
    |   |-IfStmt 0x14d809ee8 <line:56:3, line:62:3>
    |   | |-UnaryOperator 0x14d809c68 <line:56:7, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x14d809c30 <col:8, col:35> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14d809b98 <col:8> 'int ()' Function 0x14d809ae0 'is_under' 'int ()'
    |   | |   |-DeclRefExpr 0x14d809bb8 <col:17> 'struct vfsmount *' lvalue Var 0x14d141d78 'mnt' 'struct vfsmount *'
    |   | |   |-DeclRefExpr 0x14d809bd8 <col:22> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    |   | |   `-UnaryOperator 0x14d809c18 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | |     `-RecoveryExpr 0x14d809bf8 <col:31> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14d809ec0 <col:38, line:62:3>
    |   |   |-CallExpr 0x14d809dd8 <line:58:4, col:18> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d809d80 <col:4> 'int ()' Function 0x14d147c00 'path_put' 'int ()'
    |   |   | `-UnaryOperator 0x14d809dc0 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |   `-RecoveryExpr 0x14d809da0 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-CallExpr 0x14d809e58 <line:59:4, col:17> 'int'
    |   |   | |-ImplicitCastExpr 0x14d809e40 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x14d809e00 <col:4> 'int ()' Function 0x14d809800 'put_tree' 'int ()'
    |   |   | `-ImplicitCastExpr 0x14d809e80 <col:13> 'struct audit_tree *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14d809e20 <col:13> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   |   `-ContinueStmt 0x14d809eb8 <line:61:4>
    |   |-CallExpr 0x14d809f80 <line:64:3, col:17> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d809f28 <col:3> 'int ()' Function 0x14d147c00 'path_put' 'int ()'
    |   | `-UnaryOperator 0x14d809f68 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14d809f48 <col:13> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14d80a320 <line:80:3, line:83:3>
    |   | |-UnaryOperator 0x14d80a198 <line:80:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14d80a180 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x14d80a158 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x14d80a120 <col:8> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   | `-CompoundStmt 0x14d80a308 <col:21, line:83:3>
    |   |   `-CallExpr 0x14d80a248 <line:81:4, col:24> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x14d80a1b0 <col:4> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    |   |     `-UnaryOperator 0x14d80a230 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       `-RecoveryExpr 0x14d80a208 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |   |         `-DeclRefExpr 0x14d80a1d0 <col:14> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |   `-CallExpr 0x14d80a3b8 <line:85:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x14d80a3a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14d80a360 <col:3> 'int ()' Function 0x14d809800 'put_tree' 'int ()'
    |     `-ImplicitCastExpr 0x14d80a3e0 <col:12> 'struct audit_tree *' <LValueToRValue>
    |       `-DeclRefExpr 0x14d80a380 <col:12> 'struct audit_tree *' lvalue Var 0x14d808e48 'tree' 'struct audit_tree *'
    |-WhileStmt 0x14d80b208 <line:88:2, line:109:2>
    | |-RecoveryExpr 0x14d80a4e8 <line:88:9, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x14d80b1c8 <col:37, line:109:2>
    |   |-DeclStmt 0x14d80a6f8 <line:89:3, col:26>
    |   | |-RecordDecl 0x14d80a508 <col:3, col:10> col:10 struct audit_tree
    |   | `-VarDecl 0x14d80a678 <col:3, col:22> col:22 used tree 'struct audit_tree *'
    |   |-CallExpr 0x14d80a838 <line:92:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x14d80a820 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d80a7d8 <col:3> 'int ()' Function 0x14d809158 'get_tree' 'int ()'
    |   | `-ImplicitCastExpr 0x14d80a860 <col:12> 'struct audit_tree *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d80a800 <col:12> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |   |-CallExpr 0x14d80a910 <line:93:3, col:23> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d80a878 <col:3> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    |   | `-UnaryOperator 0x14d80a8f8 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14d80a8d0 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14d80a898 <col:13> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |   |-CallExpr 0x14d80aa08 <line:94:3, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d80a938 <col:3> 'int ()' Function 0x14d8089b8 'list_add' 'int ()'
    |   | |-UnaryOperator 0x14d80a9b8 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x14d80a990 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14d80a958 <col:13> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |   | `-UnaryOperator 0x14d80a9f0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14d80a9d0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14d80b0e0 <line:97:3, line:105:3> has_else
    |   | |-UnaryOperator 0x14d80aa90 <line:97:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x14d80aa78 <col:8> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d80aa58 <col:8> 'int' lvalue Var 0x14d1417e8 'failed' 'int'
    |   | |-CompoundStmt 0x14d80af28 <col:16, line:103:3>
    |   | | |-DeclStmt 0x14d80ac98 <line:98:4, col:21>
    |   | | | |-RecordDecl 0x14d80aaa8 <col:4, col:11> col:11 struct node
    |   | | | `-VarDecl 0x14d80ac18 <col:4, col:17> col:17 used node 'struct node *'
    |   | | |-CallExpr 0x14d80ada8 <line:100:4, col:49> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x14d80acd0 <col:4> 'int ()' Function 0x14d809fd0 'list_for_each_entry' 'int ()'
    |   | | | |-DeclRefExpr 0x14d80acf0 <col:24> 'struct node *' lvalue Var 0x14d80ac18 'node' 'struct node *'
    |   | | | |-UnaryOperator 0x14d80ad70 <col:30, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | `-RecoveryExpr 0x14d80ad48 <col:31, col:37> '<dependent type>' contains-errors lvalue
    |   | | | |   `-DeclRefExpr 0x14d80ad10 <col:31> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |   | | | `-RecoveryExpr 0x14d80ad88 <col:45> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundAssignOperator 0x14d80aed8 <line:101:5, col:28> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |   |-RecoveryExpr 0x14d80ae18 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x14d80ade0 <col:5> 'struct node *' lvalue Var 0x14d80ac18 'node' 'struct node *'
    |   | |   `-UnaryOperator 0x14d80aec0 <col:20, col:28> 'unsigned int' prefix '~' cannot overflow
    |   | |     `-ParenExpr 0x14d80aea0 <col:21, col:28> 'unsigned int'
    |   | |       `-BinaryOperator 0x14d80ae80 <col:22, col:26> 'unsigned int' '<<'
    |   | |         |-IntegerLiteral 0x14d80ae40 <col:22> 'unsigned int' 1
    |   | |         `-IntegerLiteral 0x14d80ae60 <col:26> 'int' 31
    |   | `-CompoundStmt 0x14d80b0c8 <line:103:10, line:105:3>
    |   |   `-CallExpr 0x14d80b088 <line:104:4, col:20> 'int'
    |   |     |-ImplicitCastExpr 0x14d80b070 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14d80b030 <col:4> 'int ()' Function 0x14d80af78 'trim_marked' 'int ()'
    |   |     `-ImplicitCastExpr 0x14d80b0b0 <col:16> 'struct audit_tree *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14d80b050 <col:16> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |   `-CallExpr 0x14d80b168 <line:107:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x14d80b150 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14d80b110 <col:3> 'int ()' Function 0x14d809800 'put_tree' 'int ()'
    |     `-ImplicitCastExpr 0x14d80b190 <col:12> 'struct audit_tree *' <LValueToRValue>
    |       `-DeclRefExpr 0x14d80b130 <col:12> 'struct audit_tree *' lvalue Var 0x14d80a678 'tree' 'struct audit_tree *'
    |-CallExpr 0x14d80b280 <line:110:2, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80b228 <col:2> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    | `-UnaryOperator 0x14d80b268 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d80b248 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d80b300 <line:111:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80b2a8 <col:2> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    | `-UnaryOperator 0x14d80b2e8 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d80b2c8 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d80b380 <line:112:2, col:16> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80b328 <col:2> 'int ()' Function 0x14d8092d0 'list_del' 'int ()'
    | `-UnaryOperator 0x14d80b368 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14d80b348 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d80b500 <line:114:2, col:13> 'int'
    | |-ImplicitCastExpr 0x14d80b4e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d80b4a8 <col:2> 'int ()' Function 0x14d80b3f0 'dput' 'int ()'
    | `-ImplicitCastExpr 0x14d80b528 <col:7> 'struct dentry *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d80b4c8 <col:7> 'struct dentry *' lvalue Var 0x14d141f68 'dentry' 'struct dentry *'
    |-CallExpr 0x14d80b678 <line:115:2, col:12> 'int'
    | |-ImplicitCastExpr 0x14d80b660 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d80b620 <col:2> 'int ()' Function 0x14d80b568 'mntput' 'int ()'
    | `-ImplicitCastExpr 0x14d80b6a0 <col:9> 'struct vfsmount *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d80b640 <col:9> 'struct vfsmount *' lvalue Var 0x14d141d78 'mnt' 'struct vfsmount *'
    |-CallExpr 0x14d80b710 <line:116:2, col:30> 'int'
    | |-ImplicitCastExpr 0x14d80b6f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d80b6b8 <col:2> 'int ()' Function 0x14d147fc0 'drop_collected_mounts' 'int ()'
    | `-ImplicitCastExpr 0x14d80b738 <col:24> 'struct vfsmount *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d80b6d8 <col:24> 'struct vfsmount *' lvalue Var 0x14d141b88 'tagged' 'struct vfsmount *'
    `-ReturnStmt 0x14d80b788 <line:117:2, col:9>
      `-ImplicitCastExpr 0x14d80b770 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14d80b750 <col:9> 'int' lvalue Var 0x14d1417e8 'failed' 'int'
