`-FunctionDecl 0x14c128238  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x14c128158 <col:6> col:6 used IndexBoundsBuilderTest 'int'
  |-ParmVarDecl 0x14c1280d8 <col:30> col:30 TranslateNotEqualToNullShouldBuildExactBoundsOnReverseIndex 'int'
  `-CompoundStmt 0x14c140e18 <col:91, line:17:1>
    |-DeclStmt 0x14c128588 <line:3:5, col:57>
    | `-VarDecl 0x14c128368 <col:5, col:56> col:10 testIndex 'int' auto cinit
    |   `-CallExpr 0x14c128560 <col:22, col:56> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c1284e0 <col:22> 'int ()' Function 0x14c128428 'buildSimpleIndexEntry' 'int ()'
    |     `-RecoveryExpr 0x14c128540 <col:44> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c1287a8 <line:6:5, col:42>
    | `-VarDecl 0x14c1285b8 <col:5, col:41> col:10 expr 'int' auto cinit
    |   `-CallExpr 0x14c128780 <col:17, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c128700 <col:17> 'int ()' Function 0x14c128648 'parseMatchExpression' 'int ()'
    |     `-RecoveryExpr 0x14c128760 <col:38> '<dependent type>' contains-errors lvalue
    |-DeclRefExpr 0x14c140a00 <line:9:5> 'int' lvalue ParmVar 0x14c128158 'IndexBoundsBuilderTest' 'int'
    |-DeclRefExpr 0x14c140a50 <line:10:5> 'int' lvalue ParmVar 0x14c128158 'IndexBoundsBuilderTest' 'int'
    `-CallExpr 0x14c140cc8 <line:14:5, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14c140b50 <col:5> 'int ()' Function 0x14c140a98 'ASSERT_EQUALS' 'int ()'
      |-CXXDependentScopeMemberExpr 0x14c140c80 <col:19, col:23> '<dependent type>' contains-errors lvalue .name
      | `-RecoveryExpr 0x14c140c60 <col:19> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x14c140c10 <col:29> 'char[4]' lvalue "STR"
