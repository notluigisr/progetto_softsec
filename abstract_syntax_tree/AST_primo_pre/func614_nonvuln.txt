`-FunctionDecl 0x121027438  line:1:9 invalid cli_bcapi_pdf_lookupobj 'int (struct cli_bc_ctx *, int)'
  |-ParmVarDecl 0x12100e268 <col:33, col:52> col:52 used ctx 'struct cli_bc_ctx *'
  |-ParmVarDecl 0x12100e2e8 <col:58, col:67> col:67 invalid objid 'int'
  `-CompoundStmt 0x121027a40 <line:2:1, line:11:1>
    |-DeclStmt 0x121027570 <line:3:5, col:15>
    | `-VarDecl 0x121027508 <col:5, col:14> col:14 used i 'unsigned int'
    |-IfStmt 0x121027660 <line:4:5, line:5:10>
    | |-UnaryOperator 0x121027600 <line:4:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1210275e8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1210275c0 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x121027588 <col:10> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    | `-ReturnStmt 0x121027650 <line:5:2, col:10>
    |   `-UnaryOperator 0x121027638 <col:9, col:10> 'int' prefix '-'
    |     `-IntegerLiteral 0x121027618 <col:10> 'int' 1
    |-ForStmt 0x1210279c0 <line:6:5, line:9:5>
    | |-BinaryOperator 0x1210276d8 <line:6:10, col:12> 'unsigned int' '='
    | | |-DeclRefExpr 0x121027680 <col:10> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1210276c0 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1210276a0 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x121027778 <col:14, col:21> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1210276f8 <col:14> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | | `-RecoveryExpr 0x121027750 <col:16, col:21> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x121027718 <col:16> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    | |-UnaryOperator 0x1210277b8 <col:31, col:32> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x121027798 <col:31> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    | `-CompoundStmt 0x1210279a8 <col:36, line:9:5>
    |   `-IfStmt 0x121027988 <line:7:2, line:8:13>
    |     |-BinaryOperator 0x121027908 <line:7:6, col:29> 'int' contains-errors '=='
    |     | |-CXXDependentScopeMemberExpr 0x1210278a0 <col:6, col:23> '<dependent type>' contains-errors lvalue .id
    |     | | `-ArraySubscriptExpr 0x121027880 <col:6, col:21> '<dependent type>' contains-errors lvalue
    |     | |   |-ImplicitCastExpr 0x121027850 <col:6, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   | `-RecoveryExpr 0x121027808 <col:6, col:11> '<dependent type>' contains-errors lvalue
    |     | |   |   `-DeclRefExpr 0x1210277d0 <col:6> 'struct cli_bc_ctx *' lvalue ParmVar 0x12100e268 'ctx' 'struct cli_bc_ctx *'
    |     | |   `-ImplicitCastExpr 0x121027868 <col:20> 'unsigned int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x121027830 <col:20> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    |     | `-RecoveryExpr 0x1210278e8 <col:29> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x121027978 <line:8:6, col:13>
    |       `-ImplicitCastExpr 0x121027960 <col:13> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x121027948 <col:13> 'unsigned int' <LValueToRValue>
    |           `-DeclRefExpr 0x121027928 <col:13> 'unsigned int' lvalue Var 0x121027508 'i' 'unsigned int'
    `-ReturnStmt 0x121027a30 <line:10:5, col:13>
      `-UnaryOperator 0x121027a18 <col:12, col:13> 'int' prefix '-'
        `-IntegerLiteral 0x1210279f8 <col:13> 'int' 1
