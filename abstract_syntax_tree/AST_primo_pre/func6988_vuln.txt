`-FunctionDecl 0x1301278f8  line:1:5 invalid DSA_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
  |-ParmVarDecl 0x1301274d8 <col:16, col:20> col:20 type 'int'
  |-ParmVarDecl 0x130127588 <col:26, col:47> col:47 used dgst 'const unsigned char *'
  |-ParmVarDecl 0x130127608 <col:53, col:57> col:57 used dgst_len 'int'
  |-ParmVarDecl 0x130127688 <line:2:7, col:28> col:28 used sigbuf 'const unsigned char *'
  |-ParmVarDecl 0x130127708 <col:36, col:40> col:40 used siglen 'int'
  |-ParmVarDecl 0x1301277d8 <col:48, col:53> col:53 invalid dsa 'int *'
  `-CompoundStmt 0x1301415b8 <line:3:2, line:14:2>
    |-DeclStmt 0x130127aa0 <line:5:2, col:12>
    | `-VarDecl 0x130127a00 <col:2, col:11> col:6 used ret 'int' cinit
    |   `-UnaryOperator 0x130127a88 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x130127a68 <col:11> 'int' 1
    |-IfStmt 0x130140db0 <line:8:2, col:27>
    | |-BinaryOperator 0x130140d28 <col:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x130140ce8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x130140d08 <col:11> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x130140da0 <col:17, col:27>
    |   `-ImplicitCastExpr 0x130140d88 <col:23, col:27> 'int' <LValueToRValue>
    |     `-ParenExpr 0x130140d68 <col:23, col:27> 'int' lvalue
    |       `-DeclRefExpr 0x130140d48 <col:24> 'int' lvalue Var 0x130127a00 'ret' 'int'
    |-IfStmt 0x130141110 <line:9:2, col:51>
    | |-BinaryOperator 0x130141088 <col:6, col:40> 'int' contains-errors '=='
    | | |-CallExpr 0x130141030 <col:6, col:35> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x130140eb0 <col:6> 'int ()' Function 0x130140df8 'd2i_DSA_SIG' 'int ()'
    | | | |-UnaryOperator 0x130141018 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x130140ff8 <col:19> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x130140f50 <col:21, col:22> 'const unsigned char **' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x130140f00 <col:22> 'const unsigned char *' lvalue ParmVar 0x130127688 'sigbuf' 'const unsigned char *'
    | | | `-DeclRefExpr 0x130140f68 <col:29> 'int' lvalue ParmVar 0x130127708 'siglen' 'int'
    | | `-RecoveryExpr 0x130141068 <col:40> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x1301410f8 <col:46, col:51> 'err' 0x1301410a8
    |-BinaryOperator 0x130141388 <line:10:2, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x130141130 <col:2> 'int' lvalue Var 0x130127a00 'ret' 'int'
    | `-CallExpr 0x130141348 <col:6, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130141230 <col:6> 'int ()' Function 0x130141178 'DSA_do_verify' 'int ()'
    |   |-DeclRefExpr 0x130141250 <col:20> 'const unsigned char *' lvalue ParmVar 0x130127588 'dgst' 'const unsigned char *'
    |   |-DeclRefExpr 0x130141270 <col:25> 'int' lvalue ParmVar 0x130127608 'dgst_len' 'int'
    |   |-RecoveryExpr 0x130141328 <col:34> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x1301412a8 <col:36> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x130141530 <line:11:1, line:12:16> 'err'
    | `-CallExpr 0x130141508 <col:2, col:16> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130141488 <col:2> 'int ()' Function 0x1301413d0 'DSA_SIG_free' 'int ()'
    |   `-RecoveryExpr 0x1301414e8 <col:15> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1301415a8 <line:13:2, col:12>
      `-ImplicitCastExpr 0x130141590 <col:8, col:12> 'int' <LValueToRValue>
        `-ParenExpr 0x130141570 <col:8, col:12> 'int' lvalue
          `-DeclRefExpr 0x130141550 <col:9> 'int' lvalue Var 0x130127a00 'ret' 'int'
