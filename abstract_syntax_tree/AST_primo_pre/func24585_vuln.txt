`-FunctionDecl 0x15680dfb8  line:1:12 init_dumping 'int (char *, int (*)(char *))' static
  |-ParmVarDecl 0x15680dcd8 <col:25, col:31> col:31 used database 'char *'
  |-ParmVarDecl 0x15680de90 <col:41, col:60> col:45 used init_func 'int (*)(char *)'
  `-CompoundStmt 0x156829308 <line:2:1, line:29:1>
    |-IfStmt 0x156827930 <line:3:3, line:7:3>
    | |-CallExpr 0x15680e288 <line:3:7, col:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15680e1e0 <col:7> 'int ()' Function 0x15680e128 'mysql_select_db' 'int ()'
    | | |-RecoveryExpr 0x15680e268 <col:23> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x15680e218 <col:30> 'char *' lvalue ParmVar 0x15680dcd8 'database' 'char *'
    | `-CompoundStmt 0x156827910 <line:4:3, line:7:3>
    |   |-CallExpr 0x1568278b0 <line:5:5, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15680e398 <col:5> 'int ()' Function 0x15680e2e0 'DB_error' 'int ()'
    |   | |-RecoveryExpr 0x156827890 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x156827840 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x156827900 <line:6:5, col:12>
    |     `-IntegerLiteral 0x1568278e0 <col:12> 'int' 1
    |-IfStmt 0x1568285b0 <line:8:3, line:25:3>
    | |-BinaryOperator 0x156827aa0 <line:8:7, col:17> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x156827a38 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x156827a20 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x156827a00 <col:8> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x156827a88 <col:16, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x156827a70 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x156827a50 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x156828598 <line:9:3, line:25:3>
    |   `-IfStmt 0x156828578 <line:10:5, line:24:5>
    |     |-BinaryOperator 0x156827b50 <line:10:9, col:26> 'int' contains-errors '||'
    |     | |-RecoveryExpr 0x156827b10 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x156827b30 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x156828538 <line:11:5, line:24:5>
    |       |-DeclStmt 0x156827c80 <line:13:7, col:45>
    |       | `-VarDecl 0x156827c18 <col:7, col:12> col:12 invalid quoted_database_buf 'char'
    |       |-DeclStmt 0x156827f00 <line:14:7, col:75>
    |       | `-VarDecl 0x156827cb0 <col:7, col:74> col:13 used qdatabase 'char *' cinit
    |       |   `-CallExpr 0x156827ec8 <col:24, col:74> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x156827df8 <col:24> 'int ()' Function 0x156827d40 'quote_name' 'int ()'
    |       |     |-DeclRefExpr 0x156827e18 <col:35> 'char *' lvalue ParmVar 0x15680dcd8 'database' 'char *'
    |       |     |-RecoveryExpr 0x156827e38 <col:44> '<dependent type>' contains-errors lvalue
    |       |     `-RecoveryExpr 0x156827ea8 <col:64> '<dependent type>' contains-errors lvalue
    |       |-CallExpr 0x1568280f0 <line:16:7, line:17:37> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x156827ff8 <line:16:7> 'int ()' Function 0x156827f40 'print_comment' 'int ()'
    |       | |-RecoveryExpr 0x1568280d0 <col:21> '<dependent type>' contains-errors lvalue
    |       | |-IntegerLiteral 0x156828030 <col:37> 'int' 0
    |       | |-StringLiteral 0x156828050 <line:17:21> 'char[4]' lvalue "STR"
    |       | `-DeclRefExpr 0x156828070 <col:28> 'char *' contains-errors lvalue Var 0x156827cb0 'qdatabase' 'char *'
    |       |-CallExpr 0x156828188 <line:20:7, col:26> 'int' contains-errors
    |       | |-ImplicitCastExpr 0x156828170 <col:7> 'int (*)(char *)' <LValueToRValue>
    |       | | `-DeclRefExpr 0x156828130 <col:7> 'int (*)(char *)' lvalue ParmVar 0x15680de90 'init_func' 'int (*)(char *)'
    |       | `-ImplicitCastExpr 0x1568281b0 <col:17> 'char *' contains-errors <LValueToRValue>
    |       |   `-DeclRefExpr 0x156828150 <col:17> 'char *' contains-errors lvalue Var 0x156827cb0 'qdatabase' 'char *'
    |       |-CallExpr 0x156828378 <line:22:7, col:46> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x1568282a8 <col:7> 'int ()' Function 0x1568281f0 'fprintf' 'int ()'
    |       | |-RecoveryExpr 0x156828358 <col:15> '<dependent type>' contains-errors lvalue
    |       | |-StringLiteral 0x1568282e0 <col:30> 'char[4]' lvalue "STR"
    |       | `-DeclRefExpr 0x156828300 <col:37> 'char *' contains-errors lvalue Var 0x156827cb0 'qdatabase' 'char *'
    |       `-CallExpr 0x156828510 <line:23:7, col:30> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x156828490 <col:7> 'int ()' Function 0x1568283d8 'check_io' 'int ()'
    |         `-RecoveryExpr 0x1568284f0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1568292b8 <line:26:3, line:27:62>
    | |-RecoveryExpr 0x1568285e8 <line:26:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x156829278 <line:27:5, col:62> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1568286e8 <col:5> 'int ()' Function 0x156828630 'init_dynamic_string_checked' 'int ()'
    |   |-UnaryOperator 0x156829260 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x156829240 <col:34> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x156828780 <col:48> 'char[1]' lvalue ""
    |   |-IntegerLiteral 0x156828798 <col:52> 'int' 1024
    |   `-IntegerLiteral 0x1568287b8 <col:58> 'int' 1024
    `-ReturnStmt 0x1568292f8 <line:28:3, col:10>
      `-IntegerLiteral 0x1568292d8 <col:10> 'int' 0
