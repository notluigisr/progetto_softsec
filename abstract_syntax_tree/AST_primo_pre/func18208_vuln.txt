`-FunctionDecl 0x14a81e9a8  line:1:7 ipc_alloc 'void *(int)'
  |-ParmVarDecl 0x14a81e8d8 <col:17, col:21> col:21 used size 'int'
  `-CompoundStmt 0x14c8f8320 <line:2:1, line:9:1>
    |-DeclStmt 0x14a81eb20 <line:3:2, col:11>
    | `-VarDecl 0x14a81eab8 <col:2, col:8> col:8 used out 'void *'
    |-IfStmt 0x14c8f82a8 <line:4:2, line:7:33> has_else
    | |-BinaryOperator 0x14a81ebc8 <line:4:5, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x14a81eb38 <col:5> 'int' lvalue ParmVar 0x14a81e8d8 'size' 'int'
    | | `-RecoveryExpr 0x14a81eba8 <col:12> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x14c8f8070 <line:5:3, col:21> 'void *' '='
    | | |-DeclRefExpr 0x14a81ebe8 <col:3> 'void *' lvalue Var 0x14a81eab8 'out' 'void *'
    | | `-ImplicitCastExpr 0x14a81ede8 <col:9, col:21> 'void *' <IntegralToPointer>
    | |   `-CallExpr 0x14a81eda8 <col:9, col:21> 'int'
    | |     |-ImplicitCastExpr 0x14a81ed90 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x14a81ed20 <col:9> 'int ()' Function 0x14a81ec68 'vmalloc' 'int ()'
    | |     `-ImplicitCastExpr 0x14a81edd0 <col:17> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x14a81ed40 <col:17> 'int' lvalue ParmVar 0x14a81e8d8 'size' 'int'
    | `-BinaryOperator 0x14c8f8288 <line:7:3, col:33> 'void *' contains-errors '='
    |   |-DeclRefExpr 0x14c8f8090 <col:3> 'void *' lvalue Var 0x14a81eab8 'out' 'void *'
    |   `-CallExpr 0x14c8f8258 <col:9, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14c8f8190 <col:9> 'int ()' Function 0x14c8f80d8 'kmalloc' 'int ()'
    |     |-DeclRefExpr 0x14c8f81b0 <col:17> 'int' lvalue ParmVar 0x14a81e8d8 'size' 'int'
    |     `-RecoveryExpr 0x14c8f8238 <col:23> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14c8f8310 <line:8:2, col:9>
      `-ImplicitCastExpr 0x14c8f82f8 <col:9> 'void *' <LValueToRValue>
        `-DeclRefExpr 0x14c8f82d8 <col:9> 'void *' lvalue Var 0x14a81eab8 'out' 'void *'
