`-FunctionDecl 0x13c928318  line:1:1 invalid __nc_putp_flush 'int (int *, const char *, const char *)'
  |-ParmVarDecl 0x13c928128 <col:17, col:25> col:25 invalid sp 'int *'
  |-ParmVarDecl 0x13c9281a8 <col:29, col:41> col:41 used name 'const char *'
  |-ParmVarDecl 0x13c928228 <col:47, col:59> col:59 used value 'const char *'
  `-CompoundStmt 0x13e008398 <line:2:1, line:8:1>
    |-DeclStmt 0x13c928668 <line:3:5, col:40>
    | `-VarDecl 0x13c9283f0 <col:5, col:39> col:9 used rc 'int' cinit
    |   `-CallExpr 0x13c928630 <col:14, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13c9285b0 <col:14> 'int ()' Function 0x13c9284f8 '__nc_putp' 'int ()'
    |     |-RecoveryExpr 0x13c9285d0 <col:24> '<dependent type>' contains-errors lvalue
    |     |-DeclRefExpr 0x13c9285f0 <col:28> 'const char *' lvalue ParmVar 0x13c9281a8 'name' 'const char *'
    |     `-DeclRefExpr 0x13c928610 <col:34> 'const char *' lvalue ParmVar 0x13c928228 'value' 'const char *'
    |-IfStmt 0x13e008330 <line:4:5, line:6:5>
    | |-BinaryOperator 0x13c9286f8 <line:4:9, col:15> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x13c928680 <col:9> 'int' contains-errors lvalue Var 0x13c9283f0 'rc' 'int'
    | | `-RecoveryExpr 0x13c9286d8 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e008318 <col:20, line:6:5>
    |   `-CallExpr 0x13e0082f0 <line:5:2, col:32> '<dependent type>' contains-errors
    |     |-CallExpr 0x13e0082c8 <col:2, col:27> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x13e008200 <col:2> 'int ()' Function 0x13c928740 'NCURSES_SP_NAME' 'int ()'
    |     | `-RecoveryExpr 0x13e0082a8 <col:18> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x13e008260 <col:30> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13e008388 <line:7:5, col:12>
      `-ImplicitCastExpr 0x13e008370 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x13e008350 <col:12> 'int' contains-errors lvalue Var 0x13c9283f0 'rc' 'int'
