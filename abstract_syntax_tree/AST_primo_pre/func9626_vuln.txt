`-FunctionDecl 0x12280dfa8  line:1:5 invalid journal_remote_handle_raw_source 'int (int *, int, int, int *)'
  |-ParmVarDecl 0x12280dd28 <line:2:17, col:34> col:34 invalid event 'int *'
  |-ParmVarDecl 0x12280dda8 <line:3:17, col:21> col:21 used fd 'int'
  |-ParmVarDecl 0x12280de28 <line:4:17, col:26> col:26 invalid revents 'int'
  |-ParmVarDecl 0x12280dea8 <line:5:17, col:31> col:31 invalid s 'int *'
  `-CompoundStmt 0x122829e18 <col:34, line:40:1>
    |-DeclStmt 0x12280e108 <line:8:9, col:14>
    | `-VarDecl 0x12280e0a0 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x122827ad8 <line:14:9, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1228278d8 <col:9> 'int ()' Function 0x12280e1c8 'assert' 'int ()'
    | `-BinaryOperator 0x122827ab8 <col:16, col:39> 'int' contains-errors '=='
    |   |-CXXDependentScopeMemberExpr 0x122827a70 <col:16, col:33> '<dependent type>' contains-errors lvalue .fd
    |   | `-CXXDependentScopeMemberExpr 0x122827a28 <col:16, col:24> '<dependent type>' contains-errors lvalue ->importer
    |   |   `-RecoveryExpr 0x122827a08 <col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1228279a0 <col:39> 'int' lvalue ParmVar 0x12280dda8 'fd' 'int'
    |-BinaryOperator 0x122827db8 <line:16:9, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x122827b00 <col:9> 'int' lvalue Var 0x12280e0a0 'r' 'int'
    | `-CallExpr 0x122827d80 <col:13, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x122827c00 <col:13> 'int ()' Function 0x122827b48 'process_source' 'int ()'
    |   |-RecoveryExpr 0x122827d60 <col:28> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x122827c58 <col:36, col:39> '<dependent type>' contains-errors lvalue ->compress
    |   | `-RecoveryExpr 0x122827c38 <col:36> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x122827cc0 <col:49, col:52> '<dependent type>' contains-errors lvalue ->seal
    |     `-RecoveryExpr 0x122827ca0 <col:49> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x122829de8 <line:17:9, line:39:24> has_else
      |-CallExpr 0x122827ff8 <line:17:13, col:51> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x122827eb8 <col:13> 'int ()' Function 0x122827e00 'journal_importer_eof' 'int ()'
      | `-UnaryOperator 0x122827fe0 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   `-CXXDependentScopeMemberExpr 0x122827f98 <col:35, col:43> '<dependent type>' contains-errors lvalue ->importer
      |     `-RecoveryExpr 0x122827f78 <col:35> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x122829800 <col:54, line:29:9>
      | |-UnaryExprOrTypeTraitExpr 0x122828078 <line:18:17, col:24> 'unsigned long' contains-errors sizeof
      | | `-RecoveryExpr 0x122828058 <col:24> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x1228284e8 <line:20:17, line:21:69> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x122828178 <line:20:17> 'int ()' Function 0x1228280c0 'log_debug' 'int ()'
      | | |-StringLiteral 0x1228281e0 <col:27> 'char[4]' lvalue "STR"
      | | |-CXXDependentScopeMemberExpr 0x1228283f0 <line:21:27, col:44> '<dependent type>' contains-errors lvalue .name
      | | | `-CXXDependentScopeMemberExpr 0x1228283a8 <col:27, col:35> '<dependent type>' contains-errors lvalue ->importer
      | | |   `-RecoveryExpr 0x122828388 <col:27> '<dependent type>' contains-errors lvalue
      | | `-CXXDependentScopeMemberExpr 0x1228284a0 <col:50, col:67> '<dependent type>' contains-errors lvalue .fd
      | |   `-CXXDependentScopeMemberExpr 0x122828458 <col:50, col:58> '<dependent type>' contains-errors lvalue ->importer
      | |     `-RecoveryExpr 0x122828438 <col:50> '<dependent type>' contains-errors lvalue
      | |-CallExpr 0x1228297a0 <line:27:17, col:43> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x1228296f8 <col:17> 'int ()' Function 0x1228280c0 'log_debug' 'int ()'
      | | |-StringLiteral 0x122829718 <col:27> 'char[4]' lvalue "STR"
      | | `-CXXDependentScopeMemberExpr 0x122829758 <col:34, col:37> '<dependent type>' contains-errors lvalue ->active
      | |   `-RecoveryExpr 0x122829738 <col:34> '<dependent type>' contains-errors lvalue
      | `-ReturnStmt 0x1228297f0 <line:28:17, col:24>
      |   `-IntegerLiteral 0x1228297d0 <col:24> 'int' 0
      `-IfStmt 0x122829db8 <line:29:16, line:39:24> has_else
        |-RecoveryExpr 0x122829850 <line:29:20, col:26> '_Bool' contains-errors
        |-CompoundStmt 0x122829968 <col:33, line:32:9>
        | |-CallExpr 0x1228298f8 <line:30:17, col:33> 'int'
        | | |-ImplicitCastExpr 0x1228298e0 <col:17> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x122829870 <col:17> 'int ()' Function 0x122828688 'log_notice' 'int ()'
        | | `-ImplicitCastExpr 0x122829920 <col:28> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x122829890 <col:28> 'char[4]' lvalue "STR"
        | `-ReturnStmt 0x122829958 <line:31:17, col:24>
        |   `-IntegerLiteral 0x122829938 <col:24> 'int' 1
        `-IfStmt 0x122829d88 <line:32:16, line:39:24> has_else
          |-RecoveryExpr 0x1228299a8 <line:32:20, col:26> '_Bool' contains-errors
          |-CompoundStmt 0x1228299f8 <col:34, line:34:9>
          | `-ReturnStmt 0x1228299e8 <line:33:17, col:24>
          |   `-IntegerLiteral 0x1228299c8 <col:24> 'int' 0
          `-IfStmt 0x122829d58 <line:34:16, line:39:24> has_else
            |-BinaryOperator 0x122829a68 <line:34:20, col:24> 'int' '<'
            | |-ImplicitCastExpr 0x122829a50 <col:20> 'int' <LValueToRValue>
            | | `-DeclRefExpr 0x122829a10 <col:20> 'int' lvalue Var 0x12280e0a0 'r' 'int'
            | `-IntegerLiteral 0x122829a30 <col:24> 'int' 0
            |-CompoundStmt 0x122829d00 <col:27, line:38:9>
            | |-CallExpr 0x122829be0 <line:35:17, col:41> 'int'
            | | |-ImplicitCastExpr 0x122829bc8 <col:17> 'int (*)()' <FunctionToPointerDecay>
            | | | `-DeclRefExpr 0x122829b68 <col:17> 'int ()' Function 0x122829ab0 'log_debug_errno' 'int ()'
            | | |-ImplicitCastExpr 0x122829c10 <col:33> 'int' <LValueToRValue>
            | | | `-DeclRefExpr 0x122829b88 <col:33> 'int' lvalue Var 0x12280e0a0 'r' 'int'
            | | `-ImplicitCastExpr 0x122829c28 <col:36> 'char *' <ArrayToPointerDecay>
            | |   `-StringLiteral 0x122829ba8 <col:36> 'char[4]' lvalue "STR"
            | |-CallExpr 0x122829ca0 <line:36:17, col:36> '<dependent type>' contains-errors
            | | |-DeclRefExpr 0x122829c40 <col:17> 'int ()' Function 0x122829600 'remove_source' 'int ()'
            | | |-RecoveryExpr 0x122829c60 <col:31> '<dependent type>' contains-errors lvalue
            | | `-DeclRefExpr 0x122829c80 <col:34> 'int' lvalue ParmVar 0x12280dda8 'fd' 'int'
            | `-ReturnStmt 0x122829cf0 <line:37:17, col:24>
            |   `-IntegerLiteral 0x122829cd0 <col:24> 'int' 0
            `-ReturnStmt 0x122829d48 <line:39:17, col:24>
              `-IntegerLiteral 0x122829d28 <col:24> 'int' 1
