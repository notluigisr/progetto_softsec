`-FunctionDecl 0x14d026a68  line:1:1 http_dissect_hdrs 'int (struct worker *, struct http *, int, char *, const struct http_conn *)'
  |-ParmVarDecl 0x14d00e248 <col:19, col:34> col:34 used w 'struct worker *'
  |-ParmVarDecl 0x14d026628 <col:37, col:50> col:50 used hp 'struct http *'
  |-ParmVarDecl 0x14d0266a8 <col:54, col:58> col:58 used fd 'int'
  |-ParmVarDecl 0x14d026728 <col:62, col:68> col:68 used p 'char *'
  |-ParmVarDecl 0x14d0268f8 <line:2:5, col:29> col:29 used htc 'const struct http_conn *'
  `-CompoundStmt 0x14d02cdd8 <line:3:1, line:70:1>
    |-DeclStmt 0x14d026c98 <line:4:2, col:13>
    | |-VarDecl 0x14d026b98 <col:2, col:8> col:8 used q 'char *'
    | `-VarDecl 0x14d026c18 <col:2, col:12> col:12 used r 'char *'
    |-IfStmt 0x14d026db8 <line:7:2, line:8:4>
    | |-BinaryOperator 0x14d026d60 <line:7:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x14d026d48 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14d026d30 <col:6, col:7> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14d026d00 <col:6, col:7> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14d026ce8 <col:7> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14d026cc8 <col:7> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    | | `-CharacterLiteral 0x14d026d18 <col:12> 'int' 13
    | `-UnaryOperator 0x14d026da0 <line:8:3, col:4> 'char *' postfix '++'
    |   `-DeclRefExpr 0x14d026d80 <col:3> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |-BinaryOperator 0x14d026e90 <line:10:2, col:12> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d026e10 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d026dd8 <col:2> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    | `-RecoveryExpr 0x14d026e70 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d026f30 <line:11:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d026ee8 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d026eb0 <col:2> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    | `-IntegerLiteral 0x14d026f10 <col:14> 'int' 0
    |-BinaryOperator 0x14d026fc8 <line:12:2, col:6> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14d026f50 <col:2> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    | `-RecoveryExpr 0x14d026fa8 <col:6> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x14d02cd50 <line:13:2, line:68:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d0270f0 <line:13:9, col:15> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d026fe8 <col:9> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    | | `-CXXDependentScopeMemberExpr 0x14d0270a8 <col:13, col:15> '<dependent type>' contains-errors lvalue .e
    | |   `-RecoveryExpr 0x14d027088 <col:13> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x14d027168 <col:18, col:22> 'char *' '='
    | | |-DeclRefExpr 0x14d027110 <col:18> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    | | `-ImplicitCastExpr 0x14d027150 <col:22> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d027130 <col:22> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    | `-CompoundStmt 0x14d02cd00 <col:25, line:68:2>
    |   |-BinaryOperator 0x14d027220 <line:16:3, col:11> 'char *' '='
    |   | |-DeclRefExpr 0x14d027188 <col:3> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | `-BinaryOperator 0x14d027200 <col:7, col:11> 'char *' '='
    |   |   |-DeclRefExpr 0x14d0271a8 <col:7> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   `-ImplicitCastExpr 0x14d0271e8 <col:11> 'char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14d0271c8 <col:11> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   |-WhileStmt 0x14d02a510 <line:17:3, line:34:3>
    |   | |-BinaryOperator 0x14d027348 <line:17:10, col:16> 'int' contains-errors '<'
    |   | | |-DeclRefExpr 0x14d027240 <col:10> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   | | `-CXXDependentScopeMemberExpr 0x14d027300 <col:14, col:16> '<dependent type>' contains-errors lvalue .e
    |   | |   `-RecoveryExpr 0x14d0272e0 <col:14> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14d02a4c8 <col:19, line:34:3>
    |   |   |-IfStmt 0x14d029a20 <line:18:4, line:21:4>
    |   |   | |-UnaryOperator 0x14d027590 <line:18:8, col:22> 'int' prefix '!' cannot overflow
    |   |   | | `-CallExpr 0x14d027538 <col:9, col:22> 'int'
    |   |   | |   |-ImplicitCastExpr 0x14d027520 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | |   | `-DeclRefExpr 0x14d027480 <col:9> 'int ()' Function 0x14d0273c8 'vct_iscrlf' 'int ()'
    |   |   | |   `-ImplicitCastExpr 0x14d027578 <col:20, col:21> 'int' <IntegralCast>
    |   |   | |     `-ImplicitCastExpr 0x14d027560 <col:20, col:21> 'char' <LValueToRValue>
    |   |   | |       `-UnaryOperator 0x14d0274d8 <col:20, col:21> 'char' lvalue prefix '*' cannot overflow
    |   |   | |         `-ImplicitCastExpr 0x14d0274c0 <col:21> 'char *' <LValueToRValue>
    |   |   | |           `-DeclRefExpr 0x14d0274a0 <col:21> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   | `-CompoundStmt 0x14d029a00 <col:25, line:21:4>
    |   |   |   |-UnaryOperator 0x14d0275c8 <line:19:5, col:6> 'char *' postfix '++'
    |   |   |   | `-DeclRefExpr 0x14d0275a8 <col:5> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   |   `-ContinueStmt 0x14d0275e0 <line:20:5>
    |   |   |-BinaryOperator 0x14d029a98 <line:22:4, col:8> 'char *' '='
    |   |   | |-DeclRefExpr 0x14d029a40 <col:4> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |   | `-ImplicitCastExpr 0x14d029a80 <col:8> 'char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x14d029a60 <col:8> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   |-CallExpr 0x14d029d08 <line:23:4, col:18> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d029b98 <col:4> 'int ()' Function 0x14d029ae0 'assert' 'int ()'
    |   |   | `-BinaryOperator 0x14d029ce8 <col:11, col:17> 'int' contains-errors '<'
    |   |   |   |-DeclRefExpr 0x14d029bb8 <col:11> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   |   `-CXXDependentScopeMemberExpr 0x14d029ca0 <col:15, col:17> '<dependent type>' contains-errors lvalue .e
    |   |   |     `-RecoveryExpr 0x14d029c80 <col:15> '<dependent type>' contains-errors lvalue
    |   |   |-CompoundAssignOperator 0x14d029ec8 <line:24:4, col:23> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |   |   | |-DeclRefExpr 0x14d029d30 <col:4> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   | `-CallExpr 0x14d029e88 <col:9, col:23> 'int'
    |   |   |   |-ImplicitCastExpr 0x14d029e70 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   | `-DeclRefExpr 0x14d029e30 <col:9> 'int ()' Function 0x14d029d78 'vct_skipcrlf' 'int ()'
    |   |   |   `-ImplicitCastExpr 0x14d029eb0 <col:22> 'char *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x14d029e50 <col:22> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   |-IfStmt 0x14d02a028 <line:25:4, line:26:5>
    |   |   | |-BinaryOperator 0x14d02a000 <line:25:8, col:15> 'int' contains-errors '>='
    |   |   | | |-DeclRefExpr 0x14d029ef8 <col:8> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   | | `-CXXDependentScopeMemberExpr 0x14d029fb8 <col:13, col:15> '<dependent type>' contains-errors lvalue .e
    |   |   | |   `-RecoveryExpr 0x14d029f98 <col:13> '<dependent type>' contains-errors lvalue
    |   |   | `-BreakStmt 0x14d02a020 <line:26:5>
    |   |   |-IfStmt 0x14d02a228 <line:28:4, line:29:5>
    |   |   | |-UnaryOperator 0x14d02a208 <line:28:8, col:20> 'int' prefix '!' cannot overflow
    |   |   | | `-CallExpr 0x14d02a1b0 <col:9, col:20> 'int'
    |   |   | |   |-ImplicitCastExpr 0x14d02a198 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | |   | `-DeclRefExpr 0x14d02a128 <col:9> 'int ()' Function 0x14d02a070 'vct_issp' 'int ()'
    |   |   | |   `-ImplicitCastExpr 0x14d02a1f0 <col:18, col:19> 'int' <IntegralCast>
    |   |   | |     `-ImplicitCastExpr 0x14d02a1d8 <col:18, col:19> 'char' <LValueToRValue>
    |   |   | |       `-UnaryOperator 0x14d02a180 <col:18, col:19> 'char' lvalue prefix '*' cannot overflow
    |   |   | |         `-ImplicitCastExpr 0x14d02a168 <col:19> 'char *' <LValueToRValue>
    |   |   | |           `-DeclRefExpr 0x14d02a148 <col:19> 'char *' lvalue Var 0x14d026c18 'r' 'char *'
    |   |   | `-BreakStmt 0x14d02a220 <line:29:5>
    |   |   `-WhileStmt 0x14d02a4a8 <line:32:4, line:33:12>
    |   |     |-CallExpr 0x14d02a3b0 <line:32:11, col:23> 'int'
    |   |     | |-ImplicitCastExpr 0x14d02a398 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     | | `-DeclRefExpr 0x14d02a328 <col:11> 'int ()' Function 0x14d02a270 'vct_islws' 'int ()'
    |   |     | `-ImplicitCastExpr 0x14d02a3f0 <col:21, col:22> 'int' <IntegralCast>
    |   |     |   `-ImplicitCastExpr 0x14d02a3d8 <col:21, col:22> 'char' <LValueToRValue>
    |   |     |     `-UnaryOperator 0x14d02a380 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
    |   |     |       `-ImplicitCastExpr 0x14d02a368 <col:22> 'char *' <LValueToRValue>
    |   |     |         `-DeclRefExpr 0x14d02a348 <col:22> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |     `-BinaryOperator 0x14d02a488 <line:33:5, col:12> 'char' '='
    |   |       |-UnaryOperator 0x14d02a440 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    |   |       | `-UnaryOperator 0x14d02a428 <col:6, col:7> 'char *' postfix '++'
    |   |       |   `-DeclRefExpr 0x14d02a408 <col:6> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |       `-ImplicitCastExpr 0x14d02a470 <col:12> 'char' <IntegralCast>
    |   |         `-CharacterLiteral 0x14d02a458 <col:12> 'int' 32
    |   |-IfStmt 0x14d02b850 <line:36:3, line:41:3>
    |   | |-BinaryOperator 0x14d02a620 <line:36:7, col:20> 'int' contains-errors '>'
    |   | | |-BinaryOperator 0x14d02a5a0 <col:7, col:11> 'long' '-'
    |   | | | |-ImplicitCastExpr 0x14d02a570 <col:7> 'char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14d02a530 <col:7> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | | | `-ImplicitCastExpr 0x14d02a588 <col:11> 'char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14d02a550 <col:11> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | `-RecoveryExpr 0x14d02a5f8 <col:15, col:20> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x14d02a5c0 <col:15> 'const struct http_conn *' lvalue ParmVar 0x14d0268f8 'htc' 'const struct http_conn *'
    |   | `-CompoundStmt 0x14d02b830 <col:28, line:41:3>
    |   |   |-CallExpr 0x14d02b790 <line:38:4, line:39:34> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d02a720 <line:38:4> 'int ()' Function 0x14d02a668 'WSL' 'int ()'
    |   |   | |-DeclRefExpr 0x14d02a740 <col:8> 'struct worker *' lvalue ParmVar 0x14d00e248 'w' 'struct worker *'
    |   |   | |-RecoveryExpr 0x14d02b650 <col:11> '<dependent type>' contains-errors lvalue
    |   |   | |-DeclRefExpr 0x14d02a778 <col:27> 'int' lvalue ParmVar 0x14d0266a8 'fd' 'int'
    |   |   | |-StringLiteral 0x14d02a7e0 <col:31> 'char[4]' lvalue "STR"
    |   |   | |-ConditionalOperator 0x14d02b760 <line:39:8, col:30> 'long'
    |   |   | | |-BinaryOperator 0x14d02b6d8 <col:8, col:16> 'int' '>'
    |   |   | | | |-BinaryOperator 0x14d02b6a0 <col:8, col:12> 'long' '-'
    |   |   | | | | |-ImplicitCastExpr 0x14d02b670 <col:8> 'char *' <LValueToRValue>
    |   |   | | | | | `-DeclRefExpr 0x14d02a800 <col:8> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |   | | | | `-ImplicitCastExpr 0x14d02b688 <col:12> 'char *' <LValueToRValue>
    |   |   | | | |   `-DeclRefExpr 0x14d02a820 <col:12> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   |   | | | `-ImplicitCastExpr 0x14d02b6c0 <col:16> 'long' <IntegralCast>
    |   |   | | |   `-IntegerLiteral 0x14d02a890 <col:16> 'int' 20
    |   |   | | |-ImplicitCastExpr 0x14d02b748 <col:21> 'long' <IntegralCast>
    |   |   | | | `-IntegerLiteral 0x14d02a8e8 <col:21> 'int' 20
    |   |   | | `-BinaryOperator 0x14d02b728 <col:26, col:30> 'long' '-'
    |   |   | |   |-ImplicitCastExpr 0x14d02b6f8 <col:26> 'char *' <LValueToRValue>
    |   |   | |   | `-DeclRefExpr 0x14d02a908 <col:26> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |   | |   `-ImplicitCastExpr 0x14d02b710 <col:30> 'char *' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x14d02a928 <col:30> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   |   | `-DeclRefExpr 0x14d02a9e0 <col:33> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   |   `-ReturnStmt 0x14d02b820 <line:40:4, col:15>
    |   |     `-ParenExpr 0x14d02b800 <col:11, col:15> 'int'
    |   |       `-IntegerLiteral 0x14d02b7e0 <col:12> 'int' 413
    |   |-IfStmt 0x14d02b908 <line:44:3, line:45:4>
    |   | |-BinaryOperator 0x14d02b8e0 <line:44:7, col:12> 'int' '=='
    |   | | |-ImplicitCastExpr 0x14d02b8b0 <col:7> 'char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14d02b870 <col:7> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | `-ImplicitCastExpr 0x14d02b8c8 <col:12> 'char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d02b890 <col:12> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | `-BreakStmt 0x14d02b900 <line:45:4>
    |   |-IfStmt 0x14d02bee8 <line:47:3, line:50:16>
    |   | |-BinaryOperator 0x14d02be28 <line:47:7, line:49:15> 'int' '&&'
    |   | | |-BinaryOperator 0x14d02bd28 <line:47:7, line:48:34> 'int' '&&'
    |   | | | |-ParenExpr 0x14d02bb08 <line:47:7, col:34> 'int'
    |   | | | | `-BinaryOperator 0x14d02bae8 <col:8, col:31> 'int' '||'
    |   | | | |   |-BinaryOperator 0x14d02b9e8 <col:8, col:16> 'int' '=='
    |   | | | |   | |-ImplicitCastExpr 0x14d02b9d0 <col:8, col:11> 'int' <IntegralCast>
    |   | | | |   | | `-ImplicitCastExpr 0x14d02b9b8 <col:8, col:11> 'char' <LValueToRValue>
    |   | | | |   | |   `-ArraySubscriptExpr 0x14d02b980 <col:8, col:11> 'char' lvalue
    |   | | | |   | |     |-ImplicitCastExpr 0x14d02b968 <col:8> 'char *' <LValueToRValue>
    |   | | | |   | |     | `-DeclRefExpr 0x14d02b928 <col:8> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | | |   | |     `-IntegerLiteral 0x14d02b948 <col:10> 'int' 0
    |   | | | |   | `-CharacterLiteral 0x14d02b9a0 <col:16> 'int' 105
    |   | | | |   `-BinaryOperator 0x14d02bac8 <col:23, col:31> 'int' '=='
    |   | | | |     |-ImplicitCastExpr 0x14d02bab0 <col:23, col:26> 'int' <IntegralCast>
    |   | | | |     | `-ImplicitCastExpr 0x14d02ba98 <col:23, col:26> 'char' <LValueToRValue>
    |   | | | |     |   `-ArraySubscriptExpr 0x14d02ba60 <col:23, col:26> 'char' lvalue
    |   | | | |     |     |-ImplicitCastExpr 0x14d02ba48 <col:23> 'char *' <LValueToRValue>
    |   | | | |     |     | `-DeclRefExpr 0x14d02ba08 <col:23> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | | |     |     `-IntegerLiteral 0x14d02ba28 <col:25> 'int' 0
    |   | | | |     `-CharacterLiteral 0x14d02ba80 <col:31> 'int' 73
    |   | | | `-ParenExpr 0x14d02bd08 <line:48:7, col:34> 'int'
    |   | | |   `-BinaryOperator 0x14d02bce8 <col:8, col:31> 'int' '||'
    |   | | |     |-BinaryOperator 0x14d02bbe8 <col:8, col:16> 'int' '=='
    |   | | |     | |-ImplicitCastExpr 0x14d02bbd0 <col:8, col:11> 'int' <IntegralCast>
    |   | | |     | | `-ImplicitCastExpr 0x14d02bbb8 <col:8, col:11> 'char' <LValueToRValue>
    |   | | |     | |   `-ArraySubscriptExpr 0x14d02bb80 <col:8, col:11> 'char' lvalue
    |   | | |     | |     |-ImplicitCastExpr 0x14d02bb68 <col:8> 'char *' <LValueToRValue>
    |   | | |     | |     | `-DeclRefExpr 0x14d02bb28 <col:8> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | |     | |     `-IntegerLiteral 0x14d02bb48 <col:10> 'int' 1
    |   | | |     | `-CharacterLiteral 0x14d02bba0 <col:16> 'int' 102
    |   | | |     `-BinaryOperator 0x14d02bcc8 <col:23, col:31> 'int' '=='
    |   | | |       |-ImplicitCastExpr 0x14d02bcb0 <col:23, col:26> 'int' <IntegralCast>
    |   | | |       | `-ImplicitCastExpr 0x14d02bc98 <col:23, col:26> 'char' <LValueToRValue>
    |   | | |       |   `-ArraySubscriptExpr 0x14d02bc60 <col:23, col:26> 'char' lvalue
    |   | | |       |     |-ImplicitCastExpr 0x14d02bc48 <col:23> 'char *' <LValueToRValue>
    |   | | |       |     | `-DeclRefExpr 0x14d02bc08 <col:23> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | |       |     `-IntegerLiteral 0x14d02bc28 <col:25> 'int' 1
    |   | | |       `-CharacterLiteral 0x14d02bc80 <col:31> 'int' 70
    |   | | `-BinaryOperator 0x14d02be08 <line:49:7, col:15> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x14d02bdf0 <col:7, col:10> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x14d02bdd8 <col:7, col:10> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x14d02bda0 <col:7, col:10> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x14d02bd88 <col:7> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x14d02bd48 <col:7> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | |   |     `-IntegerLiteral 0x14d02bd68 <col:9> 'int' 2
    |   | |   `-CharacterLiteral 0x14d02bdc0 <col:15> 'int' 45
    |   | `-BinaryOperator 0x14d02bec8 <line:50:4, col:16> '<dependent type>' contains-errors '='
    |   |   |-RecoveryExpr 0x14d02be80 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x14d02be48 <col:4> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |   |   `-IntegerLiteral 0x14d02bea8 <col:16> 'int' 1
    |   |-WhileStmt 0x14d02c110 <line:52:3, line:53:5>
    |   | |-BinaryOperator 0x14d02c0b8 <line:52:10, col:33> 'int' '&&'
    |   | | |-BinaryOperator 0x14d02bf78 <col:10, col:14> 'int' '>'
    |   | | | |-ImplicitCastExpr 0x14d02bf48 <col:10> 'char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14d02bf08 <col:10> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | | | `-ImplicitCastExpr 0x14d02bf60 <col:14> 'char *' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x14d02bf28 <col:14> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |   | | `-CallExpr 0x14d02c060 <col:19, col:33> 'int'
    |   | |   |-ImplicitCastExpr 0x14d02c048 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x14d02bf98 <col:19> 'int ()' Function 0x14d02a070 'vct_issp' 'int ()'
    |   | |   `-ImplicitCastExpr 0x14d02c0a0 <col:28, col:32> 'int' <IntegralCast>
    |   | |     `-ImplicitCastExpr 0x14d02c088 <col:28, col:32> 'char' <LValueToRValue>
    |   | |       `-ArraySubscriptExpr 0x14d02c028 <col:28, col:32> 'char' lvalue
    |   | |         |-ImplicitCastExpr 0x14d02c010 <col:28> 'char *' <LValueToRValue>
    |   | |         | `-DeclRefExpr 0x14d02bfb8 <col:28> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | |         `-UnaryOperator 0x14d02bff8 <col:30, col:31> 'int' prefix '-'
    |   | |           `-IntegerLiteral 0x14d02bfd8 <col:31> 'int' 1
    |   | `-UnaryOperator 0x14d02c0f8 <line:53:4, col:5> 'char *' postfix '--'
    |   |   `-DeclRefExpr 0x14d02c0d8 <col:4> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   |-BinaryOperator 0x14d02c1b0 <line:54:3, col:8> 'char' '='
    |   | |-UnaryOperator 0x14d02c168 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x14d02c150 <col:4> 'char *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d02c130 <col:4> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |   | `-ImplicitCastExpr 0x14d02c198 <col:8> 'char' <IntegralCast>
    |   |   `-CharacterLiteral 0x14d02c180 <col:8> 'int' 0
    |   `-IfStmt 0x14d02ccd0 <line:56:3, line:67:3> has_else
    |     |-BinaryOperator 0x14d02c290 <line:56:7, col:21> 'int' contains-errors '<'
    |     | |-RecoveryExpr 0x14d02c208 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x14d02c1d0 <col:7> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | `-RecoveryExpr 0x14d02c268 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x14d02c230 <col:17> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     |-CompoundStmt 0x14d02c9b0 <col:26, line:62:3>
    |     | |-BinaryOperator 0x14d02c3e0 <line:57:4, col:23> '<dependent type>' contains-errors '='
    |     | | |-ArraySubscriptExpr 0x14d02c3a0 <col:4, col:19> '<dependent type>' contains-errors lvalue
    |     | | | |-ImplicitCastExpr 0x14d02c370 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | | `-RecoveryExpr 0x14d02c2e8 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |     | | | |   `-DeclRefExpr 0x14d02c2b0 <col:4> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | | `-ImplicitCastExpr 0x14d02c388 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>
    |     | | |   `-RecoveryExpr 0x14d02c348 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     | | |     `-DeclRefExpr 0x14d02c310 <col:12> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | `-IntegerLiteral 0x14d02c3c0 <col:23> 'int' 0
    |     | |-BinaryOperator 0x14d02c578 <line:58:4, col:24> '<dependent type>' contains-errors '='
    |     | | |-CXXDependentScopeMemberExpr 0x14d02c510 <col:4, col:20> '<dependent type>' contains-errors lvalue .b
    |     | | | `-ArraySubscriptExpr 0x14d02c4f0 <col:4, col:18> '<dependent type>' contains-errors lvalue
    |     | | |   |-ImplicitCastExpr 0x14d02c4c0 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | | |   | `-RecoveryExpr 0x14d02c438 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |     | | |   |   `-DeclRefExpr 0x14d02c400 <col:4> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | |   `-ImplicitCastExpr 0x14d02c4d8 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     | | |     `-RecoveryExpr 0x14d02c498 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |     | | |       `-DeclRefExpr 0x14d02c460 <col:11> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | `-DeclRefExpr 0x14d02c558 <col:24> 'char *' lvalue ParmVar 0x14d026728 'p' 'char *'
    |     | |-BinaryOperator 0x14d02c718 <line:59:4, col:24> '<dependent type>' contains-errors '='
    |     | | |-CXXDependentScopeMemberExpr 0x14d02c6b0 <col:4, col:20> '<dependent type>' contains-errors lvalue .e
    |     | | | `-ArraySubscriptExpr 0x14d02c690 <col:4, col:18> '<dependent type>' contains-errors lvalue
    |     | | |   |-ImplicitCastExpr 0x14d02c660 <col:4, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | | |   | `-RecoveryExpr 0x14d02c5d0 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |     | | |   |   `-DeclRefExpr 0x14d02c598 <col:4> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | |   `-ImplicitCastExpr 0x14d02c678 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     | | |     `-RecoveryExpr 0x14d02c638 <col:11, col:15> '<dependent type>' contains-errors lvalue
    |     | | |       `-DeclRefExpr 0x14d02c600 <col:11> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | `-DeclRefExpr 0x14d02c6f8 <col:24> 'char *' lvalue Var 0x14d026b98 'q' 'char *'
    |     | |-CallExpr 0x14d02c8f8 <line:60:4, col:27> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14d02c818 <col:4> 'int ()' Function 0x14d02c760 'WSLH' 'int ()'
    |     | | |-DeclRefExpr 0x14d02c838 <col:9> 'struct worker *' lvalue ParmVar 0x14d00e248 'w' 'struct worker *'
    |     | | |-DeclRefExpr 0x14d02c858 <col:12> 'int' lvalue ParmVar 0x14d0266a8 'fd' 'int'
    |     | | |-DeclRefExpr 0x14d02c878 <col:16> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | | `-RecoveryExpr 0x14d02c8d0 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x14d02c898 <col:20> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     | `-UnaryOperator 0x14d02c998 <line:61:4, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |   `-RecoveryExpr 0x14d02c970 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14d02c938 <col:4> 'struct http *' lvalue ParmVar 0x14d026628 'hp' 'struct http *'
    |     `-CompoundStmt 0x14d02ccb8 <line:62:10, line:67:3>
    |       `-ReturnStmt 0x14d02cca8 <line:66:4, col:15>
    |         `-ParenExpr 0x14d02cc88 <col:11, col:15> 'int'
    |           `-IntegerLiteral 0x14d02cc68 <col:12> 'int' 413
    `-ReturnStmt 0x14d02cdc8 <line:69:2, col:11>
      `-ParenExpr 0x14d02cda8 <col:9, col:11> 'int'
        `-IntegerLiteral 0x14d02cd88 <col:10> 'int' 0
