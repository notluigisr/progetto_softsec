`-FunctionDecl 0x13700def8  line:1:19 __ipv6_addr_diff 'int (const void *, const void *, int)' static inline
  |-ParmVarDecl 0x13700dd08 <col:36, col:48> col:48 used token1 'const void *'
  |-ParmVarDecl 0x13700dd88 <col:56, col:68> col:68 token2 'const void *'
  |-ParmVarDecl 0x13700de08 <col:76, col:80> col:80 used addrlen 'int'
  `-CompoundStmt 0x137028f20 <line:2:1, line:16:1>
    |-DeclStmt 0x13700e0b8 <line:3:2, col:33>
    | `-VarDecl 0x13700e030 <col:2, col:16> col:16 invalid a1 'const int *'
    |-DeclStmt 0x13700e150 <line:4:2, col:7>
    | `-VarDecl 0x13700e0e8 <col:2, col:6> col:6 used i 'int'
    |-CompoundAssignOperator 0x13700e1c0 <line:6:2, col:14> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x13700e168 <col:2> 'int' lvalue ParmVar 0x13700de08 'addrlen' 'int'
    | `-IntegerLiteral 0x13700e188 <col:14> 'int' 2
    |-ForStmt 0x137028e60 <line:8:2, line:12:2>
    | |-BinaryOperator 0x13700e230 <line:8:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13700e1f0 <col:7> 'int' lvalue Var 0x13700e0e8 'i' 'int'
    | | `-IntegerLiteral 0x13700e210 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13700e2c0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x13700e290 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13700e250 <col:14> 'int' lvalue Var 0x13700e0e8 'i' 'int'
    | | `-ImplicitCastExpr 0x13700e2a8 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13700e270 <col:18> 'int' lvalue ParmVar 0x13700de08 'addrlen' 'int'
    | |-UnaryOperator 0x13700e300 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x13700e2e0 <col:27> 'int' lvalue Var 0x13700e0e8 'i' 'int'
    | `-CompoundStmt 0x137028e48 <col:32, line:12:2>
    |   `-IfStmt 0x137028e28 <line:10:3, line:11:40>
    |     |-RecoveryExpr 0x13700e330 <line:10:7> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x137028e18 <line:11:4, col:40>
    |       `-BinaryOperator 0x137028df8 <col:11, col:40> '<dependent type>' contains-errors '-'
    |         |-BinaryOperator 0x137028d68 <col:11, col:20> 'int' '+'
    |         | |-BinaryOperator 0x137028d48 <col:11, col:15> 'int' '*'
    |         | | |-ImplicitCastExpr 0x137028d30 <col:11> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x13700e350 <col:11> 'int' lvalue Var 0x13700e0e8 'i' 'int'
    |         | | `-IntegerLiteral 0x13700e370 <col:15> 'int' 32
    |         | `-IntegerLiteral 0x13700e3c8 <col:20> 'int' 31
    |         `-CallExpr 0x137028dd0 <col:25, col:40> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x137028b30 <col:25> 'int ()' Function 0x137028a78 '__fls' 'int ()'
    |           `-CallExpr 0x137028da8 <col:31, col:39> '<dependent type>' contains-errors
    |             |-DeclRefExpr 0x137028c30 <col:31> 'int ()' Function 0x137028b78 'ntohl' 'int ()'
    |             `-RecoveryExpr 0x137028d88 <col:37> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x137028f10 <line:15:2, col:20>
      `-BinaryOperator 0x137028ef0 <col:9, col:20> 'int' '<<'
        |-ImplicitCastExpr 0x137028ed8 <col:9> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x137028e98 <col:9> 'int' lvalue ParmVar 0x13700de08 'addrlen' 'int'
        `-IntegerLiteral 0x137028eb8 <col:20> 'int' 5
