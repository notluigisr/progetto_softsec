`-FunctionDecl 0x13380de88  line:1:19 invalid GC_debug_generic_malloc_inner 'int *(int, int)'
  |-ParmVarDecl 0x13380dcf0 <col:49, col:56> col:56 invalid lb 'int'
  |-ParmVarDecl 0x13380dd70 <col:60, col:64> col:64 used k 'int'
  `-CompoundStmt 0x133122d50 <line:2:3, line:15:3>
    |-DeclStmt 0x13380e258 <line:3:5, col:65>
    | `-VarDecl 0x13380df58 <col:5, col:64> col:12 used result 'void *' cinit
    |   `-CallExpr 0x13380e228 <col:21, col:64> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13380e120 <col:21> 'int ()' Function 0x13380e068 'GC_generic_malloc_inner' 'int ()'
    |     |-BinaryOperator 0x13380e208 <col:45, col:50> '<dependent type>' contains-errors '+'
    |     | |-RecoveryExpr 0x13380e140 <col:45> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x13380e1e8 <col:50> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13380e198 <col:63> 'int' lvalue ParmVar 0x13380dd70 'k' 'int'
    |-IfStmt 0x1331227d8 <line:5:5, line:9:5>
    | |-BinaryOperator 0x13380e2e0 <line:5:9, col:19> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x13380e2b0 <col:9> 'void *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x13380e270 <col:9> 'void *' contains-errors lvalue Var 0x13380df58 'result' 'void *'
    | | `-ImplicitCastExpr 0x13380e2c8 <col:19> 'void *' <NullToPointer>
    | |   `-IntegerLiteral 0x13380e290 <col:19> 'int' 0
    | `-CompoundStmt 0x1331227b8 <col:22, line:9:5>
    |   |-CallExpr 0x133122708 <line:6:9, line:7:42> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x1331226f0 <line:6:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13380e3e0 <col:9> 'int ()' Function 0x13380e328 'GC_err_printf' 'int ()'
    |   | |-ImplicitCastExpr 0x133122738 <col:23> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x133122640 <col:23> 'char[4]' lvalue "STR"
    |   | `-CStyleCastExpr 0x133122698 <line:7:24, col:40> 'unsigned long' contains-errors <Dependent>
    |   |   `-RecoveryExpr 0x133122660 <col:40> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x1331227a8 <line:8:9, col:17>
    |     `-ImplicitCastExpr 0x133122790 <col:15, col:17> 'int *' <NullToPointer>
    |       `-ParenExpr 0x133122770 <col:15, col:17> 'int'
    |         `-IntegerLiteral 0x133122750 <col:16> 'int' 0
    |-IfStmt 0x1331229e0 <line:10:5, line:12:5>
    | |-UnaryOperator 0x133122878 <line:10:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x133122860 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x133122840 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1331229c8 <col:32, line:12:5>
    |   `-CallExpr 0x1331229a8 <line:11:9, col:34> 'int'
    |     `-ImplicitCastExpr 0x133122990 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x133122970 <col:9> 'int ()' Function 0x1331228b8 'GC_start_debugging_inner' 'int ()'
    `-CallExpr 0x133122b88 <line:13:5, col:42> '<dependent type>' contains-errors
      |-DeclRefExpr 0x133122ae0 <col:5> 'int ()' Function 0x133122a28 'ADD_CALL_CHAIN' 'int ()'
      |-DeclRefExpr 0x133122b00 <col:20> 'void *' contains-errors lvalue Var 0x13380df58 'result' 'void *'
      `-RecoveryExpr 0x133122b68 <col:28> '<dependent type>' contains-errors lvalue
