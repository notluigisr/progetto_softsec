`-FunctionDecl 0x122919c88  line:1:12 invalid r_anal_list_vtables 'int (int *, int)'
  |-ParmVarDecl 0x122919b28 <col:32, col:39> col:39 invalid anal 'int *'
  |-ParmVarDecl 0x122919ba8 <col:45, col:49> col:49 used rad 'int'
  `-CompoundStmt 0x121813f50 <col:54, line:67:1>
    |-CallExpr 0x122919f78 <line:3:2, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122919ea0 <col:2> 'int ()' Function 0x122919de8 'r_anal_vtable_begin' 'int ()'
    | |-RecoveryExpr 0x122919ec0 <col:23> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x122919f60 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x122919f40 <col:30> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12291a0c0 <line:5:2, col:34>
    | `-VarDecl 0x122919fc0 <col:2, col:29> col:14 noMethodName 'const char *' cinit
    |   `-ImplicitCastExpr 0x12291a0a8 <col:29> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x12291a090 <col:29> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12291a070 <col:29> 'char[4]' lvalue "STR"
    `-IfStmt 0x121813e20 <line:12:2, line:65:2> has_else
      |-BinaryOperator 0x121813580 <line:12:6, col:13> 'int' '=='
      | |-ImplicitCastExpr 0x121813568 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x121813530 <col:6> 'int' lvalue ParmVar 0x122919ba8 'rad' 'int'
      | `-CharacterLiteral 0x121813550 <col:13> 'int' 106
      |-CompoundStmt 0x121813d08 <col:18, line:36:2>
      | `-IfStmt 0x1218137e8 <line:14:3, line:16:3>
      |   |-UnaryOperator 0x1218137a8 <line:14:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   | `-ImplicitCastExpr 0x121813790 <col:8> '<dependent type>' contains-errors <LValueToRValue>
      |   |   `-RecoveryExpr 0x121813770 <col:8> '<dependent type>' contains-errors lvalue
      |   `-CompoundStmt 0x1218137d0 <col:12, line:16:3>
      |     `-ReturnStmt 0x1218137c0 <line:15:4>
      `-IfStmt 0x121813df0 <line:36:9, line:65:2> has_else
        |-BinaryOperator 0x121813d70 <line:36:13, col:20> 'int' '=='
        | |-ImplicitCastExpr 0x121813d58 <col:13> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x121813d20 <col:13> 'int' lvalue ParmVar 0x122919ba8 'rad' 'int'
        | `-CharacterLiteral 0x121813d40 <col:20> 'int' 42
        |-CompoundStmt 0x121813db0 <col:25, line:53:2>
        `-CompoundStmt 0x121813de0 <col:9, line:65:2>
