`-FunctionDecl 0x1279281a8  line:1:1 sv_locale 'int (char *)'
  |-ParmVarDecl 0x1279280d8 <line:2:6, col:12> col:12 used name 'char *'
  `-CompoundStmt 0x130009740 <line:3:1, line:11:1>
    |-DeclStmt 0x127928320 <line:4:3, col:10>
    | `-VarDecl 0x1279282b8 <col:3, col:9> col:9 used v 'char *'
    |-BinaryOperator 0x1300091a0 <line:6:3, col:29> 'char *' '='
    | |-DeclRefExpr 0x127928338 <col:3> 'char *' lvalue Var 0x1279282b8 'v' 'char *'
    | `-ImplicitCastExpr 0x127928548 <col:7, col:29> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x127928508 <col:7, col:29> 'int'
    |     |-ImplicitCastExpr 0x1279284f0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x127928480 <col:7> 'int ()' Function 0x1279283c8 'get_string_value' 'int ()'
    |     `-ImplicitCastExpr 0x127928530 <col:25> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x1279284a0 <col:25> 'char *' lvalue ParmVar 0x1279280d8 'name' 'char *'
    `-IfStmt 0x130009710 <line:7:3, line:10:28> has_else
      |-BinaryOperator 0x130009380 <line:7:7, col:36> 'int' '&&'
      | |-BinaryOperator 0x130009280 <col:7, col:18> 'int' '=='
      | | |-ImplicitCastExpr 0x130009268 <col:7, col:13> 'int' <IntegralCast>
      | | | `-ImplicitCastExpr 0x130009250 <col:7, col:13> 'char' <LValueToRValue>
      | | |   `-ArraySubscriptExpr 0x130009218 <col:7, col:13> 'char' lvalue
      | | |     |-ImplicitCastExpr 0x130009200 <col:7> 'char *' <LValueToRValue>
      | | |     | `-DeclRefExpr 0x1300091c0 <col:7> 'char *' lvalue ParmVar 0x1279280d8 'name' 'char *'
      | | |     `-IntegerLiteral 0x1300091e0 <col:12> 'int' 0
      | | `-CharacterLiteral 0x130009238 <col:18> 'int' 76
      | `-BinaryOperator 0x130009360 <col:25, col:36> 'int' '=='
      |   |-ImplicitCastExpr 0x130009348 <col:25, col:31> 'int' <IntegralCast>
      |   | `-ImplicitCastExpr 0x130009330 <col:25, col:31> 'char' <LValueToRValue>
      |   |   `-ArraySubscriptExpr 0x1300092f8 <col:25, col:31> 'char' lvalue
      |   |     |-ImplicitCastExpr 0x1300092e0 <col:25> 'char *' <LValueToRValue>
      |   |     | `-DeclRefExpr 0x1300092a0 <col:25> 'char *' lvalue ParmVar 0x1279280d8 'name' 'char *'
      |   |     `-IntegerLiteral 0x1300092c0 <col:30> 'int' 1
      |   `-CharacterLiteral 0x130009318 <col:36> 'int' 65
      |-CallExpr 0x1300094f8 <line:8:5, col:22> 'int'
      | |-ImplicitCastExpr 0x1300094e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x130009480 <col:5> 'int ()' Function 0x1300093c8 'set_lang' 'int ()'
      | |-ImplicitCastExpr 0x130009528 <col:15> 'char *' <LValueToRValue>
      | | `-DeclRefExpr 0x1300094a0 <col:15> 'char *' lvalue ParmVar 0x1279280d8 'name' 'char *'
      | `-ImplicitCastExpr 0x130009540 <col:21> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x1300094c0 <col:21> 'char *' lvalue Var 0x1279282b8 'v' 'char *'
      `-CallExpr 0x1300096b0 <line:10:5, col:28> 'int'
        |-ImplicitCastExpr 0x130009698 <col:5> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x130009638 <col:5> 'int ()' Function 0x130009580 'set_locale_var' 'int ()'
        |-ImplicitCastExpr 0x1300096e0 <col:21> 'char *' <LValueToRValue>
        | `-DeclRefExpr 0x130009658 <col:21> 'char *' lvalue ParmVar 0x1279280d8 'name' 'char *'
        `-ImplicitCastExpr 0x1300096f8 <col:27> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x130009678 <col:27> 'char *' lvalue Var 0x1279282b8 'v' 'char *'
