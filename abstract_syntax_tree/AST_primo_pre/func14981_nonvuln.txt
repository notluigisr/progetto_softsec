`-FunctionDecl 0x14f928198  line:1:5 dm_persistent_snapshot_init 'int (void)'
  `-CompoundStmt 0x14f941d20 <line:2:1, line:20:1>
    |-DeclStmt 0x14f928308 <line:3:2, col:7>
    | `-VarDecl 0x14f9282a0 <col:2, col:6> col:6 used r 'int'
    |-BinaryOperator 0x14f928568 <line:5:2, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f928320 <col:2> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    | `-CallExpr 0x14f928540 <col:6, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f928470 <col:6> 'int ()' Function 0x14f9283b8 'dm_exception_store_type_register' 'int ()'
    |   `-UnaryOperator 0x14f928528 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14f928508 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f941820 <line:6:2, line:9:2>
    | |-ImplicitCastExpr 0x14f9285a8 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f928588 <col:6> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    | `-CompoundStmt 0x14f941800 <col:9, line:9:2>
    |   |-CallExpr 0x14f928768 <line:7:3, col:14> 'int'
    |   | |-ImplicitCastExpr 0x14f928750 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14f9286a0 <col:3> 'int ()' Function 0x14f9285e8 'DMERR' 'int ()'
    |   | `-ImplicitCastExpr 0x14f928790 <col:9> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x14f928700 <col:9> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x14f9287e0 <line:8:3, col:10>
    |     `-ImplicitCastExpr 0x14f9287c8 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14f9287a8 <col:10> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    |-BinaryOperator 0x14f941958 <line:11:2, col:63> 'int' contains-errors '='
    | |-DeclRefExpr 0x14f941840 <col:2> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    | `-CallExpr 0x14f941930 <col:6, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14f941860 <col:6> 'int ()' Function 0x14f9283b8 'dm_exception_store_type_register' 'int ()'
    |   `-UnaryOperator 0x14f941918 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14f9418f8 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f941cb8 <line:12:2, line:17:2>
    | |-ImplicitCastExpr 0x14f941998 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f941978 <col:6> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    | `-CompoundStmt 0x14f941c90 <col:9, line:17:2>
    |   |-CallExpr 0x14f941a50 <line:13:3, line:14:14> 'int'
    |   | |-ImplicitCastExpr 0x14f941a38 <line:13:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14f9419b0 <col:3> 'int ()' Function 0x14f9285e8 'DMERR' 'int ()'
    |   | `-ImplicitCastExpr 0x14f941a78 <col:9, line:14:9> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x14f941a10 <line:13:9, line:14:9> 'char[7]' lvalue "STRSTR"
    |   |-CallExpr 0x14f941c20 <line:15:3, col:55> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f941b70 <col:3> 'int ()' Function 0x14f941ab8 'dm_exception_store_type_unregister' 'int ()'
    |   | `-UnaryOperator 0x14f941c08 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14f941be8 <col:39> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14f941c80 <line:16:3, col:10>
    |     `-ImplicitCastExpr 0x14f941c68 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x14f941c48 <col:10> 'int' lvalue Var 0x14f9282a0 'r' 'int'
    `-ReturnStmt 0x14f941d10 <line:19:2, col:9>
      `-ImplicitCastExpr 0x14f941cf8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f941cd8 <col:9> 'int' lvalue Var 0x14f9282a0 'r' 'int'
