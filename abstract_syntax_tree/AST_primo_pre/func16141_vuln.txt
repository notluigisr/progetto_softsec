`-FunctionDecl 0x12b00dec8  line:1:1 invalid cdata_finish 'int (int *, int **)'
  |-ParmVarDecl 0x12b00dd28 <col:15, col:24> col:24 invalid cd 'int *'
  |-ParmVarDecl 0x12b00dde0 <col:28, col:37> col:37 invalid error 'int **'
  `-CompoundStmt 0x12b027ce0 <line:2:1, line:20:1>
    |-DeclStmt 0x12b00e098 <line:4:5, col:13>
    | `-VarDecl 0x12b00e030 <col:5, col:9> col:9 used zret 'int'
    |-IfStmt 0x12b027430 <line:6:5, line:9:5>
    | |-BinaryOperator 0x12b00e1b8 <line:6:9, col:32> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12b00e118 <col:9, col:20> '<dependent type>' contains-errors lvalue .comptype
    | | | `-CXXDependentScopeMemberExpr 0x12b00e0d0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->decomp
    | | |   `-RecoveryExpr 0x12b00e0b0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12b00e198 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12b027410 <col:54, line:9:5>
    |   |-CallExpr 0x12b00e3d0 <line:7:9, col:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12b00e330 <col:9> 'int ()' Function 0x12b00e278 'LZXfdi_clear' 'int ()'
    |   | `-UnaryOperator 0x12b00e3b8 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x12b00e370 <col:24, col:28> '<dependent type>' contains-errors lvalue ->decomp
    |   |     `-RecoveryExpr 0x12b00e350 <col:24> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12b027400 <line:8:9>
    |-IfStmt 0x12b027588 <line:11:5, line:12:9>
    | |-UnaryOperator 0x12b027560 <line:11:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12b027548 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12b027500 <col:10, col:13> '<dependent type>' contains-errors lvalue ->opaque
    | |     `-RecoveryExpr 0x12b0274e0 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12b027578 <line:12:9>
    |-BinaryOperator 0x12b027770 <line:14:5, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b0275a8 <col:5> 'int' lvalue Var 0x12b00e030 'zret' 'int'
    | `-CallExpr 0x12b027748 <col:12, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b0276a8 <col:12> 'int ()' Function 0x12b0275f0 'inflateEnd' 'int ()'
    |   `-RecoveryExpr 0x12b027728 <col:24> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x12b027cc0 <line:17:5, line:19:42>
      |-BinaryOperator 0x12b027820 <line:17:9, col:17> 'int' contains-errors '!='
      | |-DeclRefExpr 0x12b0277a8 <col:9> 'int' lvalue Var 0x12b00e030 'zret' 'int'
      | `-RecoveryExpr 0x12b027800 <col:17> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x12b027c78 <line:18:9, line:19:42> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12b027920 <line:18:9> 'int ()' Function 0x12b027868 'g_set_error' 'int ()'
        |-RecoveryExpr 0x12b027940 <col:22> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x12b027be0 <col:29> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x12b027c00 <col:41> '<dependent type>' contains-errors lvalue
        |-StringLiteral 0x12b0279d0 <line:19:22> 'char[4]' lvalue "STR"
        `-CallExpr 0x12b027c38 <col:29, col:41> 'int'
          |-ImplicitCastExpr 0x12b027c20 <col:29> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12b027ad0 <col:29> 'int ()' Function 0x12b027a18 'zError' 'int ()'
          `-ImplicitCastExpr 0x12b027c60 <col:37> 'int' <LValueToRValue>
            `-DeclRefExpr 0x12b027af0 <col:37> 'int' lvalue Var 0x12b00e030 'zret' 'int'
