`-FunctionDecl 0x143128388  line:1:12 invalid ssl_parse_server_psk_hint 'int (int *, unsigned char **, unsigned char *)' static
  |-ParmVarDecl 0x143128128 <col:39, col:60> col:60 invalid ssl 'int *'
  |-ParmVarDecl 0x143128210 <line:2:39, col:55> col:55 used p 'unsigned char **'
  |-ParmVarDecl 0x143128290 <line:3:39, col:54> col:54 used end 'unsigned char *'
  `-CompoundStmt 0x143143010 <line:4:1, line:25:1>
    |-DeclStmt 0x143128500 <line:5:5, col:50>
    | `-VarDecl 0x143128460 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-RecoveryExpr 0x1431284e0 <col:15> '<dependent type>' contains-errors lvalue
    |-UnaryExprOrTypeTraitExpr 0x143128570 <line:6:5, col:13> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x143128550 <col:13> '<dependent type>' contains-errors lvalue
    |-ParenExpr 0x143128600 <line:7:5, col:16> 'void' contains-errors
    | `-CStyleCastExpr 0x1431285d8 <col:6, col:13> 'void' contains-errors <ToVoid>
    |   `-ImplicitCastExpr 0x1431285c0 <col:13> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast
    |     `-RecoveryExpr 0x143128590 <col:13> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x1431428e0 <line:11:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | |-UnaryOperator 0x1431428a8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x143142890 <col:6> 'unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x143142870 <col:6> 'unsigned char **' lvalue ParmVar 0x143128210 'p' 'unsigned char **'
    | `-IntegerLiteral 0x1431428c0 <col:11> 'int' 2
    |-IfStmt 0x143142de0 <line:13:5, line:18:5>
    | |-BinaryOperator 0x143142ad8 <line:13:9, col:22> 'int' contains-errors '>'
    | | |-BinaryOperator 0x143142ab8 <col:9, col:16> '<dependent type>' contains-errors '+'
    | | | |-ParenExpr 0x143142a78 <col:9, col:12> 'unsigned char *' lvalue
    | | | | `-UnaryOperator 0x143142a60 <col:10, col:11> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x143142a48 <col:11> 'unsigned char **' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x143142910 <col:11> 'unsigned char **' lvalue ParmVar 0x143128210 'p' 'unsigned char **'
    | | | `-RecoveryExpr 0x143142a98 <col:16> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1431429b8 <col:22> 'unsigned char *' lvalue ParmVar 0x143128290 'end' 'unsigned char *'
    | `-CompoundStmt 0x143142dc8 <line:14:5, line:18:5>
    |   `-CallExpr 0x143142d68 <line:15:9, line:16:45> 'int'
    |     |-ImplicitCastExpr 0x143142d50 <line:15:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x143142c50 <col:9> 'int ()' Function 0x143142b98 'MBEDTLS_SSL_DEBUG_MSG' 'int ()'
    |     |-IntegerLiteral 0x143142c70 <col:32> 'int' 1
    |     `-ImplicitCastExpr 0x143142d98 <col:35, line:16:43> 'char *' <ArrayToPointerDecay>
    |       `-ParenExpr 0x143142cf8 <line:15:35, line:16:43> 'char[7]' lvalue
    |         `-StringLiteral 0x143142cd0 <line:15:37, line:16:37> 'char[7]' lvalue "STRSTR"
    |-CompoundAssignOperator 0x143142f18 <line:21:5, col:11> 'unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-UnaryOperator 0x143142ee0 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x143142ec8 <col:6> 'unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x143142e00 <col:6> 'unsigned char **' lvalue ParmVar 0x143128210 'p' 'unsigned char **'
    | `-RecoveryExpr 0x143142ef8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x143142f88 <line:22:5, col:11> 'int' contains-errors '='
    | |-DeclRefExpr 0x143142f48 <col:5> 'int' contains-errors lvalue Var 0x143128460 'ret' 'int'
    | `-IntegerLiteral 0x143142f68 <col:11> 'int' 0
    `-ReturnStmt 0x143143000 <line:24:5, col:17>
      `-ImplicitCastExpr 0x143142fe8 <col:11, col:17> 'int' contains-errors <LValueToRValue>
        `-ParenExpr 0x143142fc8 <col:11, col:17> 'int' contains-errors lvalue
          `-DeclRefExpr 0x143142fa8 <col:13> 'int' contains-errors lvalue Var 0x143128460 'ret' 'int'
