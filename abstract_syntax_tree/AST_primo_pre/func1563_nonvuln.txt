`-FunctionDecl 0x1531281f8  line:1:12 invalid ehci_state_horizqh 'int (int *)' static
  |-ParmVarDecl 0x153128128 <col:31, col:42> col:42 invalid q 'int *'
  `-CompoundStmt 0x153141ec0 <line:2:1, line:14:1>
    |-DeclStmt 0x153128348 <line:3:5, col:18>
    | `-VarDecl 0x1531282c0 <col:5, col:17> col:9 used again 'int' cinit
    |   `-IntegerLiteral 0x153128328 <col:17> 'int' 0
    |-IfStmt 0x153141e48 <line:5:5, line:11:5> has_else
    | |-BinaryOperator 0x153128690 <line:5:9, col:57> 'int' contains-errors '!='
    | | |-CallExpr 0x1531285b0 <col:9, col:46> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x1531284c0 <col:9> 'int ()' Function 0x153128408 'ehci_get_fetch_addr' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x153128500 <col:29, col:32> '<dependent type>' contains-errors lvalue ->ehci
    | | | | `-RecoveryExpr 0x1531284e0 <col:29> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x153128568 <col:38, col:41> '<dependent type>' contains-errors lvalue ->async
    | | |   `-RecoveryExpr 0x153128548 <col:38> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x153128648 <col:51, col:57> '<dependent type>' contains-errors lvalue .next
    | |   `-CXXDependentScopeMemberExpr 0x153128600 <col:51, col:54> '<dependent type>' contains-errors lvalue ->qh
    | |     `-RecoveryExpr 0x1531285e0 <col:51> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x153141c70 <col:63, line:9:5>
    | | |-CallExpr 0x153141960 <line:6:9, col:58> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x153128790 <col:9> 'int ()' Function 0x1531286d8 'ehci_set_fetch_addr' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x153141800 <col:29, col:32> '<dependent type>' contains-errors lvalue ->ehci
    | | | | `-RecoveryExpr 0x1531287b0 <col:29> '<dependent type>' contains-errors lvalue
    | | | |-CXXDependentScopeMemberExpr 0x153141868 <col:38, col:41> '<dependent type>' contains-errors lvalue ->async
    | | | | `-RecoveryExpr 0x153141848 <col:38> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x153141918 <col:48, col:54> '<dependent type>' contains-errors lvalue .next
    | | |   `-CXXDependentScopeMemberExpr 0x1531418d0 <col:48, col:51> '<dependent type>' contains-errors lvalue ->qh
    | | |     `-RecoveryExpr 0x1531418b0 <col:48> '<dependent type>' contains-errors lvalue
    | | |-CallExpr 0x153141bd8 <line:7:9, col:57> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x153141a78 <col:9> 'int ()' Function 0x1531419c0 'ehci_set_state' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x153141ab8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->ehci
    | | | | `-RecoveryExpr 0x153141a98 <col:24> '<dependent type>' contains-errors lvalue
    | | | |-CXXDependentScopeMemberExpr 0x153141b20 <col:33, col:36> '<dependent type>' contains-errors lvalue ->async
    | | | | `-RecoveryExpr 0x153141b00 <col:33> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x153141bb8 <col:43> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x153141c50 <line:8:9, col:17> 'int' '='
    | |   |-DeclRefExpr 0x153141c10 <col:9> 'int' lvalue Var 0x1531282c0 'again' 'int'
    | |   `-IntegerLiteral 0x153141c30 <col:17> 'int' 1
    | `-CompoundStmt 0x153141e30 <line:9:12, line:11:5>
    |   `-CallExpr 0x153141df8 <line:10:9, col:53> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x153141c98 <col:9> 'int ()' Function 0x1531419c0 'ehci_set_state' 'int ()'
    |     |-CXXDependentScopeMemberExpr 0x153141cd8 <col:24, col:27> '<dependent type>' contains-errors lvalue ->ehci
    |     | `-RecoveryExpr 0x153141cb8 <col:24> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x153141d40 <col:33, col:36> '<dependent type>' contains-errors lvalue ->async
    |     | `-RecoveryExpr 0x153141d20 <col:33> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x153141dd8 <col:43> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x153141eb0 <line:13:5, col:12>
      `-ImplicitCastExpr 0x153141e98 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x153141e78 <col:12> 'int' lvalue Var 0x1531282c0 'again' 'int'
