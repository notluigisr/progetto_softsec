`-FunctionDecl 0x14780dfd0  line:1:13 invalid fast_csum 'void (int *, const unsigned char *, const unsigned char *, int)' static
  |-ParmVarDecl 0x14780dd28 <col:23, col:32> col:32 invalid csum 'int *'
  |-ParmVarDecl 0x14780ddd8 <line:2:9, col:30> col:30 used optr 'const unsigned char *'
  |-ParmVarDecl 0x14780de58 <line:3:9, col:30> col:30 used nptr 'const unsigned char *'
  |-ParmVarDecl 0x14780ded8 <line:4:9, col:13> col:13 used offset 'int'
  `-CompoundStmt 0x147827f70 <line:5:1, line:19:1>
    |-DeclStmt 0x14780e1b0 <line:6:2, col:20>
    | `-VarDecl 0x14780e148 <col:2, col:19> col:16 used s 'unsigned char[4]'
    |-IfStmt 0x147827a28 <line:8:2, line:16:2> has_else
    | |-BinaryOperator 0x14780e220 <line:8:6, col:15> 'int' '&'
    | | |-ImplicitCastExpr 0x14780e208 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14780e1c8 <col:6> 'int' lvalue ParmVar 0x14780ded8 'offset' 'int'
    | | `-IntegerLiteral 0x14780e1e8 <col:15> 'int' 1
    | |-CompoundStmt 0x147827628 <col:18, line:12:2>
    | | |-BinaryOperator 0x14780e3b8 <line:9:3, col:17> 'unsigned char' '='
    | | | |-ArraySubscriptExpr 0x14780e2c8 <col:3, col:6> 'unsigned char' lvalue
    | | | | |-ImplicitCastExpr 0x14780e2b0 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | | | `-DeclRefExpr 0x14780e240 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | | | `-IntegerLiteral 0x14780e260 <col:5> 'int' 0
    | | | `-BinaryOperator 0x14780e398 <col:10, col:17> 'unsigned char' '='
    | | |   |-ArraySubscriptExpr 0x14780e340 <col:10, col:13> 'unsigned char' lvalue
    | | |   | |-ImplicitCastExpr 0x14780e328 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    | | |   | | `-DeclRefExpr 0x14780e2e8 <col:10> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | |   | `-IntegerLiteral 0x14780e308 <col:12> 'int' 2
    | | |   `-ImplicitCastExpr 0x14780e380 <col:17> 'unsigned char' <IntegralCast>
    | | |     `-IntegerLiteral 0x14780e360 <col:17> 'int' 0
    | | |-BinaryOperator 0x147827508 <line:10:3, col:12> 'unsigned char' '='
    | | | |-ArraySubscriptExpr 0x147827438 <col:3, col:6> 'unsigned char' lvalue
    | | | | |-ImplicitCastExpr 0x147827420 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | | | | | `-DeclRefExpr 0x14780e3d8 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | | | | `-IntegerLiteral 0x147827400 <col:5> 'int' 1
    | | | `-ImplicitCastExpr 0x1478274f0 <col:10, col:12> 'unsigned char' <IntegralCast>
    | | |   `-UnaryOperator 0x1478274d8 <col:10, col:12> 'int' prefix '~' cannot overflow
    | | |     `-ImplicitCastExpr 0x1478274c0 <col:11, col:12> 'int' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x1478274a8 <col:11, col:12> 'unsigned char' <LValueToRValue>
    | | |         `-UnaryOperator 0x147827490 <col:11, col:12> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |           `-ImplicitCastExpr 0x147827478 <col:12> 'const unsigned char *' <LValueToRValue>
    | | |             `-DeclRefExpr 0x147827458 <col:12> 'const unsigned char *' lvalue ParmVar 0x14780ddd8 'optr' 'const unsigned char *'
    | | `-BinaryOperator 0x147827608 <line:11:3, col:11> 'unsigned char' '='
    | |   |-ArraySubscriptExpr 0x147827580 <col:3, col:6> 'unsigned char' lvalue
    | |   | |-ImplicitCastExpr 0x147827568 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    | |   | | `-DeclRefExpr 0x147827528 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    | |   | `-IntegerLiteral 0x147827548 <col:5> 'int' 3
    | |   `-ImplicitCastExpr 0x1478275f0 <col:10, col:11> 'unsigned char' <LValueToRValue>
    | |     `-UnaryOperator 0x1478275d8 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x1478275c0 <col:11> 'const unsigned char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x1478275a0 <col:11> 'const unsigned char *' lvalue ParmVar 0x14780de58 'nptr' 'const unsigned char *'
    | `-CompoundStmt 0x147827a00 <line:12:9, line:16:2>
    |   |-BinaryOperator 0x147827798 <line:13:3, col:17> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x1478276a8 <col:3, col:6> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x147827690 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x147827650 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   | | `-IntegerLiteral 0x147827670 <col:5> 'int' 1
    |   | `-BinaryOperator 0x147827778 <col:10, col:17> 'unsigned char' '='
    |   |   |-ArraySubscriptExpr 0x147827720 <col:10, col:13> 'unsigned char' lvalue
    |   |   | |-ImplicitCastExpr 0x147827708 <col:10> 'unsigned char *' <ArrayToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1478276c8 <col:10> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   |   | `-IntegerLiteral 0x1478276e8 <col:12> 'int' 3
    |   |   `-ImplicitCastExpr 0x147827760 <col:17> 'unsigned char' <IntegralCast>
    |   |     `-IntegerLiteral 0x147827740 <col:17> 'int' 0
    |   |-BinaryOperator 0x1478278e0 <line:14:3, col:12> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x147827810 <col:3, col:6> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x1478277f8 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x1478277b8 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |   | | `-IntegerLiteral 0x1478277d8 <col:5> 'int' 0
    |   | `-ImplicitCastExpr 0x1478278c8 <col:10, col:12> 'unsigned char' <IntegralCast>
    |   |   `-UnaryOperator 0x1478278b0 <col:10, col:12> 'int' prefix '~' cannot overflow
    |   |     `-ImplicitCastExpr 0x147827898 <col:11, col:12> 'int' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x147827880 <col:11, col:12> 'unsigned char' <LValueToRValue>
    |   |         `-UnaryOperator 0x147827868 <col:11, col:12> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   |           `-ImplicitCastExpr 0x147827850 <col:12> 'const unsigned char *' <LValueToRValue>
    |   |             `-DeclRefExpr 0x147827830 <col:12> 'const unsigned char *' lvalue ParmVar 0x14780ddd8 'optr' 'const unsigned char *'
    |   `-BinaryOperator 0x1478279e0 <line:15:3, col:11> 'unsigned char' '='
    |     |-ArraySubscriptExpr 0x147827958 <col:3, col:6> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x147827940 <col:3> 'unsigned char *' <ArrayToPointerDecay>
    |     | | `-DeclRefExpr 0x147827900 <col:3> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
    |     | `-IntegerLiteral 0x147827920 <col:5> 'int' 2
    |     `-ImplicitCastExpr 0x1478279c8 <col:10, col:11> 'unsigned char' <LValueToRValue>
    |       `-UnaryOperator 0x1478279b0 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x147827998 <col:11> 'const unsigned char *' <LValueToRValue>
    |           `-DeclRefExpr 0x147827978 <col:11> 'const unsigned char *' lvalue ParmVar 0x14780de58 'nptr' 'const unsigned char *'
    `-BinaryOperator 0x147827f50 <line:18:2, col:59> '<dependent type>' contains-errors '='
      |-UnaryOperator 0x147827a90 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x147827a78 <col:3> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x147827a58 <col:3> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x147827f28 <col:10, col:59> '<dependent type>' contains-errors
        |-DeclRefExpr 0x147827c00 <col:10> 'int ()' Function 0x147827b48 'csum_fold' 'int ()'
        `-CallExpr 0x147827ef0 <col:20, col:58> '<dependent type>' contains-errors
          |-DeclRefExpr 0x147827d00 <col:20> 'int ()' Function 0x147827c48 'csum_partial' 'int ()'
          |-DeclRefExpr 0x147827d20 <col:33> 'unsigned char[4]' lvalue Var 0x14780e148 's' 'unsigned char[4]'
          |-IntegerLiteral 0x147827d40 <col:36> 'int' 4
          `-UnaryOperator 0x147827ed8 <col:39, col:57> '<dependent type>' contains-errors prefix '~' cannot overflow
            `-CallExpr 0x147827eb0 <col:40, col:57> '<dependent type>' contains-errors
              |-DeclRefExpr 0x147827e40 <col:40> 'int ()' Function 0x147827d88 'csum_unfold' 'int ()'
              `-UnaryOperator 0x147827e98 <col:52, col:53> '<dependent type>' contains-errors prefix '*' cannot overflow
                `-ImplicitCastExpr 0x147827e80 <col:53> '<dependent type>' contains-errors <LValueToRValue>
                  `-RecoveryExpr 0x147827e60 <col:53> '<dependent type>' contains-errors lvalue
