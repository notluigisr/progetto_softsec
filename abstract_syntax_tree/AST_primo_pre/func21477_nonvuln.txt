`-FunctionDecl 0x14000ddc8  line:1:1 invalid xmlFreeElement 'int (int)'
  |-ParmVarDecl 0x14000dcf0 <col:16, col:30> col:30 invalid elem 'int'
  `-CompoundStmt 0x140027670 <col:36, line:14:1>
    |-IfStmt 0x14000df20 <line:2:5, col:23>
    | |-BinaryOperator 0x14000def0 <col:9, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x14000de78 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14000ded0 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14000df10 <col:23>
    |-CallExpr 0x14000e2a8 <line:4:5, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14000e1b8 <col:5> 'int ()' Function 0x14000e100 'xmlFreeDocElementContent' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x14000e1f8 <col:30, col:36> '<dependent type>' contains-errors lvalue ->doc
    | | `-RecoveryExpr 0x14000e1d8 <col:30> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x14000e260 <col:41, col:47> '<dependent type>' contains-errors lvalue ->content
    |   `-RecoveryExpr 0x14000e240 <col:41> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x140027648 <line:13:5, col:17> '<dependent type>' contains-errors
      |-DeclRefExpr 0x140027608 <col:5> 'int ()' Function 0x140027400 'xmlFree' 'int ()'
      `-RecoveryExpr 0x140027628 <col:13> '<dependent type>' contains-errors lvalue
