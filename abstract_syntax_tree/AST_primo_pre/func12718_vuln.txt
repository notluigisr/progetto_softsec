`-FunctionDecl 0x136928bd8  line:1:5 invalid ssl_parse_clienthello_use_srtp_ext 'int (int *, unsigned char *, int, int *)'
  |-ParmVarDecl 0x136928928 <col:40, col:45> col:45 referenced invalid s 'int *'
  |-ParmVarDecl 0x1369289d8 <col:48, col:63> col:63 used d 'unsigned char *'
  |-ParmVarDecl 0x136928a58 <col:66, col:70> col:70 used len 'int'
  |-ParmVarDecl 0x136928ad8 <col:74, col:79> col:79 used al 'int *'
  `-CompoundStmt 0x1369450c8 <line:2:2, line:96:2>
    |-BinaryOperator 0x1369426b0 <line:4:2, col:45> '<dependent type>' contains-errors ','
    | |-BinaryOperator 0x136942640 <col:2, col:42> '<dependent type>' contains-errors '='
    | | |-BinaryOperator 0x136942620 <col:2, col:37> '<dependent type>' contains-errors '*'
    | | | |-CallExpr 0x136928fc0 <col:2, col:34> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x136928e60 <col:2> 'int ()' Function 0x136928da8 'STACK_OF' 'int ()'
    | | | | `-RecoveryExpr 0x136928fa0 <col:11> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x136942600 <col:37> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x136928ef8 <col:42> 'int' 0
    | `-UnaryOperator 0x136942698 <col:44, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x136942680 <col:45> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x136942660 <col:45> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x136942750 <line:5:9, col:15>
    | `-VarDecl 0x1369426e8 <col:9, col:13> col:13 used ct 'int'
    |-DeclStmt 0x1369427e8 <line:6:9, col:20>
    | `-VarDecl 0x136942780 <col:9, col:13> col:13 used mki_len 'int'
    |-DeclStmt 0x136942918 <line:7:2, col:9>
    | |-VarDecl 0x136942818 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x136942898 <col:2, col:8> col:8 used j 'int'
    |-DeclStmt 0x1369429b0 <line:8:2, col:8>
    | `-VarDecl 0x136942948 <col:2, col:6> col:6 used id 'int'
    |-DeclStmt 0x136942a48 <line:9:2, col:9>
    | `-VarDecl 0x1369429e0 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x136942e28 <line:12:9, line:17:17>
    | |-BinaryOperator 0x136942ab8 <line:12:12, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x136942aa0 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x136942a60 <col:12> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    | | `-IntegerLiteral 0x136942a80 <col:18> 'int' 3
    | `-CompoundStmt 0x136942e00 <line:13:3, line:17:17>
    |   |-CallExpr 0x136942c78 <line:14:3, col:89> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x136942bb8 <col:3> 'int ()' Function 0x136942b00 'SSLerr' 'int ()'
    |   | |-RecoveryExpr 0x136942c38 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x136942c58 <col:51> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x136942db0 <line:15:3, col:7> 'int' contains-errors '='
    |   | |-UnaryOperator 0x136942d78 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x136942d60 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x136942ca8 <col:4> 'int *' lvalue ParmVar 0x136928ad8 'al' 'int *'
    |   | `-RecoveryExpr 0x136942d90 <col:7> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x136942df0 <line:16:3, col:10>
    |     `-IntegerLiteral 0x136942dd0 <col:10> 'int' 1
    |-CallExpr 0x136942fd8 <line:20:9, col:18> 'int'
    | |-ImplicitCastExpr 0x136942fc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x136942f28 <col:9> 'int ()' Function 0x136942e70 'n2s' 'int ()'
    | |-ImplicitCastExpr 0x136943008 <col:13> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x136942f48 <col:13> 'unsigned char *' lvalue ParmVar 0x1369289d8 'd' 'unsigned char *'
    | `-ImplicitCastExpr 0x136943020 <col:16> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x136942f68 <col:16> 'int' lvalue Var 0x1369426e8 'ct' 'int'
    |-CompoundAssignOperator 0x136943078 <line:21:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-DeclRefExpr 0x136943038 <col:9> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    | `-IntegerLiteral 0x136943058 <col:16> 'int' 2
    |-IfStmt 0x136943390 <line:24:2, line:29:3>
    | |-BinaryOperator 0x136943100 <line:24:5, col:8> 'int' '%'
    | | |-ImplicitCastExpr 0x1369430e8 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1369430a8 <col:5> 'int' lvalue Var 0x1369426e8 'ct' 'int'
    | | `-IntegerLiteral 0x1369430c8 <col:8> 'int' 2
    | `-CompoundStmt 0x136943368 <line:25:3, line:29:3>
    |   |-CallExpr 0x1369431e0 <line:26:3, col:89> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x136943120 <col:3> 'int ()' Function 0x136942b00 'SSLerr' 'int ()'
    |   | |-RecoveryExpr 0x1369431a0 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1369431c0 <col:51> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x136943318 <line:27:3, col:7> 'int' contains-errors '='
    |   | |-UnaryOperator 0x1369432e0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1369432c8 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x136943210 <col:4> 'int *' lvalue ParmVar 0x136928ad8 'al' 'int *'
    |   | `-RecoveryExpr 0x1369432f8 <col:7> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x136943358 <line:28:3, col:10>
    |     `-IntegerLiteral 0x136943338 <col:10> 'int' 1
    |-IfStmt 0x136943e30 <line:32:2, line:37:3>
    | |-BinaryOperator 0x136943480 <line:32:5, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x136943468 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1369433b0 <col:5> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    | | `-ParenExpr 0x136943448 <col:11, col:18> 'int'
    | |   `-BinaryOperator 0x136943428 <col:12, col:17> 'int' '+'
    | |     |-ImplicitCastExpr 0x136943410 <col:12> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1369433d0 <col:12> 'int' lvalue Var 0x1369426e8 'ct' 'int'
    | |     `-IntegerLiteral 0x1369433f0 <col:17> 'int' 1
    | `-CompoundStmt 0x136943e10 <line:33:3, line:37:3>
    |   |-CallExpr 0x136943560 <line:34:3, col:89> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1369434a0 <col:3> 'int ()' Function 0x136942b00 'SSLerr' 'int ()'
    |   | |-RecoveryExpr 0x136943520 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x136943540 <col:51> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x136943e00 <line:36:3, col:10>
    |     `-IntegerLiteral 0x1369435e0 <col:10> 'int' 1
    |-WhileStmt 0x136944448 <line:42:2, line:56:3>
    | |-ImplicitCastExpr 0x136943fa8 <line:42:8> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x136943f88 <col:8> 'int' lvalue Var 0x1369426e8 'ct' 'int'
    | `-CompoundStmt 0x136944418 <line:43:3, line:56:3>
    |   |-CallExpr 0x136944038 <line:44:3, col:11> 'int'
    |   | |-ImplicitCastExpr 0x136944020 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x136943fc0 <col:3> 'int ()' Function 0x136942e70 'n2s' 'int ()'
    |   | |-ImplicitCastExpr 0x136944068 <col:7> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x136943fe0 <col:7> 'unsigned char *' lvalue ParmVar 0x1369289d8 'd' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x136944080 <col:9> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x136944000 <col:9> 'int' lvalue Var 0x136942948 'id' 'int'
    |   |-CompoundAssignOperator 0x1369440d8 <line:45:3, col:7> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x136944098 <col:3> 'int' lvalue Var 0x1369426e8 'ct' 'int'
    |   | `-IntegerLiteral 0x1369440b8 <col:7> 'int' 2
    |   |-CompoundAssignOperator 0x136944148 <line:46:17, col:22> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x136944108 <col:17> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    |   | `-IntegerLiteral 0x136944128 <col:22> 'int' 2
    |   `-IfStmt 0x1369443e8 <line:48:3, line:55:4> has_else
    |     |-RecoveryExpr 0x136944298 <line:48:6, col:36> '_Bool' contains-errors
    |     |-CompoundStmt 0x1369443b8 <line:49:4, line:51:4>
    |     `-CompoundStmt 0x1369443d0 <line:53:4, line:55:4>
    |       `-NullStmt 0x1369443c8 <line:54:4>
    |-BinaryOperator 0x136944508 <line:59:9, col:20> 'int' '='
    | |-DeclRefExpr 0x136944468 <col:9> 'int' lvalue Var 0x136942780 'mki_len' 'int'
    | `-ImplicitCastExpr 0x1369444f0 <col:19, col:20> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x1369444d8 <col:19, col:20> 'unsigned char' <LValueToRValue>
    |     `-UnaryOperator 0x1369444c0 <col:19, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x1369444a8 <col:20> 'unsigned char *' <LValueToRValue>
    |         `-DeclRefExpr 0x136944488 <col:20> 'unsigned char *' lvalue ParmVar 0x1369289d8 'd' 'unsigned char *'
    |-UnaryOperator 0x136944548 <line:60:9, col:10> 'unsigned char *' postfix '++'
    | `-DeclRefExpr 0x136944528 <col:9> 'unsigned char *' lvalue ParmVar 0x1369289d8 'd' 'unsigned char *'
    |-UnaryOperator 0x136944580 <col:14, col:17> 'int' postfix '--'
    | `-DeclRefExpr 0x136944560 <col:14> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    |-IfStmt 0x1369446e0 <line:62:9, line:67:3>
    | |-BinaryOperator 0x136944608 <line:62:13, col:24> 'int' '!='
    | | |-ImplicitCastExpr 0x1369445d8 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x136944598 <col:13> 'int' lvalue Var 0x136942780 'mki_len' 'int'
    | | `-ImplicitCastExpr 0x1369445f0 <col:24> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1369445b8 <col:24> 'int' lvalue ParmVar 0x136928a58 'len' 'int'
    | `-CompoundStmt 0x1369446c8 <line:63:3, line:67:3>
    |   `-ReturnStmt 0x1369446b8 <line:66:3, col:10>
    |     `-IntegerLiteral 0x136944698 <col:10> 'int' 1
    |-BinaryOperator 0x136944f18 <line:90:2, col:6> 'int' '='
    | |-DeclRefExpr 0x136944ed8 <col:2> 'int' lvalue Var 0x1369429e0 'ret' 'int'
    | `-IntegerLiteral 0x136944ef8 <col:6> 'int' 0
    |-LabelStmt 0x136945060 <line:92:1, col:5> 'done'
    | `-NullStmt 0x136945058 <col:5>
    `-ReturnStmt 0x1369450b8 <line:95:2, col:9>
      `-ImplicitCastExpr 0x1369450a0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136945080 <col:9> 'int' lvalue Var 0x1369429e0 'ret' 'int'
