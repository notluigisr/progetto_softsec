`-FunctionDecl 0x12f80de30  line:1:6 v4l_printk_ioctl 'void (const char *, unsigned int)'
  |-ParmVarDecl 0x12f80dcd8 <col:23, col:35> col:35 used prefix 'const char *'
  |-ParmVarDecl 0x12f80dd58 <col:43, col:56> col:56 used cmd 'unsigned int'
  `-CompoundStmt 0x12e86ae60 <line:2:1, line:33:1>
    |-DeclStmt 0x12f80e048 <line:3:2, col:24>
    | |-VarDecl 0x12f80df48 <col:2, col:14> col:14 used dir 'const char *'
    | `-VarDecl 0x12f80dfc8 <col:2, col:20> col:20 used type 'const char *'
    |-SwitchStmt 0x12f80e3a8 <line:8:2, line:22:2>
    | |-CallExpr 0x12f80e368 <line:8:10, col:23> 'int'
    | | |-ImplicitCastExpr 0x12f80e350 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12f80e2d8 <col:10> 'int ()' Function 0x12f80e220 '_IOC_TYPE' 'int ()'
    | | `-ImplicitCastExpr 0x12f80e390 <col:20> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f80e2f8 <col:20> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
    | `-CompoundStmt 0x12f827f70 <col:26, line:22:2>
    |   |-CaseStmt 0x12f827800 <line:9:2, line:10:10>
    |   | |-ConstantExpr 0x12f80e3e8 <line:9:7> 'int'
    |   | | `-CharacterLiteral 0x12f80e3d0 <col:7> 'int' 100
    |   | `-BinaryOperator 0x12f8278e0 <line:10:3, col:10> 'const char *' '='
    |   |   |-DeclRefExpr 0x12f827828 <col:3> 'const char *' lvalue Var 0x12f80dfc8 'type' 'const char *'
    |   |   `-ImplicitCastExpr 0x12f8278c8 <col:10> 'const char *' <NoOp>
    |   |     `-ImplicitCastExpr 0x12f8278b0 <col:10> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x12f827890 <col:10> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12f827900 <line:11:3>
    |   |-CaseStmt 0x12f827938 <line:12:2, line:16:3>
    |   | |-ConstantExpr 0x12f827920 <line:12:7> 'int'
    |   | | `-CharacterLiteral 0x12f827908 <col:7> 'int' 86
    |   | `-IfStmt 0x12f827cb8 <line:13:3, line:16:3>
    |   |   |-BinaryOperator 0x12f827be0 <line:13:7, col:23> 'int' contains-errors '>='
    |   |   | |-CallExpr 0x12f827b80 <col:7, col:18> 'int'
    |   |   | | |-ImplicitCastExpr 0x12f827b68 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | `-DeclRefExpr 0x12f827a40 <col:7> 'int ()' Function 0x12f827988 '_IOC_NR' 'int ()'
    |   |   | | `-ImplicitCastExpr 0x12f827ba8 <col:15> 'unsigned int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x12f827a60 <col:15> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
    |   |   | `-RecoveryExpr 0x12f827bc0 <col:23> '<dependent type>' contains-errors lvalue
    |   |   `-CompoundStmt 0x12f827c98 <col:36, line:16:3>
    |   |     |-BinaryOperator 0x12f827c70 <line:14:4, col:11> 'const char *' '='
    |   |     | |-DeclRefExpr 0x12f827c00 <col:4> 'const char *' lvalue Var 0x12f80dfc8 'type' 'const char *'
    |   |     | `-ImplicitCastExpr 0x12f827c58 <col:11> 'const char *' <NoOp>
    |   |     |   `-ImplicitCastExpr 0x12f827c40 <col:11> 'char *' <ArrayToPointerDecay>
    |   |     |     `-StringLiteral 0x12f827c20 <col:11> 'char[4]' lvalue "STR"
    |   |     `-BreakStmt 0x12f827c90 <line:15:4>
    |   |-ReturnStmt 0x12f827ea8 <line:18:3>
    |   |-DefaultStmt 0x12f827f48 <line:19:2, line:20:10>
    |   | `-BinaryOperator 0x12f827f28 <col:3, col:10> 'const char *' '='
    |   |   |-DeclRefExpr 0x12f827eb8 <col:3> 'const char *' lvalue Var 0x12f80dfc8 'type' 'const char *'
    |   |   `-ImplicitCastExpr 0x12f827f10 <col:10> 'const char *' <NoOp>
    |   |     `-ImplicitCastExpr 0x12f827ef8 <col:10> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x12f827ed8 <col:10> 'char[4]' lvalue "STR"
    |   `-BreakStmt 0x12f827f68 <line:21:3>
    |-SwitchStmt 0x12f828128 <line:24:2, line:30:2>
    | |-CallExpr 0x12f8280e8 <line:24:10, col:22> 'int'
    | | |-ImplicitCastExpr 0x12f8280d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12f828090 <col:10> 'int ()' Function 0x12f827fd8 '_IOC_DIR' 'int ()'
    | | `-ImplicitCastExpr 0x12f828110 <col:19> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f8280b0 <col:19> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
    | `-CompoundStmt 0x12f828560 <col:25, line:30:2>
    |   |-BinaryOperator 0x12f8281f8 <line:25:31, col:37> 'const char *' '='
    |   | |-DeclRefExpr 0x12f828188 <col:31> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
    |   | `-ImplicitCastExpr 0x12f8281e0 <col:37> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x12f8281c8 <col:37> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x12f8281a8 <col:37> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12f828218 <col:44>
    |   |-BinaryOperator 0x12f8282a8 <line:26:31, col:37> 'const char *' '='
    |   | |-DeclRefExpr 0x12f828238 <col:31> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
    |   | `-ImplicitCastExpr 0x12f828290 <col:37> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x12f828278 <col:37> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x12f828258 <col:37> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12f8282c8 <col:44>
    |   |-BinaryOperator 0x12f828398 <line:27:31, col:37> 'const char *' '='
    |   | |-DeclRefExpr 0x12f828328 <col:31> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
    |   | `-ImplicitCastExpr 0x12f828380 <col:37> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x12f828368 <col:37> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x12f828348 <col:37> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12f8283b8 <col:44>
    |   |-BinaryOperator 0x12f828480 <line:28:31, col:37> 'const char *' '='
    |   | |-DeclRefExpr 0x12f828410 <col:31> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
    |   | `-ImplicitCastExpr 0x12f828468 <col:37> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x12f828450 <col:37> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x12f828430 <col:37> 'char[4]' lvalue "STR"
    |   |-BreakStmt 0x12f8284a0 <col:44>
    |   |-DefaultStmt 0x12f828538 <line:29:2, col:37>
    |   | `-BinaryOperator 0x12f828518 <col:31, col:37> 'const char *' '='
    |   |   |-DeclRefExpr 0x12f8284a8 <col:31> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
    |   |   `-ImplicitCastExpr 0x12f828500 <col:37> 'const char *' <NoOp>
    |   |     `-ImplicitCastExpr 0x12f8284e8 <col:37> 'char *' <ArrayToPointerDecay>
    |   |       `-StringLiteral 0x12f8284c8 <col:37> 'char[4]' lvalue "STR"
    |   `-BreakStmt 0x12f828558 <col:44>
    `-CallExpr 0x12f8287a8 <line:31:2, line:32:47> 'int'
      |-ImplicitCastExpr 0x12f828790 <line:31:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x12f8285c0 <col:2> 'int ()' Function 0x12f827d00 'pr_cont' 'int ()'
      |-ImplicitCastExpr 0x12e86ae00 <col:10> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x12f8285e0 <col:10> 'char[4]' lvalue "STR"
      |-ImplicitCastExpr 0x12e86ae18 <line:32:3> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x12f828600 <col:3> 'const char *' lvalue Var 0x12f80dfc8 'type' 'const char *'
      |-CallExpr 0x12f828678 <col:9, col:22> 'int'
      | |-ImplicitCastExpr 0x12f828660 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x12f828620 <col:9> 'int ()' Function 0x12f80e220 '_IOC_TYPE' 'int ()'
      | `-ImplicitCastExpr 0x12f8286a0 <col:19> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x12f828640 <col:19> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
      |-ImplicitCastExpr 0x12e86ae30 <col:25> 'const char *' <LValueToRValue>
      | `-DeclRefExpr 0x12f8286b8 <col:25> 'const char *' lvalue Var 0x12f80df48 'dir' 'const char *'
      |-CallExpr 0x12f828730 <col:30, col:41> 'int'
      | |-ImplicitCastExpr 0x12f828718 <col:30> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x12f8286d8 <col:30> 'int ()' Function 0x12f827988 '_IOC_NR' 'int ()'
      | `-ImplicitCastExpr 0x12f828758 <col:38> 'unsigned int' <LValueToRValue>
      |   `-DeclRefExpr 0x12f8286f8 <col:38> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
      `-ImplicitCastExpr 0x12e86ae48 <col:44> 'unsigned int' <LValueToRValue>
        `-DeclRefExpr 0x12f828770 <col:44> 'unsigned int' lvalue ParmVar 0x12f80dd58 'cmd' 'unsigned int'
