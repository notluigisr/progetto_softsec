`-FunctionDecl 0x1468f9238  line:1:12 invalid vp8_lossy_decode_frame 'int (int *, int *, int *, int *, unsigned int)' static
  |-ParmVarDecl 0x1468f8f28 <col:35, col:51> col:51 referenced invalid avctx 'int *'
  |-ParmVarDecl 0x1468f8fa8 <col:58, col:67> col:67 invalid p 'int *'
  |-ParmVarDecl 0x1468f9028 <line:2:35, col:40> col:40 used got_frame 'int *'
  |-ParmVarDecl 0x1468f90a8 <col:51, col:60> col:60 invalid data_start 'int *'
  |-ParmVarDecl 0x1468f9128 <line:3:35, col:48> col:48 used data_size 'unsigned int'
  `-CompoundStmt 0x14501e048 <line:4:1, line:39:1>
    |-DeclStmt 0x1468f9408 <line:7:5, col:12>
    | `-VarDecl 0x1468f93a0 <col:5, col:9> col:9 used ret 'int'
    |-IfStmt 0x145813750 <line:9:5, line:14:5>
    | |-UnaryOperator 0x1468f9530 <line:9:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1468f9518 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x1468f94d0 <col:10, col:13> '<dependent type>' contains-errors lvalue ->initialized
    | |     `-RecoveryExpr 0x1468f94b0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145813730 <col:26, line:14:5>
    |   |-CallExpr 0x1458134f8 <line:10:9, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1458134b8 <col:9> 'int ()' Function 0x145813400 'ff_vp8_decode_init' 'int ()'
    |   | `-RecoveryExpr 0x1458134d8 <col:28> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x145813710 <line:12:9, line:13:30>
    |     |-CXXDependentScopeMemberExpr 0x1458135c0 <line:12:13, col:16> '<dependent type>' contains-errors lvalue ->has_alpha
    |     | `-RecoveryExpr 0x1458135a0 <col:13> '<dependent type>' contains-errors lvalue
    |     `-BinaryOperator 0x1458136f0 <line:13:13, col:30> '<dependent type>' contains-errors '='
    |       |-CXXDependentScopeMemberExpr 0x145813650 <col:13, col:20> '<dependent type>' contains-errors lvalue ->pix_fmt
    |       | `-RecoveryExpr 0x145813628 <col:13> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x145813608 <col:13> 'int *' lvalue ParmVar 0x1468f8f28 'avctx' 'int *'
    |       `-RecoveryExpr 0x1458136d0 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145813ab8 <line:17:5, line:20:5>
    | |-BinaryOperator 0x145813808 <line:17:9, col:21> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x145813790 <col:9> 'unsigned int' lvalue ParmVar 0x1468f9128 'data_size' 'unsigned int'
    | | `-RecoveryExpr 0x1458137e8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145813a98 <col:30, line:20:5>
    |   |-CallExpr 0x145813a18 <line:18:9, col:42> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x145813908 <col:9> 'int ()' Function 0x145813850 'av_log' 'int ()'
    |   | |-RecoveryExpr 0x145813928 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x1458139f8 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x1458139a0 <col:37> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x145813a88 <line:19:9, col:16>
    |     `-RecoveryExpr 0x145813a68 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x145813c68 <line:22:5, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145813bb8 <col:5> 'int ()' Function 0x145813b00 'av_init_packet' 'int ()'
    | `-UnaryOperator 0x145813c50 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x145813c30 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145813f10 <line:27:5, line:28:16>
    | |-BinaryOperator 0x145813ea8 <line:27:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x145813e90 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x145813e50 <col:9> 'int' lvalue Var 0x1468f93a0 'ret' 'int'
    | | `-IntegerLiteral 0x145813e70 <col:15> 'int' 0
    | `-ReturnStmt 0x145813f00 <line:28:9, col:16>
    |   `-ImplicitCastExpr 0x145813ee8 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x145813ec8 <col:16> 'int' lvalue Var 0x1468f93a0 'ret' 'int'
    |-CallExpr 0x145814120 <line:30:5, col:58> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x145814010 <col:5> 'int ()' Function 0x145813f58 'update_canvas_size' 'int ()'
    | |-RecoveryExpr 0x145814030 <col:24> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x145814070 <col:31, col:38> '<dependent type>' contains-errors lvalue ->width
    | | `-RecoveryExpr 0x145814050 <col:31> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x1458140d8 <col:45, col:52> '<dependent type>' contains-errors lvalue ->height
    |   `-RecoveryExpr 0x1458140b8 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1458143d0 <line:32:5, line:37:5>
    | |-RecoveryExpr 0x145814158 <line:32:9, col:12> '_Bool' contains-errors
    | `-CompoundStmt 0x1458143b8 <col:23, line:37:5>
    |   `-IfStmt 0x145814398 <line:35:9, line:36:20>
    |     |-BinaryOperator 0x145814330 <line:35:13, col:19> 'int' '<'
    |     | |-ImplicitCastExpr 0x145814318 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1458142d8 <col:13> 'int' lvalue Var 0x1468f93a0 'ret' 'int'
    |     | `-IntegerLiteral 0x1458142f8 <col:19> 'int' 0
    |     `-ReturnStmt 0x145814388 <line:36:13, col:20>
    |       `-ImplicitCastExpr 0x145814370 <col:20> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x145814350 <col:20> 'int' lvalue Var 0x1468f93a0 'ret' 'int'
    `-ReturnStmt 0x14501e038 <line:38:5, col:12>
      `-ImplicitCastExpr 0x14501e020 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14501e000 <col:12> 'int' lvalue Var 0x1468f93a0 'ret' 'int'
