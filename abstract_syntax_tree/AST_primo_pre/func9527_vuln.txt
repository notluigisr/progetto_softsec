`-FunctionDecl 0x14d80ddf8  line:1:1 invalid z2restore 'int (int *)'
  |-ParmVarDecl 0x14d80dd28 <col:11, col:20> col:20 invalid i_ctx_p 'int *'
  `-CompoundStmt 0x14d8289d8 <line:2:1, line:24:1>
    |-DeclStmt 0x14d80e1a8 <line:5:5, col:51>
    | `-VarDecl 0x14d80ded8 <col:5, col:50> col:9 used code 'int' cinit
    |   `-CallExpr 0x14d80e178 <col:16, col:50> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d80e0a0 <col:16> 'int ()' Function 0x14d80dfe8 'restore_check_save' 'int ()'
    |     |-RecoveryExpr 0x14d80e0c0 <col:35> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x14d80e160 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x14d80e140 <col:45> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d80e280 <line:7:5, col:26>
    | |-BinaryOperator 0x14d80e218 <col:9, col:16> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14d80e200 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14d80e1c0 <col:9> 'int' contains-errors lvalue Var 0x14d80ded8 'code' 'int'
    | | `-IntegerLiteral 0x14d80e1e0 <col:16> 'int' 0
    | `-ReturnStmt 0x14d80e270 <col:19, col:26>
    |   `-ImplicitCastExpr 0x14d80e258 <col:26> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x14d80e238 <col:26> 'int' contains-errors lvalue Var 0x14d80ded8 'code' 'int'
    |-WhileStmt 0x14d828468 <line:9:5, line:13:5>
    | |-CallExpr 0x14d827e70 <line:9:12, col:48> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d80e380 <col:12> 'int ()' Function 0x14d80e2c8 'gs_gstate_saved' 'int ()'
    | | `-CallExpr 0x14d827e48 <col:28, col:47> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14d80e3a0 <col:28> 'int ()' Function 0x14d80e2c8 'gs_gstate_saved' 'int ()'
    | |   `-RecoveryExpr 0x14d827e28 <col:44> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d828448 <col:51, line:13:5>
    |   |-IfStmt 0x14d8282a0 <line:10:9, line:11:47>
    |   | |-CallExpr 0x14d8280a8 <line:10:13, col:58> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x14d827f78 <col:13> 'int ()' Function 0x14d827ec0 'restore_page_device' 'int ()'
    |   | | |-RecoveryExpr 0x14d828040 <col:33> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x14d828080 <col:38, col:57> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14d827fb0 <col:38> 'int ()' Function 0x14d80e2c8 'gs_gstate_saved' 'int ()'
    |   | |   `-RecoveryExpr 0x14d828060 <col:54> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x14d828290 <line:11:13, col:47>
    |   |   `-CallExpr 0x14d828260 <col:20, col:47> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x14d8281b8 <col:20> 'int ()' Function 0x14d828100 'push_callout' 'int ()'
    |   |     |-RecoveryExpr 0x14d8281d8 <col:33> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x14d828240 <col:42> 'char[4]' lvalue "STR"
    |   `-CallExpr 0x14d828420 <line:12:9, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d8283a0 <col:9> 'int ()' Function 0x14d8282e8 'gs_grestore' 'int ()'
    |     `-RecoveryExpr 0x14d828400 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d828688 <line:14:5, line:15:43>
    | |-CallExpr 0x14d8285b8 <line:14:9, col:54> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d828488 <col:9> 'int ()' Function 0x14d827ec0 'restore_page_device' 'int ()'
    | | |-RecoveryExpr 0x14d828550 <col:29> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14d828590 <col:34, col:53> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14d8284c0 <col:34> 'int ()' Function 0x14d80e2c8 'gs_gstate_saved' 'int ()'
    | |   `-RecoveryExpr 0x14d828570 <col:50> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14d828678 <line:15:9, col:43>
    |   `-CallExpr 0x14d828648 <col:16, col:43> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d8285e8 <col:16> 'int ()' Function 0x14d828100 'push_callout' 'int ()'
    |     |-RecoveryExpr 0x14d828608 <col:29> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x14d828628 <col:38> 'char[4]' lvalue "STR"
    |-IfStmt 0x14d828970 <line:19:5, line:22:5>
    | |-BinaryOperator 0x14d828840 <line:19:9, col:16> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x14d828828 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14d8287e8 <col:9> 'int' contains-errors lvalue Var 0x14d80ded8 'code' 'int'
    | | `-IntegerLiteral 0x14d828808 <col:16> 'int' 0
    | `-CompoundStmt 0x14d828960 <col:19, line:22:5>
    `-ReturnStmt 0x14d8289c8 <line:23:5, col:12>
      `-ImplicitCastExpr 0x14d8289b0 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x14d828990 <col:12> 'int' contains-errors lvalue Var 0x14d80ded8 'code' 'int'
