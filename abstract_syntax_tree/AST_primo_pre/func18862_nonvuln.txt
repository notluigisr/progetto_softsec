`-FunctionDecl 0x13c856480  line:1:13 invalid jp2_pclr_dumpdata 'void (int *, int *)' static
  |-ParmVarDecl 0x13c856328 <col:31, col:42> col:42 invalid box 'int *'
  |-ParmVarDecl 0x13c8563a8 <col:47, col:53> col:53 invalid out 'int *'
  `-CompoundStmt 0x13c870070 <line:2:1, line:13:1>
    |-DeclStmt 0x13c856698 <line:4:2, col:16>
    | `-VarDecl 0x13c856630 <col:2, col:15> col:15 used i 'unsigned int'
    |-DeclStmt 0x13c856730 <line:5:2, col:7>
    | `-VarDecl 0x13c8566c8 <col:2, col:6> col:6 used j 'int'
    `-ForStmt 0x13c870038 <line:8:2, line:12:2>
      |-BinaryOperator 0x13c86fab8 <line:8:7, col:11> 'unsigned int' '='
      | |-DeclRefExpr 0x13c86fa60 <col:7> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'
      | `-ImplicitCastExpr 0x13c86faa0 <col:11> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x13c86fa80 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x13c86fbe0 <col:14, col:24> 'int' contains-errors '<'
      | |-DeclRefExpr 0x13c86fad8 <col:14> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'
      | `-CXXDependentScopeMemberExpr 0x13c86fb98 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numlutents
      |   `-RecoveryExpr 0x13c86fb78 <col:18> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x13c86fc20 <col:36, col:38> 'unsigned int' prefix '++'
      | `-DeclRefExpr 0x13c86fc00 <col:38> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'
      `-CompoundStmt 0x13c870020 <col:41, line:12:2>
        `-ForStmt 0x13c86ffe8 <line:9:3, line:11:3>
          |-BinaryOperator 0x13c86fc78 <line:9:8, col:12> 'int' '='
          | |-DeclRefExpr 0x13c86fc38 <col:8> 'int' lvalue Var 0x13c8566c8 'j' 'int'
          | `-IntegerLiteral 0x13c86fc58 <col:12> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x13c86fda0 <col:15, col:25> 'int' contains-errors '<'
          | |-DeclRefExpr 0x13c86fc98 <col:15> 'int' lvalue Var 0x13c8566c8 'j' 'int'
          | `-CXXDependentScopeMemberExpr 0x13c86fd58 <col:19, col:25> '<dependent type>' contains-errors lvalue ->numchans
          |   `-RecoveryExpr 0x13c86fd38 <col:19> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x13c86fde0 <col:35, col:37> 'int' prefix '++'
          | `-DeclRefExpr 0x13c86fdc0 <col:37> 'int' lvalue Var 0x13c8566c8 'j' 'int'
          `-CompoundStmt 0x13c86ffd8 <col:40, line:11:3>
