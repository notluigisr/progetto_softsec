`-FunctionDecl 0x128941288  line:1:1 data_sock_ioctl_bound 'int (struct sock *, unsigned int, int)'
  |-ParmVarDecl 0x128928e48 <col:23, col:36> col:36 used sk 'struct sock *'
  |-ParmVarDecl 0x128928ec8 <col:40, col:53> col:53 used cmd 'unsigned int'
  |-ParmVarDecl 0x128928f40 <col:58, col:63> col:63 __user 'int'
  `-CompoundStmt 0x128945360 <line:2:1, line:69:1>
    |-DeclStmt 0x128941508 <line:3:2, col:26>
    | |-RecordDecl 0x128941390 <col:2, col:9> col:9 struct mISDN_ctrl_req
    | `-VarDecl 0x128941488 <col:2, col:24> col:24 invalid cq 'struct mISDN_ctrl_req'
    |-DeclStmt 0x128941778 <line:4:2, col:29>
    | |-VarDecl 0x128941538 <col:2, col:15> col:8 used err 'int' cinit
    | | `-UnaryOperator 0x128941638 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x128941620 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x128941600 <col:15> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x1289416f8 <col:2, col:28> col:23 used val 'int[2]'
    |-DeclStmt 0x128941a10 <line:5:2, col:35>
    | |-RecordDecl 0x128941790 <col:2, col:9> col:9 struct mISDNchannel
    | |-VarDecl 0x1289418f8 <col:2, col:23> col:23 used bchan 'struct mISDNchannel *'
    | `-VarDecl 0x128941988 <col:2, col:31> col:31 used next 'struct mISDNchannel *'
    |-CallExpr 0x128941bc8 <line:7:2, col:14> 'int'
    | |-ImplicitCastExpr 0x128941bb0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128941b40 <col:2> 'int ()' Function 0x128941a88 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x128941bf0 <col:12> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x128941b60 <col:12> 'struct sock *' lvalue ParmVar 0x128928e48 'sk' 'struct sock *'
    |-IfStmt 0x128941f58 <line:8:2, line:11:2>
    | |-UnaryOperator 0x128941dc0 <line:8:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x128941da8 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x128941d80 <col:7, col:17> '<dependent type>' contains-errors lvalue
    | |     `-CallExpr 0x128941d40 <col:7, col:14> 'int'
    | |       |-ImplicitCastExpr 0x128941d28 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x128941ce8 <col:7> 'int ()' Function 0x128941c30 '_pms' 'int ()'
    | |       `-ImplicitCastExpr 0x128941d68 <col:12> 'struct sock *' <LValueToRValue>
    | |         `-DeclRefExpr 0x128941d08 <col:12> 'struct sock *' lvalue ParmVar 0x128928e48 'sk' 'struct sock *'
    | `-CompoundStmt 0x128941f38 <col:22, line:11:2>
    |   |-BinaryOperator 0x128941eb0 <line:9:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x128941dd8 <col:3> 'int' contains-errors lvalue Var 0x128941538 'err' 'int'
    |   | `-UnaryOperator 0x128941e98 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x128941e80 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x128941e60 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x128941f20 <line:10:3, col:8> 'done' 0x128941ed0
    |-SwitchStmt 0x128941fb0 <line:12:2, line:65:2>
    | |-ImplicitCastExpr 0x128941f98 <line:12:10> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x128941f78 <col:10> 'unsigned int' lvalue ParmVar 0x128928ec8 'cmd' 'unsigned int'
    | `-CompoundStmt 0x128945100 <col:15, line:65:2>
    |   |-IfStmt 0x128943758 <line:14:3, line:17:3>
    |   | |-CallExpr 0x128943600 <line:14:7, col:40> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1289420d0 <col:7> 'int ()' Function 0x128942018 'copy_from_user' 'int ()'
    |   | | |-UnaryOperator 0x128942110 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | `-RecoveryExpr 0x1289420f0 <col:23> '<dependent type>' contains-errors lvalue
    |   | | |-RecoveryExpr 0x1289421d8 <col:27> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryExprOrTypeTraitExpr 0x128942180 <col:30, col:39> 'unsigned long' contains-errors sizeof
    |   | |   `-ParenExpr 0x128942160 <col:36, col:39> '<dependent type>' contains-errors lvalue
    |   | |     `-RecoveryExpr 0x128942140 <col:37> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x128943738 <col:43, line:17:3>
    |   |   |-BinaryOperator 0x128943710 <line:15:4, col:11> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x128943638 <col:4> 'int' contains-errors lvalue Var 0x128941538 'err' 'int'
    |   |   | `-UnaryOperator 0x1289436f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x1289436e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-RecoveryExpr 0x1289436c0 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-BreakStmt 0x128943730 <line:16:4>
    |   |-IfStmt 0x1289441d0 <line:18:3, line:28:4> has_else
    |   | |-RecoveryExpr 0x128943858 <line:18:7, col:45> '_Bool' contains-errors
    |   | |-CompoundStmt 0x128943ee0 <col:61, line:27:3>
    |   | | |-CallExpr 0x128943c88 <line:19:4, line:20:39> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x128943958 <line:19:4> 'int ()' Function 0x1289438a0 'list_for_each_entry_safe' 'int ()'
    |   | | | |-DeclRefExpr 0x128943978 <col:29> 'struct mISDNchannel *' lvalue Var 0x1289418f8 'bchan' 'struct mISDNchannel *'
    |   | | | |-DeclRefExpr 0x128943998 <col:36> 'struct mISDNchannel *' lvalue Var 0x128941988 'next' 'struct mISDNchannel *'
    |   | | | |-UnaryOperator 0x128943c50 <line:20:8, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | `-CXXDependentScopeMemberExpr 0x128943c08 <col:9, col:24> '<dependent type>' contains-errors lvalue ->bchannels
    |   | | | |   `-RecoveryExpr 0x128943be0 <col:9, col:19> '<dependent type>' contains-errors lvalue
    |   | | | |     `-CallExpr 0x128943ba0 <col:9, col:16> 'int'
    |   | | | |       |-ImplicitCastExpr 0x128943b88 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | | |       | `-DeclRefExpr 0x1289439b8 <col:9> 'int ()' Function 0x128941c30 '_pms' 'int ()'
    |   | | | |       `-ImplicitCastExpr 0x128943bc8 <col:14> 'struct sock *' <LValueToRValue>
    |   | | | |         `-DeclRefExpr 0x1289439d8 <col:14> 'struct sock *' lvalue ParmVar 0x128928e48 'sk' 'struct sock *'
    |   | | | `-RecoveryExpr 0x128943c68 <col:35> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x128943ec8 <col:41, line:26:4>
    |   | |   `-IfStmt 0x128943ea8 <line:21:5, line:25:5>
    |   | |     |-BinaryOperator 0x128943d90 <line:21:9, col:25> 'int' contains-errors '=='
    |   | |     | |-RecoveryExpr 0x128943d00 <col:9, col:16> '<dependent type>' contains-errors lvalue
    |   | |     | | `-DeclRefExpr 0x128943cc8 <col:9> 'struct mISDNchannel *' lvalue Var 0x1289418f8 'bchan' 'struct mISDNchannel *'
    |   | |     | `-CXXDependentScopeMemberExpr 0x128943d48 <col:22, col:25> '<dependent type>' contains-errors lvalue .channel
    |   | |     |   `-RecoveryExpr 0x128943d28 <col:22> '<dependent type>' contains-errors lvalue
    |   | |     `-CompoundStmt 0x128943e90 <col:34, line:25:5>
    |   | |       `-BreakStmt 0x128943e88 <line:24:6>
    |   | `-NullStmt 0x1289441c8 <line:28:4>
    |   |-IfStmt 0x128944240 <line:30:3, line:31:4>
    |   | |-ImplicitCastExpr 0x128944220 <line:30:7> 'int' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x128944200 <col:7> 'int' contains-errors lvalue Var 0x128941538 'err' 'int'
    |   | `-BreakStmt 0x128944238 <line:31:4>
    |   |-BreakStmt 0x128944438 <line:34:3>
    |   |-IfStmt 0x128944500 <line:36:3, line:39:3>
    |   | |-RecoveryExpr 0x1289444a0 <line:36:7, col:26> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1289444e8 <col:42, line:39:3>
    |   |   `-BreakStmt 0x1289444e0 <line:38:4>
    |   |-BinaryOperator 0x128944618 <line:40:3, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x1289445a8 <col:3, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x128944590 <col:3> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x128944520 <col:3> 'int[2]' lvalue Var 0x1289416f8 'val' 'int[2]'
    |   | | `-IntegerLiteral 0x128944540 <col:7> 'int' 0
    |   | `-ImplicitCastExpr 0x128944600 <col:12> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x1289445e8 <col:12> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1289445c8 <col:12> 'unsigned int' lvalue ParmVar 0x128928ec8 'cmd' 'unsigned int'
    |   |-IfStmt 0x128944810 <line:41:3, line:44:3>
    |   | |-RecoveryExpr 0x1289447b0 <line:41:7, col:39> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1289447f8 <col:42, line:44:3>
    |   |   `-BreakStmt 0x1289447f0 <line:43:4>
    |   |-BreakStmt 0x128944ac8 <line:47:3>
    |   |-IfStmt 0x128944bf0 <line:49:3, line:53:3>
    |   | |-RecoveryExpr 0x128944b90 <line:49:7, line:50:29> '_Bool' contains-errors
    |   | `-CompoundStmt 0x128944bd8 <col:45, line:53:3>
    |   |   `-BreakStmt 0x128944bd0 <line:52:4>
    |   |-BinaryOperator 0x128944cd8 <line:54:3, col:12> 'int' '='
    |   | |-ArraySubscriptExpr 0x128944c68 <col:3, col:8> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x128944c50 <col:3> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x128944c10 <col:3> 'int[2]' lvalue Var 0x1289416f8 'val' 'int[2]'
    |   | | `-IntegerLiteral 0x128944c30 <col:7> 'int' 0
    |   | `-ImplicitCastExpr 0x128944cc0 <col:12> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x128944ca8 <col:12> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x128944c88 <col:12> 'unsigned int' lvalue ParmVar 0x128928ec8 'cmd' 'unsigned int'
    |   |-IfStmt 0x128944df0 <line:55:3, line:58:3>
    |   | |-RecoveryExpr 0x128944d90 <line:55:7, col:39> '_Bool' contains-errors
    |   | `-CompoundStmt 0x128944dd8 <col:42, line:58:3>
    |   |   `-BreakStmt 0x128944dd0 <line:57:4>
    |   |-BreakStmt 0x1289450a8 <line:61:3>
    |   |-DefaultStmt 0x1289450d8 <line:62:2, col:9>
    |   | `-NullStmt 0x1289450d0 <col:9>
    |   `-BreakStmt 0x1289450f8 <line:64:3>
    |-LabelStmt 0x1289452f8 <line:66:1, line:67:17> 'done'
    | `-CallExpr 0x1289452b8 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x1289452a0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x128945260 <col:2> 'int ()' Function 0x1289451a8 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x1289452e0 <col:15> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x128945280 <col:15> 'struct sock *' lvalue ParmVar 0x128928e48 'sk' 'struct sock *'
    `-ReturnStmt 0x128945350 <line:68:2, col:9>
      `-ImplicitCastExpr 0x128945338 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x128945318 <col:9> 'int' contains-errors lvalue Var 0x128941538 'err' 'int'
