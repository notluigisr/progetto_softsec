`-FunctionDecl 0x150140ab8  line:1:24 cdev_get 'struct kobject *(struct cdev *)' static
  |-ParmVarDecl 0x1501286e8 <col:33, col:46> col:46 used p 'struct cdev *'
  `-CompoundStmt 0x1501415f0 <line:2:1, line:12:1>
    |-DeclStmt 0x150140df8 <line:3:2, col:33>
    | |-RecordDecl 0x150140bb0 <col:2, col:9> col:9 struct module
    | `-VarDecl 0x150140d18 <col:2, col:28> col:17 used owner 'struct module *' cinit
    |   `-RecoveryExpr 0x150140db8 <col:25, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x150140d80 <col:25> 'struct cdev *' lvalue ParmVar 0x1501286e8 'p' 'struct cdev *'
    |-DeclStmt 0x150140f00 <line:4:2, col:22>
    | `-VarDecl 0x150140e98 <col:2, col:18> col:18 used kobj 'struct kobject *'
    |-IfStmt 0x1501411c0 <line:6:2, line:7:10>
    | |-BinaryOperator 0x150141158 <line:6:6, col:36> 'int' contains-errors '&&'
    | | |-ImplicitCastExpr 0x150141140 <col:6> 'struct module *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x150140f18 <col:6> 'struct module *' contains-errors lvalue Var 0x150140d18 'owner' 'struct module *'
    | | `-UnaryOperator 0x150141128 <col:15, col:36> 'int' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x1501410e8 <col:16, col:36> 'int' contains-errors
    | |     |-ImplicitCastExpr 0x1501410d0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x150141060 <col:16> 'int ()' Function 0x150140fa8 'try_module_get' 'int ()'
    | |     `-ImplicitCastExpr 0x150141110 <col:31> 'struct module *' contains-errors <LValueToRValue>
    | |       `-DeclRefExpr 0x150141080 <col:31> 'struct module *' contains-errors lvalue Var 0x150140d18 'owner' 'struct module *'
    | `-ReturnStmt 0x1501411b0 <line:7:3, col:10>
    |   `-RecoveryExpr 0x150141190 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1501413a0 <line:8:2, col:29> 'struct kobject *' contains-errors '='
    | |-DeclRefExpr 0x1501411e0 <col:2> 'struct kobject *' lvalue Var 0x150140e98 'kobj' 'struct kobject *'
    | `-CallExpr 0x150141378 <col:9, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1501412e0 <col:9> 'int ()' Function 0x150141228 'kobject_get' 'int ()'
    |   `-UnaryOperator 0x150141360 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x150141338 <col:22, col:25> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x150141300 <col:22> 'struct cdev *' lvalue ParmVar 0x1501286e8 'p' 'struct cdev *'
    |-IfStmt 0x150141588 <line:9:2, line:10:19>
    | |-UnaryOperator 0x1501413f8 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1501413e0 <col:7> 'struct kobject *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1501413c0 <col:7> 'struct kobject *' lvalue Var 0x150140e98 'kobj' 'struct kobject *'
    | `-CallExpr 0x150141548 <line:10:3, col:19> 'int' contains-errors
    |   |-ImplicitCastExpr 0x150141530 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1501414f0 <col:3> 'int ()' Function 0x150141438 'module_put' 'int ()'
    |   `-ImplicitCastExpr 0x150141570 <col:14> 'struct module *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x150141510 <col:14> 'struct module *' contains-errors lvalue Var 0x150140d18 'owner' 'struct module *'
    `-ReturnStmt 0x1501415e0 <line:11:2, col:9>
      `-ImplicitCastExpr 0x1501415c8 <col:9> 'struct kobject *' <LValueToRValue>
        `-DeclRefExpr 0x1501415a8 <col:9> 'struct kobject *' lvalue Var 0x150140e98 'kobj' 'struct kobject *'
