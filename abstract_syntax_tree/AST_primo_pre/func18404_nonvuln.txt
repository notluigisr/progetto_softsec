`-FunctionDecl 0x12e00de58  line:1:3 invalid ApplyPrelu 'int (int, int)'
  |-ParmVarDecl 0x12e00dcf0 <col:14, col:16> col:16 invalid input 'int'
  |-ParmVarDecl 0x12e00dd70 <col:23, col:25> col:25 invalid alpha 'int'
  `-CompoundStmt 0x12e00e030 <col:32, line:3:1>
    `-ReturnStmt 0x12e00e020 <line:2:3, col:41>
      `-ConditionalOperator 0x12e00dff0 <col:10, col:41> '<dependent type>' contains-errors
        |-BinaryOperator 0x12e00df50 <col:10, col:19> 'int' contains-errors '>='
        | |-RecoveryExpr 0x12e00df10 <col:10> '<dependent type>' contains-errors lvalue
        | `-FloatingLiteral 0x12e00df30 <col:19> 'double' 0.000000e+00
        |-RecoveryExpr 0x12e00df70 <col:25> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x12e00dfd0 <col:33, col:41> '<dependent type>' contains-errors '*'
          |-RecoveryExpr 0x12e00df90 <col:33> '<dependent type>' contains-errors lvalue
          `-RecoveryExpr 0x12e00dfb0 <col:41> '<dependent type>' contains-errors lvalue
