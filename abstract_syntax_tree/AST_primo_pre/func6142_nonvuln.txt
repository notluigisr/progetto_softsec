`-FunctionDecl 0x120128280  line:2:13 invalid amix_set_s32 'void (int *, double)' static
  |-ParmVarDecl 0x120128128 <col:26, col:30> col:30 referenced invalid data 'int *'
  |-ParmVarDecl 0x1201281a8 <col:36, col:43> col:43 used val 'double'
  `-CompoundStmt 0x1201418f8 <line:3:1, line:9:29>
    |-CompoundAssignOperator 0x120128390 <line:4:2, col:9> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'
    | |-DeclRefExpr 0x120128338 <col:2> 'double' lvalue ParmVar 0x1201281a8 'val' 'double'
    | `-ImplicitCastExpr 0x120128378 <col:9> 'double' <IntegralToFloating>
    |   `-IntegerLiteral 0x120128358 <col:9> 'unsigned int' 4294967295
    `-BinaryOperator 0x120128588 <line:6:2, col:18> '<dependent type>' contains-errors '='
      |-ArraySubscriptExpr 0x120128528 <col:2, col:8> '<dependent type>' contains-errors lvalue
      | |-ImplicitCastExpr 0x120128510 <col:2> '<dependent type>' contains-errors <LValueToRValue>
      | | `-RecoveryExpr 0x1201283e0 <col:2> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x1201283c0 <col:2> 'int *' lvalue ParmVar 0x120128128 'data' 'int *'
      | `-IntegerLiteral 0x120128408 <col:7> 'int' 0
      `-BinaryOperator 0x120128568 <col:12, col:18> '<dependent type>' contains-errors '&'
        |-RecoveryExpr 0x120128548 <col:12> '<dependent type>' contains-errors lvalue
        `-IntegerLiteral 0x120128478 <col:18> 'int' 255
