`-FunctionDecl 0x1421282b8  line:1:12 invalid mod_instantiate 'int (int *, void **)' static
  |-ParmVarDecl 0x142128128 <col:29, col:43> col:43 invalid cs 'int *'
  |-ParmVarDecl 0x1421281d8 <col:47, col:54> col:54 used instance 'void **'
  `-CompoundStmt 0x142142410 <line:2:1, line:23:1>
    |-BinaryOperator 0x142128708 <line:5:2, col:46> 'void *' contains-errors '='
    | |-UnaryOperator 0x142128660 <col:2, col:3> 'void *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x142128648 <col:3> 'void **' <LValueToRValue>
    | |   `-DeclRefExpr 0x142128388 <col:3> 'void **' lvalue ParmVar 0x1421281d8 'instance' 'void **'
    | `-BinaryOperator 0x1421286e8 <col:14, col:46> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x142128678 <col:14> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x1421286b8 <col:21, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x142128550 <col:21> 'int ()' Function 0x142128498 'talloc_zero' 'int ()'
    |     |-RecoveryExpr 0x142128570 <col:33> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x142128698 <col:37> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x142141c10 <line:6:2, col:21>
    | |-UnaryOperator 0x1421287a8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x142128790 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x142128770 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x142141c00 <col:13, col:21>
    |   `-UnaryOperator 0x1421287e0 <col:20, col:21> 'int' prefix '-'
    |     `-IntegerLiteral 0x1421287c0 <col:21> 'int' 1
    |-IfStmt 0x142141ef0 <line:8:2, line:10:2>
    | |-BinaryOperator 0x142141e70 <line:8:6, col:54> 'int' contains-errors '<'
    | | |-CallExpr 0x142141e38 <col:6, col:50> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x142141d10 <col:6> 'int ()' Function 0x142141c58 'cf_section_parse' 'int ()'
    | | | |-RecoveryExpr 0x142141d30 <col:23> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x142141df8 <col:27> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x142141e18 <col:33> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x142141db8 <col:54> 'int' 0
    | `-CompoundStmt 0x142141ed8 <col:57, line:10:2>
    |   `-ReturnStmt 0x142141ec8 <line:9:3, col:11>
    |     `-UnaryOperator 0x142141eb0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x142141e90 <col:11> 'int' 1
    |-IfStmt 0x142142258 <line:12:2, line:15:2>
    | |-BinaryOperator 0x142142018 <line:12:6, col:28> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x142141fd0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->fragment_size
    | | | `-RecoveryExpr 0x142141fb0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x142141f70 <col:28> 'int' 100
    | `-CompoundStmt 0x142142238 <col:33, line:15:2>
    |   |-CallExpr 0x1421421c0 <line:13:3, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x142142118 <col:3> 'int ()' Function 0x142142060 'cf_log_err_cs' 'int ()'
    |   | |-RecoveryExpr 0x142142138 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x1421421a0 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x142142228 <line:14:3, col:11>
    |     `-UnaryOperator 0x142142210 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x1421421f0 <col:11> 'int' 1
    |-IfStmt 0x1421423c0 <line:17:2, line:20:2>
    | |-RecoveryExpr 0x1421422a8 <line:17:6, col:38> '_Bool' contains-errors
    | `-CompoundStmt 0x1421423a0 <col:44, line:20:2>
    |   |-CallExpr 0x142142328 <line:18:3, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1421422c8 <col:3> 'int ()' Function 0x142142060 'cf_log_err_cs' 'int ()'
    |   | |-RecoveryExpr 0x1421422e8 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x142142308 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x142142390 <line:19:3, col:11>
    |     `-UnaryOperator 0x142142378 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x142142358 <col:11> 'int' 1
    `-ReturnStmt 0x142142400 <line:22:2, col:9>
      `-IntegerLiteral 0x1421423e0 <col:9> 'int' 0
