`-FunctionDecl 0x15c1281f8  line:1:19 invalid is_varchar 'int (const char)' static
  |-ParmVarDecl 0x15c1280e8 <col:30, col:41> col:41 used c 'const char'
  `-CompoundStmt 0x15c128790 <col:44, line:3:7>
    `-ReturnStmt 0x15c128780 <line:2:9, col:85>
      `-BinaryOperator 0x15c128760 <col:16, col:85> 'int' '||'
        |-BinaryOperator 0x15c1286b8 <col:16, col:77> 'int' '||'
        | |-BinaryOperator 0x15c128548 <col:16, col:55> 'int' '||'
        | | |-ParenExpr 0x15c1283d8 <col:16, col:33> 'int'
        | | | `-BinaryOperator 0x15c1283b8 <col:17, col:30> 'int' '&&'
        | | |   |-BinaryOperator 0x15c128310 <col:17, col:20> 'int' '>='
        | | |   | |-ImplicitCastExpr 0x15c1282f8 <col:17> 'int' <IntegralCast>
        | | |   | | `-ImplicitCastExpr 0x15c1282e0 <col:17> 'char' <LValueToRValue>
        | | |   | |   `-DeclRefExpr 0x15c1282a8 <col:17> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        | | |   | `-CharacterLiteral 0x15c1282c8 <col:20> 'int' 97
        | | |   `-BinaryOperator 0x15c128398 <col:27, col:30> 'int' '<='
        | | |     |-ImplicitCastExpr 0x15c128380 <col:27> 'int' <IntegralCast>
        | | |     | `-ImplicitCastExpr 0x15c128368 <col:27> 'char' <LValueToRValue>
        | | |     |   `-DeclRefExpr 0x15c128330 <col:27> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        | | |     `-CharacterLiteral 0x15c128350 <col:30> 'int' 122
        | | `-ParenExpr 0x15c128528 <col:38, col:55> 'int'
        | |   `-BinaryOperator 0x15c128508 <col:39, col:52> 'int' '&&'
        | |     |-BinaryOperator 0x15c128460 <col:39, col:42> 'int' '>='
        | |     | |-ImplicitCastExpr 0x15c128448 <col:39> 'int' <IntegralCast>
        | |     | | `-ImplicitCastExpr 0x15c128430 <col:39> 'char' <LValueToRValue>
        | |     | |   `-DeclRefExpr 0x15c1283f8 <col:39> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        | |     | `-CharacterLiteral 0x15c128418 <col:42> 'int' 65
        | |     `-BinaryOperator 0x15c1284e8 <col:49, col:52> 'int' '<='
        | |       |-ImplicitCastExpr 0x15c1284d0 <col:49> 'int' <IntegralCast>
        | |       | `-ImplicitCastExpr 0x15c1284b8 <col:49> 'char' <LValueToRValue>
        | |       |   `-DeclRefExpr 0x15c128480 <col:49> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        | |       `-CharacterLiteral 0x15c1284a0 <col:52> 'int' 90
        | `-ParenExpr 0x15c128698 <col:60, col:77> 'int'
        |   `-BinaryOperator 0x15c128678 <col:61, col:74> 'int' '&&'
        |     |-BinaryOperator 0x15c1285d0 <col:61, col:64> 'int' '>='
        |     | |-ImplicitCastExpr 0x15c1285b8 <col:61> 'int' <IntegralCast>
        |     | | `-ImplicitCastExpr 0x15c1285a0 <col:61> 'char' <LValueToRValue>
        |     | |   `-DeclRefExpr 0x15c128568 <col:61> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        |     | `-CharacterLiteral 0x15c128588 <col:64> 'int' 48
        |     `-BinaryOperator 0x15c128658 <col:71, col:74> 'int' '<='
        |       |-ImplicitCastExpr 0x15c128640 <col:71> 'int' <IntegralCast>
        |       | `-ImplicitCastExpr 0x15c128628 <col:71> 'char' <LValueToRValue>
        |       |   `-DeclRefExpr 0x15c1285f0 <col:71> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
        |       `-CharacterLiteral 0x15c128610 <col:74> 'int' 57
        `-BinaryOperator 0x15c128740 <col:82, col:85> 'int' '=='
          |-ImplicitCastExpr 0x15c128728 <col:82> 'int' <IntegralCast>
          | `-ImplicitCastExpr 0x15c128710 <col:82> 'char' <LValueToRValue>
          |   `-DeclRefExpr 0x15c1286d8 <col:82> 'const char' lvalue ParmVar 0x15c1280e8 'c' 'const char'
          `-CharacterLiteral 0x15c1286f8 <col:85> 'int' 95
