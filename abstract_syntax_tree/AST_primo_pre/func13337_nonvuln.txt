`-FunctionDecl 0x15a9281c8  line:1:1 invalid invoke_NPN_GetIntIdentifier 'int (int)'
  |-ParmVarDecl 0x15a9280f0 <col:29, col:37> col:37 invalid intid 'int'
  `-CompoundStmt 0x14a80aad0 <line:2:1, line:26:1>
    |-CallExpr 0x15a9285e0 <line:3:3, col:76> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a9283d0 <col:3> 'int ()' Function 0x15a928318 'npw_return_val_if_fail' 'int ()'
    | |-CallExpr 0x15a928598 <col:26, col:69> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x15a9284d0 <col:26> 'int ()' Function 0x15a928418 'rpc_method_invoke_possible' 'int ()'
    | | `-RecoveryExpr 0x15a928578 <col:53> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x15a9285c0 <col:72> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a80a328 <line:5:3, line:8:26>
    | `-VarDecl 0x15a928628 <line:5:3, line:8:25> line:5:7 used error 'int' cinit
    |   `-CallExpr 0x14a80a2e0 <col:15, line:8:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15a928770 <line:5:15> 'int ()' Function 0x15a9286b8 'rpc_method_invoke' 'int ()'
    |     |-RecoveryExpr 0x14a80a260 <col:33> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x14a80a280 <line:6:9> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x14a80a2a0 <line:7:9> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x15a9287d8 <col:25> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14a80a2c0 <line:8:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a80a670 <line:10:3, line:13:3>
    | |-BinaryOperator 0x14a80a3b8 <line:10:7, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x14a80a340 <col:7> 'int' contains-errors lvalue Var 0x15a928628 'error' 'int'
    | | `-RecoveryExpr 0x14a80a398 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14a80a650 <col:36, line:13:3>
    |   |-CallExpr 0x14a80a5a8 <line:11:2, col:25> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x14a80a590 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14a80a4b8 <col:2> 'int ()' Function 0x14a80a400 'npw_perror' 'int ()'
    |   | |-ImplicitCastExpr 0x14a80a5d8 <col:13> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x14a80a520 <col:13> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x14a80a5f0 <col:20> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x14a80a540 <col:20> 'int' contains-errors lvalue Var 0x15a928628 'error' 'int'
    |   `-ReturnStmt 0x14a80a640 <line:12:2, col:9>
    |     `-RecoveryExpr 0x14a80a620 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14a80a960 <line:16:3, line:18:26> 'int' contains-errors '='
    | |-DeclRefExpr 0x14a80a690 <line:16:3> 'int' contains-errors lvalue Var 0x15a928628 'error' 'int'
    | `-CallExpr 0x14a80a920 <col:11, line:18:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14a80a790 <line:16:11> 'int ()' Function 0x14a80a6d8 'rpc_method_wait_for_reply' 'int ()'
    |   |-RecoveryExpr 0x14a80a888 <col:37> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14a80a8a8 <line:17:10> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14a80a8e8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14a80a8c8 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14a80a900 <line:18:10> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14a80aab0 <line:20:3, line:23:3>
      |-RecoveryExpr 0x14a80a9a0 <line:20:7, col:16> '_Bool' contains-errors
      `-CompoundStmt 0x14a80aa98 <col:36, line:23:3>
        `-CallExpr 0x14a80aa38 <line:21:2, col:25> 'int' contains-errors
          |-ImplicitCastExpr 0x14a80aa20 <col:2> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14a80a9c0 <col:2> 'int ()' Function 0x14a80a400 'npw_perror' 'int ()'
          |-ImplicitCastExpr 0x14a80aa68 <col:13> 'char *' <ArrayToPointerDecay>
          | `-StringLiteral 0x14a80a9e0 <col:13> 'char[4]' lvalue "STR"
          `-ImplicitCastExpr 0x14a80aa80 <col:20> 'int' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x14a80aa00 <col:20> 'int' contains-errors lvalue Var 0x15a928628 'error' 'int'
