`-FunctionDecl 0x143140ab8  line:1:26 check_mem_permission 'struct mm_struct *(struct task_struct *)' static
  |-ParmVarDecl 0x1431286e8 <col:47, col:67> col:67 used task 'struct task_struct *'
  `-CompoundStmt 0x1431415f0 <line:2:1, line:15:1>
    |-DeclStmt 0x143140ca0 <line:3:2, col:22>
    | `-VarDecl 0x143140c38 <col:2, col:20> col:20 used mm 'struct mm_struct *'
    |-DeclStmt 0x143140d38 <line:4:2, col:9>
    | `-VarDecl 0x143140cd0 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x143140fa8 <line:7:2, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x143140d50 <col:2> 'int' lvalue Var 0x143140cd0 'err' 'int'
    | `-CallExpr 0x143140f80 <col:8, col:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x143140ea0 <col:8> 'int ()' Function 0x143140de8 'mutex_lock_killable' 'int ()'
    |   `-UnaryOperator 0x143140f68 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x143140f20 <col:29, col:43> '<dependent type>' contains-errors lvalue ->cred_guard_mutex
    |       `-RecoveryExpr 0x143140ef8 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x143140ec0 <col:29> 'struct task_struct *' lvalue ParmVar 0x1431286e8 'task' 'struct task_struct *'
    |-IfStmt 0x1431411d0 <line:8:2, line:9:21>
    | |-ImplicitCastExpr 0x143140fe8 <line:8:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x143140fc8 <col:6> 'int' lvalue Var 0x143140cd0 'err' 'int'
    | `-ReturnStmt 0x1431411c0 <line:9:3, col:21>
    |   `-ImplicitCastExpr 0x1431411a8 <col:10, col:21> 'struct mm_struct *' <IntegralToPointer>
    |     `-CallExpr 0x143141168 <col:10, col:21> 'int'
    |       |-ImplicitCastExpr 0x143141150 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1431410e0 <col:10> 'int ()' Function 0x143141028 'ERR_PTR' 'int ()'
    |       `-ImplicitCastExpr 0x143141190 <col:18> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x143141100 <col:18> 'int' lvalue Var 0x143140cd0 'err' 'int'
    |-BinaryOperator 0x1431413a0 <line:11:2, col:34> 'struct mm_struct *' '='
    | |-DeclRefExpr 0x1431411f0 <col:2> 'struct mm_struct *' lvalue Var 0x143140c38 'mm' 'struct mm_struct *'
    | `-ImplicitCastExpr 0x143141388 <col:7, col:34> 'struct mm_struct *' <IntegralToPointer>
    |   `-CallExpr 0x143141348 <col:7, col:34> 'int'
    |     |-ImplicitCastExpr 0x143141330 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1431412f0 <col:7> 'int ()' Function 0x143141238 '__check_mem_permission' 'int ()'
    |     `-ImplicitCastExpr 0x143141370 <col:30> 'struct task_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x143141310 <col:30> 'struct task_struct *' lvalue ParmVar 0x1431286e8 'task' 'struct task_struct *'
    |-CallExpr 0x143141580 <line:12:2, col:46> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1431414a0 <col:2> 'int ()' Function 0x1431413e8 'mutex_unlock' 'int ()'
    | `-UnaryOperator 0x143141568 <col:15, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x143141520 <col:16, col:30> '<dependent type>' contains-errors lvalue ->cred_guard_mutex
    |     `-RecoveryExpr 0x1431414f8 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1431414c0 <col:16> 'struct task_struct *' lvalue ParmVar 0x1431286e8 'task' 'struct task_struct *'
    `-ReturnStmt 0x1431415e0 <line:14:2, col:9>
      `-ImplicitCastExpr 0x1431415c8 <col:9> 'struct mm_struct *' <LValueToRValue>
        `-DeclRefExpr 0x1431415a8 <col:9> 'struct mm_struct *' lvalue Var 0x143140c38 'mm' 'struct mm_struct *'
