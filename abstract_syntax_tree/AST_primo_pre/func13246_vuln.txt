`-FunctionDecl 0x13d80dee8  line:1:1 invalid _nc_fmt_funcptr 'int (char *, const char *, int)'
  |-ParmVarDecl 0x13d80dcd8 <col:17, col:23> col:23 used target 'char *'
  |-ParmVarDecl 0x13d80dd58 <col:31, col:43> col:43 used source 'const char *'
  |-ParmVarDecl 0x13d80ddf0 <col:51, col:58> col:58 invalid size 'int'
  `-CompoundStmt 0x13d82b740 <line:2:1, line:31:1>
    |-UnaryExprOrTypeTraitExpr 0x13d80e018 <line:3:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x13d80dff8 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13d80e0f0 <line:4:5, col:23>
    | `-VarDecl 0x13d80e050 <col:5, col:17> col:11 used dst 'char *' cinit
    |   `-ImplicitCastExpr 0x13d80e0d8 <col:17> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13d80e0b8 <col:17> 'char *' lvalue ParmVar 0x13d80dcd8 'target' 'char *'
    |-DeclStmt 0x13d828800 <line:7:5, line:10:16>
    | |-RecordDecl 0x13d80e108 <line:7:5, line:10:5> line:7:5 union definition
    | | |-FieldDecl 0x13d80e1c8 <line:8:2, col:6> col:6 referenced value 'int'
    | | `-FieldDecl 0x13d80e2d0 <line:9:2, col:24> col:7 referenced bytes 'char[4]'
    | `-VarDecl 0x13d80e378 <line:7:5, line:10:7> col:7 used byteorder 'union (unnamed union at dataset_diviso_filec/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func13246_vuln.c:7:5)'
    |-BinaryOperator 0x13d828888 <line:12:5, col:23> 'int' '='
    | |-MemberExpr 0x13d828838 <col:5, col:15> 'int' lvalue .value 0x13d80e1c8
    | | `-DeclRefExpr 0x13d828818 <col:5> 'union (unnamed union at dataset_diviso_filec/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func13246_vuln.c:7:5)' lvalue Var 0x13d80e378 'byteorder' 'union (unnamed union at dataset_diviso_filec/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec/func13246_vuln.c:7:5)'
    | `-IntegerLiteral 0x13d828868 <col:23> 'int' 4660
    |-BinaryOperator 0x13d828988 <line:14:5, col:14> 'char' '='
    | |-UnaryOperator 0x13d828940 <col:5, col:9> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x13d828928 <col:6, col:9> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x13d828908 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'
    | `-ImplicitCastExpr 0x13d828970 <col:14> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x13d828958 <col:14> 'int' 48
    |-BinaryOperator 0x13d828a28 <line:15:5, col:14> 'char' '='
    | |-UnaryOperator 0x13d8289e0 <col:5, col:9> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x13d8289c8 <col:6, col:9> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x13d8289a8 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'
    | `-ImplicitCastExpr 0x13d828a10 <col:14> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x13d8289f8 <col:14> 'int' 120
    |-ForStmt 0x13d8295c8 <line:17:5, line:28:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d828b18 <line:17:17, col:21> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13d828af8 <col:17> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13d828ab8 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13d828b88 <col:27, col:29> '<dependent type>' contains-errors prefix '++' cannot overflow
    | | `-RecoveryExpr 0x13d828b68 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13d8295a8 <col:32, line:28:5>
    |   |-DeclStmt 0x13d828fe0 <line:18:2, line:20:29>
    |   | `-VarDecl 0x13d828bb8 <line:18:2, col:11> col:11 used ch 'unsigned int'
    |   `-IfStmt 0x13d829588 <line:23:2, line:27:2>
    |     |-UnaryOperator 0x13d8291b8 <line:23:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x13d8291a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x13d829180 <col:7> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13d829570 <col:16, line:27:2>
    |       `-CompoundAssignOperator 0x13d829540 <line:26:6, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |         |-DeclRefExpr 0x13d829500 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'
    |         `-IntegerLiteral 0x13d829520 <col:13> 'int' 2
    |-BinaryOperator 0x13d829680 <line:29:5, col:12> 'char' '='
    | |-UnaryOperator 0x13d829638 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13d829620 <col:6> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d829600 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'
    | `-ImplicitCastExpr 0x13d829668 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x13d829650 <col:12> 'int' 0
    `-ReturnStmt 0x13d82b730 <line:30:5, col:12>
      `-ImplicitCastExpr 0x13d8296d8 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x13d8296c0 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x13d8296a0 <col:12> 'char *' lvalue ParmVar 0x13d80dcd8 'target' 'char *'
