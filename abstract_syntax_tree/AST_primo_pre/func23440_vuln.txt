`-FunctionDecl 0x13800dec8  line:1:10 invalid run 'int (int *, const int)'
  |-ParmVarDecl 0x13800dd28 <col:14, col:32> col:32 invalid opCtx 'int *'
  |-ParmVarDecl 0x13800dda8 <line:2:14, <invalid sloc>> col:26 invalid 'const int'
  `-CompoundStmt 0x138027938 <line:4:38, line:92:5>
    |-RecoveryExpr 0x13800dfb0 <line:5:9> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13800e1b0 <line:7:9, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13800e130 <col:9> 'int ()' Function 0x13800e078 'uassertStatusOK' 'int ()'
    | `-RecoveryExpr 0x13800e190 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f923b48 <line:9:9, line:11:9>
    | |-BinaryOperator 0x12f923a00 <line:9:13, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x13800e3d0 <col:13, col:33> '<dependent type>' contains-errors
    | | | `-CXXDependentScopeMemberExpr 0x13800e388 <col:13, col:27> '<dependent type>' contains-errors lvalue .getDB
    | | |   `-CXXDependentScopeMemberExpr 0x13800e340 <col:13, col:18> '<dependent type>' contains-errors lvalue .userName
    | | |     `-RecoveryExpr 0x13800e320 <col:13> '<dependent type>' contains-errors lvalue
    | | `-StringLiteral 0x13800e2e0 <col:38> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x12f923b38 <col:45, line:11:9>
    |-IfStmt 0x12f923f10 <line:13:9, line:17:9>
    | |-BinaryOperator 0x12f923ea8 <line:13:13, col:59> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x12f923da0 <col:13, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x12f923d88 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x12f923d40 <col:14, col:19> '<dependent type>' contains-errors lvalue .hasPassword
    | | |     `-RecoveryExpr 0x12f923d20 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12f923e88 <col:34, col:59> 'int' contains-errors '!='
    | |   |-CallExpr 0x12f923e68 <col:34, col:54> '<dependent type>' contains-errors
    | |   | `-CXXDependentScopeMemberExpr 0x12f923e20 <col:34, col:48> '<dependent type>' contains-errors lvalue .getDB
    | |   |   `-CXXDependentScopeMemberExpr 0x12f923dd8 <col:34, col:39> '<dependent type>' contains-errors lvalue .userName
    | |   |     `-RecoveryExpr 0x12f923db8 <col:34> '<dependent type>' contains-errors lvalue
    | |   `-StringLiteral 0x12f923cc0 <col:59> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x12f923f00 <col:66, line:17:9>
    |-IfStmt 0x12f924158 <line:19:9, line:23:9>
    | |-RecoveryExpr 0x12f924098 <line:19:13, col:60> '_Bool' contains-errors
    | `-CompoundStmt 0x12f924148 <col:67, line:23:9>
    |-IfStmt 0x12f9241e8 <line:25:9, line:27:9>
    | |-RecoveryExpr 0x12f924178 <line:25:13, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x12f9241d8 <col:29, line:27:9>
    |-DeclStmt 0x12f9244d8 <line:48:9, col:89>
    | `-VarDecl 0x12f924330 <col:9, col:14> col:14 lk 'int' auto
    |-DeclStmt 0x12f924570 <line:50:9, col:25>
    | `-VarDecl 0x12f924508 <col:9, col:13> col:13 used authzVersion 'int'
    |-IfStmt 0x12f924770 <line:59:9, line:62:9>
    | |-RecoveryExpr 0x12f924720 <line:59:13, col:90> '_Bool' contains-errors
    | `-CompoundStmt 0x12f924760 <col:93, line:62:9>
    `-IfStmt 0x12f9247e0 <line:64:9, line:66:9>
      |-RecoveryExpr 0x12f924790 <line:64:13, col:18> '_Bool' contains-errors
      `-CompoundStmt 0x12f9247d0 <col:33, line:66:9>
