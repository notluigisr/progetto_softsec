`-FunctionDecl 0x13e0269c0  line:1:13 invalid esp6_err 'void (struct sk_buff *, struct inet6_skb_parm *, int, int, int, int)' static
  |-ParmVarDecl 0x13e00e248 <col:22, col:38> col:38 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x13e026628 <col:43, col:66> col:66 opt 'struct inet6_skb_parm *'
  |-ParmVarDecl 0x13e0266a8 <line:2:8, col:12> col:12 used type 'int'
  |-ParmVarDecl 0x13e026728 <col:18, col:22> col:22 code 'int'
  |-ParmVarDecl 0x13e0267a8 <col:28, col:32> col:32 used offset 'int'
  |-ParmVarDecl 0x13e026840 <col:40, col:47> col:47 invalid info 'int'
  `-CompoundStmt 0x13f808d28 <line:3:1, line:18:1>
    |-DeclStmt 0x13e026d98 <line:4:2, col:50>
    | |-RecordDecl 0x13e026a98 <col:2, col:9> col:9 struct ipv6hdr
    | `-VarDecl 0x13e026c08 <col:2, col:46> col:18 used iph 'struct ipv6hdr *' cinit
    |   `-CStyleCastExpr 0x13e026d58 <col:24, col:46> 'struct ipv6hdr *' contains-errors <Dependent>
    |     `-RecoveryExpr 0x13e026ca8 <col:41, col:46> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13e026c70 <col:41> 'struct sk_buff *' lvalue ParmVar 0x13e00e248 'skb' 'struct sk_buff *'
    |-DeclStmt 0x13e027128 <line:5:2, col:69>
    | |-RecordDecl 0x13e026db0 <col:2, col:9> col:9 struct ip_esp_hdr
    | `-VarDecl 0x13e026f18 <col:2, col:68> col:21 used esph 'struct ip_esp_hdr *' cinit
    |   `-CStyleCastExpr 0x13e0270e8 <col:28, col:68> 'struct ip_esp_hdr *' contains-errors <Dependent>
    |     `-ParenExpr 0x13e0270c8 <col:49, col:68> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x13e027000 <col:50, col:62> '<dependent type>' contains-errors '+'
    |         |-RecoveryExpr 0x13e026fb8 <col:50, col:55> '<dependent type>' contains-errors lvalue
    |         | `-DeclRefExpr 0x13e026f80 <col:50> 'struct sk_buff *' lvalue ParmVar 0x13e00e248 'skb' 'struct sk_buff *'
    |         `-DeclRefExpr 0x13e026fe0 <col:62> 'int' lvalue ParmVar 0x13e0267a8 'offset' 'int'
    |-DeclStmt 0x13e027328 <line:6:2, col:22>
    | |-RecordDecl 0x13e027140 <col:2, col:9> col:9 struct xfrm_state
    | `-VarDecl 0x13e0272a8 <col:2, col:21> col:21 used x 'struct xfrm_state *'
    |-IfStmt 0x13e0274c0 <line:8:2, line:10:3>
    | |-BinaryOperator 0x13e027490 <line:8:6, line:9:14> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x13e027430 <line:8:6, col:14> 'int' contains-errors '!='
    | | | |-DeclRefExpr 0x13e027340 <col:6> 'int' lvalue ParmVar 0x13e0266a8 'type' 'int'
    | | | `-RecoveryExpr 0x13e027410 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13e027470 <line:9:6, col:14> 'int' contains-errors '!='
    | |   |-DeclRefExpr 0x13e027398 <col:6> 'int' lvalue ParmVar 0x13e0266a8 'type' 'int'
    | |   `-RecoveryExpr 0x13e027450 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13e0274b0 <line:10:3>
    |-IfStmt 0x13f808a40 <line:13:2, line:14:3>
    | |-UnaryOperator 0x13f808a18 <line:13:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13f808a00 <col:7> 'struct xfrm_state *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13f8089e0 <col:7> 'struct xfrm_state *' lvalue Var 0x13e0272a8 'x' 'struct xfrm_state *'
    | `-ReturnStmt 0x13f808a30 <line:14:3>
    `-CallExpr 0x13f808ce8 <line:17:2, col:18> 'int'
      |-ImplicitCastExpr 0x13f808cd0 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x13f808c58 <col:2> 'int ()' Function 0x13f808ba0 'xfrm_state_put' 'int ()'
      `-ImplicitCastExpr 0x13f808d10 <col:17> 'struct xfrm_state *' <LValueToRValue>
        `-DeclRefExpr 0x13f808c78 <col:17> 'struct xfrm_state *' lvalue Var 0x13e0272a8 'x' 'struct xfrm_state *'
