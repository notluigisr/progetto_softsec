`-FunctionDecl 0x16000de88  line:1:1 invalid xps_select_font_encoding 'int (int *, int)'
  |-ParmVarDecl 0x16000dd28 <col:26, col:38> col:38 referenced invalid font 'int *'
  |-ParmVarDecl 0x16000dda8 <col:44, col:48> col:48 used idx 'int'
  `-CompoundStmt 0x160028190 <line:2:1, line:13:1>
    |-DeclStmt 0x16000e0b8 <line:4:5, col:17>
    | |-VarDecl 0x16000dfb8 <col:5, col:9> col:9 used pid 'int'
    | `-VarDecl 0x16000e038 <col:5, col:14> col:14 used eid 'int'
    |-IfStmt 0x16000e220 <line:5:5, line:6:9>
    | |-BinaryOperator 0x16000e1f0 <line:5:9, col:33> 'int' contains-errors '||'
    | | |-BinaryOperator 0x16000e128 <col:9, col:15> 'int' '<'
    | | | |-ImplicitCastExpr 0x16000e110 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x16000e0d0 <col:9> 'int' lvalue ParmVar 0x16000dda8 'idx' 'int'
    | | | `-IntegerLiteral 0x16000e0f0 <col:15> 'int' 0
    | | `-BinaryOperator 0x16000e1d0 <col:20, col:33> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x16000e148 <col:20> 'int' lvalue ParmVar 0x16000dda8 'idx' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x16000e188 <col:27, col:33> '<dependent type>' contains-errors lvalue ->cmapsubcount
    | |     `-RecoveryExpr 0x16000e168 <col:27> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x16000e210 <line:6:9>
    |-BinaryOperator 0x160027ac8 <line:9:5, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x160027820 <col:5> 'int' lvalue Var 0x16000dfb8 'pid' 'int'
    | `-CallExpr 0x160027aa0 <col:11, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1600279a0 <col:11> 'int ()' Function 0x1600278e8 'u16' 'int ()'
    |   `-BinaryOperator 0x160027a80 <col:15, col:23> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x160027a60 <col:15> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1600279d8 <col:23> 'int' 0
    |-BinaryOperator 0x160027c30 <line:10:5, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x160027ae8 <col:5> 'int' lvalue Var 0x16000e038 'eid' 'int'
    | `-CallExpr 0x160027c08 <col:11, col:24> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x160027b08 <col:11> 'int ()' Function 0x1600278e8 'u16' 'int ()'
    |   `-BinaryOperator 0x160027be8 <col:15, col:23> '<dependent type>' contains-errors '+'
    |     |-RecoveryExpr 0x160027bc8 <col:15> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x160027b40 <col:23> 'int' 2
    |-BinaryOperator 0x160027f90 <line:11:5, col:57> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x160027c98 <col:5, col:11> '<dependent type>' contains-errors lvalue ->cmapsubtable
    | | `-RecoveryExpr 0x160027c70 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x160027c50 <col:5> 'int *' lvalue ParmVar 0x16000dd28 'font' 'int *'
    | `-BinaryOperator 0x160027f70 <col:26, col:57> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x160027d00 <col:26, col:32> '<dependent type>' contains-errors lvalue ->cmaptable
    |   | `-RecoveryExpr 0x160027ce0 <col:26> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x160027f48 <col:44, col:57> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x160027e28 <col:44> 'int ()' Function 0x160027d70 'u32' 'int ()'
    |     `-BinaryOperator 0x160027f28 <col:48, col:56> '<dependent type>' contains-errors '+'
    |       |-RecoveryExpr 0x160027f08 <col:48> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x160027e60 <col:56> 'int' 4
    `-BinaryOperator 0x160028170 <line:12:5, col:41> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x160027ff8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->usepua
      | `-RecoveryExpr 0x160027fd0 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x160027fb0 <col:5> 'int *' lvalue ParmVar 0x16000dd28 'font' 'int *'
      `-ParenExpr 0x160028150 <col:20, col:41> 'int'
        `-BinaryOperator 0x160028130 <col:21, col:40> 'int' '&&'
          |-BinaryOperator 0x160028098 <col:21, col:28> 'int' '=='
          | |-ImplicitCastExpr 0x160028080 <col:21> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x160028040 <col:21> 'int' lvalue Var 0x16000dfb8 'pid' 'int'
          | `-IntegerLiteral 0x160028060 <col:28> 'int' 3
          `-BinaryOperator 0x160028110 <col:33, col:40> 'int' '=='
            |-ImplicitCastExpr 0x1600280f8 <col:33> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x1600280b8 <col:33> 'int' lvalue Var 0x16000e038 'eid' 'int'
            `-IntegerLiteral 0x1600280d8 <col:40> 'int' 0
