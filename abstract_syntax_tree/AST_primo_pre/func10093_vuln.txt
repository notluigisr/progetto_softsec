`-FunctionDecl 0x11f80de58  line:1:5 invalid GC_debug_malloc_atomic_ignore_off_page 'int (int, int)'
  |-ParmVarDecl 0x11f80dcf0 <col:44, col:51> col:51 invalid lb 'int'
  |-ParmVarDecl 0x11f80dd70 <col:55> col:55 GC_EXTRA_PARAMS 'int'
  `-CompoundStmt 0x11f828010 <line:2:1, line:15:1>
    |-DeclStmt 0x11f80e1f8 <line:3:5, col:71>
    | `-VarDecl 0x11f80df28 <col:5, col:70> col:12 used result 'void *' cinit
    |   `-CallExpr 0x11f80e1d0 <col:21, col:70> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f80e0f0 <col:21> 'int ()' Function 0x11f80e038 'GC_malloc_atomic_ignore_off_page' 'int ()'
    |     `-BinaryOperator 0x11f80e1b0 <col:54, col:59> '<dependent type>' contains-errors '+'
    |       |-RecoveryExpr 0x11f80e110 <col:54> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x11f80e190 <col:59> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f827a68 <line:5:5, line:9:5>
    | |-BinaryOperator 0x11f80e280 <line:5:9, col:19> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x11f80e250 <col:9> 'void *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x11f80e210 <col:9> 'void *' contains-errors lvalue Var 0x11f80df28 'result' 'void *'
    | | `-ImplicitCastExpr 0x11f80e268 <col:19> 'void *' <NullToPointer>
    | |   `-IntegerLiteral 0x11f80e230 <col:19> 'int' 0
    | `-CompoundStmt 0x11f827a48 <col:22, line:9:5>
    |   |-CallExpr 0x11f8279b8 <line:6:9, line:7:53> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11f80e380 <line:6:9> 'int ()' Function 0x11f80e2c8 'GC_err_printf' 'int ()'
    |   | |-StringLiteral 0x11f827800 <col:23, line:7:23> 'char[7]' lvalue "STRSTR"
    |   | |-CStyleCastExpr 0x11f827950 <col:30, col:45> 'unsigned long' contains-errors <Dependent>
    |   | | `-RecoveryExpr 0x11f827828 <col:45> '<dependent type>' contains-errors lvalue
    |   | |-RecoveryExpr 0x11f827978 <col:49> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x11f827998 <col:52> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x11f827a38 <line:8:9, col:17>
    |     `-ParenExpr 0x11f827a18 <col:15, col:17> 'int'
    |       `-IntegerLiteral 0x11f8279f8 <col:16> 'int' 0
    |-IfStmt 0x11f827ca0 <line:10:5, line:12:5>
    | |-UnaryOperator 0x11f827b08 <line:10:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x11f827af0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x11f827ad0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f827c88 <col:32, line:12:5>
    |   `-CallExpr 0x11f827c68 <line:11:9, col:28> 'int'
    |     `-ImplicitCastExpr 0x11f827c50 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x11f827c00 <col:9> 'int ()' Function 0x11f827b48 'GC_start_debugging' 'int ()'
    `-CallExpr 0x11f827e48 <line:13:5, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11f827da0 <col:5> 'int ()' Function 0x11f827ce8 'ADD_CALL_CHAIN' 'int ()'
      |-DeclRefExpr 0x11f827dc0 <col:20> 'void *' contains-errors lvalue Var 0x11f80df28 'result' 'void *'
      `-RecoveryExpr 0x11f827e28 <col:28> '<dependent type>' contains-errors lvalue
