`-FunctionDecl 0x14e00e038  line:1:1 invalid dissect_kafka_update_metadata_request_topic 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x14e00dd28 <col:45, col:55> col:55 invalid tvb 'int *'
  |-ParmVarDecl 0x14e00dda8 <col:60, col:73> col:73 invalid pinfo 'int *'
  |-ParmVarDecl 0x14e00de28 <col:80, col:92> col:92 invalid tree 'int *'
  |-ParmVarDecl 0x14e00dea8 <line:2:45, col:49> col:49 used offset 'int'
  |-ParmVarDecl 0x14e00df28 <col:57, col:77> col:77 invalid api_version 'int'
  `-CompoundStmt 0x14e029cc8 <line:3:1, line:29:1>
    |-DeclStmt 0x14e00e250 <line:6:5, col:31>
    | |-VarDecl 0x14e00e150 <col:5, col:9> col:9 used topic_start 'int'
    | `-VarDecl 0x14e00e1d0 <col:5, col:22> col:22 used topic_len 'int'
    |-BinaryOperator 0x14e027918 <line:12:5, line:13:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e027578 <line:12:5> 'int' lvalue ParmVar 0x14e00dea8 'offset' 'int'
    | `-CallExpr 0x14e0278b8 <col:14, line:13:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e027678 <line:12:14> 'int ()' Function 0x14e0275c0 'dissect_kafka_string' 'int ()'
    |   |-RecoveryExpr 0x14e027878 <col:35> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e027898 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e0276c8 <col:65> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e0276e8 <col:70> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14e027708 <col:77> 'int' lvalue ParmVar 0x14e00dea8 'offset' 'int'
    |   |-BinaryOperator 0x14e027768 <col:85, col:100> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x14e027728 <col:85> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x14e027748 <col:100> 'int' 6
    |   |-UnaryOperator 0x14e0277a8 <line:13:35, col:36> 'int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x14e027788 <col:36> 'int' lvalue Var 0x14e00e150 'topic_start' 'int'
    |   `-UnaryOperator 0x14e0277e0 <col:49, col:50> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x14e0277c0 <col:50> 'int' lvalue Var 0x14e00e1d0 'topic_len' 'int'
    |-BinaryOperator 0x14e027cf0 <line:16:5, line:17:88> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e027938 <line:16:5> 'int' lvalue ParmVar 0x14e00dea8 'offset' 'int'
    | `-CallExpr 0x14e027c90 <col:14, line:17:88> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e027a38 <line:16:14> 'int ()' Function 0x14e027980 'dissect_kafka_array' 'int ()'
    |   |-RecoveryExpr 0x14e027c18 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e027a70 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14e027a90 <col:48> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x14e027ab0 <col:55> 'int' lvalue ParmVar 0x14e00dea8 'offset' 'int'
    |   |-BinaryOperator 0x14e027b10 <col:63, col:78> 'int' contains-errors '>='
    |   | |-RecoveryExpr 0x14e027ad0 <col:63> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x14e027af0 <col:78> 'int' 6
    |   |-RecoveryExpr 0x14e027b30 <col:81> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14e027c58 <line:17:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e027c38 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e027c70 <col:84> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e027f20 <line:19:5, line:21:5>
    | |-BinaryOperator 0x14e027d50 <line:19:9, col:24> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x14e027d10 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14e027d30 <col:24> 'int' 6
    | `-CompoundStmt 0x14e027f10 <col:27, line:21:5>
    `-ReturnStmt 0x14e029cb8 <line:28:5, col:12>
      `-ImplicitCastExpr 0x14e029ca0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14e029c80 <col:12> 'int' lvalue ParmVar 0x14e00dea8 'offset' 'int'
