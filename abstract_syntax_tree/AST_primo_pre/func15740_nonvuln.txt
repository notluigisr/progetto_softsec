`-FunctionDecl 0x12300dfa8  line:1:16 invalid typeerror 'int (int *, const int *, const char *, const char *)' static
  |-ParmVarDecl 0x12300dd28 <col:27, col:38> col:38 invalid L 'int *'
  |-ParmVarDecl 0x12300dda8 <col:41, col:55> col:55 invalid o 'const int *'
  |-ParmVarDecl 0x12300de28 <col:58, col:70> col:70 used op 'const char *'
  |-ParmVarDecl 0x12300dea8 <line:2:27, col:39> col:39 used extra 'const char *'
  `-CompoundStmt 0x123027528 <col:46, line:5:1>
    |-DeclStmt 0x12300e2e0 <line:3:3, col:41>
    | `-VarDecl 0x12300e088 <col:3, col:40> col:15 used t 'const char *' cinit
    |   `-CallExpr 0x12300e2b0 <col:19, col:40> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12300e250 <col:19> 'int ()' Function 0x12300e198 'luaT_objtypename' 'int ()'
    |     |-RecoveryExpr 0x12300e270 <col:36> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x12300e290 <col:39> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x1230274e0 <line:4:3, col:39> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12300e3d8 <col:3> 'int ()' Function 0x12300e320 'luaG_runerror' 'int ()'
      |-RecoveryExpr 0x123027400 <col:17> '<dependent type>' contains-errors lvalue
      |-StringLiteral 0x123027460 <col:20> 'char[4]' lvalue "STR"
      |-DeclRefExpr 0x123027480 <col:27> 'const char *' lvalue ParmVar 0x12300de28 'op' 'const char *'
      |-DeclRefExpr 0x1230274a0 <col:31> 'const char *' contains-errors lvalue Var 0x12300e088 't' 'const char *'
      `-DeclRefExpr 0x1230274c0 <col:34> 'const char *' lvalue ParmVar 0x12300dea8 'extra' 'const char *'
