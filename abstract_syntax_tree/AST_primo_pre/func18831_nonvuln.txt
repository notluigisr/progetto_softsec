`-FunctionDecl 0x12a888ba0  line:1:13 invalid security_A 'void (int *, const int *, int *, int *)' static
  |-ParmVarDecl 0x12a888928 <col:24, col:30> col:30 invalid master_secret 'int *'
  |-ParmVarDecl 0x12a8889a8 <col:45, col:57> col:57 invalid client_random 'const int *'
  |-ParmVarDecl 0x12a888a28 <col:72, col:78> col:78 invalid server_random 'int *'
  |-ParmVarDecl 0x12a888aa8 <line:2:3, col:9> col:9 invalid output 'int *'
  `-CompoundStmt 0x12a8a14e0 <line:3:1, line:7:1>
    |-CallExpr 0x12a888f50 <line:4:2, col:91> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a888dc0 <col:2> 'int ()' Function 0x12a888d08 'security_premaster_hash' 'int ()'
    | |-StringLiteral 0x12a888e20 <col:26> 'char[4]' lvalue "STR"
    | |-IntegerLiteral 0x12a888e40 <col:33> 'int' 1
    | |-RecoveryExpr 0x12a888e60 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12a888e80 <col:51> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12a888ea0 <col:66> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12a888f38 <col:81, col:90> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x12a888f18 <col:82, col:90> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12a888f00 <col:82> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x12a888ec0 <col:82> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x12a888ee0 <col:89> 'int' 0
    |-CallExpr 0x12a8a12f0 <line:5:2, col:92> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a888fa0 <col:2> 'int ()' Function 0x12a888d08 'security_premaster_hash' 'int ()'
    | |-StringLiteral 0x12a888fc0 <col:26> 'char[4]' lvalue "STR"
    | |-IntegerLiteral 0x12a888fe0 <col:33> 'int' 2
    | |-RecoveryExpr 0x12a8a1200 <col:36> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12a8a1220 <col:51> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12a8a1240 <col:66> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12a8a12d8 <col:81, col:91> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x12a8a12b8 <col:82, col:91> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12a8a12a0 <col:82> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x12a8a1260 <col:82> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x12a8a1280 <col:89> 'int' 16
    `-CallExpr 0x12a8a1490 <line:6:2, col:92> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12a8a1340 <col:2> 'int ()' Function 0x12a888d08 'security_premaster_hash' 'int ()'
      |-StringLiteral 0x12a8a1360 <col:26> 'char[4]' lvalue "STR"
      |-IntegerLiteral 0x12a8a1380 <col:33> 'int' 3
      |-RecoveryExpr 0x12a8a13a0 <col:36> '<dependent type>' contains-errors lvalue
      |-RecoveryExpr 0x12a8a13c0 <col:51> '<dependent type>' contains-errors lvalue
      |-RecoveryExpr 0x12a8a13e0 <col:66> '<dependent type>' contains-errors lvalue
      `-UnaryOperator 0x12a8a1478 <col:81, col:91> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-ArraySubscriptExpr 0x12a8a1458 <col:82, col:91> '<dependent type>' contains-errors lvalue
          |-ImplicitCastExpr 0x12a8a1440 <col:82> '<dependent type>' contains-errors <LValueToRValue>
          | `-RecoveryExpr 0x12a8a1400 <col:82> '<dependent type>' contains-errors lvalue
          `-IntegerLiteral 0x12a8a1420 <col:89> 'int' 32
