`-FunctionDecl 0x13900e068  line:1:20 invalid ParseImageResourceBlocks 'int *(int *, const unsigned char *, int, int *, int *)' static
  |-ParmVarDecl 0x13900dd28 <col:45, col:52> col:52 referenced invalid image 'int *'
  |-ParmVarDecl 0x13900ddd8 <line:2:3, col:24> col:24 used blocks 'const unsigned char *'
  |-ParmVarDecl 0x13900de58 <col:31, col:38> col:38 invalid length 'int'
  |-ParmVarDecl 0x13900ded8 <line:3:3, col:22> col:22 invalid has_merged_image 'int *'
  |-ParmVarDecl 0x13900df58 <col:39, col:54> col:54 invalid exception 'int *'
  `-CompoundStmt 0x13902c0e8 <line:4:1, line:90:1>
    |-DeclStmt 0x13900e1b8 <line:5:3, line:6:7>
    | `-VarDecl 0x13900e150 <line:5:3, line:6:6> col:6 used p 'const unsigned char *'
    |-DeclStmt 0x13900e268 <line:11:3, line:12:16>
    | `-VarDecl 0x13900e200 <line:11:3, line:12:5> col:5 used name_length 'unsigned char'
    |-DeclStmt 0x13900e300 <line:14:3, line:15:10>
    | `-VarDecl 0x13900e298 <line:14:3, line:15:5> col:5 used count 'unsigned int'
    |-DeclStmt 0x139027480 <line:17:3, line:19:15>
    | |-VarDecl 0x13900e330 <line:17:3, line:18:5> col:5 used id 'unsigned short'
    | `-VarDecl 0x139027400 <line:17:3, line:19:5> col:5 used short_sans 'unsigned short'
    |-CallExpr 0x139027868 <line:24:3, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1390277c0 <col:3> 'int ()' Function 0x139027708 'SetStringInfoDatum' 'int ()'
    | |-RecoveryExpr 0x139027848 <col:22> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x1390277f8 <col:30> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
    |-CallExpr 0x139027a60 <line:25:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027978 <col:3> 'int ()' Function 0x1390278c0 'SetStringInfoName' 'int ()'
    | |-RecoveryExpr 0x139027a40 <col:21> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x1390279f0 <col:29> 'char[4]' lvalue "STR"
    `-ForStmt 0x13902c0b0 <line:26:3, line:88:3>
      |-BinaryOperator 0x139027ae8 <line:26:8, col:10> 'const unsigned char *' '='
      | |-DeclRefExpr 0x139027a90 <col:8> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
      | `-ImplicitCastExpr 0x139027ad0 <col:10> 'const unsigned char *' <LValueToRValue>
      |   `-DeclRefExpr 0x139027ab0 <col:10> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
      |-<<<NULL>>>
      |-BinaryOperator 0x139027cd8 <col:18, col:57> 'int' contains-errors '&&'
      | |-ParenExpr 0x139027b98 <col:18, col:30> 'int'
      | | `-BinaryOperator 0x139027b78 <col:19, col:24> 'int' '>='
      | |   |-ImplicitCastExpr 0x139027b48 <col:19> 'const unsigned char *' <LValueToRValue>
      | |   | `-DeclRefExpr 0x139027b08 <col:19> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
      | |   `-ImplicitCastExpr 0x139027b60 <col:24> 'const unsigned char *' <LValueToRValue>
      | |     `-DeclRefExpr 0x139027b28 <col:24> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
      | `-ParenExpr 0x139027cb8 <col:35, col:57> 'int' contains-errors
      |   `-BinaryOperator 0x139027c98 <col:36, col:56> 'int' contains-errors '<'
      |     |-DeclRefExpr 0x139027bb8 <col:36> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
      |     `-ParenExpr 0x139027c78 <col:40, col:56> '<dependent type>' contains-errors
      |       `-BinaryOperator 0x139027c58 <col:41, col:55> '<dependent type>' contains-errors '-'
      |         |-BinaryOperator 0x139027c18 <col:41, col:48> '<dependent type>' contains-errors '+'
      |         | |-DeclRefExpr 0x139027bd8 <col:41> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
      |         | `-RecoveryExpr 0x139027bf8 <col:48> '<dependent type>' contains-errors lvalue
      |         `-IntegerLiteral 0x139027c38 <col:55> 'int' 7
      |-<<<NULL>>>
      `-CompoundStmt 0x13902c050 <line:27:3, line:88:3>
        |-IfStmt 0x139027f90 <line:28:5, line:29:7>
        | |-BinaryOperator 0x139027f68 <line:28:9, col:53> 'int' '!='
        | | |-CallExpr 0x139027ef8 <col:9, col:48> 'int'
        | | | |-ImplicitCastExpr 0x139027ee0 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | | | | `-DeclRefExpr 0x139027dd8 <col:9> 'int ()' Function 0x139027d20 'LocaleNCompare' 'int ()'
        | | | |-CStyleCastExpr 0x139027e48 <col:24, col:39> 'const char *' <BitCast>
        | | | | `-ImplicitCastExpr 0x139027e30 <col:39> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
        | | | |   `-DeclRefExpr 0x139027df8 <col:39> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | | | |-ImplicitCastExpr 0x139027f30 <col:41> 'char *' <ArrayToPointerDecay>
        | | | | `-StringLiteral 0x139027e70 <col:41> 'char[4]' lvalue "STR"
        | | | `-IntegerLiteral 0x139027e90 <col:47> 'int' 4
        | | `-IntegerLiteral 0x139027f48 <col:53> 'int' 0
        | `-BreakStmt 0x139027f88 <line:29:7>
        |-CompoundAssignOperator 0x139027ff0 <line:30:5, col:8> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x139027fb0 <col:5> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | `-IntegerLiteral 0x139027fd0 <col:8> 'int' 4
        |-BinaryOperator 0x139028298 <line:31:5, col:37> 'const unsigned char *' contains-errors '='
        | |-DeclRefExpr 0x139028020 <col:5> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | `-CallExpr 0x139028260 <col:7, col:37> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x139028120 <col:7> 'int ()' Function 0x139028068 'PushShortPixel' 'int ()'
        |   |-RecoveryExpr 0x139028240 <col:22> '<dependent type>' contains-errors lvalue
        |   |-DeclRefExpr 0x139028158 <col:32> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        |   `-UnaryOperator 0x1390281d0 <col:34, col:35> 'unsigned short *' prefix '&' cannot overflow
        |     `-DeclRefExpr 0x139028178 <col:35> 'unsigned short' lvalue Var 0x13900e330 'id' 'unsigned short'
        |-BinaryOperator 0x13902a2e0 <line:32:5, col:35> 'const unsigned char *' '='
        | |-DeclRefExpr 0x1390282b8 <col:5> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | `-ImplicitCastExpr 0x13902a2c8 <col:7, col:35> 'const unsigned char *' <IntegralToPointer>
        |   `-CallExpr 0x13902a280 <col:7, col:35> 'int'
        |     |-ImplicitCastExpr 0x13902a268 <col:7> 'int (*)()' <FunctionToPointerDecay>
        |     | `-DeclRefExpr 0x1390283b8 <col:7> 'int ()' Function 0x139028300 'PushCharPixel' 'int ()'
        |     |-ImplicitCastExpr 0x13902a2b0 <col:21> 'const unsigned char *' <LValueToRValue>
        |     | `-DeclRefExpr 0x1390283d8 <col:21> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        |     `-UnaryOperator 0x13902a250 <col:23, col:24> 'unsigned char *' prefix '&' cannot overflow
        |       `-DeclRefExpr 0x13902a200 <col:24> 'unsigned char' lvalue Var 0x13900e200 'name_length' 'unsigned char'
        |-IfStmt 0x13902a428 <line:33:5, line:34:18>
        | |-BinaryOperator 0x13902a3d0 <line:33:9, col:30> 'int' '=='
        | | |-ParenExpr 0x13902a390 <col:9, col:25> 'int'
        | | | `-BinaryOperator 0x13902a370 <col:10, col:24> 'int' '%'
        | | |   |-ImplicitCastExpr 0x13902a358 <col:10> 'int' <IntegralCast>
        | | |   | `-ImplicitCastExpr 0x13902a340 <col:10> 'unsigned char' <LValueToRValue>
        | | |   |   `-DeclRefExpr 0x13902a300 <col:10> 'unsigned char' lvalue Var 0x13900e200 'name_length' 'unsigned char'
        | | |   `-IntegerLiteral 0x13902a320 <col:24> 'int' 2
        | | `-IntegerLiteral 0x13902a3b0 <col:30> 'int' 0
        | `-UnaryOperator 0x13902a410 <line:34:7, col:18> 'unsigned char' postfix '++' cannot overflow
        |   `-DeclRefExpr 0x13902a3f0 <col:7> 'unsigned char' lvalue Var 0x13900e200 'name_length' 'unsigned char'
        |-CompoundAssignOperator 0x13902a4b8 <line:35:5, col:8> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x13902a448 <col:5> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | `-ImplicitCastExpr 0x13902a4a0 <col:8> 'int' <IntegralCast>
        |   `-ImplicitCastExpr 0x13902a488 <col:8> 'unsigned char' <LValueToRValue>
        |     `-DeclRefExpr 0x13902a468 <col:8> 'unsigned char' lvalue Var 0x13900e200 'name_length' 'unsigned char'
        |-IfStmt 0x13902a5f0 <line:36:5, line:37:7>
        | |-BinaryOperator 0x13902a5c8 <line:36:9, col:29> 'int' contains-errors '>'
        | | |-DeclRefExpr 0x13902a4e8 <col:9> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | | `-ParenExpr 0x13902a5a8 <col:13, col:29> '<dependent type>' contains-errors
        | |   `-BinaryOperator 0x13902a588 <col:14, col:28> '<dependent type>' contains-errors '-'
        | |     |-BinaryOperator 0x13902a548 <col:14, col:21> '<dependent type>' contains-errors '+'
        | |     | |-DeclRefExpr 0x13902a508 <col:14> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
        | |     | `-RecoveryExpr 0x13902a528 <col:21> '<dependent type>' contains-errors lvalue
        | |     `-IntegerLiteral 0x13902a568 <col:28> 'int' 4
        | `-BreakStmt 0x13902a5e8 <line:37:7>
        |-IfStmt 0x13902a910 <line:39:5, line:40:7>
        | |-BinaryOperator 0x13902a8e8 <line:39:9, col:35> 'int' contains-errors '>'
        | | |-ParenExpr 0x13902a848 <col:9, col:17> 'const unsigned char *'
        | | | `-BinaryOperator 0x13902a828 <col:10, col:12> 'const unsigned char *' '+'
        | | |   |-ImplicitCastExpr 0x13902a7f8 <col:10> 'const unsigned char *' <LValueToRValue>
        | | |   | `-DeclRefExpr 0x13902a7b8 <col:10> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        | | |   `-ImplicitCastExpr 0x13902a810 <col:12> 'unsigned int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x13902a7d8 <col:12> 'unsigned int' lvalue Var 0x13900e298 'count' 'unsigned int'
        | | `-ParenExpr 0x13902a8c8 <col:21, col:35> '<dependent type>' contains-errors
        | |   `-BinaryOperator 0x13902a8a8 <col:22, col:29> '<dependent type>' contains-errors '+'
        | |     |-DeclRefExpr 0x13902a868 <col:22> 'const unsigned char *' lvalue ParmVar 0x13900ddd8 'blocks' 'const unsigned char *'
        | |     `-RecoveryExpr 0x13902a888 <col:29> '<dependent type>' contains-errors lvalue
        | `-BreakStmt 0x13902a908 <line:40:7>
        |-SwitchStmt 0x13902a980 <line:41:5, line:85:5>
        | |-ImplicitCastExpr 0x13902a968 <line:41:13> 'int' <IntegralCast>
        | | `-ImplicitCastExpr 0x13902a950 <col:13> 'unsigned short' <LValueToRValue>
        | |   `-DeclRefExpr 0x13902a930 <col:13> 'unsigned short' lvalue Var 0x13900e330 'id' 'unsigned short'
        | `-CompoundStmt 0x13902bec8 <line:42:5, line:85:5>
        |   |-CaseStmt 0x13902a9e0 <line:43:7, line:72:7>
        |   | |-ConstantExpr 0x13902a9c8 <line:43:12> 'int'
        |   | | `-IntegerLiteral 0x13902a9a8 <col:12> 'int' 1005
        |   | `-CompoundStmt 0x13902ba38 <line:44:7, line:72:7>
        |   |   |-DeclStmt 0x13902aa80 <line:45:9, line:46:34>
        |   |   | `-VarDecl 0x13902aa18 <line:45:9, line:46:11> col:11 invalid value 'char'
        |   |   |-DeclStmt 0x13902ab18 <line:48:9, line:49:21>
        |   |   | `-VarDecl 0x13902aab0 <line:48:9, line:49:11> col:11 used resolution 'unsigned short'
        |   |   |-IfStmt 0x13902abc8 <line:52:9, line:53:11>
        |   |   | |-BinaryOperator 0x13902aba0 <line:52:13, col:21> 'int' '<'
        |   |   | | |-ImplicitCastExpr 0x13902ab70 <col:13> 'unsigned int' <LValueToRValue>
        |   |   | | | `-DeclRefExpr 0x13902ab30 <col:13> 'unsigned int' lvalue Var 0x13900e298 'count' 'unsigned int'
        |   |   | | `-ImplicitCastExpr 0x13902ab88 <col:21> 'unsigned int' <IntegralCast>
        |   |   | |   `-IntegerLiteral 0x13902ab50 <col:21> 'int' 16
        |   |   | `-BreakStmt 0x13902abc0 <line:53:11>
        |   |   |-BinaryOperator 0x13902add0 <line:55:9, col:38> '<dependent type>' contains-errors '='
        |   |   | |-CXXDependentScopeMemberExpr 0x13902ad10 <col:9, col:27> '<dependent type>' contains-errors lvalue .x
        |   |   | | `-CXXDependentScopeMemberExpr 0x13902acc8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->resolution
        |   |   | |   `-RecoveryExpr 0x13902aca0 <col:9> '<dependent type>' contains-errors lvalue
        |   |   | |     `-DeclRefExpr 0x13902ac80 <col:9> 'int *' lvalue ParmVar 0x13900dd28 'image' 'int *'
        |   |   | `-CStyleCastExpr 0x13902ada8 <col:29, col:38> 'double' <IntegralToFloating>
        |   |   |   `-ImplicitCastExpr 0x13902ad90 <col:38> 'unsigned short' <LValueToRValue> part_of_explicit_cast
        |   |   |     `-DeclRefExpr 0x13902ad58 <col:38> 'unsigned short' lvalue Var 0x13902aab0 'resolution' 'unsigned short'
        |   |   |-CStyleCastExpr 0x13902b1b0 <line:58:9, col:60> 'void' contains-errors <ToVoid>
        |   |   | `-CallExpr 0x13902b160 <col:16, col:60> '<dependent type>' contains-errors
        |   |   |   |-DeclRefExpr 0x13902b0c0 <col:16> 'int ()' Function 0x13902b008 'SetImageProperty' 'int ()'
        |   |   |   |-RecoveryExpr 0x13902b0e0 <col:33> '<dependent type>' contains-errors lvalue
        |   |   |   |-StringLiteral 0x13902b100 <col:39> 'char[4]' lvalue "STR"
        |   |   |   |-RecoveryExpr 0x13902b120 <col:45> '<dependent type>' contains-errors lvalue
        |   |   |   `-RecoveryExpr 0x13902b140 <col:51> '<dependent type>' contains-errors lvalue
        |   |   |-BinaryOperator 0x13902b590 <line:63:9, col:38> '<dependent type>' contains-errors '='
        |   |   | |-CXXDependentScopeMemberExpr 0x13902b4d0 <col:9, col:27> '<dependent type>' contains-errors lvalue .y
        |   |   | | `-CXXDependentScopeMemberExpr 0x13902b488 <col:9, col:16> '<dependent type>' contains-errors lvalue ->resolution
        |   |   | |   `-RecoveryExpr 0x13902b460 <col:9> '<dependent type>' contains-errors lvalue
        |   |   | |     `-DeclRefExpr 0x13902b440 <col:9> 'int *' lvalue ParmVar 0x13900dd28 'image' 'int *'
        |   |   | `-CStyleCastExpr 0x13902b568 <col:29, col:38> 'double' <IntegralToFloating>
        |   |   |   `-ImplicitCastExpr 0x13902b550 <col:38> 'unsigned short' <LValueToRValue> part_of_explicit_cast
        |   |   |     `-DeclRefExpr 0x13902b518 <col:38> 'unsigned short' lvalue Var 0x13902aab0 'resolution' 'unsigned short'
        |   |   |-CStyleCastExpr 0x13902b7b0 <line:66:9, col:60> 'void' contains-errors <ToVoid>
        |   |   | `-CallExpr 0x13902b760 <col:16, col:60> '<dependent type>' contains-errors
        |   |   |   |-DeclRefExpr 0x13902b6c0 <col:16> 'int ()' Function 0x13902b008 'SetImageProperty' 'int ()'
        |   |   |   |-RecoveryExpr 0x13902b6e0 <col:33> '<dependent type>' contains-errors lvalue
        |   |   |   |-StringLiteral 0x13902b700 <col:39> 'char[4]' lvalue "STR"
        |   |   |   |-RecoveryExpr 0x13902b720 <col:45> '<dependent type>' contains-errors lvalue
        |   |   |   `-RecoveryExpr 0x13902b740 <col:51> '<dependent type>' contains-errors lvalue
        |   |   `-BreakStmt 0x13902ba30 <line:71:9>
        |   |-CaseStmt 0x13902bac0 <line:73:7, line:79:7>
        |   | |-ConstantExpr 0x13902baa8 <line:73:12> 'int'
        |   | | `-IntegerLiteral 0x13902ba88 <col:12> 'int' 1057
        |   | `-CompoundStmt 0x13902bdd8 <line:74:7, line:79:7>
        |   |   |-CompoundAssignOperator 0x13902bda0 <line:77:9, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        |   |   | |-DeclRefExpr 0x13902bd48 <col:9> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        |   |   | `-ImplicitCastExpr 0x13902bd88 <col:12> 'unsigned int' <LValueToRValue>
        |   |   |   `-DeclRefExpr 0x13902bd68 <col:12> 'unsigned int' lvalue Var 0x13900e298 'count' 'unsigned int'
        |   |   `-BreakStmt 0x13902bdd0 <line:78:9>
        |   `-DefaultStmt 0x13902bea8 <line:80:7, line:84:7>
        |     `-CompoundStmt 0x13902be88 <line:81:7, line:84:7>
        |       |-CompoundAssignOperator 0x13902be50 <line:82:9, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        |       | |-DeclRefExpr 0x13902bdf8 <col:9> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
        |       | `-ImplicitCastExpr 0x13902be38 <col:12> 'unsigned int' <LValueToRValue>
        |       |   `-DeclRefExpr 0x13902be18 <col:12> 'unsigned int' lvalue Var 0x13900e298 'count' 'unsigned int'
        |       `-BreakStmt 0x13902be80 <line:83:9>
        `-IfStmt 0x13902c030 <line:86:5, line:87:8>
          |-BinaryOperator 0x13902bfd8 <line:86:9, col:27> 'int' '!='
          | |-ParenExpr 0x13902bf80 <col:9, col:22> 'unsigned int'
          | | `-BinaryOperator 0x13902bf60 <col:10, col:18> 'unsigned int' '&'
          | |   |-ImplicitCastExpr 0x13902bf30 <col:10> 'unsigned int' <LValueToRValue>
          | |   | `-DeclRefExpr 0x13902bef0 <col:10> 'unsigned int' lvalue Var 0x13900e298 'count' 'unsigned int'
          | |   `-ImplicitCastExpr 0x13902bf48 <col:18> 'unsigned int' <IntegralCast>
          | |     `-IntegerLiteral 0x13902bf10 <col:18> 'int' 1
          | `-ImplicitCastExpr 0x13902bfc0 <col:27> 'unsigned int' <IntegralCast>
          |   `-IntegerLiteral 0x13902bfa0 <col:27> 'int' 0
          `-UnaryOperator 0x13902c018 <line:87:7, col:8> 'const unsigned char *' postfix '++'
            `-DeclRefExpr 0x13902bff8 <col:7> 'const unsigned char *' lvalue Var 0x13900e150 'p' 'const unsigned char *'
