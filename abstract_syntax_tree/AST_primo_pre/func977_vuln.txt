`-FunctionDecl 0x12b128288  line:1:14 invalid utf2char 'char *(int *, char *)' static
  |-ParmVarDecl 0x12b128128 <col:23, col:32> col:32 referenced invalid str 'int *'
  |-ParmVarDecl 0x12b1281a8 <col:37, col:43> col:43 used buffer 'char *'
  `-CompoundStmt 0x12c00b010 <line:2:1, line:12:1>
    |-DeclStmt 0x12b1283f8 <line:3:3, col:19>
    | `-VarDecl 0x12b128358 <col:3, col:13> col:9 used b 'char *' cinit
    |   `-ImplicitCastExpr 0x12b1283e0 <col:13> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x12b1283c0 <col:13> 'char *' lvalue ParmVar 0x12b1281a8 'buffer' 'char *'
    |-WhileStmt 0x12b1286f8 <line:5:3, line:9:3>
    | |-BinaryOperator 0x12b128480 <line:5:10, col:18> 'int' contains-errors '!='
    | | |-UnaryOperator 0x12b128448 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x12b128430 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x12b128410 <col:11> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12b128460 <col:18> 'int' 0
    | `-CompoundStmt 0x12b1286d0 <col:24, line:9:3>
    |   |-DeclStmt 0x12b128580 <line:6:5, col:28>
    |   | `-VarDecl 0x12b1284b8 <col:5, col:25> col:11 used chr 'char *' cinit
    |   |   `-CStyleCastExpr 0x12b128558 <col:17, col:25> 'char *' contains-errors <Dependent>
    |   |     `-RecoveryExpr 0x12b128520 <col:25> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x12b128650 <line:7:5, col:13> 'char' contains-errors '='
    |   | |-UnaryOperator 0x12b1285d0 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x12b1285b8 <col:6, col:7> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x12b128598 <col:6> 'char *' lvalue Var 0x12b128358 'b' 'char *'
    |   | `-ImplicitCastExpr 0x12b128638 <col:12, col:13> 'char' contains-errors <LValueToRValue>
    |   |   `-UnaryOperator 0x12b128620 <col:12, col:13> 'char' contains-errors lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x12b128608 <col:13> 'char *' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x12b1285e8 <col:13> 'char *' contains-errors lvalue Var 0x12b1284b8 'chr' 'char *'
    |   `-UnaryOperator 0x12b1286b8 <line:8:5, col:8> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-RecoveryExpr 0x12b128690 <col:5> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12b128670 <col:5> 'int *' lvalue ParmVar 0x12b128128 'str' 'int *'
    |-BinaryOperator 0x12b1287a0 <line:10:3, col:8> 'char' '='
    | |-UnaryOperator 0x12b128750 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12b128738 <col:4> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12b128718 <col:4> 'char *' lvalue Var 0x12b128358 'b' 'char *'
    | `-ImplicitCastExpr 0x12b128788 <col:8> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x12b128768 <col:8> 'int' 0
    `-ReturnStmt 0x12c00b000 <line:11:3, col:10>
      `-ImplicitCastExpr 0x12b1287e0 <col:10> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x12b1287c0 <col:10> 'char *' lvalue ParmVar 0x12b1281a8 'buffer' 'char *'
