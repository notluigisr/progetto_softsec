`-FunctionDecl 0x145941838  line:1:12 invalid map_update_elem 'int (union bpf_attr *, int)' static
  |-ParmVarDecl 0x145928648 <col:28, col:44> col:44 used attr 'union bpf_attr *'
  |-ParmVarDecl 0x1459286e0 <col:50, col:59> col:59 invalid uattr 'int'
  `-CompoundStmt 0x145944530 <line:2:1, line:56:1>
    |-DeclStmt 0x1459419d0 <line:5:2, col:24>
    | `-VarDecl 0x145941908 <col:2, col:18> col:6 used ufd 'int' cinit
    |   `-RecoveryExpr 0x1459419a8 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x145941970 <col:12> 'union bpf_attr *' lvalue ParmVar 0x145928648 'attr' 'union bpf_attr *'
    |-DeclStmt 0x145941bd8 <line:6:2, col:21>
    | |-RecordDecl 0x1459419e8 <col:2, col:9> col:9 struct bpf_map
    | `-VarDecl 0x145941b58 <col:2, col:18> col:18 used map 'struct bpf_map *'
    |-DeclStmt 0x145941d08 <line:7:2, col:19>
    | |-VarDecl 0x145941c08 <col:2, col:8> col:8 used key 'void *'
    | `-VarDecl 0x145941c88 <col:2, col:14> col:14 used value 'void *'
    |-DeclStmt 0x145941e98 <line:9:2, col:13>
    | |-RecordDecl 0x145941d20 <col:2, col:9> col:9 struct fd
    | `-VarDecl 0x145941e18 <col:2, col:12> col:12 referenced invalid f 'struct fd'
    |-DeclStmt 0x145941f30 <line:10:2, col:9>
    | `-VarDecl 0x145941ec8 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x1459421f0 <line:12:2, line:13:11>
    | |-CallExpr 0x145942120 <line:12:6, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1459420a0 <col:6> 'int ()' Function 0x145941fe8 'CHECK_ATTR' 'int ()'
    | | `-RecoveryExpr 0x145942100 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1459421e0 <line:13:3, col:11>
    |   `-UnaryOperator 0x1459421c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1459421b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x145942190 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x145942408 <line:15:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x145942230 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x145942210 <col:2> 'struct fd' lvalue Var 0x145941e18 'f' 'struct fd'
    | `-CallExpr 0x1459423c8 <col:6, col:15> 'int' contains-errors
    |   |-ImplicitCastExpr 0x1459423b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x145942338 <col:6> 'int ()' Function 0x145942280 'fdget' 'int ()'
    |   `-ImplicitCastExpr 0x1459423f0 <col:12> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x145942358 <col:12> 'int' contains-errors lvalue Var 0x145941908 'ufd' 'int'
    |-BinaryOperator 0x145942590 <line:16:2, col:23> 'struct bpf_map *' contains-errors '='
    | |-DeclRefExpr 0x145942428 <col:2> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'
    | `-CallExpr 0x145942568 <col:8, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145942528 <col:8> 'int ()' Function 0x145942470 '__bpf_map_get' 'int ()'
    |   `-RecoveryExpr 0x145942548 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145942eb8 <line:17:2, line:18:21>
    | |-CallExpr 0x1459426e8 <line:17:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x1459426d0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x145942690 <col:6> 'int ()' Function 0x1459425d8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x145942710 <col:13> 'struct bpf_map *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1459426b0 <col:13> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'
    | `-ReturnStmt 0x145942ea8 <line:18:3, col:21>
    |   `-CallExpr 0x145942e68 <col:10, col:21> 'int'
    |     |-ImplicitCastExpr 0x145942e50 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x145942e10 <col:10> 'int ()' Function 0x145942750 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x145942e90 <col:18> 'struct bpf_map *' <LValueToRValue>
    |       `-DeclRefExpr 0x145942e30 <col:18> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'
    |-IfStmt 0x145943220 <line:19:2, line:22:2>
    | |-RecoveryExpr 0x145943080 <line:19:6, col:51> '_Bool' contains-errors
    | `-CompoundStmt 0x145943200 <col:54, line:22:2>
    |   |-BinaryOperator 0x145943178 <line:20:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1459430a0 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'
    |   | `-UnaryOperator 0x145943160 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x145943148 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x145943128 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x1459431e8 <line:21:3, col:8> 'err_put' 0x145943198
    |-IfStmt 0x1459435b8 <line:24:2, line:28:2>
    | |-RecoveryExpr 0x145943468 <line:24:6, line:25:34> '_Bool' contains-errors
    | `-CompoundStmt 0x145943598 <col:37, line:28:2>
    |   |-BinaryOperator 0x145943560 <line:26:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x145943488 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'
    |   | `-UnaryOperator 0x145943548 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x145943530 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x145943510 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x145943580 <line:27:3, col:8> 'err_put' 0x145943198
    |-IfStmt 0x145943900 <line:31:2, line:34:2>
    | |-CallExpr 0x1459437b0 <line:31:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x145943798 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x145943758 <col:6> 'int ()' Function 0x1459425d8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x1459437d8 <col:13> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x145943778 <col:13> 'void *' lvalue Var 0x145941c08 'key' 'void *'
    | `-CompoundStmt 0x1459438e0 <col:19, line:34:2>
    |   |-BinaryOperator 0x1459438a8 <line:32:3, col:20> 'int' '='
    |   | |-DeclRefExpr 0x1459437f0 <col:3> 'int' lvalue Var 0x145941ec8 'err' 'int'
    |   | `-CallExpr 0x145943868 <col:9, col:20> 'int'
    |   |   |-ImplicitCastExpr 0x145943850 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x145943810 <col:9> 'int ()' Function 0x145942750 'PTR_ERR' 'int ()'
    |   |   `-ImplicitCastExpr 0x145943890 <col:17> 'void *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x145943830 <col:17> 'void *' lvalue Var 0x145941c08 'key' 'void *'
    |   `-GotoStmt 0x1459438c8 <line:33:3, col:8> 'err_put' 0x145943198
    |-IfStmt 0x145943c90 <line:40:2, line:41:8>
    | |-UnaryOperator 0x145943c10 <line:40:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x145943bf8 <col:7> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x145943bd8 <col:7> 'void *' lvalue Var 0x145941c88 'value' 'void *'
    | `-GotoStmt 0x145943c78 <line:41:3, col:8> 'free_key' 0x145943c28
    |-IfStmt 0x145943ea8 <line:44:2, line:45:8>
    | |-RecoveryExpr 0x145943e20 <line:44:6, col:53> '_Bool' contains-errors
    | `-GotoStmt 0x145943e90 <line:45:3, col:8> 'free_value' 0x145943e40
    |-BinaryOperator 0x145944110 <line:47:2, col:60> 'int' contains-errors '='
    | |-DeclRefExpr 0x145943ec8 <col:2> 'int' lvalue Var 0x145941ec8 'err' 'int'
    | `-CallExpr 0x1459440c8 <col:8, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145943fc8 <col:8> 'int ()' Function 0x145943f10 'bpf_map_update_value' 'int ()'
    |   |-DeclRefExpr 0x145943fe8 <col:29> 'struct bpf_map *' lvalue Var 0x145941b58 'map' 'struct bpf_map *'
    |   |-RecoveryExpr 0x145944008 <col:34> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x145944028 <col:37> 'void *' lvalue Var 0x145941c08 'key' 'void *'
    |   |-DeclRefExpr 0x145944048 <col:42> 'void *' lvalue Var 0x145941c88 'value' 'void *'
    |   `-RecoveryExpr 0x1459440a0 <col:49, col:55> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x145944068 <col:49> 'union bpf_attr *' lvalue ParmVar 0x145928648 'attr' 'union bpf_attr *'
    |-LabelStmt 0x1459442a8 <line:49:1, line:50:14> 'free_value'
    | `-CallExpr 0x145944268 <col:2, col:14> 'int'
    |   |-ImplicitCastExpr 0x145944250 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x145944210 <col:2> 'int ()' Function 0x145944158 'kvfree' 'int ()'
    |   `-ImplicitCastExpr 0x145944290 <col:9> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x145944230 <col:9> 'void *' lvalue Var 0x145941c88 'value' 'void *'
    |-LabelStmt 0x145944360 <line:51:1, line:52:12> 'free_key'
    | `-CallExpr 0x145944320 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x145944308 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1459442c8 <col:2> 'int ()' Function 0x145944158 'kvfree' 'int ()'
    |   `-ImplicitCastExpr 0x145944348 <col:9> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x1459442e8 <col:9> 'void *' lvalue Var 0x145941c08 'key' 'void *'
    |-LabelStmt 0x1459444c8 <line:53:1, line:54:9> 'err_put'
    | `-CallExpr 0x1459444a0 <col:2, col:9> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145944460 <col:2> 'int ()' Function 0x1459443a8 'fdput' 'int ()'
    |   `-RecoveryExpr 0x145944480 <col:8> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x145944520 <line:55:2, col:9>
      `-ImplicitCastExpr 0x145944508 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1459444e8 <col:9> 'int' lvalue Var 0x145941ec8 'err' 'int'
