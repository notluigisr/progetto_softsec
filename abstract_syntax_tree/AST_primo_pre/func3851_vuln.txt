`-FunctionDecl 0x13a00e358  line:1:12 map_lookup_and_delete_elem 'int (union bpf_attr *)' static
  |-ParmVarDecl 0x13a00e248 <col:39, col:55> col:55 used attr 'union bpf_attr *'
  `-CompoundStmt 0x13992b608 <line:2:1, line:88:1>
    |-DeclStmt 0x13a0266c8 <line:3:2, col:14>
    | `-VarDecl 0x13a026660 <col:2, col:7> col:7 invalid __user 'void'
    |-DeclStmt 0x13a026758 <line:4:2, col:14>
    | `-VarDecl 0x13a0266f0 <col:2, col:7> col:7 invalid __user 'void'
    |-DeclStmt 0x13a026850 <line:5:2, col:24>
    | `-VarDecl 0x13a026788 <col:2, col:18> col:6 used ufd 'int' cinit
    |   `-RecoveryExpr 0x13a026828 <col:12, col:18> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13a0267f0 <col:12> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'
    |-DeclStmt 0x13a026a58 <line:6:2, col:21>
    | |-RecordDecl 0x13a026868 <col:2, col:9> col:9 struct bpf_map
    | `-VarDecl 0x13a0269d8 <col:2, col:18> col:18 used map 'struct bpf_map *'
    |-DeclStmt 0x13a026b88 <line:7:2, col:19>
    | |-VarDecl 0x13a026a88 <col:2, col:8> col:8 used key 'void *'
    | `-VarDecl 0x13a026b08 <col:2, col:14> col:14 used value 'void *'
    |-DeclStmt 0x13a026d38 <line:9:2, col:13>
    | |-RecordDecl 0x13a026bb8 <col:2, col:9> col:9 struct fd
    | `-VarDecl 0x13a026cb8 <col:2, col:12> col:12 referenced invalid f 'struct fd'
    |-DeclStmt 0x13a026dd0 <line:10:2, col:9>
    | `-VarDecl 0x13a026d68 <col:2, col:6> col:6 used err 'int'
    |-IfStmt 0x13a027050 <line:12:2, line:13:11>
    | |-CallExpr 0x13a026f80 <line:12:6, col:47> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13a026f00 <col:6> 'int ()' Function 0x13a026e48 'CHECK_ATTR' 'int ()'
    | | `-RecoveryExpr 0x13a026f60 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13a027040 <line:13:3, col:11>
    |   `-UnaryOperator 0x13a027028 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13a027010 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13a026ff0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13a027250 <line:15:2, line:16:11>
    | |-BinaryOperator 0x13a027188 <line:15:6, col:21> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x13a0270a8 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x13a027070 <col:6> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'
    | | `-UnaryOperator 0x13a027170 <col:20, col:21> '<dependent type>' contains-errors prefix '~' cannot overflow
    | |   `-ImplicitCastExpr 0x13a027158 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x13a027138 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13a027240 <line:16:3, col:11>
    |   `-UnaryOperator 0x13a027228 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13a027210 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13a0271f0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13a027468 <line:18:2, col:15> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13a027290 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13a027270 <col:2> 'struct fd' lvalue Var 0x13a026cb8 'f' 'struct fd'
    | `-CallExpr 0x13a027428 <col:6, col:15> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13a027410 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13a027398 <col:6> 'int ()' Function 0x13a0272e0 'fdget' 'int ()'
    |   `-ImplicitCastExpr 0x13a027450 <col:12> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x13a0273b8 <col:12> 'int' contains-errors lvalue Var 0x13a026788 'ufd' 'int'
    |-BinaryOperator 0x139924c00 <line:19:2, col:23> 'struct bpf_map *' contains-errors '='
    | |-DeclRefExpr 0x13a027488 <col:2> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    | `-CallExpr 0x13a0275c8 <col:8, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13a027588 <col:8> 'int ()' Function 0x13a0274d0 '__bpf_map_get' 'int ()'
    |   `-RecoveryExpr 0x13a0275a8 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139924f20 <line:20:2, line:21:21>
    | |-CallExpr 0x139924d58 <line:20:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x139924d40 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x139924d00 <col:6> 'int ()' Function 0x139924c48 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x139924d80 <col:13> 'struct bpf_map *' <LValueToRValue>
    | |   `-DeclRefExpr 0x139924d20 <col:13> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    | `-ReturnStmt 0x139924f10 <line:21:3, col:21>
    |   `-CallExpr 0x139924ed0 <col:10, col:21> 'int'
    |     |-ImplicitCastExpr 0x139924eb8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x139924e78 <col:10> 'int ()' Function 0x139924dc0 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x139924ef8 <col:18> 'struct bpf_map *' <LValueToRValue>
    |       `-DeclRefExpr 0x139924e98 <col:18> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    |-IfStmt 0x139925270 <line:22:2, line:26:2>
    | |-RecoveryExpr 0x1399251b0 <line:22:6, line:23:51> '_Bool' contains-errors
    | `-CompoundStmt 0x139925258 <col:54, line:26:2>
    |   `-GotoStmt 0x139925240 <line:25:3, col:8> 'err_put' 0x1399251f0
    |-IfStmt 0x139925420 <line:28:2, line:33:2>
    | |-RecoveryExpr 0x1399253b0 <line:28:6, line:30:42> '_Bool' contains-errors
    | `-CompoundStmt 0x139925408 <col:45, line:33:2>
    |   `-GotoStmt 0x1399253f0 <line:32:3, col:8> 'err_put' 0x1399251f0
    |-IfStmt 0x1399256a0 <line:35:2, line:39:2>
    | |-RecoveryExpr 0x139925630 <line:35:6, line:36:34> '_Bool' contains-errors
    | `-CompoundStmt 0x139925688 <col:37, line:39:2>
    |   `-GotoStmt 0x139925670 <line:38:3, col:8> 'err_put' 0x1399251f0
    |-IfStmt 0x1399259e8 <line:42:2, line:45:2>
    | |-CallExpr 0x139925898 <line:42:6, col:16> 'int'
    | | |-ImplicitCastExpr 0x139925880 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x139925840 <col:6> 'int ()' Function 0x139924c48 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x1399258c0 <col:13> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x139925860 <col:13> 'void *' lvalue Var 0x13a026a88 'key' 'void *'
    | `-CompoundStmt 0x1399259c8 <col:19, line:45:2>
    |   |-BinaryOperator 0x139925990 <line:43:3, col:20> 'int' '='
    |   | |-DeclRefExpr 0x1399258d8 <col:3> 'int' lvalue Var 0x13a026d68 'err' 'int'
    |   | `-CallExpr 0x139925950 <col:9, col:20> 'int'
    |   |   |-ImplicitCastExpr 0x139925938 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1399258f8 <col:9> 'int ()' Function 0x139924dc0 'PTR_ERR' 'int ()'
    |   |   `-ImplicitCastExpr 0x139925978 <col:17> 'void *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x139925918 <col:17> 'void *' lvalue Var 0x13a026a88 'key' 'void *'
    |   `-GotoStmt 0x1399259b0 <line:44:3, col:8> 'err_put' 0x1399251f0
    |-IfStmt 0x139925d90 <line:51:2, line:52:8>
    | |-UnaryOperator 0x139925d10 <line:51:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x139925cf8 <col:7> 'void *' <LValueToRValue>
    | |   `-DeclRefExpr 0x139925cd8 <col:7> 'void *' lvalue Var 0x13a026b08 'value' 'void *'
    | `-GotoStmt 0x139925d78 <line:52:3, col:8> 'free_key' 0x139925d28
    |-IfStmt 0x139926aa8 <line:55:2, line:69:2> has_else
    | |-RecoveryExpr 0x139925e90 <line:55:6, line:56:23> '_Bool' contains-errors
    | |-CompoundStmt 0x139926008 <col:43, line:58:2>
    | | `-BinaryOperator 0x139925fe8 <line:57:3, col:42> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x139925eb0 <col:3> 'int' lvalue Var 0x13a026d68 'err' 'int'
    | |   `-CallExpr 0x139925fb8 <col:9, col:42> '<dependent type>' contains-errors
    | |     |-CXXDependentScopeMemberExpr 0x139925f30 <col:9, col:19> '<dependent type>' contains-errors lvalue ->map_pop_elem
    | |     | `-RecoveryExpr 0x139925f08 <col:9, col:14> '<dependent type>' contains-errors lvalue
    | |     |   `-DeclRefExpr 0x139925ed0 <col:9> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    | |     |-DeclRefExpr 0x139925f78 <col:32> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    | |     `-DeclRefExpr 0x139925f98 <col:37> 'void *' lvalue Var 0x13a026b08 'value' 'void *'
    | `-IfStmt 0x139926a88 <line:58:9, line:69:2>
    |   |-RecoveryExpr 0x1399261a0 <line:58:13, line:61:23> '_Bool' contains-errors
    |   `-CompoundStmt 0x139926a70 <col:53, line:69:2>
    |     `-IfStmt 0x139926a50 <line:62:3, line:68:3>
    |       |-UnaryOperator 0x139926338 <line:62:7, col:32> 'int' prefix '!' cannot overflow
    |       | `-CallExpr 0x1399262f8 <col:8, col:32> 'int'
    |       |   |-ImplicitCastExpr 0x1399262e0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1399262a0 <col:8> 'int ()' Function 0x1399261e8 'bpf_map_is_dev_bound' 'int ()'
    |       |   `-ImplicitCastExpr 0x139926320 <col:29> 'struct bpf_map *' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1399262c0 <col:29> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    |       `-CompoundStmt 0x139926a18 <col:35, line:68:3>
    |         |-CallExpr 0x139926468 <line:63:4, col:32> 'int'
    |         | `-ImplicitCastExpr 0x139926450 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         |   `-DeclRefExpr 0x139926430 <col:4> 'int ()' Function 0x139926378 'bpf_disable_instrumentation' 'int ()'
    |         |-CallExpr 0x1399265a0 <line:64:4, col:18> 'int'
    |         | `-ImplicitCastExpr 0x139926588 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         |   `-DeclRefExpr 0x139926568 <col:4> 'int ()' Function 0x1399264b0 'rcu_read_lock' 'int ()'
    |         |-BinaryOperator 0x139926788 <line:65:4, col:75> 'int' contains-errors '='
    |         | |-DeclRefExpr 0x1399265c0 <col:4> 'int' lvalue Var 0x13a026d68 'err' 'int'
    |         | `-CallExpr 0x139926748 <col:10, col:75> '<dependent type>' contains-errors
    |         |   |-CXXDependentScopeMemberExpr 0x139926640 <col:10, col:20> '<dependent type>' contains-errors lvalue ->map_lookup_and_delete_elem
    |         |   | `-RecoveryExpr 0x139926618 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |         |   |   `-DeclRefExpr 0x1399265e0 <col:10> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    |         |   |-DeclRefExpr 0x139926688 <col:47> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'
    |         |   |-DeclRefExpr 0x1399266a8 <col:52> 'void *' lvalue Var 0x13a026a88 'key' 'void *'
    |         |   |-DeclRefExpr 0x1399266c8 <col:57> 'void *' lvalue Var 0x13a026b08 'value' 'void *'
    |         |   `-RecoveryExpr 0x139926720 <col:64, col:70> '<dependent type>' contains-errors lvalue
    |         |     `-DeclRefExpr 0x1399266e8 <col:64> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'
    |         |-CallExpr 0x1399268c0 <line:66:4, col:20> 'int'
    |         | `-ImplicitCastExpr 0x1399268a8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         |   `-DeclRefExpr 0x139926888 <col:4> 'int ()' Function 0x1399267d0 'rcu_read_unlock' 'int ()'
    |         `-CallExpr 0x1399269f8 <line:67:4, col:31> 'int'
    |           `-ImplicitCastExpr 0x1399269e0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |             `-DeclRefExpr 0x1399269c0 <col:4> 'int ()' Function 0x139926908 'bpf_enable_instrumentation' 'int ()'
    |-IfStmt 0x139926b78 <line:71:2, line:72:8>
    | |-ImplicitCastExpr 0x139926af8 <line:71:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x139926ad8 <col:6> 'int' lvalue Var 0x13a026d68 'err' 'int'
    | `-GotoStmt 0x139926b60 <line:72:3, col:8> 'free_value' 0x139926b10
    |-IfStmt 0x13992b188 <line:74:2, line:77:2>
    | |-RecoveryExpr 0x13992b118 <line:74:6, col:49> '_Bool' contains-errors
    | `-CompoundStmt 0x13992b170 <col:52, line:77:2>
    |   `-GotoStmt 0x13992b158 <line:76:3, col:8> 'free_value' 0x139926b10
    |-BinaryOperator 0x13992b1e8 <line:79:2, col:8> 'int' '='
    | |-DeclRefExpr 0x13992b1a8 <col:2> 'int' lvalue Var 0x13a026d68 'err' 'int'
    | `-IntegerLiteral 0x13992b1c8 <col:8> 'int' 0
    |-LabelStmt 0x13992b380 <line:81:1, line:82:14> 'free_value'
    | `-CallExpr 0x13992b340 <col:2, col:14> 'int'
    |   |-ImplicitCastExpr 0x13992b328 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13992b2e8 <col:2> 'int ()' Function 0x13992b230 'kvfree' 'int ()'
    |   `-ImplicitCastExpr 0x13992b368 <col:9> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x13992b308 <col:9> 'void *' lvalue Var 0x13a026b08 'value' 'void *'
    |-LabelStmt 0x13992b438 <line:83:1, line:84:12> 'free_key'
    | `-CallExpr 0x13992b3f8 <col:2, col:12> 'int'
    |   |-ImplicitCastExpr 0x13992b3e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13992b3a0 <col:2> 'int ()' Function 0x13992b230 'kvfree' 'int ()'
    |   `-ImplicitCastExpr 0x13992b420 <col:9> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x13992b3c0 <col:9> 'void *' lvalue Var 0x13a026a88 'key' 'void *'
    |-LabelStmt 0x13992b5a0 <line:85:1, line:86:9> 'err_put'
    | `-CallExpr 0x13992b578 <col:2, col:9> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13992b538 <col:2> 'int ()' Function 0x13992b480 'fdput' 'int ()'
    |   `-RecoveryExpr 0x13992b558 <col:8> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13992b5f8 <line:87:2, col:9>
      `-ImplicitCastExpr 0x13992b5e0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13992b5c0 <col:9> 'int' lvalue Var 0x13a026d68 'err' 'int'
