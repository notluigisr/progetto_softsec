`-FunctionDecl 0x12182ae00  line:1:6 sequencer_release 'void (int, struct file *)'
  |-ParmVarDecl 0x12180e2d8 <col:24, col:28> col:28 used dev 'int'
  |-ParmVarDecl 0x12180e8c8 <col:33, col:46> col:46 used file 'struct file *'
  `-CompoundStmt 0x122923200 <line:2:1, line:59:1>
    |-DeclStmt 0x12182af80 <line:3:2, col:7>
    | `-VarDecl 0x12182af18 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x12182b208 <line:4:2, col:33>
    | `-VarDecl 0x12182afb0 <col:2, col:32> col:6 used mode 'int' cinit
    |   `-CallExpr 0x12182b1c8 <col:13, col:32> 'int'
    |     |-ImplicitCastExpr 0x12182b1b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12182b140 <col:13> 'int ()' Function 0x12182b088 'translate_mode' 'int ()'
    |     `-ImplicitCastExpr 0x12182b1f0 <col:28> 'struct file *' <LValueToRValue>
    |       `-DeclRefExpr 0x12182b160 <col:28> 'struct file *' lvalue ParmVar 0x12180e8c8 'file' 'struct file *'
    |-BinaryOperator 0x12182b2b8 <line:6:2, col:15> 'int' '='
    | |-DeclRefExpr 0x12182b220 <col:2> 'int' lvalue ParmVar 0x12180e2d8 'dev' 'int'
    | `-BinaryOperator 0x12182b298 <col:8, col:15> 'int' '>>'
    |   |-ImplicitCastExpr 0x12182b280 <col:8> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12182b240 <col:8> 'int' lvalue ParmVar 0x12180e2d8 'dev' 'int'
    |   `-IntegerLiteral 0x12182b260 <col:15> 'int' 4
    |-CallExpr 0x12182b5f0 <line:8:2, col:24> 'int'
    | |-ImplicitCastExpr 0x12182b5d8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12182b3b8 <col:2> 'int ()' Function 0x12182b300 'DEB' 'int ()'
    | `-CallExpr 0x12182b578 <col:6, col:23> 'int'
    |   |-ImplicitCastExpr 0x12182b560 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12182b4b8 <col:6> 'int ()' Function 0x12182b400 'printk' 'int ()'
    |   |-ImplicitCastExpr 0x12182b5a8 <col:13> 'char *' <ArrayToPointerDecay>
    |   | `-StringLiteral 0x12182b520 <col:13> 'char[4]' lvalue "STR"
    |   `-ImplicitCastExpr 0x12182b5c0 <col:20> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12182b540 <col:20> 'int' lvalue ParmVar 0x12180e2d8 'dev' 'int'
    |-IfStmt 0x12182bda8 <line:12:2, line:21:2>
    | |-RecoveryExpr 0x12182b708 <line:12:6, col:55> '_Bool' contains-errors
    | `-CompoundStmt 0x12182bd90 <line:13:2, line:21:2>
    |   `-WhileStmt 0x12182bd70 <line:14:3, line:20:3>
    |     |-BinaryOperator 0x12182b998 <line:14:10, col:45> 'int' contains-errors '&&'
    |     | |-UnaryOperator 0x12182b940 <col:10, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | | `-CallExpr 0x12182b918 <col:11, col:33> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x12182b808 <col:11> 'int ()' Function 0x12182b750 'signal_pending' 'int ()'
    |     | |   `-RecoveryExpr 0x12182b8f8 <col:26> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x12182b978 <col:38, col:45> 'int' contains-errors '>'
    |     |   |-RecoveryExpr 0x12182b958 <col:38> '<dependent type>' contains-errors lvalue
    |     |   `-IntegerLiteral 0x12182b898 <col:45> 'int' 0
    |     `-CompoundStmt 0x12182bd50 <line:15:3, line:20:3>
    |       |-CallExpr 0x12182bad0 <line:16:6, col:15> 'int'
    |       | `-ImplicitCastExpr 0x12182bab8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |       |   `-DeclRefExpr 0x12182ba98 <col:6> 'int ()' Function 0x12182b9e0 'seq_sync' 'int ()'
    |       `-CallExpr 0x12182bd20 <line:17:5, line:18:18> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x12182bbd0 <line:17:5> 'int ()' Function 0x12182bb18 'interruptible_sleep_on_timeout' 'int ()'
    |         |-UnaryOperator 0x12182bcc8 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         | `-RecoveryExpr 0x12182bca8 <col:37> '<dependent type>' contains-errors lvalue
    |         `-BinaryOperator 0x12182bd00 <line:18:14, col:16> '<dependent type>' contains-errors '*'
    |           |-IntegerLiteral 0x12182bc20 <col:14> 'int' 3
    |           `-RecoveryExpr 0x12182bce0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x122922798 <line:23:2, line:24:25>
    | |-BinaryOperator 0x122922640 <line:23:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12182bdc8 <col:6> 'int' lvalue Var 0x12182afb0 'mode' 'int'
    | | `-RecoveryExpr 0x122922620 <col:14> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x122922778 <line:24:3, col:25> 'int'
    |   `-ImplicitCastExpr 0x122922760 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x122922740 <col:3> 'int ()' Function 0x122922688 'seq_drain_midi_queues' 'int ()'
    |-CallExpr 0x1229228d0 <line:25:2, col:12> 'int'
    | `-ImplicitCastExpr 0x1229228b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x122922898 <col:2> 'int ()' Function 0x1229227e0 'seq_reset' 'int ()'
    |-IfStmt 0x1229229e0 <line:26:2, line:27:25>
    | |-BinaryOperator 0x122922968 <line:26:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x1229228f0 <col:6> 'int' lvalue Var 0x12182afb0 'mode' 'int'
    | | `-RecoveryExpr 0x122922948 <col:14> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1229229c0 <line:27:3, col:25> 'int'
    |   `-ImplicitCastExpr 0x1229229a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x122922988 <col:3> 'int ()' Function 0x122922688 'seq_drain_midi_queues' 'int ()'
    |-ForStmt 0x122922f38 <line:29:2, line:41:2>
    | |-BinaryOperator 0x122922a40 <line:29:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x122922a00 <col:7> 'int' lvalue Var 0x12182af18 'i' 'int'
    | | `-IntegerLiteral 0x122922a20 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x122922ad8 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x122922a60 <col:14> 'int' lvalue Var 0x12182af18 'i' 'int'
    | | `-RecoveryExpr 0x122922ab8 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x122922b18 <col:32, col:33> 'int' postfix '++'
    | | `-DeclRefExpr 0x122922af8 <col:32> 'int' lvalue Var 0x12182af18 'i' 'int'
    | `-CompoundStmt 0x122922f20 <line:30:2, line:41:2>
    |   `-IfStmt 0x122922f00 <line:31:3, line:40:4>
    |     |-BinaryOperator 0x122922c78 <line:31:7, col:32> '<dependent type>' contains-errors '&'
    |     | |-RecoveryExpr 0x122922c00 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-ParenExpr 0x122922c58 <col:25, col:32> 'int'
    |     |   `-BinaryOperator 0x122922c38 <col:26, col:31> 'int' '<<'
    |     |     |-IntegerLiteral 0x122922b48 <col:26> 'int' 1
    |     |     `-ImplicitCastExpr 0x122922c20 <col:31> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x122922b68 <col:31> 'int' lvalue Var 0x12182af18 'i' 'int'
    |     `-IfStmt 0x122922ee0 <line:32:4, line:40:4>
    |       |-RecoveryExpr 0x122922cd0 <line:32:8, col:20> '_Bool' contains-errors
    |       `-CompoundStmt 0x122922ed0 <line:33:4, line:40:4>
    `-IfStmt 0x122923180 <line:51:2, line:54:2>
      |-RecoveryExpr 0x122923130 <line:51:6, col:18> '_Bool' contains-errors
      `-CompoundStmt 0x122923170 <col:25, line:54:2>
