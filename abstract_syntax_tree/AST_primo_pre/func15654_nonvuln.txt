`-FunctionDecl 0x1238276a8  line:2:16 invalid slab_attr_store 'int (struct kobject *, struct attribute *, const char *, int)' static
  |-ParmVarDecl 0x12380e268 <col:32, col:48> col:48 used kobj 'struct kobject *'
  |-ParmVarDecl 0x123827458 <line:3:5, col:23> col:23 used attr 'struct attribute *'
  |-ParmVarDecl 0x1238274d8 <line:4:5, col:17> col:17 used buf 'const char *'
  |-ParmVarDecl 0x123827558 <col:22, col:29> col:29 invalid len 'int'
  `-CompoundStmt 0x123828328 <line:5:1, line:18:13>
    |-DeclStmt 0x123827958 <line:6:2, col:34>
    | |-RecordDecl 0x123827770 <col:2, col:9> col:9 struct slab_attribute
    | `-VarDecl 0x1238278d8 <col:2, col:25> col:25 used attribute 'struct slab_attribute *'
    |-DeclStmt 0x123827b58 <line:7:2, col:22>
    | |-RecordDecl 0x123827970 <col:2, col:9> col:9 struct kmem_cache
    | `-VarDecl 0x123827ad8 <col:2, col:21> col:21 used s 'struct kmem_cache *'
    |-DeclStmt 0x123827bf0 <line:8:2, col:9>
    | `-VarDecl 0x123827b88 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x123827e60 <line:10:2, col:31> 'struct slab_attribute *' '='
    | |-DeclRefExpr 0x123827c08 <col:2> 'struct slab_attribute *' lvalue Var 0x1238278d8 'attribute' 'struct slab_attribute *'
    | `-ImplicitCastExpr 0x123827e48 <col:14, col:31> 'struct slab_attribute *' <IntegralToPointer>
    |   `-CallExpr 0x123827e08 <col:14, col:31> 'int'
    |     |-ImplicitCastExpr 0x123827df0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123827d80 <col:14> 'int ()' Function 0x123827cc8 'to_slab_attr' 'int ()'
    |     `-ImplicitCastExpr 0x123827e30 <col:27> 'struct attribute *' <LValueToRValue>
    |       `-DeclRefExpr 0x123827da0 <col:27> 'struct attribute *' lvalue ParmVar 0x123827458 'attr' 'struct attribute *'
    |-BinaryOperator 0x123828030 <line:11:2, col:18> 'struct kmem_cache *' '='
    | |-DeclRefExpr 0x123827e80 <col:2> 'struct kmem_cache *' lvalue Var 0x123827ad8 's' 'struct kmem_cache *'
    | `-ImplicitCastExpr 0x123828018 <col:6, col:18> 'struct kmem_cache *' <IntegralToPointer>
    |   `-CallExpr 0x123827fd8 <col:6, col:18> 'int'
    |     |-ImplicitCastExpr 0x123827fc0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123827f80 <col:6> 'int ()' Function 0x123827ec8 'to_slab' 'int ()'
    |     `-ImplicitCastExpr 0x123828000 <col:14> 'struct kobject *' <LValueToRValue>
    |       `-DeclRefExpr 0x123827fa0 <col:14> 'struct kobject *' lvalue ParmVar 0x12380e268 'kobj' 'struct kobject *'
    |-IfStmt 0x123828188 <line:13:2, line:14:11>
    | |-UnaryOperator 0x1238280c8 <line:13:6, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1238280b0 <col:7, col:18> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x123828088 <col:7, col:18> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x123828050 <col:7> 'struct slab_attribute *' lvalue Var 0x1238278d8 'attribute' 'struct slab_attribute *'
    | `-ReturnStmt 0x123828178 <line:14:3, col:11>
    |   `-UnaryOperator 0x123828160 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x123828148 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123828128 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1238282c0 <line:16:2, col:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x1238281a8 <col:2> 'int' lvalue Var 0x123827b88 'err' 'int'
    | `-CallExpr 0x123828288 <col:8, col:36> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x123828200 <col:8, col:19> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1238281c8 <col:8> 'struct slab_attribute *' lvalue Var 0x1238278d8 'attribute' 'struct slab_attribute *'
    |   |-DeclRefExpr 0x123828228 <col:25> 'struct kmem_cache *' lvalue Var 0x123827ad8 's' 'struct kmem_cache *'
    |   |-DeclRefExpr 0x123828248 <col:28> 'const char *' lvalue ParmVar 0x1238274d8 'buf' 'const char *'
    |   `-RecoveryExpr 0x123828268 <col:33> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x123828318 <line:18:2, col:9>
      `-ImplicitCastExpr 0x123828300 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1238282e0 <col:9> 'int' lvalue Var 0x123827b88 'err' 'int'
