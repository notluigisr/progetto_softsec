`-FunctionDecl 0x14900e350  line:1:13 blk_mq_delay_work_fn 'void (struct work_struct *)' static
  |-ParmVarDecl 0x14900e248 <col:34, col:54> col:54 used work 'struct work_struct *'
  `-CompoundStmt 0x149026e18 <line:2:1, line:9:1>
    |-DeclStmt 0x149026838 <line:3:2, col:28>
    | |-RecordDecl 0x149026648 <col:2, col:9> col:9 struct blk_mq_hw_ctx
    | `-VarDecl 0x1490267b8 <col:2, col:24> col:24 used hctx 'struct blk_mq_hw_ctx *'
    `-IfStmt 0x149026df8 <line:7:2, line:8:29>
      |-CallExpr 0x149026c20 <line:7:6, col:55> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x149026b20 <col:6> 'int ()' Function 0x149026a68 'test_and_clear_bit' 'int ()'
      | |-RecoveryExpr 0x149026c00 <col:25> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x149026bb8 <col:43, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   `-RecoveryExpr 0x149026b90 <col:44, col:50> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x149026b58 <col:44> 'struct blk_mq_hw_ctx *' lvalue Var 0x1490267b8 'hctx' 'struct blk_mq_hw_ctx *'
      `-CallExpr 0x149026db8 <line:8:3, col:29> 'int'
        |-ImplicitCastExpr 0x149026da0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x149026d30 <col:3> 'int ()' Function 0x149026c78 '__blk_mq_run_hw_queue' 'int ()'
        `-ImplicitCastExpr 0x149026de0 <col:25> 'struct blk_mq_hw_ctx *' <LValueToRValue>
          `-DeclRefExpr 0x149026d50 <col:25> 'struct blk_mq_hw_ctx *' lvalue Var 0x1490267b8 'hctx' 'struct blk_mq_hw_ctx *'
