`-FunctionDecl 0x13500de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x13500dd58 <col:6> col:6 SimpleRegexTest 'int'
  |-ParmVarDecl 0x13500dcd8 <col:23> col:23 PipeCharacterUsesInexactBoundsWithTwoPrefixes 'int'
  `-CompoundStmt 0x135026680 <col:70, line:7:1>
    |-DeclStmt 0x13500e168 <line:2:5, col:45>
    | `-VarDecl 0x13500df50 <col:5, col:44> col:10 testIndex 'int' auto cinit
    |   `-CallExpr 0x13500e148 <col:22, col:44> 'int'
    |     `-ImplicitCastExpr 0x13500e130 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x13500e0e0 <col:22> 'int ()' Function 0x13500e028 'buildSimpleIndexEntry' 'int ()'
    |-RecoveryExpr 0x13500e1b0 <line:3:5> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x13500e200 <line:4:5> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x135026600 <line:5:5, col:29> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13500e300 <col:5> 'int ()' Function 0x13500e248 'ASSERT_EQUALS' 'int ()'
      |-RecoveryExpr 0x13500e3c8 <col:19> '<dependent type>' contains-errors lvalue
      `-StringLiteral 0x13500e380 <col:27> 'char[1]' lvalue ""
