`-FunctionDecl 0x12910bff8  line:1:21 invalid sc_html_read_line 'int (int *)' static
  |-ParmVarDecl 0x12910bf28 <col:39, col:54> col:54 referenced invalid parser 'int *'
  `-CompoundStmt 0x12881a4a0 <line:2:1, line:36:1>
    |-DeclStmt 0x12910c138 <line:3:2, col:27>
    | `-VarDecl 0x12910c0d0 <col:2, col:8> col:8 referenced invalid buf 'char'
    |-DeclStmt 0x12910c1e0 <line:4:2, col:28>
    | `-VarDecl 0x12910c178 <col:2, col:8> col:8 invalid buf2 'char'
    |-DeclStmt 0x12910c278 <line:5:2, col:12>
    | `-VarDecl 0x12910c210 <col:2, col:7> col:7 used index 'int'
    |-DeclStmt 0x12910c310 <line:6:2, col:8>
    | `-VarDecl 0x12910c2a8 <col:2, col:7> col:7 used n 'int'
    |-IfStmt 0x12910c450 <line:8:2, line:9:10>
    | |-BinaryOperator 0x12910c3e8 <line:8:6, col:20> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x12910c348 <col:6, col:14> '<dependent type>' contains-errors lvalue ->fp
    | | | `-RecoveryExpr 0x12910c328 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12910c3c8 <col:20> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12910c440 <line:9:3, col:10>
    |   `-RecoveryExpr 0x12910c420 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x129125768 <line:11:2, col:43> 'int' contains-errors '='
    | |-DeclRefExpr 0x12910c470 <col:2> 'int' lvalue Var 0x12910c2a8 'n' 'int'
    | `-CallExpr 0x129125728 <col:6, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129125600 <col:6> 'int ()' Function 0x12910c538 'fread' 'int ()'
    |   |-RecoveryExpr 0x129125620 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x129125640 <col:17> 'int' 1
    |   |-UnaryExprOrTypeTraitExpr 0x1291256a0 <col:20, col:30> 'unsigned long' contains-errors sizeof
    |   | `-ParenExpr 0x129125680 <col:26, col:30> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x129125660 <col:27> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x1291256e0 <col:33, col:41> '<dependent type>' contains-errors lvalue ->fp
    |     `-RecoveryExpr 0x1291256c0 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129125a60 <line:12:2, line:16:12> has_else
    | |-BinaryOperator 0x1291257e0 <line:12:6, col:11> 'int' '=='
    | | |-ImplicitCastExpr 0x1291257c8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x129125788 <col:6> 'int' lvalue Var 0x12910c2a8 'n' 'int'
    | | `-IntegerLiteral 0x1291257a8 <col:11> 'int' 0
    | |-CompoundStmt 0x129125950 <col:14, line:15:2>
    | | |-BinaryOperator 0x1291258e8 <line:13:3, col:19> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x129125848 <col:3, col:11> '<dependent type>' contains-errors lvalue ->state
    | | | | `-RecoveryExpr 0x129125820 <col:3> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x129125800 <col:3> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'
    | | | `-RecoveryExpr 0x1291258c8 <col:19> '<dependent type>' contains-errors lvalue
    | | `-ReturnStmt 0x129125940 <line:14:3, col:10>
    | |   `-RecoveryExpr 0x129125920 <col:10> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x129125a40 <line:16:3, col:12> '<dependent type>' contains-errors '='
    |   |-ArraySubscriptExpr 0x129125a08 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x1291259d8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-RecoveryExpr 0x129125990 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x129125970 <col:3> 'char' lvalue Var 0x12910c0d0 'buf' 'char'
    |   | `-ImplicitCastExpr 0x1291259f0 <col:7> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1291259b8 <col:7> 'int' lvalue Var 0x12910c2a8 'n' 'int'
    |   `-CharacterLiteral 0x129125a28 <col:12> 'int' 0
    |-IfStmt 0x129126440 <line:18:2, line:27:2>
    | |-BinaryOperator 0x129125cf8 <line:18:6, col:60> 'int' contains-errors '<'
    | | |-CallExpr 0x129125c98 <col:6, col:56> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x129125b70 <col:6> 'int ()' Function 0x129125ab8 'conv_convert' 'int ()'
    | | | |-CXXDependentScopeMemberExpr 0x129125bb0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->conv
    | | | | `-RecoveryExpr 0x129125b90 <col:19> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x129125bf8 <col:33> '<dependent type>' contains-errors lvalue
    | | | |-UnaryExprOrTypeTraitExpr 0x129125c58 <col:39, col:50> 'unsigned long' contains-errors sizeof
    | | | | `-ParenExpr 0x129125c38 <col:45, col:50> '<dependent type>' contains-errors lvalue
    | | | |   `-RecoveryExpr 0x129125c18 <col:46> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x129125c78 <col:53> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x129125cd8 <col:60> 'int' 0
    | `-CompoundStmt 0x129126408 <col:63, line:27:2>
    |   |-BinaryOperator 0x129125e70 <line:19:3, col:39> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x129125d18 <col:3> 'int' lvalue Var 0x12910c210 'index' 'int'
    |   | `-BinaryOperator 0x129125e50 <col:11, col:39> '<dependent type>' contains-errors '-'
    |   |   |-CXXDependentScopeMemberExpr 0x129125d58 <col:11, col:19> '<dependent type>' contains-errors lvalue ->bufp
    |   |   | `-RecoveryExpr 0x129125d38 <col:11> '<dependent type>' contains-errors lvalue
    |   |   `-CXXDependentScopeMemberExpr 0x129125e08 <col:26, col:39> '<dependent type>' contains-errors lvalue ->str
    |   |     `-CXXDependentScopeMemberExpr 0x129125dc0 <col:26, col:34> '<dependent type>' contains-errors lvalue ->buf
    |   |       `-RecoveryExpr 0x129125da0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x129126030 <line:21:3, col:42> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x129125f70 <col:3> 'int ()' Function 0x129125eb8 'conv_utf8todisp' 'int ()'
    |   | |-RecoveryExpr 0x129125f90 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-UnaryExprOrTypeTraitExpr 0x129125ff0 <col:25, col:36> 'unsigned long' contains-errors sizeof
    |   | | `-ParenExpr 0x129125fd0 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x129125fb0 <col:32> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x129126010 <col:39> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1291261f0 <line:22:3, col:36> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x129126148 <col:3> 'int ()' Function 0x129126090 'g_string_append' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x129126188 <col:19, col:27> '<dependent type>' contains-errors lvalue ->buf
    |   | | `-RecoveryExpr 0x129126168 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1291261d0 <col:32> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x1291263a0 <line:24:3, col:37> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x129126268 <col:3, col:11> '<dependent type>' contains-errors lvalue ->bufp
    |   | | `-RecoveryExpr 0x129126240 <col:3> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x129126220 <col:3> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'
    |   | `-BinaryOperator 0x129126380 <col:18, col:37> '<dependent type>' contains-errors '+'
    |   |   |-CXXDependentScopeMemberExpr 0x129126318 <col:18, col:31> '<dependent type>' contains-errors lvalue ->str
    |   |   | `-CXXDependentScopeMemberExpr 0x1291262d0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->buf
    |   |   |   `-RecoveryExpr 0x1291262b0 <col:18> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x129126360 <col:37> 'int' lvalue Var 0x12910c210 'index' 'int'
    |   `-ReturnStmt 0x1291263f8 <line:26:3, col:10>
    |     `-RecoveryExpr 0x1291263d8 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1291265b8 <line:29:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x129126460 <col:2> 'int' lvalue Var 0x12910c210 'index' 'int'
    | `-BinaryOperator 0x129126598 <col:10, col:38> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x1291264a0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->bufp
    |   | `-RecoveryExpr 0x129126480 <col:10> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x129126550 <col:25, col:38> '<dependent type>' contains-errors lvalue ->str
    |     `-CXXDependentScopeMemberExpr 0x129126508 <col:25, col:33> '<dependent type>' contains-errors lvalue ->buf
    |       `-RecoveryExpr 0x1291264e8 <col:25> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12881a288 <line:31:2, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1291265d8 <col:2> 'int ()' Function 0x129126090 'g_string_append' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x12881a220 <col:18, col:26> '<dependent type>' contains-errors lvalue ->buf
    | | `-RecoveryExpr 0x12881a200 <col:18> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12881a268 <col:31> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12881a438 <line:33:2, col:36> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12881a300 <col:2, col:10> '<dependent type>' contains-errors lvalue ->bufp
    | | `-RecoveryExpr 0x12881a2d8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12881a2b8 <col:2> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'
    | `-BinaryOperator 0x12881a418 <col:17, col:36> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x12881a3b0 <col:17, col:30> '<dependent type>' contains-errors lvalue ->str
    |   | `-CXXDependentScopeMemberExpr 0x12881a368 <col:17, col:25> '<dependent type>' contains-errors lvalue ->buf
    |   |   `-RecoveryExpr 0x12881a348 <col:17> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12881a3f8 <col:36> 'int' lvalue Var 0x12910c210 'index' 'int'
    `-ReturnStmt 0x12881a490 <line:35:2, col:9>
      `-RecoveryExpr 0x12881a470 <col:9> '<dependent type>' contains-errors lvalue
