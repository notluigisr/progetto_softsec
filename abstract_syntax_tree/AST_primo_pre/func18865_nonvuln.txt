`-FunctionDecl 0x13d1281a8  line:1:1 idr_relaxed_filenames 'int (char *)'
  |-ParmVarDecl 0x13d1280d8 <col:23, col:29> col:29 used map 'char *'
  `-CompoundStmt 0x13d8096d0 <line:2:1, line:14:1>
    |-DeclStmt 0x13d128320 <line:3:2, col:7>
    | `-VarDecl 0x13d1282b8 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x13d128530 <line:5:2, line:6:12>
    | |-BinaryOperator 0x13d128378 <line:5:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13d128338 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d128358 <col:11> 'int' 33
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d1283f0 <col:17, col:22> 'int' '<='
    | | |-ImplicitCastExpr 0x13d1283d8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d128398 <col:17> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d1283b8 <col:22> 'int' 47
    | |-UnaryOperator 0x13d128430 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x13d128410 <col:28> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | `-BinaryOperator 0x13d128510 <line:6:3, col:12> 'char' '='
    |   |-ArraySubscriptExpr 0x13d1284b8 <col:3, col:8> 'char' lvalue
    |   | |-ImplicitCastExpr 0x13d128488 <col:3> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13d128448 <col:3> 'char *' lvalue ParmVar 0x13d1280d8 'map' 'char *'
    |   | `-ImplicitCastExpr 0x13d1284a0 <col:7> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d128468 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    |   `-ImplicitCastExpr 0x13d1284f8 <col:12> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x13d1284d8 <col:12> 'int' 1
    |-ForStmt 0x13d128760 <line:7:2, line:8:12>
    | |-BinaryOperator 0x13d1285a8 <line:7:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13d128568 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d128588 <col:11> 'int' 58
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d128620 <col:17, col:22> 'int' '<='
    | | |-ImplicitCastExpr 0x13d128608 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d1285c8 <col:17> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d1285e8 <col:22> 'int' 65
    | |-UnaryOperator 0x13d128660 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x13d128640 <col:28> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | `-BinaryOperator 0x13d128740 <line:8:3, col:12> 'char' '='
    |   |-ArraySubscriptExpr 0x13d1286e8 <col:3, col:8> 'char' lvalue
    |   | |-ImplicitCastExpr 0x13d1286b8 <col:3> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13d128678 <col:3> 'char *' lvalue ParmVar 0x13d1280d8 'map' 'char *'
    |   | `-ImplicitCastExpr 0x13d1286d0 <col:7> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d128698 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    |   `-ImplicitCastExpr 0x13d128728 <col:12> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x13d128708 <col:12> 'int' 1
    |-ForStmt 0x13d809398 <line:9:2, line:10:12>
    | |-BinaryOperator 0x13d1287d8 <line:9:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x13d128798 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d1287b8 <col:11> 'int' 91
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13d809258 <col:17, col:22> 'int' '<='
    | | |-ImplicitCastExpr 0x13d809240 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d809200 <col:17> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | | `-IntegerLiteral 0x13d809220 <col:22> 'int' 94
    | |-UnaryOperator 0x13d809298 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x13d809278 <col:28> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    | `-BinaryOperator 0x13d809378 <line:10:3, col:12> 'char' '='
    |   |-ArraySubscriptExpr 0x13d809320 <col:3, col:8> 'char' lvalue
    |   | |-ImplicitCastExpr 0x13d8092f0 <col:3> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13d8092b0 <col:3> 'char *' lvalue ParmVar 0x13d1280d8 'map' 'char *'
    |   | `-ImplicitCastExpr 0x13d809308 <col:7> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13d8092d0 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
    |   `-ImplicitCastExpr 0x13d809360 <col:12> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x13d809340 <col:12> 'int' 1
    |-BinaryOperator 0x13d809480 <line:11:2, col:14> 'char' '='
    | |-ArraySubscriptExpr 0x13d809428 <col:2, col:10> 'char' lvalue
    | | |-ImplicitCastExpr 0x13d809410 <col:2> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d8093d0 <col:2> 'char *' lvalue ParmVar 0x13d1280d8 'map' 'char *'
    | | `-IntegerLiteral 0x13d8093f0 <col:6> 'int' 96
    | `-ImplicitCastExpr 0x13d809468 <col:14> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x13d809448 <col:14> 'int' 1
    `-ForStmt 0x13d809698 <line:12:2, line:13:12>
      |-BinaryOperator 0x13d8094e0 <line:12:7, col:11> 'int' '='
      | |-DeclRefExpr 0x13d8094a0 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
      | `-IntegerLiteral 0x13d8094c0 <col:11> 'int' 123
      |-<<<NULL>>>
      |-BinaryOperator 0x13d809558 <col:17, col:22> 'int' '<='
      | |-ImplicitCastExpr 0x13d809540 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x13d809500 <col:17> 'int' lvalue Var 0x13d1282b8 'i' 'int'
      | `-IntegerLiteral 0x13d809520 <col:22> 'int' 126
      |-UnaryOperator 0x13d809598 <col:28, col:29> 'int' postfix '++'
      | `-DeclRefExpr 0x13d809578 <col:28> 'int' lvalue Var 0x13d1282b8 'i' 'int'
      `-BinaryOperator 0x13d809678 <line:13:3, col:12> 'char' '='
        |-ArraySubscriptExpr 0x13d809620 <col:3, col:8> 'char' lvalue
        | |-ImplicitCastExpr 0x13d8095f0 <col:3> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x13d8095b0 <col:3> 'char *' lvalue ParmVar 0x13d1280d8 'map' 'char *'
        | `-ImplicitCastExpr 0x13d809608 <col:7> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13d8095d0 <col:7> 'int' lvalue Var 0x13d1282b8 'i' 'int'
        `-ImplicitCastExpr 0x13d809660 <col:12> 'char' <IntegralCast>
          `-IntegerLiteral 0x13d809640 <col:12> 'int' 1
