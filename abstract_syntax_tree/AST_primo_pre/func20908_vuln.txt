`-FunctionDecl 0x13480eba8  line:1:1 invalid ImagingPcdDecode 'int (int, int, int *, int)'
  |-ParmVarDecl 0x13480e8f0 <col:18, col:26> col:26 invalid im 'int'
  |-ParmVarDecl 0x13480e970 <col:30, col:48> col:48 referenced invalid state 'int'
  |-ParmVarDecl 0x13480ea28 <col:55, col:62> col:62 invalid buf 'int *'
  |-ParmVarDecl 0x13480eaa8 <col:67, col:71> col:71 used bytes 'int'
  `-CompoundStmt 0x13580e628 <line:2:1, line:52:1>
    |-DeclStmt 0x13480ecf0 <line:3:5, col:10>
    | `-VarDecl 0x13480ec88 <col:5, col:9> col:9 used x 'int'
    |-DeclStmt 0x13480ed88 <line:4:5, col:14>
    | `-VarDecl 0x13480ed20 <col:5, col:9> col:9 used chunk 'int'
    |-BinaryOperator 0x13480eeb8 <line:10:5, col:24> 'int' contains-errors '='
    | |-DeclRefExpr 0x13480edf0 <col:5> 'int' lvalue Var 0x13480ed20 'chunk' 'int'
    | `-BinaryOperator 0x13480ee98 <col:13, col:24> '<dependent type>' contains-errors '*'
    |   |-IntegerLiteral 0x13480ee10 <col:13> 'int' 3
    |   `-CXXDependentScopeMemberExpr 0x13480ee50 <col:17, col:24> '<dependent type>' contains-errors lvalue ->xsize
    |     `-RecoveryExpr 0x13480ee30 <col:17> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x13580e5f0 <line:12:5, line:51:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      `-CompoundStmt 0x13580e5b0 <line:12:14, line:51:5>
        |-IfStmt 0x134828410 <line:15:2, line:16:19>
        | |-BinaryOperator 0x13480ef48 <line:15:6, col:14> 'int' '<'
        | | |-ImplicitCastExpr 0x13480ef18 <col:6> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13480eed8 <col:6> 'int' lvalue ParmVar 0x13480eaa8 'bytes' 'int'
        | | `-ImplicitCastExpr 0x13480ef30 <col:14> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x13480eef8 <col:14> 'int' lvalue Var 0x13480ed20 'chunk' 'int'
        | `-ReturnStmt 0x134828400 <line:16:6, col:19>
        |   `-BinaryOperator 0x13480efe0 <col:13, col:19> '<dependent type>' contains-errors '-'
        |     |-RecoveryExpr 0x13480efc0 <col:13> '<dependent type>' contains-errors lvalue
        |     `-RecoveryExpr 0x13480ef80 <col:19> '<dependent type>' contains-errors lvalue
        |-ForStmt 0x134828960 <line:20:2, line:25:2>
        | |-BinaryOperator 0x1348284d8 <line:20:7, col:11> 'int' '='
        | | |-DeclRefExpr 0x134828498 <col:7> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | | `-IntegerLiteral 0x1348284b8 <col:11> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x134828580 <col:14, col:25> 'int' contains-errors '<'
        | | |-DeclRefExpr 0x1348284f8 <col:14> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | | `-CXXDependentScopeMemberExpr 0x134828538 <col:18, col:25> '<dependent type>' contains-errors lvalue ->xsize
        | |   `-RecoveryExpr 0x134828518 <col:18> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x1348285c0 <col:32, col:33> 'int' postfix '++'
        | | `-DeclRefExpr 0x1348285a0 <col:32> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | `-CompoundStmt 0x134828950 <col:37, line:25:2>
        |-IfStmt 0x134828c60 <line:30:2, line:31:14>
        | |-BinaryOperator 0x134828bf8 <line:30:6, col:27> 'int' contains-errors '>='
        | | |-UnaryOperator 0x134828b78 <col:6, col:15> '<dependent type>' contains-errors prefix '++' cannot overflow
        | | | `-CXXDependentScopeMemberExpr 0x134828b30 <col:8, col:15> '<dependent type>' contains-errors lvalue ->y
        | | |   `-RecoveryExpr 0x134828b10 <col:8> '<dependent type>' contains-errors lvalue
        | | `-CXXDependentScopeMemberExpr 0x134828bb0 <col:20, col:27> '<dependent type>' contains-errors lvalue ->ysize
        | |   `-RecoveryExpr 0x134828b90 <col:20> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x134828c50 <line:31:6, col:14>
        |   `-UnaryOperator 0x134828c38 <col:13, col:14> 'int' prefix '-'
        |     `-IntegerLiteral 0x134828c18 <col:14> 'int' 1
        |-ForStmt 0x1348291f0 <line:35:2, line:40:2>
        | |-BinaryOperator 0x134828d28 <line:35:7, col:11> 'int' '='
        | | |-DeclRefExpr 0x134828ce8 <col:7> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | | `-IntegerLiteral 0x134828d08 <col:11> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x134828dd0 <col:14, col:25> 'int' contains-errors '<'
        | | |-DeclRefExpr 0x134828d48 <col:14> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | | `-CXXDependentScopeMemberExpr 0x134828d88 <col:18, col:25> '<dependent type>' contains-errors lvalue ->xsize
        | |   `-RecoveryExpr 0x134828d68 <col:18> '<dependent type>' contains-errors lvalue
        | |-UnaryOperator 0x134828e10 <col:32, col:33> 'int' postfix '++'
        | | `-DeclRefExpr 0x134828df0 <col:32> 'int' lvalue Var 0x13480ec88 'x' 'int'
        | `-CompoundStmt 0x1348291e0 <col:37, line:40:2>
        |-IfStmt 0x13580e4e8 <line:45:2, line:46:14>
        | |-BinaryOperator 0x13580e480 <line:45:6, col:27> 'int' contains-errors '>='
        | | |-UnaryOperator 0x13580e400 <col:6, col:15> '<dependent type>' contains-errors prefix '++' cannot overflow
        | | | `-CXXDependentScopeMemberExpr 0x1348293a8 <col:8, col:15> '<dependent type>' contains-errors lvalue ->y
        | | |   `-RecoveryExpr 0x134829388 <col:8> '<dependent type>' contains-errors lvalue
        | | `-CXXDependentScopeMemberExpr 0x13580e438 <col:20, col:27> '<dependent type>' contains-errors lvalue ->ysize
        | |   `-RecoveryExpr 0x13580e418 <col:20> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x13580e4d8 <line:46:6, col:14>
        |   `-UnaryOperator 0x13580e4c0 <col:13, col:14> 'int' prefix '-'
        |     `-IntegerLiteral 0x13580e4a0 <col:14> 'int' 1
        `-CompoundAssignOperator 0x13580e580 <line:49:2, col:11> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
          |-DeclRefExpr 0x13580e528 <col:2> 'int' lvalue ParmVar 0x13480eaa8 'bytes' 'int'
          `-ImplicitCastExpr 0x13580e568 <col:11> 'int' <LValueToRValue>
            `-DeclRefExpr 0x13580e548 <col:11> 'int' lvalue Var 0x13480ed20 'chunk' 'int'
