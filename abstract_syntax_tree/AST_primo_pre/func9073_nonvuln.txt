`-FunctionDecl 0x12580ddc8  line:1:6 invalid do_futex 'long (int)'
  |-ParmVarDecl 0x12580dcf0 <col:15, col:19> col:19 invalid __user 'int'
  `-CompoundStmt 0x125829650 <line:3:1, line:56:1>
    |-DeclStmt 0x12580dfa8 <line:4:2, col:31>
    | `-VarDecl 0x12580de90 <col:2, col:17> col:6 used cmd 'int' cinit
    |   `-BinaryOperator 0x12580df88 <col:12, col:17> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x12580df48 <col:12> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x12580df68 <col:17> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12580e078 <line:5:2, col:24>
    | `-VarDecl 0x12580dfd8 <col:2, col:23> col:15 used flags 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x12580e060 <col:23> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x12580e040 <col:23> 'int' 0
    |-IfStmt 0x12580e1b8 <line:7:2, line:8:12>
    | |-RecoveryExpr 0x12580e0e0 <line:7:6, col:31> '_Bool' contains-errors
    | `-CompoundAssignOperator 0x12580e188 <line:8:3, col:12> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x12580e100 <col:3> 'unsigned int' lvalue Var 0x12580dfd8 'flags' 'unsigned int'
    |   `-RecoveryExpr 0x12580e168 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125828a80 <line:10:2, line:15:2>
    | |-BinaryOperator 0x12580e268 <line:10:6, col:11> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x12580e228 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12580e248 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125828a60 <col:33, line:15:2>
    |   |-CompoundAssignOperator 0x12580e310 <line:11:3, col:12> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x12580e288 <col:3> 'unsigned int' lvalue Var 0x12580dfd8 'flags' 'unsigned int'
    |   | `-RecoveryExpr 0x12580e2f0 <col:12> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x125828a40 <line:12:3, line:14:12>
    |     |-BinaryOperator 0x125828978 <line:12:7, line:13:14> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x125828918 <line:12:7, col:35> 'int' contains-errors '&&'
    |     | | |-BinaryOperator 0x1258288b8 <col:7, col:14> 'int' contains-errors '!='
    |     | | | |-DeclRefExpr 0x12580e340 <col:7> 'int' contains-errors lvalue Var 0x12580de90 'cmd' 'int'
    |     | | | `-RecoveryExpr 0x125828898 <col:14> '<dependent type>' contains-errors lvalue
    |     | | `-BinaryOperator 0x1258288f8 <col:28, col:35> 'int' contains-errors '!='
    |     | |   |-DeclRefExpr 0x12580e398 <col:28> 'int' contains-errors lvalue Var 0x12580de90 'cmd' 'int'
    |     | |   `-RecoveryExpr 0x1258288d8 <col:35> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x125828958 <line:13:7, col:14> 'int' contains-errors '!='
    |     |   |-DeclRefExpr 0x125828820 <col:7> 'int' contains-errors lvalue Var 0x12580de90 'cmd' 'int'
    |     |   `-RecoveryExpr 0x125828938 <col:14> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x125828a30 <line:14:4, col:12>
    |       `-UnaryOperator 0x125828a18 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x125828a00 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x1258289e0 <col:12> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x125828ad8 <line:17:2, line:25:2>
    | |-ImplicitCastExpr 0x125828ac0 <line:17:10> 'int' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x125828aa0 <col:10> 'int' contains-errors lvalue Var 0x12580de90 'cmd' 'int'
    | `-CompoundStmt 0x125828c10 <col:15, line:25:2>
    `-SwitchStmt 0x125828c58 <line:27:2, line:54:2>
      |-ImplicitCastExpr 0x125828c40 <line:27:10> 'int' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x125828c20 <col:10> 'int' contains-errors lvalue Var 0x12580de90 'cmd' 'int'
      `-CompoundStmt 0x125829640 <col:15, line:54:2>
