`-FunctionDecl 0x12c1281c8  line:1:1 invalid mcs_recv_connect_response 'int (int)'
  |-ParmVarDecl 0x12c1280f0 <col:27, col:34> col:34 invalid mcs_data 'int'
  `-CompoundStmt 0x12c142380 <line:2:1, line:35:1>
    |-CallExpr 0x12c128410 <line:3:2, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c1283d0 <col:2> 'int ()' Function 0x12c128318 'UNUSED' 'int ()'
    | `-RecoveryExpr 0x12c1283f0 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12c1284b8 <line:5:2, col:12>
    | `-VarDecl 0x12c128450 <col:2, col:6> col:6 used length 'int'
    |-CallExpr 0x12c1287b0 <line:10:2, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c1285b0 <col:2> 'int ()' Function 0x12c1284f8 'logger' 'int ()'
    | |-RecoveryExpr 0x12c128770 <col:9> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12c128790 <col:19> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x12c128640 <col:26> 'char[4]' lvalue "STR"
    | `-PredefinedExpr 0x12c128718 <col:33> 'const char[26]' lvalue __func__
    |   `-StringLiteral 0x12c1286e0 <col:33> 'const char[26]' lvalue "mcs_recv_connect_response"
    |-CallExpr 0x12c141c70 <line:16:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c141b38 <col:2> 'int ()' Function 0x12c141a80 'ber_parse_header' 'int ()'
    | |-RecoveryExpr 0x12c141c30 <col:19> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x12c141c50 <col:22> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12c141be0 <col:44, col:45> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x12c141b88 <col:45> 'int' lvalue Var 0x12c128450 'length' 'int'
    `-IfStmt 0x12c141e90 <line:20:2, line:24:2>
      |-RecoveryExpr 0x12c141e20 <line:20:6, col:16> '_Bool' contains-errors
      `-CompoundStmt 0x12c141e80 <line:21:2, line:24:2>
