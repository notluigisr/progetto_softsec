`-FunctionDecl 0x13b928288  line:1:12 invalid java_cmd_ext 'int (int *, const char *)' static
  |-ParmVarDecl 0x13b928128 <col:25, col:32> col:32 invalid anal 'int *'
  |-ParmVarDecl 0x13b9281a8 <col:38, col:50> col:50 used input 'const char *'
  `-CompoundStmt 0x13b942050 <col:57, line:29:1>
    |-IfStmt 0x13b9286d0 <line:4:2, line:7:2>
    | |-UnaryOperator 0x13b9283f0 <line:4:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b9283d8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13b9283b8 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b9286b0 <col:12, line:7:2>
    |   |-CallExpr 0x13b928628 <line:5:3, col:17> 'int'
    |   | |-ImplicitCastExpr 0x13b928610 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13b928560 <col:3> 'int ()' Function 0x13b9284a8 'eprintf' 'int ()'
    |   | `-ImplicitCastExpr 0x13b928650 <col:12> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x13b9285c0 <col:12> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x13b9286a0 <line:6:3, col:11>
    |     `-UnaryOperator 0x13b928688 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x13b928668 <col:11> 'int' 1
    |-SwitchStmt 0x13b928770 <line:8:2, line:27:2>
    | |-ImplicitCastExpr 0x13b928758 <line:8:10, col:11> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x13b928740 <col:10, col:11> 'char' <LValueToRValue>
    | |   `-UnaryOperator 0x13b928728 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x13b928710 <col:11> 'const char *' <LValueToRValue>
    | |       `-DeclRefExpr 0x13b9286f0 <col:11> 'const char *' lvalue ParmVar 0x13b9281a8 'input' 'const char *'
    | `-CompoundStmt 0x13b941fd0 <col:18, line:27:2>
    |   |-CaseStmt 0x13b9287c8 <line:9:2, line:11:22>
    |   | |-ConstantExpr 0x13b9287b0 <line:9:7> 'int'
    |   | | `-CharacterLiteral 0x13b928798 <col:7> 'int' 99
    |   | `-CallExpr 0x13b941918 <line:11:3, col:22> 'int'
    |   |   `-ImplicitCastExpr 0x13b941900 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |     `-DeclRefExpr 0x13b9418e0 <col:3> 'int ()' Function 0x13b941828 'r_java_new_method' 'int ()'
    |   |-BreakStmt 0x13b941938 <line:12:3>
    |   |-CaseStmt 0x13b941970 <line:13:2, line:17:3>
    |   | |-ConstantExpr 0x13b941958 <line:13:7> 'int'
    |   | | `-CharacterLiteral 0x13b941940 <col:7> 'int' 117
    |   | `-SwitchStmt 0x13b941a78 <line:14:3, line:17:3>
    |   |   |-ImplicitCastExpr 0x13b941a60 <line:14:11, col:20> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x13b941a48 <col:11, col:20> 'char' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x13b941a30 <col:11, col:20> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     `-ParenExpr 0x13b941a10 <col:12, col:20> 'const char *'
    |   |   |       `-BinaryOperator 0x13b9419f0 <col:13, col:19> 'const char *' '+'
    |   |   |         |-ImplicitCastExpr 0x13b9419d8 <col:13> 'const char *' <LValueToRValue>
    |   |   |         | `-DeclRefExpr 0x13b941998 <col:13> 'const char *' lvalue ParmVar 0x13b9281a8 'input' 'const char *'
    |   |   |         `-IntegerLiteral 0x13b9419b8 <col:19> 'int' 1
    |   |   `-CompoundStmt 0x13b941d40 <col:23, line:17:3>
    |   |     |-CaseStmt 0x13b941ad0 <line:15:4, col:63>
    |   |     | |-ConstantExpr 0x13b941ab8 <col:9> 'int'
    |   |     | | `-CharacterLiteral 0x13b941aa0 <col:9> 'int' 116
    |   |     | `-CompoundStmt 0x13b941cf8 <col:14, col:63>
    |   |     |   |-CallExpr 0x13b941c80 <col:15, col:48> '<dependent type>' contains-errors
    |   |     |   | |-DeclRefExpr 0x13b941bd8 <col:15> 'int ()' Function 0x13b941b20 'java_update_anal_types' 'int ()'
    |   |     |   | |-RecoveryExpr 0x13b941bf8 <col:39> '<dependent type>' contains-errors lvalue
    |   |     |   | `-RecoveryExpr 0x13b941c60 <col:45> '<dependent type>' contains-errors lvalue
    |   |     |   `-ReturnStmt 0x13b941ce8 <col:51, col:58>
    |   |     |     `-RecoveryExpr 0x13b941cc8 <col:58> '<dependent type>' contains-errors lvalue
    |   |     `-DefaultStmt 0x13b941d20 <line:16:4, col:13>
    |   |       `-BreakStmt 0x13b941d18 <col:13>
    |   |-BreakStmt 0x13b941d60 <line:18:3>
    |   |-CaseStmt 0x13b941d98 <line:19:2, line:23:3>
    |   | |-ConstantExpr 0x13b941d80 <line:19:7> 'int'
    |   | | `-CharacterLiteral 0x13b941d68 <col:7> 'int' 115
    |   | `-SwitchStmt 0x13b941ea0 <line:20:3, line:23:3>
    |   |   |-ImplicitCastExpr 0x13b941e88 <line:20:11, col:20> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x13b941e70 <col:11, col:20> 'char' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x13b941e58 <col:11, col:20> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     `-ParenExpr 0x13b941e38 <col:12, col:20> 'const char *'
    |   |   |       `-BinaryOperator 0x13b941e18 <col:13, col:19> 'const char *' '+'
    |   |   |         |-ImplicitCastExpr 0x13b941e00 <col:13> 'const char *' <LValueToRValue>
    |   |   |         | `-DeclRefExpr 0x13b941dc0 <col:13> 'const char *' lvalue ParmVar 0x13b9281a8 'input' 'const char *'
    |   |   |         `-IntegerLiteral 0x13b941de0 <col:19> 'int' 1
    |   |   `-CompoundStmt 0x13b941ef0 <col:23, line:23:3>
    |   |     `-DefaultStmt 0x13b941ed0 <line:22:4, col:13>
    |   |       `-BreakStmt 0x13b941ec8 <col:13>
    |   |-BreakStmt 0x13b941f08 <line:24:3>
    |   |-DefaultStmt 0x13b941fa8 <line:26:2, col:24>
    |   | `-CallExpr 0x13b941f68 <col:11, col:24> 'int'
    |   |   |-ImplicitCastExpr 0x13b941f50 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x13b941f10 <col:11> 'int ()' Function 0x13b9284a8 'eprintf' 'int ()'
    |   |   `-ImplicitCastExpr 0x13b941f90 <col:19> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x13b941f30 <col:19> 'char[4]' lvalue "STR"
    |   `-BreakStmt 0x13b941fc8 <col:27>
    `-ReturnStmt 0x13b942040 <line:28:2, col:9>
      `-IntegerLiteral 0x13b942020 <col:9> 'int' 0
