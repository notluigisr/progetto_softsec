`-FunctionDecl 0x12b0fbc88  line:1:1 invalid handle_subnets_accessed 'int (int *, int *)'
  |-ParmVarDecl 0x12b0fbb28 <col:25, col:38> col:38 invalid rx_message 'int *'
  |-ParmVarDecl 0x12b0fbba8 <col:50, col:61> col:61 referenced invalid tx_message 'int *'
  `-CompoundStmt 0x12b117ef8 <line:2:1, line:40:1>
    |-DeclStmt 0x12b0fbe58 <line:3:3, col:11>
    | |-VarDecl 0x12b0fbd58 <col:3, col:7> col:7 used i 'int'
    | `-VarDecl 0x12b0fbdd8 <col:3, col:10> col:10 used j 'int'
    |-DeclStmt 0x12b0fbf88 <line:4:3, col:31>
    | |-VarDecl 0x12b0fbe88 <col:3, col:17> col:17 used ns 'unsigned long'
    | `-VarDecl 0x12b0fbf08 <col:3, col:21> col:21 used bits_specd 'unsigned long'
    |-BinaryOperator 0x12b115270 <line:8:3, col:57> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x12b0fbfa0 <col:3> 'unsigned long' lvalue Var 0x12b0fbe88 'ns' 'unsigned long'
    | `-CallExpr 0x12b115248 <col:8, col:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b0fc120 <col:8> 'int ()' Function 0x12b0fc068 'ntohl' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12b115200 <col:14, col:48> '<dependent type>' contains-errors lvalue .n_subnets
    |     `-CXXDependentScopeMemberExpr 0x12b0fc1a8 <col:14, col:31> '<dependent type>' contains-errors lvalue .subnets_accessed
    |       `-CXXDependentScopeMemberExpr 0x12b0fc160 <col:14, col:26> '<dependent type>' contains-errors lvalue ->data
    |         `-RecoveryExpr 0x12b0fc140 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b1154c8 <line:9:3, col:41> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b1152d8 <col:3, col:15> '<dependent type>' contains-errors lvalue ->status
    | | `-RecoveryExpr 0x12b1152b0 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b115290 <col:3> 'int *' lvalue ParmVar 0x12b0fbba8 'tx_message' 'int *'
    | `-CallExpr 0x12b1154a0 <col:24, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b115400 <col:24> 'int ()' Function 0x12b115348 'htons' 'int ()'
    |   `-RecoveryExpr 0x12b115480 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b115640 <line:10:3, col:49> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b115530 <col:3, col:15> '<dependent type>' contains-errors lvalue ->reply
    | | `-RecoveryExpr 0x12b115508 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12b1154e8 <col:3> 'int *' lvalue ParmVar 0x12b0fbba8 'tx_message' 'int *'
    | `-CallExpr 0x12b115618 <col:23, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b115578 <col:23> 'int ()' Function 0x12b115348 'htons' 'int ()'
    |   `-RecoveryExpr 0x12b1155f8 <col:29> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b115928 <line:11:3, col:57> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12b115738 <col:3, col:37> '<dependent type>' contains-errors lvalue .n_subnets
    | | `-CXXDependentScopeMemberExpr 0x12b1156f0 <col:3, col:20> '<dependent type>' contains-errors lvalue .subnets_accessed
    | |   `-CXXDependentScopeMemberExpr 0x12b1156a8 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data
    | |     `-RecoveryExpr 0x12b115680 <col:3> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12b115660 <col:3> 'int *' lvalue ParmVar 0x12b0fbba8 'tx_message' 'int *'
    | `-CallExpr 0x12b1158e8 <col:49, col:57> 'int'
    |   |-ImplicitCastExpr 0x12b1158d0 <col:49> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12b115860 <col:49> 'int ()' Function 0x12b1157a8 'htonl' 'int ()'
    |   `-ImplicitCastExpr 0x12b115910 <col:55> 'unsigned long' <LValueToRValue>
    |     `-DeclRefExpr 0x12b115880 <col:55> 'unsigned long' lvalue Var 0x12b0fbe88 'ns' 'unsigned long'
    `-ForStmt 0x12b117ec0 <line:13:3, line:39:3>
      |-BinaryOperator 0x12b115988 <line:13:8, col:10> 'int' '='
      | |-DeclRefExpr 0x12b115948 <col:8> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
      | `-IntegerLiteral 0x12b115968 <col:10> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x12b115a30 <col:13, col:15> 'int' '<'
      | |-ImplicitCastExpr 0x12b115a18 <col:13> 'unsigned long' <IntegralCast>
      | | `-ImplicitCastExpr 0x12b1159e8 <col:13> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x12b1159a8 <col:13> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
      | `-ImplicitCastExpr 0x12b115a00 <col:15> 'unsigned long' <LValueToRValue>
      |   `-DeclRefExpr 0x12b1159c8 <col:15> 'unsigned long' lvalue Var 0x12b0fbe88 'ns' 'unsigned long'
      |-UnaryOperator 0x12b115a70 <col:19, col:20> 'int' postfix '++'
      | `-DeclRefExpr 0x12b115a50 <col:19> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
      `-CompoundStmt 0x12b117e88 <col:24, line:39:3>
        |-CallExpr 0x12b115f48 <line:14:5, col:78> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12b115b68 <col:5> 'int ()' Function 0x12b115ab0 'UTI_IPNetworkToHost' 'int ()'
        | |-UnaryOperator 0x12b115ef8 <col:25, col:71> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x12b115eb0 <col:26, col:71> '<dependent type>' contains-errors lvalue .ip
        | |   `-ArraySubscriptExpr 0x12b115e90 <col:26, col:69> '<dependent type>' contains-errors lvalue
        | |     |-ImplicitCastExpr 0x12b115e60 <col:26, col:60> '<dependent type>' contains-errors <LValueToRValue>
        | |     | `-CXXDependentScopeMemberExpr 0x12b115c38 <col:26, col:60> '<dependent type>' contains-errors lvalue .subnets
        | |     |   `-CXXDependentScopeMemberExpr 0x12b115bf0 <col:26, col:43> '<dependent type>' contains-errors lvalue .subnets_accessed
        | |     |     `-CXXDependentScopeMemberExpr 0x12b115ba8 <col:26, col:38> '<dependent type>' contains-errors lvalue ->data
        | |     |       `-RecoveryExpr 0x12b115b88 <col:26> '<dependent type>' contains-errors lvalue
        | |     `-ImplicitCastExpr 0x12b115e78 <col:68> 'int' <LValueToRValue>
        | |       `-DeclRefExpr 0x12b115c80 <col:68> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
        | `-UnaryOperator 0x12b115f30 <col:75, col:76> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x12b115f10 <col:76> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x12b116190 <line:15:5, col:79> 'unsigned long' contains-errors '='
        | |-DeclRefExpr 0x12b115f78 <col:5> 'unsigned long' lvalue Var 0x12b0fbf08 'bits_specd' 'unsigned long'
        | `-CallExpr 0x12b116168 <col:18, col:79> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x12b115f98 <col:18> 'int ()' Function 0x12b0fc068 'ntohl' 'int ()'
        |   `-CXXDependentScopeMemberExpr 0x12b116120 <col:24, col:69> '<dependent type>' contains-errors lvalue .bits_specd
        |     `-ArraySubscriptExpr 0x12b116100 <col:24, col:67> '<dependent type>' contains-errors lvalue
        |       |-ImplicitCastExpr 0x12b1160d0 <col:24, col:58> '<dependent type>' contains-errors <LValueToRValue>
        |       | `-CXXDependentScopeMemberExpr 0x12b116068 <col:24, col:58> '<dependent type>' contains-errors lvalue .subnets
        |       |   `-CXXDependentScopeMemberExpr 0x12b116020 <col:24, col:41> '<dependent type>' contains-errors lvalue .subnets_accessed
        |       |     `-CXXDependentScopeMemberExpr 0x12b115fd8 <col:24, col:36> '<dependent type>' contains-errors lvalue ->data
        |       |       `-RecoveryExpr 0x12b115fb8 <col:24> '<dependent type>' contains-errors lvalue
        |       `-ImplicitCastExpr 0x12b1160e8 <col:66> 'int' <LValueToRValue>
        |         `-DeclRefExpr 0x12b1160b0 <col:66> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
        |-CallExpr 0x12b116fe8 <line:17:5, col:78> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x12b116cb8 <col:5> 'int ()' Function 0x12b116c00 'UTI_IPHostToNetwork' 'int ()'
        | |-UnaryOperator 0x12b116f20 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-RecoveryExpr 0x12b116f00 <col:26> '<dependent type>' contains-errors lvalue
        | `-UnaryOperator 0x12b116fd0 <col:30, col:76> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-CXXDependentScopeMemberExpr 0x12b116f88 <col:31, col:76> '<dependent type>' contains-errors lvalue .ip
        |     `-ArraySubscriptExpr 0x12b116f68 <col:31, col:74> '<dependent type>' contains-errors lvalue
        |       |-ImplicitCastExpr 0x12b116f38 <col:31, col:65> '<dependent type>' contains-errors <LValueToRValue>
        |       | `-CXXDependentScopeMemberExpr 0x12b116db8 <col:31, col:65> '<dependent type>' contains-errors lvalue .subnets
        |       |   `-CXXDependentScopeMemberExpr 0x12b116d70 <col:31, col:48> '<dependent type>' contains-errors lvalue .subnets_accessed
        |       |     `-CXXDependentScopeMemberExpr 0x12b116d28 <col:31, col:43> '<dependent type>' contains-errors lvalue ->data
        |       |       `-RecoveryExpr 0x12b116d08 <col:31> '<dependent type>' contains-errors lvalue
        |       `-ImplicitCastExpr 0x12b116f50 <col:73> 'int' <LValueToRValue>
        |         `-DeclRefExpr 0x12b116e00 <col:73> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
        |-BinaryOperator 0x12b117288 <line:18:5, col:79> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x12b1171a8 <col:5, col:50> '<dependent type>' contains-errors lvalue .bits_specd
        | | `-ArraySubscriptExpr 0x12b117188 <col:5, col:48> '<dependent type>' contains-errors lvalue
        | |   |-ImplicitCastExpr 0x12b117158 <col:5, col:39> '<dependent type>' contains-errors <LValueToRValue>
        | |   | `-CXXDependentScopeMemberExpr 0x12b1170f0 <col:5, col:39> '<dependent type>' contains-errors lvalue .subnets
        | |   |   `-CXXDependentScopeMemberExpr 0x12b1170a8 <col:5, col:22> '<dependent type>' contains-errors lvalue .subnets_accessed
        | |   |     `-CXXDependentScopeMemberExpr 0x12b117060 <col:5, col:17> '<dependent type>' contains-errors lvalue ->data
        | |   |       `-RecoveryExpr 0x12b117038 <col:5> '<dependent type>' contains-errors lvalue
        | |   |         `-DeclRefExpr 0x12b117018 <col:5> 'int *' lvalue ParmVar 0x12b0fbba8 'tx_message' 'int *'
        | |   `-ImplicitCastExpr 0x12b117170 <col:47> 'int' <LValueToRValue>
        | |     `-DeclRefExpr 0x12b117138 <col:47> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
        | `-CallExpr 0x12b117248 <col:63, col:79> 'int'
        |   |-ImplicitCastExpr 0x12b117230 <col:63> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x12b1171f0 <col:63> 'int ()' Function 0x12b1157a8 'htonl' 'int ()'
        |   `-ImplicitCastExpr 0x12b117270 <col:69> 'unsigned long' <LValueToRValue>
        |     `-DeclRefExpr 0x12b117210 <col:69> 'unsigned long' lvalue Var 0x12b0fbf08 'bits_specd' 'unsigned long'
        `-SwitchStmt 0x12b117630 <line:21:5, line:38:5>
          |-RecoveryExpr 0x12b117610 <line:21:13> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x12b117e48 <col:21, line:38:5>
            |-ForStmt 0x12b117af8 <line:25:9, line:27:9>
            | |-BinaryOperator 0x12b1176c8 <line:25:14, col:16> 'int' '='
            | | |-DeclRefExpr 0x12b117688 <col:14> 'int' lvalue Var 0x12b0fbdd8 'j' 'int'
            | | `-IntegerLiteral 0x12b1176a8 <col:16> 'int' 0
            | |-<<<NULL>>>
            | |-BinaryOperator 0x12b117740 <col:19, col:21> 'int' '<'
            | | |-ImplicitCastExpr 0x12b117728 <col:19> 'int' <LValueToRValue>
            | | | `-DeclRefExpr 0x12b1176e8 <col:19> 'int' lvalue Var 0x12b0fbdd8 'j' 'int'
            | | `-IntegerLiteral 0x12b117708 <col:21> 'int' 8
            | |-UnaryOperator 0x12b117780 <col:24, col:25> 'int' postfix '++'
            | | `-DeclRefExpr 0x12b117760 <col:24> 'int' lvalue Var 0x12b0fbdd8 'j' 'int'
            | `-CompoundStmt 0x12b117ae0 <col:29, line:27:9>
            |   `-CallExpr 0x12b117ab8 <line:26:11, col:71> '<dependent type>' contains-errors
            |     |-DeclRefExpr 0x12b117878 <col:11> 'int ()' Function 0x12b1177c0 'FLIPL' 'int ()'
            |     `-ArraySubscriptExpr 0x12b117a98 <col:17, col:70> '<dependent type>' contains-errors lvalue
            |       |-ImplicitCastExpr 0x12b117a68 <col:17, col:62> '<dependent type>' contains-errors <LValueToRValue>
            |       | `-CXXDependentScopeMemberExpr 0x12b117a00 <col:17, col:62> '<dependent type>' contains-errors lvalue .bitmap
            |       |   `-ArraySubscriptExpr 0x12b1179e0 <col:17, col:60> '<dependent type>' contains-errors lvalue
            |       |     |-ImplicitCastExpr 0x12b1179b0 <col:17, col:51> '<dependent type>' contains-errors <LValueToRValue>
            |       |     | `-CXXDependentScopeMemberExpr 0x12b117948 <col:17, col:51> '<dependent type>' contains-errors lvalue .subnets
            |       |     |   `-CXXDependentScopeMemberExpr 0x12b117900 <col:17, col:34> '<dependent type>' contains-errors lvalue .subnets_accessed
            |       |     |     `-CXXDependentScopeMemberExpr 0x12b1178b8 <col:17, col:29> '<dependent type>' contains-errors lvalue ->data
            |       |     |       `-RecoveryExpr 0x12b117898 <col:17> '<dependent type>' contains-errors lvalue
            |       |     `-ImplicitCastExpr 0x12b1179c8 <col:59> 'int' <LValueToRValue>
            |       |       `-DeclRefExpr 0x12b117990 <col:59> 'int' lvalue Var 0x12b0fbd58 'i' 'int'
            |       `-ImplicitCastExpr 0x12b117a80 <col:69> 'int' <LValueToRValue>
            |         `-DeclRefExpr 0x12b117a48 <col:69> 'int' lvalue Var 0x12b0fbdd8 'j' 'int'
            |-BreakStmt 0x12b117b30 <line:28:9>
            |-ReturnStmt 0x12b117be8 <line:31:9>
            |-ReturnStmt 0x12b117cb0 <line:34:9>
            |-DefaultStmt 0x12b117e20 <line:35:7, line:36:17>
            | `-CallExpr 0x12b117df8 <col:9, col:17> 'int'
            |   |-ImplicitCastExpr 0x12b117de0 <col:9> 'int (*)()' <FunctionToPointerDecay>
            |   | `-DeclRefExpr 0x12b117da0 <col:9> 'int ()' Function 0x12b117ce8 'assert' 'int ()'
            |   `-IntegerLiteral 0x12b117dc0 <col:16> 'int' 0
            `-BreakStmt 0x12b117e40 <line:37:9>
