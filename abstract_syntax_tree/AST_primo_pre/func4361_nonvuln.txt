`-FunctionDecl 0x13f13b7b8  line:1:12 invalid check_reg_arg 'int (struct bpf_verifier_env *, int, enum reg_arg_type)' static
  |-ParmVarDecl 0x13f80e248 <col:26, col:51> col:51 used env 'struct bpf_verifier_env *'
  |-ParmVarDecl 0x13f80e2e0 <col:56, col:60> col:60 invalid regno 'int'
  |-ParmVarDecl 0x13f13b678 <line:2:5, col:23> col:23 invalid t 'enum reg_arg_type'
  `-CompoundStmt 0x13f13d4a8 <line:3:1, line:34:1>
    |-DeclStmt 0x13f13bac8 <line:4:2, col:52>
    | |-RecordDecl 0x13f13b878 <col:2, col:9> col:9 struct bpf_verifier_state
    | `-VarDecl 0x13f13b9e8 <col:2, col:43> col:29 used vstate 'struct bpf_verifier_state *' cinit
    |   `-RecoveryExpr 0x13f13ba88 <col:38, col:43> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13f13ba50 <col:38> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x13f13bdd8 <line:5:2, col:64>
    | |-RecordDecl 0x13f13bae0 <col:2, col:9> col:9 struct bpf_func_state
    | `-VarDecl 0x13f13bc48 <col:2, col:63> col:25 used state 'struct bpf_func_state *' cinit
    |   `-ArraySubscriptExpr 0x13f13bda0 <col:33, col:63> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x13f13bd70 <col:33, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x13f13bce8 <col:33, col:41> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x13f13bcb0 <col:33> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x13f13b9e8 'vstate' 'struct bpf_verifier_state *'
    |     `-ImplicitCastExpr 0x13f13bd88 <col:47, col:55> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13f13bd48 <col:47, col:55> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x13f13bd10 <col:47> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x13f13b9e8 'vstate' 'struct bpf_verifier_state *'
    |-DeclStmt 0x13f13c038 <line:6:2, col:42>
    | |-RecordDecl 0x13f13bdf0 <col:2, col:9> col:9 struct bpf_reg_state
    | `-VarDecl 0x13f13bf58 <col:2, col:38> col:24 used regs 'struct bpf_reg_state *' cinit
    |   `-RecoveryExpr 0x13f13bff8 <col:31, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13f13bfc0 <col:31> 'struct bpf_func_state *' contains-errors lvalue Var 0x13f13bc48 'state' 'struct bpf_func_state *'
    |-IfStmt 0x13f13c400 <line:8:2, line:11:2>
    | |-BinaryOperator 0x13f13c0c8 <line:8:6, col:15> 'int' contains-errors '>='
    | | |-RecoveryExpr 0x13f13c050 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f13c0a8 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f13c3e0 <col:28, line:11:2>
    |   |-CallExpr 0x13f13c300 <line:9:3, col:28> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13f13c240 <col:3> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    |   | |-DeclRefExpr 0x13f13c260 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |   | |-StringLiteral 0x13f13c2c0 <col:16> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x13f13c2e0 <col:23> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x13f13c3d0 <line:10:3, col:11>
    |     `-UnaryOperator 0x13f13c3b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x13f13c3a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13f13c380 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13f13d448 <line:13:2, line:32:2> has_else
    | |-BinaryOperator 0x13f13c498 <line:13:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13f13c420 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f13c478 <col:11> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13f13cc80 <col:19, line:23:2>
    | | |-IfStmt 0x13f13c8c0 <line:15:3, line:18:3>
    | | | |-BinaryOperator 0x13f13c720 <line:15:7, col:27> 'int' contains-errors '=='
    | | | | |-CXXDependentScopeMemberExpr 0x13f13c6b8 <col:7, col:19> '<dependent type>' contains-errors lvalue .type
    | | | | | `-ArraySubscriptExpr 0x13f13c698 <col:7, col:17> '<dependent type>' contains-errors lvalue
    | | | | |   |-ImplicitCastExpr 0x13f13c668 <col:7> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | | | | |   | `-DeclRefExpr 0x13f13c4b8 <col:7> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | | | | |   `-ImplicitCastExpr 0x13f13c680 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | | | |     `-RecoveryExpr 0x13f13c4d8 <col:12> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x13f13c700 <col:27> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x13f13c8a0 <col:37, line:18:3>
    | | |   |-CallExpr 0x13f13c7c0 <line:16:4, col:29> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x13f13c740 <col:4> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    | | |   | |-DeclRefExpr 0x13f13c760 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    | | |   | |-StringLiteral 0x13f13c780 <col:17> 'char[4]' lvalue "STR"
    | | |   | `-RecoveryExpr 0x13f13c7a0 <col:24> '<dependent type>' contains-errors lvalue
    | | |   `-ReturnStmt 0x13f13c890 <line:17:4, col:12>
    | | |     `-UnaryOperator 0x13f13c878 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    | | |       `-ImplicitCastExpr 0x13f13c860 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | | |         `-RecoveryExpr 0x13f13c840 <col:12> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x13f13cc60 <line:20:3, line:22:29>
    | |   |-BinaryOperator 0x13f13c958 <line:20:7, col:16> 'int' contains-errors '!='
    | |   | |-RecoveryExpr 0x13f13c8e0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | `-RecoveryExpr 0x13f13c938 <col:16> '<dependent type>' contains-errors lvalue
    | |   `-ReturnStmt 0x13f13cc50 <line:21:4, line:22:29>
    | |     `-CallExpr 0x13f13cc18 <line:21:11, line:22:29> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x13f13ca58 <line:21:11> 'int ()' Function 0x13f13c9a0 'mark_reg_read' 'int ()'
    | |       |-DeclRefExpr 0x13f13ca78 <col:25> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    | |       |-UnaryOperator 0x13f13cb28 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       | `-ArraySubscriptExpr 0x13f13cb08 <col:31, col:41> '<dependent type>' contains-errors lvalue
    | |       |   |-ImplicitCastExpr 0x13f13cad8 <col:31> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | |       |   | `-DeclRefExpr 0x13f13ca98 <col:31> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | |       |   `-ImplicitCastExpr 0x13f13caf0 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    | |       |     `-RecoveryExpr 0x13f13cab8 <col:36> '<dependent type>' contains-errors lvalue
    | |       `-CXXDependentScopeMemberExpr 0x13f13cbd0 <line:22:11, col:23> '<dependent type>' contains-errors lvalue .parent
    | |         `-ArraySubscriptExpr 0x13f13cbb0 <col:11, col:21> '<dependent type>' contains-errors lvalue
    | |           |-ImplicitCastExpr 0x13f13cb80 <col:11> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    | |           | `-DeclRefExpr 0x13f13cb40 <col:11> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    | |           `-ImplicitCastExpr 0x13f13cb98 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |             `-RecoveryExpr 0x13f13cb60 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f13d420 <line:23:9, line:32:2>
    |   |-IfStmt 0x13f13cf10 <line:25:3, line:28:3>
    |   | |-BinaryOperator 0x13f13cd18 <line:25:7, col:16> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x13f13cca0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x13f13ccf8 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13f13cef0 <col:28, line:28:3>
    |   |   |-CallExpr 0x13f13cde8 <line:26:4, col:22> 'int'
    |   |   | |-ImplicitCastExpr 0x13f13cdd0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x13f13cd38 <col:4> 'int ()' Function 0x13f13c188 'verbose' 'int ()'
    |   |   | |-ImplicitCastExpr 0x13f13ce18 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x13f13cd58 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |   |   | `-ImplicitCastExpr 0x13f13ce30 <col:17> 'char *' <ArrayToPointerDecay>
    |   |   |   `-StringLiteral 0x13f13cd78 <col:17> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13f13cee0 <line:27:4, col:12>
    |   |     `-UnaryOperator 0x13f13cec8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x13f13ceb0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x13f13ce90 <col:12> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x13f13d1a0 <line:29:3, col:23> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-CXXDependentScopeMemberExpr 0x13f13d138 <col:3, col:15> '<dependent type>' contains-errors lvalue .live
    |   | | `-ArraySubscriptExpr 0x13f13d118 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x13f13d0e8 <col:3> 'struct bpf_reg_state *' contains-errors <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x13f13cf30 <col:3> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    |   | |   `-ImplicitCastExpr 0x13f13d100 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x13f13cf50 <col:8> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x13f13d180 <col:23> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13f13d400 <line:30:3, line:31:37>
    |     |-BinaryOperator 0x13f13d248 <line:30:7, col:12> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x13f13d1d0 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x13f13d228 <col:12> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x13f13d3c8 <line:31:4, col:37> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13f13d348 <col:4> 'int ()' Function 0x13f13d290 'mark_reg_unknown' 'int ()'
    |       |-DeclRefExpr 0x13f13d368 <col:21> 'struct bpf_verifier_env *' lvalue ParmVar 0x13f80e248 'env' 'struct bpf_verifier_env *'
    |       |-DeclRefExpr 0x13f13d388 <col:26> 'struct bpf_reg_state *' contains-errors lvalue Var 0x13f13bf58 'regs' 'struct bpf_reg_state *'
    |       `-RecoveryExpr 0x13f13d3a8 <col:32> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f13d498 <line:33:2, col:9>
      `-IntegerLiteral 0x13f13d478 <col:9> 'int' 0
