`-FunctionDecl 0x13f026688  line:1:12 putreg 'int (struct task_struct *, unsigned long, unsigned long)' static
  |-ParmVarDecl 0x13f00e248 <col:19, col:39> col:39 used child 'struct task_struct *'
  |-ParmVarDecl 0x13f00e2c8 <line:2:2, col:16> col:16 used regno 'unsigned long'
  |-ParmVarDecl 0x13f00e348 <col:23, col:37> col:37 used value 'unsigned long'
  `-CompoundStmt 0x13f029e08 <line:3:1, line:32:1>
    |-SwitchStmt 0x13f026808 <line:4:2, line:27:2>
    | |-BinaryOperator 0x13f0267e8 <line:4:10, col:19> 'unsigned long' '>>'
    | | |-ImplicitCastExpr 0x13f0267d0 <col:10> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x13f026790 <col:10> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'
    | | `-IntegerLiteral 0x13f0267b0 <col:19> 'int' 2
    | `-CompoundStmt 0x13f027548 <col:22, line:27:2>
    |   |-IfStmt 0x13f026a68 <line:6:4, line:7:13>
    |   | |-BinaryOperator 0x13f0269a0 <line:6:8, col:32> 'int' '&&'
    |   | | |-ImplicitCastExpr 0x13f026988 <col:8> 'unsigned long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13f026860 <col:8> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | | `-BinaryOperator 0x13f026968 <col:17, col:32> 'int' '!='
    |   | |   |-ParenExpr 0x13f026910 <col:17, col:27> 'unsigned long'
    |   | |   | `-BinaryOperator 0x13f0268f0 <col:18, col:26> 'unsigned long' '&'
    |   | |   |   |-ImplicitCastExpr 0x13f0268c0 <col:18> 'unsigned long' <LValueToRValue>
    |   | |   |   | `-DeclRefExpr 0x13f026880 <col:18> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | |   |   `-ImplicitCastExpr 0x13f0268d8 <col:26> 'unsigned long' <IntegralCast>
    |   | |   |     `-IntegerLiteral 0x13f0268a0 <col:26> 'int' 3
    |   | |   `-ImplicitCastExpr 0x13f026950 <col:32> 'unsigned long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x13f026930 <col:32> 'int' 3
    |   | `-ReturnStmt 0x13f026a58 <line:7:5, col:13>
    |   |   `-UnaryOperator 0x13f026a40 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x13f026a28 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13f026a08 <col:13> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x13f026b50 <line:8:4, col:23> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x13f026ae8 <col:4, col:18> '<dependent type>' contains-errors lvalue .gs
    |   | | `-RecoveryExpr 0x13f026ac0 <col:4, col:11> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13f026a88 <col:4> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'
    |   | `-DeclRefExpr 0x13f026b30 <col:23> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   |-ReturnStmt 0x13f026b90 <line:9:4, col:11>
    |   | `-IntegerLiteral 0x13f026b70 <col:11> 'int' 0
    |   |-IfStmt 0x13f026df0 <line:13:4, line:14:13>
    |   | |-BinaryOperator 0x13f026d28 <line:13:8, col:32> 'int' '&&'
    |   | | |-ImplicitCastExpr 0x13f026d10 <col:8> 'unsigned long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13f026be8 <col:8> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | | `-BinaryOperator 0x13f026cf0 <col:17, col:32> 'int' '!='
    |   | |   |-ParenExpr 0x13f026c98 <col:17, col:27> 'unsigned long'
    |   | |   | `-BinaryOperator 0x13f026c78 <col:18, col:26> 'unsigned long' '&'
    |   | |   |   |-ImplicitCastExpr 0x13f026c48 <col:18> 'unsigned long' <LValueToRValue>
    |   | |   |   | `-DeclRefExpr 0x13f026c08 <col:18> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | |   |   `-ImplicitCastExpr 0x13f026c60 <col:26> 'unsigned long' <IntegralCast>
    |   | |   |     `-IntegerLiteral 0x13f026c28 <col:26> 'int' 3
    |   | |   `-ImplicitCastExpr 0x13f026cd8 <col:32> 'unsigned long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x13f026cb8 <col:32> 'int' 3
    |   | `-ReturnStmt 0x13f026de0 <line:14:5, col:13>
    |   |   `-UnaryOperator 0x13f026dc8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x13f026db0 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13f026d90 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x13f026e68 <line:15:4, col:13> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x13f026e10 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | `-ImplicitCastExpr 0x13f026e50 <col:13> 'unsigned long' <IntegralCast>
    |   |   `-IntegerLiteral 0x13f026e30 <col:13> 'int' 65535
    |   |-BreakStmt 0x13f026e98 <line:16:4>
    |   |-IfStmt 0x13f027080 <line:19:4, line:20:13>
    |   | |-BinaryOperator 0x13f026fb8 <line:19:8, col:23> 'int' '!='
    |   | | |-ParenExpr 0x13f026f60 <col:8, col:18> 'unsigned long'
    |   | | | `-BinaryOperator 0x13f026f40 <col:9, col:17> 'unsigned long' '&'
    |   | | |   |-ImplicitCastExpr 0x13f026f10 <col:9> 'unsigned long' <LValueToRValue>
    |   | | |   | `-DeclRefExpr 0x13f026ed0 <col:9> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | | |   `-ImplicitCastExpr 0x13f026f28 <col:17> 'unsigned long' <IntegralCast>
    |   | | |     `-IntegerLiteral 0x13f026ef0 <col:17> 'int' 3
    |   | | `-ImplicitCastExpr 0x13f026fa0 <col:23> 'unsigned long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x13f026f80 <col:23> 'int' 3
    |   | `-ReturnStmt 0x13f027070 <line:20:5, col:13>
    |   |   `-UnaryOperator 0x13f027058 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x13f027040 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13f027020 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x13f0270f8 <line:21:4, col:13> 'unsigned long' '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   | |-DeclRefExpr 0x13f0270a0 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | `-ImplicitCastExpr 0x13f0270e0 <col:13> 'unsigned long' <IntegralCast>
    |   |   `-IntegerLiteral 0x13f0270c0 <col:13> 'int' 65535
    |   |-BreakStmt 0x13f027128 <line:22:4>
    |   |-CompoundAssignOperator 0x13f0271d0 <line:24:4, col:13> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x13f027148 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | `-RecoveryExpr 0x13f0271b0 <col:13> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x13f027510 <line:25:4, col:50> 'unsigned long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x13f027200 <col:4> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    |   | `-BinaryOperator 0x13f0274f0 <col:13, col:50> '<dependent type>' contains-errors '&'
    |   |   |-CallExpr 0x13f027470 <col:13, col:45> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13f027330 <col:13> 'int ()' Function 0x13f027278 'get_stack_long' 'int ()'
    |   |   | |-DeclRefExpr 0x13f027350 <col:28> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'
    |   |   | `-RecoveryExpr 0x13f027450 <col:35> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x13f0274d8 <col:49, col:50> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   |     `-ImplicitCastExpr 0x13f0274c0 <col:50> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x13f0274a0 <col:50> '<dependent type>' contains-errors lvalue
    |   `-BreakStmt 0x13f027540 <line:26:4>
    |-IfStmt 0x13f029b88 <line:28:2, line:29:14>
    | |-BinaryOperator 0x13f029aa0 <line:28:6, col:17> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x13f0275b8 <col:6> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'
    | | `-BinaryOperator 0x13f029a80 <col:14, col:17> '<dependent type>' contains-errors '*'
    | |   |-RecoveryExpr 0x13f029a60 <col:14> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x13f029a00 <col:17> 'int' 4
    | `-CompoundAssignOperator 0x13f029b58 <line:29:3, col:14> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    |   |-DeclRefExpr 0x13f029ac0 <col:3> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'
    |   `-ImplicitCastExpr 0x13f029b40 <col:12, col:14> 'unsigned long' <IntegralCast>
    |     `-BinaryOperator 0x13f029b20 <col:12, col:14> 'int' '*'
    |       |-IntegerLiteral 0x13f029ae0 <col:12> 'int' 1
    |       `-IntegerLiteral 0x13f029b00 <col:14> 'int' 4
    |-CallExpr 0x13f029d58 <line:30:2, col:36> 'int'
    | |-ImplicitCastExpr 0x13f029d40 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13f029c88 <col:2> 'int ()' Function 0x13f029bd0 'put_stack_long' 'int ()'
    | |-ImplicitCastExpr 0x13f029d90 <col:17> 'struct task_struct *' <LValueToRValue>
    | | `-DeclRefExpr 0x13f029ca8 <col:17> 'struct task_struct *' lvalue ParmVar 0x13f00e248 'child' 'struct task_struct *'
    | |-ImplicitCastExpr 0x13f029da8 <col:24> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x13f029cc8 <col:24> 'unsigned long' lvalue ParmVar 0x13f00e2c8 'regno' 'unsigned long'
    | `-ImplicitCastExpr 0x13f029dc0 <col:31> 'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x13f029ce8 <col:31> 'unsigned long' lvalue ParmVar 0x13f00e348 'value' 'unsigned long'
    `-ReturnStmt 0x13f029df8 <line:31:2, col:9>
      `-IntegerLiteral 0x13f029dd8 <col:9> 'int' 0
