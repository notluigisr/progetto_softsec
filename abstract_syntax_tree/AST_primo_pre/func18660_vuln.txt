`-FunctionDecl 0x11e928d10  line:1:13 invalid spl_multiple_iterator_get_all 'void (int *, int, int *)' static
  |-ParmVarDecl 0x11e928b28 <col:43, col:65> col:65 invalid intern 'int *'
  |-ParmVarDecl 0x11e928ba8 <col:73, col:77> col:77 used get_type 'int'
  |-ParmVarDecl 0x11e928c28 <col:87, col:93> col:93 invalid return_value 'int *'
  `-CompoundStmt 0x11f00b6e0 <line:2:1, line:66:1>
    |-DeclStmt 0x11e928fb8 <line:5:2, col:54>
    | |-VarDecl 0x11e928e98 <col:2, col:39> col:31 used valid 'int' cinit
    | | `-IntegerLiteral 0x11e928f00 <col:39> 'int' 1
    | `-VarDecl 0x11e928f38 <col:2, col:42> col:42 used num_elements 'int'
    |-BinaryOperator 0x11f008c28 <line:7:2, col:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e928fd0 <col:2> 'int' lvalue Var 0x11e928f38 'num_elements' 'int'
    | `-CallExpr 0x11f008c00 <col:17, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e929150 <col:17> 'int ()' Function 0x11e929098 'zend_hash_num_elements' 'int ()'
    |   `-UnaryOperator 0x11e9291d8 <col:40, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x11e929190 <col:41, col:49> '<dependent type>' contains-errors lvalue ->storage
    |       `-RecoveryExpr 0x11e929170 <col:41> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f008cd0 <line:8:2, line:10:2>
    | |-BinaryOperator 0x11f008ca0 <line:8:6, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x11f008c88 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11f008c48 <col:6> 'int' lvalue Var 0x11e928f38 'num_elements' 'int'
    | | `-IntegerLiteral 0x11f008c68 <col:21> 'int' 1
    | `-CompoundStmt 0x11f008cc0 <col:24, line:10:2>
    |-CallExpr 0x11f008e30 <line:12:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f008dd0 <col:2> 'int ()' Function 0x11f008d18 'array_init_size' 'int ()'
    | |-RecoveryExpr 0x11f008df0 <col:18> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x11f008e10 <col:32> 'int' lvalue Var 0x11e928f38 'num_elements' 'int'
    |-CallExpr 0x11f009060 <line:14:2, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f008f40 <col:2> 'int ()' Function 0x11f008e88 'zend_hash_internal_pointer_reset_ex' 'int ()'
    | |-UnaryOperator 0x11f008fc8 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x11f008f80 <col:39, col:47> '<dependent type>' contains-errors lvalue ->storage
    | |   `-RecoveryExpr 0x11f008f60 <col:39> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x11f009048 <col:56, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x11f009000 <col:57, col:65> '<dependent type>' contains-errors lvalue ->pos
    |     `-RecoveryExpr 0x11f008fe0 <col:57> '<dependent type>' contains-errors lvalue
    `-WhileStmt 0x11f00b6c0 <line:15:2, line:65:2>
      |-RecoveryExpr 0x11f009478 <line:15:9, col:116> '_Bool' contains-errors
      `-CompoundStmt 0x11f00b690 <col:119, line:65:2>
        |-IfStmt 0x11f009a48 <line:19:3, line:24:3> has_else
        | |-RecoveryExpr 0x11f009780 <line:19:7> '_Bool' contains-errors
        | |-CompoundStmt 0x11f0099c0 <col:15, line:22:3>
        | `-CompoundStmt 0x11f009a30 <col:10, line:24:3>
        |   `-BinaryOperator 0x11f009a10 <line:23:4, col:12> 'int' '='
        |     |-DeclRefExpr 0x11f0099d0 <col:4> 'int' lvalue Var 0x11e928e98 'valid' 'int'
        |     `-IntegerLiteral 0x11f0099f0 <col:12> 'int' 0
        |-IfStmt 0x11f00ab50 <line:26:3, line:45:3> has_else
        | |-ImplicitCastExpr 0x11f009a98 <line:26:7> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x11f009a78 <col:7> 'int' lvalue Var 0x11e928e98 'valid' 'int'
        | |-CompoundStmt 0x11f00a7e8 <col:14, line:36:3>
        | | |-IfStmt 0x11f00a610 <line:27:4, line:31:4> has_else
        | | | |-RecoveryExpr 0x11f009ad0 <line:27:8, col:49> '_Bool' contains-errors
        | | | |-CompoundStmt 0x11f009b70 <col:59, line:29:4>
        | | | `-CompoundStmt 0x11f00a600 <col:11, line:31:4>
        | | `-IfStmt 0x11f00a7c8 <line:32:4, line:35:4>
        | |   |-RecoveryExpr 0x11f00a640 <line:32:8, col:9> '_Bool' contains-errors
        | |   `-CompoundStmt 0x11f00a7b0 <col:17, line:35:4>
        | |     `-ReturnStmt 0x11f00a7a0 <line:34:5>
        | `-IfStmt 0x11f00ab20 <line:36:10, line:45:3> has_else
        |   |-RecoveryExpr 0x11f00a870 <line:36:14, col:30> '_Bool' contains-errors
        |   |-CompoundStmt 0x11f00a9f0 <col:44, line:43:3>
        |   | |-IfStmt 0x11f00a9b0 <line:37:4, line:41:4> has_else
        |   | | |-RecoveryExpr 0x11f00a8b0 <line:37:8, col:49> '_Bool' contains-errors
        |   | | |-CompoundStmt 0x11f00a930 <col:59, line:39:4>
        |   | | `-CompoundStmt 0x11f00a9a0 <col:11, line:41:4>
        |   | `-ReturnStmt 0x11f00a9e0 <line:42:4>
        |   `-CompoundStmt 0x11f00ab10 <line:43:10, line:45:3>
        |-IfStmt 0x11f00b410 <line:47:3, line:62:3> has_else
        | |-RecoveryExpr 0x11f00abe8 <line:47:7, col:23> '_Bool' contains-errors
        | |-CompoundStmt 0x11f00b2c8 <col:39, line:60:3>
        | | `-SwitchStmt 0x11f00ad28 <line:48:4, line:59:4>
        | |   |-RecoveryExpr 0x11f00ad08 <line:48:12, col:33> 'int' contains-errors
        | |   `-CompoundStmt 0x11f00b298 <col:36, line:59:4>
        | |     |-BreakStmt 0x11f00ae90 <line:51:6>
        | |     |-BreakStmt 0x11f00b1d8 <line:54:6>
        | |     |-DefaultStmt 0x11f00b208 <line:55:5, col:12>
        | |     | `-NullStmt 0x11f00b200 <col:12>
        | |     `-ReturnStmt 0x11f00b288 <line:58:6>
        | `-CompoundStmt 0x11f00b400 <line:60:10, line:62:3>
        `-CallExpr 0x11f00b660 <line:64:3, col:59> '<dependent type>' contains-errors
          |-DeclRefExpr 0x11f00b520 <col:3> 'int ()' Function 0x11f00b468 'zend_hash_move_forward_ex' 'int ()'
          |-UnaryOperator 0x11f00b5a8 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
          | `-CXXDependentScopeMemberExpr 0x11f00b560 <col:30, col:38> '<dependent type>' contains-errors lvalue ->storage
          |   `-RecoveryExpr 0x11f00b540 <col:30> '<dependent type>' contains-errors lvalue
          `-UnaryOperator 0x11f00b648 <col:47, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
            `-CXXDependentScopeMemberExpr 0x11f00b600 <col:48, col:56> '<dependent type>' contains-errors lvalue ->pos
              `-RecoveryExpr 0x11f00b5c0 <col:48> '<dependent type>' contains-errors lvalue
