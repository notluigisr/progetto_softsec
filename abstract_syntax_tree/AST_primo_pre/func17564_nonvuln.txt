`-FunctionDecl 0x1259281c8  line:1:1 invalid SWFInput_getUInt16_BE 'int (int)'
  |-ParmVarDecl 0x1259280f0 <col:23, col:32> col:32 invalid input 'int'
  `-CompoundStmt 0x125928610 <line:2:1, line:6:1>
    |-DeclStmt 0x1259284f8 <line:3:2, col:40>
    | `-VarDecl 0x125928290 <col:2, col:39> col:6 used num 'int' cinit
    |   `-BinaryOperator 0x1259284d8 <col:12, col:39> '<dependent type>' contains-errors '<<'
    |     |-CallExpr 0x125928490 <col:12, col:34> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x125928450 <col:12> 'int ()' Function 0x125928398 'SWFInput_getChar' 'int ()'
    |     | `-RecoveryExpr 0x125928470 <col:29> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1259284b8 <col:39> 'int' 8
    |-CompoundAssignOperator 0x125928598 <line:4:2, col:31> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x125928510 <col:2> 'int' contains-errors lvalue Var 0x125928290 'num' 'int'
    | `-CallExpr 0x125928570 <col:9, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125928530 <col:9> 'int ()' Function 0x125928398 'SWFInput_getChar' 'int ()'
    |   `-RecoveryExpr 0x125928550 <col:26> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x125928600 <line:5:2, col:9>
      `-ImplicitCastExpr 0x1259285e8 <col:9> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1259285c8 <col:9> 'int' contains-errors lvalue Var 0x125928290 'num' 'int'
