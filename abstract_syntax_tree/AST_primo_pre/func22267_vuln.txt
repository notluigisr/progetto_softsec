`-FunctionDecl 0x13480de88  line:1:12 invalid fts3SpecialInsert 'int (int *, int *)' static
  |-ParmVarDecl 0x13480dd28 <col:30, col:41> col:41 invalid p 'int *'
  |-ParmVarDecl 0x13480dda8 <col:44, col:59> col:59 invalid pVal 'int *'
  `-CompoundStmt 0x1341232a0 <col:64, line:36:1>
    |-DeclStmt 0x13480dff8 <line:2:3, col:24>
    | `-VarDecl 0x13480df58 <col:3, col:12> col:7 used rc 'int' cinit
    |   `-RecoveryExpr 0x13480dfd8 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13480e298 <line:3:3, col:60>
    | `-VarDecl 0x13480e028 <col:3, col:59> col:15 used zVal 'const char *' cinit
    |   `-CStyleCastExpr 0x13480e270 <col:22, col:59> 'const char *' contains-errors <Dependent>
    |     `-CallExpr 0x13480e230 <col:36, col:59> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x13480e1f0 <col:36> 'int ()' Function 0x13480e138 'sqlite3_value_text' 'int ()'
    |       `-RecoveryExpr 0x13480e210 <col:55> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x134828478 <line:4:3, col:39>
    | `-VarDecl 0x13480e2c8 <col:3, col:38> col:7 used nVal 'int' cinit
    |   `-CallExpr 0x134828450 <col:14, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x134828410 <col:14> 'int ()' Function 0x13480e358 'sqlite3_value_bytes' 'int ()'
    |     `-RecoveryExpr 0x134828430 <col:34> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x134123228 <line:6:3, line:34:3> has_else
    | |-UnaryOperator 0x1348284c8 <line:6:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1348284b0 <col:8> 'const char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x134828490 <col:8> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    | |-CompoundStmt 0x134828528 <col:14, line:8:3>
    | | `-ReturnStmt 0x134828518 <line:7:5, col:12>
    | |   `-RecoveryExpr 0x1348284f8 <col:12> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x1341231f8 <line:8:9, line:34:3> has_else
    |   |-BinaryOperator 0x134828850 <line:8:13, col:58> 'int' contains-errors '&&'
    |   | |-BinaryOperator 0x134828598 <col:13, col:19> 'int' contains-errors '=='
    |   | | |-ImplicitCastExpr 0x134828580 <col:13> 'int' contains-errors <LValueToRValue>
    |   | | | `-DeclRefExpr 0x134828540 <col:13> 'int' contains-errors lvalue Var 0x13480e2c8 'nVal' 'int'
    |   | | `-IntegerLiteral 0x134828560 <col:19> 'int' 8
    |   | `-BinaryOperator 0x134828830 <col:24, col:58> 'int' contains-errors '=='
    |   |   |-IntegerLiteral 0x1348285b8 <col:24> 'int' 0
    |   |   `-CallExpr 0x1348287c8 <col:27, col:58> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x1348287b0 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1348286b8 <col:27> 'int ()' Function 0x134828600 'sqlite3_strnicmp' 'int ()'
    |   |     |-ImplicitCastExpr 0x134828800 <col:44> 'const char *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x1348286d8 <col:44> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |   |     |-ImplicitCastExpr 0x134828818 <col:50> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x134828740 <col:50> 'char[4]' lvalue "STR"
    |   |     `-IntegerLiteral 0x134828760 <col:57> 'int' 8
    |   |-CompoundStmt 0x134828a20 <col:61, line:10:3>
    |   | `-BinaryOperator 0x134828a00 <line:9:5, col:29> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x134828870 <col:5> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
    |   |   `-CallExpr 0x1348289d0 <col:10, col:29> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x134828970 <col:10> 'int ()' Function 0x1348288b8 'fts3DoOptimize' 'int ()'
    |   |     |-RecoveryExpr 0x134828990 <col:25> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x1348289b0 <col:28> 'int' 0
    |   `-IfStmt 0x1341231c8 <line:10:9, line:34:3> has_else
    |     |-BinaryOperator 0x134828bf0 <line:10:13, col:58> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x134828a90 <col:13, col:19> 'int' contains-errors '=='
    |     | | |-ImplicitCastExpr 0x134828a78 <col:13> 'int' contains-errors <LValueToRValue>
    |     | | | `-DeclRefExpr 0x134828a38 <col:13> 'int' contains-errors lvalue Var 0x13480e2c8 'nVal' 'int'
    |     | | `-IntegerLiteral 0x134828a58 <col:19> 'int' 7
    |     | `-BinaryOperator 0x134828bd0 <col:24, col:58> 'int' contains-errors '=='
    |     |   |-IntegerLiteral 0x134828ab0 <col:24> 'int' 0
    |     |   `-CallExpr 0x134828b68 <col:27, col:58> 'int' contains-errors
    |     |     |-ImplicitCastExpr 0x134828b50 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x134828ad0 <col:27> 'int ()' Function 0x134828600 'sqlite3_strnicmp' 'int ()'
    |     |     |-ImplicitCastExpr 0x134828ba0 <col:44> 'const char *' contains-errors <LValueToRValue>
    |     |     | `-DeclRefExpr 0x134828af0 <col:44> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |     |     |-ImplicitCastExpr 0x134828bb8 <col:50> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x134828b10 <col:50> 'char[4]' lvalue "STR"
    |     |     `-IntegerLiteral 0x134828b30 <col:57> 'int' 7
    |     |-CompoundStmt 0x134828d98 <col:61, line:12:3>
    |     | `-BinaryOperator 0x134828d78 <line:11:5, col:25> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x134828c10 <col:5> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
    |     |   `-CallExpr 0x134828d50 <col:10, col:25> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x134828d10 <col:10> 'int ()' Function 0x134828c58 'fts3DoRebuild' 'int ()'
    |     |     `-RecoveryExpr 0x134828d30 <col:24> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x134123198 <line:12:9, line:34:3> has_else
    |       |-BinaryOperator 0x134828f68 <line:12:13, col:60> 'int' contains-errors '&&'
    |       | |-BinaryOperator 0x134828e08 <col:13, col:19> 'int' contains-errors '=='
    |       | | |-ImplicitCastExpr 0x134828df0 <col:13> 'int' contains-errors <LValueToRValue>
    |       | | | `-DeclRefExpr 0x134828db0 <col:13> 'int' contains-errors lvalue Var 0x13480e2c8 'nVal' 'int'
    |       | | `-IntegerLiteral 0x134828dd0 <col:19> 'int' 15
    |       | `-BinaryOperator 0x134828f48 <col:25, col:60> 'int' contains-errors '=='
    |       |   |-IntegerLiteral 0x134828e28 <col:25> 'int' 0
    |       |   `-CallExpr 0x134828ee0 <col:28, col:60> 'int' contains-errors
    |       |     |-ImplicitCastExpr 0x134828ec8 <col:28> 'int (*)()' <FunctionToPointerDecay>
    |       |     | `-DeclRefExpr 0x134828e48 <col:28> 'int ()' Function 0x134828600 'sqlite3_strnicmp' 'int ()'
    |       |     |-ImplicitCastExpr 0x134828f18 <col:45> 'const char *' contains-errors <LValueToRValue>
    |       |     | `-DeclRefExpr 0x134828e68 <col:45> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |       |     |-ImplicitCastExpr 0x134828f30 <col:51> 'char *' <ArrayToPointerDecay>
    |       |     | `-StringLiteral 0x134828e88 <col:51> 'char[4]' lvalue "STR"
    |       |     `-IntegerLiteral 0x134828ea8 <col:58> 'int' 15
    |       |-CompoundStmt 0x134829110 <col:63, line:14:3>
    |       | `-BinaryOperator 0x1348290f0 <line:13:5, col:32> 'int' contains-errors '='
    |       |   |-DeclRefExpr 0x134828f88 <col:5> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
    |       |   `-CallExpr 0x1348290c8 <col:10, col:32> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x134829088 <col:10> 'int ()' Function 0x134828fd0 'fts3DoIntegrityCheck' 'int ()'
    |       |     `-RecoveryExpr 0x1348290a8 <col:31> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x134123168 <line:14:9, line:34:3> has_else
    |         |-BinaryOperator 0x1348292e0 <line:14:13, col:57> 'int' contains-errors '&&'
    |         | |-BinaryOperator 0x134829180 <col:13, col:18> 'int' contains-errors '>'
    |         | | |-ImplicitCastExpr 0x134829168 <col:13> 'int' contains-errors <LValueToRValue>
    |         | | | `-DeclRefExpr 0x134829128 <col:13> 'int' contains-errors lvalue Var 0x13480e2c8 'nVal' 'int'
    |         | | `-IntegerLiteral 0x134829148 <col:18> 'int' 6
    |         | `-BinaryOperator 0x1348292c0 <col:23, col:57> 'int' contains-errors '=='
    |         |   |-IntegerLiteral 0x1348291a0 <col:23> 'int' 0
    |         |   `-CallExpr 0x134829258 <col:26, col:57> 'int' contains-errors
    |         |     |-ImplicitCastExpr 0x134829240 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |         |     | `-DeclRefExpr 0x1348291c0 <col:26> 'int ()' Function 0x134828600 'sqlite3_strnicmp' 'int ()'
    |         |     |-ImplicitCastExpr 0x134829290 <col:43> 'const char *' contains-errors <LValueToRValue>
    |         |     | `-DeclRefExpr 0x1348291e0 <col:43> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |         |     |-ImplicitCastExpr 0x1348292a8 <col:49> 'char *' <ArrayToPointerDecay>
    |         |     | `-StringLiteral 0x134829200 <col:49> 'char[4]' lvalue "STR"
    |         |     `-IntegerLiteral 0x134829220 <col:56> 'int' 6
    |         |-CompoundStmt 0x134122d20 <col:60, line:16:3>
    |         | `-BinaryOperator 0x134122d00 <line:15:5, col:37> 'int' contains-errors '='
    |         |   |-DeclRefExpr 0x134829300 <col:5> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
    |         |   `-CallExpr 0x134122cd0 <col:10, col:37> '<dependent type>' contains-errors
    |         |     |-DeclRefExpr 0x134122c00 <col:10> 'int ()' Function 0x134829348 'fts3DoIncrmerge' 'int ()'
    |         |     |-RecoveryExpr 0x134122c20 <col:26> '<dependent type>' contains-errors lvalue
    |         |     `-UnaryOperator 0x134122cb8 <col:29, col:36> 'const char *' contains-errors prefix '&' cannot overflow
    |         |       `-ArraySubscriptExpr 0x134122c98 <col:30, col:36> 'const char' contains-errors lvalue
    |         |         |-ImplicitCastExpr 0x134122c80 <col:30> 'const char *' contains-errors <LValueToRValue>
    |         |         | `-DeclRefExpr 0x134122c40 <col:30> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |         |         `-IntegerLiteral 0x134122c60 <col:35> 'int' 6
    |         `-IfStmt 0x134123148 <line:16:9, line:34:3>
    |           |-BinaryOperator 0x134122ef0 <line:16:13, col:59> 'int' contains-errors '&&'
    |           | |-BinaryOperator 0x134122d90 <col:13, col:18> 'int' contains-errors '>'
    |           | | |-ImplicitCastExpr 0x134122d78 <col:13> 'int' contains-errors <LValueToRValue>
    |           | | | `-DeclRefExpr 0x134122d38 <col:13> 'int' contains-errors lvalue Var 0x13480e2c8 'nVal' 'int'
    |           | | `-IntegerLiteral 0x134122d58 <col:18> 'int' 10
    |           | `-BinaryOperator 0x134122ed0 <col:24, col:59> 'int' contains-errors '=='
    |           |   |-IntegerLiteral 0x134122db0 <col:24> 'int' 0
    |           |   `-CallExpr 0x134122e68 <col:27, col:59> 'int' contains-errors
    |           |     |-ImplicitCastExpr 0x134122e50 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |           |     | `-DeclRefExpr 0x134122dd0 <col:27> 'int ()' Function 0x134828600 'sqlite3_strnicmp' 'int ()'
    |           |     |-ImplicitCastExpr 0x134122ea0 <col:44> 'const char *' contains-errors <LValueToRValue>
    |           |     | `-DeclRefExpr 0x134122df0 <col:44> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |           |     |-ImplicitCastExpr 0x134122eb8 <col:50> 'char *' <ArrayToPointerDecay>
    |           |     | `-StringLiteral 0x134122e10 <col:50> 'char[4]' lvalue "STR"
    |           |     `-IntegerLiteral 0x134122e30 <col:57> 'int' 10
    |           `-CompoundStmt 0x134123130 <col:62, line:34:3>
    |             `-BinaryOperator 0x134123110 <line:17:5, col:42> 'int' contains-errors '='
    |               |-DeclRefExpr 0x134122f10 <col:5> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
    |               `-CallExpr 0x1341230e0 <col:10, col:42> '<dependent type>' contains-errors
    |                 |-DeclRefExpr 0x134123010 <col:10> 'int ()' Function 0x134122f58 'fts3DoAutoincrmerge' 'int ()'
    |                 |-RecoveryExpr 0x134123030 <col:30> '<dependent type>' contains-errors lvalue
    |                 `-UnaryOperator 0x1341230c8 <col:33, col:41> 'const char *' contains-errors prefix '&' cannot overflow
    |                   `-ArraySubscriptExpr 0x1341230a8 <col:34, col:41> 'const char' contains-errors lvalue
    |                     |-ImplicitCastExpr 0x134123090 <col:34> 'const char *' contains-errors <LValueToRValue>
    |                     | `-DeclRefExpr 0x134123050 <col:34> 'const char *' contains-errors lvalue Var 0x13480e028 'zVal' 'const char *'
    |                     `-IntegerLiteral 0x134123070 <col:39> 'int' 10
    `-ReturnStmt 0x134123290 <line:35:3, col:10>
      `-ImplicitCastExpr 0x134123278 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x134123258 <col:10> 'int' contains-errors lvalue Var 0x13480df58 'rc' 'int'
