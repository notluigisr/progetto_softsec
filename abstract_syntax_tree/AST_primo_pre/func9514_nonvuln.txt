`-FunctionDecl 0x122097000  line:1:1 m_wnumx 'int (union DateData *, int)'
  |-ParmVarDecl 0x1228ac648 <col:9, col:25> col:25 used x 'union DateData *'
  |-ParmVarDecl 0x1228ac6c8 <col:28, col:32> col:32 used f 'int'
  `-CompoundStmt 0x1220978e0 <line:2:1, line:8:1>
    |-DeclStmt 0x1220972a0 <line:3:5, col:19>
    | |-VarDecl 0x122097118 <col:5, col:9> col:9 used ry 'int'
    | |-VarDecl 0x122097198 <col:5, col:13> col:13 used rw 'int'
    | `-VarDecl 0x122097218 <col:5, col:17> col:17 used rd 'int'
    |-CallExpr 0x122097830 <line:5:5, line:6:20> 'int'
    | |-ImplicitCastExpr 0x122097818 <line:5:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1220973e0 <col:5> 'int ()' Function 0x122097328 'c_jd_to_weeknum' 'int ()'
    | |-CallExpr 0x122097568 <col:21, col:33> 'int'
    | | |-ImplicitCastExpr 0x122097550 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1220974e0 <col:21> 'int ()' Function 0x122097428 'm_local_jd' 'int ()'
    | | `-ImplicitCastExpr 0x122097590 <col:32> 'union DateData *' <LValueToRValue>
    | |   `-DeclRefExpr 0x122097500 <col:32> 'union DateData *' lvalue ParmVar 0x1228ac648 'x' 'union DateData *'
    | |-ImplicitCastExpr 0x122097880 <col:36> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1220975a8 <col:36> 'int' lvalue ParmVar 0x1228ac6c8 'f' 'int'
    | |-CallExpr 0x122097700 <col:39, col:53> 'int'
    | | |-ImplicitCastExpr 0x1220976e8 <col:39> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1220976a8 <col:39> 'int ()' Function 0x1220975f0 'm_virtual_sg' 'int ()'
    | | `-ImplicitCastExpr 0x122097728 <col:52> 'union DateData *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1220976c8 <col:52> 'union DateData *' lvalue ParmVar 0x1228ac648 'x' 'union DateData *'
    | |-UnaryOperator 0x122097790 <line:6:7, col:8> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x122097740 <col:8> 'int' lvalue Var 0x122097118 'ry' 'int'
    | |-UnaryOperator 0x1220977c8 <col:12, col:13> 'int *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x1220977a8 <col:13> 'int' lvalue Var 0x122097198 'rw' 'int'
    | `-UnaryOperator 0x122097800 <col:17, col:18> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x1220977e0 <col:18> 'int' lvalue Var 0x122097218 'rd' 'int'
    `-ReturnStmt 0x1220978d0 <line:7:5, col:12>
      `-ImplicitCastExpr 0x1220978b8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x122097898 <col:12> 'int' lvalue Var 0x122097198 'rw' 'int'
