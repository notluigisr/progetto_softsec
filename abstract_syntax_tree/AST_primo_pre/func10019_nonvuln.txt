`-FunctionDecl 0x124928318  line:1:12 invalid zipfileScanExtra 'int (int *, int, int *)' static
  |-ParmVarDecl 0x124928128 <col:29, col:33> col:33 invalid aExtra 'int *'
  |-ParmVarDecl 0x1249281a8 <col:41, col:45> col:45 used nExtra 'int'
  |-ParmVarDecl 0x124928228 <col:53, col:58> col:58 invalid pmTime 'int *'
  `-CompoundStmt 0x124941ed8 <col:65, line:24:1>
    |-DeclStmt 0x124928478 <line:2:3, col:14>
    | `-VarDecl 0x1249283f0 <col:3, col:13> col:7 used ret 'int' cinit
    |   `-IntegerLiteral 0x124928458 <col:13> 'int' 0
    |-WhileStmt 0x124941e70 <line:6:3, line:22:3>
    | |-BinaryOperator 0x124928618 <line:6:10, col:12> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1249285d8 <col:10> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1249285f8 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124941e58 <col:18, line:22:3>
    |   `-SwitchStmt 0x124928688 <line:10:5, line:19:5>
    |     |-RecoveryExpr 0x124928668 <line:10:13> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x124941e28 <col:17, line:19:5>
    |       `-CompoundStmt 0x124941e08 <line:11:37, line:18:7>
    |         |-IfStmt 0x124941de0 <line:13:9, line:16:9>
    |         | |-BinaryOperator 0x124928740 <line:13:13, col:17> '<dependent type>' contains-errors '&'
    |         | | |-RecoveryExpr 0x124928720 <col:13> '<dependent type>' contains-errors lvalue
    |         | | `-IntegerLiteral 0x1249286e0 <col:17> 'int' 1
    |         | `-CompoundStmt 0x124941dc8 <col:23, line:16:9>
    |         |   `-BinaryOperator 0x124941da8 <line:15:11, col:17> 'int' '='
    |         |     |-DeclRefExpr 0x124941d68 <col:11> 'int' lvalue Var 0x1249283f0 'ret' 'int'
    |         |     `-IntegerLiteral 0x124941d88 <col:17> 'int' 1
    |         `-BreakStmt 0x124941e00 <line:17:9>
    `-ReturnStmt 0x124941ec8 <line:23:3, col:10>
      `-ImplicitCastExpr 0x124941eb0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x124941e90 <col:10> 'int' lvalue Var 0x1249283f0 'ret' 'int'
