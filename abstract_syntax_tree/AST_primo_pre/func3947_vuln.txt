`-FunctionDecl 0x129030a58  line:1:12 invalid lock_fdc 'int (int, int)' static
  |-ParmVarDecl 0x1290308d8 <col:21, col:25> col:25 used drive 'int'
  |-ParmVarDecl 0x129030970 <col:32, col:37> col:37 invalid interruptible 'int'
  `-CompoundStmt 0x12a05c600 <line:2:1, line:15:1>
    |-IfStmt 0x129030fb8 <line:3:2, line:5:11>
    | |-CallExpr 0x129030f40 <line:3:6, line:4:9> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x129030c70 <line:3:6> 'int ()' Function 0x129030bb8 'WARN' 'int ()'
    | | |-BinaryOperator 0x129030f20 <col:11, col:40> 'int' contains-errors '=='
    | | | |-CallExpr 0x129030ef8 <col:11, col:35> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x129030d70 <col:11> 'int ()' Function 0x129030cb8 'atomic_read' 'int ()'
    | | | | `-UnaryOperator 0x129030ee0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |   `-RecoveryExpr 0x129030ec0 <col:24> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x129030de8 <col:40> 'int' 0
    | | `-StringLiteral 0x129030e70 <line:4:4> 'char[4]' lvalue "STR"
    | `-ReturnStmt 0x129030fa8 <line:5:3, col:11>
    |   `-UnaryOperator 0x129030f90 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x129030f70 <col:11> 'int' 1
    |-IfStmt 0x12a05c230 <line:7:2, line:8:11>
    | |-CallExpr 0x12a05c158 <line:7:6, col:72> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a05beb8 <col:6> 'int ()' Function 0x12a05be00 'wait_event_interruptible' 'int ()'
    | | |-RecoveryExpr 0x12a05c0b8 <col:31> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12a05c140 <col:41, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x12a05c110 <col:42, col:71> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x12a05bfd0 <col:42> 'int ()' Function 0x12a05bf18 'test_and_set_bit' 'int ()'
    | |     |-IntegerLiteral 0x12a05bff0 <col:59> 'int' 0
    | |     `-UnaryOperator 0x12a05c0f8 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |       `-RecoveryExpr 0x12a05c0d8 <col:63> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12a05c220 <line:8:3, col:11>
    |   `-UnaryOperator 0x12a05c208 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12a05c1f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12a05c1d0 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12a05c3f8 <line:12:2, col:33> 'int'
    | |-ImplicitCastExpr 0x12a05c3e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a05c348 <col:2> 'int ()' Function 0x12a05c290 'reschedule_timeout' 'int ()'
    | |-ImplicitCastExpr 0x12a05c428 <col:21> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12a05c368 <col:21> 'int' lvalue ParmVar 0x1290308d8 'drive' 'int'
    | `-ImplicitCastExpr 0x12a05c440 <col:28> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x12a05c388 <col:28> 'char[4]' lvalue "STR"
    |-CallExpr 0x12a05c590 <line:13:2, col:15> 'int'
    | |-ImplicitCastExpr 0x12a05c578 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a05c538 <col:2> 'int ()' Function 0x12a05c480 'set_fdc' 'int ()'
    | `-ImplicitCastExpr 0x12a05c5b8 <col:10> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12a05c558 <col:10> 'int' lvalue ParmVar 0x1290308d8 'drive' 'int'
    `-ReturnStmt 0x12a05c5f0 <line:14:2, col:9>
      `-IntegerLiteral 0x12a05c5d0 <col:9> 'int' 0
