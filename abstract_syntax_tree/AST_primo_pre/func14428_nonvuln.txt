`-FunctionDecl 0x11e80df18  line:1:1 invalid num_divide 'int (int, int, int *)'
  |-ParmVarDecl 0x11e80dcf0 <col:12, col:24> col:24 invalid n1 'int'
  |-ParmVarDecl 0x11e80dd70 <col:28, col:40> col:40 invalid n2 'int'
  |-ParmVarDecl 0x11e80de28 <col:44, col:49> col:49 used failed 'int *'
  `-CompoundStmt 0x11e827948 <line:2:1, line:24:1>
    |-IfStmt 0x11e8278d0 <line:5:5, line:21:2> has_else
    | |-BinaryOperator 0x11e80e018 <line:5:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x11e80dfd8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x11e80dff8 <col:15> 'int' 0
    | |-CompoundStmt 0x11e827850 <line:6:5, line:19:5>
    | | `-IfStmt 0x11e8276f8 <line:7:2, line:12:2>
    | |   |-CallExpr 0x11e80e1f8 <line:7:6, col:20> 'int'
    | |   | `-ImplicitCastExpr 0x11e80e1e0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | |   |   `-DeclRefExpr 0x11e80e190 <col:6> 'int ()' Function 0x11e80e0d8 'in_vim9script' 'int ()'
    | |   `-CompoundStmt 0x11e8276d8 <line:8:2, line:12:2>
    | |     |-CallExpr 0x11e8274d0 <line:9:6, col:30> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x11e80e2f8 <col:6> 'int ()' Function 0x11e80e240 'emsg' 'int ()'
    | |     | `-CallExpr 0x11e8274a8 <col:11, col:29> '<dependent type>' contains-errors
    | |     |   |-DeclRefExpr 0x11e827400 <col:11> 'int ()' Function 0x11e80e340 '_' 'int ()'
    | |     |   `-RecoveryExpr 0x11e827488 <col:13> '<dependent type>' contains-errors lvalue
    | |     `-IfStmt 0x11e8276b8 <line:10:6, line:11:13>
    | |       |-BinaryOperator 0x11e827570 <line:10:10, col:20> 'int' contains-errors '!='
    | |       | |-DeclRefExpr 0x11e8274f8 <col:10> 'int *' lvalue ParmVar 0x11e80de28 'failed' 'int *'
    | |       | `-RecoveryExpr 0x11e827550 <col:20> '<dependent type>' contains-errors lvalue
    | |       `-BinaryOperator 0x11e827698 <line:11:3, col:13> 'int' contains-errors '='
    | |         |-UnaryOperator 0x11e827660 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    | |         | `-ImplicitCastExpr 0x11e827648 <col:4> 'int *' <LValueToRValue>
    | |         |   `-DeclRefExpr 0x11e827590 <col:4> 'int *' lvalue ParmVar 0x11e80de28 'failed' 'int *'
    | |         `-RecoveryExpr 0x11e827678 <col:13> '<dependent type>' contains-errors lvalue
    | `-NullStmt 0x11e8278c8 <line:21:2>
    `-ReturnStmt 0x11e827938 <line:23:5, col:12>
      `-RecoveryExpr 0x11e827918 <col:12> '<dependent type>' contains-errors lvalue
