`-FunctionDecl 0x12680df18  line:1:12 invalid crl_extension_match 'int (int *, int *, int)' static
  |-ParmVarDecl 0x12680dd28 <col:32, col:42> col:42 invalid a 'int *'
  |-ParmVarDecl 0x12680dda8 <col:45, col:55> col:55 invalid b 'int *'
  |-ParmVarDecl 0x12680de28 <col:58, col:62> col:62 used nid 'int'
  `-CompoundStmt 0x126828568 <line:2:2, line:39:2>
    |-DeclStmt 0x12680e0b8 <line:4:2, col:7>
    | `-VarDecl 0x12680e050 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x12680e320 <line:5:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x12680e0d0 <col:2> 'int' lvalue Var 0x12680e050 'i' 'int'
    | `-CallExpr 0x12680e2e8 <col:6, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12680e250 <col:6> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    |   |-RecoveryExpr 0x12680e270 <col:30> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x12680e290 <col:33> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    |   `-UnaryOperator 0x12680e2d0 <col:38, col:39> 'int' prefix '-'
    |     `-IntegerLiteral 0x12680e2b0 <col:39> 'int' 1
    |-IfStmt 0x126827bf0 <line:6:2, line:14:3> has_else
    | |-BinaryOperator 0x12680e398 <line:6:6, col:11> 'int' '>='
    | | |-ImplicitCastExpr 0x12680e380 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12680e340 <col:6> 'int' lvalue Var 0x12680e050 'i' 'int'
    | | `-IntegerLiteral 0x12680e360 <col:11> 'int' 0
    | |-CompoundStmt 0x126827bb8 <line:7:3, line:12:3>
    | | `-IfStmt 0x126827900 <line:9:3, line:10:11>
    | |   |-BinaryOperator 0x1268278b0 <line:9:7, col:46> 'int' contains-errors '!='
    | |   | |-CallExpr 0x126827840 <col:7, col:40> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x12680e3b8 <col:7> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    | |   | | |-RecoveryExpr 0x12680e3d8 <col:31> '<dependent type>' contains-errors lvalue
    | |   | | |-DeclRefExpr 0x126827800 <col:34> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    | |   | | `-DeclRefExpr 0x126827820 <col:39> 'int' lvalue Var 0x12680e050 'i' 'int'
    | |   | `-UnaryOperator 0x126827898 <col:45, col:46> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x126827878 <col:46> 'int' 1
    | |   `-ReturnStmt 0x1268278f0 <line:10:4, col:11>
    | |     `-IntegerLiteral 0x1268278d0 <col:11> 'int' 0
    | `-NullStmt 0x126827be8 <line:14:3>
    |-BinaryOperator 0x126827d10 <line:16:2, col:40> 'int' contains-errors '='
    | |-DeclRefExpr 0x126827c20 <col:2> 'int' lvalue Var 0x12680e050 'i' 'int'
    | `-CallExpr 0x126827cd8 <col:6, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126827c40 <col:6> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    |   |-RecoveryExpr 0x126827c60 <col:30> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x126827c80 <col:33> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    |   `-UnaryOperator 0x126827cc0 <col:38, col:39> 'int' prefix '-'
    |     `-IntegerLiteral 0x126827ca0 <col:39> 'int' 1
    |-IfStmt 0x126828018 <line:18:2, line:26:3> has_else
    | |-BinaryOperator 0x126827d88 <line:18:6, col:11> 'int' '>='
    | | |-ImplicitCastExpr 0x126827d70 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x126827d30 <col:6> 'int' lvalue Var 0x12680e050 'i' 'int'
    | | `-IntegerLiteral 0x126827d50 <col:11> 'int' 0
    | |-CompoundStmt 0x126827fe0 <line:19:3, line:24:3>
    | | `-IfStmt 0x126827ee8 <line:21:3, line:22:11>
    | |   |-BinaryOperator 0x126827e98 <line:21:7, col:46> 'int' contains-errors '!='
    | |   | |-CallExpr 0x126827e28 <col:7, col:40> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x126827da8 <col:7> 'int ()' Function 0x12680e198 'X509_CRL_get_ext_by_NID' 'int ()'
    | |   | | |-RecoveryExpr 0x126827dc8 <col:31> '<dependent type>' contains-errors lvalue
    | |   | | |-DeclRefExpr 0x126827de8 <col:34> 'int' lvalue ParmVar 0x12680de28 'nid' 'int'
    | |   | | `-DeclRefExpr 0x126827e08 <col:39> 'int' lvalue Var 0x12680e050 'i' 'int'
    | |   | `-UnaryOperator 0x126827e80 <col:45, col:46> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x126827e60 <col:46> 'int' 1
    | |   `-ReturnStmt 0x126827ed8 <line:22:4, col:11>
    | |     `-IntegerLiteral 0x126827eb8 <col:11> 'int' 0
    | `-NullStmt 0x126828010 <line:26:3>
    |-IfStmt 0x1268281e8 <line:28:2, line:29:10>
    | |-BinaryOperator 0x126828198 <line:28:6, col:16> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x126828130 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x126828118 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1268280f8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x126828180 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x126828168 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x126828148 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1268281d8 <line:29:3, col:10>
    |   `-IntegerLiteral 0x1268281b8 <col:10> 'int' 1
    |-IfStmt 0x1268283a8 <line:31:2, line:32:10>
    | |-BinaryOperator 0x126828358 <line:31:6, col:16> 'int' contains-errors '||'
    | | |-UnaryOperator 0x1268282f0 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1268282d8 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1268282b8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x126828340 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x126828328 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x126828308 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x126828398 <line:32:3, col:10>
    |   `-IntegerLiteral 0x126828378 <col:10> 'int' 0
    |-IfStmt 0x126828518 <line:35:2, line:36:10>
    | |-RecoveryExpr 0x1268284c8 <line:35:6, col:38> '_Bool' contains-errors
    | `-ReturnStmt 0x126828508 <line:36:3, col:10>
    |   `-IntegerLiteral 0x1268284e8 <col:10> 'int' 0
    `-ReturnStmt 0x126828558 <line:38:2, col:9>
      `-IntegerLiteral 0x126828538 <col:9> 'int' 1
