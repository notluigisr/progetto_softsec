`-FunctionDecl 0x14c928288  line:1:12 invalid ok_inflater_decode_distance 'int (int *, const int *)' static
  |-ParmVarDecl 0x14c928128 <col:40, col:53> col:53 invalid inflater 'int *'
  |-ParmVarDecl 0x14c9281a8 <line:2:40, col:72> col:72 invalid tree 'const int *'
  `-CompoundStmt 0x14d00a3d8 <col:78, line:27:1>
    |-IfStmt 0x14c9285f0 <line:3:5, line:5:5>
    | |-UnaryOperator 0x14c928578 <line:3:9, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14c928548 <col:10, col:52> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14c9284a0 <col:10> 'int ()' Function 0x14c9283e8 'ok_inflater_load_bits' 'int ()'
    | |   |-RecoveryExpr 0x14c9284c0 <col:32> '<dependent type>' contains-errors lvalue
    | |   `-CXXDependentScopeMemberExpr 0x14c928500 <col:42, col:48> '<dependent type>' contains-errors lvalue ->bits
    | |     `-RecoveryExpr 0x14c9284e0 <col:42> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14c9285d8 <col:55, line:5:5>
    |   `-ReturnStmt 0x14c9285c8 <line:4:9, col:17>
    |     `-UnaryOperator 0x14c9285b0 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x14c928590 <col:17> 'int' 1
    |-DeclStmt 0x14c928740 <line:8:5, col:44>
    | `-VarDecl 0x14c928628 <col:5, col:30> col:9 used value 'int' cinit
    |   `-BinaryOperator 0x14c928720 <col:17, col:30> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x14c9286e0 <col:17> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14c928700 <col:30> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14d009698 <line:9:5, col:55>
    | `-VarDecl 0x14c928770 <col:5, col:45> col:18 used value_bits 'unsigned int' cinit
    |   `-BinaryOperator 0x14d009678 <col:31, col:45> '<dependent type>' contains-errors '>>'
    |     |-RecoveryExpr 0x14d009638 <col:31> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14d009658 <col:45> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x14d00a3a8 <line:10:5, line:26:5> has_else
      |-BinaryOperator 0x14d009708 <line:10:9, col:17> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x14d0096f0 <col:9> 'int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x14d0096b0 <col:9> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
      | `-IntegerLiteral 0x14d0096d0 <col:17> 'int' 4
      |-CompoundStmt 0x14d009920 <col:20, line:13:5>
      | |-CallExpr 0x14d009868 <line:11:9, col:51> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x14d009808 <col:9> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
      | | |-RecoveryExpr 0x14d009828 <col:31> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x14d009848 <col:41> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
      | `-ReturnStmt 0x14d009910 <line:12:9, col:24>
      |   `-BinaryOperator 0x14d0098f0 <col:16, col:24> 'int' contains-errors '+'
      |     |-ImplicitCastExpr 0x14d0098d8 <col:16> 'int' contains-errors <LValueToRValue>
      |     | `-DeclRefExpr 0x14d009898 <col:16> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
      |     `-IntegerLiteral 0x14d0098b8 <col:24> 'int' 1
      `-IfStmt 0x14d00a378 <line:13:12, line:26:5> has_else
        |-BinaryOperator 0x14d0099b8 <line:13:16, col:25> 'int' contains-errors '>='
        | |-DeclRefExpr 0x14d009940 <col:16> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
        | `-RecoveryExpr 0x14d009998 <col:25> '<dependent type>' contains-errors lvalue
        |-CompoundStmt 0x14d009bd8 <col:60, line:16:5>
        | |-CallExpr 0x14d009b60 <line:14:9, col:42> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x14d009ab8 <col:9> 'int ()' Function 0x14d009a00 'ok_inflater_error' 'int ()'
        | | |-RecoveryExpr 0x14d009ad8 <col:27> '<dependent type>' contains-errors lvalue
        | | `-StringLiteral 0x14d009b40 <col:37> 'char[4]' lvalue "STR"
        | `-ReturnStmt 0x14d009bc8 <line:15:9, col:17>
        |   `-UnaryOperator 0x14d009bb0 <col:16, col:17> 'int' prefix '-'
        |     `-IntegerLiteral 0x14d009b90 <col:17> 'int' 1
        `-CompoundStmt 0x14d00a340 <line:16:12, line:26:5>
          |-DeclStmt 0x14d009dd0 <line:17:9, col:67>
          | `-VarDecl 0x14d009c10 <col:9, col:66> col:22 used extra_bits 'unsigned int' cinit
          |   `-CStyleCastExpr 0x14d009da8 <col:35, col:66> 'unsigned int' contains-errors <IntegralCast>
          |     `-ParenExpr 0x14d009d88 <col:49, col:66> 'int' contains-errors
          |       `-BinaryOperator 0x14d009d30 <col:50, col:65> 'int' contains-errors '-'
          |         |-ParenExpr 0x14d009cf0 <col:50, col:61> 'int' contains-errors
          |         | `-BinaryOperator 0x14d009cd0 <col:51, col:60> 'int' contains-errors '>>'
          |         |   |-ImplicitCastExpr 0x14d009cb8 <col:51> 'int' contains-errors <LValueToRValue>
          |         |   | `-DeclRefExpr 0x14d009c78 <col:51> 'int' contains-errors lvalue Var 0x14c928628 'value' 'int'
          |         |   `-IntegerLiteral 0x14d009c98 <col:60> 'int' 1
          |         `-IntegerLiteral 0x14d009d10 <col:65> 'int' 1
          |-IfStmt 0x14d00a040 <line:18:9, line:20:9>
          | |-UnaryOperator 0x14d009fc8 <line:18:13, col:73> '<dependent type>' contains-errors prefix '!' cannot overflow
          | | `-CallExpr 0x14d009f98 <col:14, col:73> '<dependent type>' contains-errors
          | |   |-DeclRefExpr 0x14d009ec8 <col:14> 'int ()' Function 0x14d009e10 'ok_inflater_can_read_bits' 'int ()'
          | |   |-RecoveryExpr 0x14d009ee8 <col:40> '<dependent type>' contains-errors lvalue
          | |   `-BinaryOperator 0x14d009f78 <col:50, col:63> 'unsigned int' contains-errors '+'
          | |     |-ImplicitCastExpr 0x14d009f48 <col:50> 'unsigned int' contains-errors <LValueToRValue>
          | |     | `-DeclRefExpr 0x14d009f08 <col:50> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
          | |     `-ImplicitCastExpr 0x14d009f60 <col:63> 'unsigned int' contains-errors <LValueToRValue>
          | |       `-DeclRefExpr 0x14d009f28 <col:63> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
          | `-CompoundStmt 0x14d00a028 <col:76, line:20:9>
          |   `-ReturnStmt 0x14d00a018 <line:19:13, col:21>
          |     `-UnaryOperator 0x14d00a000 <col:20, col:21> 'int' prefix '-'
          |       `-IntegerLiteral 0x14d009fe0 <col:21> 'int' 1
          |-CallExpr 0x14d00a0c0 <line:22:9, col:51> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x14d00a060 <col:9> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
          | |-RecoveryExpr 0x14d00a080 <col:31> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x14d00a0a0 <col:41> 'unsigned int' contains-errors lvalue Var 0x14c928770 'value_bits' 'unsigned int'
          |-CallExpr 0x14d00a150 <line:23:9, col:51> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x14d00a0f0 <col:9> 'int ()' Function 0x14c9283e8 'ok_inflater_load_bits' 'int ()'
          | |-RecoveryExpr 0x14d00a110 <col:31> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x14d00a130 <col:41> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
          `-DeclStmt 0x14d00a2d0 <line:24:9, col:65>
            `-VarDecl 0x14d00a198 <col:9, col:64> col:13 used d 'int' cinit
              `-CStyleCastExpr 0x14d00a2a8 <col:17, col:64> 'int' contains-errors <Dependent>
                `-CallExpr 0x14d00a260 <col:22, col:64> '<dependent type>' contains-errors
                  |-DeclRefExpr 0x14d00a200 <col:22> 'int ()' Function 0x14d009750 'ok_inflater_read_bits' 'int ()'
                  |-RecoveryExpr 0x14d00a220 <col:44> '<dependent type>' contains-errors lvalue
                  `-DeclRefExpr 0x14d00a240 <col:54> 'unsigned int' contains-errors lvalue Var 0x14d009c10 'extra_bits' 'unsigned int'
