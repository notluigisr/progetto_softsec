`-FunctionDecl 0x13f0fa3a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x13f0fa2d8 <col:14> col:14 imagecopyresampled 'int'
  `-CompoundStmt 0x13f113890 <line:2:1, line:32:1>
    |-DeclStmt 0x13f0fa960 <line:6:2, col:52>
    | |-VarDecl 0x13f0fa530 <col:2, col:6> col:6 used srcH 'int'
    | |-VarDecl 0x13f0fa5b0 <col:2, col:12> col:12 used srcW 'int'
    | |-VarDecl 0x13f0fa630 <col:2, col:18> col:18 used dstH 'int'
    | |-VarDecl 0x13f0fa6b0 <col:2, col:24> col:24 used dstW 'int'
    | |-VarDecl 0x13f0fa730 <col:2, col:30> col:30 used srcY 'int'
    | |-VarDecl 0x13f0fa7b0 <col:2, col:36> col:36 used srcX 'int'
    | |-VarDecl 0x13f0fa830 <col:2, col:42> col:42 used dstY 'int'
    | `-VarDecl 0x13f0fa8b0 <col:2, col:48> col:48 used dstX 'int'
    |-IfStmt 0x13f1134d0 <line:8:2, line:10:2>
    | |-BinaryOperator 0x13f113488 <line:8:6, col:107> 'int' contains-errors '=='
    | | |-CallExpr 0x13f1133e8 <col:6, col:102> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13f112cb8 <col:6> 'int ()' Function 0x13f112c00 'zend_parse_parameters' 'int ()'
    | | | |-CallExpr 0x13f113198 <col:28, col:42> 'int'
    | | | | `-ImplicitCastExpr 0x13f113180 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | | |   `-DeclRefExpr 0x13f112db8 <col:28> 'int ()' Function 0x13f112d00 'ZEND_NUM_ARGS' 'int ()'
    | | | |-StringLiteral 0x13f112e90 <col:45> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x13f1131d8 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f1131b8 <col:53> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113210 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f1131f0 <col:59> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113248 <col:64, col:65> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113228 <col:65> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113280 <col:69, col:70> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113260 <col:70> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f1132b8 <col:74, col:75> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113298 <col:75> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f1132f0 <col:79, col:80> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f1132d0 <col:80> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113328 <col:84, col:85> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113308 <col:85> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113360 <col:89, col:90> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113340 <col:90> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x13f113398 <col:94, col:95> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13f113378 <col:95> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x13f1133d0 <col:99, col:100> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x13f1133b0 <col:100> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13f113468 <col:107> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13f1134b8 <col:116, line:10:2>
    |   `-ReturnStmt 0x13f1134a8 <line:9:3>
    |-IfStmt 0x13f113520 <line:12:2, line:14:2>
    | |-RecoveryExpr 0x13f1134f0 <line:12:6, col:80> '_Bool' contains-errors
    | `-CompoundStmt 0x13f113510 <col:86, line:14:2>
    `-IfStmt 0x13f113570 <line:16:2, line:18:2>
      |-RecoveryExpr 0x13f113540 <line:16:6, col:80> '_Bool' contains-errors
      `-CompoundStmt 0x13f113560 <col:86, line:18:2>
