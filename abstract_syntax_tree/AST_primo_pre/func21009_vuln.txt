`-FunctionDecl 0x124128c88  line:1:14 invalid ResizeOutputandTemporaryTensors 'int (int *, int *)'
  |-ParmVarDecl 0x124128b28 <col:46, col:61> col:61 invalid context 'int *'
  |-ParmVarDecl 0x124128ba8 <line:2:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x124143b50 <col:64, line:44:1>
    |-DeclStmt 0x124128fd0 <line:3:3, col:68>
    | `-VarDecl 0x124128d58 <col:3, col:23> col:23 invalid input 'const int *'
    |-DeclStmt 0x1241291b0 <line:4:3, col:44>
    | `-VarDecl 0x124129000 <col:3, col:43> col:13 used num_dims 'const int' cinit
    |   `-CallExpr 0x124129188 <col:24, col:43> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x124129148 <col:24> 'int ()' Function 0x124129090 'NumDimensions' 'int ()'
    |     `-RecoveryExpr 0x124129168 <col:38> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x124142370 <line:5:3, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1241422b8 <col:3> 'int ()' Function 0x124142200 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x1241422d8 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x124142350 <col:27, col:39> 'int' contains-errors '>='
    |   |-ImplicitCastExpr 0x124142338 <col:27> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x1241422f8 <col:27> 'const int' contains-errors lvalue Var 0x124129000 'num_dims' 'const int'
    |   `-IntegerLiteral 0x124142318 <col:39> 'int' 2
    |-DeclStmt 0x1241424d0 <line:6:3, col:77>
    | `-VarDecl 0x1241423b8 <col:3, col:23> col:23 invalid fft_length 'const int *'
    |-DeclStmt 0x124142618 <line:7:3, col:70>
    | `-VarDecl 0x124142500 <col:3, col:18> col:18 invalid fft_length_data 'const int *'
    |-CallExpr 0x124142810 <line:9:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124142630 <col:3> 'int ()' Function 0x124142200 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x124142650 <col:18> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1241427e8 <col:27, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x124142750 <col:27> 'int ()' Function 0x124142698 'IsPowerOfTwo' 'int ()'
    |   `-ArraySubscriptExpr 0x1241427c8 <col:40, col:57> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1241427b0 <col:40> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x124142770 <col:40> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x124142790 <col:56> 'int' 0
    |-CallExpr 0x124142940 <line:10:3, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124142840 <col:3> 'int ()' Function 0x124142200 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x124142860 <col:18> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x124142918 <col:27, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x124142880 <col:27> 'int ()' Function 0x124142698 'IsPowerOfTwo' 'int ()'
    |   `-ArraySubscriptExpr 0x1241428f8 <col:40, col:57> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1241428e0 <col:40> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x1241428a0 <col:40> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x1241428c0 <col:56> 'int' 1
    |-DeclStmt 0x124142a88 <line:12:3, col:28>
    | |-VarDecl 0x124142988 <col:3, col:7> col:7 used fft_height 'int'
    | `-VarDecl 0x124142a08 <col:3, col:19> col:19 used fft_width 'int'
    |-BinaryOperator 0x124142b38 <line:13:3, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x124142aa0 <col:3> 'int' lvalue Var 0x124142988 'fft_height' 'int'
    | `-ArraySubscriptExpr 0x124142b18 <col:16, col:33> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x124142b00 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x124142ac0 <col:16> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x124142ae0 <col:32> 'int' 0
    |-BinaryOperator 0x124142bf0 <line:14:3, col:32> 'int' contains-errors '='
    | |-DeclRefExpr 0x124142b58 <col:3> 'int' lvalue Var 0x124142a08 'fft_width' 'int'
    | `-ArraySubscriptExpr 0x124142bd0 <col:15, col:32> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x124142bb8 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x124142b78 <col:15> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x124142b98 <col:31> 'int' 1
    |-DeclStmt 0x124142cc8 <line:15:3, col:31>
    | `-VarDecl 0x124142c28 <col:3, col:28> col:7 used fft_working_length 'int' cinit
    |   `-RecoveryExpr 0x124142ca8 <col:28> '<dependent type>' contains-errors lvalue
    `-DeclStmt 0x124142dd8 <line:16:3, col:55>
      `-VarDecl 0x124142cf8 <col:3, col:54> col:7 used half_fft_working_length 'int' cinit
        `-BinaryOperator 0x124142db8 <col:33, col:54> 'int' contains-errors '/'
          |-ImplicitCastExpr 0x124142da0 <col:33> 'int' contains-errors <LValueToRValue>
          | `-DeclRefExpr 0x124142d60 <col:33> 'int' contains-errors lvalue Var 0x124142c28 'fft_working_length' 'int'
          `-IntegerLiteral 0x124142d80 <col:54> 'int' 2
