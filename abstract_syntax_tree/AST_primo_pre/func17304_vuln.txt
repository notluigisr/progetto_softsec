`-FunctionDecl 0x11d128288  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x11d128128 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x11d1281a8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x11d142888 <col:64, line:22:1>
    |-DeclStmt 0x11d128588 <line:2:3, col:35>
    | `-VarDecl 0x11d128358 <col:3, col:34> col:7 used num_inputs 'int' cinit
    |   `-CallExpr 0x11d128560 <col:20, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d128520 <col:20> 'int ()' Function 0x11d128468 'NumInputs' 'int ()'
    |     `-RecoveryExpr 0x11d128540 <col:30> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11d128738 <line:3:3, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11d128680 <col:3> 'int ()' Function 0x11d1285c8 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x11d1286a0 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11d128718 <col:27, col:41> 'int' contains-errors '>='
    |   |-ImplicitCastExpr 0x11d128700 <col:27> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11d1286c0 <col:27> 'int' contains-errors lvalue Var 0x11d128358 'num_inputs' 'int'
    |   `-IntegerLiteral 0x11d1286e0 <col:41> 'int' 2
    |-CallExpr 0x11d141a60 <line:4:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11d1418b8 <col:3> 'int ()' Function 0x11d141800 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11d1418d8 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x11d141a18 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11d1419d8 <col:30> 'int ()' Function 0x11d141920 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x11d1419f8 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11d141a40 <col:48> 'int' 1
    |-DeclStmt 0x11d141ca8 <line:6:3, col:70>
    | `-VarDecl 0x11d141ab0 <col:3, col:23> col:23 invalid input1 'const int *'
    `-ForStmt 0x11d142648 <line:11:3, line:15:3>
      |-DeclStmt 0x11d141fe8 <line:11:8, col:33>
      | `-VarDecl 0x11d141ee8 <col:8, col:32> col:12 used i 'int' cinit
      |   `-BinaryOperator 0x11d141fc8 <col:16, col:32> '<dependent type>' contains-errors '+'
      |     |-RecoveryExpr 0x11d141fa8 <col:16> '<dependent type>' contains-errors lvalue
      |     `-IntegerLiteral 0x11d141f68 <col:32> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x11d142070 <col:35, col:39> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x11d142040 <col:35> 'int' contains-errors <LValueToRValue>
      | | `-DeclRefExpr 0x11d142000 <col:35> 'int' contains-errors lvalue Var 0x11d141ee8 'i' 'int'
      | `-ImplicitCastExpr 0x11d142058 <col:39> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x11d142020 <col:39> 'int' contains-errors lvalue Var 0x11d128358 'num_inputs' 'int'
      |-UnaryOperator 0x11d1420b0 <col:51, col:53> 'int' contains-errors prefix '++'
      | `-DeclRefExpr 0x11d142090 <col:53> 'int' contains-errors lvalue Var 0x11d141ee8 'i' 'int'
      `-CompoundStmt 0x11d142620 <col:56, line:15:3>
        |-DeclStmt 0x11d142200 <line:12:5, col:59>
        | `-VarDecl 0x11d1420e0 <col:5, col:25> col:25 invalid input 'const int *'
        |-CallExpr 0x11d1423c8 <line:13:5, col:58> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x11d142218 <col:5> 'int ()' Function 0x11d1285c8 'TF_LITE_ENSURE' 'int ()'
        | |-RecoveryExpr 0x11d142238 <col:20> '<dependent type>' contains-errors lvalue
        | `-CallExpr 0x11d142398 <col:29, col:57> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x11d142338 <col:29> 'int ()' Function 0x11d142280 'HaveSameShapes' 'int ()'
        |   |-RecoveryExpr 0x11d142358 <col:44> '<dependent type>' contains-errors lvalue
        |   `-RecoveryExpr 0x11d142378 <col:52> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x11d1425e8 <line:14:5, col:63> '<dependent type>' contains-errors
          |-DeclRefExpr 0x11d1424d8 <col:5> 'int ()' Function 0x11d142420 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'
          |-RecoveryExpr 0x11d1424f8 <col:29> '<dependent type>' contains-errors lvalue
          |-CXXDependentScopeMemberExpr 0x11d142538 <col:38, col:46> '<dependent type>' contains-errors lvalue ->type
          | `-RecoveryExpr 0x11d142518 <col:38> '<dependent type>' contains-errors lvalue
          `-CXXDependentScopeMemberExpr 0x11d1425a0 <col:52, col:59> '<dependent type>' contains-errors lvalue ->type
            `-RecoveryExpr 0x11d142580 <col:52> '<dependent type>' contains-errors lvalue
