`-FunctionDecl 0x12a1284f8  line:1:5 invalid findDirUplevelToDirContainingFile 'int (int **, char *, char, char *, int, int)'
  |-ParmVarDecl 0x12a128160 <col:39, col:56> col:56 invalid result 'int **'
  |-ParmVarDecl 0x12a1281e0 <col:64, col:70> col:70 used pathEnvar 'char *'
  |-ParmVarDecl 0x12a128258 <col:81, col:86> col:86 used pathSeparator 'char'
  |-ParmVarDecl 0x12a1282d8 <col:101, col:107> col:107 used fileInPath 'char *'
  |-ParmVarDecl 0x12a128358 <col:119, col:123> col:123 used upLevels 'int'
  |-ParmVarDecl 0x12a1283d8 <col:133, col:137> col:137 used elementsToSkip 'int'
  `-CompoundStmt 0x12a142530 <col:153, line:21:1>
    |-DeclStmt 0x12a128650 <line:2:2, col:13>
    | `-VarDecl 0x12a1285e8 <col:2, col:8> col:8 used paths 'char *'
    |-DeclStmt 0x12a1286e8 <line:3:2, col:10>
    | `-VarDecl 0x12a128680 <col:2, col:8> col:8 used rc 'int'
    |-BinaryOperator 0x12a141dc0 <line:6:2, col:26> 'char *' '='
    | |-DeclRefExpr 0x12a128700 <col:2> 'char *' lvalue Var 0x12a1285e8 'paths' 'char *'
    | `-ImplicitCastExpr 0x12a141988 <col:10, col:26> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x12a141948 <col:10, col:26> 'int'
    |     |-ImplicitCastExpr 0x12a141930 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a1418b8 <col:10> 'int ()' Function 0x12a141800 'getenv' 'int ()'
    |     `-ImplicitCastExpr 0x12a141970 <col:17> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x12a1418d8 <col:17> 'char *' lvalue ParmVar 0x12a1281e0 'pathEnvar' 'char *'
    |-IfStmt 0x12a141e90 <line:7:2, line:9:2>
    | |-UnaryOperator 0x12a141e18 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12a141e00 <col:7> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12a141de0 <col:7> 'char *' lvalue Var 0x12a1285e8 'paths' 'char *'
    | `-CompoundStmt 0x12a141e78 <col:14, line:9:2>
    |   `-ReturnStmt 0x12a141e68 <line:8:3, col:10>
    |     `-RecoveryExpr 0x12a141e48 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a1420b8 <line:12:2, col:85> 'int' contains-errors '='
    | |-DeclRefExpr 0x12a141eb0 <col:2> 'int' lvalue Var 0x12a128680 'rc' 'int'
    | `-CallExpr 0x12a142070 <col:7, col:85> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12a141fb0 <col:7> 'int ()' Function 0x12a141ef8 'findDirContainingFile' 'int ()'
    |   |-RecoveryExpr 0x12a141fd0 <col:29> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x12a141ff0 <col:37> 'char *' lvalue Var 0x12a1285e8 'paths' 'char *'
    |   |-DeclRefExpr 0x12a142010 <col:44> 'char' lvalue ParmVar 0x12a128258 'pathSeparator' 'char'
    |   |-DeclRefExpr 0x12a142030 <col:59> 'char *' lvalue ParmVar 0x12a1282d8 'fileInPath' 'char *'
    |   `-DeclRefExpr 0x12a142050 <col:71> 'int' lvalue ParmVar 0x12a1283d8 'elementsToSkip' 'int'
    |-IfStmt 0x12a1424c8 <line:15:2, line:19:2>
    | |-ImplicitCastExpr 0x12a1420f8 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12a1420d8 <col:6> 'int' lvalue Var 0x12a128680 'rc' 'int'
    | `-CompoundStmt 0x12a1424b0 <col:10, line:19:2>
    |   `-ForStmt 0x12a142478 <line:16:3, line:18:3>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12a142168 <line:16:10, col:21> 'int' '>'
    |     | |-ImplicitCastExpr 0x12a142150 <col:10> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12a142110 <col:10> 'int' lvalue ParmVar 0x12a128358 'upLevels' 'int'
    |     | `-IntegerLiteral 0x12a142130 <col:21> 'int' 0
    |     |-UnaryOperator 0x12a1421a8 <col:24, col:32> 'int' postfix '--'
    |     | `-DeclRefExpr 0x12a142188 <col:24> 'int' lvalue ParmVar 0x12a128358 'upLevels' 'int'
    |     `-CompoundStmt 0x12a142460 <col:36, line:18:3>
    |       `-CallExpr 0x12a142438 <line:17:4, col:39> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x12a1422a0 <col:4> 'int ()' Function 0x12a1421e8 'truncatePath' 'int ()'
    |         `-CallExpr 0x12a142410 <col:17, col:38> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x12a1423a0 <col:17> 'int ()' Function 0x12a1422e8 'jvmBufferData' 'int ()'
    |           `-UnaryOperator 0x12a1423f8 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
    |             `-ImplicitCastExpr 0x12a1423e0 <col:32> '<dependent type>' contains-errors <LValueToRValue>
    |               `-RecoveryExpr 0x12a1423c0 <col:32> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12a142520 <line:20:4, col:11>
      `-ImplicitCastExpr 0x12a142508 <col:11> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a1424e8 <col:11> 'int' lvalue Var 0x12a128680 'rc' 'int'
