`-FunctionDecl 0x12800e008  line:1:1 invalid xmlValidCtxtNormalizeAttributeValue 'int (int, int, int, const int *, const int *)'
  |-ParmVarDecl 0x12800dcf0 <col:37, col:53> col:53 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x12800dd70 <col:59, col:69> col:69 invalid doc 'int'
  |-ParmVarDecl 0x12800ddf0 <line:2:7, col:18> col:18 invalid elem 'int'
  |-ParmVarDecl 0x12800de70 <col:24, col:39> col:39 invalid name 'const int *'
  |-ParmVarDecl 0x12800def0 <col:45, col:60> col:60 invalid value 'const int *'
  `-CompoundStmt 0x128029070 <col:67, line:65:1>
    |-DeclStmt 0x12800e1b8 <line:4:5, col:23>
    | `-VarDecl 0x12800e150 <col:5, col:20> col:20 referenced invalid src 'const int *'
    |-DeclStmt 0x12800e270 <line:6:5, col:22>
    | `-VarDecl 0x12800e1e8 <col:5, col:21> col:9 used extsubset 'int' cinit
    |   `-IntegerLiteral 0x12800e250 <col:21> 'int' 0
    |-IfStmt 0x128027ed8 <line:13:5, line:28:5>
    | |-RecoveryExpr 0x1280276b0 <line:13:9, col:56> '_Bool' contains-errors
    | `-CompoundStmt 0x128027ec0 <col:59, line:28:5>
    |   `-IfStmt 0x128027d18 <line:21:2, line:25:2>
    |     |-RecoveryExpr 0x128027b98 <line:21:6, col:51> '_Bool' contains-errors
    |     `-CompoundStmt 0x128027d00 <col:54, line:25:2>
    |       `-IfStmt 0x128027ce0 <line:23:6, line:24:15>
    |         |-RecoveryExpr 0x128027c60 <line:23:10, col:22> '_Bool' contains-errors
    |         `-BinaryOperator 0x128027cc0 <line:24:3, col:15> 'int' '='
    |           |-DeclRefExpr 0x128027c80 <col:3> 'int' lvalue Var 0x12800e1e8 'extsubset' 'int'
    |           `-IntegerLiteral 0x128027ca0 <col:15> 'int' 1
    |-IfStmt 0x128028350 <line:31:5, line:35:5>
    | |-RecoveryExpr 0x128028130 <line:31:9, col:54> '_Bool' contains-errors
    | `-CompoundStmt 0x128028338 <col:57, line:35:5>
    |   `-IfStmt 0x128028318 <line:33:2, line:34:18>
    |     |-RecoveryExpr 0x128028298 <line:33:6, col:18> '_Bool' contains-errors
    |     `-BinaryOperator 0x1280282f8 <line:34:6, col:18> 'int' '='
    |       |-DeclRefExpr 0x1280282b8 <col:6> 'int' lvalue Var 0x12800e1e8 'extsubset' 'int'
    |       `-IntegerLiteral 0x1280282d8 <col:18> 'int' 1
    |-BinaryOperator 0x1280285a8 <line:45:5, col:11> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x128028560 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x128028540 <col:5> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'
    | `-RecoveryExpr 0x128028588 <col:11> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x1280286b8 <line:47:5, col:29>
    | |-BinaryOperator 0x128028638 <col:12, col:20> 'int' contains-errors '=='
    | | |-UnaryOperator 0x128028600 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x1280285e8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1280285c8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x128028618 <col:20> 'int' 32
    | `-UnaryOperator 0x1280286a0 <col:26, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   `-RecoveryExpr 0x128028678 <col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128028658 <col:26> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'
    |-WhileStmt 0x128028a78 <line:48:5, line:56:5>
    | |-BinaryOperator 0x128028748 <line:48:12, col:20> 'int' contains-errors '!='
    | | |-UnaryOperator 0x128028710 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x1280286f8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-RecoveryExpr 0x1280286d8 <col:13> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x128028728 <col:20> 'int' 0
    | `-CompoundStmt 0x128028a60 <col:23, line:56:5>
    |   `-IfStmt 0x128028a30 <line:49:2, line:55:2> has_else
    |     |-BinaryOperator 0x1280287d8 <line:49:6, col:14> 'int' contains-errors '=='
    |     | |-UnaryOperator 0x1280287a0 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x128028788 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   `-RecoveryExpr 0x128028768 <col:7> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x1280287b8 <col:14> 'int' 32
    |     |-CompoundStmt 0x1280289b8 <col:20, line:53:2>
    |     | `-WhileStmt 0x1280288e8 <line:50:6, col:30>
    |     |   |-BinaryOperator 0x128028868 <col:13, col:21> 'int' contains-errors '=='
    |     |   | |-UnaryOperator 0x128028830 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   | | `-ImplicitCastExpr 0x128028818 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     |   | |   `-RecoveryExpr 0x1280287f8 <col:14> '<dependent type>' contains-errors lvalue
    |     |   | `-IntegerLiteral 0x128028848 <col:21> 'int' 32
    |     |   `-UnaryOperator 0x1280288d0 <col:27, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |     `-RecoveryExpr 0x1280288a8 <col:27> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x128028888 <col:27> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'
    |     `-CompoundStmt 0x128028a20 <line:53:9, line:55:2>
    `-IfStmt 0x128029050 <line:58:5, line:63:5>
      |-RecoveryExpr 0x128028d18 <line:58:9, col:75> '_Bool' contains-errors
      `-CompoundStmt 0x128029038 <col:78, line:63:5>
        `-BinaryOperator 0x128029018 <line:62:2, col:16> '<dependent type>' contains-errors '='
          |-CXXDependentScopeMemberExpr 0x128028fb0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->valid
          | `-RecoveryExpr 0x128028f88 <col:2> '<dependent type>' contains-errors lvalue
          |   `-DeclRefExpr 0x128028f68 <col:2> 'int' lvalue ParmVar 0x12800dcf0 'ctxt' 'int'
          `-IntegerLiteral 0x128028ff8 <col:16> 'int' 0
