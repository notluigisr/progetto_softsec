`-FunctionDecl 0x12e00a488  line:1:19 invalid GetDrawInfo 'int (const int *, int *)'
  |-ParmVarDecl 0x12e00a2f0 <col:31, col:48> col:48 referenced invalid image_info 'const int *'
  |-ParmVarDecl 0x12e00a3a8 <col:59, col:69> col:69 referenced invalid draw_info 'int *'
  `-CompoundStmt 0x12d90e340 <line:2:1, line:104:1>
    |-DeclStmt 0x12e00a5c0 <line:3:3, line:4:12>
    | `-VarDecl 0x12e00a558 <line:3:3, line:4:6> col:6 used option 'const char *'
    |-BinaryOperator 0x12e00a6b0 <line:9:3, line:10:6> '<dependent type>' contains-errors '*'
    | |-RecoveryExpr 0x12e00a610 <line:9:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e00a5f0 <col:3> 'const int *' lvalue ParmVar 0x12e00a2f0 'image_info' 'const int *'
    | `-RecoveryExpr 0x12e00a690 <line:10:6> '<dependent type>' contains-errors lvalue
    |-CStyleCastExpr 0x12d03f218 <line:15:3, col:58> 'void' contains-errors <ToVoid>
    | `-CallExpr 0x12d03f1d0 <col:10, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12d03f0e0 <col:10> 'int ()' Function 0x12d03f028 'ResetMagickMemory' 'int ()'
    |   |-RecoveryExpr 0x12d03f100 <col:28> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x12d03f120 <col:38> 'int' 0
    |   `-UnaryExprOrTypeTraitExpr 0x12d03f1b0 <col:40, col:57> 'unsigned long' contains-errors sizeof
    |     `-ParenExpr 0x12d03f190 <col:46, col:57> '<dependent type>' contains-errors
    |       `-UnaryOperator 0x12d03f178 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x12d03f160 <col:48> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x12d03f140 <col:48> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d03f508 <line:17:3, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d03f468 <col:3> 'int ()' Function 0x12d03f3b0 'GetAffineMatrix' 'int ()'
    | `-UnaryOperator 0x12d03f4f0 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12d03f4a8 <col:20, col:31> '<dependent type>' contains-errors lvalue ->affine
    |     `-RecoveryExpr 0x12d03f488 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d03f978 <line:23:3, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03f910 <col:3, col:14> '<dependent type>' contains-errors lvalue ->stroke_width
    | | `-RecoveryExpr 0x12d03f8e8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03f8c8 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-FloatingLiteral 0x12d03f958 <col:27> 'double' 1.000000e+00
    |-BinaryOperator 0x12d03fc88 <line:28:3, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03fc20 <col:3, col:14> '<dependent type>' contains-errors lvalue ->miterlimit
    | | `-RecoveryExpr 0x12d03fbf8 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03fbd8 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-IntegerLiteral 0x12d03fc68 <col:25> 'int' 10
    |-BinaryOperator 0x12d90be00 <line:30:3, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d03fd80 <col:3, col:14> '<dependent type>' contains-errors lvalue ->pointsize
    | | `-RecoveryExpr 0x12d03fd58 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d03fd38 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-FloatingLiteral 0x12d03fdc8 <col:24> 'double' 1.200000e+01
    |-BinaryOperator 0x12d90c1e0 <line:34:3, col:35> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12d90c060 <col:3, col:14> '<dependent type>' contains-errors lvalue ->debug
    | | `-RecoveryExpr 0x12d90c038 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12d90c018 <col:3> 'int *' lvalue ParmVar 0x12e00a3a8 'draw_info' 'int *'
    | `-CallExpr 0x12d90c1c0 <col:20, col:35> 'int'
    |   `-ImplicitCastExpr 0x12d90c1a8 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x12d90c188 <col:20> 'int ()' Function 0x12d90c0d0 'IsEventLogging' 'int ()'
    |-IfStmt 0x12d90cd18 <line:53:3, line:54:51>
    | |-RecoveryExpr 0x12d90caf0 <line:53:7, col:32> '_Bool' contains-errors
    | `-CStyleCastExpr 0x12d90ccf0 <line:54:5, col:51> 'void' contains-errors <ToVoid>
    |   `-CallExpr 0x12d90ccb0 <col:12, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d90cbf0 <col:12> 'int ()' Function 0x12d90cb38 'CloneString' 'int ()'
    |     |-UnaryOperator 0x12d90cc78 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x12d90cc30 <col:25, col:36> '<dependent type>' contains-errors lvalue ->encoding
    |     |   `-RecoveryExpr 0x12d90cc10 <col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d90cc90 <col:45> 'const char *' lvalue Var 0x12e00a558 'option' 'const char *'
    |-IfStmt 0x12d90cf08 <line:56:3, line:57:49>
    | |-RecoveryExpr 0x12d90cdb8 <line:56:7, col:32> '_Bool' contains-errors
    | `-CStyleCastExpr 0x12d90cee0 <line:57:5, col:49> 'void' contains-errors <ToVoid>
    |   `-CallExpr 0x12d90cea0 <col:12, col:49> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d90cdd8 <col:12> 'int ()' Function 0x12d90cb38 'CloneString' 'int ()'
    |     |-UnaryOperator 0x12d90ce68 <col:24, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x12d90ce20 <col:25, col:36> '<dependent type>' contains-errors lvalue ->family
    |     |   `-RecoveryExpr 0x12d90ce00 <col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12d90ce80 <col:43> 'const char *' lvalue Var 0x12e00a558 'option' 'const char *'
    `-IfStmt 0x12d90e090 <line:91:3, line:100:5>
      |-RecoveryExpr 0x12d90dcc8 <line:91:7, col:32> '_Bool' contains-errors
      `-CompoundStmt 0x12d90e080 <line:92:5, line:100:5>
