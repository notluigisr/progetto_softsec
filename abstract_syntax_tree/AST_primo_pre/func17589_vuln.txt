`-FunctionDecl 0x1410eca88  line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x1410ec928 <col:19, col:34> col:34 referenced invalid context 'int *'
  |-ParmVarDecl 0x1410ec9a8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x1411069f0 <col:61, line:34:1>
    |-ImplicitCastExpr 0x1410ecb88 <line:2:3> '<dependent type>' contains-errors <LValueToRValue>
    | `-RecoveryExpr 0x1410ecb60 <col:3> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1410ecb40 <col:3> 'int *' lvalue ParmVar 0x1410ec928 'context' 'int *'
    |-CallExpr 0x1410ecd60 <col:13, col:37> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1410ecd00 <col:13> 'int ()' Function 0x1410ecc48 'op_context' 'int ()'
    | |-RecoveryExpr 0x1410ecd20 <col:24> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1410ecd40 <col:33> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x141106268 <line:4:5, line:32:5>
      |-ImplicitCastExpr 0x141106250 <line:4:13, col:32> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x141106208 <col:13, col:32> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x1411061e0 <col:13, col:24> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x1410ecd90 <col:13> 'int ()' Function 0x1410ecc48 'op_context' 'int ()'
      `-CompoundStmt 0x1411069a8 <col:38, line:32:5>
        |-BreakStmt 0x1411062c0 <line:7:9>
        |-BreakStmt 0x141106408 <line:11:9>
        |-BreakStmt 0x141106550 <line:14:9>
        |-BreakStmt 0x141106618 <line:18:9>
        |-BreakStmt 0x1411066e0 <line:22:9>
        |-BreakStmt 0x1411067a8 <line:26:9>
        `-DefaultStmt 0x141106988 <line:27:7, line:30:53>
          `-CallExpr 0x141106950 <line:28:9, line:30:53> '<dependent type>' contains-errors
            |-CXXDependentScopeMemberExpr 0x1411067f8 <line:28:9, col:18> '<dependent type>' contains-errors lvalue ->ReportError
            | `-RecoveryExpr 0x1411067d0 <col:9> '<dependent type>' contains-errors lvalue
            |   `-DeclRefExpr 0x1411067b0 <col:9> 'int *' lvalue ParmVar 0x1410ec928 'context' 'int *'
            |-RecoveryExpr 0x141106840 <col:30> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x1411068a0 <line:29:30> 'char[4]' lvalue "STR"
            `-CXXDependentScopeMemberExpr 0x141106908 <line:30:30, col:49> '<dependent type>' contains-errors lvalue ->type
              `-RecoveryExpr 0x1411068e0 <col:30, col:41> '<dependent type>' contains-errors lvalue
                `-DeclRefExpr 0x1411068c0 <col:30> 'int ()' Function 0x1410ecc48 'op_context' 'int ()'
