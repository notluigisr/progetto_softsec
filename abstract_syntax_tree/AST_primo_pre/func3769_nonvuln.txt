`-FunctionDecl 0x12f940b40  line:1:6 mremap_userfaultfd_prep 'void (struct vm_area_struct *, struct vm_userfaultfd_ctx *)'
  |-ParmVarDecl 0x12f928648 <col:30, col:53> col:53 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x12f940a28 <line:2:9, col:36> col:36 used vm_ctx 'struct vm_userfaultfd_ctx *'
  `-CompoundStmt 0x12f941708 <line:3:1, line:20:1>
    |-DeclStmt 0x12f940e28 <line:4:2, col:29>
    | |-RecordDecl 0x12f940c40 <col:2, col:9> col:9 struct userfaultfd_ctx
    | `-VarDecl 0x12f940da8 <col:2, col:26> col:26 used ctx 'struct userfaultfd_ctx *'
    |-BinaryOperator 0x12f940f08 <line:6:2, col:32> 'struct userfaultfd_ctx *' contains-errors '='
    | |-DeclRefExpr 0x12f940e40 <col:2> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
    | `-CXXDependentScopeMemberExpr 0x12f940ec0 <col:8, col:32> '<dependent type>' contains-errors lvalue .ctx
    |   `-RecoveryExpr 0x12f940e98 <col:8, col:13> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12f940e60 <col:8> 'struct vm_area_struct *' lvalue ParmVar 0x12f928648 'vma' 'struct vm_area_struct *'
    |-IfStmt 0x12f940f88 <line:8:2, line:9:3>
    | |-UnaryOperator 0x12f940f60 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12f940f48 <col:7> 'struct userfaultfd_ctx *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12f940f28 <col:7> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
    | `-ReturnStmt 0x12f940f78 <line:9:3>
    `-IfStmt 0x12f9416d8 <line:11:2, line:19:2> has_else
      |-BinaryOperator 0x12f941078 <line:11:6, col:22> '<dependent type>' contains-errors '&'
      | |-RecoveryExpr 0x12f940fe0 <col:6, col:11> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x12f940fa8 <col:6> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
      | `-RecoveryExpr 0x12f941058 <col:22> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x12f941510 <col:48, line:15:2>
      | |-BinaryOperator 0x12f941118 <line:12:3, col:17> '<dependent type>' contains-errors '='
      | | |-RecoveryExpr 0x12f9410d0 <col:3, col:11> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x12f941098 <col:3> 'struct vm_userfaultfd_ctx *' lvalue ParmVar 0x12f940a28 'vm_ctx' 'struct vm_userfaultfd_ctx *'
      | | `-DeclRefExpr 0x12f9410f8 <col:17> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
      | |-CallExpr 0x12f9412d8 <line:13:3, col:26> 'int'
      | | |-ImplicitCastExpr 0x12f9412c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x12f941250 <col:3> 'int ()' Function 0x12f941198 'userfaultfd_ctx_get' 'int ()'
      | | `-ImplicitCastExpr 0x12f941300 <col:23> 'struct userfaultfd_ctx *' <LValueToRValue>
      | |   `-DeclRefExpr 0x12f941270 <col:23> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
      | `-CallExpr 0x12f9414e0 <line:14:3, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x12f9413f8 <col:3> 'int ()' Function 0x12f941340 'WRITE_ONCE' 'int ()'
      |   |-RecoveryExpr 0x12f941450 <col:14, col:19> '<dependent type>' contains-errors lvalue
      |   | `-DeclRefExpr 0x12f941418 <col:14> 'struct userfaultfd_ctx *' lvalue Var 0x12f940da8 'ctx' 'struct userfaultfd_ctx *'
      |   `-RecoveryExpr 0x12f9414c0 <col:34> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12f9416c0 <line:15:9, line:19:2>
        `-BinaryOperator 0x12f9415f0 <line:17:3, col:29> '<dependent type>' contains-errors '='
          |-RecoveryExpr 0x12f941570 <col:3, col:8> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x12f941538 <col:3> 'struct vm_area_struct *' lvalue ParmVar 0x12f928648 'vma' 'struct vm_area_struct *'
          `-RecoveryExpr 0x12f9415d0 <col:29> '<dependent type>' contains-errors lvalue
