`-FunctionDecl 0x15a817c80  line:1:13 invalid ok_jpg_generate_huffman_table 'void (int *, const int *)' static
  |-ParmVarDecl 0x15a817b28 <col:43, col:65> col:65 referenced invalid huff 'int *'
  |-ParmVarDecl 0x15a817ba8 <col:71, col:86> col:86 invalid bits 'const int *'
  `-CompoundStmt 0x15a831260 <col:92, line:45:1>
    |-DeclStmt 0x15a817dd8 <line:3:5, col:14>
    | `-VarDecl 0x15a817d50 <col:5, col:13> col:9 used k 'int' cinit
    |   `-IntegerLiteral 0x15a817db8 <col:13> 'int' 0
    |-ForStmt 0x15a82f068 <line:4:5, line:8:5>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15a817e80 <line:4:25, col:30> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x15a817e60 <col:25> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x15a817e20 <col:30> 'int' 16
    | |-UnaryOperator 0x15a817ef0 <col:34, col:35> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x15a817ed0 <col:34> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a82f058 <col:39, line:8:5>
    |-BinaryOperator 0x15a82f1c0 <line:9:5, col:21> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x15a82f180 <col:5, col:17> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x15a82f150 <col:5, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-CXXDependentScopeMemberExpr 0x15a82f0e8 <col:5, col:11> '<dependent type>' contains-errors lvalue ->size
    | | |   `-RecoveryExpr 0x15a82f0c0 <col:5> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x15a82f0a0 <col:5> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
    | | `-ImplicitCastExpr 0x15a82f168 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a82f130 <col:16> 'int' lvalue Var 0x15a817d50 'k' 'int'
    | `-IntegerLiteral 0x15a82f1a0 <col:21> 'int' 0
    |-BinaryOperator 0x15a82f290 <line:10:5, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15a82f228 <col:5, col:11> '<dependent type>' contains-errors lvalue ->count
    | | `-RecoveryExpr 0x15a82f200 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15a82f1e0 <col:5> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
    | `-DeclRefExpr 0x15a82f270 <col:19> 'int' lvalue Var 0x15a817d50 'k' 'int'
    |-BinaryOperator 0x15a82f2f0 <line:13:5, col:9> 'int' '='
    | |-DeclRefExpr 0x15a82f2b0 <col:5> 'int' lvalue Var 0x15a817d50 'k' 'int'
    | `-IntegerLiteral 0x15a82f2d0 <col:9> 'int' 0
    |-DeclStmt 0x15a82f450 <line:15:5, col:27>
    | `-VarDecl 0x15a82f328 <col:5, col:26> col:9 used si 'int' cinit
    |   `-ArraySubscriptExpr 0x15a82f430 <col:14, col:26> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x15a82f418 <col:14, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x15a82f3b0 <col:14, col:20> '<dependent type>' contains-errors lvalue ->size
    |     |   `-RecoveryExpr 0x15a82f390 <col:14> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15a82f3f8 <col:25> 'int' 0
    |-WhileStmt 0x15a82fb40 <line:16:5, line:28:5>
    | |-RecoveryExpr 0x15a82f480 <line:16:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a82fb08 <col:18, line:28:5>
    |   |-BinaryOperator 0x15a82f698 <line:17:9, col:25> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x15a82f658 <col:9, col:21> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x15a82f628 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x15a82f4e8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->code
    |   | | |   `-RecoveryExpr 0x15a82f4c0 <col:9> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x15a82f4a0 <col:9> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
    |   | | `-ImplicitCastExpr 0x15a82f640 <col:20> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x15a82f530 <col:20> 'int' lvalue Var 0x15a817d50 'k' 'int'
    |   | `-RecoveryExpr 0x15a82f678 <col:25> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x15a82f6d8 <line:19:9, col:10> 'int' postfix '++'
    |   | `-DeclRefExpr 0x15a82f6b8 <col:9> 'int' lvalue Var 0x15a817d50 'k' 'int'
    |   |-DeclStmt 0x15a82f848 <line:20:9, col:32>
    |   | `-VarDecl 0x15a82f708 <col:9, col:31> col:13 used si2 'int' cinit
    |   |   `-ArraySubscriptExpr 0x15a82f828 <col:19, col:31> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x15a82f7f8 <col:19, col:25> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-CXXDependentScopeMemberExpr 0x15a82f790 <col:19, col:25> '<dependent type>' contains-errors lvalue ->size
    |   |     |   `-RecoveryExpr 0x15a82f770 <col:19> '<dependent type>' contains-errors lvalue
    |   |     `-ImplicitCastExpr 0x15a82f810 <col:30> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x15a82f7d8 <col:30> 'int' lvalue Var 0x15a817d50 'k' 'int'
    |   |-IfStmt 0x15a82f8f8 <line:21:9, line:23:9>
    |   | |-BinaryOperator 0x15a82f8b8 <line:21:13, col:20> 'int' contains-errors '=='
    |   | | |-ImplicitCastExpr 0x15a82f8a0 <col:13> 'int' contains-errors <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15a82f860 <col:13> 'int' contains-errors lvalue Var 0x15a82f708 'si2' 'int'
    |   | | `-IntegerLiteral 0x15a82f880 <col:20> 'int' 0
    |   | `-CompoundStmt 0x15a82f8e0 <col:23, line:23:9>
    |   |   `-BreakStmt 0x15a82f8d8 <line:22:13>
    |   `-IfStmt 0x15a82fae8 <line:24:9, line:27:9>
    |     |-BinaryOperator 0x15a82f988 <line:24:13, col:19> 'int' contains-errors '>'
    |     | |-ImplicitCastExpr 0x15a82f958 <col:13> 'int' contains-errors <LValueToRValue>
    |     | | `-DeclRefExpr 0x15a82f918 <col:13> 'int' contains-errors lvalue Var 0x15a82f708 'si2' 'int'
    |     | `-ImplicitCastExpr 0x15a82f970 <col:19> 'int' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x15a82f938 <col:19> 'int' contains-errors lvalue Var 0x15a82f328 'si' 'int'
    |     `-CompoundStmt 0x15a82fad0 <col:23, line:27:9>
    |       `-BinaryOperator 0x15a82fab0 <line:26:13, col:18> 'int' contains-errors '='
    |         |-DeclRefExpr 0x15a82fa58 <col:13> 'int' contains-errors lvalue Var 0x15a82f328 'si' 'int'
    |         `-ImplicitCastExpr 0x15a82fa98 <col:18> 'int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x15a82fa78 <col:18> 'int' contains-errors lvalue Var 0x15a82f708 'si2' 'int'
    |-DeclStmt 0x15a82fc00 <line:31:5, col:14>
    | `-VarDecl 0x15a82fb78 <col:5, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x15a82fbe0 <col:13> 'int' 0
    `-ForStmt 0x15a831228 <line:32:5, line:44:5>
      |-DeclStmt 0x15a82fcb8 <line:32:10, col:19>
      | `-VarDecl 0x15a82fc30 <col:10, col:18> col:14 used i 'int' cinit
      |   `-IntegerLiteral 0x15a82fc98 <col:18> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x15a82fd28 <col:21, col:25> 'int' '<'
      | |-ImplicitCastExpr 0x15a82fd10 <col:21> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x15a82fcd0 <col:21> 'int' lvalue Var 0x15a82fc30 'i' 'int'
      | `-IntegerLiteral 0x15a82fcf0 <col:25> 'int' 16
      |-UnaryOperator 0x15a82fd68 <col:29, col:30> 'int' postfix '++'
      | `-DeclRefExpr 0x15a82fd48 <col:29> 'int' lvalue Var 0x15a82fc30 'i' 'int'
      `-CompoundStmt 0x15a831210 <col:34, line:44:5>
        `-IfStmt 0x15a8311e0 <line:33:9, line:43:9> has_else
          |-BinaryOperator 0x15a82fe70 <line:33:13, col:28> 'int' contains-errors '=='
          | |-ArraySubscriptExpr 0x15a82fe30 <col:13, col:23> '<dependent type>' contains-errors lvalue
          | | |-ImplicitCastExpr 0x15a82fe18 <col:13> '<dependent type>' contains-errors <LValueToRValue>
          | | | `-RecoveryExpr 0x15a82fd80 <col:13> '<dependent type>' contains-errors lvalue
          | | `-BinaryOperator 0x15a82fdf8 <col:18, col:22> 'int' '+'
          | |   |-ImplicitCastExpr 0x15a82fde0 <col:18> 'int' <LValueToRValue>
          | |   | `-DeclRefExpr 0x15a82fda0 <col:18> 'int' lvalue Var 0x15a82fc30 'i' 'int'
          | |   `-IntegerLiteral 0x15a82fdc0 <col:22> 'int' 1
          | `-IntegerLiteral 0x15a82fe50 <col:28> 'int' 0
          |-CompoundStmt 0x15a82ffe8 <col:31, line:35:9>
          | `-BinaryOperator 0x15a82ffc8 <line:34:13, col:33> '<dependent type>' contains-errors '='
          |   |-ArraySubscriptExpr 0x15a82ff70 <col:13, col:28> '<dependent type>' contains-errors lvalue
          |   | |-ImplicitCastExpr 0x15a82ff40 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
          |   | | `-CXXDependentScopeMemberExpr 0x15a82fed8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->maxcode
          |   | |   `-RecoveryExpr 0x15a82feb0 <col:13> '<dependent type>' contains-errors lvalue
          |   | |     `-DeclRefExpr 0x15a82fe90 <col:13> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
          |   | `-ImplicitCastExpr 0x15a82ff58 <col:27> 'int' <LValueToRValue>
          |   |   `-DeclRefExpr 0x15a82ff20 <col:27> 'int' lvalue Var 0x15a82fc30 'i' 'int'
          |   `-UnaryOperator 0x15a82ffb0 <col:32, col:33> 'int' prefix '-'
          |     `-IntegerLiteral 0x15a82ff90 <col:33> 'int' 1
          `-CompoundStmt 0x15a8311a8 <line:35:16, line:43:9>
            |-BinaryOperator 0x15a830720 <line:36:13, col:31> '<dependent type>' contains-errors '='
            | |-ArraySubscriptExpr 0x15a8306e0 <col:13, col:27> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x15a8306b0 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x15a830648 <col:13, col:19> '<dependent type>' contains-errors lvalue ->valptr
            | | |   `-RecoveryExpr 0x15a830620 <col:13> '<dependent type>' contains-errors lvalue
            | | |     `-DeclRefExpr 0x15a830600 <col:13> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
            | | `-ImplicitCastExpr 0x15a8306c8 <col:26> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x15a830690 <col:26> 'int' lvalue Var 0x15a82fc30 'i' 'int'
            | `-DeclRefExpr 0x15a830700 <col:31> 'int' lvalue Var 0x15a82fb78 'j' 'int'
            |-BinaryOperator 0x15a830918 <line:37:13, col:44> '<dependent type>' contains-errors '='
            | |-ArraySubscriptExpr 0x15a830820 <col:13, col:28> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x15a8307f0 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x15a830788 <col:13, col:19> '<dependent type>' contains-errors lvalue ->mincode
            | | |   `-RecoveryExpr 0x15a830760 <col:13> '<dependent type>' contains-errors lvalue
            | | |     `-DeclRefExpr 0x15a830740 <col:13> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
            | | `-ImplicitCastExpr 0x15a830808 <col:27> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x15a8307d0 <col:27> 'int' lvalue Var 0x15a82fc30 'i' 'int'
            | `-ArraySubscriptExpr 0x15a8308f8 <col:32, col:44> '<dependent type>' contains-errors lvalue
            |   |-ImplicitCastExpr 0x15a8308c8 <col:32, col:38> '<dependent type>' contains-errors <LValueToRValue>
            |   | `-CXXDependentScopeMemberExpr 0x15a830860 <col:32, col:38> '<dependent type>' contains-errors lvalue ->code
            |   |   `-RecoveryExpr 0x15a830840 <col:32> '<dependent type>' contains-errors lvalue
            |   `-ImplicitCastExpr 0x15a8308e0 <col:43> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x15a8308a8 <col:43> 'int' lvalue Var 0x15a82fb78 'j' 'int'
            |-CompoundAssignOperator 0x15a830a28 <line:38:13, col:28> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
            | |-DeclRefExpr 0x15a830938 <col:13> 'int' lvalue Var 0x15a82fb78 'j' 'int'
            | `-ArraySubscriptExpr 0x15a830a08 <col:18, col:28> '<dependent type>' contains-errors lvalue
            |   |-ImplicitCastExpr 0x15a8309f0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
            |   | `-RecoveryExpr 0x15a830958 <col:18> '<dependent type>' contains-errors lvalue
            |   `-BinaryOperator 0x15a8309d0 <col:23, col:27> 'int' '+'
            |     |-ImplicitCastExpr 0x15a8309b8 <col:23> 'int' <LValueToRValue>
            |     | `-DeclRefExpr 0x15a830978 <col:23> 'int' lvalue Var 0x15a82fc30 'i' 'int'
            |     `-IntegerLiteral 0x15a830998 <col:27> 'int' 1
            |-BinaryOperator 0x15a830c70 <line:39:13, col:48> '<dependent type>' contains-errors '='
            | |-ArraySubscriptExpr 0x15a830b38 <col:13, col:28> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x15a830b08 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x15a830aa0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->maxcode
            | | |   `-RecoveryExpr 0x15a830a78 <col:13> '<dependent type>' contains-errors lvalue
            | | |     `-DeclRefExpr 0x15a830a58 <col:13> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
            | | `-ImplicitCastExpr 0x15a830b20 <col:27> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x15a830ae8 <col:27> 'int' lvalue Var 0x15a82fc30 'i' 'int'
            | `-ArraySubscriptExpr 0x15a830c50 <col:32, col:48> '<dependent type>' contains-errors lvalue
            |   |-ImplicitCastExpr 0x15a830c38 <col:32, col:38> '<dependent type>' contains-errors <LValueToRValue>
            |   | `-CXXDependentScopeMemberExpr 0x15a830b78 <col:32, col:38> '<dependent type>' contains-errors lvalue ->code
            |   |   `-RecoveryExpr 0x15a830b58 <col:32> '<dependent type>' contains-errors lvalue
            |   `-BinaryOperator 0x15a830c18 <col:43, col:47> 'int' '-'
            |     |-ImplicitCastExpr 0x15a830c00 <col:43> 'int' <LValueToRValue>
            |     | `-DeclRefExpr 0x15a830bc0 <col:43> 'int' lvalue Var 0x15a82fb78 'j' 'int'
            |     `-IntegerLiteral 0x15a830be0 <col:47> 'int' 1
            `-IfStmt 0x15a831188 <line:40:13, line:42:13>
              |-BinaryOperator 0x15a830d08 <line:40:17, col:22> 'int' contains-errors '>='
              | |-DeclRefExpr 0x15a830c90 <col:17> 'int' lvalue Var 0x15a82fc30 'i' 'int'
              | `-RecoveryExpr 0x15a830ce8 <col:22> '<dependent type>' contains-errors lvalue
              `-CompoundStmt 0x15a831170 <col:48, line:42:13>
                `-BinaryOperator 0x15a831150 <line:41:17, col:89> '<dependent type>' contains-errors '='
                  |-ArraySubscriptExpr 0x15a830e08 <col:17, col:32> '<dependent type>' contains-errors lvalue
                  | |-ImplicitCastExpr 0x15a830dd8 <col:17, col:23> '<dependent type>' contains-errors <LValueToRValue>
                  | | `-CXXDependentScopeMemberExpr 0x15a830d70 <col:17, col:23> '<dependent type>' contains-errors lvalue ->maxcode
                  | |   `-RecoveryExpr 0x15a830d48 <col:17> '<dependent type>' contains-errors lvalue
                  | |     `-DeclRefExpr 0x15a830d28 <col:17> 'int *' lvalue ParmVar 0x15a817b28 'huff' 'int *'
                  | `-ImplicitCastExpr 0x15a830df0 <col:31> 'int' <LValueToRValue>
                  |   `-DeclRefExpr 0x15a830db8 <col:31> 'int' lvalue Var 0x15a82fc30 'i' 'int'
                  `-BinaryOperator 0x15a831130 <col:36, col:89> '<dependent type>' contains-errors '|'
                    |-ParenExpr 0x15a830fb8 <col:36, col:65> '<dependent type>' contains-errors
                    | `-BinaryOperator 0x15a830f98 <col:37, col:64> '<dependent type>' contains-errors '<<'
                    |   |-ArraySubscriptExpr 0x15a830ee0 <col:37, col:52> '<dependent type>' contains-errors lvalue
                    |   | |-ImplicitCastExpr 0x15a830eb0 <col:37, col:43> '<dependent type>' contains-errors <LValueToRValue>
                    |   | | `-CXXDependentScopeMemberExpr 0x15a830e48 <col:37, col:43> '<dependent type>' contains-errors lvalue ->maxcode
                    |   | |   `-RecoveryExpr 0x15a830e28 <col:37> '<dependent type>' contains-errors lvalue
                    |   | `-ImplicitCastExpr 0x15a830ec8 <col:51> 'int' <LValueToRValue>
                    |   |   `-DeclRefExpr 0x15a830e90 <col:51> 'int' lvalue Var 0x15a82fc30 'i' 'int'
                    |   `-ParenExpr 0x15a830f78 <col:57, col:64> 'int'
                    |     `-BinaryOperator 0x15a830f58 <col:58, col:63> 'int' '-'
                    |       |-IntegerLiteral 0x15a830f00 <col:58> 'int' 15
                    |       `-ImplicitCastExpr 0x15a830f40 <col:63> 'int' <LValueToRValue>
                    |         `-DeclRefExpr 0x15a830f20 <col:63> 'int' lvalue Var 0x15a82fc30 'i' 'int'
                    `-ParenExpr 0x15a831110 <col:69, col:89> 'int'
                      `-BinaryOperator 0x15a8310f0 <col:70, col:88> 'int' '-'
                        |-ParenExpr 0x15a8310b0 <col:70, col:84> 'int'
                        | `-BinaryOperator 0x15a831090 <col:71, col:83> 'int' '<<'
                        |   |-IntegerLiteral 0x15a830fd8 <col:71> 'int' 1
                        |   `-ParenExpr 0x15a831070 <col:76, col:83> 'int'
                        |     `-BinaryOperator 0x15a831050 <col:77, col:82> 'int' '-'
                        |       |-IntegerLiteral 0x15a830ff8 <col:77> 'int' 15
                        |       `-ImplicitCastExpr 0x15a831038 <col:82> 'int' <LValueToRValue>
                        |         `-DeclRefExpr 0x15a831018 <col:82> 'int' lvalue Var 0x15a82fc30 'i' 'int'
                        `-IntegerLiteral 0x15a8310d0 <col:88> 'int' 1
