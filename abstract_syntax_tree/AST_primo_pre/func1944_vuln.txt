`-FunctionDecl 0x14a928378  line:1:1 invalid rsock_read_nonblock 'int (int, int, int, int)'
  |-ParmVarDecl 0x14a9280f0 <col:21, col:27> col:27 invalid sock 'int'
  |-ParmVarDecl 0x14a928170 <col:33, col:39> col:39 invalid length 'int'
  |-ParmVarDecl 0x14a9281f0 <col:47, col:53> col:53 invalid buf 'int'
  |-ParmVarDecl 0x14a928270 <col:58, col:64> col:64 invalid ex 'int'
  `-CompoundStmt 0x14a944560 <line:2:1, line:42:1>
    |-DeclStmt 0x14a9284d8 <line:4:5, col:11>
    | `-VarDecl 0x14a928470 <col:5, col:10> col:10 used n 'long'
    |-DeclStmt 0x14a928738 <line:5:5, col:32>
    | `-VarDecl 0x14a928508 <col:5, col:31> col:10 used len 'long' cinit
    |   `-CallExpr 0x14a928710 <col:16, col:31> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14a9286d0 <col:16> 'int ()' Function 0x14a928618 'NUM2LONG' 'int ()'
    |     `-RecoveryExpr 0x14a9286f0 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a9287d0 <line:7:5, col:14>
    | `-VarDecl 0x14a928768 <col:5, col:11> col:11 used ptr 'char *'
    |-CallExpr 0x14a941988 <line:9:5, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a9418e0 <col:5> 'int ()' Function 0x14a941828 'GetOpenFile' 'int ()'
    | |-RecoveryExpr 0x14a941900 <col:17> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x14a941968 <col:23> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    |-IfStmt 0x14a941ef8 <line:11:5, line:13:5>
    | |-BinaryOperator 0x14a941a28 <line:11:9, col:16> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x14a9419f8 <col:9> 'long' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14a9419b8 <col:9> 'long' contains-errors lvalue Var 0x14a928508 'len' 'long'
    | | `-ImplicitCastExpr 0x14a941a10 <col:16> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x14a9419d8 <col:16> 'int' 0
    | `-CompoundStmt 0x14a941ee0 <col:19, line:13:5>
    |   `-ReturnStmt 0x14a941ed0 <line:12:2, col:9>
    |     `-ImplicitCastExpr 0x14a941a98 <col:9> 'int' <PointerToIntegral>
    |       `-ImplicitCastExpr 0x14a941a80 <col:9> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x14a941a60 <col:9> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    |-BinaryOperator 0x14a942160 <line:15:5, col:26> 'char *' '='
    | |-DeclRefExpr 0x14a941f18 <col:5> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    | `-ImplicitCastExpr 0x14a942148 <col:11, col:26> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x14a942108 <col:11, col:26> 'int'
    |     |-ImplicitCastExpr 0x14a9420f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a942018 <col:11> 'int ()' Function 0x14a941f60 'RSTRING_PTR' 'int ()'
    |     `-ImplicitCastExpr 0x14a942130 <col:23> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x14a942098 <col:23> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    |-BinaryOperator 0x14a942420 <line:16:5, col:42> 'long' contains-errors '='
    | |-DeclRefExpr 0x14a942180 <col:5> 'long' lvalue Var 0x14a928470 'n' 'long'
    | `-ImplicitCastExpr 0x14a942408 <col:9, col:42> 'long' contains-errors <IntegralCast>
    |   `-CallExpr 0x14a942388 <col:9, col:42> 'int' contains-errors
    |     |-ImplicitCastExpr 0x14a942370 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a942280 <col:9> 'int ()' Function 0x14a9421c8 'read_buffered_data' 'int ()'
    |     |-ImplicitCastExpr 0x14a9423c0 <col:28> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14a9422a0 <col:28> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    |     |-ImplicitCastExpr 0x14a9423d8 <col:33> 'long' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x14a9422c0 <col:33> 'long' contains-errors lvalue Var 0x14a928508 'len' 'long'
    |     `-ImplicitCastExpr 0x14a9423f0 <col:38> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x14a942350 <col:38> 'char *' lvalue Var 0x14a928768 'ptr' 'char *'
    |-IfStmt 0x14a943e88 <line:17:5, line:28:5>
    | |-BinaryOperator 0x14a9424b0 <line:17:9, col:14> 'int' '<='
    | | |-ImplicitCastExpr 0x14a942480 <col:9> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x14a942440 <col:9> 'long' lvalue Var 0x14a928470 'n' 'long'
    | | `-ImplicitCastExpr 0x14a942498 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x14a942460 <col:14> 'int' 0
    | `-CompoundStmt 0x14a943e70 <col:17, line:28:5>
    |   `-IfStmt 0x14a943e50 <line:19:2, line:27:2>
    |     |-BinaryOperator 0x14a943a00 <line:19:6, col:10> 'int' '<'
    |     | |-ImplicitCastExpr 0x14a9427b8 <col:6> 'long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14a942778 <col:6> 'long' lvalue Var 0x14a928470 'n' 'long'
    |     | `-ImplicitCastExpr 0x14a9427d0 <col:10> 'long' <IntegralCast>
    |     |   `-IntegerLiteral 0x14a942798 <col:10> 'int' 0
    |     `-CompoundStmt 0x14a943e30 <col:13, line:27:2>
    |       |-DeclStmt 0x14a943aa0 <line:20:6, col:19>
    |       | `-VarDecl 0x14a943a38 <col:6, col:10> col:10 used e 'int'
    |       `-IfStmt 0x14a943cf0 <line:21:6, line:25:6>
    |         |-RecoveryExpr 0x14a943af8 <line:21:10, col:42> '_Bool' contains-errors
    |         `-CompoundStmt 0x14a943ce0 <col:45, line:25:6>
    |-IfStmt 0x14a944300 <line:29:5, line:35:5>
    | |-BinaryOperator 0x14a943f18 <line:29:9, col:16> 'int' contains-errors '!='
    | | |-ImplicitCastExpr 0x14a943ee8 <col:9> 'long' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x14a943ea8 <col:9> 'long' contains-errors lvalue Var 0x14a928508 'len' 'long'
    | | `-ImplicitCastExpr 0x14a943f00 <col:16> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x14a943ec8 <col:16> 'long' lvalue Var 0x14a928470 'n' 'long'
    | `-CompoundStmt 0x14a9442e8 <col:19, line:35:5>
    |   `-IfStmt 0x14a9442c8 <line:32:2, line:34:2>
    |     |-RecoveryExpr 0x14a944178 <line:32:6, col:13> '_Bool' contains-errors
    |     `-CompoundStmt 0x14a9442b8 <col:18, line:34:2>
    `-IfStmt 0x14a944540 <line:36:5, line:39:5>
      |-BinaryOperator 0x14a944390 <line:36:9, col:14> 'int' '=='
      | |-ImplicitCastExpr 0x14a944360 <col:9> 'long' <LValueToRValue>
      | | `-DeclRefExpr 0x14a944320 <col:9> 'long' lvalue Var 0x14a928470 'n' 'long'
      | `-ImplicitCastExpr 0x14a944378 <col:14> 'long' <IntegralCast>
      |   `-IntegerLiteral 0x14a944340 <col:14> 'int' 0
      `-CompoundStmt 0x14a944528 <col:17, line:39:5>
        `-CallExpr 0x14a944508 <line:38:2, col:15> 'int'
          `-ImplicitCastExpr 0x14a9444f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
            `-DeclRefExpr 0x14a9444d0 <col:2> 'int ()' Function 0x14a944418 'rb_eof_error' 'int ()'
