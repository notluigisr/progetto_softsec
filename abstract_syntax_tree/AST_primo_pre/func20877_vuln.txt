`-FunctionDecl 0x142128438  line:1:14 invalid ResizeOutputTensors 'int (int *, int *, const int *, const int *, int)'
  |-ParmVarDecl 0x142128128 <col:34, col:49> col:49 invalid context 'int *'
  |-ParmVarDecl 0x1421281a8 <col:58, col:70> col:70 invalid node 'int *'
  |-ParmVarDecl 0x142128228 <line:2:34, col:54> col:54 invalid axis 'const int *'
  |-ParmVarDecl 0x1421282a8 <line:3:34, col:54> col:54 invalid input 'const int *'
  |-ParmVarDecl 0x142128328 <col:61, col:65> col:65 used num_splits 'int'
  `-CompoundStmt 0x1421419a8 <col:77, line:25:1>
    |-DeclStmt 0x1421285a0 <line:4:3, col:47>
    | `-VarDecl 0x142128520 <col:3, col:7> col:7 used axis_value 'int'
    |-IfStmt 0x143808270 <line:5:3, line:7:3>
    | |-BinaryOperator 0x142128610 <line:5:7, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x1421285f8 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1421285b8 <col:7> 'int' lvalue Var 0x142128520 'axis_value' 'int'
    | | `-IntegerLiteral 0x1421285d8 <col:20> 'int' 0
    | `-CompoundStmt 0x143808258 <col:23, line:7:3>
    |   `-CompoundAssignOperator 0x143808228 <line:6:5, col:38> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x142128630 <col:5> 'int' lvalue Var 0x142128520 'axis_value' 'int'
    |     `-CallExpr 0x143808200 <col:19, col:38> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1421287b0 <col:19> 'int ()' Function 0x1421286f8 'NumDimensions' 'int ()'
    |       `-RecoveryExpr 0x1421287d0 <col:33> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x143808428 <line:9:3, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143808370 <col:3> 'int ()' Function 0x1438082b8 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x143808390 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x143808408 <col:27, col:41> 'int' '>='
    |   |-ImplicitCastExpr 0x1438083f0 <col:27> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1438083b0 <col:27> 'int' lvalue Var 0x142128520 'axis_value' 'int'
    |   `-IntegerLiteral 0x1438083d0 <col:41> 'int' 0
    |-CallExpr 0x143808540 <line:10:3, col:60> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143808458 <col:3> 'int ()' Function 0x1438082b8 'TF_LITE_ENSURE' 'int ()'
    | |-RecoveryExpr 0x143808478 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x143808520 <col:27, col:59> 'int' contains-errors '<'
    |   |-DeclRefExpr 0x143808498 <col:27> 'int' lvalue Var 0x142128520 'axis_value' 'int'
    |   `-CallExpr 0x1438084f8 <col:40, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1438084b8 <col:40> 'int ()' Function 0x1421286f8 'NumDimensions' 'int ()'
    |     `-RecoveryExpr 0x1438084d8 <col:54> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x143808760 <line:12:3, col:60>
    | `-VarDecl 0x143808588 <col:3, col:59> col:13 used input_size 'const int' cinit
    |   `-CallExpr 0x143808730 <col:26, col:59> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1438086d0 <col:26> 'int ()' Function 0x143808618 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x1438086f0 <col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x143808710 <col:49> 'int' lvalue Var 0x142128520 'axis_value' 'int'
    |-CallExpr 0x1438089d0 <line:13:3, line:14:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143808858 <line:13:3> 'int ()' Function 0x1438087a0 'TF_LITE_ENSURE_MSG' 'int ()'
    | |-RecoveryExpr 0x143808878 <col:22> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x143808948 <col:31, col:58> 'int' contains-errors '=='
    | | |-BinaryOperator 0x143808908 <col:31, col:44> 'int' contains-errors '%'
    | | | |-ImplicitCastExpr 0x1438088d8 <col:31> 'int' contains-errors <LValueToRValue>
    | | | | `-DeclRefExpr 0x143808898 <col:31> 'const int' contains-errors lvalue Var 0x143808588 'input_size' 'const int'
    | | | `-ImplicitCastExpr 0x1438088f0 <col:44> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1438088b8 <col:44> 'int' lvalue ParmVar 0x142128328 'num_splits' 'int'
    | | `-IntegerLiteral 0x143808928 <col:58> 'int' 0
    | `-StringLiteral 0x1438089b0 <line:14:22> 'char[4]' lvalue "STR"
    |-DeclStmt 0x143808b18 <line:15:3, col:49>
    | `-VarDecl 0x143808a20 <col:3, col:39> col:13 used slice_size 'const int' cinit
    |   `-BinaryOperator 0x143808af8 <col:26, col:39> 'int' contains-errors '/'
    |     |-ImplicitCastExpr 0x143808ac8 <col:26> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x143808a88 <col:26> 'const int' contains-errors lvalue Var 0x143808588 'input_size' 'const int'
    |     `-ImplicitCastExpr 0x143808ae0 <col:39> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x143808aa8 <col:39> 'int' lvalue ParmVar 0x142128328 'num_splits' 'int'
    `-ForStmt 0x142141970 <line:17:3, line:22:3>
      |-DeclStmt 0x143808bd0 <line:17:8, col:17>
      | `-VarDecl 0x143808b48 <col:8, col:16> col:12 used i 'int' cinit
      |   `-IntegerLiteral 0x143808bb0 <col:16> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x143808d50 <col:19, col:38> 'int' contains-errors '<'
      | |-DeclRefExpr 0x143808be8 <col:19> 'int' lvalue Var 0x143808b48 'i' 'int'
      | `-CallExpr 0x143808d28 <col:23, col:38> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x143808ce8 <col:23> 'int ()' Function 0x143808c30 'NumOutputs' 'int ()'
      |   `-RecoveryExpr 0x143808d08 <col:34> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x143808d90 <col:41, col:43> 'int' prefix '++'
      | `-DeclRefExpr 0x143808d70 <col:43> 'int' lvalue Var 0x143808b48 'i' 'int'
      `-CompoundStmt 0x142141960 <col:46, line:22:3>
