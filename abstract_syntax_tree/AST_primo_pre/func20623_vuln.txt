`-FunctionDecl 0x12480e358  line:1:12 stv06xx_start 'int (struct gspca_dev *)' static
  |-ParmVarDecl 0x12480e248 <col:26, col:44> col:44 used gspca_dev 'struct gspca_dev *'
  `-CompoundStmt 0x12482fa00 <line:2:1, line:35:1>
    |-DeclStmt 0x12482ab20 <line:3:2, col:41>
    | |-RecordDecl 0x12482a850 <col:2, col:9> col:9 struct sd
    | `-VarDecl 0x12482a9b8 <col:2, col:32> col:13 used sd 'struct sd *' cinit
    |   `-CStyleCastExpr 0x12482aae0 <col:18, col:32> 'struct sd *' <BitCast>
    |     `-ImplicitCastExpr 0x12482aac8 <col:32> 'struct gspca_dev *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x12482aa20 <col:32> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'
    |-DeclStmt 0x12482ad28 <line:4:2, col:32>
    | |-RecordDecl 0x12482ab38 <col:2, col:9> col:9 struct usb_host_interface
    | `-VarDecl 0x12482aca8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'
    |-DeclStmt 0x12482af28 <line:5:2, col:28>
    | |-RecordDecl 0x12482ad40 <col:2, col:9> col:9 struct usb_interface
    | `-VarDecl 0x12482aea8 <col:2, col:24> col:24 used intf 'struct usb_interface *'
    |-DeclStmt 0x12482b058 <line:6:2, col:22>
    | |-VarDecl 0x12482af58 <col:2, col:6> col:6 used err 'int'
    | `-VarDecl 0x12482afd8 <col:2, col:11> col:11 used packet_size 'int'
    |-BinaryOperator 0x12482b360 <line:8:2, col:63> 'struct usb_interface *' contains-errors '='
    | |-DeclRefExpr 0x12482b070 <col:2> 'struct usb_interface *' lvalue Var 0x12482aea8 'intf' 'struct usb_interface *'
    | `-CallExpr 0x12482b330 <col:9, col:63> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12482b1c0 <col:9> 'int ()' Function 0x12482b108 'usb_ifnum_to_if' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x12482b240 <col:25, col:39> '<dependent type>' contains-errors lvalue .dev
    |   | `-RecoveryExpr 0x12482b218 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12482b1e0 <col:25> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |   `-CXXDependentScopeMemberExpr 0x12482b2e8 <col:44, col:58> '<dependent type>' contains-errors lvalue .iface
    |     `-RecoveryExpr 0x12482b2c0 <col:44, col:48> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12482b288 <col:44> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |-BinaryOperator 0x12482b598 <line:9:2, col:56> 'struct usb_host_interface *' contains-errors '='
    | |-DeclRefExpr 0x12482b380 <col:2> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'
    | `-CallExpr 0x12482b568 <col:8, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12482b480 <col:8> 'int ()' Function 0x12482b3c8 'usb_altnum_to_altsetting' 'int ()'
    |   |-DeclRefExpr 0x12482b4a0 <col:33> 'struct usb_interface *' lvalue Var 0x12482aea8 'intf' 'struct usb_interface *'
    |   `-CXXDependentScopeMemberExpr 0x12482b520 <col:39, col:53> '<dependent type>' contains-errors lvalue .alt
    |     `-RecoveryExpr 0x12482b4f8 <col:39, col:43> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12482b4c0 <col:39> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |-IfStmt 0x12482e128 <line:10:2, line:13:2>
    | |-UnaryOperator 0x12482b5f0 <line:10:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12482b5d8 <col:7> 'struct usb_host_interface *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12482b5b8 <col:7> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'
    | `-CompoundStmt 0x12482e108 <col:12, line:13:2>
    |   |-CallExpr 0x12482e000 <line:11:3, col:29> 'int'
    |   | |-ImplicitCastExpr 0x12482b7c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12482b6e8 <col:3> 'int ()' Function 0x12482b630 'gspca_err' 'int ()'
    |   | |-ImplicitCastExpr 0x12482e030 <col:13> 'struct gspca_dev *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12482b708 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'
    |   | `-ImplicitCastExpr 0x12482e048 <col:24> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x12482b770 <col:24> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12482e0f8 <line:12:3, col:11>
    |     `-UnaryOperator 0x12482e0e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12482e0c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12482e0a8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12482e3d8 <line:15:2, col:64> 'int' contains-errors '='
    | |-DeclRefExpr 0x12482e148 <col:2> 'int' lvalue Var 0x12482afd8 'packet_size' 'int'
    | `-CallExpr 0x12482e3b0 <col:16, col:64> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12482e248 <col:16> 'int ()' Function 0x12482e190 'le16_to_cpu' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12482e368 <col:28, col:50> '<dependent type>' contains-errors lvalue .wMaxPacketSize
    |     `-CXXDependentScopeMemberExpr 0x12482e320 <col:28, col:45> '<dependent type>' contains-errors lvalue .desc
    |       `-ArraySubscriptExpr 0x12482e300 <col:28, col:43> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x12482e2e8 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-RecoveryExpr 0x12482e2a0 <col:28, col:33> '<dependent type>' contains-errors lvalue
    |         |   `-DeclRefExpr 0x12482e268 <col:28> 'struct usb_host_interface *' lvalue Var 0x12482aca8 'alt' 'struct usb_host_interface *'
    |         `-IntegerLiteral 0x12482e2c8 <col:42> 'int' 0
    |-BinaryOperator 0x12482e620 <line:16:2, col:60> 'int' contains-errors '='
    | |-DeclRefExpr 0x12482e3f8 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'
    | `-CallExpr 0x12482e5e8 <col:8, col:60> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12482e4f8 <col:8> 'int ()' Function 0x12482e440 'stv06xx_write_bridge' 'int ()'
    |   |-DeclRefExpr 0x12482e518 <col:29> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |   |-RecoveryExpr 0x12482e5c8 <col:33> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12482e550 <col:49> 'int' lvalue Var 0x12482afd8 'packet_size' 'int'
    |-IfStmt 0x12482e700 <line:17:2, line:18:10>
    | |-BinaryOperator 0x12482e698 <line:17:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12482e680 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12482e640 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'
    | | `-IntegerLiteral 0x12482e660 <col:12> 'int' 0
    | `-ReturnStmt 0x12482e6f0 <line:18:3, col:10>
    |   `-ImplicitCastExpr 0x12482e6d8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12482e6b8 <col:10> 'int' lvalue Var 0x12482af58 'err' 'int'
    |-BinaryOperator 0x12482e830 <line:21:2, col:28> 'int' contains-errors '='
    | |-DeclRefExpr 0x12482e720 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'
    | `-CallExpr 0x12482e808 <col:8, col:28> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12482e7a0 <col:8, col:20> '<dependent type>' contains-errors lvalue ->start
    |   | `-RecoveryExpr 0x12482e778 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12482e740 <col:8> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |   `-DeclRefExpr 0x12482e7e8 <col:26> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |-IfStmt 0x12482e930 <line:22:2, line:23:8>
    | |-BinaryOperator 0x12482e8a8 <line:22:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12482e890 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12482e850 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'
    | | `-IntegerLiteral 0x12482e870 <col:12> 'int' 0
    | `-GotoStmt 0x12482e918 <line:23:3, col:8> 'out' 0x12482e8c8
    |-BinaryOperator 0x12482ea98 <line:26:2, col:50> 'int' contains-errors '='
    | |-DeclRefExpr 0x12482e950 <col:2> 'int' lvalue Var 0x12482af58 'err' 'int'
    | `-CallExpr 0x12482ea60 <col:8, col:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12482e970 <col:8> 'int ()' Function 0x12482e440 'stv06xx_write_bridge' 'int ()'
    |   |-DeclRefExpr 0x12482e990 <col:29> 'struct sd *' lvalue Var 0x12482a9b8 'sd' 'struct sd *'
    |   |-RecoveryExpr 0x12482ea40 <col:33> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x12482e9c8 <col:49> 'int' 1
    |-LabelStmt 0x12482ee50 <line:28:1, line:32:39> 'out'
    | `-IfStmt 0x12482ee20 <line:29:2, line:32:39> has_else
    |   |-BinaryOperator 0x12482eb10 <line:29:6, col:12> 'int' '<'
    |   | |-ImplicitCastExpr 0x12482eaf8 <col:6> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12482eab8 <col:6> 'int' lvalue Var 0x12482af58 'err' 'int'
    |   | `-IntegerLiteral 0x12482ead8 <col:12> 'int' 0
    |   |-CallExpr 0x12482ece0 <line:30:3, col:39> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12482ec10 <col:3> 'int ()' Function 0x12482eb58 'gspca_dbg' 'int ()'
    |   | |-DeclRefExpr 0x12482ec30 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'
    |   | |-RecoveryExpr 0x12482ecc0 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x12482ec68 <col:34> 'char[4]' lvalue "STR"
    |   `-CallExpr 0x12482ede8 <line:32:3, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12482ed18 <col:3> 'int ()' Function 0x12482eb58 'gspca_dbg' 'int ()'
    |     |-DeclRefExpr 0x12482ed38 <col:13> 'struct gspca_dev *' lvalue ParmVar 0x12480e248 'gspca_dev' 'struct gspca_dev *'
    |     |-RecoveryExpr 0x12482edc8 <col:24> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x12482ed70 <col:34> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x12482ef90 <line:34:2, col:27>
      `-ConditionalOperator 0x12482ef60 <col:9, col:27> 'int'
        |-ParenExpr 0x12482eee8 <col:9, col:17> 'int'
        | `-BinaryOperator 0x12482eec8 <col:10, col:16> 'int' '<'
        |   |-ImplicitCastExpr 0x12482eeb0 <col:10> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x12482ee70 <col:10> 'int' lvalue Var 0x12482af58 'err' 'int'
        |   `-IntegerLiteral 0x12482ee90 <col:16> 'int' 0
        |-ImplicitCastExpr 0x12482ef48 <col:21> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12482ef08 <col:21> 'int' lvalue Var 0x12482af58 'err' 'int'
        `-IntegerLiteral 0x12482ef28 <col:27> 'int' 0
