`-FunctionDecl 0x1401281a0  line:1:13 scsi_dma_restart_bh 'void (void *)' static
  |-ParmVarDecl 0x1401280d8 <col:33, col:39> col:39 used opaque 'void *'
  `-CompoundStmt 0x138009d98 <line:2:1, line:34:1>
    |-CallExpr 0x140128540 <line:7:5, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140128430 <col:5> 'int ()' Function 0x140128378 'qemu_bh_delete' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x1401284f8 <col:20, col:23> '<dependent type>' contains-errors lvalue ->bh
    |   `-RecoveryExpr 0x1401284d8 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1380094c8 <line:10:5, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140128660 <col:5> 'int ()' Function 0x1401285a8 'QTAILQ_FOREACH' 'int ()'
    | |-RecoveryExpr 0x1401287a8 <col:20> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x138009490 <col:25, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x138009448 <col:26, col:34> '<dependent type>' contains-errors lvalue .requests
    | |   `-CXXDependentScopeMemberExpr 0x138009400 <col:26, col:29> '<dependent type>' contains-errors lvalue ->qdev
    | |     `-RecoveryExpr 0x1401287c8 <col:26> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1380094a8 <col:44> '<dependent type>' contains-errors lvalue
    `-CompoundStmt 0x138009d80 <col:50, line:33:5>
      `-IfStmt 0x138009d60 <line:12:9, line:32:9>
        |-RecoveryExpr 0x138009680 <line:12:13, col:25> '_Bool' contains-errors
        `-CompoundStmt 0x138009d38 <col:48, line:32:9>
          |-DeclStmt 0x138009720 <line:13:13, col:35>
          | `-VarDecl 0x1380096b8 <col:13, col:17> col:17 used status 'int'
          |-DeclStmt 0x1380097b8 <line:14:13, col:20>
          | `-VarDecl 0x138009750 <col:13, col:17> col:17 used ret 'int'
          `-SwitchStmt 0x138009810 <line:19:13, line:31:13>
            |-RecoveryExpr 0x1380097f0 <line:19:21, col:30> 'int' contains-errors
            `-CompoundStmt 0x138009d10 <col:63, line:31:13>
              |-BreakStmt 0x138009938 <line:22:17>
              |-BreakStmt 0x138009a40 <line:25:17>
              `-IfStmt 0x138009cf0 <line:28:17, line:30:17>
                |-BinaryOperator 0x138009bc0 <line:28:21, col:28> 'int' '=='
                | |-ImplicitCastExpr 0x138009ba8 <col:21> 'int' <LValueToRValue>
                | | `-DeclRefExpr 0x138009b68 <col:21> 'int' lvalue Var 0x138009750 'ret' 'int'
                | `-IntegerLiteral 0x138009b88 <col:28> 'int' 0
                `-CompoundStmt 0x138009ce0 <col:31, line:30:17>
