`-FunctionDecl 0x10580ddf8  line:1:1 invalid hb_set_clear 'int (int *)'
  |-ParmVarDecl 0x10580dd28 <col:15, col:25> col:25 referenced invalid set 'int *'
  `-CompoundStmt 0x10580e270 <line:2:1, line:7:1>
    |-IfStmt 0x10580e1a0 <line:3:3, line:4:5>
    | |-CallExpr 0x10580e168 <line:3:7, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x10580e000 <col:7> 'int ()' Function 0x10580df48 'unlikely' 'int ()'
    | | `-CallExpr 0x10580e140 <col:17, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x10580e100 <col:17> 'int ()' Function 0x10580e048 'hb_object_is_immutable' 'int ()'
    | |   `-RecoveryExpr 0x10580e120 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x10580e190 <line:4:5>
    `-CallExpr 0x10580e250 <line:6:3, col:15> '<dependent type>' contains-errors
      `-CXXDependentScopeMemberExpr 0x10580e208 <col:3, col:8> '<dependent type>' contains-errors lvalue ->clear
        `-RecoveryExpr 0x10580e1e0 <col:3> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x10580e1c0 <col:3> 'int *' lvalue ParmVar 0x10580dd28 'set' 'int *'
