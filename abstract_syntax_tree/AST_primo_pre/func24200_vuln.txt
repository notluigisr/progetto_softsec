`-FunctionDecl 0x1201282b8  line:1:1 invalid set_vterm_palette 'int (int *, long *)'
  |-ParmVarDecl 0x120128128 <col:19, col:26> col:26 invalid vterm 'int *'
  |-ParmVarDecl 0x1201281d8 <col:33, col:41> col:41 used rgb 'long *'
  `-CompoundStmt 0x120142da8 <line:2:1, line:13:1>
    |-DeclStmt 0x120128410 <line:3:5, col:19>
    | `-VarDecl 0x120128388 <col:5, col:18> col:10 used index 'int' cinit
    |   `-IntegerLiteral 0x1201283f0 <col:18> 'int' 0
    `-ForStmt 0x120142d70 <line:5:5, line:12:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x120128660 <line:5:12, col:20> 'int' '<'
      | |-ImplicitCastExpr 0x120128648 <col:12> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x120128608 <col:12> 'int' lvalue Var 0x120128388 'index' 'int'
      | `-IntegerLiteral 0x120128628 <col:20> 'int' 16
      |-UnaryOperator 0x1201286a0 <col:24, col:29> 'int' postfix '++'
      | `-DeclRefExpr 0x120128680 <col:24> 'int' lvalue Var 0x120128388 'index' 'int'
      `-CompoundStmt 0x120142d58 <line:6:5, line:12:5>
        `-CallExpr 0x120142d20 <line:11:2, col:52> '<dependent type>' contains-errors
          |-DeclRefExpr 0x120142c08 <col:2> 'int ()' Function 0x120142b50 'vterm_state_set_palette_color' 'int ()'
          |-RecoveryExpr 0x120142cc8 <col:32> '<dependent type>' contains-errors lvalue
          |-DeclRefExpr 0x120142c40 <col:39> 'int' lvalue Var 0x120128388 'index' 'int'
          `-UnaryOperator 0x120142d08 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
            `-RecoveryExpr 0x120142ce8 <col:47> '<dependent type>' contains-errors lvalue
