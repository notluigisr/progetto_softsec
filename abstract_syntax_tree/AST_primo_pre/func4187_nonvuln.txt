`-FunctionDecl 0x12b128c88  line:1:1 invalid rsvg_filter_primitive_image_render_ext 'int (int *, int *)'
  |-ParmVarDecl 0x12b128b28 <col:41, col:62> col:62 invalid self 'int *'
  |-ParmVarDecl 0x12b128ba8 <col:68, col:88> col:88 invalid ctx 'int *'
  `-CompoundStmt 0x12b144a18 <line:2:1, line:65:1>
    |-DeclStmt 0x12b128e50 <line:6:5, col:10>
    | `-VarDecl 0x12b128de8 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x12b128f20 <line:7:5, col:26>
    | `-VarDecl 0x12b128eb8 <col:5, col:20> col:20 used pixels 'unsigned char *'
    |-DeclStmt 0x12b129050 <line:8:5, col:22>
    | `-VarDecl 0x12b128fe8 <col:5, col:21> col:9 used channelmap 'int[4]'
    |-DeclStmt 0x12b1290e8 <line:9:5, col:15>
    | `-VarDecl 0x12b129080 <col:5, col:9> col:9 used length 'int'
    |-DeclStmt 0x12b142218 <line:10:5, col:22>
    | |-VarDecl 0x12b129118 <col:5, col:9> col:9 used width 'int'
    | `-VarDecl 0x12b129198 <col:5, col:16> col:16 used height 'int'
    |-IfStmt 0x12b1423a0 <line:12:5, line:13:16>
    | |-UnaryOperator 0x12b142340 <line:12:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12b142328 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12b1422e0 <col:10, col:17> '<dependent type>' contains-errors lvalue ->href
    | |     `-RecoveryExpr 0x12b1422c0 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12b142390 <line:13:9, col:16>
    |   `-RecoveryExpr 0x12b142370 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b1427c0 <line:17:5, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b1425b0 <col:5> 'int' lvalue Var 0x12b129118 'width' 'int'
    | `-BinaryOperator 0x12b1427a0 <col:13, col:38> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x12b1426f0 <col:13, col:23> '<dependent type>' contains-errors lvalue .x1
    |   | `-RecoveryExpr 0x12b1426d0 <col:13> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x12b142758 <col:28, col:38> '<dependent type>' contains-errors lvalue .x0
    |     `-RecoveryExpr 0x12b142738 <col:28> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12b1429f0 <line:18:5, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x12b1427e0 <col:5> 'int' lvalue Var 0x12b129198 'height' 'int'
    | `-BinaryOperator 0x12b1429d0 <col:14, col:39> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x12b142920 <col:14, col:24> '<dependent type>' contains-errors lvalue .y1
    |   | `-RecoveryExpr 0x12b142900 <col:14> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x12b142988 <col:29, col:39> '<dependent type>' contains-errors lvalue .y0
    |     `-RecoveryExpr 0x12b142968 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b142b68 <line:19:5, line:20:16>
    | |-BinaryOperator 0x12b142b00 <line:19:9, col:33> 'int' '||'
    | | |-BinaryOperator 0x12b142a68 <col:9, col:18> 'int' '=='
    | | | |-ImplicitCastExpr 0x12b142a50 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12b142a10 <col:9> 'int' lvalue Var 0x12b129118 'width' 'int'
    | | | `-IntegerLiteral 0x12b142a30 <col:18> 'int' 0
    | | `-BinaryOperator 0x12b142ae0 <col:23, col:33> 'int' '=='
    | |   |-ImplicitCastExpr 0x12b142ac8 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12b142a88 <col:23> 'int' lvalue Var 0x12b129198 'height' 'int'
    | |   `-IntegerLiteral 0x12b142aa8 <col:33> 'int' 0
    | `-ReturnStmt 0x12b142b58 <line:20:9, col:16>
    |   `-RecoveryExpr 0x12b142b38 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12b1431b8 <line:29:5, line:37:5>
    | |-RecoveryExpr 0x12b143068 <line:29:9, line:33:67> '_Bool' contains-errors
    | `-CompoundStmt 0x12b1431a8 <col:70, line:37:5>
    |-ForStmt 0x12b1436b8 <line:43:5, line:44:42>
    | |-BinaryOperator 0x12b143460 <line:43:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12b143420 <col:10> 'int' lvalue Var 0x12b128de8 'i' 'int'
    | | `-IntegerLiteral 0x12b143440 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12b1434d8 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x12b1434c0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12b143480 <col:17> 'int' lvalue Var 0x12b128de8 'i' 'int'
    | | `-IntegerLiteral 0x12b1434a0 <col:21> 'int' 4
    | |-UnaryOperator 0x12b143518 <col:24, col:25> 'int' postfix '++'
    | | `-DeclRefExpr 0x12b1434f8 <col:24> 'int' lvalue Var 0x12b128de8 'i' 'int'
    | `-BinaryOperator 0x12b143698 <line:44:9, col:42> 'int' contains-errors '='
    |   |-ArraySubscriptExpr 0x12b1435a0 <col:9, col:21> 'int' lvalue
    |   | |-ImplicitCastExpr 0x12b143570 <col:9> 'int *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x12b143530 <col:9> 'int[4]' lvalue Var 0x12b128fe8 'channelmap' 'int[4]'
    |   | `-ImplicitCastExpr 0x12b143588 <col:20> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12b143550 <col:20> 'int' lvalue Var 0x12b128de8 'i' 'int'
    |   `-ArraySubscriptExpr 0x12b143678 <col:25, col:42> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x12b143648 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x12b1435e0 <col:25, col:30> '<dependent type>' contains-errors lvalue ->channelmap
    |     |   `-RecoveryExpr 0x12b1435c0 <col:25> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x12b143660 <col:41> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12b143628 <col:41> 'int' lvalue Var 0x12b128de8 'i' 'int'
    `-ForStmt 0x12b1448e0 <line:46:5, line:61:5>
      |-BinaryOperator 0x12b143850 <line:46:10, col:14> 'int' '='
      | |-DeclRefExpr 0x12b143810 <col:10> 'int' lvalue Var 0x12b128de8 'i' 'int'
      | `-IntegerLiteral 0x12b143830 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x12b1438e0 <col:17, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x12b1438b0 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x12b143870 <col:17> 'int' lvalue Var 0x12b128de8 'i' 'int'
      | `-ImplicitCastExpr 0x12b1438c8 <col:21> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x12b143890 <col:21> 'int' lvalue Var 0x12b129080 'length' 'int'
      |-CompoundAssignOperator 0x12b143940 <col:29, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      | |-DeclRefExpr 0x12b143900 <col:29> 'int' lvalue Var 0x12b128de8 'i' 'int'
      | `-IntegerLiteral 0x12b143920 <col:34> 'int' 4
      `-CompoundStmt 0x12b144898 <col:37, line:61:5>
        |-DeclStmt 0x12b1439f0 <line:47:9, col:28>
        | `-VarDecl 0x12b143988 <col:9, col:23> col:23 used alpha 'unsigned char'
        |-DeclStmt 0x12b143b20 <line:48:9, col:31>
        | `-VarDecl 0x12b143ab8 <col:9, col:30> col:23 used pixel 'unsigned char[4]'
        |-DeclStmt 0x12b143bb8 <line:49:9, col:15>
        | `-VarDecl 0x12b143b50 <col:9, col:13> col:13 used ch 'int'
        |-BinaryOperator 0x12b143cd8 <line:50:9, col:29> 'unsigned char' '='
        | |-DeclRefExpr 0x12b143bd0 <col:9> 'unsigned char' lvalue Var 0x12b143988 'alpha' 'unsigned char'
        | `-ImplicitCastExpr 0x12b143cc0 <col:17, col:29> 'unsigned char' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x12b143ca0 <col:17, col:29> 'unsigned char' lvalue
        |     |-ImplicitCastExpr 0x12b143c88 <col:17> 'unsigned char *' <LValueToRValue>
        |     | `-DeclRefExpr 0x12b143bf0 <col:17> 'unsigned char *' lvalue Var 0x12b128eb8 'pixels' 'unsigned char *'
        |     `-BinaryOperator 0x12b143c68 <col:24, col:28> 'int' '+'
        |       |-ImplicitCastExpr 0x12b143c50 <col:24> 'int' <LValueToRValue>
        |       | `-DeclRefExpr 0x12b143c10 <col:24> 'int' lvalue Var 0x12b128de8 'i' 'int'
        |       `-IntegerLiteral 0x12b143c30 <col:28> 'int' 3
        |-BinaryOperator 0x12b143e18 <line:52:9, col:32> 'unsigned char' '='
        | |-ArraySubscriptExpr 0x12b143dc0 <col:9, col:28> 'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x12b143d90 <col:9> 'unsigned char *' <ArrayToPointerDecay>
        | | | `-DeclRefExpr 0x12b143cf8 <col:9> 'unsigned char[4]' lvalue Var 0x12b143ab8 'pixel' 'unsigned char[4]'
        | | `-ImplicitCastExpr 0x12b143da8 <col:15, col:27> 'int' <LValueToRValue>
        | |   `-ArraySubscriptExpr 0x12b143d70 <col:15, col:27> 'int' lvalue
        | |     |-ImplicitCastExpr 0x12b143d58 <col:15> 'int *' <ArrayToPointerDecay>
        | |     | `-DeclRefExpr 0x12b143d18 <col:15> 'int[4]' lvalue Var 0x12b128fe8 'channelmap' 'int[4]'
        | |     `-IntegerLiteral 0x12b143d38 <col:26> 'int' 3
        | `-ImplicitCastExpr 0x12b143e00 <col:32> 'unsigned char' <LValueToRValue>
        |   `-DeclRefExpr 0x12b143de0 <col:32> 'unsigned char' lvalue Var 0x12b143988 'alpha' 'unsigned char'
        |-IfStmt 0x12b144570 <line:53:9, line:58:41> has_else
        | |-ImplicitCastExpr 0x12b143e58 <line:53:13> 'unsigned char' <LValueToRValue>
        | | `-DeclRefExpr 0x12b143e38 <col:13> 'unsigned char' lvalue Var 0x12b143988 'alpha' 'unsigned char'
        | |-ForStmt 0x12b144298 <line:54:13, line:55:66>
        | | |-BinaryOperator 0x12b143eb0 <line:54:18, col:23> 'int' '='
        | | | |-DeclRefExpr 0x12b143e70 <col:18> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        | | | `-IntegerLiteral 0x12b143e90 <col:23> 'int' 0
        | | |-<<<NULL>>>
        | | |-BinaryOperator 0x12b143f28 <col:26, col:31> 'int' '<'
        | | | |-ImplicitCastExpr 0x12b143f10 <col:26> 'int' <LValueToRValue>
        | | | | `-DeclRefExpr 0x12b143ed0 <col:26> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        | | | `-IntegerLiteral 0x12b143ef0 <col:31> 'int' 3
        | | |-UnaryOperator 0x12b143f68 <col:34, col:36> 'int' postfix '++'
        | | | `-DeclRefExpr 0x12b143f48 <col:34> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        | | `-BinaryOperator 0x12b144278 <line:55:17, col:66> 'unsigned char' '='
        | |   |-ArraySubscriptExpr 0x12b144060 <col:17, col:37> 'unsigned char' lvalue
        | |   | |-ImplicitCastExpr 0x12b144030 <col:17> 'unsigned char *' <ArrayToPointerDecay>
        | |   | | `-DeclRefExpr 0x12b143f80 <col:17> 'unsigned char[4]' lvalue Var 0x12b143ab8 'pixel' 'unsigned char[4]'
        | |   | `-ImplicitCastExpr 0x12b144048 <col:23, col:36> 'int' <LValueToRValue>
        | |   |   `-ArraySubscriptExpr 0x12b144010 <col:23, col:36> 'int' lvalue
        | |   |     |-ImplicitCastExpr 0x12b143fe0 <col:23> 'int *' <ArrayToPointerDecay>
        | |   |     | `-DeclRefExpr 0x12b143fa0 <col:23> 'int[4]' lvalue Var 0x12b128fe8 'channelmap' 'int[4]'
        | |   |     `-ImplicitCastExpr 0x12b143ff8 <col:34> 'int' <LValueToRValue>
        | |   |       `-DeclRefExpr 0x12b143fc0 <col:34> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        | |   `-ImplicitCastExpr 0x12b144260 <col:41, col:66> 'unsigned char' <IntegralCast>
        | |     `-BinaryOperator 0x12b144240 <col:41, col:66> 'int' '/'
        | |       |-BinaryOperator 0x12b144200 <col:41, col:58> 'int' '*'
        | |       | |-ImplicitCastExpr 0x12b1441a0 <col:41, col:54> 'int' <IntegralCast>
        | |       | | `-ImplicitCastExpr 0x12b144188 <col:41, col:54> 'unsigned char' <LValueToRValue>
        | |       | |   `-ArraySubscriptExpr 0x12b144148 <col:41, col:54> 'unsigned char' lvalue
        | |       | |     |-ImplicitCastExpr 0x12b144130 <col:41> 'unsigned char *' <LValueToRValue>
        | |       | |     | `-DeclRefExpr 0x12b144080 <col:41> 'unsigned char *' lvalue Var 0x12b128eb8 'pixels' 'unsigned char *'
        | |       | |     `-BinaryOperator 0x12b144110 <col:48, col:52> 'int' '+'
        | |       | |       |-ImplicitCastExpr 0x12b1440e0 <col:48> 'int' <LValueToRValue>
        | |       | |       | `-DeclRefExpr 0x12b1440a0 <col:48> 'int' lvalue Var 0x12b128de8 'i' 'int'
        | |       | |       `-ImplicitCastExpr 0x12b1440f8 <col:52> 'int' <LValueToRValue>
        | |       | |         `-DeclRefExpr 0x12b1440c0 <col:52> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        | |       | `-ImplicitCastExpr 0x12b1441d0 <col:58> 'int' <IntegralCast>
        | |       |   `-ImplicitCastExpr 0x12b1441b8 <col:58> 'unsigned char' <LValueToRValue>
        | |       |     `-DeclRefExpr 0x12b144168 <col:58> 'unsigned char' lvalue Var 0x12b143988 'alpha' 'unsigned char'
        | |       `-IntegerLiteral 0x12b144220 <col:66> 'int' 255
        | `-ForStmt 0x12b144538 <line:57:13, line:58:41>
        |   |-BinaryOperator 0x12b144310 <line:57:18, col:23> 'int' '='
        |   | |-DeclRefExpr 0x12b1442d0 <col:18> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        |   | `-IntegerLiteral 0x12b1442f0 <col:23> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x12b144388 <col:26, col:31> 'int' '<'
        |   | |-ImplicitCastExpr 0x12b144370 <col:26> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x12b144330 <col:26> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        |   | `-IntegerLiteral 0x12b144350 <col:31> 'int' 3
        |   |-UnaryOperator 0x12b1443c8 <col:34, col:36> 'int' postfix '++'
        |   | `-DeclRefExpr 0x12b1443a8 <col:34> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        |   `-BinaryOperator 0x12b144518 <line:58:17, col:41> 'unsigned char' '='
        |     |-ArraySubscriptExpr 0x12b1444c0 <col:17, col:37> 'unsigned char' lvalue
        |     | |-ImplicitCastExpr 0x12b144490 <col:17> 'unsigned char *' <ArrayToPointerDecay>
        |     | | `-DeclRefExpr 0x12b1443e0 <col:17> 'unsigned char[4]' lvalue Var 0x12b143ab8 'pixel' 'unsigned char[4]'
        |     | `-ImplicitCastExpr 0x12b1444a8 <col:23, col:36> 'int' <LValueToRValue>
        |     |   `-ArraySubscriptExpr 0x12b144470 <col:23, col:36> 'int' lvalue
        |     |     |-ImplicitCastExpr 0x12b144440 <col:23> 'int *' <ArrayToPointerDecay>
        |     |     | `-DeclRefExpr 0x12b144400 <col:23> 'int[4]' lvalue Var 0x12b128fe8 'channelmap' 'int[4]'
        |     |     `-ImplicitCastExpr 0x12b144458 <col:34> 'int' <LValueToRValue>
        |     |       `-DeclRefExpr 0x12b144420 <col:34> 'int' lvalue Var 0x12b143b50 'ch' 'int'
        |     `-ImplicitCastExpr 0x12b144500 <col:41> 'unsigned char' <IntegralCast>
        |       `-IntegerLiteral 0x12b1444e0 <col:41> 'int' 0
        `-ForStmt 0x12b144860 <line:59:9, line:60:38>
          |-BinaryOperator 0x12b1445e0 <line:59:14, col:19> 'int' '='
          | |-DeclRefExpr 0x12b1445a0 <col:14> 'int' lvalue Var 0x12b143b50 'ch' 'int'
          | `-IntegerLiteral 0x12b1445c0 <col:19> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x12b144658 <col:22, col:27> 'int' '<'
          | |-ImplicitCastExpr 0x12b144640 <col:22> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x12b144600 <col:22> 'int' lvalue Var 0x12b143b50 'ch' 'int'
          | `-IntegerLiteral 0x12b144620 <col:27> 'int' 4
          |-UnaryOperator 0x12b144698 <col:30, col:32> 'int' postfix '++'
          | `-DeclRefExpr 0x12b144678 <col:30> 'int' lvalue Var 0x12b143b50 'ch' 'int'
          `-BinaryOperator 0x12b144840 <line:60:13, col:38> 'unsigned char' '='
            |-ArraySubscriptExpr 0x12b144778 <col:13, col:26> 'unsigned char' lvalue
            | |-ImplicitCastExpr 0x12b144760 <col:13> 'unsigned char *' <LValueToRValue>
            | | `-DeclRefExpr 0x12b1446b0 <col:13> 'unsigned char *' lvalue Var 0x12b128eb8 'pixels' 'unsigned char *'
            | `-BinaryOperator 0x12b144740 <col:20, col:24> 'int' '+'
            |   |-ImplicitCastExpr 0x12b144710 <col:20> 'int' <LValueToRValue>
            |   | `-DeclRefExpr 0x12b1446d0 <col:20> 'int' lvalue Var 0x12b128de8 'i' 'int'
            |   `-ImplicitCastExpr 0x12b144728 <col:24> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x12b1446f0 <col:24> 'int' lvalue Var 0x12b143b50 'ch' 'int'
            `-ImplicitCastExpr 0x12b144828 <col:30, col:38> 'unsigned char' <LValueToRValue>
              `-ArraySubscriptExpr 0x12b144808 <col:30, col:38> 'unsigned char' lvalue
                |-ImplicitCastExpr 0x12b1447d8 <col:30> 'unsigned char *' <ArrayToPointerDecay>
                | `-DeclRefExpr 0x12b144798 <col:30> 'unsigned char[4]' lvalue Var 0x12b143ab8 'pixel' 'unsigned char[4]'
                `-ImplicitCastExpr 0x12b1447f0 <col:36> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x12b1447b8 <col:36> 'int' lvalue Var 0x12b143b50 'ch' 'int'
