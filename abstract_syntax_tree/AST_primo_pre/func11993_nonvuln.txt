`-FunctionDecl 0x13900ddc8  line:1:1 out_str_nf 'int (char *)'
  |-ParmVarDecl 0x13900dcf0 <col:12, col:20> col:20 used s 'char *'
  `-CompoundStmt 0x1390278b0 <line:2:1, line:13:1>
    |-IfStmt 0x13900e188 <line:4:5, line:5:12>
    | |-BinaryOperator 0x13900dfc8 <line:4:9, col:30> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x13900df48 <col:9> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13900dfa8 <col:19, col:30> '<dependent type>' contains-errors '-'
    | |   |-RecoveryExpr 0x13900df68 <col:19> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13900df88 <col:30> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13900e168 <line:5:2, col:12> 'int'
    |   `-ImplicitCastExpr 0x13900e150 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13900e100 <col:2> 'int ()' Function 0x13900e048 'out_flush' 'int ()'
    |-WhileStmt 0x13900e3d0 <line:7:5, line:8:18>
    | |-ImplicitCastExpr 0x13900e1f8 <line:7:12, col:13> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x13900e1e0 <col:12, col:13> 'char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13900e1c8 <col:13> 'char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13900e1a8 <col:13> 'char *' lvalue ParmVar 0x13900dcf0 's' 'char *'
    | `-CallExpr 0x13900e378 <line:8:2, col:18> 'int'
    |   |-ImplicitCastExpr 0x13900e360 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13900e2f0 <col:2> 'int ()' Function 0x13900e238 'out_char_nf' 'int ()'
    |   `-ImplicitCastExpr 0x13900e3b8 <col:14, col:16> 'int' <IntegralCast>
    |     `-ImplicitCastExpr 0x13900e3a0 <col:14, col:16> 'char' <LValueToRValue>
    |       `-UnaryOperator 0x13900e348 <col:14, col:16> 'char' lvalue prefix '*' cannot overflow
    |         `-UnaryOperator 0x13900e330 <col:15, col:16> 'char *' postfix '++'
    |           `-DeclRefExpr 0x13900e310 <col:15> 'char *' lvalue ParmVar 0x13900dcf0 's' 'char *'
    `-IfStmt 0x139027890 <line:11:5, line:12:12>
      |-RecoveryExpr 0x139027818 <line:11:9> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x139027870 <line:12:2, col:12> 'int'
        `-ImplicitCastExpr 0x139027858 <col:2> 'int (*)()' <FunctionToPointerDecay>
          `-DeclRefExpr 0x139027838 <col:2> 'int ()' Function 0x13900e048 'out_flush' 'int ()'
