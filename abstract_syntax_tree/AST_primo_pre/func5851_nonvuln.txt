`-FunctionDecl 0x12d128b78  line:1:1 invalid put_info 'int (const char *, int, int, const char *)'
  |-ParmVarDecl 0x12d1288d8 <col:10, col:22> col:22 used str 'const char *'
  |-ParmVarDecl 0x12d128970 <col:26, col:36> col:36 invalid info_type 'int'
  |-ParmVarDecl 0x12d1289f0 <col:47, col:52> col:52 used error 'int'
  |-ParmVarDecl 0x12d128a70 <col:59, col:71> col:71 used sqlstate 'const char *'
  `-CompoundStmt 0x12d143228 <line:2:1, line:68:1>
    |-DeclStmt 0x12d128cf8 <line:4:3, col:22>
    | `-VarDecl 0x12d128c70 <col:3, col:21> col:14 used inited 'int' static cinit
    |   `-IntegerLiteral 0x12d128cd8 <col:21> 'int' 0
    |-IfStmt 0x12d142948 <line:6:3, line:35:3>
    | |-CXXDependentScopeMemberExpr 0x12d128d90 <line:6:7, col:14> '<dependent type>' contains-errors lvalue .batch
    | | `-RecoveryExpr 0x12d128d70 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d142930 <line:7:3, line:35:3>
    |   `-IfStmt 0x12d142848 <line:8:5, line:30:10> has_else
    |     |-BinaryOperator 0x12d128e50 <line:8:9, col:22> 'int' contains-errors '=='
    |     | |-RecoveryExpr 0x12d128dd8 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x12d128e30 <col:22> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x12d142698 <line:9:5, line:29:5>
    |     | |-IfStmt 0x12d142360 <line:12:7, line:18:7>
    |     | | |-ImplicitCastExpr 0x12d1421f0 <line:12:11> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x12d1421d0 <col:11> 'int' lvalue ParmVar 0x12d1289f0 'error' 'int'
    |     | | `-CompoundStmt 0x12d142350 <line:13:7, line:18:7>
    |     | |-IfStmt 0x12d142588 <line:19:7, line:24:7>
    |     | | |-BinaryOperator 0x12d1424a0 <line:19:11, col:38> 'int' contains-errors '&&'
    |     | | | |-CXXDependentScopeMemberExpr 0x12d142438 <col:11, col:18> '<dependent type>' contains-errors lvalue .query_start_line
    |     | | | | `-RecoveryExpr 0x12d142418 <col:11> '<dependent type>' contains-errors lvalue
    |     | | | `-RecoveryExpr 0x12d142480 <col:38> '<dependent type>' contains-errors lvalue
    |     | | `-CompoundStmt 0x12d142578 <line:20:7, line:24:7>
    |     | `-IfStmt 0x12d142678 <line:27:7, line:28:9>
    |     |   |-RecoveryExpr 0x12d142628 <line:27:11, col:12> '_Bool' contains-errors
    |     |   `-ReturnStmt 0x12d142668 <line:28:2, col:9>
    |     |     `-IntegerLiteral 0x12d142648 <col:9> 'int' 1
    |     `-NullStmt 0x12d142840 <line:30:10>
    `-IfStmt 0x12d143150 <line:36:3, line:64:3>
      |-RecoveryExpr 0x12d142988 <line:36:7, col:35> '_Bool' contains-errors
      `-CompoundStmt 0x12d143130 <line:37:3, line:64:3>
        |-IfStmt 0x12d142a70 <line:38:5, line:44:5>
        | |-UnaryOperator 0x12d1429e0 <line:38:9, col:10> 'int' prefix '!' cannot overflow
        | | `-ImplicitCastExpr 0x12d1429c8 <col:10> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x12d1429a8 <col:10> 'int' lvalue Var 0x12d128c70 'inited' 'int'
        | `-CompoundStmt 0x12d142a58 <line:39:5, line:44:5>
        |   `-BinaryOperator 0x12d142a38 <line:40:7, col:14> 'int' '='
        |     |-DeclRefExpr 0x12d1429f8 <col:7> 'int' lvalue Var 0x12d128c70 'inited' 'int'
        |     `-IntegerLiteral 0x12d142a18 <col:14> 'int' 1
        `-IfStmt 0x12d1430a0 <line:45:5, line:61:7> has_else
          |-RecoveryExpr 0x12d142ab0 <line:45:9, col:22> '_Bool' contains-errors
          |-CompoundStmt 0x12d143058 <line:46:5, line:59:5>
          | |-IfStmt 0x12d142c80 <line:47:7, line:48:21>
          | | |-RecoveryExpr 0x12d142ad0 <line:47:11, col:12> '_Bool' contains-errors
          | | `-CallExpr 0x12d142c58 <line:48:9, col:21> 'int'
          | |   |-ImplicitCastExpr 0x12d142c40 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | |   | `-DeclRefExpr 0x12d142bd0 <col:9> 'int ()' Function 0x12d142b18 'putchar' 'int ()'
          | |   `-CharacterLiteral 0x12d142bf0 <col:17> 'int' 7
          | `-IfStmt 0x12d143028 <line:50:7, line:58:9> has_else
          |   |-ImplicitCastExpr 0x12d142dc0 <line:50:11> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x12d142da0 <col:11> 'int' lvalue ParmVar 0x12d1289f0 'error' 'int'
          |   |-CompoundStmt 0x12d142fd0 <line:51:7, line:56:7>
          |   `-NullStmt 0x12d143020 <line:58:9>
          `-NullStmt 0x12d143098 <line:61:7>
