`-FunctionDecl 0x133928288  line:1:5 invalid ASN1_GENERALIZEDTIME_print 'int (int *, int *)'
  |-ParmVarDecl 0x133928128 <col:32, col:37> col:37 invalid bp 'int *'
  |-ParmVarDecl 0x1339281a8 <col:41, col:63> col:63 invalid tm 'int *'
  `-CompoundStmt 0x134009ac8 <line:2:2, line:33:2>
    |-DeclStmt 0x1339283c0 <line:3:2, col:9>
    | `-VarDecl 0x133928358 <col:2, col:8> col:8 used v 'char *'
    |-DeclStmt 0x133928478 <line:4:2, col:11>
    | `-VarDecl 0x1339283f0 <col:2, col:10> col:6 used gmt 'int' cinit
    |   `-IntegerLiteral 0x133928458 <col:10> 'int' 0
    |-DeclStmt 0x133928510 <line:5:2, col:7>
    | `-VarDecl 0x1339284a8 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x133941960 <line:6:2, col:29>
    | |-VarDecl 0x133928540 <col:2, col:8> col:6 used y 'int' cinit
    | | `-IntegerLiteral 0x1339285a8 <col:8> 'int' 0
    | |-VarDecl 0x1339285e0 <col:2, col:12> col:10 used M 'int' cinit
    | | `-IntegerLiteral 0x133928648 <col:12> 'int' 0
    | |-VarDecl 0x133928680 <col:2, col:16> col:14 used d 'int' cinit
    | | `-IntegerLiteral 0x1339286e8 <col:16> 'int' 0
    | |-VarDecl 0x133928720 <col:2, col:20> col:18 used h 'int' cinit
    | | `-IntegerLiteral 0x133928788 <col:20> 'int' 0
    | |-VarDecl 0x133941800 <col:2, col:24> col:22 used m 'int' cinit
    | | `-IntegerLiteral 0x133941868 <col:24> 'int' 0
    | `-VarDecl 0x1339418a0 <col:2, col:28> col:26 used s 'int' cinit
    |   `-IntegerLiteral 0x133941908 <col:28> 'int' 0
    |-BinaryOperator 0x133941a00 <line:8:2, col:8> 'int' contains-errors '='
    | |-DeclRefExpr 0x133941978 <col:2> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | `-CXXDependentScopeMemberExpr 0x1339419b8 <col:4, col:8> '<dependent type>' contains-errors lvalue ->length
    |   `-RecoveryExpr 0x133941998 <col:4> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x133941ae8 <line:9:2, col:16> 'char *' contains-errors '='
    | |-DeclRefExpr 0x133941a20 <col:2> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | `-CStyleCastExpr 0x133941ac0 <col:4, col:16> 'char *' contains-errors <Dependent>
    |   `-CXXDependentScopeMemberExpr 0x133941a60 <col:12, col:16> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x133941a40 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133941be8 <line:11:2, col:19>
    | |-BinaryOperator 0x133941b60 <col:6, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x133941b48 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x133941b08 <col:6> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | | `-IntegerLiteral 0x133941b28 <col:10> 'int' 12
    | `-GotoStmt 0x133941bd0 <col:14, col:19> 'err' 0x133941b80
    |-IfStmt 0x133941da0 <line:12:2, col:25>
    | |-BinaryOperator 0x133941d20 <col:6, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x133941d08 <col:6, col:11> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x133941cf0 <col:6, col:11> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x133941cb8 <col:6, col:11> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x133941ca0 <col:6> 'char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x133941c08 <col:6> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | | |     `-BinaryOperator 0x133941c80 <col:8, col:10> 'int' '-'
    | | |       |-ImplicitCastExpr 0x133941c68 <col:8> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x133941c28 <col:8> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | | |       `-IntegerLiteral 0x133941c48 <col:10> 'int' 1
    | | `-CharacterLiteral 0x133941cd8 <col:16> 'int' 90
    | `-BinaryOperator 0x133941d80 <col:21, col:25> 'int' '='
    |   |-DeclRefExpr 0x133941d40 <col:21> 'int' lvalue Var 0x1339283f0 'gmt' 'int'
    |   `-IntegerLiteral 0x133941d60 <col:25> 'int' 1
    |-ForStmt 0x133942158 <line:13:2, line:14:42>
    | |-BinaryOperator 0x133941e00 <line:13:7, col:9> 'int' '='
    | | |-DeclRefExpr 0x133941dc0 <col:7> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | | `-IntegerLiteral 0x133941de0 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x133941e78 <col:12, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x133941e60 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x133941e20 <col:12> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | | `-IntegerLiteral 0x133941e40 <col:14> 'int' 12
    | |-UnaryOperator 0x133941eb8 <col:18, col:19> 'int' postfix '++'
    | | `-DeclRefExpr 0x133941e98 <col:18> 'int' lvalue Var 0x1339284a8 'i' 'int'
    | `-IfStmt 0x133942138 <line:14:3, col:42>
    |   |-BinaryOperator 0x133942100 <col:7, col:34> 'int' '||'
    |   | |-ParenExpr 0x133941fc8 <col:7, col:18> 'int'
    |   | | `-BinaryOperator 0x133941fa8 <col:8, col:15> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x133941f90 <col:8, col:11> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x133941f78 <col:8, col:11> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x133941f40 <col:8, col:11> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x133941f10 <col:8> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x133941ed0 <col:8> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |     `-ImplicitCastExpr 0x133941f28 <col:10> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x133941ef0 <col:10> 'int' lvalue Var 0x1339284a8 'i' 'int'
    |   | |   `-CharacterLiteral 0x133941f60 <col:15> 'int' 57
    |   | `-ParenExpr 0x1339420e0 <col:23, col:34> 'int'
    |   |   `-BinaryOperator 0x1339420c0 <col:24, col:31> 'int' '<'
    |   |     |-ImplicitCastExpr 0x1339420a8 <col:24, col:27> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x133942090 <col:24, col:27> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x133942058 <col:24, col:27> 'char' lvalue
    |   |     |     |-ImplicitCastExpr 0x133942028 <col:24> 'char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x133941fe8 <col:24> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   |     |     `-ImplicitCastExpr 0x133942040 <col:26> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x133942008 <col:26> 'int' lvalue Var 0x1339284a8 'i' 'int'
    |   |     `-CharacterLiteral 0x133942078 <col:31> 'int' 48
    |   `-GotoStmt 0x133942120 <col:37, col:42> 'err' 0x133941b80
    |-BinaryOperator 0x1339426d0 <line:15:2, col:61> 'int' '='
    | |-DeclRefExpr 0x133942190 <col:2> 'int' lvalue Var 0x133928540 'y' 'int'
    | `-BinaryOperator 0x1339426b0 <col:5, col:61> 'int' '+'
    |   |-BinaryOperator 0x133942590 <col:5, col:49> 'int' '+'
    |   | |-BinaryOperator 0x133942430 <col:5, col:32> 'int' '+'
    |   | | |-BinaryOperator 0x1339422d0 <col:5, col:16> 'int' '*'
    |   | | | |-ParenExpr 0x133942290 <col:5, col:14> 'int'
    |   | | | | `-BinaryOperator 0x133942270 <col:6, col:11> 'int' '-'
    |   | | | |   |-ImplicitCastExpr 0x133942258 <col:6, col:9> 'int' <IntegralCast>
    |   | | | |   | `-ImplicitCastExpr 0x133942240 <col:6, col:9> 'char' <LValueToRValue>
    |   | | | |   |   `-ArraySubscriptExpr 0x133942208 <col:6, col:9> 'char' lvalue
    |   | | | |   |     |-ImplicitCastExpr 0x1339421f0 <col:6> 'char *' <LValueToRValue>
    |   | | | |   |     | `-DeclRefExpr 0x1339421b0 <col:6> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | | | |   |     `-IntegerLiteral 0x1339421d0 <col:8> 'int' 0
    |   | | | |   `-CharacterLiteral 0x133942228 <col:11> 'int' 48
    |   | | | `-IntegerLiteral 0x1339422b0 <col:16> 'int' 1000
    |   | | `-BinaryOperator 0x133942410 <col:21, col:32> 'int' '*'
    |   | |   |-ParenExpr 0x1339423d0 <col:21, col:30> 'int'
    |   | |   | `-BinaryOperator 0x1339423b0 <col:22, col:27> 'int' '-'
    |   | |   |   |-ImplicitCastExpr 0x133942398 <col:22, col:25> 'int' <IntegralCast>
    |   | |   |   | `-ImplicitCastExpr 0x133942380 <col:22, col:25> 'char' <LValueToRValue>
    |   | |   |   |   `-ArraySubscriptExpr 0x133942348 <col:22, col:25> 'char' lvalue
    |   | |   |   |     |-ImplicitCastExpr 0x133942330 <col:22> 'char *' <LValueToRValue>
    |   | |   |   |     | `-DeclRefExpr 0x1339422f0 <col:22> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |   |     `-IntegerLiteral 0x133942310 <col:24> 'int' 1
    |   | |   |   `-CharacterLiteral 0x133942368 <col:27> 'int' 48
    |   | |   `-IntegerLiteral 0x1339423f0 <col:32> 'int' 100
    |   | `-BinaryOperator 0x133942570 <col:38, col:49> 'int' '*'
    |   |   |-ParenExpr 0x133942530 <col:38, col:47> 'int'
    |   |   | `-BinaryOperator 0x133942510 <col:39, col:44> 'int' '-'
    |   |   |   |-ImplicitCastExpr 0x1339424f8 <col:39, col:42> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x1339424e0 <col:39, col:42> 'char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x1339424a8 <col:39, col:42> 'char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x133942490 <col:39> 'char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x133942450 <col:39> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   |   |   |     `-IntegerLiteral 0x133942470 <col:41> 'int' 2
    |   |   |   `-CharacterLiteral 0x1339424c8 <col:44> 'int' 48
    |   |   `-IntegerLiteral 0x133942550 <col:49> 'int' 10
    |   `-ParenExpr 0x133942690 <col:52, col:61> 'int'
    |     `-BinaryOperator 0x133942670 <col:53, col:58> 'int' '-'
    |       |-ImplicitCastExpr 0x133942658 <col:53, col:56> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x133942640 <col:53, col:56> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x133942608 <col:53, col:56> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1339425f0 <col:53> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1339425b0 <col:53> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |       |     `-IntegerLiteral 0x1339425d0 <col:55> 'int' 3
    |       `-CharacterLiteral 0x133942628 <col:58> 'int' 48
    |-BinaryOperator 0x134008380 <line:16:2, col:28> 'int' '='
    | |-DeclRefExpr 0x1339426f0 <col:2> 'int' lvalue Var 0x1339285e0 'M' 'int'
    | `-BinaryOperator 0x134008360 <col:5, col:28> 'int' '+'
    |   |-BinaryOperator 0x134008240 <col:5, col:16> 'int' '*'
    |   | |-ParenExpr 0x134008200 <col:5, col:14> 'int'
    |   | | `-BinaryOperator 0x1339427d0 <col:6, col:11> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1339427b8 <col:6, col:9> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1339427a0 <col:6, col:9> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x133942768 <col:6, col:9> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x133942750 <col:6> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x133942710 <col:6> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x133942730 <col:8> 'int' 4
    |   | |   `-CharacterLiteral 0x133942788 <col:11> 'int' 48
    |   | `-IntegerLiteral 0x134008220 <col:16> 'int' 10
    |   `-ParenExpr 0x134008340 <col:19, col:28> 'int'
    |     `-BinaryOperator 0x134008320 <col:20, col:25> 'int' '-'
    |       |-ImplicitCastExpr 0x134008308 <col:20, col:23> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1340082f0 <col:20, col:23> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1340082b8 <col:20, col:23> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1340082a0 <col:20> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x134008260 <col:20> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |       |     `-IntegerLiteral 0x134008280 <col:22> 'int' 5
    |       `-CharacterLiteral 0x1340082d8 <col:25> 'int' 48
    |-IfStmt 0x134008508 <line:17:2, col:32>
    | |-BinaryOperator 0x1340084d0 <col:6, col:24> 'int' '||'
    | | |-ParenExpr 0x134008418 <col:6, col:13> 'int'
    | | | `-BinaryOperator 0x1340083f8 <col:7, col:11> 'int' '>'
    | | |   |-ImplicitCastExpr 0x1340083e0 <col:7> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x1340083a0 <col:7> 'int' lvalue Var 0x1339285e0 'M' 'int'
    | | |   `-IntegerLiteral 0x1340083c0 <col:11> 'int' 12
    | | `-ParenExpr 0x1340084b0 <col:18, col:24> 'int'
    | |   `-BinaryOperator 0x134008490 <col:19, col:23> 'int' '<'
    | |     |-ImplicitCastExpr 0x134008478 <col:19> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x134008438 <col:19> 'int' lvalue Var 0x1339285e0 'M' 'int'
    | |     `-IntegerLiteral 0x134008458 <col:23> 'int' 1
    | `-GotoStmt 0x1340084f0 <col:27, col:32> 'err' 0x133941b80
    |-BinaryOperator 0x1340087a8 <line:18:2, col:28> 'int' '='
    | |-DeclRefExpr 0x134008528 <col:2> 'int' lvalue Var 0x133928680 'd' 'int'
    | `-BinaryOperator 0x134008788 <col:5, col:28> 'int' '+'
    |   |-BinaryOperator 0x134008668 <col:5, col:16> 'int' '*'
    |   | |-ParenExpr 0x134008628 <col:5, col:14> 'int'
    |   | | `-BinaryOperator 0x134008608 <col:6, col:11> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1340085f0 <col:6, col:9> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1340085d8 <col:6, col:9> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1340085a0 <col:6, col:9> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x134008588 <col:6> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x134008548 <col:6> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x134008568 <col:8> 'int' 6
    |   | |   `-CharacterLiteral 0x1340085c0 <col:11> 'int' 48
    |   | `-IntegerLiteral 0x134008648 <col:16> 'int' 10
    |   `-ParenExpr 0x134008768 <col:19, col:28> 'int'
    |     `-BinaryOperator 0x134008748 <col:20, col:25> 'int' '-'
    |       |-ImplicitCastExpr 0x134008730 <col:20, col:23> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x134008718 <col:20, col:23> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1340086e0 <col:20, col:23> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1340086c8 <col:20> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x134008688 <col:20> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |       |     `-IntegerLiteral 0x1340086a8 <col:22> 'int' 7
    |       `-CharacterLiteral 0x134008700 <col:25> 'int' 48
    |-BinaryOperator 0x134008a48 <line:19:2, col:28> 'int' '='
    | |-DeclRefExpr 0x1340087c8 <col:2> 'int' lvalue Var 0x133928720 'h' 'int'
    | `-BinaryOperator 0x134008a28 <col:5, col:28> 'int' '+'
    |   |-BinaryOperator 0x134008908 <col:5, col:16> 'int' '*'
    |   | |-ParenExpr 0x1340088c8 <col:5, col:14> 'int'
    |   | | `-BinaryOperator 0x1340088a8 <col:6, col:11> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x134008890 <col:6, col:9> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x134008878 <col:6, col:9> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x134008840 <col:6, col:9> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x134008828 <col:6> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1340087e8 <col:6> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x134008808 <col:8> 'int' 8
    |   | |   `-CharacterLiteral 0x134008860 <col:11> 'int' 48
    |   | `-IntegerLiteral 0x1340088e8 <col:16> 'int' 10
    |   `-ParenExpr 0x134008a08 <col:19, col:28> 'int'
    |     `-BinaryOperator 0x1340089e8 <col:20, col:25> 'int' '-'
    |       |-ImplicitCastExpr 0x1340089d0 <col:20, col:23> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1340089b8 <col:20, col:23> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x134008980 <col:20, col:23> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x134008968 <col:20> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x134008928 <col:20> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |       |     `-IntegerLiteral 0x134008948 <col:22> 'int' 9
    |       `-CharacterLiteral 0x1340089a0 <col:25> 'int' 48
    |-BinaryOperator 0x134008ce8 <line:20:2, col:31> 'int' '='
    | |-DeclRefExpr 0x134008a68 <col:2> 'int' lvalue Var 0x133941800 'm' 'int'
    | `-BinaryOperator 0x134008cc8 <col:6, col:31> 'int' '+'
    |   |-BinaryOperator 0x134008ba8 <col:6, col:18> 'int' '*'
    |   | |-ParenExpr 0x134008b68 <col:6, col:16> 'int'
    |   | | `-BinaryOperator 0x134008b48 <col:7, col:13> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x134008b30 <col:7, col:11> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x134008b18 <col:7, col:11> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x134008ae0 <col:7, col:11> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x134008ac8 <col:7> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x134008a88 <col:7> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x134008aa8 <col:9> 'int' 10
    |   | |   `-CharacterLiteral 0x134008b00 <col:13> 'int' 48
    |   | `-IntegerLiteral 0x134008b88 <col:18> 'int' 10
    |   `-ParenExpr 0x134008ca8 <col:21, col:31> 'int'
    |     `-BinaryOperator 0x134008c88 <col:22, col:28> 'int' '-'
    |       |-ImplicitCastExpr 0x134008c70 <col:22, col:26> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x134008c58 <col:22, col:26> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x134008c20 <col:22, col:26> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x134008c08 <col:22> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x134008bc8 <col:22> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |       |     `-IntegerLiteral 0x134008be8 <col:24> 'int' 11
    |       `-CharacterLiteral 0x134008c40 <col:28> 'int' 48
    |-IfStmt 0x134009408 <line:21:2, line:23:32>
    | |-BinaryOperator 0x134009148 <line:21:7, line:22:34> 'int' '&&'
    | | |-BinaryOperator 0x134009028 <line:21:7, line:22:16> 'int' '&&'
    | | | |-BinaryOperator 0x134008f08 <line:21:7, col:38> 'int' '&&'
    | | | | |-ParenExpr 0x134008de8 <col:7, col:20> 'int'
    | | | | | `-BinaryOperator 0x134008dc8 <col:8, col:17> 'int' '>='
    | | | | |   |-ImplicitCastExpr 0x134008db0 <col:8, col:12> 'int' <IntegralCast>
    | | | | |   | `-ImplicitCastExpr 0x134008d98 <col:8, col:12> 'char' <LValueToRValue>
    | | | | |   |   `-ArraySubscriptExpr 0x134008d60 <col:8, col:12> 'char' lvalue
    | | | | |   |     |-ImplicitCastExpr 0x134008d48 <col:8> 'char *' <LValueToRValue>
    | | | | |   |     | `-DeclRefExpr 0x134008d08 <col:8> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | | | | |   |     `-IntegerLiteral 0x134008d28 <col:10> 'int' 12
    | | | | |   `-CharacterLiteral 0x134008d80 <col:17> 'int' 48
    | | | | `-ParenExpr 0x134008ee8 <col:25, col:38> 'int'
    | | | |   `-BinaryOperator 0x134008ec8 <col:26, col:35> 'int' '<='
    | | | |     |-ImplicitCastExpr 0x134008eb0 <col:26, col:30> 'int' <IntegralCast>
    | | | |     | `-ImplicitCastExpr 0x134008e98 <col:26, col:30> 'char' <LValueToRValue>
    | | | |     |   `-ArraySubscriptExpr 0x134008e60 <col:26, col:30> 'char' lvalue
    | | | |     |     |-ImplicitCastExpr 0x134008e48 <col:26> 'char *' <LValueToRValue>
    | | | |     |     | `-DeclRefExpr 0x134008e08 <col:26> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | | | |     |     `-IntegerLiteral 0x134008e28 <col:28> 'int' 12
    | | | |     `-CharacterLiteral 0x134008e80 <col:35> 'int' 57
    | | | `-ParenExpr 0x134009008 <line:22:3, col:16> 'int'
    | | |   `-BinaryOperator 0x134008fe8 <col:4, col:13> 'int' '>='
    | | |     |-ImplicitCastExpr 0x134008fd0 <col:4, col:8> 'int' <IntegralCast>
    | | |     | `-ImplicitCastExpr 0x134008fb8 <col:4, col:8> 'char' <LValueToRValue>
    | | |     |   `-ArraySubscriptExpr 0x134008f80 <col:4, col:8> 'char' lvalue
    | | |     |     |-ImplicitCastExpr 0x134008f68 <col:4> 'char *' <LValueToRValue>
    | | |     |     | `-DeclRefExpr 0x134008f28 <col:4> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | | |     |     `-IntegerLiteral 0x134008f48 <col:6> 'int' 13
    | | |     `-CharacterLiteral 0x134008fa0 <col:13> 'int' 48
    | | `-ParenExpr 0x134009128 <col:21, col:34> 'int'
    | |   `-BinaryOperator 0x134009108 <col:22, col:31> 'int' '<='
    | |     |-ImplicitCastExpr 0x1340090f0 <col:22, col:26> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x1340090d8 <col:22, col:26> 'char' <LValueToRValue>
    | |     |   `-ArraySubscriptExpr 0x1340090a0 <col:22, col:26> 'char' lvalue
    | |     |     |-ImplicitCastExpr 0x134009088 <col:22> 'char *' <LValueToRValue>
    | |     |     | `-DeclRefExpr 0x134009048 <col:22> 'char *' lvalue Var 0x133928358 'v' 'char *'
    | |     |     `-IntegerLiteral 0x134009068 <col:24> 'int' 13
    | |     `-CharacterLiteral 0x1340090c0 <col:31> 'int' 57
    | `-BinaryOperator 0x1340093e8 <line:23:3, col:32> 'int' '='
    |   |-DeclRefExpr 0x134009168 <col:3> 'int' lvalue Var 0x1339418a0 's' 'int'
    |   `-BinaryOperator 0x1340093c8 <col:7, col:32> 'int' '+'
    |     |-BinaryOperator 0x1340092a8 <col:7, col:19> 'int' '*'
    |     | |-ParenExpr 0x134009268 <col:7, col:17> 'int'
    |     | | `-BinaryOperator 0x134009248 <col:8, col:14> 'int' '-'
    |     | |   |-ImplicitCastExpr 0x134009230 <col:8, col:12> 'int' <IntegralCast>
    |     | |   | `-ImplicitCastExpr 0x134009218 <col:8, col:12> 'char' <LValueToRValue>
    |     | |   |   `-ArraySubscriptExpr 0x1340091e0 <col:8, col:12> 'char' lvalue
    |     | |   |     |-ImplicitCastExpr 0x1340091c8 <col:8> 'char *' <LValueToRValue>
    |     | |   |     | `-DeclRefExpr 0x134009188 <col:8> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |     | |   |     `-IntegerLiteral 0x1340091a8 <col:10> 'int' 12
    |     | |   `-CharacterLiteral 0x134009200 <col:14> 'int' 48
    |     | `-IntegerLiteral 0x134009288 <col:19> 'int' 10
    |     `-ParenExpr 0x1340093a8 <col:22, col:32> 'int'
    |       `-BinaryOperator 0x134009388 <col:23, col:29> 'int' '-'
    |         |-ImplicitCastExpr 0x134009370 <col:23, col:27> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x134009358 <col:23, col:27> 'char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x134009320 <col:23, col:27> 'char' lvalue
    |         |     |-ImplicitCastExpr 0x134009308 <col:23> 'char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x1340092c8 <col:23> 'char *' lvalue Var 0x133928358 'v' 'char *'
    |         |     `-IntegerLiteral 0x1340092e8 <col:25> 'int' 13
    |         `-CharacterLiteral 0x134009340 <col:29> 'int' 48
    |-IfStmt 0x134009890 <line:25:2, line:29:11> has_else
    | |-RecoveryExpr 0x1340097d0 <line:25:6, line:26:38> '_Bool' contains-errors
    | |-ReturnStmt 0x134009830 <line:27:3, col:11>
    | | `-ParenExpr 0x134009810 <col:9, col:11> 'int'
    | |   `-IntegerLiteral 0x1340097f0 <col:10> 'int' 0
    | `-ReturnStmt 0x134009880 <line:29:3, col:11>
    |   `-ParenExpr 0x134009860 <col:9, col:11> 'int'
    |     `-IntegerLiteral 0x134009840 <col:10> 'int' 1
    |-LabelStmt 0x134009a58 <line:30:1, line:31:23> 'err'
    | `-CallExpr 0x134009a20 <col:2, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1340099a0 <col:2> 'int ()' Function 0x1340098e8 'BIO_write' 'int ()'
    |   |-RecoveryExpr 0x1340099c0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x1340099e0 <col:15> 'char[4]' lvalue "STR"
    |   `-IntegerLiteral 0x134009a00 <col:21> 'int' 14
    `-ReturnStmt 0x134009ab8 <line:32:2, col:10>
      `-ParenExpr 0x134009a98 <col:8, col:10> 'int'
        `-IntegerLiteral 0x134009a78 <col:9> 'int' 0
