`-FunctionDecl 0x14800ddd8  line:1:1 sh_openpipe 'int (int *)'
  |-ParmVarDecl 0x14800dd08 <line:2:6, col:11> col:11 used pv 'int *'
  `-CompoundStmt 0x148028728 <line:3:1, line:13:1>
    |-DeclStmt 0x14800df50 <line:4:3, col:8>
    | `-VarDecl 0x14800dee8 <col:3, col:7> col:7 used r 'int'
    |-IfStmt 0x14800e240 <line:6:3, line:7:12>
    | |-BinaryOperator 0x14800e1d8 <line:6:7, col:25> 'int' '<'
    | | |-ParenExpr 0x14800e198 <col:7, col:21> 'int'
    | | | `-BinaryOperator 0x14800e178 <col:8, col:20> 'int' '='
    | | |   |-DeclRefExpr 0x14800df68 <col:8> 'int' lvalue Var 0x14800dee8 'r' 'int'
    | | |   `-CallExpr 0x14800e138 <col:12, col:20> 'int'
    | | |     |-ImplicitCastExpr 0x14800e120 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x14800e0b0 <col:12> 'int ()' Function 0x14800dff8 'pipe' 'int ()'
    | | |     `-ImplicitCastExpr 0x14800e160 <col:18> 'int *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14800e0d0 <col:18> 'int *' lvalue ParmVar 0x14800dd08 'pv' 'int *'
    | | `-IntegerLiteral 0x14800e1b8 <col:25> 'int' 0
    | `-ReturnStmt 0x14800e230 <line:7:5, col:12>
    |   `-ImplicitCastExpr 0x14800e218 <col:12> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14800e1f8 <col:12> 'int' lvalue Var 0x14800dee8 'r' 'int'
    |-BinaryOperator 0x148028500 <line:9:3, col:40> 'int' '='
    | |-ArraySubscriptExpr 0x14800e2b8 <col:3, col:7> 'int' lvalue
    | | |-ImplicitCastExpr 0x14800e2a0 <col:3> 'int *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14800e260 <col:3> 'int *' lvalue ParmVar 0x14800dd08 'pv' 'int *'
    | | `-IntegerLiteral 0x14800e280 <col:6> 'int' 0
    | `-CallExpr 0x1480284b0 <col:11, col:40> 'int'
    |   |-ImplicitCastExpr 0x148028498 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14800e3b8 <col:11> 'int ()' Function 0x14800e300 'move_to_high_fd' 'int ()'
    |   |-ImplicitCastExpr 0x1480284e8 <col:28, col:32> 'int' <LValueToRValue>
    |   | `-ArraySubscriptExpr 0x148028438 <col:28, col:32> 'int' lvalue
    |   |   |-ImplicitCastExpr 0x148028420 <col:28> 'int *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x14800e3d8 <col:28> 'int *' lvalue ParmVar 0x14800dd08 'pv' 'int *'
    |   |   `-IntegerLiteral 0x148028400 <col:31> 'int' 0
    |   |-IntegerLiteral 0x148028458 <col:35> 'int' 1
    |   `-IntegerLiteral 0x148028478 <col:38> 'int' 64
    |-BinaryOperator 0x1480286d8 <line:10:3, col:40> 'int' '='
    | |-ArraySubscriptExpr 0x148028578 <col:3, col:7> 'int' lvalue
    | | |-ImplicitCastExpr 0x148028560 <col:3> 'int *' <LValueToRValue>
    | | | `-DeclRefExpr 0x148028520 <col:3> 'int *' lvalue ParmVar 0x14800dd08 'pv' 'int *'
    | | `-IntegerLiteral 0x148028540 <col:6> 'int' 1
    | `-CallExpr 0x148028688 <col:11, col:40> 'int'
    |   |-ImplicitCastExpr 0x148028670 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x148028598 <col:11> 'int ()' Function 0x14800e300 'move_to_high_fd' 'int ()'
    |   |-ImplicitCastExpr 0x1480286c0 <col:28, col:32> 'int' <LValueToRValue>
    |   | `-ArraySubscriptExpr 0x148028610 <col:28, col:32> 'int' lvalue
    |   |   |-ImplicitCastExpr 0x1480285f8 <col:28> 'int *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1480285b8 <col:28> 'int *' lvalue ParmVar 0x14800dd08 'pv' 'int *'
    |   |   `-IntegerLiteral 0x1480285d8 <col:31> 'int' 1
    |   |-IntegerLiteral 0x148028630 <col:35> 'int' 1
    |   `-IntegerLiteral 0x148028650 <col:38> 'int' 64
    `-ReturnStmt 0x148028718 <line:12:3, col:10>
      `-IntegerLiteral 0x1480286f8 <col:10> 'int' 0
