`-FunctionDecl 0x13280df18  line:1:1 invalid onigenc_single_byte_code_to_mbc 'int (int, int *, int)'
  |-ParmVarDecl 0x13280dcf0 <col:33, col:47> col:47 invalid code 'int'
  |-ParmVarDecl 0x13280dda8 <col:53, col:60> col:60 invalid buf 'int *'
  |-ParmVarDecl 0x13280de28 <col:65, col:78> col:78 invalid enc 'int'
  `-CompoundStmt 0x13280e178 <line:2:1, line:9:1>
    |-BinaryOperator 0x13280e128 <line:7:3, col:30> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x13280e010 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13280dff8 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13280dfd8 <col:4> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13280e100 <col:10, col:30> '<dependent type>' contains-errors
    |   |-ParenExpr 0x13280e080 <col:10, col:17> '<overloaded function type>' lvalue
    |   | `-UnresolvedLookupExpr 0x13280e040 <col:11> '<overloaded function type>' lvalue (no ADL) = 'UChar' empty
    |   `-BinaryOperator 0x13280e0e0 <col:19, col:26> '<dependent type>' contains-errors '&'
    |     |-RecoveryExpr 0x13280e0a0 <col:19> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x13280e0c0 <col:26> 'int' 255
    `-ReturnStmt 0x13280e168 <line:8:3, col:10>
      `-IntegerLiteral 0x13280e148 <col:10> 'int' 1
