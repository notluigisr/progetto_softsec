`-FunctionDecl 0x15c80ddf8  line:1:12 invalid _hostsock_device_release 'int (int *)' static
  |-ParmVarDecl 0x15c80dd28 <col:37, col:50> col:50 referenced invalid device_ 'int *'
  `-CompoundStmt 0x15c8275f0 <line:2:1, line:19:1>
    |-DeclStmt 0x15c80df60 <line:3:5, col:17>
    | `-VarDecl 0x15c80dec0 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x15c80df48 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x15c80df28 <col:16> 'int' 1
    |-BinaryOperator 0x15c80e238 <line:4:5, col:44> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x15c80e218 <col:5, col:15> '<dependent type>' contains-errors '*'
    | | |-RecoveryExpr 0x15c80df98 <col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x15c80df78 <col:5> 'int *' lvalue ParmVar 0x15c80dd28 'device_' 'int *'
    | | `-RecoveryExpr 0x15c80e1f8 <col:15> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x15c80e190 <col:24, col:44> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c80e150 <col:24> 'int ()' Function 0x15c80e098 '_cast_device' 'int ()'
    |   `-RecoveryExpr 0x15c80e170 <col:37> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15c8274b8 <line:8:5, line:9:33>
    | |-UnaryOperator 0x15c80e318 <line:8:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15c80e300 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15c80e2e0 <col:10> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x15c827490 <line:9:9, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15c827410 <col:9> 'int ()' Function 0x15c80e358 'OE_RAISE_ERRNO' 'int ()'
    |   `-RecoveryExpr 0x15c827470 <col:24> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15c827518 <line:14:5, col:11> 'int' '='
    | |-DeclRefExpr 0x15c8274d8 <col:5> 'int' lvalue Var 0x15c80dec0 'ret' 'int'
    | `-IntegerLiteral 0x15c8274f8 <col:11> 'int' 0
    `-LabelStmt 0x15c8275d0 <line:16:1, line:18:12> 'done'
      `-ReturnStmt 0x15c827570 <col:5, col:12>
        `-ImplicitCastExpr 0x15c827558 <col:12> 'int' <LValueToRValue>
          `-DeclRefExpr 0x15c827538 <col:12> 'int' lvalue Var 0x15c80dec0 'ret' 'int'
