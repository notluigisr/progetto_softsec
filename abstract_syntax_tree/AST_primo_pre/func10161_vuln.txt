`-FunctionDecl 0x11e128318  line:1:1 invalid header_gets 'int (int *, char *, int)'
  |-ParmVarDecl 0x11e128128 <col:14, col:26> col:26 referenced invalid psf 'int *'
  |-ParmVarDecl 0x11e1281a8 <col:31, col:37> col:37 used ptr 'char *'
  |-ParmVarDecl 0x11e128228 <col:42, col:46> col:46 used bufsize 'int'
  `-CompoundStmt 0x11e142350 <line:2:1, line:22:1>
    |-DeclStmt 0x11e128458 <line:2:3, col:10>
    | `-VarDecl 0x11e1283f0 <col:3, col:8> col:8 used k 'int'
    |-ForStmt 0x11e1421e0 <line:4:2, line:17:3>
    | |-BinaryOperator 0x11e1284b0 <line:4:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x11e128470 <col:7> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    | | `-IntegerLiteral 0x11e128490 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11e128580 <col:15, col:29> 'int' '<'
    | | |-ImplicitCastExpr 0x11e128568 <col:15> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e1284d0 <col:15> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    | | `-BinaryOperator 0x11e128548 <col:19, col:29> 'int' '-'
    | |   |-ImplicitCastExpr 0x11e128530 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x11e1284f0 <col:19> 'int' lvalue ParmVar 0x11e128228 'bufsize' 'int'
    | |   `-IntegerLiteral 0x11e128510 <col:29> 'int' 1
    | |-UnaryOperator 0x11e1285c0 <col:33, col:34> 'int' postfix '++'
    | | `-DeclRefExpr 0x11e1285a0 <col:33> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    | `-CompoundStmt 0x11e1421b8 <line:5:2, line:17:3>
    |   |-IfStmt 0x11e142060 <line:5:4, line:13:4> has_else
    |   | |-BinaryOperator 0x11e1286a8 <line:5:8, col:30> 'int' contains-errors '<'
    |   | | |-CXXDependentScopeMemberExpr 0x11e1285f8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->headindex
    |   | | | `-RecoveryExpr 0x11e1285d8 <col:8> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x11e128660 <col:25, col:30> '<dependent type>' contains-errors lvalue ->headend
    |   | |   `-RecoveryExpr 0x11e128640 <col:25> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x11e141960 <line:6:3, line:8:4>
    |   | | |-BinaryOperator 0x11e141898 <line:6:5, col:42> 'char' contains-errors '='
    |   | | | |-ArraySubscriptExpr 0x11e128738 <col:5, col:11> 'char' lvalue
    |   | | | | |-ImplicitCastExpr 0x11e128708 <col:5> 'char *' <LValueToRValue>
    |   | | | | | `-DeclRefExpr 0x11e1286c8 <col:5> 'char *' lvalue ParmVar 0x11e1281a8 'ptr' 'char *'
    |   | | | | `-ImplicitCastExpr 0x11e128720 <col:10> 'int' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x11e1286e8 <col:10> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    |   | | | `-ArraySubscriptExpr 0x11e141878 <col:15, col:42> '<dependent type>' contains-errors lvalue
    |   | | |   |-ImplicitCastExpr 0x11e141848 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |   | `-CXXDependentScopeMemberExpr 0x11e128778 <col:15, col:20> '<dependent type>' contains-errors lvalue ->header
    |   | | |   |   `-RecoveryExpr 0x11e128758 <col:15> '<dependent type>' contains-errors lvalue
    |   | | |   `-ImplicitCastExpr 0x11e141860 <col:28, col:33> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |     `-CXXDependentScopeMemberExpr 0x11e141800 <col:28, col:33> '<dependent type>' contains-errors lvalue ->headindex
    |   | | |       `-RecoveryExpr 0x11e1287c0 <col:28> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x11e141948 <line:7:4, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-CXXDependentScopeMemberExpr 0x11e141900 <col:4, col:9> '<dependent type>' contains-errors lvalue ->headindex
    |   | |     `-RecoveryExpr 0x11e1418d8 <col:4> '<dependent type>' contains-errors lvalue
    |   | |       `-DeclRefExpr 0x11e1418b8 <col:4> 'int *' lvalue ParmVar 0x11e128128 'psf' 'int *'
    |   | `-CompoundStmt 0x11e142038 <line:10:3, line:13:4>
    |   |   |-CompoundAssignOperator 0x11e141d20 <line:10:5, col:69> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   | |-CXXDependentScopeMemberExpr 0x11e1419c8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->headend
    |   |   | | `-RecoveryExpr 0x11e1419a0 <col:5> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x11e141980 <col:5> 'int *' lvalue ParmVar 0x11e128128 'psf' 'int *'
    |   |   | `-CallExpr 0x11e141ce0 <col:21, col:69> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x11e141b70 <col:21> 'int ()' Function 0x11e141ab8 'psf_fread' 'int ()'
    |   |   |   |-BinaryOperator 0x11e141c60 <col:32, col:51> '<dependent type>' contains-errors '+'
    |   |   |   | |-CXXDependentScopeMemberExpr 0x11e141bb0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->header
    |   |   |   | | `-RecoveryExpr 0x11e141b90 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |   | `-CXXDependentScopeMemberExpr 0x11e141c18 <col:46, col:51> '<dependent type>' contains-errors lvalue ->headend
    |   |   |   |   `-RecoveryExpr 0x11e141bf8 <col:46> '<dependent type>' contains-errors lvalue
    |   |   |   |-IntegerLiteral 0x11e141c80 <col:60> 'int' 1
    |   |   |   |-IntegerLiteral 0x11e141ca0 <col:63> 'int' 1
    |   |   |   `-RecoveryExpr 0x11e141cc0 <col:66> '<dependent type>' contains-errors lvalue
    |   |   |-BinaryOperator 0x11e141f00 <line:11:4, col:41> 'char' contains-errors '='
    |   |   | |-ArraySubscriptExpr 0x11e141dc0 <col:4, col:10> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x11e141d90 <col:4> 'char *' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x11e141d50 <col:4> 'char *' lvalue ParmVar 0x11e1281a8 'ptr' 'char *'
    |   |   | | `-ImplicitCastExpr 0x11e141da8 <col:9> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x11e141d70 <col:9> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    |   |   | `-ArraySubscriptExpr 0x11e141ee0 <col:14, col:41> '<dependent type>' contains-errors lvalue
    |   |   |   |-ImplicitCastExpr 0x11e141eb0 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   | `-CXXDependentScopeMemberExpr 0x11e141e00 <col:14, col:19> '<dependent type>' contains-errors lvalue ->header
    |   |   |   |   `-RecoveryExpr 0x11e141de0 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |   `-ImplicitCastExpr 0x11e141ec8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |     `-CXXDependentScopeMemberExpr 0x11e141e68 <col:27, col:32> '<dependent type>' contains-errors lvalue ->headindex
    |   |   |       `-RecoveryExpr 0x11e141e48 <col:27> '<dependent type>' contains-errors lvalue
    |   |   `-BinaryOperator 0x11e142018 <line:12:4, col:26> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x11e141f68 <col:4, col:9> '<dependent type>' contains-errors lvalue ->headindex
    |   |     | `-RecoveryExpr 0x11e141f40 <col:4> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x11e141f20 <col:4> 'int *' lvalue ParmVar 0x11e128128 'psf' 'int *'
    |   |     `-CXXDependentScopeMemberExpr 0x11e141fd0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->headend
    |   |       `-RecoveryExpr 0x11e141fb0 <col:21> '<dependent type>' contains-errors lvalue
    |   |-NullStmt 0x11e142090 <line:13:6>
    |   `-IfStmt 0x11e142198 <line:15:3, line:16:4>
    |     |-BinaryOperator 0x11e142170 <line:15:7, col:18> 'int' '=='
    |     | |-ImplicitCastExpr 0x11e142158 <col:7, col:13> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x11e142140 <col:7, col:13> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x11e142108 <col:7, col:13> 'char' lvalue
    |     | |     |-ImplicitCastExpr 0x11e1420d8 <col:7> 'char *' <LValueToRValue>
    |     | |     | `-DeclRefExpr 0x11e142098 <col:7> 'char *' lvalue ParmVar 0x11e1281a8 'ptr' 'char *'
    |     | |     `-ImplicitCastExpr 0x11e1420f0 <col:12> 'int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x11e1420b8 <col:12> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    |     | `-CharacterLiteral 0x11e142128 <col:18> 'int' 10
    |     `-BreakStmt 0x11e142190 <line:16:4>
    |-NullStmt 0x11e142218 <line:17:5>
    |-BinaryOperator 0x11e1422e8 <line:19:2, col:12> 'char' '='
    | |-ArraySubscriptExpr 0x11e142290 <col:2, col:8> 'char' lvalue
    | | |-ImplicitCastExpr 0x11e142260 <col:2> 'char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e142220 <col:2> 'char *' lvalue ParmVar 0x11e1281a8 'ptr' 'char *'
    | | `-ImplicitCastExpr 0x11e142278 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11e142240 <col:7> 'int' lvalue Var 0x11e1283f0 'k' 'int'
    | `-ImplicitCastExpr 0x11e1422d0 <col:12> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x11e1422b0 <col:12> 'int' 0
    `-ReturnStmt 0x11e142340 <line:21:2, col:9>
      `-ImplicitCastExpr 0x11e142328 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e142308 <col:9> 'int' lvalue Var 0x11e1283f0 'k' 'int'
