`-FunctionDecl 0x13c82a800  line:1:1 filter_check_fcrdns 'int (struct filter *, int)'
  |-ParmVarDecl 0x13c80e248 <col:21, col:36> col:36 used filter 'struct filter *'
  |-ParmVarDecl 0x13c80e2c8 <col:44, col:48> col:48 used fcrdns 'int'
  `-CompoundStmt 0x13c82ad30 <line:2:1, line:10:1>
    |-DeclStmt 0x13c82a9a0 <line:3:2, col:13>
    | `-VarDecl 0x13c82a918 <col:2, col:12> col:6 used ret 'int' cinit
    |   `-IntegerLiteral 0x13c82a980 <col:12> 'int' 0
    |-IfStmt 0x13c82aac0 <line:5:2, line:6:10>
    | |-UnaryOperator 0x13c82aa78 <line:5:6, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13c82aa60 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x13c82aa18 <col:7, col:23> '<dependent type>' contains-errors lvalue ->fcrdns
    | |     `-RecoveryExpr 0x13c82a9f0 <col:7, col:15> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x13c82a9b8 <col:7> 'struct filter *' lvalue ParmVar 0x13c80e248 'filter' 'struct filter *'
    | `-ReturnStmt 0x13c82aab0 <line:6:3, col:10>
    |   `-IntegerLiteral 0x13c82aa90 <col:10> 'int' 0
    |-BinaryOperator 0x13c82ab78 <line:8:2, col:18> 'int' '='
    | |-DeclRefExpr 0x13c82aae0 <col:2> 'int' lvalue Var 0x13c82a918 'ret' 'int'
    | `-BinaryOperator 0x13c82ab58 <col:8, col:18> 'int' '=='
    |   |-ImplicitCastExpr 0x13c82ab40 <col:8> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13c82ab00 <col:8> 'int' lvalue ParmVar 0x13c80e2c8 'fcrdns' 'int'
    |   `-IntegerLiteral 0x13c82ab20 <col:18> 'int' 1
    `-ReturnStmt 0x13c82ad20 <line:9:2, col:49>
      `-ConditionalOperator 0x13c82acf0 <col:9, col:49> '<dependent type>' contains-errors
        |-BinaryOperator 0x13c82ac60 <col:9, col:38> 'int' contains-errors '<'
        | |-CXXDependentScopeMemberExpr 0x13c82abf8 <col:9, col:25> '<dependent type>' contains-errors lvalue ->not_fcrdns
        | | `-RecoveryExpr 0x13c82abd0 <col:9, col:17> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x13c82ab98 <col:9> 'struct filter *' lvalue ParmVar 0x13c80e248 'filter' 'struct filter *'
        | `-IntegerLiteral 0x13c82ac40 <col:38> 'int' 0
        |-UnaryOperator 0x13c82acb8 <col:42, col:43> 'int' prefix '!' cannot overflow
        | `-ImplicitCastExpr 0x13c82aca0 <col:43> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x13c82ac80 <col:43> 'int' lvalue Var 0x13c82a918 'ret' 'int'
        `-DeclRefExpr 0x13c82acd0 <col:49> 'int' lvalue Var 0x13c82a918 'ret' 'int'
