`-FunctionDecl 0x11d00dfa8  line:1:14 invalid ComputeDepthMultiplier 'int (int *, const int *, const int *, int *)'
  |-ParmVarDecl 0x11d00dd28 <col:37, col:52> col:52 invalid context 'int *'
  |-ParmVarDecl 0x11d00dda8 <line:2:37, col:57> col:57 invalid input 'const int *'
  |-ParmVarDecl 0x11d00de28 <line:3:37, col:57> col:57 invalid filter 'const int *'
  |-ParmVarDecl 0x11d00dea8 <line:4:37, col:44> col:44 invalid depth_multiplier 'int *'
  `-CompoundStmt 0x11d027798 <col:62, line:11:1>
    |-DeclStmt 0x11d00e2e0 <line:5:3, col:55>
    | `-VarDecl 0x11d00e088 <col:3, col:54> col:7 used num_filter_channels 'int' cinit
    |   `-CallExpr 0x11d00e2b0 <col:29, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d00e250 <col:29> 'int ()' Function 0x11d00e198 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x11d00e270 <col:45> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x11d00e290 <col:53> 'int' 3
    |-DeclStmt 0x11d027430 <line:6:3, col:53>
    | `-VarDecl 0x11d00e310 <col:3, col:52> col:7 used num_input_channels 'int' cinit
    |   `-CallExpr 0x11d027400 <col:28, col:52> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11d00e378 <col:28> 'int ()' Function 0x11d00e198 'SizeOfDimension' 'int ()'
    |     |-RecoveryExpr 0x11d00e398 <col:44> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x11d00e3b8 <col:51> 'int' 3
    |-CallExpr 0x11d027618 <line:7:3, col:73> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11d027528 <col:3> 'int ()' Function 0x11d027470 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11d027548 <col:21> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x11d0275d8 <col:30, col:52> 'int' contains-errors '%'
    | | |-ImplicitCastExpr 0x11d0275a8 <col:30> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x11d027568 <col:30> 'int' contains-errors lvalue Var 0x11d00e088 'num_filter_channels' 'int'
    | | `-ImplicitCastExpr 0x11d0275c0 <col:52> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x11d027588 <col:52> 'int' contains-errors lvalue Var 0x11d00e310 'num_input_channels' 'int'
    | `-IntegerLiteral 0x11d0275f8 <col:72> 'int' 0
    |-BinaryOperator 0x11d027730 <line:9:3, col:45> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x11d027688 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x11d027670 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x11d027650 <col:4> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11d027710 <col:23, col:45> 'int' contains-errors '/'
    |   |-ImplicitCastExpr 0x11d0276e0 <col:23> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11d0276a0 <col:23> 'int' contains-errors lvalue Var 0x11d00e088 'num_filter_channels' 'int'
    |   `-ImplicitCastExpr 0x11d0276f8 <col:45> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x11d0276c0 <col:45> 'int' contains-errors lvalue Var 0x11d00e310 'num_input_channels' 'int'
    `-ReturnStmt 0x11d027788 <line:10:3, col:10>
      `-RecoveryExpr 0x11d027768 <col:10> '<dependent type>' contains-errors lvalue
