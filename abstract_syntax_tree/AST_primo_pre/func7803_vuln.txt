`-FunctionDecl 0x12d128118  line:1:1 SYSCALL_DEFINE4 'int ()'
  `-CompoundStmt 0x12d809f38 <line:3:1, line:39:1>
    |-DeclStmt 0x12d1283f8 <line:4:2, col:27>
    | |-RecordDecl 0x12d128208 <col:2, col:9> col:9 struct task_struct
    | `-VarDecl 0x12d128378 <col:2, col:22> col:22 used child 'struct task_struct *'
    |-DeclStmt 0x12d128490 <line:5:2, col:10>
    | `-VarDecl 0x12d128428 <col:2, col:7> col:7 used ret 'long'
    |-IfStmt 0x12e80a210 <line:7:2, line:12:2>
    | |-BinaryOperator 0x12d128550 <line:7:6, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12d128510 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d128530 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e80a1e8 <col:33, line:12:2>
    |   |-BinaryOperator 0x12d128710 <line:8:3, col:24> 'long' '='
    |   | |-DeclRefExpr 0x12d128570 <col:3> 'long' lvalue Var 0x12d128428 'ret' 'long'
    |   | `-ImplicitCastExpr 0x12d1286f8 <col:9, col:24> 'long' <IntegralCast>
    |   |   `-CallExpr 0x12d1286d8 <col:9, col:24> 'int'
    |   |     `-ImplicitCastExpr 0x12d1286c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |       `-DeclRefExpr 0x12d128670 <col:9> 'int ()' Function 0x12d1285b8 'ptrace_traceme' 'int ()'
    |   |-IfStmt 0x12e80a160 <line:9:3, line:10:30>
    |   | |-UnaryOperator 0x12d128768 <line:9:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12d128750 <col:8> 'long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12d128730 <col:8> 'long' lvalue Var 0x12d128428 'ret' 'long'
    |   | `-CallExpr 0x12e80a138 <line:10:4, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e80a0b8 <col:4> 'int ()' Function 0x12e80a000 'arch_ptrace_attach' 'int ()'
    |   |   `-RecoveryExpr 0x12e80a118 <col:23> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12e80a1d0 <line:11:3, col:8> 'out' 0x12e80a180
    |-BinaryOperator 0x12e80a3f8 <line:14:2, col:36> 'struct task_struct *' contains-errors '='
    | |-DeclRefExpr 0x12e80a230 <col:2> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    | `-CallExpr 0x12e80a3d0 <col:10, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e80a330 <col:10> 'int ()' Function 0x12e80a278 'ptrace_get_task_struct' 'int ()'
    |   `-RecoveryExpr 0x12e80a3b0 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e80a798 <line:15:2, line:18:2>
    | |-CallExpr 0x12e80a550 <line:15:6, col:18> 'int'
    | | |-ImplicitCastExpr 0x12e80a538 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12e80a4f8 <col:6> 'int ()' Function 0x12e80a440 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x12e80a578 <col:13> 'struct task_struct *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e80a518 <col:13> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    | `-CompoundStmt 0x12e80a778 <col:21, line:18:2>
    |   |-BinaryOperator 0x12e80a740 <line:16:3, col:22> 'long' '='
    |   | |-DeclRefExpr 0x12e80a590 <col:3> 'long' lvalue Var 0x12d128428 'ret' 'long'
    |   | `-ImplicitCastExpr 0x12e80a728 <col:9, col:22> 'long' <IntegralCast>
    |   |   `-CallExpr 0x12e80a6e8 <col:9, col:22> 'int'
    |   |     |-ImplicitCastExpr 0x12e80a6d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12e80a690 <col:9> 'int ()' Function 0x12e80a5d8 'PTR_ERR' 'int ()'
    |   |     `-ImplicitCastExpr 0x12e80a710 <col:17> 'struct task_struct *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12e80a6b0 <col:17> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    |   `-GotoStmt 0x12e80a760 <line:17:3, col:8> 'out' 0x12e80a180
    |-IfStmt 0x12e80ad98 <line:20:2, line:26:2>
    | |-BinaryOperator 0x12e80a938 <line:20:6, col:45> 'int' contains-errors '||'
    | | |-BinaryOperator 0x12e80a8b8 <col:6, col:17> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x12e80a878 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x12e80a898 <col:17> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12e80a918 <col:34, col:45> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x12e80a8d8 <col:34> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x12e80a8f8 <col:45> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12e80ad70 <col:59, line:26:2>
    |   |-BinaryOperator 0x12e80abe0 <line:21:3, col:49> 'long' contains-errors '='
    |   | |-DeclRefExpr 0x12e80a958 <col:3> 'long' lvalue Var 0x12d128428 'ret' 'long'
    |   | `-CallExpr 0x12e80aba0 <col:9, col:49> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e80aa58 <col:9> 'int ()' Function 0x12e80a9a0 'ptrace_attach' 'int ()'
    |   |   |-DeclRefExpr 0x12e80aa78 <col:23> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    |   |   |-RecoveryExpr 0x12e80ab40 <col:30> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x12e80ab60 <col:39> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x12e80ab80 <col:45> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12e80ace8 <line:23:3, line:24:28>
    |   | |-UnaryOperator 0x12e80ac38 <line:23:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x12e80ac20 <col:8> 'long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x12e80ac00 <col:8> 'long' lvalue Var 0x12d128428 'ret' 'long'
    |   | `-CallExpr 0x12e80aca8 <line:24:4, col:28> 'int'
    |   |   |-ImplicitCastExpr 0x12e80ac90 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12e80ac50 <col:4> 'int ()' Function 0x12e80a000 'arch_ptrace_attach' 'int ()'
    |   |   `-ImplicitCastExpr 0x12e80acd0 <col:23> 'struct task_struct *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12e80ac70 <col:23> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    |   `-GotoStmt 0x12e80ad58 <line:25:3, col:8> 'out_put_task_struct' 0x12e80ad08
    |-IfStmt 0x12e80afa0 <line:30:2, line:31:8>
    | |-BinaryOperator 0x12e80af68 <line:30:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12e80af38 <col:6> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e80aef8 <col:6> 'long' lvalue Var 0x12d128428 'ret' 'long'
    | | `-ImplicitCastExpr 0x12e80af50 <col:12> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x12e80af18 <col:12> 'int' 0
    | `-GotoStmt 0x12e80af88 <line:31:3, col:8> 'out_put_task_struct' 0x12e80ad08
    |-LabelStmt 0x12d809e98 <line:35:2, line:36:23> 'out_put_task_struct'
    | `-CallExpr 0x12d809e58 <col:2, col:23> 'int'
    |   |-ImplicitCastExpr 0x12d809e40 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d809e00 <col:2> 'int ()' Function 0x12d809d48 'put_task_struct' 'int ()'
    |   `-ImplicitCastExpr 0x12d809e80 <col:18> 'struct task_struct *' <LValueToRValue>
    |     `-DeclRefExpr 0x12d809e20 <col:18> 'struct task_struct *' lvalue Var 0x12d128378 'child' 'struct task_struct *'
    `-LabelStmt 0x12d809f18 <line:37:2, line:38:9> 'out'
      `-ReturnStmt 0x12d809f08 <col:2, col:9>
        `-ImplicitCastExpr 0x12d809ef0 <col:9> 'int' <IntegralCast>
          `-ImplicitCastExpr 0x12d809ed8 <col:9> 'long' <LValueToRValue>
            `-DeclRefExpr 0x12d809eb8 <col:9> 'long' lvalue Var 0x12d128428 'ret' 'long'
