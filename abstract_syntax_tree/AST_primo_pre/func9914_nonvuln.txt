`-FunctionDecl 0x105008888  line:1:6 invalid interleaved_compress 'int (int *, int *, int *, int, int, const int *, int, int, int, int, const int *, int)'
  |-ParmVarDecl 0x12701f328 <col:27, col:55> col:55 invalid interleaved 'int *'
  |-ParmVarDecl 0x12701f3a8 <col:68, col:74> col:74 invalid pDstData 'int *'
  |-ParmVarDecl 0x12701f428 <col:84, col:92> col:92 invalid pDstSize 'int *'
  |-ParmVarDecl 0x12701f4a8 <line:2:27, col:34> col:34 invalid nWidth 'int'
  |-ParmVarDecl 0x12701f528 <col:42, col:49> col:49 invalid nHeight 'int'
  |-ParmVarDecl 0x12701f5a8 <col:58, col:70> col:70 invalid pSrcData 'const int *'
  |-ParmVarDecl 0x12701f628 <col:80, col:87> col:87 invalid SrcFormat 'int'
  |-ParmVarDecl 0x12701f6a8 <line:3:27, col:34> col:34 invalid nSrcStep 'int'
  |-ParmVarDecl 0x12701f728 <col:44, col:51> col:51 invalid nXSrc 'int'
  |-ParmVarDecl 0x12701f7a8 <col:58, col:65> col:65 invalid nYSrc 'int'
  |-ParmVarDecl 0x12701f828 <col:72, col:90> col:90 invalid palette 'const int *'
  |-ParmVarDecl 0x12701f8a8 <line:4:27, col:34> col:34 invalid bpp 'int'
  `-CompoundStmt 0x12703ab98 <line:5:1, line:71:1>
    |-DeclStmt 0x105008ac8 <line:9:2, col:36>
    | `-VarDecl 0x1050089c0 <col:2, col:15> col:15 invalid maxSize 'const int'
    |-IfStmt 0x105008c58 <line:11:2, line:12:10>
    | |-BinaryOperator 0x105008bf0 <line:11:6, col:36> 'int' contains-errors '||'
    | | |-BinaryOperator 0x105008b80 <col:6, col:23> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x105008b18 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x105008b00 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x105008ae0 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x105008b68 <col:22, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x105008b50 <col:23> '<dependent type>' contains-errors <LValueToRValue>
    | | |     `-RecoveryExpr 0x105008b30 <col:23> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x105008bd8 <col:35, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x105008bc0 <col:36> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x105008ba0 <col:36> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x105008c48 <line:12:3, col:10>
    |   `-RecoveryExpr 0x105008c28 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x105008de0 <line:14:2, line:15:10>
    | |-BinaryOperator 0x105008d78 <line:14:6, col:36> 'int' contains-errors '||'
    | | |-ParenExpr 0x105008cd8 <col:6, col:18> 'int' contains-errors
    | | | `-BinaryOperator 0x105008cb8 <col:7, col:17> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x105008c78 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x105008c98 <col:17> 'int' 0
    | | `-ParenExpr 0x105008d58 <col:23, col:36> 'int' contains-errors
    | |   `-BinaryOperator 0x105008d38 <col:24, col:35> 'int' contains-errors '=='
    | |     |-RecoveryExpr 0x105008cf8 <col:24> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x105008d18 <col:35> 'int' 0
    | `-ReturnStmt 0x105008dd0 <line:15:3, col:10>
    |   `-RecoveryExpr 0x105008db0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x105009050 <line:17:2, line:21:2>
    | |-BinaryOperator 0x105008e40 <line:17:6, col:15> '<dependent type>' contains-errors '%'
    | | |-RecoveryExpr 0x105008e00 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x105008e20 <col:15> 'int' 4
    | `-CompoundStmt 0x105009040 <line:18:2, line:21:2>
    |-IfStmt 0x1050091e0 <line:23:2, line:30:2>
    | |-BinaryOperator 0x105009170 <line:23:6, col:36> 'int' contains-errors '||'
    | | |-ParenExpr 0x1050090d0 <col:6, col:18> 'int' contains-errors
    | | | `-BinaryOperator 0x1050090b0 <col:7, col:16> 'int' contains-errors '>'
    | | |   |-RecoveryExpr 0x105009070 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x105009090 <col:16> 'int' 64
    | | `-ParenExpr 0x105009150 <col:23, col:36> 'int' contains-errors
    | |   `-BinaryOperator 0x105009130 <col:24, col:34> 'int' contains-errors '>'
    | |     |-RecoveryExpr 0x1050090f0 <col:24> '<dependent type>' contains-errors lvalue
    | |     `-IntegerLiteral 0x105009110 <col:34> 'int' 64
    | `-CompoundStmt 0x1050091d0 <line:24:2, line:30:2>
    |-SwitchStmt 0x105009238 <line:32:2, line:48:2>
    | |-ImplicitCastExpr 0x105009220 <line:32:10> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x105009200 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x105009390 <line:33:2, line:48:2>
    |   |-CaseStmt 0x105009280 <line:34:3, <invalid sloc>>
    |   | |-IntegerLiteral 0x105009260 <col:8> 'int' 24
    |   | `-NullStmt 0x1050092a8 <<invalid sloc>>
    |   |-BreakStmt 0x1050092b0 <line:36:4>
    |   |-CaseStmt 0x1050092d8 <line:38:3, <invalid sloc>>
    |   | |-IntegerLiteral 0x1050092b8 <col:8> 'int' 16
    |   | `-NullStmt 0x105009300 <<invalid sloc>>
    |   |-BreakStmt 0x105009308 <line:40:4>
    |   |-CaseStmt 0x105009330 <line:42:3, <invalid sloc>>
    |   | |-IntegerLiteral 0x105009310 <col:8> 'int' 15
    |   | `-NullStmt 0x105009358 <<invalid sloc>>
    |   |-BreakStmt 0x105009360 <line:44:4>
    |   `-DefaultStmt 0x105009370 <line:46:3, col:10>
    |     `-NullStmt 0x105009368 <col:10>
    `-CallExpr 0x12703a608 <line:59:2, col:40> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12703a560 <col:2> 'int ()' Function 0x12703a4a8 'Stream_SetPosition' 'int ()'
      |-CXXDependentScopeMemberExpr 0x12703a5a0 <col:21, col:34> '<dependent type>' contains-errors lvalue ->bts
      | `-RecoveryExpr 0x12703a580 <col:21> '<dependent type>' contains-errors lvalue
      `-IntegerLiteral 0x12703a5e8 <col:39> 'int' 0
