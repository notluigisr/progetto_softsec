`-FunctionDecl 0x13e940ab8  line:1:18 find_mergeable_anon_vma 'struct anon_vma *(struct vm_area_struct *)'
  |-ParmVarDecl 0x13e9286e8 <col:42, col:65> col:65 used vma 'struct vm_area_struct *'
  `-CompoundStmt 0x13e9416c0 <line:2:1, line:24:1>
    |-DeclStmt 0x13e940ca0 <line:3:2, col:27>
    | `-VarDecl 0x13e940c38 <col:2, col:19> col:19 used anon_vma 'struct anon_vma *'
    |-DeclStmt 0x13e940db0 <line:4:2, col:29>
    | `-VarDecl 0x13e940d48 <col:2, col:25> col:25 used near 'struct vm_area_struct *'
    |-BinaryOperator 0x13e940e48 <line:6:2, col:14> 'struct vm_area_struct *' contains-errors '='
    | |-DeclRefExpr 0x13e940dc8 <col:2> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    | `-RecoveryExpr 0x13e940e20 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13e940de8 <col:9> 'struct vm_area_struct *' lvalue ParmVar 0x13e9286e8 'vma' 'struct vm_area_struct *'
    |-IfStmt 0x13e940f20 <line:7:2, line:8:8>
    | |-UnaryOperator 0x13e940ea0 <line:7:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e940e88 <col:7> 'struct vm_area_struct *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e940e68 <col:7> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    | `-GotoStmt 0x13e940f08 <line:8:3, col:8> 'try_prev' 0x13e940eb8
    |-BinaryOperator 0x13e9411f0 <line:10:2, col:46> 'struct anon_vma *' '='
    | |-DeclRefExpr 0x13e940f40 <col:2> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    | `-ImplicitCastExpr 0x13e9411d8 <col:13, col:46> 'struct anon_vma *' <IntegralToPointer>
    |   `-CallExpr 0x13e941158 <col:13, col:46> 'int'
    |     |-ImplicitCastExpr 0x13e941140 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13e941090 <col:13> 'int ()' Function 0x13e940fd8 'reusable_anon_vma' 'int ()'
    |     |-ImplicitCastExpr 0x13e941190 <col:31> 'struct vm_area_struct *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13e9410b0 <col:31> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    |     |-ImplicitCastExpr 0x13e9411a8 <col:37> 'struct vm_area_struct *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13e9410d0 <col:37> 'struct vm_area_struct *' lvalue ParmVar 0x13e9286e8 'vma' 'struct vm_area_struct *'
    |     `-ImplicitCastExpr 0x13e9411c0 <col:42> 'struct vm_area_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x13e9410f0 <col:42> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    |-IfStmt 0x13e941290 <line:11:2, line:12:10>
    | |-ImplicitCastExpr 0x13e941230 <line:11:6> 'struct anon_vma *' <LValueToRValue>
    | | `-DeclRefExpr 0x13e941210 <col:6> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    | `-ReturnStmt 0x13e941280 <line:12:3, col:10>
    |   `-ImplicitCastExpr 0x13e941268 <col:10> 'struct anon_vma *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e941248 <col:10> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    |-LabelStmt 0x13e941350 <line:13:1, line:14:14> 'try_prev'
    | `-BinaryOperator 0x13e941330 <col:2, col:14> 'struct vm_area_struct *' contains-errors '='
    |   |-DeclRefExpr 0x13e9412b0 <col:2> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    |   `-RecoveryExpr 0x13e941308 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13e9412d0 <col:9> 'struct vm_area_struct *' lvalue ParmVar 0x13e9286e8 'vma' 'struct vm_area_struct *'
    |-IfStmt 0x13e941428 <line:15:2, line:16:8>
    | |-UnaryOperator 0x13e9413a8 <line:15:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e941390 <col:7> 'struct vm_area_struct *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e941370 <col:7> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    | `-GotoStmt 0x13e941410 <line:16:3, col:8> 'none' 0x13e9413c0
    |-BinaryOperator 0x13e941598 <line:18:2, col:46> 'struct anon_vma *' '='
    | |-DeclRefExpr 0x13e941448 <col:2> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    | `-ImplicitCastExpr 0x13e941580 <col:13, col:46> 'struct anon_vma *' <IntegralToPointer>
    |   `-CallExpr 0x13e941500 <col:13, col:46> 'int'
    |     |-ImplicitCastExpr 0x13e9414e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13e941468 <col:13> 'int ()' Function 0x13e940fd8 'reusable_anon_vma' 'int ()'
    |     |-ImplicitCastExpr 0x13e941538 <col:31> 'struct vm_area_struct *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13e941488 <col:31> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    |     |-ImplicitCastExpr 0x13e941550 <col:37> 'struct vm_area_struct *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13e9414a8 <col:37> 'struct vm_area_struct *' lvalue Var 0x13e940d48 'near' 'struct vm_area_struct *'
    |     `-ImplicitCastExpr 0x13e941568 <col:43> 'struct vm_area_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x13e9414c8 <col:43> 'struct vm_area_struct *' lvalue ParmVar 0x13e9286e8 'vma' 'struct vm_area_struct *'
    |-IfStmt 0x13e941638 <line:19:2, line:20:10>
    | |-ImplicitCastExpr 0x13e9415d8 <line:19:6> 'struct anon_vma *' <LValueToRValue>
    | | `-DeclRefExpr 0x13e9415b8 <col:6> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    | `-ReturnStmt 0x13e941628 <line:20:3, col:10>
    |   `-ImplicitCastExpr 0x13e941610 <col:10> 'struct anon_vma *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e9415f0 <col:10> 'struct anon_vma *' lvalue Var 0x13e940c38 'anon_vma' 'struct anon_vma *'
    `-LabelStmt 0x13e9416a0 <line:21:1, line:23:9> 'none'
      `-ReturnStmt 0x13e941690 <col:2, col:9>
        `-RecoveryExpr 0x13e941670 <col:9> '<dependent type>' contains-errors lvalue
