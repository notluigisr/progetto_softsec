`-FunctionDecl 0x145928310  line:1:6 invalid textview_get_selection_offsets 'void (int *, int *, int *)'
  |-ParmVarDecl 0x145928128 <col:37, col:47> col:47 invalid textview 'int *'
  |-ParmVarDecl 0x1459281a8 <col:57, col:63> col:63 used sel_start 'int *'
  |-ParmVarDecl 0x145928228 <col:74, col:80> col:80 used sel_end 'int *'
  `-CompoundStmt 0x1459421e0 <line:2:1, line:17:1>
    `-IfStmt 0x1459421b0 <line:6:3, line:16:3> has_else
      |-CallExpr 0x145941a18 <line:6:7, col:64> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x1459418b8 <col:7> 'int ()' Function 0x145941800 'gtk_text_buffer_get_selection_bounds' 'int ()'
      | |-RecoveryExpr 0x145941988 <col:44> '<dependent type>' contains-errors lvalue
      | |-UnaryOperator 0x1459419c8 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
      | | `-RecoveryExpr 0x1459419a8 <col:53> '<dependent type>' contains-errors lvalue
      | `-UnaryOperator 0x145941a00 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   `-RecoveryExpr 0x1459419e0 <col:61> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x145941f70 <col:67, line:11:3>
      | |-IfStmt 0x145941d30 <line:7:4, line:8:49>
      | | |-ImplicitCastExpr 0x145941a70 <line:7:8> 'int *' <LValueToRValue>
      | | | `-DeclRefExpr 0x145941a50 <col:8> 'int *' lvalue ParmVar 0x1459281a8 'sel_start' 'int *'
      | | `-BinaryOperator 0x145941d10 <line:8:5, col:49> 'int' contains-errors '='
      | |   |-UnaryOperator 0x145941c98 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | |   | `-ImplicitCastExpr 0x145941c80 <col:6> 'int *' <LValueToRValue>
      | |   |   `-DeclRefExpr 0x145941a88 <col:6> 'int *' lvalue ParmVar 0x1459281a8 'sel_start' 'int *'
      | |   `-CallExpr 0x145941ce8 <col:18, col:49> '<dependent type>' contains-errors
      | |     |-DeclRefExpr 0x145941bb8 <col:18> 'int ()' Function 0x145941b00 'gtk_text_iter_get_offset' 'int ()'
      | |     `-UnaryOperator 0x145941cd0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
      | |       `-RecoveryExpr 0x145941cb0 <col:44> '<dependent type>' contains-errors lvalue
      | `-IfStmt 0x145941f50 <line:9:4, line:10:45>
      |   |-ImplicitCastExpr 0x145941d70 <line:9:8> 'int *' <LValueToRValue>
      |   | `-DeclRefExpr 0x145941d50 <col:8> 'int *' lvalue ParmVar 0x145928228 'sel_end' 'int *'
      |   `-BinaryOperator 0x145941f30 <line:10:5, col:45> 'int' contains-errors '='
      |     |-UnaryOperator 0x145941eb8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      |     | `-ImplicitCastExpr 0x145941ea0 <col:6> 'int *' <LValueToRValue>
      |     |   `-DeclRefExpr 0x145941d88 <col:6> 'int *' lvalue ParmVar 0x145928228 'sel_end' 'int *'
      |     `-CallExpr 0x145941f08 <col:16, col:45> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x145941dd8 <col:16> 'int ()' Function 0x145941b00 'gtk_text_iter_get_offset' 'int ()'
      |       `-UnaryOperator 0x145941ef0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
      |         `-RecoveryExpr 0x145941ed0 <col:42> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x145942190 <line:11:10, line:16:3>
        |-IfStmt 0x145942070 <line:12:4, line:13:19>
        | |-ImplicitCastExpr 0x145941fb0 <line:12:8> 'int *' <LValueToRValue>
        | | `-DeclRefExpr 0x145941f90 <col:8> 'int *' lvalue ParmVar 0x1459281a8 'sel_start' 'int *'
        | `-BinaryOperator 0x145942050 <line:13:5, col:19> 'int' '='
        |   |-UnaryOperator 0x145942000 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
        |   | `-ImplicitCastExpr 0x145941fe8 <col:6> 'int *' <LValueToRValue>
        |   |   `-DeclRefExpr 0x145941fc8 <col:6> 'int *' lvalue ParmVar 0x1459281a8 'sel_start' 'int *'
        |   `-UnaryOperator 0x145942038 <col:18, col:19> 'int' prefix '-'
        |     `-IntegerLiteral 0x145942018 <col:19> 'int' 1
        `-IfStmt 0x145942170 <line:14:4, line:15:17>
          |-ImplicitCastExpr 0x1459420b0 <line:14:8> 'int *' <LValueToRValue>
          | `-DeclRefExpr 0x145942090 <col:8> 'int *' lvalue ParmVar 0x145928228 'sel_end' 'int *'
          `-BinaryOperator 0x145942150 <line:15:5, col:17> 'int' '='
            |-UnaryOperator 0x145942100 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
            | `-ImplicitCastExpr 0x1459420e8 <col:6> 'int *' <LValueToRValue>
            |   `-DeclRefExpr 0x1459420c8 <col:6> 'int *' lvalue ParmVar 0x145928228 'sel_end' 'int *'
            `-UnaryOperator 0x145942138 <col:16, col:17> 'int' prefix '-'
              `-IntegerLiteral 0x145942118 <col:17> 'int' 1
