`-FunctionDecl 0x124128750  line:1:13 load_branch 'void (struct branch *)' static
  |-ParmVarDecl 0x124128648 <col:25, col:40> col:40 used b 'struct branch *'
  `-CompoundStmt 0x124140e98 <line:2:1, line:11:1>
    |-CallExpr 0x124140c08 <line:3:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124140b70 <col:2> 'int ()' Function 0x124140ab8 'load_tree' 'int ()'
    | `-UnaryOperator 0x124140bf0 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x124140bc8 <col:13, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x124140b90 <col:13> 'struct branch *' lvalue ParmVar 0x124128648 'b' 'struct branch *'
    `-IfStmt 0x124140e78 <line:4:2, line:10:2>
      |-UnaryOperator 0x124140ca8 <line:4:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x124140c90 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x124140c68 <col:7, col:10> '<dependent type>' contains-errors lvalue
      |     `-DeclRefExpr 0x124140c30 <col:7> 'struct branch *' lvalue ParmVar 0x124128648 'b' 'struct branch *'
      `-CompoundStmt 0x124140e58 <col:18, line:10:2>
        |-BinaryOperator 0x124140d40 <line:5:3, col:15> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x124140cf8 <col:3, col:6> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x124140cc0 <col:3> 'struct branch *' lvalue ParmVar 0x124128648 'b' 'struct branch *'
        | `-IntegerLiteral 0x124140d20 <col:15> 'int' 1
        `-BinaryOperator 0x124140e18 <line:6:3, col:27> '<dependent type>' contains-errors '='
          |-RecoveryExpr 0x124140d98 <col:3, col:6> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x124140d60 <col:3> 'struct branch *' lvalue ParmVar 0x124128648 'b' 'struct branch *'
          `-RecoveryExpr 0x124140df8 <col:27> '<dependent type>' contains-errors lvalue
