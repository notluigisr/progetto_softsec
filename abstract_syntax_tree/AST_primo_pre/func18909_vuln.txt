`-FunctionDecl 0x11e128378  line:1:1 invalid dir_globs 'int (long, const int *, int, int)'
  |-ParmVarDecl 0x11e1280d8 <col:11, col:16> col:16 used argc 'long'
  |-ParmVarDecl 0x11e128170 <col:22, col:35> col:35 invalid argv 'const int *'
  |-ParmVarDecl 0x11e1281f0 <col:41, col:47> col:47 invalid base 'int'
  |-ParmVarDecl 0x11e128270 <col:53, col:57> col:57 used flags 'int'
  `-CompoundStmt 0x11e141e48 <line:2:1, line:15:1>
    |-DeclStmt 0x11e1284c0 <line:4:5, col:11>
    | `-VarDecl 0x11e128458 <col:5, col:10> col:10 used i 'long'
    |-ForStmt 0x11e141dc8 <line:6:5, line:12:5>
    | |-BinaryOperator 0x11e128530 <line:6:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x11e1284d8 <col:10> 'long' lvalue Var 0x11e128458 'i' 'long'
    | | `-ImplicitCastExpr 0x11e128518 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x11e1284f8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x11e1285c0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x11e128590 <col:17> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x11e128550 <col:17> 'long' lvalue Var 0x11e128458 'i' 'long'
    | | `-ImplicitCastExpr 0x11e1285a8 <col:21> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x11e128570 <col:21> 'long' lvalue ParmVar 0x11e1280d8 'argc' 'long'
    | |-UnaryOperator 0x11e128600 <col:27, col:29> 'long' prefix '++'
    | | `-DeclRefExpr 0x11e1285e0 <col:29> 'long' lvalue Var 0x11e128458 'i' 'long'
    | `-CompoundStmt 0x11e141d98 <col:32, line:12:5>
    |   |-DeclStmt 0x11e128698 <line:7:2, col:12>
    |   | `-VarDecl 0x11e128630 <col:2, col:6> col:6 used status 'int'
    |   |-CallExpr 0x11e1418d0 <line:9:2, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x11e141810 <col:2> 'int ()' Function 0x11e128758 'GlobPathValue' 'int ()'
    |   | |-RecoveryExpr 0x11e141890 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x11e1418b0 <col:21> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x11e141b70 <line:10:2, col:42> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e141900 <col:2> 'int' lvalue Var 0x11e128630 'status' 'int'
    |   | `-CallExpr 0x11e141b30 <col:11, col:42> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e141a00 <col:11> 'int ()' Function 0x11e141948 'push_glob' 'int ()'
    |   |   |-RecoveryExpr 0x11e141af0 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x11e141b10 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x11e141a50 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x11e141a70 <col:37> 'int' lvalue ParmVar 0x11e128270 'flags' 'int'
    |   `-IfStmt 0x11e141d78 <line:11:2, col:34>
    |     |-ImplicitCastExpr 0x11e141bb0 <col:6> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11e141b90 <col:6> 'int' lvalue Var 0x11e128630 'status' 'int'
    |     `-CallExpr 0x11e141d38 <col:14, col:34> 'int'
    |       |-ImplicitCastExpr 0x11e141d20 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x11e141ca8 <col:14> 'int ()' Function 0x11e141bf0 'GLOB_JUMP_TAG' 'int ()'
    |       `-ImplicitCastExpr 0x11e141d60 <col:28> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x11e141cc8 <col:28> 'int' lvalue Var 0x11e128630 'status' 'int'
    `-ReturnStmt 0x11e141e38 <line:14:5, col:12>
      `-RecoveryExpr 0x11e141e18 <col:12> '<dependent type>' contains-errors lvalue
