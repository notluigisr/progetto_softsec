`-FunctionDecl 0x13b928758  line:1:12 smack_sem_alloc_security 'int (struct sem_array *)' static
  |-ParmVarDecl 0x13b928648 <col:37, col:55> col:55 used sma 'struct sem_array *'
  `-CompoundStmt 0x13b940f28 <line:2:1, line:7:1>
    |-DeclStmt 0x13b940cb0 <line:3:2, col:44>
    | |-RecordDecl 0x13b940a50 <col:2, col:9> col:9 struct kern_ipc_perm
    | `-VarDecl 0x13b940bb8 <col:2, col:36> col:24 used isp 'struct kern_ipc_perm *' cinit
    |   `-UnaryOperator 0x13b940c80 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13b940c58 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13b940c20 <col:31> 'struct sem_array *' lvalue ParmVar 0x13b928648 'sma' 'struct sem_array *'
    |-BinaryOperator 0x13b940ed8 <line:5:2, col:35> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13b940d00 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13b940cc8 <col:2> 'struct kern_ipc_perm *' contains-errors lvalue Var 0x13b940bb8 'isp' 'struct kern_ipc_perm *'
    | `-CallExpr 0x13b940eb8 <col:18, col:35> 'int'
    |   `-ImplicitCastExpr 0x13b940ea0 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13b940e50 <col:18> 'int ()' Function 0x13b940d98 'current_security' 'int ()'
    `-ReturnStmt 0x13b940f18 <line:6:2, col:9>
      `-IntegerLiteral 0x13b940ef8 <col:9> 'int' 0
