`-FunctionDecl 0x13e09c438  line:1:12 invalid local_renameat 'int (int *, int *, const char *, int *, const char *)' static
  |-ParmVarDecl 0x13e09c128 <col:27, col:38> col:38 invalid ctx 'int *'
  |-ParmVarDecl 0x13e09c1a8 <col:43, col:53> col:53 invalid olddir 'int *'
  |-ParmVarDecl 0x13e09c228 <line:2:27, col:39> col:39 used old_name 'const char *'
  |-ParmVarDecl 0x13e09c2a8 <col:49, col:59> col:59 invalid newdir 'int *'
  |-ParmVarDecl 0x13e09c328 <line:3:27, col:39> col:39 used new_name 'const char *'
  `-CompoundStmt 0x13e0b8998 <line:4:1, line:63:1>
    |-DeclStmt 0x13e09c588 <line:5:5, col:12>
    | `-VarDecl 0x13e09c520 <col:5, col:9> col:9 used ret 'int'
    |-DeclStmt 0x13e09c6b8 <line:6:5, col:23>
    | |-VarDecl 0x13e09c5b8 <col:5, col:9> col:9 used odirfd 'int'
    | `-VarDecl 0x13e09c638 <col:5, col:17> col:17 used ndirfd 'int'
    |-BinaryOperator 0x13e0b5990 <line:8:5, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e09c6d0 <col:5> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    | `-CallExpr 0x13e0b5960 <col:14, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e0b58b8 <col:14> 'int ()' Function 0x13e0b5800 'local_opendir_nofollow' 'int ()'
    |   |-RecoveryExpr 0x13e0b58d8 <col:37> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x13e0b5918 <col:42, col:50> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x13e0b58f8 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13e0b5aa0 <line:9:5, line:11:5>
    | |-BinaryOperator 0x13e0b5a20 <line:9:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x13e0b5a08 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e0b59b0 <col:9> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    | | `-UnaryOperator 0x13e0b59f0 <col:19, col:20> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13e0b59d0 <col:20> 'int' 1
    | `-CompoundStmt 0x13e0b5a88 <col:23, line:11:5>
    |   `-ReturnStmt 0x13e0b5a78 <line:10:9, col:17>
    |     `-UnaryOperator 0x13e0b5a60 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x13e0b5a40 <col:17> 'int' 1
    |-BinaryOperator 0x13e0b5bb8 <line:13:5, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e0b5ac0 <col:5> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    | `-CallExpr 0x13e0b5b88 <col:14, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e0b5ae0 <col:14> 'int ()' Function 0x13e0b5800 'local_opendir_nofollow' 'int ()'
    |   |-RecoveryExpr 0x13e0b5b00 <col:37> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x13e0b5b40 <col:42, col:50> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x13e0b5b20 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13e0b5e80 <line:14:5, line:17:5>
    | |-BinaryOperator 0x13e0b5c48 <line:14:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x13e0b5c30 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e0b5bd8 <col:9> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    | | `-UnaryOperator 0x13e0b5c18 <col:19, col:20> 'int' prefix '-'
    | |   `-IntegerLiteral 0x13e0b5bf8 <col:20> 'int' 1
    | `-CompoundStmt 0x13e0b5e60 <col:23, line:17:5>
    |   |-CallExpr 0x13e0b5dd8 <line:15:9, col:36> 'int'
    |   | |-ImplicitCastExpr 0x13e0b5dc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e0b5d48 <col:9> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    |   | `-ImplicitCastExpr 0x13e0b5e00 <col:30> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e0b5d68 <col:30> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    |   `-ReturnStmt 0x13e0b5e50 <line:16:9, col:17>
    |     `-UnaryOperator 0x13e0b5e38 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x13e0b5e18 <col:17> 'int' 1
    |-BinaryOperator 0x13e0b60f8 <line:19:5, col:54> 'int' '='
    | |-DeclRefExpr 0x13e0b5ea0 <col:5> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    | `-CallExpr 0x13e0b6058 <col:11, col:54> 'int'
    |   |-ImplicitCastExpr 0x13e0b6040 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e0b5fa0 <col:11> 'int ()' Function 0x13e0b5ee8 'renameat' 'int ()'
    |   |-ImplicitCastExpr 0x13e0b6098 <col:20> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b5fc0 <col:20> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    |   |-ImplicitCastExpr 0x13e0b60b0 <col:28> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b5fe0 <col:28> 'const char *' lvalue ParmVar 0x13e09c228 'old_name' 'const char *'
    |   |-ImplicitCastExpr 0x13e0b60c8 <col:38> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b6000 <col:38> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    |   `-ImplicitCastExpr 0x13e0b60e0 <col:46> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e0b6020 <col:46> 'const char *' lvalue ParmVar 0x13e09c328 'new_name' 'const char *'
    |-IfStmt 0x13e0b6210 <line:20:5, line:22:5>
    | |-BinaryOperator 0x13e0b6170 <line:20:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x13e0b6158 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13e0b6118 <col:9> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    | | `-IntegerLiteral 0x13e0b6138 <col:15> 'int' 0
    | `-CompoundStmt 0x13e0b61f8 <col:18, line:22:5>
    |   `-GotoStmt 0x13e0b61e0 <line:21:9, col:14> 'out' 0x13e0b6190
    |-IfStmt 0x13e0b84c0 <line:24:5, line:52:5>
    | |-BinaryOperator 0x13e0b62f0 <line:24:9, col:29> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x13e0b6250 <col:9, col:14> '<dependent type>' contains-errors lvalue ->export_flags
    | | | `-RecoveryExpr 0x13e0b6230 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13e0b62d0 <col:29> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e0b8450 <col:50, line:52:5>
    |   |-DeclStmt 0x13e0b6428 <line:25:9, col:35>
    |   | |-VarDecl 0x13e0b6328 <col:9, col:13> col:13 used omap_dirfd 'int'
    |   | `-VarDecl 0x13e0b63a8 <col:9, col:25> col:25 used nmap_dirfd 'int'
    |   |-BinaryOperator 0x13e0b6668 <line:27:9, col:52> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13e0b6440 <col:9> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |   | `-CallExpr 0x13e0b6630 <col:15, col:52> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13e0b6540 <col:15> 'int ()' Function 0x13e0b6488 'mkdirat' 'int ()'
    |   |   |-DeclRefExpr 0x13e0b6560 <col:23> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    |   |   |-RecoveryExpr 0x13e0b6610 <col:31> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x13e0b6598 <col:48> 'int' 448
    |   |-IfStmt 0x13e0b78e0 <line:28:9, line:30:9>
    |   | |-BinaryOperator 0x13e0b7840 <line:28:13, col:33> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x13e0b67c0 <col:13, col:19> 'int' '<'
    |   | | | |-ImplicitCastExpr 0x13e0b67a8 <col:13> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13e0b6688 <col:13> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |   | | | `-IntegerLiteral 0x13e0b66a8 <col:19> 'int' 0
    |   | | `-BinaryOperator 0x13e0b7820 <col:24, col:33> 'int' contains-errors '!='
    |   | |   |-RecoveryExpr 0x13e0b67e0 <col:24> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x13e0b7800 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13e0b78c8 <col:41, line:30:9>
    |   |   `-GotoStmt 0x13e0b78b0 <line:29:13, col:18> 'err_undo_rename' 0x13e0b7860
    |   |-BinaryOperator 0x13e0b7af8 <line:32:9, col:56> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13e0b7900 <col:9> 'int' lvalue Var 0x13e0b6328 'omap_dirfd' 'int'
    |   | `-CallExpr 0x13e0b7ac8 <col:22, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13e0b7a00 <col:22> 'int ()' Function 0x13e0b7948 'openat_dir' 'int ()'
    |   |   |-DeclRefExpr 0x13e0b7a20 <col:33> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    |   |   `-RecoveryExpr 0x13e0b7aa8 <col:41> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13e0b7c28 <line:33:9, line:35:9>
    |   | |-BinaryOperator 0x13e0b7b88 <line:33:13, col:28> 'int' '=='
    |   | | |-ImplicitCastExpr 0x13e0b7b70 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13e0b7b18 <col:13> 'int' lvalue Var 0x13e0b6328 'omap_dirfd' 'int'
    |   | | `-UnaryOperator 0x13e0b7b58 <col:27, col:28> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x13e0b7b38 <col:28> 'int' 1
    |   | `-CompoundStmt 0x13e0b7c10 <col:31, line:35:9>
    |   |   `-GotoStmt 0x13e0b7bf8 <line:34:13, col:18> 'err' 0x13e0b7ba8
    |   |-BinaryOperator 0x13e0b7d60 <line:37:9, col:56> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13e0b7c48 <col:9> 'int' lvalue Var 0x13e0b63a8 'nmap_dirfd' 'int'
    |   | `-CallExpr 0x13e0b7d30 <col:22, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13e0b7c68 <col:22> 'int ()' Function 0x13e0b7948 'openat_dir' 'int ()'
    |   |   |-DeclRefExpr 0x13e0b7c88 <col:33> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    |   |   `-RecoveryExpr 0x13e0b7d10 <col:41> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13e0b7ee0 <line:38:9, line:41:9>
    |   | |-BinaryOperator 0x13e0b7df0 <line:38:13, col:28> 'int' '=='
    |   | | |-ImplicitCastExpr 0x13e0b7dd8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13e0b7d80 <col:13> 'int' lvalue Var 0x13e0b63a8 'nmap_dirfd' 'int'
    |   | | `-UnaryOperator 0x13e0b7dc0 <col:27, col:28> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x13e0b7da0 <col:28> 'int' 1
    |   | `-CompoundStmt 0x13e0b7ec0 <col:31, line:41:9>
    |   |   |-CallExpr 0x13e0b7e68 <line:39:13, col:44> 'int'
    |   |   | |-ImplicitCastExpr 0x13e0b7e50 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x13e0b7e10 <col:13> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    |   |   | `-ImplicitCastExpr 0x13e0b7e90 <col:34> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x13e0b7e30 <col:34> 'int' lvalue Var 0x13e0b6328 'omap_dirfd' 'int'
    |   |   `-GotoStmt 0x13e0b7ea8 <line:40:13, col:18> 'err' 0x13e0b7ba8
    |   |-BinaryOperator 0x13e0b8078 <line:44:9, col:66> 'int' '='
    |   | |-DeclRefExpr 0x13e0b7f00 <col:9> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |   | `-CallExpr 0x13e0b7fd8 <col:15, col:66> 'int'
    |   |   |-ImplicitCastExpr 0x13e0b7fc0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x13e0b7f20 <col:15> 'int ()' Function 0x13e0b5ee8 'renameat' 'int ()'
    |   |   |-ImplicitCastExpr 0x13e0b8018 <col:24> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13e0b7f40 <col:24> 'int' lvalue Var 0x13e0b6328 'omap_dirfd' 'int'
    |   |   |-ImplicitCastExpr 0x13e0b8030 <col:36> 'const char *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13e0b7f60 <col:36> 'const char *' lvalue ParmVar 0x13e09c228 'old_name' 'const char *'
    |   |   |-ImplicitCastExpr 0x13e0b8048 <col:46> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x13e0b7f80 <col:46> 'int' lvalue Var 0x13e0b63a8 'nmap_dirfd' 'int'
    |   |   `-ImplicitCastExpr 0x13e0b8060 <col:58> 'const char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x13e0b7fa0 <col:58> 'const char *' lvalue ParmVar 0x13e09c328 'new_name' 'const char *'
    |   |-CallExpr 0x13e0b80f0 <line:45:9, col:40> 'int'
    |   | |-ImplicitCastExpr 0x13e0b80d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e0b8098 <col:9> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    |   | `-ImplicitCastExpr 0x13e0b8118 <col:30> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e0b80b8 <col:30> 'int' lvalue Var 0x13e0b63a8 'nmap_dirfd' 'int'
    |   |-CallExpr 0x13e0b8188 <line:46:9, col:40> 'int'
    |   | |-ImplicitCastExpr 0x13e0b8170 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e0b8130 <col:9> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    |   | `-ImplicitCastExpr 0x13e0b81b0 <col:30> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e0b8150 <col:30> 'int' lvalue Var 0x13e0b6328 'omap_dirfd' 'int'
    |   |-IfStmt 0x13e0b83d0 <line:47:9, line:49:9>
    |   | |-BinaryOperator 0x13e0b8380 <line:47:13, col:33> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x13e0b8300 <col:13, col:19> 'int' '<'
    |   | | | |-ImplicitCastExpr 0x13e0b82e8 <col:13> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13e0b81c8 <col:13> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |   | | | `-IntegerLiteral 0x13e0b81e8 <col:19> 'int' 0
    |   | | `-BinaryOperator 0x13e0b8360 <col:24, col:33> 'int' contains-errors '!='
    |   | |   |-RecoveryExpr 0x13e0b8320 <col:24> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x13e0b8340 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x13e0b83b8 <col:41, line:49:9>
    |   |   `-GotoStmt 0x13e0b83a0 <line:48:13, col:18> 'err_undo_rename' 0x13e0b7860
    |   `-BinaryOperator 0x13e0b8430 <line:51:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x13e0b83f0 <col:9> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |     `-IntegerLiteral 0x13e0b8410 <col:15> 'int' 0
    |-GotoStmt 0x13e0b84e0 <line:53:5, col:10> 'out' 0x13e0b6190
    |-LabelStmt 0x13e0b8570 <line:55:1, line:56:12> 'err'
    | `-BinaryOperator 0x13e0b8550 <col:5, col:12> 'int' '='
    |   |-DeclRefExpr 0x13e0b84f8 <col:5> 'int' lvalue Var 0x13e09c520 'ret' 'int'
    |   `-UnaryOperator 0x13e0b8538 <col:11, col:12> 'int' prefix '-'
    |     `-IntegerLiteral 0x13e0b8518 <col:12> 'int' 1
    |-LabelStmt 0x13e0b87c8 <line:57:1, line:58:63> 'err_undo_rename'
    | `-CallExpr 0x13e0b8728 <col:5, col:63> 'int'
    |   |-ImplicitCastExpr 0x13e0b8710 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e0b8670 <col:5> 'int ()' Function 0x13e0b85b8 'renameat_preserve_errno' 'int ()'
    |   |-ImplicitCastExpr 0x13e0b8768 <col:29> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b8690 <col:29> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    |   |-ImplicitCastExpr 0x13e0b8780 <col:37> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b86b0 <col:37> 'const char *' lvalue ParmVar 0x13e09c328 'new_name' 'const char *'
    |   |-ImplicitCastExpr 0x13e0b8798 <col:47> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13e0b86d0 <col:47> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    |   `-ImplicitCastExpr 0x13e0b87b0 <col:55> 'const char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13e0b86f0 <col:55> 'const char *' lvalue ParmVar 0x13e09c228 'old_name' 'const char *'
    |-LabelStmt 0x13e0b8898 <line:59:1, line:60:32> 'out'
    | `-CallExpr 0x13e0b8858 <col:5, col:32> 'int'
    |   |-ImplicitCastExpr 0x13e0b8840 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e0b8800 <col:5> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    |   `-ImplicitCastExpr 0x13e0b8880 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13e0b8820 <col:26> 'int' lvalue Var 0x13e09c638 'ndirfd' 'int'
    |-CallExpr 0x13e0b8910 <line:61:5, col:32> 'int'
    | |-ImplicitCastExpr 0x13e0b88f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13e0b88b8 <col:5> 'int ()' Function 0x13e0b5c90 'close_preserve_errno' 'int ()'
    | `-ImplicitCastExpr 0x13e0b8938 <col:26> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x13e0b88d8 <col:26> 'int' lvalue Var 0x13e09c5b8 'odirfd' 'int'
    `-ReturnStmt 0x13e0b8988 <line:62:5, col:12>
      `-ImplicitCastExpr 0x13e0b8970 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e0b8950 <col:12> 'int' lvalue Var 0x13e09c520 'ret' 'int'
