`-FunctionDecl 0x1251283a8  line:1:14 invalid lua_sethook 'int (int *, int, int, int)'
  |-ParmVarDecl 0x125128128 <col:27, col:38> col:38 referenced invalid L 'int *'
  |-ParmVarDecl 0x1251281a8 <col:41, col:50> col:50 referenced invalid func 'int'
  |-ParmVarDecl 0x125128228 <col:56, col:60> col:60 used mask 'int'
  |-ParmVarDecl 0x1251282a8 <col:66, col:70> col:70 used count 'int'
  `-CompoundStmt 0x1251422a0 <col:77, line:14:1>
    |-IfStmt 0x125128738 <line:2:3, line:5:3>
    | |-BinaryOperator 0x1251285d8 <line:2:7, col:31> 'int' contains-errors '||'
    | | |-BinaryOperator 0x125128580 <col:7, col:15> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x125128470 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x125128560 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1251285b8 <col:23, col:31> 'int' '=='
    | |   |-ImplicitCastExpr 0x1251285a0 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1251284c8 <col:23> 'int' lvalue ParmVar 0x125128228 'mask' 'int'
    | |   `-IntegerLiteral 0x1251284e8 <col:31> 'int' 0
    | `-CompoundStmt 0x125128718 <col:34, line:5:3>
    |   |-BinaryOperator 0x125128638 <line:3:5, col:12> 'int' '='
    |   | |-DeclRefExpr 0x1251285f8 <col:5> 'int' lvalue ParmVar 0x125128228 'mask' 'int'
    |   | `-IntegerLiteral 0x125128618 <col:12> 'int' 0
    |   `-BinaryOperator 0x1251286f8 <line:4:5, col:12> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x125128678 <col:5> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x125128658 <col:5> 'int' lvalue ParmVar 0x1251281a8 'func' 'int'
    |     `-RecoveryExpr 0x1251286d8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x125141b58 <line:6:3, line:7:27>
    | |-CallExpr 0x125141940 <line:6:7, col:18> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1251418b8 <col:7> 'int ()' Function 0x125141800 'isLua' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x1251418f8 <col:13, col:16> '<dependent type>' contains-errors lvalue ->ci
    | |   `-RecoveryExpr 0x1251418d8 <col:13> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x125141b38 <line:7:5, col:27> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x1251419b0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->oldpc
    |   | `-RecoveryExpr 0x125141988 <col:5> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x125141968 <col:5> 'int *' lvalue ParmVar 0x125128128 'L' 'int *'
    |   `-CXXDependentScopeMemberExpr 0x125141af0 <col:16, col:27> '<dependent type>' contains-errors lvalue .savedpc
    |     `-CXXDependentScopeMemberExpr 0x125141aa8 <col:16, col:25> '<dependent type>' contains-errors lvalue .l
    |       `-CXXDependentScopeMemberExpr 0x125141a60 <col:16, col:23> '<dependent type>' contains-errors lvalue ->u
    |         `-CXXDependentScopeMemberExpr 0x125141a18 <col:16, col:19> '<dependent type>' contains-errors lvalue ->ci
    |           `-RecoveryExpr 0x1251419f8 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125141c28 <line:8:3, col:13> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125141bc0 <col:3, col:6> '<dependent type>' contains-errors lvalue ->hook
    | | `-RecoveryExpr 0x125141b98 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125141b78 <col:3> 'int *' lvalue ParmVar 0x125128128 'L' 'int *'
    | `-RecoveryExpr 0x125141c08 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125141cf8 <line:9:3, col:22> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125141c90 <col:3, col:6> '<dependent type>' contains-errors lvalue ->basehookcount
    | | `-RecoveryExpr 0x125141c68 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125141c48 <col:3> 'int *' lvalue ParmVar 0x125128128 'L' 'int *'
    | `-DeclRefExpr 0x125141cd8 <col:22> 'int' lvalue ParmVar 0x1251282a8 'count' 'int'
    |-CallExpr 0x125141e38 <line:10:3, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125141df8 <col:3> 'int ()' Function 0x125141d40 'resethookcount' 'int ()'
    | `-RecoveryExpr 0x125141e18 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x125142098 <line:11:3, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x125141ea8 <col:3, col:6> '<dependent type>' contains-errors lvalue ->hookmask
    | | `-RecoveryExpr 0x125141e80 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x125141e60 <col:3> 'int *' lvalue ParmVar 0x125128128 'L' 'int *'
    | `-CallExpr 0x125142058 <col:17, col:31> 'int'
    |   |-ImplicitCastExpr 0x125142040 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x125141fd0 <col:17> 'int ()' Function 0x125141f18 'cast_byte' 'int ()'
    |   `-ImplicitCastExpr 0x125142080 <col:27> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x125141ff0 <col:27> 'int' lvalue ParmVar 0x125128228 'mask' 'int'
    `-IfStmt 0x125142280 <line:12:3, line:13:19>
      |-ImplicitCastExpr 0x1251420d8 <line:12:7> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x1251420b8 <col:7> 'int' lvalue ParmVar 0x125128228 'mask' 'int'
      `-CallExpr 0x125142258 <line:13:5, col:19> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1251421d0 <col:5> 'int ()' Function 0x125142118 'settraps' 'int ()'
        `-CXXDependentScopeMemberExpr 0x125142210 <col:14, col:17> '<dependent type>' contains-errors lvalue ->ci
          `-RecoveryExpr 0x1251421f0 <col:14> '<dependent type>' contains-errors lvalue
