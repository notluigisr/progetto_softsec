`-FunctionDecl 0x13f82e7a8  line:1:12 invalid local_mkdir 'int (int *, int *, const char *, int *)' static
  |-ParmVarDecl 0x13f82e528 <col:24, col:35> col:35 invalid fs_ctx 'int *'
  |-ParmVarDecl 0x13f82e5a8 <col:43, col:53> col:53 invalid dir_path 'int *'
  |-ParmVarDecl 0x13f82e628 <line:2:24, col:36> col:36 used name 'const char *'
  |-ParmVarDecl 0x13f82e6a8 <col:42, col:50> col:50 referenced invalid credp 'int *'
  `-CompoundStmt 0x14800c090 <line:3:1, line:46:1>
    |-DeclStmt 0x13f82e928 <line:4:5, col:17>
    | `-VarDecl 0x13f82e888 <col:5, col:16> col:9 used err 'int' cinit
    |   `-UnaryOperator 0x13f82e910 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x13f82e8f0 <col:16> 'int' 1
    |-DeclStmt 0x13f82e9c0 <line:5:5, col:14>
    | `-VarDecl 0x13f82e958 <col:5, col:9> col:9 used dirfd 'int'
    |-BinaryOperator 0x148009230 <line:7:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x13f82e9d8 <col:5> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    | `-CallExpr 0x148009200 <col:13, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13f82eb50 <col:13> 'int ()' Function 0x13f82ea98 'local_opendir_nofollow' 'int ()'
    |   |-RecoveryExpr 0x13f82eb70 <col:36> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x13f82ebb0 <col:44, col:54> '<dependent type>' contains-errors lvalue ->data
    |     `-RecoveryExpr 0x13f82eb90 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x148009340 <line:8:5, line:10:5>
    | |-BinaryOperator 0x1480092c0 <line:8:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1480092a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x148009250 <col:9> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    | | `-UnaryOperator 0x148009290 <col:18, col:19> 'int' prefix '-'
    | |   `-IntegerLiteral 0x148009270 <col:19> 'int' 1
    | `-CompoundStmt 0x148009328 <col:22, line:10:5>
    |   `-ReturnStmt 0x148009318 <line:9:9, col:17>
    |     `-UnaryOperator 0x148009300 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x1480092e0 <col:17> 'int' 1
    |-IfStmt 0x14800bc30 <line:12:5, line:38:5> has_else
    | |-BinaryOperator 0x148009540 <line:12:9, line:13:32> 'int' contains-errors '||'
    | | |-BinaryOperator 0x1480094e0 <line:12:9, col:32> '<dependent type>' contains-errors '&'
    | | | |-CXXDependentScopeMemberExpr 0x148009380 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | `-RecoveryExpr 0x148009360 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x1480094c0 <col:32> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x148009520 <line:13:9, col:32> '<dependent type>' contains-errors '&'
    | |   |-CXXDependentScopeMemberExpr 0x148009420 <col:9, col:17> '<dependent type>' contains-errors lvalue ->export_flags
    | |   | `-RecoveryExpr 0x148009400 <col:9> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x148009500 <col:32> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x14800a0a8 <col:53, line:28:5>
    | | |-BinaryOperator 0x148009788 <line:14:9, col:58> 'int' contains-errors '='
    | | | |-DeclRefExpr 0x148009560 <col:9> 'int' lvalue Var 0x13f82e888 'err' 'int'
    | | | `-CallExpr 0x148009750 <col:15, col:58> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x148009660 <col:15> 'int ()' Function 0x1480095a8 'mkdirat' 'int ()'
    | | |   |-DeclRefExpr 0x148009680 <col:23> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    | | |   |-DeclRefExpr 0x1480096a0 <col:30> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    | | |   `-RecoveryExpr 0x148009730 <col:36> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x1480098b8 <line:15:9, line:17:9>
    | | | |-BinaryOperator 0x148009818 <line:15:13, col:21> 'int' '=='
    | | | | |-ImplicitCastExpr 0x148009800 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x1480097a8 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    | | | | `-UnaryOperator 0x1480097e8 <col:20, col:21> 'int' prefix '-'
    | | | |   `-IntegerLiteral 0x1480097c8 <col:21> 'int' 1
    | | | `-CompoundStmt 0x1480098a0 <col:24, line:17:9>
    | | |   `-GotoStmt 0x148009888 <line:16:13, col:18> 'out' 0x148009838
    | | |-BinaryOperator 0x148009a68 <line:18:9, col:43> '<dependent type>' contains-errors '='
    | | | |-CXXDependentScopeMemberExpr 0x148009920 <col:9, col:16> '<dependent type>' contains-errors lvalue ->fc_mode
    | | | | `-RecoveryExpr 0x1480098f8 <col:9> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x1480098d8 <col:9> 'int *' lvalue ParmVar 0x13f82e6a8 'credp' 'int *'
    | | | `-BinaryOperator 0x148009a48 <col:26, col:43> '<dependent type>' contains-errors '|'
    | | |   |-CXXDependentScopeMemberExpr 0x148009988 <col:26, col:33> '<dependent type>' contains-errors lvalue ->fc_mode
    | | |   | `-RecoveryExpr 0x148009968 <col:26> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x148009a28 <col:43> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x148009f48 <line:20:9, line:24:9> has_else
    | | | |-BinaryOperator 0x148009b48 <line:20:13, col:36> '<dependent type>' contains-errors '&'
    | | | | |-CXXDependentScopeMemberExpr 0x148009aa8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->export_flags
    | | | | | `-RecoveryExpr 0x148009a88 <col:13> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x148009b28 <col:36> '<dependent type>' contains-errors lvalue
    | | | |-CompoundStmt 0x148009d40 <col:52, line:22:9>
    | | | | `-BinaryOperator 0x148009d20 <line:21:13, col:55> 'int' contains-errors '='
    | | | |   |-DeclRefExpr 0x148009b68 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    | | | |   `-CallExpr 0x148009ce8 <col:19, col:55> '<dependent type>' contains-errors
    | | | |     |-DeclRefExpr 0x148009c68 <col:19> 'int ()' Function 0x148009bb0 'local_set_xattrat' 'int ()'
    | | | |     |-DeclRefExpr 0x148009c88 <col:37> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    | | | |     |-DeclRefExpr 0x148009ca8 <col:44> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    | | | |     `-RecoveryExpr 0x148009cc8 <col:50> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x148009f30 <line:22:16, line:24:9>
    | | |   `-BinaryOperator 0x148009f10 <line:23:13, col:66> 'int' contains-errors '='
    | | |     |-DeclRefExpr 0x148009d58 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    | | |     `-CallExpr 0x148009ed8 <col:19, col:66> '<dependent type>' contains-errors
    | | |       |-DeclRefExpr 0x148009e58 <col:19> 'int ()' Function 0x148009da0 'local_set_mapped_file_attrat' 'int ()'
    | | |       |-DeclRefExpr 0x148009e78 <col:48> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    | | |       |-DeclRefExpr 0x148009e98 <col:55> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    | | |       `-RecoveryExpr 0x148009eb8 <col:61> '<dependent type>' contains-errors lvalue
    | | `-IfStmt 0x14800a088 <line:25:9, line:27:9>
    | |   |-BinaryOperator 0x148009fe8 <line:25:13, col:21> 'int' '=='
    | |   | |-ImplicitCastExpr 0x148009fd0 <col:13> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x148009f78 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    | |   | `-UnaryOperator 0x148009fb8 <col:20, col:21> 'int' prefix '-'
    | |   |   `-IntegerLiteral 0x148009f98 <col:21> 'int' 1
    | |   `-CompoundStmt 0x14800a070 <col:24, line:27:9>
    | |     `-GotoStmt 0x14800a058 <line:26:13, col:18> 'err_end' 0x14800a008
    | `-IfStmt 0x14800bc10 <line:28:12, line:38:5>
    |   |-BinaryOperator 0x14800b6c0 <line:28:16, line:29:39> 'int' contains-errors '||'
    |   | |-BinaryOperator 0x14800b660 <line:28:16, col:39> '<dependent type>' contains-errors '&'
    |   | | |-CXXDependentScopeMemberExpr 0x14800a100 <col:16, col:24> '<dependent type>' contains-errors lvalue ->export_flags
    |   | | | `-RecoveryExpr 0x14800a0e0 <col:16> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x14800b640 <col:39> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x14800b6a0 <line:29:16, col:39> '<dependent type>' contains-errors '&'
    |   |   |-CXXDependentScopeMemberExpr 0x14800a1a0 <col:16, col:24> '<dependent type>' contains-errors lvalue ->export_flags
    |   |   | `-RecoveryExpr 0x14800a180 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x14800b680 <col:39> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x14800bbe0 <col:53, line:38:5>
    |     |-BinaryOperator 0x14800b800 <line:30:9, col:50> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x14800b6e0 <col:9> 'int' lvalue Var 0x13f82e888 'err' 'int'
    |     | `-CallExpr 0x14800b7c8 <col:15, col:50> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14800b700 <col:15> 'int ()' Function 0x1480095a8 'mkdirat' 'int ()'
    |     |   |-DeclRefExpr 0x14800b720 <col:23> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x14800b740 <col:30> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    |     |   `-CXXDependentScopeMemberExpr 0x14800b780 <col:36, col:43> '<dependent type>' contains-errors lvalue ->fc_mode
    |     |     `-RecoveryExpr 0x14800b760 <col:36> '<dependent type>' contains-errors lvalue
    |     |-IfStmt 0x14800b8e0 <line:31:9, line:33:9>
    |     | |-BinaryOperator 0x14800b890 <line:31:13, col:21> 'int' '=='
    |     | | |-ImplicitCastExpr 0x14800b878 <col:13> 'int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x14800b820 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    |     | | `-UnaryOperator 0x14800b860 <col:20, col:21> 'int' prefix '-'
    |     | |   `-IntegerLiteral 0x14800b840 <col:21> 'int' 1
    |     | `-CompoundStmt 0x14800b8c8 <col:24, line:33:9>
    |     |   `-GotoStmt 0x14800b8b0 <line:32:13, col:18> 'out' 0x148009838
    |     |-BinaryOperator 0x14800bae0 <line:34:9, col:68> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x14800b900 <col:9> 'int' lvalue Var 0x13f82e888 'err' 'int'
    |     | `-CallExpr 0x14800baa0 <col:15, col:68> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14800ba00 <col:15> 'int ()' Function 0x14800b948 'local_set_cred_passthrough' 'int ()'
    |     |   |-RecoveryExpr 0x14800ba20 <col:42> '<dependent type>' contains-errors lvalue
    |     |   |-DeclRefExpr 0x14800ba40 <col:50> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    |     |   |-DeclRefExpr 0x14800ba60 <col:57> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    |     |   `-RecoveryExpr 0x14800ba80 <col:63> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x14800bbc0 <line:35:9, line:37:9>
    |       |-BinaryOperator 0x14800bb70 <line:35:13, col:21> 'int' '=='
    |       | |-ImplicitCastExpr 0x14800bb58 <col:13> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x14800bb00 <col:13> 'int' lvalue Var 0x13f82e888 'err' 'int'
    |       | `-UnaryOperator 0x14800bb40 <col:20, col:21> 'int' prefix '-'
    |       |   `-IntegerLiteral 0x14800bb20 <col:21> 'int' 1
    |       `-CompoundStmt 0x14800bba8 <col:24, line:37:9>
    |         `-GotoStmt 0x14800bb90 <line:36:13, col:18> 'err_end' 0x14800a008
    |-GotoStmt 0x14800bc60 <line:39:5, col:10> 'out' 0x148009838
    |-LabelStmt 0x14800be60 <line:41:1, line:42:54> 'err_end'
    | `-CallExpr 0x14800be28 <col:5, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14800bd58 <col:5> 'int ()' Function 0x14800bca0 'unlinkat_preserve_errno' 'int ()'
    |   |-DeclRefExpr 0x14800bd78 <col:29> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    |   |-DeclRefExpr 0x14800bd98 <col:36> 'const char *' lvalue ParmVar 0x13f82e628 'name' 'const char *'
    |   `-RecoveryExpr 0x14800be08 <col:42> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14800c028 <line:43:1, line:44:31> 'out'
    | `-CallExpr 0x14800bfe8 <col:5, col:31> 'int'
    |   |-ImplicitCastExpr 0x14800bfd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14800bf60 <col:5> 'int ()' Function 0x14800bea8 'close_preserve_errno' 'int ()'
    |   `-ImplicitCastExpr 0x14800c010 <col:26> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14800bf80 <col:26> 'int' lvalue Var 0x13f82e958 'dirfd' 'int'
    `-ReturnStmt 0x14800c080 <line:45:5, col:12>
      `-ImplicitCastExpr 0x14800c068 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14800c048 <col:12> 'int' lvalue Var 0x13f82e888 'err' 'int'
