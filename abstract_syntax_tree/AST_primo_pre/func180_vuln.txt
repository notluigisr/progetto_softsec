`-FunctionDecl 0x15301f700  line:1:8 invalid BuildOffsetAdd 'void (int *, int **, int **, int *, int, int)'
  |-ParmVarDecl 0x15301f328 <col:23, col:37> col:37 invalid check 'int *'
  |-ParmVarDecl 0x15301f3e0 <line:2:23, col:30> col:30 invalid add 'int **'
  |-ParmVarDecl 0x15301f468 <line:3:23, col:35> col:35 referenced invalid constant 'int **'
  |-ParmVarDecl 0x15301f4e8 <line:4:23, col:31> col:31 invalid original_value 'int *'
  |-ParmVarDecl 0x15301f568 <line:5:23, col:38> col:38 referenced invalid representation 'int'
  |-ParmVarDecl 0x15301f5e8 <line:6:23, col:31> col:31 invalid new_offset 'int'
  `-CompoundStmt 0x153041d10 <col:43, line:24:3>
    |-BinaryOperator 0x153040508 <line:7:5, col:55> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x153040440 <col:5, col:16> '<dependent type>' contains-errors '*'
    | | |-RecoveryExpr 0x15301f7f8 <col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x15301f7d8 <col:5> 'int **' lvalue ParmVar 0x15301f468 'constant' 'int **'
    | | `-RecoveryExpr 0x153040420 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x1530404e0 <col:31, col:55> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15301f9b0 <col:31> 'int ()' Function 0x15301f8f8 'new' 'int ()'
    |   `-CallExpr 0x1530404c0 <col:35, col:54> '<dependent type>' contains-errors
    |     `-RecoveryExpr 0x153040498 <col:35, col:49> '<dependent type>' contains-errors lvalue
    |       `-CallExpr 0x153040478 <col:35, col:46> 'int'
    |         `-ImplicitCastExpr 0x153040460 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |           `-DeclRefExpr 0x15303feb8 <col:35> 'int ()' Function 0x15303fe00 'BasicBlock' 'int ()'
    `-IfStmt 0x153041c90 <line:9:5, line:22:5> has_else
      |-BinaryOperator 0x153040788 <line:9:9, col:17> 'int' contains-errors '=='
      | |-UnaryOperator 0x153040750 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | `-ImplicitCastExpr 0x153040738 <col:10> '<dependent type>' contains-errors <LValueToRValue>
      | |   `-RecoveryExpr 0x153040680 <col:10> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x153040768 <col:17> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x153040d48 <col:23, line:19:5>
      | |-CallExpr 0x153040858 <line:10:7, col:39> '<dependent type>' contains-errors
      | | |-CXXDependentScopeMemberExpr 0x1530407f0 <col:7, col:21> '<dependent type>' contains-errors lvalue ->InsertBefore
      | | | `-RecoveryExpr 0x1530407c8 <col:7> '<dependent type>' contains-errors lvalue
      | | |   `-DeclRefExpr 0x1530407a8 <col:7> 'int **' lvalue ParmVar 0x15301f468 'constant' 'int **'
      | | `-RecoveryExpr 0x153040838 <col:34> '<dependent type>' contains-errors lvalue
      | |-BinaryOperator 0x153040a08 <line:14:7, col:38> '<dependent type>' contains-errors '='
      | | |-UnaryOperator 0x153040908 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | | `-ImplicitCastExpr 0x1530408f0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
      | | |   `-RecoveryExpr 0x1530408d0 <col:8> '<dependent type>' contains-errors lvalue
      | | `-CallExpr 0x1530409e0 <col:14, col:38> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x153040920 <col:14> 'int ()' Function 0x15301f8f8 'new' 'int ()'
      | |   `-CallExpr 0x1530409c0 <col:18, col:37> '<dependent type>' contains-errors
      | |     `-RecoveryExpr 0x153040998 <col:18, col:32> '<dependent type>' contains-errors lvalue
      | |       `-CallExpr 0x153040978 <col:18, col:29> 'int'
      | |         `-ImplicitCastExpr 0x153040960 <col:18> 'int (*)()' <FunctionToPointerDecay>
      | |           `-DeclRefExpr 0x153040940 <col:18> 'int ()' Function 0x15303fe00 'BasicBlock' 'int ()'
      | |-CallExpr 0x153040c20 <line:17:7, col:50> '<dependent type>' contains-errors
      | | |-CXXDependentScopeMemberExpr 0x153040bb8 <col:7, col:15> '<dependent type>' contains-errors lvalue ->AssumeRepresentation
      | | | `-ParenExpr 0x153040b98 <col:7, col:12> '<dependent type>' contains-errors
      | | |   `-UnaryOperator 0x153040b80 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | |     `-ImplicitCastExpr 0x153040b68 <col:9> '<dependent type>' contains-errors <LValueToRValue>
      | | |       `-RecoveryExpr 0x153040b48 <col:9> '<dependent type>' contains-errors lvalue
      | | `-RecoveryExpr 0x153040c00 <col:36> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x153040d20 <line:18:7, col:33> '<dependent type>' contains-errors
      |   |-CXXDependentScopeMemberExpr 0x153040cb8 <col:7, col:15> '<dependent type>' contains-errors lvalue ->InsertBefore
      |   | `-ParenExpr 0x153040c98 <col:7, col:12> '<dependent type>' contains-errors
      |   |   `-UnaryOperator 0x153040c80 <col:8, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow
      |   |     `-ImplicitCastExpr 0x153040c68 <col:9> '<dependent type>' contains-errors <LValueToRValue>
      |   |       `-RecoveryExpr 0x153040c48 <col:9> '<dependent type>' contains-errors lvalue
      |   `-RecoveryExpr 0x153040d00 <col:28> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x153041c80 <line:19:12, line:22:5>
