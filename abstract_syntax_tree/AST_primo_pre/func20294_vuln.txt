`-FunctionDecl 0x12a1417e8  line:1:5 invalid dccp_recvmsg 'int (struct kiocb *, struct sock *, struct msghdr *, int, int, int, int *)'
  |-ParmVarDecl 0x12a128e48 <col:18, col:32> col:32 iocb 'struct kiocb *'
  |-ParmVarDecl 0x12a141228 <col:38, col:51> col:51 used sk 'struct sock *'
  |-ParmVarDecl 0x12a1413f8 <col:55, col:70> col:70 used msg 'struct msghdr *'
  |-ParmVarDecl 0x12a141490 <line:2:4, col:11> col:11 referenced invalid len 'int'
  |-ParmVarDecl 0x12a141510 <col:16, col:20> col:20 used nonblock 'int'
  |-ParmVarDecl 0x12a141590 <col:30, col:34> col:34 used flags 'int'
  |-ParmVarDecl 0x12a141648 <col:41, col:46> col:46 addr_len 'int *'
  `-CompoundStmt 0x12a143ba0 <line:3:1, line:103:1>
    |-DeclStmt 0x12a141ab8 <line:4:2, col:27>
    | |-RecordDecl 0x12a1418c8 <col:8, col:15> col:15 struct dccp_hdr
    | `-VarDecl 0x12a141a38 <col:2, col:25> col:25 used dh 'const struct dccp_hdr *'
    |-DeclStmt 0x12a141b50 <line:5:2, col:12>
    | `-VarDecl 0x12a141ae8 <col:2, col:7> col:7 used timeo 'long'
    |-CallExpr 0x12a141d48 <line:7:2, col:14> 'int'
    | |-ImplicitCastExpr 0x12a141d30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12a141cc0 <col:2> 'int ()' Function 0x12a141c08 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x12a141d70 <col:12> 'struct sock *' <LValueToRValue>
    |   `-DeclRefExpr 0x12a141ce0 <col:12> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    |-IfStmt 0x12a142008 <line:9:2, line:12:2>
    | |-BinaryOperator 0x12a141e40 <line:9:6, col:22> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12a141dc0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12a141d88 <col:6> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | `-RecoveryExpr 0x12a141e20 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a141fe8 <col:35, line:12:2>
    |   |-BinaryOperator 0x12a141f60 <line:10:3, col:10> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12a141e80 <col:3> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12a141e60 <col:3> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    |   | `-UnaryOperator 0x12a141f48 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x12a141f30 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x12a141f10 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12a141fd0 <line:11:3, col:8> 'out' 0x12a141f80
    |-BinaryOperator 0x12b808c18 <line:14:2, col:36> 'long' '='
    | |-DeclRefExpr 0x12a142028 <col:2> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'
    | `-ImplicitCastExpr 0x12b808c00 <col:10, col:36> 'long' <IntegralCast>
    |   `-CallExpr 0x12a1421a0 <col:10, col:36> 'int'
    |     |-ImplicitCastExpr 0x12a142188 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a142128 <col:10> 'int ()' Function 0x12a142070 'sock_rcvtimeo' 'int ()'
    |     |-ImplicitCastExpr 0x12a1421d0 <col:24> 'struct sock *' <LValueToRValue>
    |     | `-DeclRefExpr 0x12a142148 <col:24> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    |     `-ImplicitCastExpr 0x12a1421e8 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12a142168 <col:28> 'int' lvalue ParmVar 0x12a141510 'nonblock' 'int'
    |-DoStmt 0x12a1439b8 <line:16:2, line:99:12>
    | |-CompoundStmt 0x12a143900 <line:16:5, line:99:2>
    | | |-DeclStmt 0x12b808fc8 <line:17:3, col:56>
    | | | |-RecordDecl 0x12b808c38 <col:3, col:10> col:10 struct sk_buff
    | | | `-VarDecl 0x12b808da8 <col:3, col:55> col:19 used skb 'struct sk_buff *' cinit
    | | |   `-CallExpr 0x12b808f88 <col:25, col:55> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x12b808ef0 <col:25> 'int ()' Function 0x12b808e38 'skb_peek' 'int ()'
    | | |     `-UnaryOperator 0x12b808f70 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |       `-RecoveryExpr 0x12b808f48 <col:35, col:39> '<dependent type>' contains-errors lvalue
    | | |         `-DeclRefExpr 0x12b808f10 <col:35> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | |-IfStmt 0x12b8090e0 <line:19:3, line:20:9>
    | | | |-BinaryOperator 0x12b809058 <line:19:7, col:14> 'int' contains-errors '=='
    | | | | |-DeclRefExpr 0x12b808fe0 <col:7> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | | | `-RecoveryExpr 0x12b809038 <col:14> '<dependent type>' contains-errors lvalue
    | | | `-GotoStmt 0x12b8090c8 <line:20:4, col:9> 'verify_sock_status' 0x12b809078
    | | |-BinaryOperator 0x12b8092b0 <line:22:3, col:20> 'const struct dccp_hdr *' contains-errors '='
    | | | |-DeclRefExpr 0x12b809100 <col:3> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'
    | | | `-ImplicitCastExpr 0x12b809298 <col:8, col:20> 'const struct dccp_hdr *' contains-errors <IntegralToPointer>
    | | |   `-CallExpr 0x12b809258 <col:8, col:20> 'int' contains-errors
    | | |     |-ImplicitCastExpr 0x12b809240 <col:8> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x12b809200 <col:8> 'int ()' Function 0x12b809148 'dccp_hdr' 'int ()'
    | | |     `-ImplicitCastExpr 0x12b809280 <col:17> 'struct sk_buff *' contains-errors <LValueToRValue>
    | | |       `-DeclRefExpr 0x12b809220 <col:17> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | |-SwitchStmt 0x12b809348 <line:24:3, line:43:3>
    | | | |-ImplicitCastExpr 0x12b809330 <line:24:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-RecoveryExpr 0x12b809308 <col:11, col:15> '<dependent type>' contains-errors lvalue
    | | | |   `-DeclRefExpr 0x12b8092d0 <col:11> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'
    | | | `-CompoundStmt 0x12a142318 <col:27, line:43:3>
    | | |   |-GotoStmt 0x12b8093f0 <line:27:4, col:9> 'found_ok_skb' 0x12b8093a0
    | | |   |-IfStmt 0x12b809628 <line:31:4, line:32:33>
    | | |   | |-RecoveryExpr 0x12b809490 <line:31:8, col:26> '_Bool' contains-errors
    | | |   | `-CallExpr 0x12b8095e8 <line:32:5, col:33> 'int'
    | | |   |   |-ImplicitCastExpr 0x12b8095d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | |   |   | `-DeclRefExpr 0x12b809590 <col:5> 'int ()' Function 0x12b8094d8 'dccp_finish_passive_close' 'int ()'
    | | |   |   `-ImplicitCastExpr 0x12b809610 <col:31> 'struct sock *' <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x12b8095b0 <col:31> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | |   |-CallExpr 0x12b809948 <line:35:4, line:36:43> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x12b809740 <line:35:4> 'int ()' Function 0x12b809688 'dccp_pr_debug' 'int ()'
    | | |   | |-StringLiteral 0x12b8097a0 <col:18> 'char[4]' lvalue "STR"
    | | |   | `-CallExpr 0x12b809920 <line:36:11, col:42> '<dependent type>' contains-errors
    | | |   |   |-DeclRefExpr 0x12b8098a0 <col:11> 'int ()' Function 0x12b8097e8 'dccp_packet_name' 'int ()'
    | | |   |   `-RecoveryExpr 0x12b8098f8 <col:28, col:32> '<dependent type>' contains-errors lvalue
    | | |   |     `-DeclRefExpr 0x12b8098c0 <col:28> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'
    | | |   |-BinaryOperator 0x12b8099e0 <line:37:4, col:10> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12b809998 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12b809978 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-IntegerLiteral 0x12b8099c0 <col:10> 'int' 0
    | | |   |-GotoStmt 0x12b809a50 <line:38:4, col:9> 'found_fin_ok' 0x12b809a00
    | | |   `-DefaultStmt 0x12b809b80 <line:39:3, line:41:43>
    | | |     `-CallExpr 0x12b809b50 <line:40:4, line:41:43> '<dependent type>' contains-errors
    | | |       |-DeclRefExpr 0x12b809a68 <line:40:4> 'int ()' Function 0x12b809688 'dccp_pr_debug' 'int ()'
    | | |       |-StringLiteral 0x12b809a88 <col:18> 'char[4]' lvalue "STR"
    | | |       `-CallExpr 0x12b809b28 <line:41:11, col:42> '<dependent type>' contains-errors
    | | |         |-DeclRefExpr 0x12b809aa8 <col:11> 'int ()' Function 0x12b8097e8 'dccp_packet_name' 'int ()'
    | | |         `-RecoveryExpr 0x12b809b00 <col:28, col:32> '<dependent type>' contains-errors lvalue
    | | |           `-DeclRefExpr 0x12b809ac8 <col:28> 'const struct dccp_hdr *' lvalue Var 0x12a141a38 'dh' 'const struct dccp_hdr *'
    | | |-LabelStmt 0x12a142568 <line:44:1, line:48:3> 'verify_sock_status'
    | | | `-IfStmt 0x12a142548 <line:45:3, line:48:3>
    | | |   |-RecoveryExpr 0x12a142478 <line:45:7, col:30> '_Bool' contains-errors
    | | |   `-CompoundStmt 0x12a142528 <col:33, line:48:3>
    | | |     |-BinaryOperator 0x12a142500 <line:46:4, col:10> '<dependent type>' contains-errors '='
    | | |     | |-RecoveryExpr 0x12a1424b8 <col:4> '<dependent type>' contains-errors lvalue
    | | |     | | `-DeclRefExpr 0x12a142498 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |     | `-IntegerLiteral 0x12a1424e0 <col:10> 'int' 0
    | | |     `-BreakStmt 0x12a142520 <line:47:4>
    | | |-IfStmt 0x12a1427f0 <line:50:3, line:53:3>
    | | | |-RecoveryExpr 0x12a1425c0 <line:50:7, col:11> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12a142588 <col:7> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | | `-CompoundStmt 0x12a1427d0 <col:19, line:53:3>
    | | |   |-BinaryOperator 0x12a1427a8 <line:51:4, col:23> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12a142608 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12a1425e8 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-CallExpr 0x12a142768 <col:10, col:23> 'int'
    | | |   |   |-ImplicitCastExpr 0x12a142750 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |   |   | `-DeclRefExpr 0x12a142710 <col:10> 'int ()' Function 0x12a142658 'sock_error' 'int ()'
    | | |   |   `-ImplicitCastExpr 0x12a142790 <col:21> 'struct sock *' <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x12a142730 <col:21> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | |   `-BreakStmt 0x12a1427c8 <line:52:4>
    | | |-IfStmt 0x12a142940 <line:55:3, line:58:3>
    | | | |-RecoveryExpr 0x12a142870 <line:55:7, col:25> '_Bool' contains-errors
    | | | `-CompoundStmt 0x12a142920 <col:39, line:58:3>
    | | |   |-BinaryOperator 0x12a1428f8 <line:56:4, col:10> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12a1428b0 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12a142890 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-IntegerLiteral 0x12a1428d8 <col:10> 'int' 0
    | | |   `-BreakStmt 0x12a142918 <line:57:4>
    | | |-IfStmt 0x12a142b80 <line:60:3, line:68:3>
    | | | |-RecoveryExpr 0x12a1429c0 <line:60:7, col:23> '_Bool' contains-errors
    | | | `-CompoundStmt 0x12a142b58 <col:36, line:68:3>
    | | |   |-IfStmt 0x12a142aa8 <line:61:4, line:65:4>
    | | |   | |-RecoveryExpr 0x12a142a20 <line:61:8, col:32> '_Bool' contains-errors
    | | |   | `-CompoundStmt 0x12a142a90 <col:35, line:65:4>
    | | |   |   `-BreakStmt 0x12a142a88 <line:64:5>
    | | |   |-BinaryOperator 0x12a142b30 <line:66:4, col:10> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12a142ae8 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12a142ac8 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-IntegerLiteral 0x12a142b10 <col:10> 'int' 0
    | | |   `-BreakStmt 0x12a142b50 <line:67:4>
    | | |-IfStmt 0x12a142c58 <line:70:3, line:73:3>
    | | | |-UnaryOperator 0x12a142bd8 <line:70:7, col:8> 'int' prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x12a142bc0 <col:8> 'long' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x12a142ba0 <col:8> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'
    | | | `-CompoundStmt 0x12a142c40 <col:15, line:73:3>
    | | |   `-BreakStmt 0x12a142c38 <line:72:4>
    | | |-IfStmt 0x12a142fa0 <line:75:3, line:78:3>
    | | | |-RecoveryExpr 0x12a142d78 <line:75:7, col:29> '_Bool' contains-errors
    | | | `-CompoundStmt 0x12a142f80 <col:32, line:78:3>
    | | |   |-BinaryOperator 0x12a142f58 <line:76:4, col:31> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12a142db8 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12a142d98 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-CallExpr 0x12a142f18 <col:10, col:31> 'int'
    | | |   |   |-ImplicitCastExpr 0x12a142f00 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |   |   | `-DeclRefExpr 0x12a142ec0 <col:10> 'int ()' Function 0x12a142e08 'sock_intr_errno' 'int ()'
    | | |   |   `-ImplicitCastExpr 0x12a142f40 <col:26> 'long' <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x12a142ee0 <col:26> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'
    | | |   `-BreakStmt 0x12a142f78 <line:77:4>
    | | |-CallExpr 0x12a143160 <line:80:3, col:26> 'int'
    | | | |-ImplicitCastExpr 0x12a143148 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x12a1430a0 <col:3> 'int ()' Function 0x12a142fe8 'sk_wait_data' 'int ()'
    | | | |-ImplicitCastExpr 0x12a143190 <col:16> 'struct sock *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a1430c0 <col:16> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    | | | `-UnaryOperator 0x12a143130 <col:20, col:21> 'long *' prefix '&' cannot overflow
    | | |   `-DeclRefExpr 0x12a1430e0 <col:21> 'long' lvalue Var 0x12a141ae8 'timeo' 'long'
    | | |-ContinueStmt 0x12a1431a8 <line:81:3>
    | | |-LabelStmt 0x12a143460 <line:82:2, line:85:8> 'found_ok_skb'
    | | | `-IfStmt 0x12a143430 <line:83:3, line:85:8> has_else
    | | |   |-BinaryOperator 0x12a143240 <line:83:7, col:18> 'int' contains-errors '>'
    | | |   | |-RecoveryExpr 0x12a1431b0 <col:7> '<dependent type>' contains-errors lvalue
    | | |   | `-RecoveryExpr 0x12a143218 <col:13, col:18> '<dependent type>' contains-errors lvalue
    | | |   |   `-DeclRefExpr 0x12a1431d0 <col:13> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | |   |-BinaryOperator 0x12a143308 <line:84:4, col:15> '<dependent type>' contains-errors '='
    | | |   | |-RecoveryExpr 0x12a143280 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | | `-DeclRefExpr 0x12a143260 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   | `-RecoveryExpr 0x12a1432e0 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | | |   |   `-DeclRefExpr 0x12a1432a8 <col:10> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | |   `-NullStmt 0x12a143428 <line:85:8>
    | | |-IfStmt 0x12a1436e8 <line:88:3, line:92:3>
    | | | |-CallExpr 0x12a143640 <line:88:7, col:56> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x12a143560 <col:7> 'int ()' Function 0x12a1434a8 'skb_copy_datagram_iovec' 'int ()'
    | | | | |-DeclRefExpr 0x12a143580 <col:31> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | | | |-IntegerLiteral 0x12a1435a0 <col:36> 'int' 0
    | | | | |-RecoveryExpr 0x12a1435f8 <col:39, col:44> '<dependent type>' contains-errors lvalue
    | | | | | `-DeclRefExpr 0x12a1435c0 <col:39> 'struct msghdr *' lvalue ParmVar 0x12a1413f8 'msg' 'struct msghdr *'
    | | | | `-RecoveryExpr 0x12a143620 <col:53> '<dependent type>' contains-errors lvalue
    | | | `-CompoundStmt 0x12a1436d0 <col:59, line:92:3>
    | | |   `-BreakStmt 0x12a1436c8 <line:91:4>
    | | |-IfStmt 0x12a143810 <line:93:3, line:94:15>
    | | | |-RecoveryExpr 0x12a143728 <line:93:7, col:15> '_Bool' contains-errors
    | | | `-BinaryOperator 0x12a1437f0 <line:94:4, col:15> '<dependent type>' contains-errors '='
    | | |   |-RecoveryExpr 0x12a143768 <col:4> '<dependent type>' contains-errors lvalue
    | | |   | `-DeclRefExpr 0x12a143748 <col:4> 'int' lvalue ParmVar 0x12a141490 'len' 'int'
    | | |   `-RecoveryExpr 0x12a1437c8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x12a143790 <col:10> 'struct sk_buff *' contains-errors lvalue Var 0x12b808da8 'skb' 'struct sk_buff *'
    | | |-LabelStmt 0x12a1438d8 <line:95:2, col:14> 'found_fin_ok'
    | | | `-NullStmt 0x12a1438d0 <col:14>
    | | `-BreakStmt 0x12a1438f8 <line:98:3>
    | `-IntegerLiteral 0x12a143998 <line:99:11> 'int' 1
    |-LabelStmt 0x12a143b50 <line:100:1, line:101:17> 'out'
    | `-CallExpr 0x12a143b10 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x12a143af8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a143ab8 <col:2> 'int ()' Function 0x12a143a00 'release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x12a143b38 <col:15> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a143ad8 <col:15> 'struct sock *' lvalue ParmVar 0x12a141228 'sk' 'struct sock *'
    `-ReturnStmt 0x12a143b90 <line:102:2, col:9>
      `-RecoveryExpr 0x12a143b70 <col:9> '<dependent type>' contains-errors lvalue
