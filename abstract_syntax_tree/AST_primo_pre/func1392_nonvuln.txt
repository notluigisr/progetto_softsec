`-FunctionDecl 0x138128318  line:1:6 invalid check_reorganise_list 'int (int *, int *, int)'
  |-ParmVarDecl 0x138128128 <col:28, col:44> col:44 referenced invalid new_part_info 'int *'
  |-ParmVarDecl 0x1381281a8 <line:2:28, col:44> col:44 referenced invalid old_part_info 'int *'
  |-ParmVarDecl 0x138128228 <line:3:28, <invalid sloc>> col:32 invalid 'int'
  `-CompoundStmt 0x13000b6b0 <line:4:1, line:33:1>
    |-DeclStmt 0x1381284f0 <line:5:3, col:28>
    | |-VarDecl 0x1381283f0 <col:3, col:8> col:8 used new_count 'int'
    | `-VarDecl 0x138128470 <col:3, col:19> col:19 used old_count 'int'
    |-DeclStmt 0x138128638 <line:6:3, col:57>
    | `-VarDecl 0x138128520 <col:3, col:49> col:8 used num_new_parts 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x1381285f0 <col:23, col:49> '<dependent type>' contains-errors lvalue .elements
    |     `-CXXDependentScopeMemberExpr 0x1381285a8 <col:23, col:38> '<dependent type>' contains-errors lvalue ->partitions
    |       `-RecoveryExpr 0x138128588 <col:23> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x138128780 <line:7:3, col:57>
    | `-VarDecl 0x138128668 <col:3, col:49> col:8 used num_old_parts 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x138128738 <col:23, col:49> '<dependent type>' contains-errors lvalue .elements
    |     `-CXXDependentScopeMemberExpr 0x1381286f0 <col:23, col:38> '<dependent type>' contains-errors lvalue ->partitions
    |       `-RecoveryExpr 0x1381286d0 <col:23> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x130009568 <line:10:3, col:19> 'int'
    | |-ImplicitCastExpr 0x130009550 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1300094a0 <col:3> 'int ()' Function 0x1300093e8 'DBUG_ENTER' 'int ()'
    | `-ImplicitCastExpr 0x130009590 <col:14> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x130009500 <col:14> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x1300095e8 <line:12:3, col:14> 'int' '='
    | |-DeclRefExpr 0x1300095a8 <col:3> 'int' lvalue Var 0x1381283f0 'new_count' 'int'
    | `-IntegerLiteral 0x1300095c8 <col:14> 'int' 0
    `-DoStmt 0x13000b670 <line:13:3, line:31:37>
      |-CompoundStmt 0x13000b5b0 <line:14:3, line:31:3>
      | |-DeclStmt 0x130009d00 <line:16:5, col:53>
      | | `-VarDecl 0x1300097c8 <col:5, col:39> col:11 used new_name 'char *' cinit
      | |   `-CXXDependentScopeMemberExpr 0x130009cb8 <col:21, col:39> '<dependent type>' contains-errors lvalue ->partition_name
      | |     `-ParenExpr 0x130009c98 <col:21, col:36> '<dependent type>' contains-errors lvalue
      | |       `-RecoveryExpr 0x130009c70 <col:22, col:34> '<dependent type>' contains-errors lvalue
      | |         `-DeclRefExpr 0x130009830 <col:22> 'int ()' Function 0x130009258 'new_parts_it' 'int ()'
      | |-UnaryOperator 0x130009d38 <line:17:5, col:14> 'int' postfix '++'
      | | `-DeclRefExpr 0x130009d18 <col:5> 'int' lvalue Var 0x1381283f0 'new_count' 'int'
      | |-BinaryOperator 0x130009d90 <line:18:5, col:16> 'int' '='
      | | |-DeclRefExpr 0x130009d50 <col:5> 'int' lvalue Var 0x138128470 'old_count' 'int'
      | | `-IntegerLiteral 0x130009d70 <col:16> 'int' 0
      | `-DoStmt 0x13000b590 <line:19:5, line:30:39>
      |   |-CompoundStmt 0x13000b4d0 <line:20:5, line:30:5>
      |   | |-DeclStmt 0x130009ee0 <line:21:7, col:55>
      |   | | `-VarDecl 0x130009dc8 <col:7, col:41> col:13 used old_name 'char *' cinit
      |   | |   `-CXXDependentScopeMemberExpr 0x130009e98 <col:23, col:41> '<dependent type>' contains-errors lvalue ->partition_name
      |   | |     `-ParenExpr 0x130009e78 <col:23, col:38> '<dependent type>' contains-errors lvalue
      |   | |       `-RecoveryExpr 0x130009e50 <col:24, col:36> '<dependent type>' contains-errors lvalue
      |   | |         `-DeclRefExpr 0x130009e30 <col:24> 'int ()' Function 0x130009648 'old_parts_it' 'int ()'
      |   | |-UnaryOperator 0x130009f18 <line:22:7, col:16> 'int' postfix '++'
      |   | | `-DeclRefExpr 0x130009ef8 <col:7> 'int' lvalue Var 0x138128470 'old_count' 'int'
      |   | |-IfStmt 0x13000a0d0 <line:23:7, line:24:9>
      |   | | |-BinaryOperator 0x13000a0a8 <line:23:11, col:42> 'int' contains-errors '&&'
      |   | | | |-RecoveryExpr 0x13000a038 <col:11> '<dependent type>' contains-errors lvalue
      |   | | | `-BinaryOperator 0x13000a088 <col:29, col:42> 'int' '=='
      |   | | |   |-ImplicitCastExpr 0x13000a058 <col:29> 'int' <LValueToRValue>
      |   | | |   | `-DeclRefExpr 0x130009f48 <col:29> 'int' lvalue Var 0x138128470 'old_count' 'int'
      |   | | |   `-ImplicitCastExpr 0x13000a070 <col:42> 'int' <LValueToRValue>
      |   | | |     `-DeclRefExpr 0x130009f68 <col:42> 'int' lvalue Var 0x1381283f0 'new_count' 'int'
      |   | | `-BreakStmt 0x13000a0c8 <line:24:9>
      |   | `-IfStmt 0x13000b4b0 <line:25:7, line:29:7>
      |   |   |-RecoveryExpr 0x13000b240 <line:25:11, col:67> '_Bool' contains-errors
      |   |   `-CompoundStmt 0x13000b4a0 <line:26:7, line:29:7>
      |   `-BinaryOperator 0x13000b570 <line:30:14, col:26> 'int' contains-errors '<'
      |     |-ImplicitCastExpr 0x13000b540 <col:14> 'int' <LValueToRValue>
      |     | `-DeclRefExpr 0x13000b500 <col:14> 'int' lvalue Var 0x138128470 'old_count' 'int'
      |     `-ImplicitCastExpr 0x13000b558 <col:26> 'int' contains-errors <LValueToRValue>
      |       `-DeclRefExpr 0x13000b520 <col:26> 'int' contains-errors lvalue Var 0x138128668 'num_old_parts' 'int'
      `-BinaryOperator 0x13000b650 <line:31:12, col:24> 'int' contains-errors '<'
        |-ImplicitCastExpr 0x13000b620 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x13000b5e0 <col:12> 'int' lvalue Var 0x1381283f0 'new_count' 'int'
        `-ImplicitCastExpr 0x13000b638 <col:24> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x13000b600 <col:24> 'int' contains-errors lvalue Var 0x138128520 'num_new_parts' 'int'
