`-FunctionDecl 0x146128288  line:1:6 invalid jpc_bitstream_getbits 'long (int *, int)'
  |-ParmVarDecl 0x146128128 <col:28, col:45> col:45 invalid bitstream 'int *'
  |-ParmVarDecl 0x1461281a8 <col:56, col:60> col:60 used n 'int'
  `-CompoundStmt 0x1468090c8 <line:2:1, line:18:1>
    |-DeclStmt 0x1461283c0 <line:3:2, col:8>
    | `-VarDecl 0x146128358 <col:2, col:7> col:7 used v 'long'
    |-DeclStmt 0x146128458 <line:4:2, col:7>
    | `-VarDecl 0x1461283f0 <col:2, col:6> col:6 used u 'int'
    |-CallExpr 0x146128748 <line:7:2, col:25> 'int'
    | |-ImplicitCastExpr 0x146128730 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1461285d0 <col:2> 'int ()' Function 0x146128518 'assert' 'int ()'
    | `-BinaryOperator 0x1461286e0 <col:9, col:23> 'int' '&&'
    |   |-BinaryOperator 0x146128648 <col:9, col:14> 'int' '>='
    |   | |-ImplicitCastExpr 0x146128630 <col:9> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1461285f0 <col:9> 'int' lvalue ParmVar 0x1461281a8 'n' 'int'
    |   | `-IntegerLiteral 0x146128610 <col:14> 'int' 0
    |   `-BinaryOperator 0x1461286c0 <col:19, col:23> 'int' '<'
    |     |-ImplicitCastExpr 0x1461286a8 <col:19> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x146128668 <col:19> 'int' lvalue ParmVar 0x1461281a8 'n' 'int'
    |     `-IntegerLiteral 0x146128688 <col:23> 'int' 32
    |-BinaryOperator 0x1461287c8 <line:10:2, col:6> 'long' '='
    | |-DeclRefExpr 0x146128770 <col:2> 'long' lvalue Var 0x146128358 'v' 'long'
    | `-ImplicitCastExpr 0x1461287b0 <col:6> 'long' <IntegralCast>
    |   `-IntegerLiteral 0x146128790 <col:6> 'int' 0
    |-WhileStmt 0x146809060 <line:11:2, line:16:2>
    | |-BinaryOperator 0x146808c58 <line:11:9, col:16> 'int' '>='
    | | |-UnaryOperator 0x146808c20 <col:9, col:11> 'int' prefix '--'
    | | | `-DeclRefExpr 0x146808c00 <col:11> 'int' lvalue ParmVar 0x1461281a8 'n' 'int'
    | | `-IntegerLiteral 0x146808c38 <col:16> 'int' 0
    | `-CompoundStmt 0x146809040 <col:19, line:16:2>
    |   |-IfStmt 0x146808ed8 <line:12:3, line:14:3>
    |   | |-BinaryOperator 0x146808e40 <line:12:7, col:47> 'int' contains-errors '<'
    |   | | |-ParenExpr 0x146808e00 <col:7, col:43> 'int' contains-errors
    |   | | | `-BinaryOperator 0x146808de0 <col:8, col:42> 'int' contains-errors '='
    |   | | |   |-DeclRefExpr 0x146808c78 <col:8> 'int' lvalue Var 0x1461283f0 'u' 'int'
    |   | | |   `-CallExpr 0x146808db8 <col:12, col:42> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x146808d78 <col:12> 'int ()' Function 0x146808cc0 'jpc_bitstream_getbit' 'int ()'
    |   | | |     `-RecoveryExpr 0x146808d98 <col:33> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x146808e20 <col:47> 'int' 0
    |   | `-CompoundStmt 0x146808ec0 <col:50, line:14:3>
    |   |   `-ReturnStmt 0x146808eb0 <line:13:4, col:12>
    |   |     `-ImplicitCastExpr 0x146808e98 <col:11, col:12> 'long' <IntegralCast>
    |   |       `-UnaryOperator 0x146808e80 <col:11, col:12> 'int' prefix '-'
    |   |         `-IntegerLiteral 0x146808e60 <col:12> 'int' 1
    |   `-BinaryOperator 0x146809020 <line:15:3, col:18> 'long' '='
    |     |-DeclRefExpr 0x146808ef8 <col:3> 'long' lvalue Var 0x146128358 'v' 'long'
    |     `-BinaryOperator 0x146809000 <col:7, col:18> 'long' '|'
    |       |-ParenExpr 0x146808f90 <col:7, col:14> 'long'
    |       | `-BinaryOperator 0x146808f70 <col:8, col:13> 'long' '<<'
    |       |   |-ImplicitCastExpr 0x146808f58 <col:8> 'long' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x146808f18 <col:8> 'long' lvalue Var 0x146128358 'v' 'long'
    |       |   `-IntegerLiteral 0x146808f38 <col:13> 'int' 1
    |       `-ImplicitCastExpr 0x146808fe8 <col:18> 'long' <IntegralCast>
    |         `-ImplicitCastExpr 0x146808fd0 <col:18> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x146808fb0 <col:18> 'int' lvalue Var 0x1461283f0 'u' 'int'
    `-ReturnStmt 0x1468090b8 <line:17:2, col:9>
      `-ImplicitCastExpr 0x1468090a0 <col:9> 'long' <LValueToRValue>
        `-DeclRefExpr 0x146809080 <col:9> 'long' lvalue Var 0x146128358 'v' 'long'
