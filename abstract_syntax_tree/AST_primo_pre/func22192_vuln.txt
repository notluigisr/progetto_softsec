`-FunctionDecl 0x14680de38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x14680dd58 <col:12> col:12 Array 'int'
  |-ParmVarDecl 0x14680dcd8 <col:19> col:19 getIterator 'int'
  `-CompoundStmt 0x146828a98 <line:2:1, line:21:1>
    |-IfStmt 0x1468284f8 <line:8:2, line:10:2>
    | |-BinaryOperator 0x1468284b0 <line:8:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x146828470 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x146828458 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x14680e380 <col:6> 'int ()' Function 0x14680e2c8 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x146828490 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1468284e0 <col:47, line:10:2>
    |   `-ReturnStmt 0x1468284d0 <line:9:3>
    `-IfStmt 0x146828738 <line:12:2, line:15:2>
      |-UnaryOperator 0x146828598 <line:12:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x146828580 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      |   `-RecoveryExpr 0x146828560 <col:7> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x146828720 <col:12, line:15:2>
        `-ReturnStmt 0x146828710 <line:14:3>
