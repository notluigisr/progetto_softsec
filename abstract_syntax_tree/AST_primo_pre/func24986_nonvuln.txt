`-FunctionDecl 0x14e928288  line:1:12 invalid index_conflict_remove 'int (int *, const char *)' static
  |-ParmVarDecl 0x14e928128 <col:34, col:45> col:45 invalid index 'int *'
  |-ParmVarDecl 0x14e9281a8 <col:52, col:64> col:64 used path 'const char *'
  `-CompoundStmt 0x14f008d00 <line:2:1, line:26:1>
    |-RecoveryExpr 0x14e928420 <line:3:2, col:15> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x14e928400 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14e9283e0 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14e928378 <col:15> 'int' 0
    |-DeclStmt 0x14e928508 <line:5:2, col:15>
    | `-VarDecl 0x14e928480 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x14e9284e8 <col:14> 'int' 0
    |-IfStmt 0x14f008338 <line:7:2, line:8:10>
    | |-BinaryOperator 0x14f0082d0 <line:7:6, col:58> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14f008220 <col:6, col:14> 'int' contains-errors '!='
    | | | |-DeclRefExpr 0x14e928520 <col:6> 'const char *' lvalue ParmVar 0x14e9281a8 'path' 'const char *'
    | | | `-RecoveryExpr 0x14f008200 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14f0082b0 <col:22, col:58> 'int' contains-errors '<'
    | |   |-CallExpr 0x14f008278 <col:22, col:54> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x14e9286d0 <col:22> 'int ()' Function 0x14e928618 'git_index_find' 'int ()'
    | |   | |-UnaryOperator 0x14f008260 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x14f008240 <col:38> '<dependent type>' contains-errors lvalue
    | |   | |-RecoveryExpr 0x14e928720 <col:43> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x14e928740 <col:50> 'const char *' lvalue ParmVar 0x14e9281a8 'path' 'const char *'
    | |   `-IntegerLiteral 0x14e928798 <col:58> 'int' 0
    | `-ReturnStmt 0x14f008328 <line:8:3, col:10>
    |   `-RecoveryExpr 0x14f008308 <col:10> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14f008c98 <line:10:2, line:23:2>
    | |-RecoveryExpr 0x14f008570 <line:10:9, col:68> '_Bool' contains-errors
    | `-CompoundStmt 0x14f008c70 <col:74, line:23:2>
    |   |-IfStmt 0x14f008880 <line:12:3, line:14:4>
    |   | |-BinaryOperator 0x14f008858 <line:12:7, line:13:59> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x14f008780 <line:12:7, col:15> 'int' contains-errors '!='
    |   | | | |-DeclRefExpr 0x14f008590 <col:7> 'const char *' lvalue ParmVar 0x14e9281a8 'path' 'const char *'
    |   | | | `-RecoveryExpr 0x14f008760 <col:15> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x14f008838 <line:13:4, col:59> 'int' contains-errors '!='
    |   | |   |-CallExpr 0x14f008808 <col:4, col:54> '<dependent type>' contains-errors
    |   | |   | |-CXXDependentScopeMemberExpr 0x14f008608 <col:4, col:11> '<dependent type>' contains-errors lvalue ->entries_cmp_path
    |   | |   | | `-RecoveryExpr 0x14f0085e8 <col:4> '<dependent type>' contains-errors lvalue
    |   | |   | |-CXXDependentScopeMemberExpr 0x14f0087c0 <col:28, col:44> '<dependent type>' contains-errors lvalue ->path
    |   | |   | | `-RecoveryExpr 0x14f0087a0 <col:28> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x14f0086b0 <col:50> 'const char *' lvalue ParmVar 0x14e9281a8 'path' 'const char *'
    |   | |   `-IntegerLiteral 0x14f008700 <col:59> 'int' 0
    |   | `-BreakStmt 0x14f008878 <line:14:4>
    |   |-IfStmt 0x14f008aa8 <line:16:3, line:19:3>
    |   | |-BinaryOperator 0x14f008a68 <line:16:7, col:45> 'int' contains-errors '=='
    |   | | |-CallExpr 0x14f008a40 <col:7, col:40> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x14f008980 <col:7> 'int ()' Function 0x14f0088c8 'GIT_IDXENTRY_STAGE' 'int ()'
    |   | | | `-RecoveryExpr 0x14f008a20 <col:26> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x14f0089e0 <col:45> 'int' 0
    |   | `-CompoundStmt 0x14f008a90 <col:48, line:19:3>
    |   |   `-ContinueStmt 0x14f008a88 <line:18:4>
    |   `-IfStmt 0x14f008c50 <line:21:3, line:22:4>
    |     |-RecoveryExpr 0x14f008c28 <line:21:7, col:50> '_Bool' contains-errors
    |     `-BreakStmt 0x14f008c48 <line:22:4>
    `-ReturnStmt 0x14f008cf0 <line:25:2, col:9>
      `-ImplicitCastExpr 0x14f008cd8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f008cb8 <col:9> 'int' lvalue Var 0x14e928480 'error' 'int'
