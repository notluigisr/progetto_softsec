`-FunctionDecl 0x157140a88  line:1:12 bnep_sock_ioctl 'int (struct socket *, unsigned int, unsigned long)' static
  |-ParmVarDecl 0x157128648 <col:28, col:43> col:43 sock 'struct socket *'
  |-ParmVarDecl 0x1571286c8 <col:49, col:62> col:62 used cmd 'unsigned int'
  |-ParmVarDecl 0x157128748 <col:67, col:81> col:81 used arg 'unsigned long'
  `-CompoundStmt 0x157144098 <line:2:1, line:76:1>
    |-DeclStmt 0x157140d08 <line:3:2, col:29>
    | |-RecordDecl 0x157140b90 <col:2, col:9> col:9 struct bnep_connlist_req
    | `-VarDecl 0x157140c88 <col:2, col:27> col:27 invalid cl 'struct bnep_connlist_req'
    |-DeclStmt 0x157140e98 <line:4:2, col:29>
    | |-RecordDecl 0x157140d20 <col:2, col:9> col:9 struct bnep_connadd_req
    | `-VarDecl 0x157140e18 <col:2, col:27> col:27 invalid ca 'struct bnep_connadd_req'
    |-DeclStmt 0x157141028 <line:5:2, col:29>
    | |-RecordDecl 0x157140eb0 <col:2, col:9> col:9 struct bnep_conndel_req
    | `-VarDecl 0x157140fa8 <col:2, col:27> col:27 invalid cd 'struct bnep_conndel_req'
    |-DeclStmt 0x1571411b8 <line:6:2, col:25>
    | |-RecordDecl 0x157141040 <col:2, col:9> col:9 struct bnep_conninfo
    | `-VarDecl 0x157141138 <col:2, col:23> col:23 invalid ci 'struct bnep_conninfo'
    |-DeclStmt 0x1571412c0 <line:7:2, col:22>
    | `-VarDecl 0x157141258 <col:2, col:17> col:17 used nsock 'struct socket *'
    |-DeclStmt 0x157141350 <line:8:2, col:14>
    | `-VarDecl 0x1571412e8 <col:2, col:7> col:7 invalid __user 'void'
    |-DeclStmt 0x1571413e8 <line:9:2, col:9>
    | `-VarDecl 0x157141380 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x157141638 <line:11:2, col:24> 'int'
    | |-ImplicitCastExpr 0x157141620 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x157141530 <col:2> 'int ()' Function 0x157141478 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x157141670 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x157141590 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x157141688 <col:16> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x1571415b0 <col:16> 'unsigned int' lvalue ParmVar 0x1571286c8 'cmd' 'unsigned int'
    | `-ImplicitCastExpr 0x1571416a0 <col:21> 'unsigned long' <LValueToRValue>
    |   `-DeclRefExpr 0x1571415d0 <col:21> 'unsigned long' lvalue ParmVar 0x157128748 'arg' 'unsigned long'
    |-SwitchStmt 0x1571416f0 <line:13:2, line:73:2>
    | |-ImplicitCastExpr 0x1571416d8 <line:13:10> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x1571416b8 <col:10> 'unsigned int' lvalue ParmVar 0x1571286c8 'cmd' 'unsigned int'
    | `-CompoundStmt 0x157143fe8 <col:15, line:73:2>
    |   |-IfStmt 0x157141990 <line:15:3, line:16:12>
    |   | |-UnaryOperator 0x1571418d0 <line:15:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x1571418a8 <col:8, col:29> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x157141810 <col:8> 'int ()' Function 0x157141758 'capable' 'int ()'
    |   | |   `-RecoveryExpr 0x157141888 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x157141980 <line:16:4, col:12>
    |   |   `-UnaryOperator 0x157141968 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x157141950 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x157141930 <col:12> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1571422c0 <line:18:3, line:19:12>
    |   | |-CallExpr 0x1571421e0 <line:18:7, col:43> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1571420b8 <col:7> 'int ()' Function 0x157142000 'copy_from_user' 'int ()'
    |   | | |-UnaryOperator 0x1571420f8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | `-RecoveryExpr 0x1571420d8 <col:23> '<dependent type>' contains-errors lvalue
    |   | | |-DeclRefExpr 0x1571421c0 <col:27> 'unsigned long' lvalue ParmVar 0x157128748 'arg' 'unsigned long'
    |   | | `-UnaryExprOrTypeTraitExpr 0x157142168 <col:33, col:42> 'unsigned long' contains-errors sizeof
    |   | |   `-ParenExpr 0x157142148 <col:39, col:42> '<dependent type>' contains-errors lvalue
    |   | |     `-RecoveryExpr 0x157142128 <col:40> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x1571422b0 <line:19:4, col:12>
    |   |   `-UnaryOperator 0x157142298 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x157142280 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x157142260 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x157142508 <line:21:3, col:38> 'struct socket *' contains-errors '='
    |   | |-DeclRefExpr 0x1571422e0 <col:3> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   | `-CallExpr 0x1571424d8 <col:11, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1571423e0 <col:11> 'int ()' Function 0x157142328 'sockfd_lookup' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x157142420 <col:25, col:28> '<dependent type>' contains-errors lvalue .sock
    |   |   | `-RecoveryExpr 0x157142400 <col:25> '<dependent type>' contains-errors lvalue
    |   |   `-UnaryOperator 0x1571424c0 <col:34, col:35> 'int *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x157142468 <col:35> 'int' lvalue Var 0x157141380 'err' 'int'
    |   |-IfStmt 0x1571425c0 <line:22:3, line:23:11>
    |   | |-UnaryOperator 0x157142560 <line:22:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x157142548 <col:8> 'struct socket *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x157142528 <col:8> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   | `-ReturnStmt 0x1571425b0 <line:23:4, col:11>
    |   |   `-ImplicitCastExpr 0x157142598 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x157142578 <col:11> 'int' lvalue Var 0x157141380 'err' 'int'
    |   |-IfStmt 0x157142940 <line:25:3, line:28:3>
    |   | |-BinaryOperator 0x1571426e0 <line:25:7, col:30> 'int' contains-errors '!='
    |   | | |-CXXDependentScopeMemberExpr 0x157142640 <col:7, col:18> '<dependent type>' contains-errors lvalue ->sk_state
    |   | | | `-RecoveryExpr 0x157142618 <col:7, col:14> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x1571425e0 <col:7> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   | | `-RecoveryExpr 0x1571426c0 <col:30> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x157142920 <col:44, line:28:3>
    |   |   |-CallExpr 0x157142838 <line:26:4, col:20> 'int'
    |   |   | |-ImplicitCastExpr 0x157142820 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x1571427e0 <col:4> 'int ()' Function 0x157142728 'sockfd_put' 'int ()'
    |   |   | `-ImplicitCastExpr 0x157142860 <col:15> 'struct socket *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x157142800 <col:15> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   |   `-ReturnStmt 0x157142910 <line:27:4, col:12>
    |   |     `-UnaryOperator 0x1571428f8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x1571428e0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x1571428c0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x157142b08 <line:30:3, col:39> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x157142960 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'
    |   | `-CallExpr 0x157142ad8 <col:9, col:39> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x157142a60 <col:9> 'int ()' Function 0x1571429a8 'bnep_add_connection' 'int ()'
    |   |   |-UnaryOperator 0x157142aa0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x157142a80 <col:30> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x157142ab8 <col:34> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   |-IfStmt 0x157142df8 <line:31:3, line:35:20> has_else
    |   | |-UnaryOperator 0x157142b60 <line:31:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x157142b48 <col:8> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x157142b28 <col:8> 'int' lvalue Var 0x157141380 'err' 'int'
    |   | |-CompoundStmt 0x157142d50 <col:13, line:34:3>
    |   | `-CallExpr 0x157142db8 <line:35:4, col:20> 'int'
    |   |   |-ImplicitCastExpr 0x157142da0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x157142d60 <col:4> 'int ()' Function 0x157142728 'sockfd_put' 'int ()'
    |   |   `-ImplicitCastExpr 0x157142de0 <col:15> 'struct socket *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x157142d80 <col:15> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'
    |   |-ReturnStmt 0x157142e60 <line:37:3, col:10>
    |   | `-ImplicitCastExpr 0x157142e48 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x157142e28 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'
    |   |-ReturnStmt 0x157143738 <line:46:3, col:33>
    |   | `-CallExpr 0x157143710 <col:10, col:33> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1571436b8 <col:10> 'int ()' Function 0x157143600 'bnep_del_connection' 'int ()'
    |   |   `-UnaryOperator 0x1571436f8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1571436d8 <col:31> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x157143a48 <line:55:3, col:30> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1571438c8 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'
    |   | `-CallExpr 0x157143a20 <col:9, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1571439c8 <col:9> 'int ()' Function 0x157143910 'bnep_get_connlist' 'int ()'
    |   |   `-UnaryOperator 0x157143a08 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1571439e8 <col:28> '<dependent type>' contains-errors lvalue
    |   |-ReturnStmt 0x157143bc8 <line:59:3, col:10>
    |   | `-ImplicitCastExpr 0x157143bb0 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x157143b90 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'
    |   |-BinaryOperator 0x157143e30 <line:65:3, col:30> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x157143cb0 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'
    |   | `-CallExpr 0x157143e08 <col:9, col:30> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x157143db0 <col:9> 'int ()' Function 0x157143cf8 'bnep_get_conninfo' 'int ()'
    |   |   `-UnaryOperator 0x157143df0 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x157143dd0 <col:28> '<dependent type>' contains-errors lvalue
    |   |-ReturnStmt 0x157143fb0 <line:69:3, col:10>
    |   | `-ImplicitCastExpr 0x157143f98 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x157143f78 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'
    |   `-DefaultStmt 0x157143fc8 <line:71:2, col:9>
    |     `-NullStmt 0x157143fc0 <col:9>
    `-ReturnStmt 0x157144088 <line:75:2, col:9>
      `-IntegerLiteral 0x157144068 <col:9> 'int' 0
