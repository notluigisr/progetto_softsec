`-FunctionDecl 0x12a80dd98  line:1:10 _gnutls_fips_mode_enabled 'unsigned int (void)'
  `-CompoundStmt 0x12a82a490 <line:2:1, line:47:1>
    |-DeclStmt 0x12a80dfd8 <line:3:1, col:22>
    | |-VarDecl 0x12a80dea0 <col:1, col:16> col:10 used f1p 'unsigned int' cinit
    | | `-ImplicitCastExpr 0x12a80df28 <col:16> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x12a80df08 <col:16> 'int' 0
    | `-VarDecl 0x12a80df58 <col:1, col:19> col:19 used f2p 'unsigned int'
    |-DeclStmt 0x12a80e0a0 <line:5:1, col:14>
    | `-VarDecl 0x12a80e038 <col:1, col:13> col:13 used p 'const char *'
    |-IfStmt 0x12a80e1b0 <line:7:2, line:8:10>
    | |-BinaryOperator 0x12a80e148 <line:7:6, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12a80e128 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x12a80e0f0 <col:20, col:21> 'int' prefix '-'
    | |   `-IntegerLiteral 0x12a80e0d0 <col:21> 'int' 1
    | `-ReturnStmt 0x12a80e1a0 <line:8:3, col:10>
    |   `-RecoveryExpr 0x12a80e180 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12a828250 <line:10:2, col:18> 'const char *' '='
    | |-DeclRefExpr 0x12a80e1d0 <col:2> 'const char *' lvalue Var 0x12a80e038 'p' 'const char *'
    | `-ImplicitCastExpr 0x12a827e18 <col:6, col:18> 'const char *' <IntegralToPointer>
    |   `-CallExpr 0x12a80e3c8 <col:6, col:18> 'int'
    |     |-ImplicitCastExpr 0x12a80e3b0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a80e300 <col:6> 'int ()' Function 0x12a80e248 'getenv' 'int ()'
    |     `-ImplicitCastExpr 0x12a827e00 <col:13> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12a80e360 <col:13> 'char[4]' lvalue "STR"
    |-IfStmt 0x12a828528 <line:11:2, line:19:2>
    | |-ImplicitCastExpr 0x12a828290 <line:11:6> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x12a828270 <col:6> 'const char *' lvalue Var 0x12a80e038 'p' 'const char *'
    | `-CompoundStmt 0x12a828510 <col:9, line:19:2>
    |   `-ReturnStmt 0x12a828500 <line:18:3, col:10>
    |     `-RecoveryExpr 0x12a8284e0 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12a828ca0 <line:22:2, line:28:2>
    | |-BinaryOperator 0x12a828740 <line:22:6, col:12> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12a828700 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12a828720 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a828c78 <col:18, line:28:2>
    |   |-BinaryOperator 0x12a828928 <line:23:3, col:17> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x12a828760 <col:3> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |   | `-CallExpr 0x12a828900 <col:9, col:17> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12a828860 <col:9> 'int ()' Function 0x12a8287a8 'fgetc' 'int ()'
    |   |   `-RecoveryExpr 0x12a8288e0 <col:15> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x12a828aa8 <line:24:3, col:12> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a828a28 <col:3> 'int ()' Function 0x12a828970 'fclose' 'int ()'
    |   | `-RecoveryExpr 0x12a828a88 <col:10> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x12a828c48 <line:26:3, line:27:14> has_else
    |     |-BinaryOperator 0x12a828b38 <line:26:7, col:14> 'int' '=='
    |     | |-ImplicitCastExpr 0x12a828b08 <col:7> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12a828ad0 <col:7> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |     | `-ImplicitCastExpr 0x12a828b20 <col:14> 'unsigned int' <IntegralCast>
    |     |   `-CharacterLiteral 0x12a828af0 <col:14> 'int' 49
    |     |-BinaryOperator 0x12a828bb0 <col:19, col:25> 'unsigned int' '='
    |     | |-DeclRefExpr 0x12a828b58 <col:19> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |     | `-ImplicitCastExpr 0x12a828b98 <col:25> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x12a828b78 <col:25> 'int' 1
    |     `-BinaryOperator 0x12a828c28 <line:27:8, col:14> 'unsigned int' '='
    |       |-DeclRefExpr 0x12a828bd0 <col:8> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    |       `-ImplicitCastExpr 0x12a828c10 <col:14> 'unsigned int' <IntegralCast>
    |         `-IntegerLiteral 0x12a828bf0 <col:14> 'int' 0
    |-IfStmt 0x12a82a2d0 <line:32:2, line:36:2>
    | |-BinaryOperator 0x12a82a100 <line:32:6, col:25> 'int' '&&'
    | | |-BinaryOperator 0x12a82a050 <col:6, col:13> 'int' '!='
    | | | |-ImplicitCastExpr 0x12a82a020 <col:6> 'unsigned int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a828de0 <col:6> 'unsigned int' lvalue Var 0x12a80dea0 'f1p' 'unsigned int'
    | | | `-ImplicitCastExpr 0x12a82a038 <col:13> 'unsigned int' <IntegralCast>
    | | |   `-IntegerLiteral 0x12a82a000 <col:13> 'int' 0
    | | `-BinaryOperator 0x12a82a0e0 <col:18, col:25> 'int' '!='
    | |   |-ImplicitCastExpr 0x12a82a0b0 <col:18> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12a82a070 <col:18> 'unsigned int' lvalue Var 0x12a80df58 'f2p' 'unsigned int'
    | |   `-ImplicitCastExpr 0x12a82a0c8 <col:25> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x12a82a090 <col:25> 'int' 0
    | `-CompoundStmt 0x12a82a2b8 <col:28, line:36:2>
    |   `-CallExpr 0x12a82a258 <line:33:3, col:26> 'int'
    |     |-ImplicitCastExpr 0x12a82a240 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12a82a200 <col:3> 'int ()' Function 0x12a82a148 '_gnutls_debug_log' 'int ()'
    |     `-ImplicitCastExpr 0x12a82a280 <col:21> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x12a82a220 <col:21> 'char[4]' lvalue "STR"
    `-IfStmt 0x12a82a450 <line:38:2, line:43:2>
      |-BinaryOperator 0x12a82a360 <line:38:6, col:13> 'int' '!='
      | |-ImplicitCastExpr 0x12a82a330 <col:6> 'unsigned int' <LValueToRValue>
      | | `-DeclRefExpr 0x12a82a2f0 <col:6> 'unsigned int' lvalue Var 0x12a80df58 'f2p' 'unsigned int'
      | `-ImplicitCastExpr 0x12a82a348 <col:13> 'unsigned int' <IntegralCast>
      |   `-IntegerLiteral 0x12a82a310 <col:13> 'int' 0
      `-CompoundStmt 0x12a82a438 <col:16, line:43:2>
        `-CallExpr 0x12a82a3d8 <line:40:3, col:26> 'int'
          |-ImplicitCastExpr 0x12a82a3c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x12a82a380 <col:3> 'int ()' Function 0x12a82a148 '_gnutls_debug_log' 'int ()'
          `-ImplicitCastExpr 0x12a82a400 <col:21> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x12a82a3a0 <col:21> 'char[4]' lvalue "STR"
