`-FunctionDecl 0x14c128318  line:1:12 invalid set_register 'int (int *, int, int)' static
  |-ParmVarDecl 0x14c128128 <col:25, col:36> col:36 invalid pegasus 'int *'
  |-ParmVarDecl 0x14c1281a8 <col:45, col:51> col:51 invalid indx 'int'
  |-ParmVarDecl 0x14c128228 <col:57, col:62> col:62 invalid data 'int'
  `-CompoundStmt 0x14c141ee8 <line:2:1, line:12:1>
    |-DeclStmt 0x14c128458 <line:3:2, col:9>
    | `-VarDecl 0x14c1283f0 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x14c141a48 <line:5:2, line:7:30> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c128470 <line:5:2> 'int' lvalue Var 0x14c1283f0 'ret' 'int'
    | `-CallExpr 0x14c1419e0 <col:8, line:7:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c1285f0 <line:5:8> 'int ()' Function 0x14c128538 'usb_control_msg' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x14c128630 <col:24, col:33> '<dependent type>' contains-errors lvalue ->usb
    |   | `-RecoveryExpr 0x14c128610 <col:24> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x14c141800 <col:38, col:69> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14c128758 <col:38> 'int ()' Function 0x14c1286a0 'usb_sndctrlpipe' 'int ()'
    |   | |-CXXDependentScopeMemberExpr 0x14c128798 <col:54, col:63> '<dependent type>' contains-errors lvalue ->usb
    |   | | `-RecoveryExpr 0x14c128778 <col:54> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x14c1287e0 <col:68> 'int' 0
    |   |-RecoveryExpr 0x14c1419a0 <line:6:10> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14c1419c0 <col:31> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14c141860 <col:51> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14c141880 <line:7:10> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x14c1418c0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c1418a0 <col:17> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x14c1418d8 <col:23> 'int' 1
    |   `-IntegerLiteral 0x14c1418f8 <col:26> 'int' 1000
    |-IfStmt 0x14c141e80 <line:8:2, line:10:26>
    | |-BinaryOperator 0x14c141ac0 <line:8:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x14c141aa8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c141a68 <col:6> 'int' lvalue Var 0x14c1283f0 'ret' 'int'
    | | `-IntegerLiteral 0x14c141a88 <col:12> 'int' 0
    | `-CallExpr 0x14c141e30 <line:9:3, line:10:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c141bc0 <line:9:3> 'int ()' Function 0x14c141b08 'netif_dbg' 'int ()'
    |   |-RecoveryExpr 0x14c141be0 <col:13> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x14c141e10 <col:22> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x14c141c38 <col:27, col:36> '<dependent type>' contains-errors lvalue ->net
    |   | `-RecoveryExpr 0x14c141c18 <col:27> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x14c141cc0 <line:10:6> 'char[4]' lvalue "STR"
    |   |-PredefinedExpr 0x14c141d88 <col:13> 'const char[13]' lvalue __func__
    |   | `-StringLiteral 0x14c141d60 <col:13> 'const char[13]' lvalue "set_register"
    |   `-DeclRefExpr 0x14c141da0 <col:23> 'int' lvalue Var 0x14c1283f0 'ret' 'int'
    `-ReturnStmt 0x14c141ed8 <line:11:2, col:9>
      `-ImplicitCastExpr 0x14c141ec0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c141ea0 <col:9> 'int' lvalue Var 0x14c1283f0 'ret' 'int'
