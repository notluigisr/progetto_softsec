`-FunctionDecl 0x14e00df18  line:1:1 invalid dane_verification_status_print 'int (unsigned int, int *, unsigned int)'
  |-ParmVarDecl 0x14e00dcd8 <col:33, col:46> col:46 used status 'unsigned int'
  |-ParmVarDecl 0x14e00dda8 <line:2:24, col:41> col:41 referenced invalid out 'int *'
  |-ParmVarDecl 0x14e00de28 <col:46, col:59> col:59 flags 'unsigned int'
  `-CompoundStmt 0x14e0299b8 <line:3:1, line:27:1>
    |-DeclStmt 0x14e00e058 <line:5:3, col:10>
    | `-VarDecl 0x14e00dff0 <col:3, col:7> col:7 used ret 'int'
    |-CallExpr 0x14e00e280 <line:7:3, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e00e1d0 <col:3> 'int ()' Function 0x14e00e118 '_gnutls_buffer_init' 'int ()'
    | `-UnaryOperator 0x14e00e268 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e00e248 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e0283c0 <line:9:3, line:12:46> has_else
    | |-BinaryOperator 0x14e00e318 <line:9:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14e00e2e8 <col:7> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14e00e2a8 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-ImplicitCastExpr 0x14e00e300 <col:17> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14e00e2c8 <col:17> 'int' 0
    | |-CallExpr 0x14e0281b8 <line:10:5, col:46> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14e027eb8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    | | |-UnaryOperator 0x14e028148 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | `-RecoveryExpr 0x14e028128 <col:33> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14e028178 <col:38, col:45> 'int'
    | |   |-ImplicitCastExpr 0x14e028160 <col:38> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14e027fe8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    | |   `-ImplicitCastExpr 0x14e0281a0 <col:40> 'char *' <ArrayToPointerDecay>
    | |     `-StringLiteral 0x14e028050 <col:40> 'char[4]' lvalue "STR"
    | `-CallExpr 0x14e028390 <line:12:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e0281e8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028320 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028300 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028350 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028338 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e028238 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028378 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028258 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e028660 <line:14:3, line:15:46>
    | |-BinaryOperator 0x14e028468 <line:14:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e0283f0 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e028448 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e028630 <line:15:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028488 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e0285c0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e0285a0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e0285f0 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e0285d8 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e0284d8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028618 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e0284f8 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e0288f0 <line:17:3, line:18:46>
    | |-BinaryOperator 0x14e0286f8 <line:17:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e028680 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e0286d8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e0288c0 <line:18:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028718 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028850 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028830 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028880 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028868 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e028768 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e0288a8 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028788 <col:40> 'char[4]' lvalue "STR"
    |-IfStmt 0x14e028b80 <line:20:3, line:21:46>
    | |-BinaryOperator 0x14e028988 <line:20:7, col:16> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x14e028910 <col:7> 'unsigned int' lvalue ParmVar 0x14e00dcd8 'status' 'unsigned int'
    | | `-RecoveryExpr 0x14e028968 <col:16> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x14e028b50 <line:21:5, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e0289a8 <col:5> 'int ()' Function 0x14e027e00 '_gnutls_buffer_append_str' 'int ()'
    |   |-UnaryOperator 0x14e028ae0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028ac0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14e028b10 <col:38, col:45> 'int'
    |     |-ImplicitCastExpr 0x14e028af8 <col:38> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14e0289f8 <col:38> 'int ()' Function 0x14e027f30 '_' 'int ()'
    |     `-ImplicitCastExpr 0x14e028b38 <col:40> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x14e028a18 <col:40> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x14e028dc8 <line:23:3, col:43> 'int' contains-errors '='
    | |-DeclRefExpr 0x14e028ba0 <col:3> 'int' lvalue Var 0x14e00dff0 'ret' 'int'
    | `-CallExpr 0x14e028d98 <col:9, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e028ca0 <col:9> 'int ()' Function 0x14e028be8 '_gnutls_buffer_to_datum' 'int ()'
    |   |-UnaryOperator 0x14e028d80 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14e028d60 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e028cf0 <col:40> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14e029950 <line:24:3, col:31>
    | |-BinaryOperator 0x14e029888 <col:7, col:19> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x14e029820 <col:7, col:12> '<dependent type>' contains-errors lvalue ->size
    | | | `-RecoveryExpr 0x14e029800 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14e029868 <col:19> 'int' 0
    | `-UnaryOperator 0x14e029938 <col:22, col:31> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14e0298f0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->size
    |     `-RecoveryExpr 0x14e0298c8 <col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14e0298a8 <col:22> 'int *' lvalue ParmVar 0x14e00dda8 'out' 'int *'
    `-ReturnStmt 0x14e0299a8 <line:26:3, col:10>
      `-ImplicitCastExpr 0x14e029990 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14e029970 <col:10> 'int' lvalue Var 0x14e00dff0 'ret' 'int'
