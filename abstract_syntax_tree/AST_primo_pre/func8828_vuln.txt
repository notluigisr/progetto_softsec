`-FunctionDecl 0x1400269b8  line:1:23 __lookup_hash 'struct dentry *(struct qstr *, struct dentry *, struct nameidata *)' static
  |-ParmVarDecl 0x14000e2e8 <col:37, col:50> col:50 used name 'struct qstr *'
  |-ParmVarDecl 0x140026628 <line:2:3, col:18> col:18 used base 'struct dentry *'
  |-ParmVarDecl 0x1400267f8 <col:24, col:42> col:42 used nd 'struct nameidata *'
  `-CompoundStmt 0x148128c78 <line:3:1, line:32:1>
    |-DeclStmt 0x140026b50 <line:4:2, col:23>
    | `-VarDecl 0x140026ae8 <col:2, col:17> col:17 used dentry 'struct dentry *'
    |-DeclStmt 0x140026d58 <line:5:2, col:21>
    | |-RecordDecl 0x140026b68 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x140026cd8 <col:2, col:16> col:16 used inode 'struct inode *'
    |-DeclStmt 0x140026df0 <line:6:2, col:9>
    | `-VarDecl 0x140026d88 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x140026e88 <line:8:2, col:16> 'struct inode *' contains-errors '='
    | |-DeclRefExpr 0x140026e08 <col:2> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    | `-RecoveryExpr 0x140026e60 <col:10, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x140026e28 <col:10> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |-IfStmt 0x140027498 <line:11:2, line:16:2>
    | |-BinaryOperator 0x140026fb0 <line:11:6, col:32> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x140026ee0 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x140026ea8 <col:6> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    | | `-CXXDependentScopeMemberExpr 0x140026f68 <col:20, col:32> '<dependent type>' contains-errors lvalue ->d_hash
    | |   `-RecoveryExpr 0x140026f40 <col:20, col:26> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x140026f08 <col:20> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    | `-CompoundStmt 0x140027470 <col:40, line:16:2>
    |   |-BinaryOperator 0x140027108 <line:12:3, col:38> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x140026fd0 <col:3> 'int' lvalue Var 0x140026d88 'err' 'int'
    |   | `-CallExpr 0x1400270d8 <col:9, col:38> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x140027050 <col:9, col:21> '<dependent type>' contains-errors lvalue ->d_hash
    |   |   | `-RecoveryExpr 0x140027028 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x140026ff0 <col:9> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |   |-DeclRefExpr 0x140027098 <col:28> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |   `-DeclRefExpr 0x1400270b8 <col:34> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |   |-BinaryOperator 0x140027350 <line:13:3, col:23> 'struct dentry *' '='
    |   | |-DeclRefExpr 0x140027128 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-ImplicitCastExpr 0x140027338 <col:12, col:23> 'struct dentry *' <IntegralToPointer>
    |   |   `-CallExpr 0x1400272f8 <col:12, col:23> 'int'
    |   |     |-ImplicitCastExpr 0x1400272e0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x140027270 <col:12> 'int ()' Function 0x1400271b8 'ERR_PTR' 'int ()'
    |   |     `-ImplicitCastExpr 0x140027320 <col:20> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x140027290 <col:20> 'int' lvalue Var 0x140026d88 'err' 'int'
    |   `-IfStmt 0x140027450 <line:14:3, line:15:9>
    |     |-BinaryOperator 0x1400273c8 <line:14:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x1400273b0 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x140027370 <col:7> 'int' lvalue Var 0x140026d88 'err' 'int'
    |     | `-IntegerLiteral 0x140027390 <col:13> 'int' 0
    |     `-GotoStmt 0x140027438 <line:15:4, col:9> 'out' 0x1400273e8
    |-BinaryOperator 0x1481282f0 <line:18:2, col:39> 'struct dentry *' '='
    | |-DeclRefExpr 0x1400274b8 <col:2> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x1481282d8 <col:11, col:39> 'struct dentry *' <IntegralToPointer>
    |   `-CallExpr 0x148128258 <col:11, col:39> 'int'
    |     |-ImplicitCastExpr 0x148128240 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1400275b8 <col:11> 'int ()' Function 0x140027500 'cached_lookup' 'int ()'
    |     |-ImplicitCastExpr 0x148128290 <col:25> 'struct dentry *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1400275d8 <col:25> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |     |-ImplicitCastExpr 0x1481282a8 <col:31> 'struct qstr *' <LValueToRValue>
    |     | `-DeclRefExpr 0x148128200 <col:31> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |     `-ImplicitCastExpr 0x1481282c0 <col:37> 'struct nameidata *' <LValueToRValue>
    |       `-DeclRefExpr 0x148128220 <col:37> 'struct nameidata *' lvalue ParmVar 0x1400267f8 'nd' 'struct nameidata *'
    |-IfStmt 0x148128bf0 <line:19:2, line:29:2>
    | |-UnaryOperator 0x148128348 <line:19:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x148128330 <col:7> 'struct dentry *' <LValueToRValue>
    | |   `-DeclRefExpr 0x148128310 <col:7> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    | `-CompoundStmt 0x148128bb8 <col:15, line:29:2>
    |   |-DeclStmt 0x1481285c0 <line:20:3, col:43>
    |   | `-VarDecl 0x148128388 <col:3, col:42> col:18 used new 'struct dentry *' cinit
    |   |   `-ImplicitCastExpr 0x1481285a8 <col:24, col:42> 'struct dentry *' <IntegralToPointer>
    |   |     `-CallExpr 0x148128548 <col:24, col:42> 'int'
    |   |       |-ImplicitCastExpr 0x148128530 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x1481284d0 <col:24> 'int ()' Function 0x148128418 'd_alloc' 'int ()'
    |   |       |-ImplicitCastExpr 0x148128578 <col:32> 'struct dentry *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x1481284f0 <col:32> 'struct dentry *' lvalue ParmVar 0x140026628 'base' 'struct dentry *'
    |   |       `-ImplicitCastExpr 0x148128590 <col:38> 'struct qstr *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x148128510 <col:38> 'struct qstr *' lvalue ParmVar 0x14000e2e8 'name' 'struct qstr *'
    |   |-BinaryOperator 0x148128720 <line:21:3, col:27> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1481285d8 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1481286f8 <col:12, col:27> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1481285f8 <col:12> 'int ()' Function 0x1400271b8 'ERR_PTR' 'int ()'
    |   |   `-UnaryOperator 0x1481286e0 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1481286c8 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x1481286a8 <col:21> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1481287a8 <line:22:3, line:23:9>
    |   | |-UnaryOperator 0x148128778 <line:22:7, col:8> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x148128760 <col:8> 'struct dentry *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x148128740 <col:8> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |   | `-GotoStmt 0x148128790 <line:23:4, col:9> 'out' 0x1400273e8
    |   |-BinaryOperator 0x148128928 <line:24:3, col:46> 'struct dentry *' contains-errors '='
    |   | |-DeclRefExpr 0x1481287c8 <col:3> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |   | `-CallExpr 0x1481288f0 <col:12, col:46> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x148128848 <col:12, col:25> '<dependent type>' contains-errors lvalue ->lookup
    |   |   | `-RecoveryExpr 0x148128820 <col:12, col:19> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x1481287e8 <col:12> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    |   |   |-DeclRefExpr 0x148128890 <col:32> 'struct inode *' lvalue Var 0x140026cd8 'inode' 'struct inode *'
    |   |   |-DeclRefExpr 0x1481288b0 <col:39> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |   |   `-DeclRefExpr 0x1481288d0 <col:44> 'struct nameidata *' lvalue ParmVar 0x1400267f8 'nd' 'struct nameidata *'
    |   `-IfStmt 0x148128b88 <line:25:3, line:28:12> has_else
    |     |-UnaryOperator 0x148128980 <line:25:7, col:8> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x148128968 <col:8> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x148128948 <col:8> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |     |-BinaryOperator 0x1481289f0 <line:26:4, col:13> 'struct dentry *' '='
    |     | |-DeclRefExpr 0x148128998 <col:4> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
    |     | `-ImplicitCastExpr 0x1481289d8 <col:13> 'struct dentry *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1481289b8 <col:13> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    |     `-CallExpr 0x148128b48 <line:28:4, col:12> 'int'
    |       |-ImplicitCastExpr 0x148128b30 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x148128af0 <col:4> 'int ()' Function 0x148128a38 'dput' 'int ()'
    |       `-ImplicitCastExpr 0x148128b70 <col:9> 'struct dentry *' <LValueToRValue>
    |         `-DeclRefExpr 0x148128b10 <col:9> 'struct dentry *' lvalue Var 0x148128388 'new' 'struct dentry *'
    `-LabelStmt 0x148128c58 <line:30:1, line:31:9> 'out'
      `-ReturnStmt 0x148128c48 <col:2, col:9>
        `-ImplicitCastExpr 0x148128c30 <col:9> 'struct dentry *' <LValueToRValue>
          `-DeclRefExpr 0x148128c10 <col:9> 'struct dentry *' lvalue Var 0x140026ae8 'dentry' 'struct dentry *'
