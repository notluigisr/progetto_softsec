`-FunctionDecl 0x120928288  line:1:5 invalid gnutls_x509_ext_export_subject_alt_names 'int (int, int *)'
  |-ParmVarDecl 0x1209280f0 <col:46, col:73> col:73 invalid sans 'int'
  |-ParmVarDecl 0x1209281a8 <line:2:8, col:25> col:25 invalid ext 'int *'
  `-CompoundStmt 0x1209457d0 <line:3:1, line:43:1>
    |-DeclStmt 0x120928458 <line:5:2, col:17>
    | |-VarDecl 0x120928358 <col:2, col:6> col:6 used result 'int'
    | `-VarDecl 0x1209283d8 <col:2, col:14> col:14 used ret 'int'
    |-DeclStmt 0x1209284f0 <line:6:2, col:12>
    | `-VarDecl 0x120928488 <col:2, col:11> col:11 used i 'unsigned int'
    |-BinaryOperator 0x1209419e8 <line:8:2, line:9:56> 'int' contains-errors '='
    | |-DeclRefExpr 0x120928508 <line:8:2> 'int' lvalue Var 0x120928358 'result' 'int'
    | `-CallExpr 0x1209419b0 <line:9:6, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120928680 <col:6> 'int ()' Function 0x1209285c8 'asn1_create_element' 'int ()'
    |   |-CallExpr 0x120941958 <col:26, col:43> 'int'
    |   | `-ImplicitCastExpr 0x120941940 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x120928780 <col:26> 'int ()' Function 0x1209286c8 '_gnutls_get_pkix' 'int ()'
    |   |-StringLiteral 0x120941860 <col:46> 'char[4]' lvalue "STR"
    |   `-UnaryOperator 0x120941998 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x120941978 <col:54> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x120941d80 <line:10:2, line:13:2>
    | |-BinaryOperator 0x120941a80 <line:10:6, col:16> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x120941a08 <col:6> 'int' lvalue Var 0x120928358 'result' 'int'
    | | `-RecoveryExpr 0x120941a60 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x120941d60 <col:30, line:13:2>
    |   |-CallExpr 0x120941bb8 <line:11:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x120941ba0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x120941b80 <col:3> 'int ()' Function 0x120941ac8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x120941d50 <line:12:3, col:32>
    |     `-CallExpr 0x120941d10 <col:10, col:32> 'int'
    |       |-ImplicitCastExpr 0x120941cf8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x120941cb8 <col:10> 'int ()' Function 0x120941c00 '_gnutls_asn2err' 'int ()'
    |       `-ImplicitCastExpr 0x120941d38 <col:26> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x120941cd8 <col:26> 'int' lvalue Var 0x120928358 'result' 'int'
    |-ForStmt 0x120945100 <line:15:2, line:30:2>
    | |-BinaryOperator 0x120941df8 <line:15:7, col:11> 'unsigned int' '='
    | | |-DeclRefExpr 0x120941da0 <col:7> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x120941de0 <col:11> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x120941dc0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x120941ea0 <col:14, col:24> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x120941e18 <col:14> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x120941e58 <col:18, col:24> '<dependent type>' contains-errors lvalue ->size
    | |   `-RecoveryExpr 0x120941e38 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x120941ee0 <col:30, col:31> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x120941ec0 <col:30> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    | `-CompoundStmt 0x1209450e0 <col:35, line:30:2>
    |   |-IfStmt 0x120944f38 <line:16:3, line:24:3> has_else
    |   | |-BinaryOperator 0x1209421a0 <line:16:7, col:30> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x120942138 <col:7, col:22> '<dependent type>' contains-errors lvalue .type
    |   | | | `-ArraySubscriptExpr 0x120942118 <col:7, col:20> '<dependent type>' contains-errors lvalue
    |   | | |   |-ImplicitCastExpr 0x1209420e8 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    |   | | |   | `-CXXDependentScopeMemberExpr 0x120941f18 <col:7, col:13> '<dependent type>' contains-errors lvalue ->names
    |   | | |   |   `-RecoveryExpr 0x120941ef8 <col:7> '<dependent type>' contains-errors lvalue
    |   | | |   `-ImplicitCastExpr 0x120942100 <col:19> 'unsigned int' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x120941f60 <col:19> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   | | `-RecoveryExpr 0x120942180 <col:30> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x120944680 <col:52, line:19:3>
    |   | | `-BinaryOperator 0x120944660 <line:17:4, line:18:60> 'int' contains-errors '='
    |   | |   |-DeclRefExpr 0x1209421c0 <line:17:4> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    |   | |   `-CallExpr 0x120944618 <col:10, line:18:60> '<dependent type>' contains-errors
    |   | |     |-DeclRefExpr 0x1209422c0 <line:17:10> 'int ()' Function 0x120942208 '_gnutls_write_new_othername' 'int ()'
    |   | |     |-RecoveryExpr 0x120944318 <col:38> '<dependent type>' contains-errors lvalue
    |   | |     |-StringLiteral 0x120942340 <col:42> 'char[1]' lvalue ""
    |   | |     |-CStyleCastExpr 0x120944430 <col:46, col:82> 'char *' contains-errors <Dependent>
    |   | |     | `-CXXDependentScopeMemberExpr 0x1209443e8 <col:53, col:82> '<dependent type>' contains-errors lvalue .data
    |   | |     |   `-CXXDependentScopeMemberExpr 0x1209443a0 <col:53, col:68> '<dependent type>' contains-errors lvalue .othername_oid
    |   | |     |     `-ArraySubscriptExpr 0x120944380 <col:53, col:66> '<dependent type>' contains-errors lvalue
    |   | |     |       |-ImplicitCastExpr 0x120944350 <col:53, col:59> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |       | `-CXXDependentScopeMemberExpr 0x120942378 <col:53, col:59> '<dependent type>' contains-errors lvalue ->names
    |   | |     |       |   `-RecoveryExpr 0x120942358 <col:53> '<dependent type>' contains-errors lvalue
    |   | |     |       `-ImplicitCastExpr 0x120944368 <col:65> 'unsigned int' <LValueToRValue>
    |   | |     |         `-DeclRefExpr 0x1209423c0 <col:65> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   | |     |-CXXDependentScopeMemberExpr 0x1209444f0 <line:18:12, col:31> '<dependent type>' contains-errors lvalue .data
    |   | |     | `-CXXDependentScopeMemberExpr 0x1209444a8 <col:12, col:27> '<dependent type>' contains-errors lvalue .san
    |   | |     |   `-ArraySubscriptExpr 0x120944488 <col:12, col:25> '<dependent type>' contains-errors lvalue
    |   | |     |     |-ImplicitCastExpr 0x120944458 <col:12, col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     |     | `-CXXDependentScopeMemberExpr 0x120942600 <col:12, col:18> '<dependent type>' contains-errors lvalue ->names
    |   | |     |     |   `-RecoveryExpr 0x1209425e0 <col:12> '<dependent type>' contains-errors lvalue
    |   | |     |     `-ImplicitCastExpr 0x120944470 <col:24> 'unsigned int' <LValueToRValue>
    |   | |     |       `-DeclRefExpr 0x120942648 <col:24> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   | |     `-CXXDependentScopeMemberExpr 0x1209445d0 <col:37, col:56> '<dependent type>' contains-errors lvalue .size
    |   | |       `-CXXDependentScopeMemberExpr 0x120944588 <col:37, col:52> '<dependent type>' contains-errors lvalue .san
    |   | |         `-ArraySubscriptExpr 0x120944568 <col:37, col:50> '<dependent type>' contains-errors lvalue
    |   | |           |-ImplicitCastExpr 0x120944538 <col:37, col:43> '<dependent type>' contains-errors <LValueToRValue>
    |   | |           | `-CXXDependentScopeMemberExpr 0x120942768 <col:37, col:43> '<dependent type>' contains-errors lvalue ->names
    |   | |           |   `-RecoveryExpr 0x120942748 <col:37> '<dependent type>' contains-errors lvalue
    |   | |           `-ImplicitCastExpr 0x120944550 <col:49> 'unsigned int' <LValueToRValue>
    |   | |             `-DeclRefExpr 0x1209427b0 <col:49> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   | `-CompoundStmt 0x120944f20 <line:19:10, line:24:3>
    |   |   `-BinaryOperator 0x120944f00 <line:20:4, line:23:34> 'int' contains-errors '='
    |   |     |-DeclRefExpr 0x120944698 <line:20:4> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    |   |     `-CallExpr 0x120944eb8 <line:21:8, line:23:34> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x120944798 <line:21:8> 'int ()' Function 0x1209446e0 '_gnutls_write_new_general_name' 'int ()'
    |   |       |-RecoveryExpr 0x120944c40 <col:39> '<dependent type>' contains-errors lvalue
    |   |       |-StringLiteral 0x1209447d0 <col:43> 'char[1]' lvalue ""
    |   |       |-CXXDependentScopeMemberExpr 0x120944cb0 <col:47, col:62> '<dependent type>' contains-errors lvalue .type
    |   |       | `-ArraySubscriptExpr 0x120944c90 <col:47, col:60> '<dependent type>' contains-errors lvalue
    |   |       |   |-ImplicitCastExpr 0x120944c60 <col:47, col:53> '<dependent type>' contains-errors <LValueToRValue>
    |   |       |   | `-CXXDependentScopeMemberExpr 0x120944808 <col:47, col:53> '<dependent type>' contains-errors lvalue ->names
    |   |       |   |   `-RecoveryExpr 0x1209447e8 <col:47> '<dependent type>' contains-errors lvalue
    |   |       |   `-ImplicitCastExpr 0x120944c78 <col:59> 'unsigned int' <LValueToRValue>
    |   |       |     `-DeclRefExpr 0x120944850 <col:59> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   |       |-CXXDependentScopeMemberExpr 0x120944d90 <line:22:11, col:30> '<dependent type>' contains-errors lvalue .data
    |   |       | `-CXXDependentScopeMemberExpr 0x120944d48 <col:11, col:26> '<dependent type>' contains-errors lvalue .san
    |   |       |   `-ArraySubscriptExpr 0x120944d28 <col:11, col:24> '<dependent type>' contains-errors lvalue
    |   |       |     |-ImplicitCastExpr 0x120944cf8 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   |       |     | `-CXXDependentScopeMemberExpr 0x120944928 <col:11, col:17> '<dependent type>' contains-errors lvalue ->names
    |   |       |     |   `-RecoveryExpr 0x120944908 <col:11> '<dependent type>' contains-errors lvalue
    |   |       |     `-ImplicitCastExpr 0x120944d10 <col:23> 'unsigned int' <LValueToRValue>
    |   |       |       `-DeclRefExpr 0x120944970 <col:23> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   |       `-CXXDependentScopeMemberExpr 0x120944e70 <line:23:11, col:30> '<dependent type>' contains-errors lvalue .size
    |   |         `-CXXDependentScopeMemberExpr 0x120944e28 <col:11, col:26> '<dependent type>' contains-errors lvalue .san
    |   |           `-ArraySubscriptExpr 0x120944e08 <col:11, col:24> '<dependent type>' contains-errors lvalue
    |   |             |-ImplicitCastExpr 0x120944dd8 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   |             | `-CXXDependentScopeMemberExpr 0x120944a90 <col:11, col:17> '<dependent type>' contains-errors lvalue ->names
    |   |             |   `-RecoveryExpr 0x120944a70 <col:11> '<dependent type>' contains-errors lvalue
    |   |             `-ImplicitCastExpr 0x120944df0 <col:23> 'unsigned int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x120944ad8 <col:23> 'unsigned int' lvalue Var 0x120928488 'i' 'unsigned int'
    |   `-IfStmt 0x1209450c0 <line:26:3, line:29:3>
    |     |-BinaryOperator 0x120944fc0 <line:26:7, col:13> 'int' '<'
    |     | |-ImplicitCastExpr 0x120944fa8 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x120944f68 <col:7> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    |     | `-IntegerLiteral 0x120944f88 <col:13> 'int' 0
    |     `-CompoundStmt 0x1209450a0 <col:16, line:29:3>
    |       |-CallExpr 0x120945018 <line:27:4, col:18> 'int'
    |       | `-ImplicitCastExpr 0x120945000 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       |   `-DeclRefExpr 0x120944fe0 <col:4> 'int ()' Function 0x120941ac8 'gnutls_assert' 'int ()'
    |       `-GotoStmt 0x120945088 <line:28:4, col:9> 'cleanup' 0x120945038
    |-BinaryOperator 0x120945408 <line:32:2, col:46> 'int' contains-errors '='
    | |-DeclRefExpr 0x120945138 <col:2> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    | `-CallExpr 0x1209453c8 <col:8, col:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1209452b8 <col:8> 'int ()' Function 0x120945200 '_gnutls_x509_der_encode' 'int ()'
    |   |-RecoveryExpr 0x1209453a8 <col:32> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x1209452f0 <col:36> 'char[1]' lvalue ""
    |   |-RecoveryExpr 0x120945308 <col:40> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x120945328 <col:45> 'int' 0
    |-IfStmt 0x120945530 <line:33:2, line:36:2>
    | |-BinaryOperator 0x120945480 <line:33:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x120945468 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x120945428 <col:6> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    | | `-IntegerLiteral 0x120945448 <col:12> 'int' 0
    | `-CompoundStmt 0x120945510 <col:15, line:36:2>
    |   |-CallExpr 0x1209454d8 <line:34:3, col:17> 'int'
    |   | `-ImplicitCastExpr 0x1209454c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x1209454a0 <col:3> 'int ()' Function 0x120941ac8 'gnutls_assert' 'int ()'
    |   `-GotoStmt 0x1209454f8 <line:35:3, col:8> 'cleanup' 0x120945038
    |-BinaryOperator 0x120945590 <line:38:2, col:8> 'int' '='
    | |-DeclRefExpr 0x120945550 <col:2> 'int' lvalue Var 0x1209283d8 'ret' 'int'
    | `-IntegerLiteral 0x120945570 <col:8> 'int' 0
    |-LabelStmt 0x120945768 <line:40:2, line:41:27> 'cleanup'
    | `-CallExpr 0x120945740 <col:2, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x120945690 <col:2> 'int ()' Function 0x1209455d8 'asn1_delete_structure' 'int ()'
    |   `-UnaryOperator 0x120945728 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x120945708 <col:25> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1209457c0 <line:42:2, col:9>
      `-ImplicitCastExpr 0x1209457a8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x120945788 <col:9> 'int' lvalue Var 0x1209283d8 'ret' 'int'
