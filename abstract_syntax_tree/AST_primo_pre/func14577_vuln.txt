`-FunctionDecl 0x159928750  line:1:13 trim_marked 'void (struct audit_tree *)' static
  |-ParmVarDecl 0x159928648 <col:25, col:44> col:44 used tree 'struct audit_tree *'
  `-CompoundStmt 0x14b008c40 <line:2:1, line:49:1>
    |-DeclStmt 0x159940cd0 <line:3:2, col:25>
    | |-RecordDecl 0x159940a48 <col:2, col:9> col:9 struct list_head
    | |-VarDecl 0x159940bb8 <col:2, col:20> col:20 used p 'struct list_head *'
    | `-VarDecl 0x159940c48 <col:2, col:24> col:24 used q 'struct list_head *'
    |-CallExpr 0x159940ec0 <line:4:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x159940e10 <col:2> 'int ()' Function 0x159940d58 'spin_lock' 'int ()'
    | `-UnaryOperator 0x159940ea8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x159940e88 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x159941130 <line:5:2, line:8:2>
    | |-RecoveryExpr 0x159940f20 <line:5:6, col:12> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x159940ee8 <col:6> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
    | `-CompoundStmt 0x159941110 <col:19, line:8:2>
    |   |-CallExpr 0x1599410d8 <line:6:3, col:25> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159941028 <col:3> 'int ()' Function 0x159940f70 'spin_unlock' 'int ()'
    |   | `-UnaryOperator 0x1599410c0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x1599410a0 <col:16> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x159941100 <line:7:3>
    |-ForStmt 0x14980d230 <line:10:2, line:17:2>
    | |-BinaryOperator 0x159941218 <line:10:7, col:24> 'struct list_head *' contains-errors '='
    | | |-DeclRefExpr 0x159941150 <col:7> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    | | `-CXXDependentScopeMemberExpr 0x1599411d0 <col:11, col:24> '<dependent type>' contains-errors lvalue .next
    | |   `-RecoveryExpr 0x1599411a8 <col:11, col:17> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x159941170 <col:11> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1599412d0 <col:30, col:42> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x159941238 <col:30> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    | | `-UnaryOperator 0x1599412b8 <col:35, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x159941290 <col:36, col:42> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x159941258 <col:36> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
    | |-BinaryOperator 0x159941348 <col:50, col:54> 'struct list_head *' '='
    | | |-DeclRefExpr 0x1599412f0 <col:50> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    | | `-ImplicitCastExpr 0x159941330 <col:54> 'struct list_head *' <LValueToRValue>
    | |   `-DeclRefExpr 0x159941310 <col:54> 'struct list_head *' lvalue Var 0x159940c48 'q' 'struct list_head *'
    | `-CompoundStmt 0x14980d208 <col:57, line:17:2>
    |   |-DeclStmt 0x159941690 <line:11:3, col:55>
    |   | |-RecordDecl 0x159941368 <col:3, col:10> col:10 struct node
    |   | `-VarDecl 0x1599414d8 <col:3, col:16> col:16 used node 'struct node *'
    |   |-BinaryOperator 0x159941728 <line:12:3, col:10> 'struct list_head *' contains-errors '='
    |   | |-DeclRefExpr 0x1599416a8 <col:3> 'struct list_head *' lvalue Var 0x159940c48 'q' 'struct list_head *'
    |   | `-RecoveryExpr 0x159941700 <col:7, col:10> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1599416c8 <col:7> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    |   `-IfStmt 0x14980d1e8 <line:13:3, line:16:3>
    |     |-BinaryOperator 0x159941828 <line:13:7, col:28> '<dependent type>' contains-errors '&'
    |     | |-RecoveryExpr 0x159941780 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x159941748 <col:7> 'struct node *' lvalue Var 0x1599414d8 'node' 'struct node *'
    |     | `-ParenExpr 0x159941808 <col:21, col:28> 'unsigned int'
    |     |   `-BinaryOperator 0x1599417e8 <col:22, col:26> 'unsigned int' '<<'
    |     |     |-IntegerLiteral 0x1599417a8 <col:22> 'unsigned int' 1
    |     |     `-IntegerLiteral 0x1599417c8 <col:26> 'int' 31
    |     `-CompoundStmt 0x14980d1c8 <col:31, line:16:3>
    |       |-CallExpr 0x1599419b8 <line:14:4, col:19> 'int'
    |       | |-ImplicitCastExpr 0x1599419a0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x159941928 <col:4> 'int ()' Function 0x159941870 'list_del_init' 'int ()'
    |       | `-ImplicitCastExpr 0x1599419e0 <col:18> 'struct list_head *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x159941948 <col:18> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    |       `-CallExpr 0x14980d198 <line:15:4, col:29> '<dependent type>' contains-errors
    |         |-DeclRefExpr 0x14980d0e0 <col:4> 'int ()' Function 0x14980d028 'list_add' 'int ()'
    |         |-DeclRefExpr 0x14980d100 <col:13> 'struct list_head *' lvalue Var 0x159940bb8 'p' 'struct list_head *'
    |         `-UnaryOperator 0x14980d180 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |           `-RecoveryExpr 0x14980d158 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |             `-DeclRefExpr 0x14980d120 <col:17> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
    |-WhileStmt 0x14b0083e0 <line:19:2, line:37:2>
    | |-UnaryOperator 0x14980d408 <line:19:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14980d3e0 <col:10, col:34> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14980d348 <col:10> 'int ()' Function 0x14980d290 'list_empty' 'int ()'
    | |   `-UnaryOperator 0x14980d3c8 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x14980d3a0 <col:22, col:28> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x14980d368 <col:22> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
    | `-CompoundStmt 0x14b008398 <col:37, line:37:2>
    |   |-DeclStmt 0x14980d608 <line:20:3, col:20>
    |   | |-RecordDecl 0x14980d420 <col:3, col:10> col:10 struct node
    |   | `-VarDecl 0x14980d588 <col:3, col:16> col:16 used node 'struct node *'
    |   |-DeclStmt 0x14980d808 <line:21:3, col:28>
    |   | |-RecordDecl 0x14980d620 <col:3, col:10> col:10 struct audit_chunk
    |   | `-VarDecl 0x14980d788 <col:3, col:23> col:23 used chunk 'struct audit_chunk *'
    |   |-IfStmt 0x14980da48 <line:26:3, line:27:4>
    |   | |-UnaryOperator 0x14980da28 <line:26:7, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-ParenExpr 0x14980da08 <col:8, col:31> '<dependent type>' contains-errors
    |   | |   `-BinaryOperator 0x14980d9e8 <col:9, col:30> '<dependent type>' contains-errors '&'
    |   | |     |-RecoveryExpr 0x14980d940 <col:9, col:15> '<dependent type>' contains-errors lvalue
    |   | |     | `-DeclRefExpr 0x14980d908 <col:9> 'struct node *' lvalue Var 0x14980d588 'node' 'struct node *'
    |   | |     `-ParenExpr 0x14980d9c8 <col:23, col:30> 'unsigned int'
    |   | |       `-BinaryOperator 0x14980d9a8 <col:24, col:28> 'unsigned int' '<<'
    |   | |         |-IntegerLiteral 0x14980d968 <col:24> 'unsigned int' 1
    |   | |         `-IntegerLiteral 0x14980d988 <col:28> 'int' 31
    |   | `-BreakStmt 0x14980da40 <line:27:4>
    |   |-BinaryOperator 0x14980dc18 <line:29:3, col:26> 'struct audit_chunk *' '='
    |   | |-DeclRefExpr 0x14980da68 <col:3> 'struct audit_chunk *' lvalue Var 0x14980d788 'chunk' 'struct audit_chunk *'
    |   | `-ImplicitCastExpr 0x14980dc00 <col:11, col:26> 'struct audit_chunk *' <IntegralToPointer>
    |   |   `-CallExpr 0x14980dbc0 <col:11, col:26> 'int'
    |   |     |-ImplicitCastExpr 0x14980dba8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x14980db68 <col:11> 'int ()' Function 0x14980dab0 'find_chunk' 'int ()'
    |   |     `-ImplicitCastExpr 0x14980dbe8 <col:22> 'struct node *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14980db88 <col:22> 'struct node *' lvalue Var 0x14980d588 'node' 'struct node *'
    |   |-CallExpr 0x14980ddb0 <line:30:3, col:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14980dd18 <col:3> 'int ()' Function 0x14980dc60 'get_inotify_watch' 'int ()'
    |   | `-UnaryOperator 0x14980dd98 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x14980dd70 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x14980dd38 <col:22> 'struct audit_chunk *' lvalue Var 0x14980d788 'chunk' 'struct audit_chunk *'
    |   |-CallExpr 0x14980df50 <line:33:3, col:26> 'int'
    |   | |-ImplicitCastExpr 0x14980df38 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14980ded8 <col:3> 'int ()' Function 0x14980de20 'untag_chunk' 'int ()'
    |   | |-ImplicitCastExpr 0x14980df80 <col:15> 'struct audit_chunk *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14980def8 <col:15> 'struct audit_chunk *' lvalue Var 0x14980d788 'chunk' 'struct audit_chunk *'
    |   | `-ImplicitCastExpr 0x14980df98 <col:22> 'struct node *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14980df18 <col:22> 'struct node *' lvalue Var 0x14980d588 'node' 'struct node *'
    |   `-CallExpr 0x14b008350 <line:35:3, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14b0082b8 <col:3> 'int ()' Function 0x14b008200 'put_inotify_watch' 'int ()'
    |     `-UnaryOperator 0x14b008338 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x14b008310 <col:22, col:29> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x14b0082d8 <col:22> 'struct audit_chunk *' lvalue Var 0x14980d788 'chunk' 'struct audit_chunk *'
    `-IfStmt 0x14b008c10 <line:38:2, line:48:2> has_else
      |-BinaryOperator 0x14b008520 <line:38:6, col:28> 'int' contains-errors '&&'
      | |-UnaryOperator 0x14b008478 <col:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
      | | `-ImplicitCastExpr 0x14b008460 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
      | |   `-RecoveryExpr 0x14b008438 <col:7, col:13> '<dependent type>' contains-errors lvalue
      | |     `-DeclRefExpr 0x14b008400 <col:7> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      | `-UnaryOperator 0x14b008508 <col:21, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow
      |   `-ImplicitCastExpr 0x14b0084f0 <col:22, col:28> '<dependent type>' contains-errors <LValueToRValue>
      |     `-RecoveryExpr 0x14b0084c8 <col:22, col:28> '<dependent type>' contains-errors lvalue
      |       `-DeclRefExpr 0x14b008490 <col:22> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      |-CompoundStmt 0x14b008bb0 <col:35, line:46:2>
      | |-BinaryOperator 0x14b0085c0 <line:39:3, col:17> '<dependent type>' contains-errors '='
      | | |-RecoveryExpr 0x14b008578 <col:3, col:9> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x14b008540 <col:3> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      | | `-IntegerLiteral 0x14b0085a0 <col:17> 'int' 1
      | |-CallExpr 0x14b008838 <line:42:3, col:18> 'int'
      | | |-ImplicitCastExpr 0x14b008820 <col:3> 'int (*)()' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x14b0087e0 <col:3> 'int ()' Function 0x14b008728 'kill_rules' 'int ()'
      | | `-ImplicitCastExpr 0x14b008860 <col:14> 'struct audit_tree *' <LValueToRValue>
      | |   `-DeclRefExpr 0x14b008800 <col:14> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      | |-CallExpr 0x14b008910 <line:43:3, col:28> '<dependent type>' contains-errors
      | | |-DeclRefExpr 0x14b008878 <col:3> 'int ()' Function 0x159941870 'list_del_init' 'int ()'
      | | `-UnaryOperator 0x14b0088f8 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
      | |   `-RecoveryExpr 0x14b0088d0 <col:18, col:24> '<dependent type>' contains-errors lvalue
      | |     `-DeclRefExpr 0x14b008898 <col:18> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      | `-CallExpr 0x14b008b70 <line:45:3, col:17> 'int'
      |   |-ImplicitCastExpr 0x14b008b58 <col:3> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x14b008b18 <col:3> 'int ()' Function 0x14b008a60 'prune_one' 'int ()'
      |   `-ImplicitCastExpr 0x14b008b98 <col:13> 'struct audit_tree *' <LValueToRValue>
      |     `-DeclRefExpr 0x14b008b38 <col:13> 'struct audit_tree *' lvalue ParmVar 0x159928648 'tree' 'struct audit_tree *'
      `-CompoundStmt 0x14b008c00 <line:46:9, line:48:2>
