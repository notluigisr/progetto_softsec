`-FunctionDecl 0x156128318  line:1:1 invalid set_file_metadata 'int (const char *, const char *, int *)'
  |-ParmVarDecl 0x1561280d8 <col:20, col:32> col:32 used origin_url 'const char *'
  |-ParmVarDecl 0x156128158 <col:44, col:56> col:56 used referrer_url 'const char *'
  |-ParmVarDecl 0x156128228 <col:70, col:76> col:76 invalid fp 'int *'
  `-CompoundStmt 0x156141ca0 <line:2:1, line:14:1>
    |-DeclStmt 0x156128490 <line:4:3, col:18>
    | `-VarDecl 0x1561283f0 <col:3, col:17> col:7 used retval 'int' cinit
    |   `-UnaryOperator 0x156128478 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x156128458 <col:17> 'int' 1
    |-IfStmt 0x1561285b0 <line:6:3, line:7:12>
    | |-BinaryOperator 0x156128548 <line:6:7, col:23> 'int' contains-errors '||'
    | | |-UnaryOperator 0x1561284e0 <col:7, col:8> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1561284c8 <col:8> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1561284a8 <col:8> 'const char *' lvalue ParmVar 0x1561280d8 'origin_url' 'const char *'
    | | `-UnaryOperator 0x156128530 <col:22, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x156128518 <col:23> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1561284f8 <col:23> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1561285a0 <line:7:5, col:12>
    |   `-ImplicitCastExpr 0x156128588 <col:12> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x156128568 <col:12> 'int' lvalue Var 0x1561283f0 'retval' 'int'
    |-BinaryOperator 0x1561419e0 <line:9:3, col:73> 'int' contains-errors '='
    | |-DeclRefExpr 0x1561285d0 <col:3> 'int' lvalue Var 0x1561283f0 'retval' 'int'
    | `-CallExpr 0x1561419a8 <col:12, col:73> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x156128750 <col:12> 'int ()' Function 0x156128698 'write_xattr_metadata' 'int ()'
    |   |-StringLiteral 0x1561287b0 <col:34> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x156141948 <col:41, col:68> 'int'
    |   | |-ImplicitCastExpr 0x156141930 <col:41> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1561418b8 <col:41> 'int ()' Function 0x156141800 'escnonprint_uri' 'int ()'
    |   | `-ImplicitCastExpr 0x156141970 <col:58> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1561418d8 <col:58> 'const char *' lvalue ParmVar 0x1561280d8 'origin_url' 'const char *'
    |   `-RecoveryExpr 0x156141988 <col:71> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x156141c38 <line:10:3, line:11:77>
    | |-BinaryOperator 0x156141aa8 <line:10:7, col:20> 'int' '&&'
    | | |-ParenExpr 0x156141a50 <col:7, col:15> 'int'
    | | | `-UnaryOperator 0x156141a38 <col:8, col:9> 'int' prefix '!' cannot overflow
    | | |   `-ImplicitCastExpr 0x156141a20 <col:9> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x156141a00 <col:9> 'int' lvalue Var 0x1561283f0 'retval' 'int'
    | | `-ImplicitCastExpr 0x156141a90 <col:20> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x156141a70 <col:20> 'const char *' lvalue ParmVar 0x156128158 'referrer_url' 'const char *'
    | `-BinaryOperator 0x156141c18 <line:11:5, col:77> 'int' contains-errors '='
    |   |-DeclRefExpr 0x156141ac8 <col:5> 'int' lvalue Var 0x1561283f0 'retval' 'int'
    |   `-CallExpr 0x156141be0 <col:14, col:77> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x156141ae8 <col:14> 'int ()' Function 0x156128698 'write_xattr_metadata' 'int ()'
    |     |-StringLiteral 0x156141b08 <col:36> 'char[4]' lvalue "STR"
    |     |-CallExpr 0x156141b80 <col:43, col:72> 'int'
    |     | |-ImplicitCastExpr 0x156141b68 <col:43> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x156141b28 <col:43> 'int ()' Function 0x156141800 'escnonprint_uri' 'int ()'
    |     | `-ImplicitCastExpr 0x156141ba8 <col:60> 'const char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x156141b48 <col:60> 'const char *' lvalue ParmVar 0x156128158 'referrer_url' 'const char *'
    |     `-RecoveryExpr 0x156141bc0 <col:75> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x156141c90 <line:13:3, col:10>
      `-ImplicitCastExpr 0x156141c78 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x156141c58 <col:10> 'int' lvalue Var 0x1561283f0 'retval' 'int'
