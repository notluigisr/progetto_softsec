`-FunctionDecl 0x12c8300d8  line:1:12 invalid DoPamAuth 'int (struct pam_handle *, const char *, int)' static
  |-ParmVarDecl 0x12e00e248 <col:22, col:41> col:41 used pamh 'struct pam_handle *'
  |-ParmVarDecl 0x12e00e2c8 <line:2:22, col:34> col:34 used username 'const char *'
  |-ParmVarDecl 0x12e00e360 <line:3:22, <invalid sloc>> col:25 invalid 'int'
  `-CompoundStmt 0x12e0284d8 <line:4:1, line:31:1>
    |-DeclStmt 0x12c830478 <line:5:3, col:52>
    | `-VarDecl 0x12c8301b0 <col:3, col:51> col:7 used err 'int' cinit
    |   `-CallExpr 0x12c830440 <col:13, col:51> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c830370 <col:13> 'int ()' Function 0x12c8302b8 'pam_set_item' 'int ()'
    |     |-DeclRefExpr 0x12c830390 <col:26> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    |     |-RecoveryExpr 0x12c830420 <col:32> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12c8303c8 <col:43> 'const char *' lvalue ParmVar 0x12e00e2c8 'username' 'const char *'
    |-IfStmt 0x12c8309f8 <line:6:3, line:9:3>
    | |-BinaryOperator 0x12c830508 <line:6:7, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12c830490 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | | `-RecoveryExpr 0x12c8304e8 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c8309d8 <col:27, line:9:3>
    |   |-CallExpr 0x12c830958 <line:7:5, col:53> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12c830608 <col:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'
    |   | |-RecoveryExpr 0x12c8308c0 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x12c830680 <col:23> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x12c8308f8 <col:30, col:52> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x12c8308e0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12c830780 <col:30> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'
    |   |   |-ImplicitCastExpr 0x12c830928 <col:43> 'struct pam_handle *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12c8307a0 <col:43> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    |   |   `-ImplicitCastExpr 0x12c830940 <col:49> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x12c8307c0 <col:49> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    |   `-ReturnStmt 0x12c8309c8 <line:8:5, col:12>
    |     `-ImplicitCastExpr 0x12c8309b0 <col:12> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x12c830990 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    |-BinaryOperator 0x12c830bd8 <line:11:3, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c830a18 <col:3> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | `-CallExpr 0x12c830b90 <col:9, col:33> 'int'
    |   |-ImplicitCastExpr 0x12c830b78 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12c830b18 <col:9> 'int ()' Function 0x12c830a60 'pam_authenticate' 'int ()'
    |   |-ImplicitCastExpr 0x12c830bc0 <col:26> 'struct pam_handle *' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c830b38 <col:26> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    |   `-IntegerLiteral 0x12c830b58 <col:32> 'int' 0
    |-IfStmt 0x12c830f30 <line:12:3, line:16:3>
    | |-BinaryOperator 0x12c830c70 <line:12:7, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12c830bf8 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | | `-RecoveryExpr 0x12c830c50 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c830f10 <col:27, line:16:3>
    |   |-CallExpr 0x12c830e90 <line:13:5, line:14:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12c830c90 <line:13:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'
    |   | |-RecoveryExpr 0x12c830df8 <col:11> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x12c830cc8 <col:23> 'char[4]' lvalue "STR"
    |   | `-CallExpr 0x12c830e30 <line:14:11, col:33> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x12c830e18 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12c830ce8 <col:11> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'
    |   |   |-ImplicitCastExpr 0x12c830e60 <col:24> 'struct pam_handle *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12c830d08 <col:24> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    |   |   `-ImplicitCastExpr 0x12c830e78 <col:30> 'int' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x12c830d28 <col:30> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    |   `-ReturnStmt 0x12c830f00 <line:15:5, col:12>
    |     `-ImplicitCastExpr 0x12c830ee8 <col:12> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x12c830ec8 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    |-DeclStmt 0x12e027e00 <line:21:3, col:19>
    | `-VarDecl 0x12c830f98 <col:3, col:15> col:15 used data 'const void *'
    |-BinaryOperator 0x12e028088 <line:23:3, col:43> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e027e18 <col:3> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | `-CallExpr 0x12e028050 <col:9, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e027f18 <col:9> 'int ()' Function 0x12e027e60 'pam_get_item' 'int ()'
    |   |-DeclRefExpr 0x12e027f38 <col:22> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    |   |-RecoveryExpr 0x12e028030 <col:28> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12e027fc0 <col:38, col:39> 'const void **' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x12e027f70 <col:39> 'const void *' lvalue Var 0x12c830f98 'data' 'const void *'
    |-IfStmt 0x12e028460 <line:24:3, line:29:3> has_else
    | |-BinaryOperator 0x12e028120 <line:24:7, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12e0280a8 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | | `-RecoveryExpr 0x12e028100 <col:14> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x12e0283c0 <col:27, line:27:3>
    | | |-CallExpr 0x12e028340 <line:25:5, col:53> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12e028140 <col:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'
    | | | |-RecoveryExpr 0x12e0282a8 <col:11> '<dependent type>' contains-errors lvalue
    | | | |-StringLiteral 0x12e028178 <col:23> 'char[4]' lvalue "STR"
    | | | `-CallExpr 0x12e0282e0 <col:30, col:52> 'int' contains-errors
    | | |   |-ImplicitCastExpr 0x12e0282c8 <col:30> 'int (*)()' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x12e028198 <col:30> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'
    | | |   |-ImplicitCastExpr 0x12e028310 <col:43> 'struct pam_handle *' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12e0281b8 <col:43> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'
    | | |   `-ImplicitCastExpr 0x12e028328 <col:49> 'int' contains-errors <LValueToRValue>
    | | |     `-DeclRefExpr 0x12e0281d8 <col:49> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | | `-ReturnStmt 0x12e0283b0 <line:26:5, col:12>
    | |   `-ImplicitCastExpr 0x12e028398 <col:12> 'int' contains-errors <LValueToRValue>
    | |     `-DeclRefExpr 0x12e028378 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
    | `-CompoundStmt 0x12e028448 <line:27:10, line:29:3>
    |   `-IfStmt 0x12e028428 <line:28:5, col:74>
    |     |-ImplicitCastExpr 0x12e028400 <col:9> 'const void *' <LValueToRValue>
    |     | `-DeclRefExpr 0x12e0283e0 <col:9> 'const void *' lvalue Var 0x12c830f98 'data' 'const void *'
    |     `-CompoundStmt 0x12e028418 <col:15, col:74>
    `-ReturnStmt 0x12e0284c8 <line:30:3, col:10>
      `-ImplicitCastExpr 0x12e0284b0 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12e028490 <col:10> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'
