`-FunctionDecl 0x1419282e8  line:1:1 aff_check_string 'int (char *, char *, char *)'
  |-ParmVarDecl 0x1419280f0 <col:18, col:26> col:26 used spinval 'char *'
  |-ParmVarDecl 0x141928170 <col:35, col:43> col:43 used affval 'char *'
  |-ParmVarDecl 0x1419281f0 <col:51, col:57> col:57 used name 'char *'
  `-CompoundStmt 0x142008538 <line:2:1, line:5:1>
    `-IfStmt 0x142008518 <line:3:5, line:4:21>
      |-BinaryOperator 0x1419287a0 <line:3:9, col:55> 'int' contains-errors '&&'
      | |-BinaryOperator 0x1419286e8 <col:9, col:20> 'int' contains-errors '!='
      | | |-DeclRefExpr 0x1419283f0 <col:9> 'char *' lvalue ParmVar 0x1419280f0 'spinval' 'char *'
      | | `-RecoveryExpr 0x1419286c8 <col:20> '<dependent type>' contains-errors lvalue
      | `-BinaryOperator 0x141928780 <col:28, col:55> 'int' '!='
      |   |-CallExpr 0x141928720 <col:28, col:50> 'int'
      |   | |-ImplicitCastExpr 0x141928708 <col:28> 'int (*)()' <FunctionToPointerDecay>
      |   | | `-DeclRefExpr 0x141928560 <col:28> 'int ()' Function 0x1419284a8 'STRCMP' 'int ()'
      |   | |-ImplicitCastExpr 0x141928750 <col:35> 'char *' <LValueToRValue>
      |   | | `-DeclRefExpr 0x141928580 <col:35> 'char *' lvalue ParmVar 0x1419280f0 'spinval' 'char *'
      |   | `-ImplicitCastExpr 0x141928768 <col:44> 'char *' <LValueToRValue>
      |   |   `-DeclRefExpr 0x1419285a0 <col:44> 'char *' lvalue ParmVar 0x141928170 'affval' 'char *'
      |   `-IntegerLiteral 0x141928668 <col:55> 'int' 0
      `-CallExpr 0x1420084d0 <line:4:2, col:21> 'int'
        |-ImplicitCastExpr 0x1420084b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x1420082b8 <col:2> 'int ()' Function 0x142008200 'smsg' 'int ()'
        |-CallExpr 0x142008458 <col:7, col:14> 'int'
        | |-ImplicitCastExpr 0x142008440 <col:7> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1420083b8 <col:7> 'int ()' Function 0x142008300 '_' 'int ()'
        | `-ImplicitCastExpr 0x142008480 <col:9> 'char *' <ArrayToPointerDecay>
        |   `-StringLiteral 0x142008420 <col:9> 'char[4]' lvalue "STR"
        `-ImplicitCastExpr 0x142008500 <col:17> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x142008498 <col:17> 'char *' lvalue ParmVar 0x1419281f0 'name' 'char *'
