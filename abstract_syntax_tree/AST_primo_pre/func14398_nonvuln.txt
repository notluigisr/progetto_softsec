`-FunctionDecl 0x1481283a8  line:1:12 invalid get_cie_param_array 'int (const int *, const int *, int, float *)' static
  |-ParmVarDecl 0x1481280f0 <col:32, col:51> col:51 invalid mem 'const int *'
  |-ParmVarDecl 0x148128170 <col:56, col:67> col:67 invalid src 'const int *'
  |-ParmVarDecl 0x1481281f0 <col:73, col:77> col:77 used n 'int'
  |-ParmVarDecl 0x1481282a8 <col:80, col:87> col:87 used dst 'float *'
  `-CompoundStmt 0x148143610 <col:92, line:20:1>
    |-DeclStmt 0x1481284f0 <line:3:5, col:10>
    | `-VarDecl 0x148128488 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x1481285a8 <line:4:5, col:17>
    | `-VarDecl 0x148128520 <col:5, col:16> col:9 used code 'int' cinit
    |   `-IntegerLiteral 0x148128588 <col:16> 'int' 0
    |-ForStmt 0x148142790 <line:6:5, line:18:2>
    | |-BinaryOperator 0x148128600 <line:6:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x1481285c0 <col:10> 'int' lvalue Var 0x148128488 'i' 'int'
    | | `-IntegerLiteral 0x1481285e0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x148128690 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x148128660 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x148128620 <col:17> 'int' lvalue Var 0x148128488 'i' 'int'
    | | `-ImplicitCastExpr 0x148128678 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x148128640 <col:21> 'int' lvalue ParmVar 0x1481281f0 'n' 'int'
    | |-UnaryOperator 0x1481286d0 <col:24, col:25> 'int' postfix '++'
    | | `-DeclRefExpr 0x1481286b0 <col:24> 'int' lvalue Var 0x148128488 'i' 'int'
    | `-CompoundStmt 0x148142760 <col:29, line:18:2>
    |   |-BinaryOperator 0x148141a40 <line:7:3, col:40> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1481286e8 <col:3> 'int' lvalue Var 0x148128520 'code' 'int'
    |   | `-CallExpr 0x148141a00 <col:10, col:40> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1481418b8 <col:10> 'int ()' Function 0x148141800 'array_get' 'int ()'
    |   |   |-RecoveryExpr 0x1481418d8 <col:20> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x1481418f8 <col:25> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x148141918 <col:30> 'int' lvalue Var 0x148128488 'i' 'int'
    |   |   `-UnaryOperator 0x1481419e8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x1481419c8 <col:34> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x148141b20 <line:8:3, line:9:11>
    |   | |-BinaryOperator 0x148141ab8 <line:8:7, col:14> 'int' '<'
    |   | | |-ImplicitCastExpr 0x148141aa0 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x148141a60 <col:7> 'int' lvalue Var 0x148128520 'code' 'int'
    |   | | `-IntegerLiteral 0x148141a80 <col:14> 'int' 0
    |   | `-ReturnStmt 0x148141b10 <line:9:4, col:11>
    |   |   `-ImplicitCastExpr 0x148141af8 <col:11> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x148141ad8 <col:11> 'int' lvalue Var 0x148128520 'code' 'int'
    |   |-IfStmt 0x1481422c8 <line:10:3, line:15:35> has_else
    |   | |-CallExpr 0x148141d10 <line:10:7, col:36> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x148141c20 <col:7> 'int ()' Function 0x148141b68 'r_has_type' 'int ()'
    |   | | |-UnaryOperator 0x148141cd8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | `-RecoveryExpr 0x148141cb8 <col:19> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x148141cf0 <col:27> '<dependent type>' contains-errors lvalue
    |   | |-NullStmt 0x1481422c0 <line:11:4>
    |   | `-IfStmt 0x148142290 <line:12:8, line:15:35> has_else
    |   |   |-CallExpr 0x148141f80 <line:12:12, col:38> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x148141e90 <col:12> 'int ()' Function 0x148141b68 'r_has_type' 'int ()'
    |   |   | |-UnaryOperator 0x148141f48 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | | `-RecoveryExpr 0x148141f28 <col:24> '<dependent type>' contains-errors lvalue
    |   |   | `-RecoveryExpr 0x148141f60 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |-NullStmt 0x148142288 <line:13:4>
    |   |   `-CallExpr 0x148142260 <line:15:4, col:35> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1481421e0 <col:4> 'int ()' Function 0x148142128 'return_error' 'int ()'
    |   |     `-RecoveryExpr 0x148142240 <col:17> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x148142740 <line:16:3, line:17:36>
    |     |-BinaryOperator 0x148142678 <line:16:7, col:43> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x1481425c8 <col:7, col:17> 'int' contains-errors '<'
    |     | | |-ArraySubscriptExpr 0x148142558 <col:7, col:12> 'float' lvalue
    |     | | | |-ImplicitCastExpr 0x148142528 <col:7> 'float *' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x1481422f8 <col:7> 'float *' lvalue ParmVar 0x1481282a8 'dst' 'float *'
    |     | | | `-ImplicitCastExpr 0x148142540 <col:11> 'int' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x148142318 <col:11> 'int' lvalue Var 0x148128488 'i' 'int'
    |     | | `-UnaryOperator 0x1481425b0 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     | |   `-ImplicitCastExpr 0x148142598 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |     | |     `-RecoveryExpr 0x148142578 <col:17> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x148142658 <col:34, col:43> 'int' contains-errors '>'
    |     |   |-ArraySubscriptExpr 0x148142618 <col:34, col:39> 'float' lvalue
    |     |   | |-ImplicitCastExpr 0x1481425e8 <col:34> 'float *' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x1481423f0 <col:34> 'float *' lvalue ParmVar 0x1481282a8 'dst' 'float *'
    |     |   | `-ImplicitCastExpr 0x148142600 <col:38> 'int' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x148142410 <col:38> 'int' lvalue Var 0x148128488 'i' 'int'
    |     |   `-RecoveryExpr 0x148142638 <col:43> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x148142718 <line:17:4, col:36> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x148142698 <col:4> 'int ()' Function 0x148142128 'return_error' 'int ()'
    |       `-RecoveryExpr 0x1481426f8 <col:17> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x148143600 <line:19:5, col:12>
      `-ImplicitCastExpr 0x1481427e8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1481427c8 <col:12> 'int' lvalue Var 0x148128520 'code' 'int'
