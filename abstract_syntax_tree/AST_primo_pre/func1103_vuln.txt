`-FunctionDecl 0x12100de88  line:1:14 invalid Eval 'int (int *, int *)'
  |-ParmVarDecl 0x12100dd28 <col:19, col:34> col:34 invalid context 'int *'
  |-ParmVarDecl 0x12100dda8 <col:43, col:55> col:55 invalid node 'int *'
  `-CompoundStmt 0x121027aa8 <col:61, line:58:1>
    |-DeclStmt 0x12100e078 <line:2:3, line:3:70>
    | `-VarDecl 0x12100df58 <line:2:3, col:9> col:9 used params 'int *' auto
    |-DeclStmt 0x12100e320 <line:5:3, col:68>
    | `-VarDecl 0x12100e0a8 <col:3, col:23> col:23 invalid input 'const int *'
    |-RecoveryExpr 0x121027598 <line:9:3> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x121027a88 <line:10:3, col:34> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x121027a00 <col:3, col:13> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x1210275b8 <col:3> 'int *' lvalue Var 0x12100df58 'params' 'int *'
      `-RecoveryExpr 0x121027a60 <col:26, col:34> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x121027a28 <col:26> 'int *' lvalue Var 0x12100df58 'params' 'int *'
