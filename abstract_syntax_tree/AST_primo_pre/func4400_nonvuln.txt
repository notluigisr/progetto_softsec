`-FunctionDecl 0x1470e75a8  line:1:12 evr_get 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, int)' static
  |-ParmVarDecl 0x1470cee48 <col:20, col:40> col:40 used target 'struct task_struct *'
  |-ParmVarDecl 0x1470e7228 <col:48, col:74> col:74 regset 'const struct user_regset *'
  |-ParmVarDecl 0x1470e72a8 <line:2:6, col:19> col:19 used pos 'unsigned int'
  |-ParmVarDecl 0x1470e7328 <col:24, col:37> col:37 used count 'unsigned int'
  |-ParmVarDecl 0x1470e73a8 <line:3:6, col:12> col:12 used kbuf 'void *'
  |-ParmVarDecl 0x1470e7420 <col:18, col:23> col:23 __user 'int'
  `-CompoundStmt 0x1470e9bf0 <line:4:1, line:22:1>
    |-DeclStmt 0x1470e7748 <line:5:2, col:9>
    | `-VarDecl 0x1470e76e0 <col:2, col:6> col:6 used ret 'int'
    |-CallExpr 0x1470e7918 <line:7:2, col:28> 'int'
    | |-ImplicitCastExpr 0x1470e7900 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1470e7890 <col:2> 'int ()' Function 0x1470e77d8 'flush_spe_to_thread' 'int ()'
    | `-ImplicitCastExpr 0x1470e7940 <col:22> 'struct task_struct *' <LValueToRValue>
    |   `-DeclRefExpr 0x1470e78b0 <col:22> 'struct task_struct *' lvalue ParmVar 0x1470cee48 'target' 'struct task_struct *'
    |-BinaryOperator 0x1470e7e88 <line:9:2, line:11:36> 'int' contains-errors '='
    | |-DeclRefExpr 0x1470e7958 <line:9:2> 'int' lvalue Var 0x1470e76e0 'ret' 'int'
    | `-CallExpr 0x1470e7e30 <col:8, line:11:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1470e7a58 <line:9:8> 'int ()' Function 0x1470e79a0 'user_regset_copyout' 'int ()'
    |   |-UnaryOperator 0x1470e7ad0 <col:28, col:29> 'unsigned int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x1470e7a78 <col:29> 'unsigned int' lvalue ParmVar 0x1470e72a8 'pos' 'unsigned int'
    |   |-UnaryOperator 0x1470e7b08 <col:34, col:35> 'unsigned int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x1470e7ae8 <col:35> 'unsigned int' lvalue ParmVar 0x1470e7328 'count' 'unsigned int'
    |   |-UnaryOperator 0x1470e7b70 <col:42, col:43> 'void **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x1470e7b20 <col:43> 'void *' lvalue ParmVar 0x1470e73a8 'kbuf' 'void *'
    |   |-UnaryOperator 0x1470e7e18 <col:49, col:50> 'void **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x1470e7df8 <col:50> 'void *' lvalue ParmVar 0x1470e73a8 'kbuf' 'void *'
    |   |-UnaryOperator 0x1470e7c60 <line:10:7, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x1470e7c18 <col:8, col:23> '<dependent type>' contains-errors lvalue .evr
    |   |   `-RecoveryExpr 0x1470e7bf0 <col:8, col:16> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x1470e7bb8 <col:8> 'struct task_struct *' lvalue ParmVar 0x1470cee48 'target' 'struct task_struct *'
    |   |-IntegerLiteral 0x1470e7c78 <line:11:7> 'int' 0
    |   `-UnaryExprOrTypeTraitExpr 0x1470e7d60 <col:10, col:35> 'unsigned long' contains-errors sizeof
    |     `-ParenExpr 0x1470e7d40 <col:16, col:35> '<dependent type>' contains-errors lvalue
    |       `-CXXDependentScopeMemberExpr 0x1470e7cf8 <col:17, col:32> '<dependent type>' contains-errors lvalue .evr
    |         `-RecoveryExpr 0x1470e7cd0 <col:17, col:25> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x1470e7c98 <col:17> 'struct task_struct *' lvalue ParmVar 0x1470cee48 'target' 'struct task_struct *' non_odr_use_unevaluated
    |-IfStmt 0x1470e9b88 <line:16:2, line:19:38>
    | |-UnaryOperator 0x1470e8148 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1470e8130 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1470e8110 <col:7> 'int' lvalue Var 0x1470e76e0 'ret' 'int'
    | `-BinaryOperator 0x1470e9b68 <line:17:3, line:19:38> 'int' contains-errors '='
    |   |-DeclRefExpr 0x1470e8160 <line:17:3> 'int' lvalue Var 0x1470e76e0 'ret' 'int'
    |   `-CallExpr 0x1470e9b10 <col:9, line:19:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1470e8180 <line:17:9> 'int ()' Function 0x1470e79a0 'user_regset_copyout' 'int ()'
    |     |-UnaryOperator 0x1470e81c0 <col:29, col:30> 'unsigned int *' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x1470e81a0 <col:30> 'unsigned int' lvalue ParmVar 0x1470e72a8 'pos' 'unsigned int'
    |     |-UnaryOperator 0x1470e9800 <col:35, col:36> 'unsigned int *' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x1470e81d8 <col:36> 'unsigned int' lvalue ParmVar 0x1470e7328 'count' 'unsigned int'
    |     |-UnaryOperator 0x1470e9838 <col:43, col:44> 'void **' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x1470e9818 <col:44> 'void *' lvalue ParmVar 0x1470e73a8 'kbuf' 'void *'
    |     |-UnaryOperator 0x1470e9af8 <col:50, col:51> 'void **' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x1470e9ad8 <col:51> 'void *' lvalue ParmVar 0x1470e73a8 'kbuf' 'void *'
    |     |-UnaryOperator 0x1470e9928 <line:18:8, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x1470e98e0 <col:9, col:24> '<dependent type>' contains-errors lvalue .acc
    |     |   `-RecoveryExpr 0x1470e98b8 <col:9, col:17> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x1470e9880 <col:9> 'struct task_struct *' lvalue ParmVar 0x1470cee48 'target' 'struct task_struct *'
    |     |-UnaryExprOrTypeTraitExpr 0x1470e9a08 <line:19:8, col:33> 'unsigned long' contains-errors sizeof
    |     | `-ParenExpr 0x1470e99e8 <col:14, col:33> '<dependent type>' contains-errors lvalue
    |     |   `-CXXDependentScopeMemberExpr 0x1470e99a0 <col:15, col:30> '<dependent type>' contains-errors lvalue .evr
    |     |     `-RecoveryExpr 0x1470e9978 <col:15, col:23> '<dependent type>' contains-errors lvalue
    |     |       `-DeclRefExpr 0x1470e9940 <col:15> 'struct task_struct *' lvalue ParmVar 0x1470cee48 'target' 'struct task_struct *' non_odr_use_unevaluated
    |     `-UnaryOperator 0x1470e9a48 <col:36, col:37> 'int' prefix '-'
    |       `-IntegerLiteral 0x1470e9a28 <col:37> 'int' 1
    `-ReturnStmt 0x1470e9be0 <line:21:2, col:9>
      `-ImplicitCastExpr 0x1470e9bc8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1470e9ba8 <col:9> 'int' lvalue Var 0x1470e76e0 'ret' 'int'
