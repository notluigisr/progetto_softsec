`-FunctionDecl 0x1260e7d78  line:1:14 invalid sapi_add_header_ex 'int (char *, int, int, int)'
  |-ParmVarDecl 0x1260e7af0 <col:33, col:39> col:39 used header_line 'char *'
  |-ParmVarDecl 0x1260e7b70 <col:52, col:57> col:57 used header_line_len 'int'
  |-ParmVarDecl 0x1260e7bf0 <col:74, col:84> col:84 invalid duplicate 'int'
  |-ParmVarDecl 0x1260e7c70 <col:95, col:105> col:105 invalid replace 'int'
  `-CompoundStmt 0x127809e10 <line:2:1, line:16:1>
    |-ImplicitCastExpr 0x1260e7e60 <line:3:2> 'char *' <LValueToRValue>
    | `-DeclRefExpr 0x1260e7e40 <col:2> 'char *' lvalue ParmVar 0x1260e7af0 'header_line' 'char *'
    |-DeclStmt 0x1260e7ef8 <line:4:2, col:7>
    | `-VarDecl 0x1260e7e90 <col:2, col:6> col:6 used r 'int'
    |-IfStmt 0x127809da8 <line:12:2, line:13:20>
    | |-UnaryOperator 0x1260e81d8 <line:12:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1260e81c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1260e81a0 <col:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x127809d68 <line:13:3, col:20> 'int'
    |   |-ImplicitCastExpr 0x127809d50 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x127809ce0 <col:3> 'int ()' Function 0x127809c28 'efree' 'int ()'
    |   `-ImplicitCastExpr 0x127809d90 <col:9> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x127809d00 <col:9> 'char *' lvalue ParmVar 0x1260e7af0 'header_line' 'char *'
    `-ReturnStmt 0x127809e00 <line:15:2, col:9>
      `-ImplicitCastExpr 0x127809de8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x127809dc8 <col:9> 'int' lvalue Var 0x1260e7e90 'r' 'int'
