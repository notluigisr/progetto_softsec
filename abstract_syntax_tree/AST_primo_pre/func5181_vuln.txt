`-FunctionDecl 0x1201282e8  line:1:25 invalid tjBufSize 'int (int, int, int)'
  |-ParmVarDecl 0x1201280f0 <col:35, col:39> col:39 used width 'int'
  |-ParmVarDecl 0x120128170 <col:46, col:50> col:50 used height 'int'
  |-ParmVarDecl 0x1201281f0 <col:58, col:62> col:62 used jpegSubsamp 'int'
  `-CompoundStmt 0x1201425c0 <line:2:1, line:17:1>
    |-DeclStmt 0x120128460 <line:3:3, col:27>
    | `-VarDecl 0x1201283c0 <col:3, col:26> col:17 used retval 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x120128448 <col:26> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x120128428 <col:26> 'int' 0
    |-DeclStmt 0x120128618 <line:4:3, col:27>
    | |-VarDecl 0x120128490 <col:3, col:7> col:7 used mcuw 'int'
    | |-VarDecl 0x120128510 <col:3, col:13> col:13 used mcuh 'int'
    | `-VarDecl 0x120128590 <col:3, col:19> col:19 used chromasf 'int'
    |-IfStmt 0x120141ce8 <line:6:3, line:7:17>
    | |-BinaryOperator 0x120141a68 <line:6:7, col:68> 'int' contains-errors '||'
    | | |-BinaryOperator 0x120141a08 <col:7, col:48> 'int' '||'
    | | | |-BinaryOperator 0x1201419b0 <col:7, col:29> 'int' '||'
    | | | | |-BinaryOperator 0x120141958 <col:7, col:15> 'int' '<'
    | | | | | |-ImplicitCastExpr 0x120141940 <col:7> 'int' <LValueToRValue>
    | | | | | | `-DeclRefExpr 0x120128630 <col:7> 'int' lvalue ParmVar 0x1201280f0 'width' 'int'
    | | | | | `-IntegerLiteral 0x120128650 <col:15> 'int' 1
    | | | | `-BinaryOperator 0x120141990 <col:20, col:29> 'int' '<'
    | | | |   |-ImplicitCastExpr 0x120141978 <col:20> 'int' <LValueToRValue>
    | | | |   | `-DeclRefExpr 0x1201286a8 <col:20> 'int' lvalue ParmVar 0x120128170 'height' 'int'
    | | | |   `-IntegerLiteral 0x1201286c8 <col:29> 'int' 1
    | | | `-BinaryOperator 0x1201419e8 <col:34, col:48> 'int' '<'
    | | |   |-ImplicitCastExpr 0x1201419d0 <col:34> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x120128740 <col:34> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'
    | | |   `-IntegerLiteral 0x120128760 <col:48> 'int' 0
    | | `-BinaryOperator 0x120141a48 <col:53, col:68> 'int' contains-errors '>='
    | |   |-DeclRefExpr 0x1201287d8 <col:53> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'
    | |   `-RecoveryExpr 0x120141a28 <col:68> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x120141ca8 <line:7:5, col:17> 'int'
    |   |-ImplicitCastExpr 0x120141c90 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x120141be0 <col:5> 'int ()' Function 0x120141b28 'THROWG' 'int ()'
    |   `-ImplicitCastExpr 0x120141cd0 <col:12> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x120141c40 <col:12> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x1201420d0 <line:12:3, col:68> 'int' contains-errors '='
    | |-DeclRefExpr 0x120141db8 <col:3> 'int' lvalue Var 0x120128590 'chromasf' 'int'
    | `-ConditionalOperator 0x1201420a0 <col:14, col:68> '<dependent type>' contains-errors
    |   |-BinaryOperator 0x120141ff0 <col:14, col:29> 'int' contains-errors '=='
    |   | |-DeclRefExpr 0x120141dd8 <col:14> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'
    |   | `-RecoveryExpr 0x120141fd0 <col:29> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x120141e30 <col:43> 'int' 0
    |   `-BinaryOperator 0x120142080 <col:47, col:68> 'int' '/'
    |     |-BinaryOperator 0x120141e90 <col:47, col:51> 'int' '*'
    |     | |-IntegerLiteral 0x120141e50 <col:47> 'int' 4
    |     | `-IntegerLiteral 0x120141e70 <col:51> 'int' 64
    |     `-ParenExpr 0x120142060 <col:56, col:68> 'int'
    |       `-BinaryOperator 0x120142040 <col:57, col:64> 'int' '*'
    |         |-ImplicitCastExpr 0x120142010 <col:57> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x120141eb0 <col:57> 'int' lvalue Var 0x120128490 'mcuw' 'int'
    |         `-ImplicitCastExpr 0x120142028 <col:64> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x120141ed0 <col:64> 'int' lvalue Var 0x120128510 'mcuh' 'int'
    |-BinaryOperator 0x1201424d0 <line:13:3, col:68> 'unsigned long' '='
    | |-DeclRefExpr 0x1201420f0 <col:3> 'unsigned long' lvalue Var 0x1201283c0 'retval' 'unsigned long'
    | `-ImplicitCastExpr 0x1201424b8 <col:12, col:68> 'unsigned long' <IntegralCast>
    |   `-BinaryOperator 0x120142498 <col:12, col:68> 'int' '+'
    |     |-BinaryOperator 0x120142458 <col:12, col:64> 'int' '*'
    |     | |-BinaryOperator 0x1201423a0 <col:12, col:47> 'int' '*'
    |     | | |-CallExpr 0x120142268 <col:12, col:27> 'int'
    |     | | | |-ImplicitCastExpr 0x120142250 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | | | | `-DeclRefExpr 0x1201421f0 <col:12> 'int ()' Function 0x120142138 'PAD' 'int ()'
    |     | | | |-ImplicitCastExpr 0x120142298 <col:16> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x120142210 <col:16> 'int' lvalue ParmVar 0x1201280f0 'width' 'int'
    |     | | | `-ImplicitCastExpr 0x1201422b0 <col:23> 'int' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x120142230 <col:23> 'int' lvalue Var 0x120128490 'mcuw' 'int'
    |     | | `-CallExpr 0x120142340 <col:31, col:47> 'int'
    |     | |   |-ImplicitCastExpr 0x120142328 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x1201422c8 <col:31> 'int ()' Function 0x120142138 'PAD' 'int ()'
    |     | |   |-ImplicitCastExpr 0x120142370 <col:35> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x1201422e8 <col:35> 'int' lvalue ParmVar 0x120128170 'height' 'int'
    |     | |   `-ImplicitCastExpr 0x120142388 <col:43> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x120142308 <col:43> 'int' lvalue Var 0x120128510 'mcuh' 'int'
    |     | `-ParenExpr 0x120142438 <col:51, col:64> 'int'
    |     |   `-BinaryOperator 0x120142418 <col:52, col:56> 'int' '+'
    |     |     |-IntegerLiteral 0x1201423c0 <col:52> 'int' 2
    |     |     `-ImplicitCastExpr 0x120142400 <col:56> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1201423e0 <col:56> 'int' lvalue Var 0x120128590 'chromasf' 'int'
    |     `-IntegerLiteral 0x120142478 <col:68> 'int' 2048
    `-LabelStmt 0x1201425a0 <line:15:1, line:16:10> 'bailout'
      `-ReturnStmt 0x120142540 <col:3, col:10>
        `-ImplicitCastExpr 0x120142528 <col:10> 'int' <IntegralCast>
          `-ImplicitCastExpr 0x120142510 <col:10> 'unsigned long' <LValueToRValue>
            `-DeclRefExpr 0x1201424f0 <col:10> 'unsigned long' lvalue Var 0x1201283c0 'retval' 'unsigned long'
