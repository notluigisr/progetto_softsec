`-FunctionDecl 0x12b00dfa8  line:1:5 invalid gf_bs_read_u8_until_delimiter 'int (int *, int, int *, int)'
  |-ParmVarDecl 0x12b00dd28 <col:35, col:49> col:49 invalid bs 'int *'
  |-ParmVarDecl 0x12b00dda8 <col:53, col:56> col:56 invalid delimiter 'int'
  |-ParmVarDecl 0x12b00de28 <col:67, col:71> col:71 referenced invalid out 'int *'
  |-ParmVarDecl 0x12b00dea8 <col:76, col:80> col:80 invalid max_length 'int'
  `-CompoundStmt 0x12b028108 <col:92, line:21:1>
    |-DeclStmt 0x12b00e120 <line:3:2, col:14>
    | `-VarDecl 0x12b00e080 <col:2, col:13> col:7 used token 'char' cinit
    |   `-ImplicitCastExpr 0x12b00e108 <col:13> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x12b00e0e8 <col:13> 'int' 0
    |-IfStmt 0x12b00e248 <line:6:2, col:25>
    | |-UnaryOperator 0x12b00e170 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12b00e158 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12b00e138 <col:7> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12b00e228 <col:19, col:25> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x12b00e1a8 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12b00e188 <col:19> 'int *' lvalue ParmVar 0x12b00de28 'out' 'int *'
    |   `-RecoveryExpr 0x12b00e208 <col:25> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x12b027e98 <line:8:2, line:13:2>
    | |-RecoveryExpr 0x12b027b20 <line:8:8, col:61> '_Bool' contains-errors
    | `-CompoundStmt 0x12b027e78 <col:64, line:13:2>
    |   |-CallExpr 0x12b027cb8 <line:9:3, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12b027c20 <col:3> 'int ()' Function 0x12b027b68 'gf_bs_read_data' 'int ()'
    |   | |-RecoveryExpr 0x12b027c40 <col:19> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x12b027c80 <col:23, col:24> 'char *' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x12b027c60 <col:24> 'char' lvalue Var 0x12b00e080 'token' 'char'
    |   | `-IntegerLiteral 0x12b027c98 <col:31> 'int' 1
    |   `-IfStmt 0x12b027db8 <line:10:3, col:32>
    |     |-BinaryOperator 0x12b027d30 <col:7, col:16> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x12b027cf0 <col:7> 'char' lvalue Var 0x12b00e080 'token' 'char'
    |     | `-RecoveryExpr 0x12b027d10 <col:16> '<dependent type>' contains-errors lvalue
    |     `-GotoStmt 0x12b027da0 <col:27, col:32> 'found' 0x12b027d50
    |-CallExpr 0x12b028040 <line:16:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12b027f98 <col:2> 'int ()' Function 0x12b027ee0 'gf_bs_seek' 'int ()'
    | |-RecoveryExpr 0x12b027fb8 <col:13> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12b028020 <col:17> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x12b028090 <line:17:2, col:9>
    | `-IntegerLiteral 0x12b028070 <col:9> 'int' 0
    `-LabelStmt 0x12b0280e8 <line:19:1, line:20:9> 'found'
      `-ReturnStmt 0x12b0280d8 <col:2, col:9>
        `-RecoveryExpr 0x12b0280b8 <col:9> '<dependent type>' contains-errors lvalue
