`-FunctionDecl 0x14b01f838  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x14b01f758 <col:8> col:8 used QueryPlannerTest 'int'
  |-ParmVarDecl 0x14b01f6d8 <col:26> col:26 IntersectCompoundInsteadUnusedField2 'int'
  `-CompoundStmt 0x14b04c8a0 <col:64, line:18:1>
    |-CallExpr 0x14b04bef8 <line:3:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b01faa0 <col:5> 'int ()' Function 0x14b01f9e8 'addIndex' 'int ()'
    | `-CallExpr 0x14b04bed0 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b01fba0 <col:14> 'int ()' Function 0x14b01fae8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14b04bea0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14b01fc00 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14b01fc20 <col:28> 'int' 1
    |-CallExpr 0x14b04c010 <line:4:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b04bf20 <col:5> 'int ()' Function 0x14b01f9e8 'addIndex' 'int ()'
    | `-CallExpr 0x14b04bfe8 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b04bf40 <col:14> 'int ()' Function 0x14b01fae8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14b04bfb8 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14b04bf60 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14b04bf80 <col:28> 'int' 1
    |-CallExpr 0x14b04c128 <line:5:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b04c038 <col:5> 'int ()' Function 0x14b01f9e8 'addIndex' 'int ()'
    | `-CallExpr 0x14b04c100 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b04c058 <col:14> 'int ()' Function 0x14b01fae8 'BSON' 'int ()'
    |   `-RecoveryExpr 0x14b04c0d0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x14b04c078 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x14b04c098 <col:28> 'int' 1
    |-CallExpr 0x14b04c410 <line:6:5, col:29> 'int'
    | |-ImplicitCastExpr 0x14b04c3f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b04c230 <col:5> 'int ()' Function 0x14b04c178 'runQuery' 'int ()'
    | `-CallExpr 0x14b04c3b8 <col:14, col:28> 'int'
    |   |-ImplicitCastExpr 0x14b04c3a0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14b04c330 <col:14> 'int ()' Function 0x14b04c278 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x14b04c3e0 <col:23> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14b04c350 <col:23> 'char[4]' lvalue "STR"
    |-CallExpr 0x14b04c570 <line:8:5, col:26> 'int'
    | |-ImplicitCastExpr 0x14b04c558 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b04c518 <col:5> 'int ()' Function 0x14b04c460 'assertNumSolutions' 'int ()'
    | `-IntegerLiteral 0x14b04c538 <col:24> 'unsigned int' 3
    |-CallExpr 0x14b04c720 <line:9:5, line:11:14> 'int'
    | |-ImplicitCastExpr 0x14b04c708 <line:9:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b04c678 <col:5> 'int ()' Function 0x14b04c5c0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x14b04c748 <line:10:9, line:11:9> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14b04c6e0 <line:10:9, line:11:9> 'char[7]' lvalue "STRSTR"
    |-CallExpr 0x14b04c7c0 <line:12:5, line:14:14> 'int'
    | |-ImplicitCastExpr 0x14b04c7a8 <line:12:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b04c760 <col:5> 'int ()' Function 0x14b04c5c0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x14b04c7e8 <line:13:9, line:14:9> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x14b04c780 <line:13:9, line:14:9> 'char[7]' lvalue "STRSTR"
    `-CallExpr 0x14b04c860 <line:15:5, line:17:14> 'int'
      |-ImplicitCastExpr 0x14b04c848 <line:15:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x14b04c800 <col:5> 'int ()' Function 0x14b04c5c0 'assertSolutionExists' 'int ()'
      `-ImplicitCastExpr 0x14b04c888 <line:16:9, line:17:9> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x14b04c820 <line:16:9, line:17:9> 'char[7]' lvalue "STRSTR"
