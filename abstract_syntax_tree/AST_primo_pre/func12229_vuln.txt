`-FunctionDecl 0x13c1281a8  line:1:1 zzip_mem_disk_fdopen 'int (int)'
  |-ParmVarDecl 0x13c1280d8 <col:22, col:26> col:26 used fd 'int'
  `-CompoundStmt 0x13c140bf0 <line:2:1, line:13:1>
    |-IfStmt 0x13c128788 <line:4:5, line:8:5>
    | |-UnaryOperator 0x13c128528 <line:4:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13c128510 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13c1284f0 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c128768 <line:5:5, line:8:5>
    |   |-CallExpr 0x13c1286d8 <line:6:8, col:24> 'int'
    |   | |-ImplicitCastExpr 0x13c1286c0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13c128620 <col:8> 'int ()' Function 0x13c128568 'debug2' 'int ()'
    |   | |-ImplicitCastExpr 0x13c128708 <col:15> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x13c128680 <col:15> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x13c128720 <col:22> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13c1286a0 <col:22> 'int' lvalue ParmVar 0x13c1280d8 'fd' 'int'
    |   `-ReturnStmt 0x13c128758 <line:7:8, col:15>
    |     `-IntegerLiteral 0x13c128738 <col:15> 'int' 0
    |-CallExpr 0x13c140b78 <line:10:5, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13c140ab8 <col:5> 'int ()' Function 0x13c140a00 'zzip_mem_disk_load' 'int ()'
    | |-RecoveryExpr 0x13c140b38 <col:24> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x13c140b58 <col:29> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13c140be0 <line:11:5, col:12>
      `-RecoveryExpr 0x13c140bc0 <col:12> '<dependent type>' contains-errors lvalue
