`-FunctionDecl 0x132928430  line:1:13 invalid cirrus_invalidate_region 'void (int *, int, int, int, int)' static
  |-ParmVarDecl 0x132928128 <col:38, col:55> col:55 invalid s 'int *'
  |-ParmVarDecl 0x1329281a8 <col:58, col:62> col:62 used off_begin 'int'
  |-ParmVarDecl 0x132928228 <line:2:10, col:14> col:14 used off_pitch 'int'
  |-ParmVarDecl 0x1329282a8 <col:25, col:29> col:29 used bytesperline 'int'
  |-ParmVarDecl 0x132928328 <line:3:10, col:14> col:14 used lines 'int'
  `-CompoundStmt 0x132941e10 <line:4:1, line:15:1>
    |-DeclStmt 0x132928580 <line:5:5, col:10>
    | `-VarDecl 0x132928518 <col:5, col:9> col:9 used y 'int'
    |-DeclStmt 0x132928618 <line:6:5, col:16>
    | `-VarDecl 0x1329285b0 <col:5, col:9> col:9 used off_cur 'int'
    |-DeclStmt 0x1329286b0 <line:7:5, col:20>
    | `-VarDecl 0x132928648 <col:5, col:9> col:9 used off_cur_end 'int'
    `-ForStmt 0x132941dd8 <line:9:5, line:14:5>
      |-BinaryOperator 0x132928708 <line:9:10, col:14> 'int' '='
      | |-DeclRefExpr 0x1329286c8 <col:10> 'int' lvalue Var 0x132928518 'y' 'int'
      | `-IntegerLiteral 0x1329286e8 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x132928798 <col:17, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x132928768 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x132928728 <col:17> 'int' lvalue Var 0x132928518 'y' 'int'
      | `-ImplicitCastExpr 0x132928780 <col:21> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x132928748 <col:21> 'int' lvalue ParmVar 0x132928328 'lines' 'int'
      |-UnaryOperator 0x1329287d8 <col:28, col:29> 'int' postfix '++'
      | `-DeclRefExpr 0x1329287b8 <col:28> 'int' lvalue Var 0x132928518 'y' 'int'
      `-CompoundStmt 0x132941da8 <col:33, line:14:5>
        |-BinaryOperator 0x132941858 <line:10:2, col:12> 'int' '='
        | |-DeclRefExpr 0x132941800 <col:2> 'int' lvalue Var 0x1329285b0 'off_cur' 'int'
        | `-ImplicitCastExpr 0x132941840 <col:12> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x132941820 <col:12> 'int' lvalue ParmVar 0x1329281a8 'off_begin' 'int'
        |-BinaryOperator 0x1329419d0 <line:11:2, col:46> 'int' contains-errors '='
        | |-DeclRefExpr 0x132941878 <col:2> 'int' lvalue Var 0x132928648 'off_cur_end' 'int'
        | `-BinaryOperator 0x1329419b0 <col:16, col:46> '<dependent type>' contains-errors '&'
        |   |-ParenExpr 0x132941928 <col:16, col:39> 'int'
        |   | `-BinaryOperator 0x132941908 <col:17, col:27> 'int' '+'
        |   |   |-ImplicitCastExpr 0x1329418d8 <col:17> 'int' <LValueToRValue>
        |   |   | `-DeclRefExpr 0x132941898 <col:17> 'int' lvalue Var 0x1329285b0 'off_cur' 'int'
        |   |   `-ImplicitCastExpr 0x1329418f0 <col:27> 'int' <LValueToRValue>
        |   |     `-DeclRefExpr 0x1329418b8 <col:27> 'int' lvalue ParmVar 0x1329282a8 'bytesperline' 'int'
        |   `-CXXDependentScopeMemberExpr 0x132941968 <col:43, col:46> '<dependent type>' contains-errors lvalue ->cirrus_addr_mask
        |     `-RecoveryExpr 0x132941948 <col:43> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x132941ce8 <line:12:9, col:77> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x132941b50 <col:9> 'int ()' Function 0x132941a98 'memory_region_set_dirty' 'int ()'
        | |-UnaryOperator 0x132941c20 <col:33, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | `-CXXDependentScopeMemberExpr 0x132941bd8 <col:34, col:41> '<dependent type>' contains-errors lvalue .vram
        | |   `-CXXDependentScopeMemberExpr 0x132941b90 <col:34, col:37> '<dependent type>' contains-errors lvalue ->vga
        | |     `-RecoveryExpr 0x132941b70 <col:34> '<dependent type>' contains-errors lvalue
        | |-DeclRefExpr 0x132941c38 <col:47> 'int' lvalue Var 0x1329285b0 'off_cur' 'int'
        | `-BinaryOperator 0x132941cc8 <col:56, col:70> 'int' '-'
        |   |-ImplicitCastExpr 0x132941c98 <col:56> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x132941c58 <col:56> 'int' lvalue Var 0x132928648 'off_cur_end' 'int'
        |   `-ImplicitCastExpr 0x132941cb0 <col:70> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x132941c78 <col:70> 'int' lvalue Var 0x1329285b0 'off_cur' 'int'
        `-CompoundAssignOperator 0x132941d78 <line:13:2, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          |-DeclRefExpr 0x132941d20 <col:2> 'int' lvalue ParmVar 0x1329281a8 'off_begin' 'int'
          `-ImplicitCastExpr 0x132941d60 <col:15> 'int' <LValueToRValue>
            `-DeclRefExpr 0x132941d40 <col:15> 'int' lvalue ParmVar 0x132928228 'off_pitch' 'int'
