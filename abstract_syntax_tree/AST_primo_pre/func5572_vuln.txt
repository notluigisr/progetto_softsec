`-FunctionDecl 0x14c011f60  line:1:13 invalid vnc_write_pixels_generic 'void (int *, struct PixelFormat *, void *, int)' static
  |-ParmVarDecl 0x14b00dd28 <col:38, col:48> col:48 invalid vs 'int *'
  |-ParmVarDecl 0x14b00e318 <col:52, col:72> col:72 used pf 'struct PixelFormat *'
  |-ParmVarDecl 0x14b00e398 <line:2:38, col:44> col:44 used pixels1 'void *'
  |-ParmVarDecl 0x14c011e18 <col:53, col:57> col:57 used size 'int'
  `-CompoundStmt 0x14c014ea0 <line:3:1, line:33:1>
    `-IfStmt 0x14c014e70 <line:6:5, line:32:5> has_else
      |-BinaryOperator 0x14c0120a8 <line:6:9, col:32> 'int' contains-errors '=='
      | |-RecoveryExpr 0x14c012060 <col:9, col:13> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x14c012028 <col:9> 'struct PixelFormat *' lvalue ParmVar 0x14b00e318 'pf' 'struct PixelFormat *'
      | `-IntegerLiteral 0x14c012088 <col:32> 'int' 4
      |-CompoundStmt 0x14c012a88 <col:35, line:14:5>
      | |-DeclStmt 0x14c012238 <line:8:9, col:17>
      | | |-VarDecl 0x14c012138 <col:9, col:13> col:13 used n 'int'
      | | `-VarDecl 0x14c0121b8 <col:9, col:16> col:16 used i 'int'
      | |-BinaryOperator 0x14c0122e8 <line:9:9, col:21> 'int' '='
      | | |-DeclRefExpr 0x14c012250 <col:9> 'int' lvalue Var 0x14c012138 'n' 'int'
      | | `-BinaryOperator 0x14c0122c8 <col:13, col:21> 'int' '>>'
      | |   |-ImplicitCastExpr 0x14c0122b0 <col:13> 'int' <LValueToRValue>
      | |   | `-DeclRefExpr 0x14c012270 <col:13> 'int' lvalue ParmVar 0x14c011e18 'size' 'int'
      | |   `-IntegerLiteral 0x14c012290 <col:21> 'int' 2
      | `-ForStmt 0x14c012a50 <line:10:9, line:13:9>
      |   |-BinaryOperator 0x14c012348 <line:10:13, col:17> 'int' '='
      |   | |-DeclRefExpr 0x14c012308 <col:13> 'int' lvalue Var 0x14c0121b8 'i' 'int'
      |   | `-IntegerLiteral 0x14c012328 <col:17> 'int' 0
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x14c0123d8 <col:20, col:24> 'int' '<'
      |   | |-ImplicitCastExpr 0x14c0123a8 <col:20> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x14c012368 <col:20> 'int' lvalue Var 0x14c0121b8 'i' 'int'
      |   | `-ImplicitCastExpr 0x14c0123c0 <col:24> 'int' <LValueToRValue>
      |   |   `-DeclRefExpr 0x14c012388 <col:24> 'int' lvalue Var 0x14c012138 'n' 'int'
      |   |-UnaryOperator 0x14c012418 <col:27, col:28> 'int' postfix '++'
      |   | `-DeclRefExpr 0x14c0123f8 <col:27> 'int' lvalue Var 0x14c0121b8 'i' 'int'
      |   `-CompoundStmt 0x14c012a30 <col:32, line:13:9>
      |     |-CallExpr 0x14c012738 <line:11:13, col:49> '<dependent type>' contains-errors
      |     | |-DeclRefExpr 0x14c012590 <col:13> 'int ()' Function 0x14c0124d8 'vnc_convert_pixel' 'int ()'
      |     | |-RecoveryExpr 0x14c0125b0 <col:31> '<dependent type>' contains-errors lvalue
      |     | |-RecoveryExpr 0x14c0126c8 <col:35> '<dependent type>' contains-errors lvalue
      |     | `-ArraySubscriptExpr 0x14c012718 <col:40, col:48> 'void'
      |     |   |-ImplicitCastExpr 0x14c0126e8 <col:40> 'void *' <LValueToRValue>
      |     |   | `-DeclRefExpr 0x14c012620 <col:40> 'void *' lvalue ParmVar 0x14b00e398 'pixels1' 'void *'
      |     |   `-ImplicitCastExpr 0x14c012700 <col:47> 'int' <LValueToRValue>
      |     |     `-DeclRefExpr 0x14c012600 <col:47> 'int' lvalue Var 0x14c0121b8 'i' 'int'
      |     `-CallExpr 0x14c0129f8 <line:12:13, col:63> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x14c012850 <col:13> 'int ()' Function 0x14c012798 'vnc_write' 'int ()'
      |       |-RecoveryExpr 0x14c012870 <col:23> '<dependent type>' contains-errors lvalue
      |       |-RecoveryExpr 0x14c0129d8 <col:27> '<dependent type>' contains-errors lvalue
      |       `-CXXDependentScopeMemberExpr 0x14c012958 <col:32, col:48> '<dependent type>' contains-errors lvalue .bytes_per_pixel
      |         `-CXXDependentScopeMemberExpr 0x14c012910 <col:32, col:45> '<dependent type>' contains-errors lvalue .pf
      |           `-CXXDependentScopeMemberExpr 0x14c0128c8 <col:32, col:36> '<dependent type>' contains-errors lvalue ->clientds
      |             `-RecoveryExpr 0x14c0128a8 <col:32> '<dependent type>' contains-errors lvalue
      `-IfStmt 0x14c014e40 <line:14:12, line:32:5> has_else
        |-BinaryOperator 0x14c012b30 <line:14:16, col:39> 'int' contains-errors '=='
        | |-RecoveryExpr 0x14c012ae8 <col:16, col:20> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x14c012ab0 <col:16> 'struct PixelFormat *' lvalue ParmVar 0x14b00e318 'pf' 'struct PixelFormat *'
        | `-IntegerLiteral 0x14c012b10 <col:39> 'int' 2
        |-CompoundStmt 0x14c0146e0 <col:42, line:22:5>
        | |-DeclStmt 0x14c012cc0 <line:16:9, col:17>
        | | |-VarDecl 0x14c012bc0 <col:9, col:13> col:13 used n 'int'
        | | `-VarDecl 0x14c012c40 <col:9, col:16> col:16 used i 'int'
        | |-BinaryOperator 0x14c012d70 <line:17:9, col:21> 'int' '='
        | | |-DeclRefExpr 0x14c012cd8 <col:9> 'int' lvalue Var 0x14c012bc0 'n' 'int'
        | | `-BinaryOperator 0x14c012d50 <col:13, col:21> 'int' '>>'
        | |   |-ImplicitCastExpr 0x14c012d38 <col:13> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x14c012cf8 <col:13> 'int' lvalue ParmVar 0x14c011e18 'size' 'int'
        | |   `-IntegerLiteral 0x14c012d18 <col:21> 'int' 1
        | `-ForStmt 0x14c0146a8 <line:18:9, line:21:9>
        |   |-BinaryOperator 0x14c012dd0 <line:18:13, col:17> 'int' '='
        |   | |-DeclRefExpr 0x14c012d90 <col:13> 'int' lvalue Var 0x14c012c40 'i' 'int'
        |   | `-IntegerLiteral 0x14c012db0 <col:17> 'int' 0
        |   |-<<<NULL>>>
        |   |-BinaryOperator 0x14c014270 <col:20, col:24> 'int' '<'
        |   | |-ImplicitCastExpr 0x14c014240 <col:20> 'int' <LValueToRValue>
        |   | | `-DeclRefExpr 0x14c014200 <col:20> 'int' lvalue Var 0x14c012c40 'i' 'int'
        |   | `-ImplicitCastExpr 0x14c014258 <col:24> 'int' <LValueToRValue>
        |   |   `-DeclRefExpr 0x14c014220 <col:24> 'int' lvalue Var 0x14c012bc0 'n' 'int'
        |   |-UnaryOperator 0x14c0142b0 <col:27, col:28> 'int' postfix '++'
        |   | `-DeclRefExpr 0x14c014290 <col:27> 'int' lvalue Var 0x14c012c40 'i' 'int'
        |   `-CompoundStmt 0x14c014688 <col:32, line:21:9>
        |     |-CallExpr 0x14c014470 <line:19:13, col:49> '<dependent type>' contains-errors
        |     | |-DeclRefExpr 0x14c0142c8 <col:13> 'int ()' Function 0x14c0124d8 'vnc_convert_pixel' 'int ()'
        |     | |-RecoveryExpr 0x14c0142e8 <col:31> '<dependent type>' contains-errors lvalue
        |     | |-RecoveryExpr 0x14c014400 <col:35> '<dependent type>' contains-errors lvalue
        |     | `-ArraySubscriptExpr 0x14c014450 <col:40, col:48> 'void'
        |     |   |-ImplicitCastExpr 0x14c014420 <col:40> 'void *' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x14c014358 <col:40> 'void *' lvalue ParmVar 0x14b00e398 'pixels1' 'void *'
        |     |   `-ImplicitCastExpr 0x14c014438 <col:47> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x14c014338 <col:47> 'int' lvalue Var 0x14c012c40 'i' 'int'
        |     `-CallExpr 0x14c014650 <line:20:13, col:63> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x14c0144a8 <col:13> 'int ()' Function 0x14c012798 'vnc_write' 'int ()'
        |       |-RecoveryExpr 0x14c0144c8 <col:23> '<dependent type>' contains-errors lvalue
        |       |-RecoveryExpr 0x14c014630 <col:27> '<dependent type>' contains-errors lvalue
        |       `-CXXDependentScopeMemberExpr 0x14c0145b0 <col:32, col:48> '<dependent type>' contains-errors lvalue .bytes_per_pixel
        |         `-CXXDependentScopeMemberExpr 0x14c014568 <col:32, col:45> '<dependent type>' contains-errors lvalue .pf
        |           `-CXXDependentScopeMemberExpr 0x14c014520 <col:32, col:36> '<dependent type>' contains-errors lvalue ->clientds
        |             `-RecoveryExpr 0x14c014500 <col:32> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x14c014e10 <line:22:12, line:32:5> has_else
          |-BinaryOperator 0x14c014788 <line:22:16, col:39> 'int' contains-errors '=='
          | |-RecoveryExpr 0x14c014740 <col:16, col:20> '<dependent type>' contains-errors lvalue
          | | `-DeclRefExpr 0x14c014708 <col:16> 'struct PixelFormat *' lvalue ParmVar 0x14b00e318 'pf' 'struct PixelFormat *'
          | `-IntegerLiteral 0x14c014768 <col:39> 'int' 1
          |-CompoundStmt 0x14c014c78 <col:42, line:30:5>
          | |-DeclStmt 0x14c0148e0 <line:24:9, col:17>
          | | |-VarDecl 0x14c0147e0 <col:9, col:13> col:13 used n 'int'
          | | `-VarDecl 0x14c014860 <col:9, col:16> col:16 used i 'int'
          | |-BinaryOperator 0x14c014950 <line:25:9, col:13> 'int' '='
          | | |-DeclRefExpr 0x14c0148f8 <col:9> 'int' lvalue Var 0x14c0147e0 'n' 'int'
          | | `-ImplicitCastExpr 0x14c014938 <col:13> 'int' <LValueToRValue>
          | |   `-DeclRefExpr 0x14c014918 <col:13> 'int' lvalue ParmVar 0x14c011e18 'size' 'int'
          | `-ForStmt 0x14c014c40 <line:26:9, line:29:9>
          |   |-BinaryOperator 0x14c0149b0 <line:26:13, col:17> 'int' '='
          |   | |-DeclRefExpr 0x14c014970 <col:13> 'int' lvalue Var 0x14c014860 'i' 'int'
          |   | `-IntegerLiteral 0x14c014990 <col:17> 'int' 0
          |   |-<<<NULL>>>
          |   |-BinaryOperator 0x14c014a40 <col:20, col:24> 'int' '<'
          |   | |-ImplicitCastExpr 0x14c014a10 <col:20> 'int' <LValueToRValue>
          |   | | `-DeclRefExpr 0x14c0149d0 <col:20> 'int' lvalue Var 0x14c014860 'i' 'int'
          |   | `-ImplicitCastExpr 0x14c014a28 <col:24> 'int' <LValueToRValue>
          |   |   `-DeclRefExpr 0x14c0149f0 <col:24> 'int' lvalue Var 0x14c0147e0 'n' 'int'
          |   |-UnaryOperator 0x14c014a80 <col:27, col:28> 'int' postfix '++'
          |   | `-DeclRefExpr 0x14c014a60 <col:27> 'int' lvalue Var 0x14c014860 'i' 'int'
          |   `-CompoundStmt 0x14c014c30 <col:32, line:29:9>
          `-CompoundStmt 0x14c014e00 <line:30:12, line:32:5>
