`-FunctionDecl 0x13b927778  line:1:1 invalid xmlHashComputeKey 'int (int, const int *, const int *, const int *)'
  |-ParmVarDecl 0x13b9274f0 <col:19, col:35> col:35 invalid table 'int'
  |-ParmVarDecl 0x13b927570 <col:42, col:57> col:57 invalid name 'const int *'
  |-ParmVarDecl 0x13b9275f0 <line:2:12, col:27> col:27 invalid name2 'const int *'
  |-ParmVarDecl 0x13b927670 <col:34, col:49> col:49 invalid name3 'const int *'
  `-CompoundStmt 0x13b00c160 <col:56, line:23:1>
    |-DeclStmt 0x13b9278f8 <line:3:5, col:29>
    | `-VarDecl 0x13b927858 <col:5, col:27> col:19 used value 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x13b9278e0 <col:27> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x13b9278c0 <col:27> 'long' 0
    |-DeclStmt 0x13b927988 <line:4:5, col:12>
    | `-VarDecl 0x13b927920 <col:5, col:10> col:10 used ch 'char'
    |-IfStmt 0x13b00b738 <line:6:5, line:11:5>
    | |-BinaryOperator 0x13b927a18 <line:6:9, col:17> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13b9279a0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b9279f8 <col:17> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b00b718 <col:23, line:11:5>
    |   |-CompoundAssignOperator 0x13b927b08 <line:7:2, col:22> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x13b927a38 <col:2> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |   | `-BinaryOperator 0x13b927ae8 <col:11, col:22> '<dependent type>' contains-errors '*'
    |   |   |-IntegerLiteral 0x13b927a58 <col:11> 'int' 30
    |   |   `-ParenExpr 0x13b927ac8 <col:16, col:22> '<dependent type>' contains-errors
    |   |     `-UnaryOperator 0x13b927ab0 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |       `-ImplicitCastExpr 0x13b927a98 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x13b927a78 <col:18> '<dependent type>' contains-errors lvalue
    |   `-WhileStmt 0x13b00b6f8 <line:8:2, line:10:2>
    |     |-BinaryOperator 0x13b00b420 <line:8:9, col:27> 'int' contains-errors '!='
    |     | |-ParenExpr 0x13b927bc8 <col:9, col:22> 'char' contains-errors
    |     | | `-BinaryOperator 0x13b927ba8 <col:10, col:20> 'char' contains-errors '='
    |     | |   |-DeclRefExpr 0x13b927b38 <col:10> 'char' lvalue Var 0x13b927920 'ch' 'char'
    |     | |   `-UnaryOperator 0x13b927b90 <col:15, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | |     `-UnaryOperator 0x13b927b78 <col:16, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     | |       `-RecoveryExpr 0x13b927b58 <col:16> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x13b00b400 <col:27> 'int' 0
    |     `-CompoundStmt 0x13b00b6e0 <col:30, line:10:2>
    |       `-BinaryOperator 0x13b00b6c0 <line:9:6, col:70> 'unsigned long' '='
    |         |-DeclRefExpr 0x13b00b440 <col:6> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |         `-BinaryOperator 0x13b00b6a0 <col:14, col:70> 'unsigned long' '^'
    |           |-ImplicitCastExpr 0x13b00b688 <col:14> 'unsigned long' <LValueToRValue>
    |           | `-DeclRefExpr 0x13b00b460 <col:14> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |           `-ParenExpr 0x13b00b668 <col:22, col:70> 'unsigned long'
    |             `-BinaryOperator 0x13b00b648 <col:23, col:68> 'unsigned long' '+'
    |               |-BinaryOperator 0x13b00b5b0 <col:23, col:49> 'unsigned long' '+'
    |               | |-ParenExpr 0x13b00b4f8 <col:23, col:34> 'unsigned long'
    |               | | `-BinaryOperator 0x13b00b4d8 <col:24, col:33> 'unsigned long' '<<'
    |               | |   |-ImplicitCastExpr 0x13b00b4c0 <col:24> 'unsigned long' <LValueToRValue>
    |               | |   | `-DeclRefExpr 0x13b00b480 <col:24> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               | |   `-IntegerLiteral 0x13b00b4a0 <col:33> 'int' 5
    |               | `-ParenExpr 0x13b00b590 <col:38, col:49> 'unsigned long'
    |               |   `-BinaryOperator 0x13b00b570 <col:39, col:48> 'unsigned long' '>>'
    |               |     |-ImplicitCastExpr 0x13b00b558 <col:39> 'unsigned long' <LValueToRValue>
    |               |     | `-DeclRefExpr 0x13b00b518 <col:39> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               |     `-IntegerLiteral 0x13b00b538 <col:48> 'int' 3
    |               `-CStyleCastExpr 0x13b00b620 <col:53, col:68> 'unsigned long' <IntegralCast>
    |                 `-ImplicitCastExpr 0x13b00b608 <col:68> 'char' <LValueToRValue> part_of_explicit_cast
    |                   `-DeclRefExpr 0x13b00b5d0 <col:68> 'char' lvalue Var 0x13b927920 'ch' 'char'
    |-IfStmt 0x13b00bbd0 <line:12:5, line:16:5>
    | |-BinaryOperator 0x13b00b7d0 <line:12:9, col:18> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13b00b758 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b00b7b0 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b00bbb8 <col:24, line:16:5>
    |   `-WhileStmt 0x13b00bb98 <line:13:2, line:15:2>
    |     |-BinaryOperator 0x13b00b8c0 <line:13:9, col:28> 'int' contains-errors '!='
    |     | |-ParenExpr 0x13b00b880 <col:9, col:23> 'char' contains-errors
    |     | | `-BinaryOperator 0x13b00b860 <col:10, col:21> 'char' contains-errors '='
    |     | |   |-DeclRefExpr 0x13b00b7f0 <col:10> 'char' lvalue Var 0x13b927920 'ch' 'char'
    |     | |   `-UnaryOperator 0x13b00b848 <col:15, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | |     `-UnaryOperator 0x13b00b830 <col:16, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     | |       `-RecoveryExpr 0x13b00b810 <col:16> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x13b00b8a0 <col:28> 'int' 0
    |     `-CompoundStmt 0x13b00bb80 <col:31, line:15:2>
    |       `-BinaryOperator 0x13b00bb60 <line:14:6, col:70> 'unsigned long' '='
    |         |-DeclRefExpr 0x13b00b8e0 <col:6> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |         `-BinaryOperator 0x13b00bb40 <col:14, col:70> 'unsigned long' '^'
    |           |-ImplicitCastExpr 0x13b00bb28 <col:14> 'unsigned long' <LValueToRValue>
    |           | `-DeclRefExpr 0x13b00b900 <col:14> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |           `-ParenExpr 0x13b00bb08 <col:22, col:70> 'unsigned long'
    |             `-BinaryOperator 0x13b00bae8 <col:23, col:68> 'unsigned long' '+'
    |               |-BinaryOperator 0x13b00ba50 <col:23, col:49> 'unsigned long' '+'
    |               | |-ParenExpr 0x13b00b998 <col:23, col:34> 'unsigned long'
    |               | | `-BinaryOperator 0x13b00b978 <col:24, col:33> 'unsigned long' '<<'
    |               | |   |-ImplicitCastExpr 0x13b00b960 <col:24> 'unsigned long' <LValueToRValue>
    |               | |   | `-DeclRefExpr 0x13b00b920 <col:24> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               | |   `-IntegerLiteral 0x13b00b940 <col:33> 'int' 5
    |               | `-ParenExpr 0x13b00ba30 <col:38, col:49> 'unsigned long'
    |               |   `-BinaryOperator 0x13b00ba10 <col:39, col:48> 'unsigned long' '>>'
    |               |     |-ImplicitCastExpr 0x13b00b9f8 <col:39> 'unsigned long' <LValueToRValue>
    |               |     | `-DeclRefExpr 0x13b00b9b8 <col:39> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               |     `-IntegerLiteral 0x13b00b9d8 <col:48> 'int' 3
    |               `-CStyleCastExpr 0x13b00bac0 <col:53, col:68> 'unsigned long' <IntegralCast>
    |                 `-ImplicitCastExpr 0x13b00baa8 <col:68> 'char' <LValueToRValue> part_of_explicit_cast
    |                   `-DeclRefExpr 0x13b00ba70 <col:68> 'char' lvalue Var 0x13b927920 'ch' 'char'
    |-IfStmt 0x13b00c068 <line:17:5, line:21:5>
    | |-BinaryOperator 0x13b00bc68 <line:17:9, col:18> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13b00bbf0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b00bc48 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13b00c050 <col:24, line:21:5>
    |   `-WhileStmt 0x13b00c030 <line:18:2, line:20:2>
    |     |-BinaryOperator 0x13b00bd58 <line:18:9, col:28> 'int' contains-errors '!='
    |     | |-ParenExpr 0x13b00bd18 <col:9, col:23> 'char' contains-errors
    |     | | `-BinaryOperator 0x13b00bcf8 <col:10, col:21> 'char' contains-errors '='
    |     | |   |-DeclRefExpr 0x13b00bc88 <col:10> 'char' lvalue Var 0x13b927920 'ch' 'char'
    |     | |   `-UnaryOperator 0x13b00bce0 <col:15, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | |     `-UnaryOperator 0x13b00bcc8 <col:16, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     | |       `-RecoveryExpr 0x13b00bca8 <col:16> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x13b00bd38 <col:28> 'int' 0
    |     `-CompoundStmt 0x13b00c018 <col:31, line:20:2>
    |       `-BinaryOperator 0x13b00bff8 <line:19:6, col:70> 'unsigned long' '='
    |         |-DeclRefExpr 0x13b00bd78 <col:6> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |         `-BinaryOperator 0x13b00bfd8 <col:14, col:70> 'unsigned long' '^'
    |           |-ImplicitCastExpr 0x13b00bfc0 <col:14> 'unsigned long' <LValueToRValue>
    |           | `-DeclRefExpr 0x13b00bd98 <col:14> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |           `-ParenExpr 0x13b00bfa0 <col:22, col:70> 'unsigned long'
    |             `-BinaryOperator 0x13b00bf80 <col:23, col:68> 'unsigned long' '+'
    |               |-BinaryOperator 0x13b00bee8 <col:23, col:49> 'unsigned long' '+'
    |               | |-ParenExpr 0x13b00be30 <col:23, col:34> 'unsigned long'
    |               | | `-BinaryOperator 0x13b00be10 <col:24, col:33> 'unsigned long' '<<'
    |               | |   |-ImplicitCastExpr 0x13b00bdf8 <col:24> 'unsigned long' <LValueToRValue>
    |               | |   | `-DeclRefExpr 0x13b00bdb8 <col:24> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               | |   `-IntegerLiteral 0x13b00bdd8 <col:33> 'int' 5
    |               | `-ParenExpr 0x13b00bec8 <col:38, col:49> 'unsigned long'
    |               |   `-BinaryOperator 0x13b00bea8 <col:39, col:48> 'unsigned long' '>>'
    |               |     |-ImplicitCastExpr 0x13b00be90 <col:39> 'unsigned long' <LValueToRValue>
    |               |     | `-DeclRefExpr 0x13b00be50 <col:39> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
    |               |     `-IntegerLiteral 0x13b00be70 <col:48> 'int' 3
    |               `-CStyleCastExpr 0x13b00bf58 <col:53, col:68> 'unsigned long' <IntegralCast>
    |                 `-ImplicitCastExpr 0x13b00bf40 <col:68> 'char' <LValueToRValue> part_of_explicit_cast
    |                   `-DeclRefExpr 0x13b00bf08 <col:68> 'char' lvalue Var 0x13b927920 'ch' 'char'
    `-ReturnStmt 0x13b00c150 <line:22:5, col:32>
      `-ParenExpr 0x13b00c130 <col:12, col:32> '<dependent type>' contains-errors
        `-BinaryOperator 0x13b00c110 <col:13, col:28> '<dependent type>' contains-errors '%'
          |-DeclRefExpr 0x13b00c088 <col:13> 'unsigned long' lvalue Var 0x13b927858 'value' 'unsigned long'
          `-CXXDependentScopeMemberExpr 0x13b00c0c8 <col:21, col:28> '<dependent type>' contains-errors lvalue ->size
            `-RecoveryExpr 0x13b00c0a8 <col:21> '<dependent type>' contains-errors lvalue
