`-FunctionDecl 0x1239290c8  line:1:10 invalid run 'int (int *, const int)'
  |-ParmVarDecl 0x123928f28 <col:14, col:32> col:32 invalid opCtx 'int *'
  |-ParmVarDecl 0x123928fa8 <line:2:14, <invalid sloc>> col:26 invalid 'const int'
  `-CompoundStmt 0x124009840 <line:4:38, line:93:5>
    |-RecoveryExpr 0x1239291b0 <line:5:9> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1239293b0 <line:7:9, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123929330 <col:9> 'int ()' Function 0x123929278 'uassertStatusOK' 'int ()'
    | `-RecoveryExpr 0x123929390 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123942748 <line:9:9, line:11:9>
    | |-BinaryOperator 0x123942600 <line:9:13, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x1239295d0 <col:13, col:33> '<dependent type>' contains-errors
    | | | `-CXXDependentScopeMemberExpr 0x123929588 <col:13, col:27> '<dependent type>' contains-errors lvalue .getDB
    | | |   `-CXXDependentScopeMemberExpr 0x123929540 <col:13, col:18> '<dependent type>' contains-errors lvalue .userName
    | | |     `-RecoveryExpr 0x123929520 <col:13> '<dependent type>' contains-errors lvalue
    | | `-StringLiteral 0x1239294e0 <col:38> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x123942738 <col:45, line:11:9>
    |-IfStmt 0x123942b10 <line:13:9, line:17:9>
    | |-BinaryOperator 0x123942aa8 <line:13:13, col:59> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x1239429a0 <col:13, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x123942988 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x123942940 <col:14, col:19> '<dependent type>' contains-errors lvalue .hasPassword
    | | |     `-RecoveryExpr 0x123942920 <col:14> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x123942a88 <col:34, col:59> 'int' contains-errors '!='
    | |   |-CallExpr 0x123942a68 <col:34, col:54> '<dependent type>' contains-errors
    | |   | `-CXXDependentScopeMemberExpr 0x123942a20 <col:34, col:48> '<dependent type>' contains-errors lvalue .getDB
    | |   |   `-CXXDependentScopeMemberExpr 0x1239429d8 <col:34, col:39> '<dependent type>' contains-errors lvalue .userName
    | |   |     `-RecoveryExpr 0x1239429b8 <col:34> '<dependent type>' contains-errors lvalue
    | |   `-StringLiteral 0x1239428c0 <col:59> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x123942b00 <col:66, line:17:9>
    |-IfStmt 0x123942d58 <line:19:9, line:23:9>
    | |-RecoveryExpr 0x123942c98 <line:19:13, col:60> '_Bool' contains-errors
    | `-CompoundStmt 0x123942d48 <col:67, line:23:9>
    |-IfStmt 0x123942de8 <line:25:9, line:27:9>
    | |-RecoveryExpr 0x123942d78 <line:25:13, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x123942dd8 <col:29, line:27:9>
    |-DeclStmt 0x123942f98 <line:47:9, col:25>
    | `-VarDecl 0x123942f30 <col:9, col:13> col:13 used authzVersion 'int'
    |-IfStmt 0x123943198 <line:56:9, line:59:9>
    | |-RecoveryExpr 0x123943148 <line:56:13, col:90> '_Bool' contains-errors
    | `-CompoundStmt 0x123943188 <col:93, line:59:9>
    `-IfStmt 0x123943208 <line:61:9, line:63:9>
      |-RecoveryExpr 0x1239431b8 <line:61:13, col:18> '_Bool' contains-errors
      `-CompoundStmt 0x1239431f8 <col:33, line:63:9>
