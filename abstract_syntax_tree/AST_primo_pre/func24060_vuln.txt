`-FunctionDecl 0x15890de50  line:1:6 invalid XMLRPC_SetValueDateTime_ISO8601 'void (int, const char *)'
  |-ParmVarDecl 0x15890dcf0 <col:38, col:51> col:51 invalid value 'int'
  |-ParmVarDecl 0x15890dd70 <col:58, col:70> col:70 used s 'const char *'
  `-CompoundStmt 0x14f013a00 <col:73, line:9:1>
    `-IfStmt 0x15890e3d8 <line:2:4, line:8:4>
      |-RecoveryExpr 0x15890df08 <line:2:7> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15890e3c0 <col:14, line:8:4>
        `-IfStmt 0x15890e3a0 <line:4:7, line:7:7>
          |-ImplicitCastExpr 0x15890df48 <line:4:10> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x15890df28 <col:10> 'const char *' lvalue ParmVar 0x15890dd70 's' 'const char *'
          `-CompoundStmt 0x15890e380 <col:13, line:7:7>
            |-CallExpr 0x15890e198 <line:5:10, col:40> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x15890e0c0 <col:10> 'int ()' Function 0x15890e008 'date_from_ISO8601' 'int ()'
            | |-DeclRefExpr 0x15890e0e0 <col:28> 'const char *' lvalue ParmVar 0x15890dd70 's' 'const char *'
            | `-UnaryOperator 0x15890e180 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
            |   `-RecoveryExpr 0x15890e160 <col:32> '<dependent type>' contains-errors lvalue
            `-CallExpr 0x15890e350 <line:6:10, col:49> '<dependent type>' contains-errors
              |-DeclRefExpr 0x15890e2a8 <col:10> 'int ()' Function 0x15890e1f0 'XMLRPC_SetValueDateTime' 'int ()'
              |-RecoveryExpr 0x15890e2c8 <col:34> '<dependent type>' contains-errors lvalue
              `-RecoveryExpr 0x15890e330 <col:41> '<dependent type>' contains-errors lvalue
