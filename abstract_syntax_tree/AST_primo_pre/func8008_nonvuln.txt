`-FunctionDecl 0x145128258  line:1:1 invalid xmlParseNameAndCompare 'int (int, const int *)'
  |-ParmVarDecl 0x1451280f0 <col:24, col:41> col:41 referenced invalid ctxt 'int'
  |-ParmVarDecl 0x145128170 <col:47, col:62> col:62 invalid other 'const int *'
  `-CompoundStmt 0x145142068 <col:69, line:26:1>
    |-DeclStmt 0x1451283b0 <line:2:5, col:40>
    | `-VarDecl 0x145128328 <col:5, col:29> col:29 invalid cmp 'const int *' register
    |-DeclStmt 0x145128448 <line:3:5, col:31>
    | `-VarDecl 0x1451283e0 <col:5, col:29> col:29 referenced invalid in 'const int *' register
    |-DeclStmt 0x1451284e0 <line:4:5, col:23>
    | `-VarDecl 0x145128478 <col:5, col:20> col:20 referenced invalid ret 'const int *'
    |-BinaryOperator 0x1451285f0 <line:8:5, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x145128518 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1451284f8 <col:5> 'const int *' lvalue Var 0x1451283e0 'in' 'const int *'
    | `-CXXDependentScopeMemberExpr 0x1451285a8 <col:10, col:23> '<dependent type>' contains-errors lvalue ->cur
    |   `-CXXDependentScopeMemberExpr 0x145128560 <col:10, col:16> '<dependent type>' contains-errors lvalue ->input
    |     `-RecoveryExpr 0x145128540 <col:10> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x145141918 <line:9:5, line:13:5>
    | |-BinaryOperator 0x145128760 <line:9:12, col:32> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x145128680 <col:12, col:19> 'int' contains-errors '!='
    | | | |-UnaryOperator 0x145128648 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x145128630 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x145128610 <col:13> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x145128660 <col:19> 'int' 0
    | | `-BinaryOperator 0x145128740 <col:24, col:32> 'int' contains-errors '=='
    | |   |-UnaryOperator 0x1451286d8 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x1451286c0 <col:25> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x1451286a0 <col:25> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x145128728 <col:31, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x145128710 <col:32> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x1451286f0 <col:32> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1451418f0 <col:37, line:13:5>
    |   |-UnaryOperator 0x1451287a0 <line:10:2, col:4> '<dependent type>' contains-errors prefix '++' cannot overflow
    |   | `-RecoveryExpr 0x145128780 <col:4> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x1451287d8 <line:11:2, col:4> '<dependent type>' contains-errors prefix '++' cannot overflow
    |   | `-RecoveryExpr 0x1451287b8 <col:4> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1451418d8 <line:12:2, col:18> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x145141890 <col:2, col:15> '<dependent type>' contains-errors lvalue ->col
    |       `-CXXDependentScopeMemberExpr 0x145141848 <col:2, col:8> '<dependent type>' contains-errors lvalue ->input
    |         `-RecoveryExpr 0x145141820 <col:2> '<dependent type>' contains-errors lvalue
    |           `-DeclRefExpr 0x145141800 <col:2> 'int' lvalue ParmVar 0x1451280f0 'ctxt' 'int'
    |-IfStmt 0x145141dd8 <line:14:5, line:18:5>
    | |-BinaryOperator 0x145141c88 <line:14:9, col:54> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x1451419a8 <col:9, col:17> 'int' contains-errors '=='
    | | | |-UnaryOperator 0x145141970 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | | | `-ImplicitCastExpr 0x145141958 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-RecoveryExpr 0x145141938 <col:10> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x145141988 <col:17> 'int' 0
    | | `-ParenExpr 0x145141c68 <col:22, col:54> 'int' contains-errors
    | |   `-BinaryOperator 0x145141c48 <col:23, col:53> 'int' contains-errors '||'
    | |     |-BinaryOperator 0x145141a30 <col:23, col:30> 'int' contains-errors '=='
    | |     | |-UnaryOperator 0x145141a00 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     | | `-ImplicitCastExpr 0x1451419e8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    | |     | |   `-RecoveryExpr 0x1451419c8 <col:24> '<dependent type>' contains-errors lvalue
    | |     | `-CharacterLiteral 0x145141a18 <col:30> 'int' 62
    | |     `-CallExpr 0x145141c20 <col:37, col:53> '<dependent type>' contains-errors
    | |       |-DeclRefExpr 0x145141bb0 <col:37> 'int ()' Function 0x145141af8 'IS_BLANK_CH' 'int ()'
    | |       `-UnaryOperator 0x145141c08 <col:50, col:51> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |         `-ImplicitCastExpr 0x145141bf0 <col:51> '<dependent type>' contains-errors <LValueToRValue>
    | |           `-RecoveryExpr 0x145141bd0 <col:51> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145141dc0 <col:57, line:18:5>
    |   `-BinaryOperator 0x145141da0 <line:16:2, col:21> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x145141d38 <col:2, col:15> '<dependent type>' contains-errors lvalue ->cur
    |     | `-CXXDependentScopeMemberExpr 0x145141cf0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->input
    |     |   `-RecoveryExpr 0x145141cc8 <col:2> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x145141ca8 <col:2> 'int' lvalue ParmVar 0x1451280f0 'ctxt' 'int'
    |     `-RecoveryExpr 0x145141d80 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x145141f88 <line:20:5, col:29> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x145141e18 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x145141df8 <col:5> 'const int *' lvalue Var 0x145128478 'ret' 'const int *'
    | `-CallExpr 0x145141f60 <col:11, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x145141f20 <col:11> 'int ()' Function 0x145141e68 'xmlParseName' 'int ()'
    |   `-RecoveryExpr 0x145141f40 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x145142018 <line:22:5, line:24:5>
    | |-BinaryOperator 0x145141fe8 <line:22:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x145141fa8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x145141fc8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145142008 <col:23, line:24:5>
    `-ReturnStmt 0x145142058 <line:25:5, col:12>
      `-RecoveryExpr 0x145142038 <col:12> '<dependent type>' contains-errors lvalue
