`-FunctionDecl 0x13800de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x13800dd58 <col:6> col:6 used InMatchExpression 'int'
  |-ParmVarDecl 0x13800dcd8 <col:25> col:25 MatchesScalar 'int'
  `-CompoundStmt 0x13900b600 <col:40, line:9:1>
    |-ImplicitCastExpr 0x13800df70 <line:3:5> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x13800df50 <col:5> 'int' lvalue ParmVar 0x13800dd58 'InMatchExpression' 'int'
    |-CallExpr 0x13800e168 <col:23, col:31> 'int'
    | |-ImplicitCastExpr 0x13800e150 <col:23> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13800e0a0 <col:23> 'int ()' Function 0x13800dfe8 'in' 'int ()'
    | `-ImplicitCastExpr 0x13800e190 <col:26> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x13800e100 <col:26> 'char[4]' lvalue "STR"
    |-RecoveryExpr 0x13800e1d8 <line:4:5> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13900b388 <line:7:5, col:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13900b0b0 <col:5> 'int ()' Function 0x13900aff8 'ASSERT' 'int ()'
    | `-CallExpr 0x13900b358 <col:12, col:51> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x13900b0f0 <col:12, col:15> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13900b0d0 <col:12> 'int ()' Function 0x13800dfe8 'in' 'int ()'
    |   |-CallExpr 0x13900b2a0 <col:27, col:44> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13900b1f8 <col:27> 'int ()' Function 0x13900b140 'BSON' 'int ()'
    |   | `-RecoveryExpr 0x13900b270 <col:32, col:41> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x13900b218 <col:32> 'char[4]' lvalue "STR"
    |   |   `-FloatingLiteral 0x13900b238 <col:41> 'double' 5.000000e+00
    |   `-RecoveryExpr 0x13900b338 <col:47> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13900b5d8 <line:8:5, col:51> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13900b3b0 <col:5> 'int ()' Function 0x13900aff8 'ASSERT' 'int ()'
      `-UnaryOperator 0x13900b5c0 <col:12, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
        `-CallExpr 0x13900b590 <col:13, col:50> '<dependent type>' contains-errors
          |-RecoveryExpr 0x13900b3f0 <col:13, col:16> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x13900b3d0 <col:13> 'int ()' Function 0x13800dfe8 'in' 'int ()'
          |-CallExpr 0x13900b4c0 <col:28, col:43> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x13900b418 <col:28> 'int ()' Function 0x13900b140 'BSON' 'int ()'
          | `-RecoveryExpr 0x13900b490 <col:33, col:42> '<dependent type>' contains-errors lvalue
          |   |-StringLiteral 0x13900b438 <col:33> 'char[4]' lvalue "STR"
          |   `-IntegerLiteral 0x13900b458 <col:42> 'int' 4
          `-RecoveryExpr 0x13900b570 <col:46> '<dependent type>' contains-errors lvalue
