`-FunctionDecl 0x1379281d8  line:1:15 lh_char_hash 'unsigned long (const void *)'
  |-ParmVarDecl 0x137928108 <col:28, col:40> col:40 used k 'const void *'
  `-CompoundStmt 0x137941c08 <line:2:1, line:9:1>
    |-DeclStmt 0x137928388 <line:3:2, col:20>
    | `-VarDecl 0x1379282e8 <col:2, col:19> col:15 used h 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x137928370 <col:19> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x137928350 <col:19> 'int' 0
    |-DeclStmt 0x137928498 <line:4:2, col:35>
    | `-VarDecl 0x1379283b8 <col:2, col:34> col:14 used data 'const char *' cinit
    |   `-CStyleCastExpr 0x137928470 <col:21, col:34> 'const char *' <BitCast>
    |     `-ImplicitCastExpr 0x137928458 <col:34> 'const void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x137928420 <col:34> 'const void *' lvalue ParmVar 0x137928108 'k' 'const void *'
    |-WhileStmt 0x137941b88 <line:6:2, col:58>
    | |-BinaryOperator 0x137928550 <col:9, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x137928538 <col:9, col:10> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x137928520 <col:9, col:10> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x1379284e8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x1379284d0 <col:10> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1379284b0 <col:10> 'const char *' lvalue Var 0x1379283b8 'data' 'const char *'
    | | `-IntegerLiteral 0x137928500 <col:16> 'int' 0
    | `-BinaryOperator 0x137941b68 <col:20, col:58> 'unsigned int' contains-errors '='
    |   |-DeclRefExpr 0x137928570 <col:20> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int'
    |   `-BinaryOperator 0x137941b48 <col:24, col:58> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x137941b08 <col:24, col:54> 'unsigned int' '+'
    |     | |-BinaryOperator 0x137941a90 <col:24, col:26> 'unsigned int' '*'
    |     | | |-ImplicitCastExpr 0x137941a60 <col:24> 'unsigned int' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x137928590 <col:24> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x137941a78 <col:26> 'unsigned int' <IntegralCast>
    |     | |   `-IntegerLiteral 0x1379285b0 <col:26> 'int' 129
    |     | `-CStyleCastExpr 0x137941ae0 <col:32, col:54> 'unsigned int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x137941ac8 <col:46, col:54> 'char' <LValueToRValue> part_of_explicit_cast
    |     |     `-ParenExpr 0x1379286a8 <col:46, col:54> 'const char' lvalue
    |     |       `-UnaryOperator 0x137928658 <col:47, col:52> 'const char' lvalue prefix '*' cannot overflow
    |     |         `-UnaryOperator 0x137928640 <col:48, col:52> 'const char *' postfix '++'
    |     |           `-DeclRefExpr 0x137928620 <col:48> 'const char *' lvalue Var 0x1379283b8 'data' 'const char *'
    |     `-RecoveryExpr 0x137941b28 <col:58> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x137941bf8 <line:8:2, col:9>
      `-ImplicitCastExpr 0x137941be0 <col:9> 'unsigned long' <IntegralCast>
        `-ImplicitCastExpr 0x137941bc8 <col:9> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x137941ba8 <col:9> 'unsigned int' lvalue Var 0x1379282e8 'h' 'unsigned int'
