`-FunctionDecl 0x13000dd98  line:1:1 setup_listen 'int (void)'
  `-CompoundStmt 0x1300288a0 <line:2:1, line:28:1>
    |-DeclStmt 0x13000df98 <line:3:3, col:17>
    | `-VarDecl 0x13000df30 <col:3, col:16> col:8 used port 'char[256]'
    |-DeclStmt 0x13000e050 <line:4:3, col:16>
    | `-VarDecl 0x13000dfc8 <col:3, col:15> col:7 used error 'int' cinit
    |   `-IntegerLiteral 0x13000e030 <col:15> 'int' 0
    |-IfStmt 0x13000e2f0 <line:6:3, line:9:3>
    | |-BinaryOperator 0x13000e0f8 <line:6:7, col:22> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13000e0d8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13000e098 <col:22> 'int' 0
    | `-CompoundStmt 0x13000e2d8 <line:7:3, line:9:3>
    |   `-CallExpr 0x13000e2b0 <line:8:5, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13000e230 <col:5> 'int ()' Function 0x13000e178 'trans_delete' 'int ()'
    |     `-RecoveryExpr 0x13000e290 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130028310 <line:10:3, line:19:3> has_else
    | |-RecoveryExpr 0x13000e328 <line:10:7> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x130028078 <line:11:3, line:14:3>
    | | `-CallExpr 0x130028038 <line:13:5, col:54> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x130027ea0 <col:5> 'int ()' Function 0x130027de8 'g_snprintf' 'int ()'
    | |   |-DeclRefExpr 0x130027ec0 <col:16> 'char[256]' lvalue Var 0x13000df30 'port' 'char[256]'
    | |   |-IntegerLiteral 0x130027ee0 <col:22> 'int' 255
    | |   |-StringLiteral 0x130027f40 <col:27> 'char[4]' lvalue "STR"
    | |   `-BinaryOperator 0x130028018 <col:34, col:41> '<dependent type>' contains-errors '+'
    | |     |-IntegerLiteral 0x130027f60 <col:34> 'int' 7200
    | |     `-RecoveryExpr 0x130027ff8 <col:41> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1300282f8 <line:16:3, line:19:3>
    |   `-CallExpr 0x1300282b8 <line:18:5, col:54> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x130028160 <col:5> 'int ()' Function 0x130027de8 'g_snprintf' 'int ()'
    |     |-DeclRefExpr 0x130028180 <col:16> 'char[256]' lvalue Var 0x13000df30 'port' 'char[256]'
    |     |-IntegerLiteral 0x1300281a0 <col:22> 'int' 255
    |     |-StringLiteral 0x1300281c0 <col:27> 'char[4]' lvalue "STR"
    |     `-BinaryOperator 0x130028298 <col:34, col:41> '<dependent type>' contains-errors '+'
    |       |-IntegerLiteral 0x1300281e0 <col:34> 'int' 7200
    |       `-RecoveryExpr 0x130028278 <col:41> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x130028550 <line:21:3, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x130028358 <col:3> 'int' lvalue Var 0x13000dfc8 'error' 'int'
    | `-CallExpr 0x130028520 <col:11, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x130028458 <col:11> 'int ()' Function 0x1300283a0 'trans_listen' 'int ()'
    |   |-RecoveryExpr 0x130028500 <col:24> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x130028490 <col:37> 'char[256]' lvalue Var 0x13000df30 'port' 'char[256]'
    |-IfStmt 0x130028850 <line:22:3, line:26:3>
    | |-BinaryOperator 0x1300285c8 <line:22:7, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x1300285b0 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x130028570 <col:7> 'int' lvalue Var 0x13000dfc8 'error' 'int'
    | | `-IntegerLiteral 0x130028590 <col:16> 'int' 0
    | `-CompoundStmt 0x130028830 <line:23:3, line:26:3>
    |   |-CallExpr 0x1300287d0 <line:24:5, col:25> 'int'
    |   | |-ImplicitCastExpr 0x1300287b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1300286c8 <col:5> 'int ()' Function 0x130028610 'LOG' 'int ()'
    |   | |-IntegerLiteral 0x1300286e8 <col:9> 'int' 0
    |   | `-ParenExpr 0x130028798 <col:12, col:24> 'char *'
    |   |   `-BinaryOperator 0x130028778 <col:13, col:20> 'char *' ','
    |   |     |-ImplicitCastExpr 0x130028748 <col:13> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x130028708 <col:13> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x130028760 <col:20> 'char *' <ArrayToPointerDecay>
    |   |       `-DeclRefExpr 0x130028728 <col:20> 'char[256]' lvalue Var 0x13000df30 'port' 'char[256]'
    |   `-ReturnStmt 0x130028820 <line:25:5, col:12>
    |     `-IntegerLiteral 0x130028800 <col:12> 'int' 1
    `-ReturnStmt 0x130028890 <line:27:3, col:10>
      `-IntegerLiteral 0x130028870 <col:10> 'int' 0
