`-FunctionDecl 0x129928238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x129928158 <col:8> col:8 used QueryPlannerTest 'int'
  |-ParmVarDecl 0x1299280d8 <col:26> col:26 CannotTrimIxisectAndHashWithOrChild 'int'
  `-CompoundStmt 0x129941730 <col:63, line:30:1>
    |-CallExpr 0x129940d28 <line:5:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1299284d0 <col:5> 'int ()' Function 0x129928418 'addIndex' 'int ()'
    | `-CallExpr 0x129940d00 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1299285d0 <col:14> 'int ()' Function 0x129928518 'BSON' 'int ()'
    |   `-RecoveryExpr 0x129940cd0 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x129928630 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x129928650 <col:28> 'int' 1
    |-CallExpr 0x129940e40 <line:6:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x129940d50 <col:5> 'int ()' Function 0x129928418 'addIndex' 'int ()'
    | `-CallExpr 0x129940e18 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129940d70 <col:14> 'int ()' Function 0x129928518 'BSON' 'int ()'
    |   `-RecoveryExpr 0x129940de8 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x129940d90 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x129940db0 <col:28> 'int' 1
    |-CallExpr 0x129940f58 <line:7:5, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x129940e68 <col:5> 'int ()' Function 0x129928418 'addIndex' 'int ()'
    | `-CallExpr 0x129940f30 <col:14, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x129940e88 <col:14> 'int ()' Function 0x129928518 'BSON' 'int ()'
    |   `-RecoveryExpr 0x129940f00 <col:19, col:28> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x129940ea8 <col:19> 'char[4]' lvalue "STR"
    |     `-IntegerLiteral 0x129940ec8 <col:28> 'int' 1
    |-CallExpr 0x129941240 <line:9:5, col:29> 'int'
    | |-ImplicitCastExpr 0x129941228 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x129941060 <col:5> 'int ()' Function 0x129940fa8 'runQuery' 'int ()'
    | `-CallExpr 0x1299411e8 <col:14, col:28> 'int'
    |   |-ImplicitCastExpr 0x1299411d0 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x129941160 <col:14> 'int ()' Function 0x1299410a8 'fromjson' 'int ()'
    |   `-ImplicitCastExpr 0x129941210 <col:23> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x129941180 <col:23> 'char[4]' lvalue "STR"
    |-CallExpr 0x1299413a0 <line:11:5, col:26> 'int'
    | |-ImplicitCastExpr 0x129941388 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x129941348 <col:5> 'int ()' Function 0x129941290 'assertNumSolutions' 'int ()'
    | `-IntegerLiteral 0x129941368 <col:24> 'unsigned int' 3
    |-CallExpr 0x129941560 <line:13:5, line:18:14> 'int'
    | |-ImplicitCastExpr 0x129941548 <line:13:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1299414a8 <col:5> 'int ()' Function 0x1299413f0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x129941588 <line:14:9, line:18:9> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x129941510 <line:14:9, line:18:9> 'char[16]' lvalue "STRSTRSTRSTRSTR"
    |-CallExpr 0x129941640 <line:20:5, line:22:14> 'int'
    | |-ImplicitCastExpr 0x129941628 <line:20:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1299415a0 <col:5> 'int ()' Function 0x1299413f0 'assertSolutionExists' 'int ()'
    | `-ImplicitCastExpr 0x129941668 <line:21:9, line:22:9> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x129941600 <line:21:9, line:22:9> 'char[7]' lvalue "STRSTR"
    `-CallExpr 0x1299416f0 <line:24:5, line:29:14> 'int'
      |-ImplicitCastExpr 0x1299416d8 <line:24:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x129941680 <col:5> 'int ()' Function 0x1299413f0 'assertSolutionExists' 'int ()'
      `-ImplicitCastExpr 0x129941718 <line:25:9, line:29:9> 'char *' <ArrayToPointerDecay>
        `-StringLiteral 0x1299416a0 <line:25:9, line:29:9> 'char[16]' lvalue "STRSTRSTRSTRSTR"
