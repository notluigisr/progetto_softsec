`-FunctionDecl 0x12f940cf8  line:1:12 clone_submodule 'int (const char *, const char *, const char *, const char *, struct string_list *, int, int)' static
  |-ParmVarDecl 0x12f9280d8 <col:28, col:40> col:40 used path 'const char *'
  |-ParmVarDecl 0x12f928158 <col:46, col:58> col:58 used gitdir 'const char *'
  |-ParmVarDecl 0x12f9281d8 <col:66, col:78> col:78 used url 'const char *'
  |-ParmVarDecl 0x12f928258 <line:2:7, col:19> col:19 used depth 'const char *'
  |-ParmVarDecl 0x12f940a58 <col:26, col:46> col:46 used reference 'struct string_list *'
  |-ParmVarDecl 0x12f940ad8 <line:3:7, col:11> col:11 used quiet 'int'
  |-ParmVarDecl 0x12f940b58 <col:18, col:22> col:22 used progress 'int'
  `-CompoundStmt 0x12f9442b0 <line:4:1, line:32:1>
    |-DeclStmt 0x12f940fc8 <line:5:2, col:46>
    | |-RecordDecl 0x12f940e20 <col:2, col:9> col:9 struct child_process
    | `-VarDecl 0x12f940f18 <col:2, col:23> col:23 referenced invalid cp 'struct child_process'
    |-CallExpr 0x12f9411f0 <line:7:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f9410f0 <col:2> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x12f941178 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12f941130 <col:19, col:22> '<dependent type>' contains-errors lvalue .args
    | |   `-RecoveryExpr 0x12f941110 <col:19> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x12f9411d0 <col:28> 'char[4]' lvalue "STR"
    |-CallExpr 0x12f9412e0 <line:8:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f941220 <col:2> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x12f9412a8 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12f941260 <col:19, col:22> '<dependent type>' contains-errors lvalue .args
    | |   `-RecoveryExpr 0x12f941240 <col:19> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x12f9412c0 <col:28> 'char[4]' lvalue "STR"
    |-IfStmt 0x12f941438 <line:9:2, line:10:34>
    | |-ImplicitCastExpr 0x12f941330 <line:9:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f941310 <col:6> 'int' lvalue ParmVar 0x12f940ad8 'quiet' 'int'
    | `-CallExpr 0x12f941408 <line:10:3, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f941348 <col:3> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x12f9413d0 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x12f941388 <col:20, col:23> '<dependent type>' contains-errors lvalue .args
    |   |   `-RecoveryExpr 0x12f941368 <col:20> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x12f9413e8 <col:29> 'char[4]' lvalue "STR"
    |-IfStmt 0x12f941580 <line:11:2, line:12:34>
    | |-ImplicitCastExpr 0x12f941478 <line:11:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f941458 <col:6> 'int' lvalue ParmVar 0x12f940b58 'progress' 'int'
    | `-CallExpr 0x12f941550 <line:12:3, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f941490 <col:3> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    |   |-UnaryOperator 0x12f941518 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x12f9414d0 <col:20, col:23> '<dependent type>' contains-errors lvalue .args
    |   |   `-RecoveryExpr 0x12f9414b0 <col:20> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x12f941530 <col:29> 'char[4]' lvalue "STR"
    |-IfStmt 0x12f9418f0 <line:13:2, line:14:48>
    | |-BinaryOperator 0x12f941658 <line:13:6, col:16> 'int' '&&'
    | | |-ImplicitCastExpr 0x12f941610 <col:6> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f9415a0 <col:6> 'const char *' lvalue ParmVar 0x12f928258 'depth' 'const char *'
    | | `-ImplicitCastExpr 0x12f941640 <col:15, col:16> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12f941628 <col:15, col:16> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12f9415f8 <col:15, col:16> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x12f9415e0 <col:16> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12f9415c0 <col:16> 'const char *' lvalue ParmVar 0x12f928258 'depth' 'const char *'
    | `-CallExpr 0x12f9418b0 <line:14:3, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f941758 <col:3> 'int ()' Function 0x12f9416a0 'argv_array_pushl' 'int ()'
    |   |-UnaryOperator 0x12f9417e0 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x12f941798 <col:21, col:24> '<dependent type>' contains-errors lvalue .args
    |   |   `-RecoveryExpr 0x12f941778 <col:21> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x12f9417f8 <col:30> 'char[4]' lvalue "STR"
    |   |-DeclRefExpr 0x12f941818 <col:37> 'const char *' lvalue ParmVar 0x12f928258 'depth' 'const char *'
    |   `-RecoveryExpr 0x12f941890 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f943968 <line:15:2, line:20:2>
    | |-RecoveryExpr 0x12f941948 <line:15:6, col:17> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12f941910 <col:6> 'struct string_list *' lvalue ParmVar 0x12f940a58 'reference' 'struct string_list *'
    | `-CompoundStmt 0x12f943940 <col:21, line:20:2>
    |   |-DeclStmt 0x12f943568 <line:16:3, col:32>
    |   | |-RecordDecl 0x12f941970 <col:3, col:10> col:10 struct string_list_item
    |   | `-VarDecl 0x12f9434e8 <col:3, col:28> col:28 used item 'struct string_list_item *'
    |   |-CallExpr 0x12f943708 <line:17:3, col:44> 'int'
    |   | |-ImplicitCastExpr 0x12f9436f0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12f943660 <col:3> 'int ()' Function 0x12f9435a8 'for_each_string_list_item' 'int ()'
    |   | |-ImplicitCastExpr 0x12f943738 <col:29> 'struct string_list_item *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12f943680 <col:29> 'struct string_list_item *' lvalue Var 0x12f9434e8 'item' 'struct string_list_item *'
    |   | `-ImplicitCastExpr 0x12f943750 <col:35> 'struct string_list *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12f9436a0 <col:35> 'struct string_list *' lvalue ParmVar 0x12f940a58 'reference' 'struct string_list *'
    |   `-CallExpr 0x12f943900 <line:18:4, line:19:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12f943768 <line:18:4> 'int ()' Function 0x12f9416a0 'argv_array_pushl' 'int ()'
    |     |-UnaryOperator 0x12f9437f0 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | `-CXXDependentScopeMemberExpr 0x12f9437a8 <col:22, col:25> '<dependent type>' contains-errors lvalue .args
    |     |   `-RecoveryExpr 0x12f943788 <col:22> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x12f943808 <col:31> 'char[4]' lvalue "STR"
    |     |-RecoveryExpr 0x12f943860 <line:19:7, col:13> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12f943828 <col:7> 'struct string_list_item *' lvalue Var 0x12f9434e8 'item' 'struct string_list_item *'
    |     `-RecoveryExpr 0x12f9438e0 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f943bf8 <line:21:2, line:22:49>
    | |-BinaryOperator 0x12f943a40 <line:21:6, col:17> 'int' '&&'
    | | |-ImplicitCastExpr 0x12f9439f8 <col:6> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12f943988 <col:6> 'const char *' lvalue ParmVar 0x12f928158 'gitdir' 'const char *'
    | | `-ImplicitCastExpr 0x12f943a28 <col:16, col:17> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x12f943a10 <col:16, col:17> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x12f9439e0 <col:16, col:17> 'const char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x12f9439c8 <col:17> 'const char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x12f9439a8 <col:17> 'const char *' lvalue ParmVar 0x12f928158 'gitdir' 'const char *'
    | `-CallExpr 0x12f943bb8 <line:22:3, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f943a60 <col:3> 'int ()' Function 0x12f9416a0 'argv_array_pushl' 'int ()'
    |   |-UnaryOperator 0x12f943ae8 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-CXXDependentScopeMemberExpr 0x12f943aa0 <col:21, col:24> '<dependent type>' contains-errors lvalue .args
    |   |   `-RecoveryExpr 0x12f943a80 <col:21> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x12f943b00 <col:30> 'char[4]' lvalue "STR"
    |   |-DeclRefExpr 0x12f943b20 <col:37> 'const char *' lvalue ParmVar 0x12f928158 'gitdir' 'const char *'
    |   `-RecoveryExpr 0x12f943b98 <col:45> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f943cd8 <line:24:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f943c18 <col:2> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x12f943ca0 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12f943c58 <col:19, col:22> '<dependent type>' contains-errors lvalue .args
    | |   `-RecoveryExpr 0x12f943c38 <col:19> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12f943cb8 <col:28> 'const char *' lvalue ParmVar 0x12f9281d8 'url' 'const char *'
    |-CallExpr 0x12f943dc8 <line:25:2, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f943d08 <col:2> 'int ()' Function 0x12f941038 'argv_array_push' 'int ()'
    | |-UnaryOperator 0x12f943d90 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12f943d48 <col:19, col:22> '<dependent type>' contains-errors lvalue .args
    | |   `-RecoveryExpr 0x12f943d28 <col:19> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x12f943da8 <col:28> 'const char *' lvalue ParmVar 0x12f9280d8 'path' 'const char *'
    |-BinaryOperator 0x12f943ea8 <line:27:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f943e40 <col:2, col:5> '<dependent type>' contains-errors lvalue .git_cmd
    | | `-RecoveryExpr 0x12f943e18 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f943df8 <col:2> 'struct child_process' lvalue Var 0x12f940f18 'cp' 'struct child_process'
    | `-IntegerLiteral 0x12f943e88 <col:15> 'int' 1
    |-CallExpr 0x12f944048 <line:28:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f943fa8 <col:2> 'int ()' Function 0x12f943ef0 'prepare_submodule_repo_env' 'int ()'
    | `-UnaryOperator 0x12f944030 <col:29, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12f943fe8 <col:30, col:33> '<dependent type>' contains-errors lvalue .env_array
    |     `-RecoveryExpr 0x12f943fc8 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12f944120 <line:29:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f9440b8 <col:2, col:5> '<dependent type>' contains-errors lvalue .no_stdin
    | | `-RecoveryExpr 0x12f944090 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f944070 <col:2> 'struct child_process' lvalue Var 0x12f940f18 'cp' 'struct child_process'
    | `-IntegerLiteral 0x12f944100 <col:16> 'int' 1
    `-ReturnStmt 0x12f9442a0 <line:31:2, col:24>
      `-CallExpr 0x12f944278 <col:9, col:24> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12f944220 <col:9> 'int ()' Function 0x12f944168 'run_command' 'int ()'
        `-UnaryOperator 0x12f944260 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x12f944240 <col:22> '<dependent type>' contains-errors lvalue
