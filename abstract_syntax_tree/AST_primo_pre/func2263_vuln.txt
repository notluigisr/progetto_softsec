`-FunctionDecl 0x13b02abe8  line:1:12 __f2fs_set_acl 'int (struct inode *, int, struct posix_acl *, struct page *)' static
  |-ParmVarDecl 0x13b00e248 <col:27, col:41> col:41 used inode 'struct inode *'
  |-ParmVarDecl 0x13b00e2c8 <col:48, col:52> col:52 used type 'int'
  |-ParmVarDecl 0x13b02a8c8 <line:2:4, col:22> col:22 used acl 'struct posix_acl *'
  |-ParmVarDecl 0x13b02aa98 <col:27, col:40> col:40 used ipage 'struct page *'
  `-CompoundStmt 0x13c00b4b8 <line:3:1, line:48:1>
    |-DeclStmt 0x13b02ad78 <line:4:2, col:16>
    | `-VarDecl 0x13b02ad10 <col:2, col:6> col:6 used name_index 'int'
    |-DeclStmt 0x13b02ae60 <line:5:2, col:20>
    | `-VarDecl 0x13b02ada8 <col:2, col:16> col:8 used value 'void *' cinit
    |   `-RecoveryExpr 0x13b02ae40 <col:16> '<dependent type>' contains-errors lvalue
    |-RecoveryExpr 0x13b02af58 <line:6:2, col:16> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x13b02af38 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x13b02af18 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x13b02aeb0 <col:16> 'int' 0
    |-DeclStmt 0x13b02b008 <line:7:2, col:11>
    | `-VarDecl 0x13b02afa0 <col:2, col:6> col:6 used error 'int'
    |-SwitchStmt 0x13b02b058 <line:9:2, line:30:2>
    | |-ImplicitCastExpr 0x13b02b040 <line:9:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13b02b020 <col:10> 'int' lvalue ParmVar 0x13b00e2c8 'type' 'int'
    | `-CompoundStmt 0x13c009250 <col:16, line:30:2>
    |   |-BinaryOperator 0x13b02b110 <line:11:3, col:16> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b02b098 <col:3> 'int' lvalue Var 0x13b02ad10 'name_index' 'int'
    |   | `-RecoveryExpr 0x13b02b0f0 <col:16> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13b02b798 <line:12:3, line:19:3>
    |   | |-ImplicitCastExpr 0x13b02b150 <line:12:7> 'struct posix_acl *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13b02b130 <col:7> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    |   | `-CompoundStmt 0x13b02b768 <col:12, line:19:3>
    |   |   |-BinaryOperator 0x13b02b388 <line:13:4, col:52> 'int' contains-errors '='
    |   |   | |-DeclRefExpr 0x13b02b168 <col:4> 'int' lvalue Var 0x13b02afa0 'error' 'int'
    |   |   | `-CallExpr 0x13b02b358 <col:12, col:52> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x13b02b2a0 <col:12> 'int ()' Function 0x13b02b1e8 'posix_acl_equiv_mode' 'int ()'
    |   |   |   |-DeclRefExpr 0x13b02b2c0 <col:33> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    |   |   |   `-UnaryOperator 0x13b02b340 <col:38, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   |     `-RecoveryExpr 0x13b02b318 <col:39, col:46> '<dependent type>' contains-errors lvalue
    |   |   |       `-DeclRefExpr 0x13b02b2e0 <col:39> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'
    |   |   |-IfStmt 0x13b02b468 <line:14:4, line:15:12>
    |   |   | |-BinaryOperator 0x13b02b400 <line:14:8, col:16> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x13b02b3e8 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x13b02b3a8 <col:8> 'int' lvalue Var 0x13b02afa0 'error' 'int'
    |   |   | | `-IntegerLiteral 0x13b02b3c8 <col:16> 'int' 0
    |   |   | `-ReturnStmt 0x13b02b458 <line:15:5, col:12>
    |   |   |   `-ImplicitCastExpr 0x13b02b440 <col:12> 'int' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x13b02b420 <col:12> 'int' lvalue Var 0x13b02afa0 'error' 'int'
    |   |   |-CallExpr 0x13b02b608 <line:16:4, col:38> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13b02b568 <col:4> 'int ()' Function 0x13b02b4b0 'set_acl_inode' 'int ()'
    |   |   | |-DeclRefExpr 0x13b02b588 <col:18> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'
    |   |   | `-RecoveryExpr 0x13b02b5e0 <col:25, col:32> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x13b02b5a8 <col:25> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'
    |   |   `-IfStmt 0x13b02b748 <line:17:4, line:18:11>
    |   |     |-BinaryOperator 0x13b02b690 <line:17:8, col:17> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x13b02b678 <col:8> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x13b02b638 <col:8> 'int' lvalue Var 0x13b02afa0 'error' 'int'
    |   |     | `-IntegerLiteral 0x13b02b658 <col:17> 'int' 0
    |   |     `-BinaryOperator 0x13b02b728 <line:18:5, col:11> 'struct posix_acl *' contains-errors '='
    |   |       |-DeclRefExpr 0x13b02b6b0 <col:5> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    |   |       `-RecoveryExpr 0x13b02b708 <col:11> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x13b02b7b8 <line:20:3>
    |   |-BinaryOperator 0x13c008e58 <line:23:3, col:16> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b02b7d8 <col:3> 'int' lvalue Var 0x13b02ad10 'name_index' 'int'
    |   | `-RecoveryExpr 0x13c008e38 <col:16> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13c009160 <line:24:3, line:25:27>
    |   | |-UnaryOperator 0x13c009000 <line:24:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x13c008fd8 <col:8, col:29> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x13c008f58 <col:8> 'int ()' Function 0x13c008ea0 'S_ISDIR' 'int ()'
    |   | |   `-RecoveryExpr 0x13c008fb0 <col:16, col:23> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x13c008f78 <col:16> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'
    |   | `-ReturnStmt 0x13c009150 <line:25:4, col:27>
    |   |   `-ConditionalOperator 0x13c009120 <col:11, col:27> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13c009018 <col:11> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    |   |     |-UnaryOperator 0x13c009108 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     | `-ImplicitCastExpr 0x13c0090f0 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     |   `-RecoveryExpr 0x13c0090d0 <col:18> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x13c009080 <col:27> 'int' 0
    |   |-BreakStmt 0x13c009180 <line:26:3>
    |   `-DefaultStmt 0x13c009230 <line:28:2, line:29:11>
    |     `-ReturnStmt 0x13c009220 <col:3, col:11>
    |       `-UnaryOperator 0x13c009208 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x13c0091f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x13c0091d0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13c009a08 <line:32:2, line:38:2>
    | |-ImplicitCastExpr 0x13c0092b8 <line:32:6> 'struct posix_acl *' <LValueToRValue>
    | | `-DeclRefExpr 0x13c009298 <col:6> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    | `-CompoundStmt 0x13c0099e8 <col:11, line:38:2>
    |   |-BinaryOperator 0x13c0094f8 <line:33:3, col:38> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x13c0092d0 <col:3> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'
    |   | `-CallExpr 0x13c0094c8 <col:11, col:38> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13c0093d0 <col:11> 'int ()' Function 0x13c009318 'f2fs_acl_to_disk' 'int ()'
    |   |   |-DeclRefExpr 0x13c0093f0 <col:28> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    |   |   `-UnaryOperator 0x13c0094b0 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |     `-RecoveryExpr 0x13c009490 <col:34> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13c0099c8 <line:34:3, line:37:3>
    |     |-CallExpr 0x13c009688 <line:34:7, col:19> 'int' contains-errors
    |     | |-ImplicitCastExpr 0x13c009670 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x13c0095f8 <col:7> 'int ()' Function 0x13c009540 'IS_ERR' 'int ()'
    |     | `-ImplicitCastExpr 0x13c0096b0 <col:14> 'void *' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x13c009618 <col:14> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'
    |     `-CompoundStmt 0x13c0099b0 <col:22, line:37:3>
    |       `-ReturnStmt 0x13c0099a0 <line:36:4, col:29>
    |         `-CStyleCastExpr 0x13c009978 <col:11, col:29> 'int' contains-errors <NoOp>
    |           `-CallExpr 0x13c009920 <col:16, col:29> 'int' contains-errors
    |             |-ImplicitCastExpr 0x13c009908 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x13c0098c8 <col:16> 'int ()' Function 0x13c009810 'PTR_ERR' 'int ()'
    |             `-ImplicitCastExpr 0x13c009948 <col:24> 'void *' contains-errors <LValueToRValue>
    |               `-DeclRefExpr 0x13c0098e8 <col:24> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'
    |-CallExpr 0x13c009d80 <line:42:2, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x13c009d68 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13c009d28 <col:2> 'int ()' Function 0x13c009c70 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x13c009da8 <col:8> 'void *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13c009d48 <col:8> 'void *' contains-errors lvalue Var 0x13b02ada8 'value' 'void *'
    |-IfStmt 0x13c00b410 <line:43:2, line:44:34>
    | |-UnaryOperator 0x13c00b200 <line:43:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13c009de0 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13c009dc0 <col:7> 'int' lvalue Var 0x13b02afa0 'error' 'int'
    | `-CallExpr 0x13c00b390 <line:44:3, col:34> 'int'
    |   |-ImplicitCastExpr 0x13c00b378 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13c00b2f8 <col:3> 'int ()' Function 0x13c00b240 'set_cached_acl' 'int ()'
    |   |-ImplicitCastExpr 0x13c00b3c8 <col:18> 'struct inode *' <LValueToRValue>
    |   | `-DeclRefExpr 0x13c00b318 <col:18> 'struct inode *' lvalue ParmVar 0x13b00e248 'inode' 'struct inode *'
    |   |-ImplicitCastExpr 0x13c00b3e0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13c00b338 <col:25> 'int' lvalue ParmVar 0x13b00e2c8 'type' 'int'
    |   `-ImplicitCastExpr 0x13c00b3f8 <col:31> 'struct posix_acl *' <LValueToRValue>
    |     `-DeclRefExpr 0x13c00b358 <col:31> 'struct posix_acl *' lvalue ParmVar 0x13b02a8c8 'acl' 'struct posix_acl *'
    `-ReturnStmt 0x13c00b4a8 <line:47:2, col:9>
      `-ImplicitCastExpr 0x13c00b490 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13c00b470 <col:9> 'int' lvalue Var 0x13b02afa0 'error' 'int'
