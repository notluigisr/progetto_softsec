`-FunctionDecl 0x13e8f34e8  line:1:14 invalid aead_bind 'void *(const char *, int, int)' static
  |-ParmVarDecl 0x13e8f32d8 <col:24, col:36> col:36 used name 'const char *'
  |-ParmVarDecl 0x13e8f3370 <col:42, col:46> col:46 invalid type 'int'
  |-ParmVarDecl 0x13e8f33f0 <col:52, col:56> col:56 invalid mask 'int'
  `-CompoundStmt 0x13e03e298 <line:2:1, line:28:1>
    |-DeclStmt 0x13e8f3798 <line:3:2, col:22>
    | |-RecordDecl 0x13e8f35a8 <col:2, col:9> col:9 struct aead_tfm
    | `-VarDecl 0x13e8f3718 <col:2, col:19> col:19 used tfm 'struct aead_tfm *'
    |-DeclStmt 0x13e8f3998 <line:4:2, col:26>
    | |-RecordDecl 0x13e8f37b0 <col:2, col:9> col:9 struct crypto_aead
    | `-VarDecl 0x13e8f3918 <col:2, col:22> col:22 used aead 'struct crypto_aead *'
    |-DeclStmt 0x13e90cbe8 <line:5:2, col:34>
    | |-RecordDecl 0x13e90ca00 <col:2, col:9> col:9 struct crypto_skcipher
    | `-VarDecl 0x13e90cb68 <col:2, col:26> col:26 used null_tfm 'struct crypto_skcipher *'
    |-IfStmt 0x13e90d490 <line:8:2, line:9:25>
    | |-UnaryOperator 0x13e90d280 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13e90d268 <col:7> 'struct aead_tfm *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e90d248 <col:7> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
    | `-ReturnStmt 0x13e90d480 <line:9:3, col:25>
    |   `-CallExpr 0x13e90d458 <col:10, col:25> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13e90d378 <col:10> 'int ()' Function 0x13e90d2c0 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x13e90d440 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x13e90d428 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x13e90d408 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13e90d668 <line:11:2, col:43> 'struct crypto_aead *' contains-errors '='
    | |-DeclRefExpr 0x13e90d4b0 <col:2> 'struct crypto_aead *' lvalue Var 0x13e8f3918 'aead' 'struct crypto_aead *'
    | `-CallExpr 0x13e90d630 <col:9, col:43> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e90d5b0 <col:9> 'int ()' Function 0x13e90d4f8 'crypto_alloc_aead' 'int ()'
    |   |-DeclRefExpr 0x13e90d5d0 <col:27> 'const char *' lvalue ParmVar 0x13e8f32d8 'name' 'const char *'
    |   |-RecoveryExpr 0x13e90d5f0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13e90d610 <col:39> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13e03db98 <line:12:2, line:15:2>
    | |-CallExpr 0x13e90d7f8 <line:12:6, col:17> 'int'
    | | |-ImplicitCastExpr 0x13e90d7e0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13e90d768 <col:6> 'int ()' Function 0x13e90d6b0 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x13e90d820 <col:13> 'struct crypto_aead *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e90d788 <col:13> 'struct crypto_aead *' lvalue Var 0x13e8f3918 'aead' 'struct crypto_aead *'
    | `-CompoundStmt 0x13e03db78 <col:20, line:15:2>
    |   |-CallExpr 0x13e90d970 <line:13:3, col:12> 'int'
    |   | |-ImplicitCastExpr 0x13e90d958 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e90d918 <col:3> 'int ()' Function 0x13e90d860 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x13e90d998 <col:9> 'struct aead_tfm *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e90d938 <col:9> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
    |   `-ReturnStmt 0x13e03db68 <line:14:3, col:23>
    |     `-ImplicitCastExpr 0x13e03db50 <col:10, col:23> 'void *' <IntegralToPointer>
    |       `-CallExpr 0x13e03db10 <col:10, col:23> 'int'
    |         |-ImplicitCastExpr 0x13e03daf8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x13e03dab8 <col:10> 'int ()' Function 0x13e03da00 'ERR_CAST' 'int ()'
    |         `-ImplicitCastExpr 0x13e03db38 <col:19> 'struct crypto_aead *' <LValueToRValue>
    |           `-DeclRefExpr 0x13e03dad8 <col:19> 'struct crypto_aead *' lvalue Var 0x13e8f3918 'aead' 'struct crypto_aead *'
    |-BinaryOperator 0x13e03dd28 <line:17:2, col:47> 'struct crypto_skcipher *' '='
    | |-DeclRefExpr 0x13e03dbb8 <col:2> 'struct crypto_skcipher *' lvalue Var 0x13e90cb68 'null_tfm' 'struct crypto_skcipher *'
    | `-ImplicitCastExpr 0x13e03dd10 <col:13, col:47> 'struct crypto_skcipher *' <IntegralToPointer>
    |   `-CallExpr 0x13e03dcf0 <col:13, col:47> 'int'
    |     `-ImplicitCastExpr 0x13e03dcd8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x13e03dcb8 <col:13> 'int ()' Function 0x13e03dc00 'crypto_get_default_null_skcipher2' 'int ()'
    |-IfStmt 0x13e03e0d8 <line:18:2, line:22:2>
    | |-CallExpr 0x13e03dda0 <line:18:6, col:21> 'int'
    | | |-ImplicitCastExpr 0x13e03dd88 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x13e03dd48 <col:6> 'int ()' Function 0x13e90d6b0 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x13e03ddc8 <col:13> 'struct crypto_skcipher *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e03dd68 <col:13> 'struct crypto_skcipher *' lvalue Var 0x13e90cb68 'null_tfm' 'struct crypto_skcipher *'
    | `-CompoundStmt 0x13e03e0b0 <col:24, line:22:2>
    |   |-CallExpr 0x13e03df18 <line:19:3, col:24> 'int'
    |   | |-ImplicitCastExpr 0x13e03df00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e03dec0 <col:3> 'int ()' Function 0x13e03de08 'crypto_free_aead' 'int ()'
    |   | `-ImplicitCastExpr 0x13e03df40 <col:20> 'struct crypto_aead *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e03dee0 <col:20> 'struct crypto_aead *' lvalue Var 0x13e8f3918 'aead' 'struct crypto_aead *'
    |   |-CallExpr 0x13e03dfb0 <line:20:3, col:12> 'int'
    |   | |-ImplicitCastExpr 0x13e03df98 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x13e03df58 <col:3> 'int ()' Function 0x13e90d860 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x13e03dfd8 <col:9> 'struct aead_tfm *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13e03df78 <col:9> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
    |   `-ReturnStmt 0x13e03e0a0 <line:21:3, col:27>
    |     `-ImplicitCastExpr 0x13e03e088 <col:10, col:27> 'void *' <IntegralToPointer>
    |       `-CallExpr 0x13e03e048 <col:10, col:27> 'int'
    |         |-ImplicitCastExpr 0x13e03e030 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x13e03dff0 <col:10> 'int ()' Function 0x13e03da00 'ERR_CAST' 'int ()'
    |         `-ImplicitCastExpr 0x13e03e070 <col:19> 'struct crypto_skcipher *' <LValueToRValue>
    |           `-DeclRefExpr 0x13e03e010 <col:19> 'struct crypto_skcipher *' lvalue Var 0x13e90cb68 'null_tfm' 'struct crypto_skcipher *'
    |-BinaryOperator 0x13e03e178 <line:24:2, col:14> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13e03e130 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13e03e0f8 <col:2> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
    | `-DeclRefExpr 0x13e03e158 <col:14> 'struct crypto_aead *' lvalue Var 0x13e8f3918 'aead' 'struct crypto_aead *'
    |-BinaryOperator 0x13e03e218 <line:25:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13e03e1d0 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13e03e198 <col:2> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
    | `-DeclRefExpr 0x13e03e1f8 <col:18> 'struct crypto_skcipher *' lvalue Var 0x13e90cb68 'null_tfm' 'struct crypto_skcipher *'
    `-ReturnStmt 0x13e03e288 <line:27:2, col:9>
      `-ImplicitCastExpr 0x13e03e270 <col:9> 'void *' <BitCast>
        `-ImplicitCastExpr 0x13e03e258 <col:9> 'struct aead_tfm *' <LValueToRValue>
          `-DeclRefExpr 0x13e03e238 <col:9> 'struct aead_tfm *' lvalue Var 0x13e8f3718 'tfm' 'struct aead_tfm *'
