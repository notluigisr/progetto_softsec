`-FunctionDecl 0x13e80e118  line:1:1 invalid fixExec2Error 'int (int, char *, char, int, char *, void *, int)'
  |-ParmVarDecl 0x13e80dcd8 <col:15, col:19> col:19 used action 'int'
  |-ParmVarDecl 0x13e80dd70 <line:2:14, col:23> col:23 used var_val 'char *'
  |-ParmVarDecl 0x13e80dde8 <line:3:14, col:21> col:21 used var_val_type 'char'
  |-ParmVarDecl 0x13e80de68 <line:4:14, col:21> col:21 invalid var_val_len 'int'
  |-ParmVarDecl 0x13e80dee8 <line:5:14, col:23> col:23 statP 'char *'
  |-ParmVarDecl 0x13e80df68 <col:30, col:36> col:36 used name 'void *'
  |-ParmVarDecl 0x13e80dfe8 <col:42, col:49> col:49 invalid name_len 'int'
  `-CompoundStmt 0x13e826f50 <line:6:1, line:36:1>
    |-DeclStmt 0x13e80e2a8 <line:8:5, col:21>
    | `-VarDecl 0x13e80e240 <col:5, col:18> col:18 used idx 'unsigned int'
    |-BinaryOperator 0x13e80e3d8 <line:10:5, col:29> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x13e80e2c0 <col:5> 'unsigned int' lvalue Var 0x13e80e240 'idx' 'unsigned int'
    | `-BinaryOperator 0x13e80e3b8 <col:11, col:29> '<dependent type>' contains-errors '-'
    |   |-ArraySubscriptExpr 0x13e80e378 <col:11, col:26> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x13e80e360 <col:11> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x13e80e2e0 <col:11> 'void *' lvalue ParmVar 0x13e80df68 'name' 'void *'
    |   | `-BinaryOperator 0x13e80e340 <col:16, col:25> '<dependent type>' contains-errors '-'
    |   |   |-RecoveryExpr 0x13e80e300 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x13e80e320 <col:25> 'int' 1
    |   `-IntegerLiteral 0x13e80e398 <col:29> 'int' 1
    `-SwitchStmt 0x13e826670 <line:14:5, line:33:5>
      |-ImplicitCastExpr 0x13e826658 <line:14:13> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x13e826638 <col:13> 'int' lvalue ParmVar 0x13e80dcd8 'action' 'int'
      `-CompoundStmt 0x13e826f20 <col:21, line:33:5>
        |-IfStmt 0x13e826a28 <line:16:9, line:19:9>
        | |-BinaryOperator 0x13e826728 <line:16:13, col:29> 'int' contains-errors '!='
        | | |-DeclRefExpr 0x13e8266b0 <col:13> 'char' lvalue ParmVar 0x13e80dde8 'var_val_type' 'char'
        | | `-RecoveryExpr 0x13e826708 <col:29> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x13e826a08 <col:42, line:19:9>
        |   |-CallExpr 0x13e826990 <line:17:13, col:36> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x13e8268a0 <col:13> 'int ()' Function 0x13e8267e8 'snmp_log' 'int ()'
        |   | |-RecoveryExpr 0x13e826970 <col:22> '<dependent type>' contains-errors lvalue
        |   | `-StringLiteral 0x13e826920 <col:31> 'char[4]' lvalue "STR"
        |   `-ReturnStmt 0x13e8269f8 <line:18:13, col:20>
        |     `-RecoveryExpr 0x13e8269d8 <col:20> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x13e826b80 <line:20:9, col:33> 'unsigned int' '='
        | |-DeclRefExpr 0x13e826a48 <col:9> 'unsigned int' lvalue Var 0x13e80e240 'idx' 'unsigned int'
        | `-ImplicitCastExpr 0x13e826b68 <col:15, col:33> 'unsigned int' <IntegralCast>
        |   `-ImplicitCastExpr 0x13e826b50 <col:15, col:33> 'long' <LValueToRValue>
        |     `-UnaryOperator 0x13e826b38 <col:15, col:33> 'long' lvalue prefix '*' cannot overflow
        |       `-ParenExpr 0x13e826b18 <col:16, col:33> 'long *'
        |         `-CStyleCastExpr 0x13e826af0 <col:17, col:26> 'long *' <BitCast>
        |           `-ImplicitCastExpr 0x13e826ad8 <col:26> 'char *' <LValueToRValue> part_of_explicit_cast
        |             `-DeclRefExpr 0x13e826a68 <col:26> 'char *' lvalue ParmVar 0x13e80dd70 'var_val' 'char *'
        |-IfStmt 0x13e826d70 <line:21:9, line:24:9>
        | |-BinaryOperator 0x13e826c10 <line:21:13, col:20> 'int' '!='
        | | |-ImplicitCastExpr 0x13e826be0 <col:13> 'unsigned int' <LValueToRValue>
        | | | `-DeclRefExpr 0x13e826ba0 <col:13> 'unsigned int' lvalue Var 0x13e80e240 'idx' 'unsigned int'
        | | `-ImplicitCastExpr 0x13e826bf8 <col:20> 'unsigned int' <IntegralCast>
        | |   `-IntegerLiteral 0x13e826bc0 <col:20> 'int' 1
        | `-CompoundStmt 0x13e826d50 <col:23, line:24:9>
        |   |-CallExpr 0x13e826cd8 <line:22:13, col:36> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x13e826c30 <col:13> 'int ()' Function 0x13e8267e8 'snmp_log' 'int ()'
        |   | |-RecoveryExpr 0x13e826cb8 <col:22> '<dependent type>' contains-errors lvalue
        |   | `-StringLiteral 0x13e826c68 <col:31> 'char[4]' lvalue "STR"
        |   `-ReturnStmt 0x13e826d40 <line:23:13, col:20>
        |     `-RecoveryExpr 0x13e826d20 <col:20> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x13e826e00 <line:25:9, line:28:9>
          |-RecoveryExpr 0x13e826d90 <line:25:13, col:31> '_Bool' contains-errors
          `-CompoundStmt 0x13e826df0 <col:43, line:28:9>
