`-FunctionDecl 0x12280de38  line:1:1 yytnamerr 'int (char *, const char *)'
  |-ParmVarDecl 0x12280dcd8 <col:12, col:18> col:18 used yyres 'char *'
  |-ParmVarDecl 0x12280dd58 <col:25, col:37> col:37 used yystr 'const char *'
  `-CompoundStmt 0x1228272a8 <line:2:1, line:37:1>
    |-IfStmt 0x122826e00 <line:3:3, line:31:5>
    | |-BinaryOperator 0x12280dfd0 <line:3:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x12280dfb8 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12280dfa0 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x12280df70 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x12280df58 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12280df38 <col:8> 'const char *' lvalue ParmVar 0x12280dd58 'yystr' 'const char *'
    | | `-CharacterLiteral 0x12280df88 <col:17> 'int' 34
    | `-CompoundStmt 0x122826dd8 <line:4:5, line:31:5>
    |   |-DeclStmt 0x12280e0c0 <line:6:7, col:30>
    |   | `-VarDecl 0x12280e020 <col:7, col:25> col:19 used yyp 'const char *' cinit
    |   |   `-ImplicitCastExpr 0x12280e0a8 <col:25> 'const char *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12280e088 <col:25> 'const char *' lvalue ParmVar 0x12280dd58 'yystr' 'const char *'
    |   |-ForStmt 0x122826d78 <line:8:7, line:29:11>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | `-SwitchStmt 0x12280e158 <line:9:9, line:29:11>
    |   |   |-ImplicitCastExpr 0x12280e140 <line:9:17, col:20> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x12280e128 <col:17, col:20> 'char' <LValueToRValue>
    |   |   |   `-UnaryOperator 0x12280e110 <col:17, col:20> 'const char' lvalue prefix '*' cannot overflow
    |   |   |     `-UnaryOperator 0x12280e0f8 <col:18, col:20> 'const char *' prefix '++'
    |   |   |       `-DeclRefExpr 0x12280e0d8 <col:20> 'const char *' lvalue Var 0x12280e020 'yyp' 'const char *'
    |   |   `-CompoundStmt 0x122826d30 <line:10:11, line:29:11>
    |   |     |-CaseStmt 0x12280e1b0 <line:11:11, line:13:18>
    |   |     | |-ConstantExpr 0x12280e198 <line:11:16> 'int'
    |   |     | | `-CharacterLiteral 0x12280e180 <col:16> 'int' 39
    |   |     | `-CaseStmt 0x12280e208 <line:12:11, line:13:18>
    |   |     |   |-ConstantExpr 0x12280e1f0 <line:12:16> 'int'
    |   |     |   | `-CharacterLiteral 0x12280e1d8 <col:16> 'int' 44
    |   |     |   `-GotoStmt 0x12280e280 <line:13:13, col:18> 'do_not_strip_quotes' 0x12280e230
    |   |     |-CaseStmt 0x12280e2c8 <line:15:11, line:17:20>
    |   |     | |-ConstantExpr 0x12280e2b0 <line:15:16> 'int'
    |   |     | | `-CharacterLiteral 0x12280e298 <col:16> 'int' 92
    |   |     | `-IfStmt 0x12280e3c0 <line:16:13, line:17:20>
    |   |     |   |-BinaryOperator 0x12280e388 <line:16:17, col:27> 'int' '!='
    |   |     |   | |-ImplicitCastExpr 0x12280e370 <col:17, col:20> 'int' <IntegralCast>
    |   |     |   | | `-ImplicitCastExpr 0x12280e358 <col:17, col:20> 'char' <LValueToRValue>
    |   |     |   | |   `-UnaryOperator 0x12280e328 <col:17, col:20> 'const char' lvalue prefix '*' cannot overflow
    |   |     |   | |     `-UnaryOperator 0x12280e310 <col:18, col:20> 'const char *' prefix '++'
    |   |     |   | |       `-DeclRefExpr 0x12280e2f0 <col:20> 'const char *' lvalue Var 0x12280e020 'yyp' 'const char *'
    |   |     |   | `-CharacterLiteral 0x12280e340 <col:27> 'int' 92
    |   |     |   `-GotoStmt 0x12280e3a8 <line:17:15, col:20> 'do_not_strip_quotes' 0x12280e230
    |   |     |-DefaultStmt 0x1228266f8 <line:19:11, col:18>
    |   |     | `-NullStmt 0x1228266f0 <col:18>
    |   |     |-UnaryOperator 0x122826738 <line:22:13, col:16> 'const char *' postfix '++'
    |   |     | `-DeclRefExpr 0x122826718 <col:13> 'const char *' lvalue Var 0x12280e020 'yyp' 'const char *'
    |   |     |-BreakStmt 0x122826750 <line:23:13>
    |   |     |-CaseStmt 0x122826788 <line:25:11, <invalid sloc>>
    |   |     | |-ConstantExpr 0x122826770 <col:16> 'int'
    |   |     | | `-CharacterLiteral 0x122826758 <col:16> 'int' 34
    |   |     | `-NullStmt 0x122826888 <<invalid sloc>>
    |   |     `-ReturnStmt 0x122826d20 <line:28:13, col:20>
    |   |       `-ImplicitCastExpr 0x1228268e0 <col:20> 'int' <PointerToIntegral>
    |   |         `-ImplicitCastExpr 0x1228268c8 <col:20> 'const char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x1228268a8 <col:20> 'const char *' lvalue Var 0x12280e020 'yyp' 'const char *'
    |   `-LabelStmt 0x122826db8 <line:30:5, col:26> 'do_not_strip_quotes'
    |     `-NullStmt 0x122826db0 <col:26>
    |-IfStmt 0x122827058 <line:33:3, line:34:27>
    | |-UnaryOperator 0x122826e58 <line:33:7, col:9> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x122826e40 <col:9> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x122826e20 <col:9> 'char *' lvalue ParmVar 0x12280dcd8 'yyres' 'char *'
    | `-ReturnStmt 0x122827048 <line:34:5, col:27>
    |   `-CallExpr 0x122827008 <col:12, col:27> 'int'
    |     |-ImplicitCastExpr 0x122826ff0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x122826f80 <col:12> 'int ()' Function 0x122826ec8 'yystrlen' 'int ()'
    |     `-ImplicitCastExpr 0x122827030 <col:22> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x122826fa0 <col:22> 'const char *' lvalue ParmVar 0x12280dd58 'yystr' 'const char *'
    `-ReturnStmt 0x122827298 <line:36:3, col:36>
      `-RecoveryExpr 0x122827268 <col:10, col:36> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1228271d0 <col:10, col:32> 'int'
        | |-ImplicitCastExpr 0x1228271b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x122827158 <col:10> 'int ()' Function 0x1228270a0 'yystpcpy' 'int ()'
        | |-ImplicitCastExpr 0x122827200 <col:20> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x122827178 <col:20> 'char *' lvalue ParmVar 0x12280dcd8 'yyres' 'char *'
        | `-ImplicitCastExpr 0x122827218 <col:27> 'const char *' <LValueToRValue>
        |   `-DeclRefExpr 0x122827198 <col:27> 'const char *' lvalue ParmVar 0x12280dd58 'yystr' 'const char *'
        `-DeclRefExpr 0x122827230 <col:36> 'char *' lvalue ParmVar 0x12280dcd8 'yyres' 'char *'
