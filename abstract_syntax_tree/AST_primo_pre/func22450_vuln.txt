`-FunctionDecl 0x123928230  line:1:13 get_icu_value_src_php 'void (char *, int)' static
  |-ParmVarDecl 0x1239280d8 <col:36, col:42> col:42 used tag_name 'char *'
  |-ParmVarDecl 0x123928158 <col:52> col:52 INTERNAL_FUNCTION_PARAMETERS 'int'
  `-CompoundStmt 0x125809540 <line:2:1, line:54:1>
    |-DeclStmt 0x123928400 <line:4:2, col:37>
    | `-VarDecl 0x123928348 <col:2, col:33> col:14 used loc_name 'const char *' cinit
    |   `-RecoveryExpr 0x1239283e0 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1239284b8 <line:5:2, col:34>
    | `-VarDecl 0x123928430 <col:2, col:33> col:14 used loc_name_len 'int' cinit
    |   `-IntegerLiteral 0x123928498 <col:33> 'int' 0
    |-DeclStmt 0x123928588 <line:7:2, col:31>
    | `-VarDecl 0x1239284e8 <col:2, col:27> col:14 used tag_value 'char *' cinit
    |   `-RecoveryExpr 0x123928568 <col:27> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x123928690 <line:8:2, col:31>
    | `-VarDecl 0x1239285b8 <col:2, col:29> col:14 used empty_result 'char *' cinit
    |   `-ImplicitCastExpr 0x123928678 <col:29> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x123928660 <col:29> 'char[1]' lvalue ""
    |-DeclStmt 0x123928748 <line:10:2, col:29>
    | `-VarDecl 0x1239286c0 <col:2, col:28> col:14 used result 'int' cinit
    |   `-IntegerLiteral 0x123928728 <col:28> 'int' 0
    |-DeclStmt 0x123940a20 <line:11:2, col:33>
    | `-VarDecl 0x123928778 <col:2, col:29> col:14 used msg 'char *' cinit
    |   `-RecoveryExpr 0x123940a00 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1239413d0 <line:17:2, line:24:5>
    | |-RecoveryExpr 0x123940e10 <line:17:5, line:18:32> '_Bool' contains-errors
    | `-CompoundStmt 0x1239413b0 <col:41, line:24:5>
    |   |-CallExpr 0x123941058 <line:19:3, col:38> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x123941040 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x123940f10 <col:3> 'int ()' Function 0x123940e58 'spprintf' 'int ()'
    |   | |-UnaryOperator 0x123940f80 <col:12, col:13> 'char **' contains-errors prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x123940f30 <col:13> 'char *' contains-errors lvalue Var 0x123928778 'msg' 'char *'
    |   | |-IntegerLiteral 0x123940f98 <col:19> 'int' 0
    |   | |-ImplicitCastExpr 0x123941098 <col:22> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x123941000 <col:22> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1239410b0 <col:29> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x123941020 <col:29> 'char *' lvalue ParmVar 0x1239280d8 'tag_name' 'char *'
    |   `-CallExpr 0x123941370 <line:21:3, col:12> 'int' contains-errors
    |     |-ImplicitCastExpr 0x123941358 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123941318 <col:3> 'int ()' Function 0x123941260 'efree' 'int ()'
    |     `-ImplicitCastExpr 0x123941398 <col:9> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x123941338 <col:9> 'char *' contains-errors lvalue Var 0x123928778 'msg' 'char *'
    |-IfStmt 0x123941668 <line:26:2, line:28:2>
    | |-BinaryOperator 0x123941448 <line:26:5, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x123941430 <col:5> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1239413f0 <col:5> 'int' lvalue Var 0x123928430 'loc_name_len' 'int'
    | | `-IntegerLiteral 0x123941410 <col:21> 'int' 0
    | `-CompoundStmt 0x123941650 <col:24, line:28:2>
    |   `-BinaryOperator 0x123941630 <line:27:3, col:46> 'const char *' contains-errors '='
    |     |-DeclRefExpr 0x123941468 <col:3> 'const char *' contains-errors lvalue Var 0x123928348 'loc_name' 'const char *'
    |     `-CallExpr 0x123941608 <col:14, col:46> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x123941568 <col:14> 'int ()' Function 0x1239414b0 'intl_locale_get_default' 'int ()'
    |       `-RecoveryExpr 0x1239415e8 <col:38> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123941918 <line:31:2, col:70> 'char *' contains-errors '='
    | |-DeclRefExpr 0x123941688 <col:2> 'char *' contains-errors lvalue Var 0x1239284e8 'tag_value' 'char *'
    | `-ImplicitCastExpr 0x123941900 <col:14, col:70> 'char *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x123941890 <col:14, col:70> 'int' contains-errors
    |     |-ImplicitCastExpr 0x123941878 <col:14> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x123941788 <col:14> 'int ()' Function 0x1239416d0 'get_icu_value_internal' 'int ()'
    |     |-ImplicitCastExpr 0x1239418d0 <col:38> 'const char *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x1239417a8 <col:38> 'const char *' contains-errors lvalue Var 0x123928348 'loc_name' 'const char *'
    |     |-ImplicitCastExpr 0x1239418e8 <col:49> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1239417c8 <col:49> 'char *' lvalue ParmVar 0x1239280d8 'tag_name' 'char *'
    |     |-UnaryOperator 0x123941840 <col:60, col:61> 'int *' prefix '&' cannot overflow
    |     | `-DeclRefExpr 0x1239417e8 <col:61> 'int' lvalue Var 0x1239286c0 'result' 'int'
    |     `-IntegerLiteral 0x123941858 <col:69> 'int' 0
    |-IfStmt 0x125809008 <line:34:2, line:39:2>
    | |-BinaryOperator 0x1239419a8 <line:34:6, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x123941990 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x123941938 <col:6> 'int' lvalue Var 0x1239286c0 'result' 'int'
    | | `-UnaryOperator 0x123941978 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x123941958 <col:17> 'int' 1
    | `-CompoundStmt 0x125808ff0 <col:21, line:39:2>
    |   `-IfStmt 0x125808eb0 <line:35:3, line:37:3>
    |     |-ImplicitCastExpr 0x1239419e8 <line:35:7> 'char *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x1239419c8 <col:7> 'char *' contains-errors lvalue Var 0x1239284e8 'tag_value' 'char *'
    |     `-CompoundStmt 0x125808e98 <col:17, line:37:3>
    |       `-CallExpr 0x125808e58 <line:36:4, col:20> 'int' contains-errors
    |         |-ImplicitCastExpr 0x125808e40 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x125808e00 <col:4> 'int ()' Function 0x123941260 'efree' 'int ()'
    |         `-ImplicitCastExpr 0x125808e80 <col:11> 'char *' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x125808e20 <col:11> 'char *' contains-errors lvalue Var 0x1239284e8 'tag_value' 'char *'
    |-IfStmt 0x1258090b0 <line:42:2, line:44:2>
    | |-ImplicitCastExpr 0x125809048 <line:42:6> 'char *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x125809028 <col:6> 'char *' contains-errors lvalue Var 0x1239284e8 'tag_value' 'char *'
    | `-CompoundStmt 0x1258090a0 <col:16, line:44:2>
    `-IfStmt 0x125809520 <line:47:2, line:52:2>
      |-BinaryOperator 0x125809128 <line:47:6, col:15> 'int' '=='
      | |-ImplicitCastExpr 0x125809110 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x1258090d0 <col:6> 'int' lvalue Var 0x1239286c0 'result' 'int'
      | `-IntegerLiteral 0x1258090f0 <col:15> 'int' 0
      `-CompoundStmt 0x1258094f8 <col:18, line:52:2>
        |-CallExpr 0x125809238 <line:48:3, col:49> 'int' contains-errors
        | |-ImplicitCastExpr 0x125809220 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x125809148 <col:3> 'int ()' Function 0x123940e58 'spprintf' 'int ()'
        | |-UnaryOperator 0x125809188 <col:12, col:13> 'char **' contains-errors prefix '&' cannot overflow
        | | `-DeclRefExpr 0x125809168 <col:13> 'char *' contains-errors lvalue Var 0x123928778 'msg' 'char *'
        | |-IntegerLiteral 0x1258091a0 <col:19> 'int' 0
        | |-ImplicitCastExpr 0x125809280 <col:22> 'char *' <ArrayToPointerDecay>
        | | `-StringLiteral 0x1258091c0 <col:22> 'char[4]' lvalue "STR"
        | |-ImplicitCastExpr 0x125809298 <col:29> 'char *' <LValueToRValue>
        | | `-DeclRefExpr 0x1258091e0 <col:29> 'char *' lvalue ParmVar 0x1239280d8 'tag_name' 'char *'
        | `-ImplicitCastExpr 0x1258092b0 <col:40> 'char *' <LValueToRValue>
        |   `-DeclRefExpr 0x125809200 <col:40> 'char *' lvalue ParmVar 0x1239280d8 'tag_name' 'char *'
        |-CallExpr 0x125809380 <line:50:3, col:12> 'int' contains-errors
        | |-ImplicitCastExpr 0x125809368 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x125809328 <col:3> 'int ()' Function 0x123941260 'efree' 'int ()'
        | `-ImplicitCastExpr 0x1258093a8 <col:9> 'char *' contains-errors <LValueToRValue>
        |   `-DeclRefExpr 0x125809348 <col:9> 'char *' contains-errors lvalue Var 0x123928778 'msg' 'char *'
        `-CallExpr 0x1258094d8 <line:51:3, col:15> 'int'
          `-ImplicitCastExpr 0x1258094c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
            `-DeclRefExpr 0x1258094a0 <col:3> 'int ()' Function 0x1258093e8 'RETURN_NULL' 'int ()'
