`-FunctionDecl 0x14c03d358  line:1:12 ndp_sock_recv 'int (struct ndp *)' static
  |-ParmVarDecl 0x14c03d248 <col:26, col:38> col:38 used ndp 'struct ndp *'
  `-CompoundStmt 0x14c05c018 <line:2:1, line:54:1>
    |-DeclStmt 0x14c058238 <line:3:2, col:21>
    | |-RecordDecl 0x14c058050 <col:2, col:9> col:9 struct ndp_msg
    | `-VarDecl 0x14c0581b8 <col:2, col:18> col:18 used msg 'struct ndp_msg *'
    |-DeclStmt 0x14c0583e8 <line:4:2, col:28>
    | |-EnumDecl 0x14c058250 <col:2, col:7> col:7 ndp_msg_type
    | `-VarDecl 0x14c058368 <col:2, col:20> col:20 invalid msg_type 'enum ndp_msg_type'
    |-UnaryExprOrTypeTraitExpr 0x14c058470 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x14c058450 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14c058510 <line:6:2, col:9>
    | `-VarDecl 0x14c0584a8 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x14c058700 <line:8:2, col:22> 'struct ndp_msg *' '='
    | |-DeclRefExpr 0x14c058528 <col:2> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-ImplicitCastExpr 0x14c0586e8 <col:8, col:22> 'struct ndp_msg *' <IntegralToPointer>
    |   `-CallExpr 0x14c0586c8 <col:8, col:22> 'int'
    |     `-ImplicitCastExpr 0x14c0586b0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x14c058660 <col:8> 'int ()' Function 0x14c0585a8 'ndp_msg_alloc' 'int ()'
    |-IfStmt 0x14c058818 <line:9:2, line:10:11>
    | |-UnaryOperator 0x14c058758 <line:9:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x14c058740 <col:7> 'struct ndp_msg *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c058720 <col:7> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-ReturnStmt 0x14c058808 <line:10:3, col:11>
    |   `-UnaryOperator 0x14c0587f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x14c0587d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x14c0587b8 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14c058dc8 <line:13:2, line:14:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c0589b0 <line:13:2> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    | `-CallExpr 0x14c058d78 <col:8, line:14:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c058ab0 <line:13:8> 'int ()' Function 0x14c0589f8 'myrecvfrom6' 'int ()'
    |   |-RecoveryExpr 0x14c058b08 <col:20, col:25> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14c058ad0 <col:20> 'struct ndp *' lvalue ParmVar 0x14c03d248 'ndp' 'struct ndp *'
    |   |-RecoveryExpr 0x14c058b68 <col:31, col:36> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14c058b30 <col:31> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |   |-UnaryOperator 0x14c058d60 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c058d40 <col:42> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x14c058bc0 <col:47> 'int' 0
    |   |-UnaryOperator 0x14c058c40 <line:14:6, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c058c18 <col:7, col:12> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14c058be0 <col:7> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |   `-UnaryOperator 0x14c058cb8 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x14c058c90 <col:21, col:26> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c058c58 <col:21> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |-IfStmt 0x14c058fb0 <line:15:2, line:18:2>
    | |-ImplicitCastExpr 0x14c058e08 <line:15:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c058de8 <col:6> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    | `-CompoundStmt 0x14c058f90 <col:11, line:18:2>
    |   |-ImplicitCastExpr 0x14c058f10 <line:16:3, col:17> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x14c058ed8 <col:3, col:17> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x14c058e20 <col:3> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    |   |   |-DeclRefExpr 0x14c058e40 <col:7> 'struct ndp *' lvalue ParmVar 0x14c03d248 'ndp' 'struct ndp *'
    |   |   `-StringLiteral 0x14c058ea0 <col:12> 'char[4]' lvalue "STR"
    |   `-GotoStmt 0x14c058f78 <line:17:3, col:8> 'free_msg' 0x14c058f28
    |-CallExpr 0x14c05ab18 <line:19:2, line:20:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c05a8b8 <line:19:2> 'int ()' Function 0x14c05a800 'dbg' 'int ()'
    | |-DeclRefExpr 0x14c05a8d8 <col:6> 'struct ndp *' lvalue ParmVar 0x14c03d248 'ndp' 'struct ndp *'
    | |-StringLiteral 0x14c05a8f8 <col:11> 'char[4]' lvalue "STR"
    | |-CallExpr 0x14c05aa90 <line:20:4, col:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14c05a9f8 <col:4> 'int ()' Function 0x14c05a940 'str_in6_addr' 'int ()'
    | | `-UnaryOperator 0x14c05aa78 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x14c05aa50 <col:18, col:23> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14c05aa18 <col:18> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-RecoveryExpr 0x14c05aaf0 <col:32, col:37> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14c05aab8 <col:32> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |-IfStmt 0x14c05aee8 <line:22:2, line:26:2>
    | |-BinaryOperator 0x14c05acf0 <line:22:6, col:34> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x14c05ac60 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryExprOrTypeTraitExpr 0x14c05acd0 <col:12, col:34> 'unsigned long' contains-errors sizeof
    | |   `-ParenExpr 0x14c05acb0 <col:18, col:34> '<dependent type>' contains-errors
    | |     `-UnaryOperator 0x14c05ac98 <col:19, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x14c05ac80 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>
    | |         `-RecoveryExpr 0x14c05aba8 <col:20, col:25> '<dependent type>' contains-errors lvalue
    | |           `-DeclRefExpr 0x14c05ab70 <col:20> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *' non_odr_use_unevaluated
    | `-CompoundStmt 0x14c05aec8 <col:37, line:26:2>
    |   |-BinaryOperator 0x14c05ae90 <line:24:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x14c05ae50 <col:3> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    |   | `-IntegerLiteral 0x14c05ae70 <col:9> 'int' 0
    |   `-GotoStmt 0x14c05aeb0 <line:25:3, col:8> 'free_msg' 0x14c058f28
    |-BinaryOperator 0x14c05b138 <line:27:2, col:70> 'int' contains-errors '='
    | |-DeclRefExpr 0x14c05af08 <col:2> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    | `-CallExpr 0x14c05b108 <col:8, col:70> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14c05b008 <col:8> 'int ()' Function 0x14c05af50 'ndp_msg_type_by_raw_type' 'int ()'
    |   |-UnaryOperator 0x14c05b048 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x14c05b028 <col:34> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14c05b0c0 <col:44, col:60> '<dependent type>' contains-errors lvalue ->icmp6_type
    |     `-RecoveryExpr 0x14c05b098 <col:44, col:49> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x14c05b060 <col:44> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |-IfStmt 0x14c05b228 <line:28:2, line:31:2>
    | |-ImplicitCastExpr 0x14c05b178 <line:28:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14c05b158 <col:6> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    | `-CompoundStmt 0x14c05b208 <col:11, line:31:2>
    |   |-BinaryOperator 0x14c05b1d0 <line:29:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x14c05b190 <col:3> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    |   | `-IntegerLiteral 0x14c05b1b0 <col:9> 'int' 0
    |   `-GotoStmt 0x14c05b1f0 <line:30:3, col:8> 'free_msg' 0x14c058f28
    |-CallExpr 0x14c05b388 <line:32:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c05b328 <col:2> 'int ()' Function 0x14c05b270 'ndp_msg_init' 'int ()'
    | |-DeclRefExpr 0x14c05b348 <col:15> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-RecoveryExpr 0x14c05b368 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14c05b7e0 <line:35:2, line:39:2>
    | |-UnaryOperator 0x14c05b650 <line:35:6, col:30> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14c05b610 <col:7, col:30> 'int'
    | |   |-ImplicitCastExpr 0x14c05b5f8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14c05b5b8 <col:7> 'int ()' Function 0x14c05b500 'ndp_msg_check_valid' 'int ()'
    | |   `-ImplicitCastExpr 0x14c05b638 <col:27> 'struct ndp_msg *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14c05b5d8 <col:27> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-CompoundStmt 0x14c05b7b8 <col:33, line:39:2>
    |   |-CallExpr 0x14c05b6e0 <line:36:3, col:18> 'int'
    |   | |-ImplicitCastExpr 0x14c05b6c8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14c05b668 <col:3> 'int ()' Function 0x14c05ad38 'warn' 'int ()'
    |   | |-ImplicitCastExpr 0x14c05b710 <col:8> 'struct ndp *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14c05b688 <col:8> 'struct ndp *' lvalue ParmVar 0x14c03d248 'ndp' 'struct ndp *'
    |   | `-ImplicitCastExpr 0x14c05b728 <col:13> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x14c05b6a8 <col:13> 'char[4]' lvalue "STR"
    |   |-BinaryOperator 0x14c05b780 <line:37:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x14c05b740 <col:3> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    |   | `-IntegerLiteral 0x14c05b760 <col:9> 'int' 0
    |   `-GotoStmt 0x14c05b7a0 <line:38:3, col:8> 'free_msg' 0x14c058f28
    |-IfStmt 0x14c05bc18 <line:44:2, line:47:2>
    | |-UnaryOperator 0x14c05bb68 <line:44:6, col:29> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x14c05bb28 <col:7, col:29> 'int'
    | |   |-ImplicitCastExpr 0x14c05bb10 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x14c05bad0 <col:7> 'int ()' Function 0x14c05ba18 'ndp_msg_check_opts' 'int ()'
    | |   `-ImplicitCastExpr 0x14c05bb50 <col:26> 'struct ndp_msg *' <LValueToRValue>
    | |     `-DeclRefExpr 0x14c05baf0 <col:26> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    | `-CompoundStmt 0x14c05bbf8 <col:32, line:47:2>
    |   |-BinaryOperator 0x14c05bbc0 <line:45:3, col:9> 'int' '='
    |   | |-DeclRefExpr 0x14c05bb80 <col:3> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    |   | `-IntegerLiteral 0x14c05bba0 <col:9> 'int' 0
    |   `-GotoStmt 0x14c05bbe0 <line:46:3, col:8> 'free_msg' 0x14c058f28
    |-BinaryOperator 0x14c05be10 <line:49:2, col:34> 'int' '='
    | |-DeclRefExpr 0x14c05bc38 <col:2> 'int' lvalue Var 0x14c0584a8 'err' 'int'
    | `-CallExpr 0x14c05bdb0 <col:8, col:34> 'int'
    |   |-ImplicitCastExpr 0x14c05bd98 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c05bd38 <col:8> 'int ()' Function 0x14c05bc80 'ndp_call_handlers' 'int ()'
    |   |-ImplicitCastExpr 0x14c05bde0 <col:26> 'struct ndp *' <LValueToRValue>
    |   | `-DeclRefExpr 0x14c05bd58 <col:26> 'struct ndp *' lvalue ParmVar 0x14c03d248 'ndp' 'struct ndp *'
    |   `-ImplicitCastExpr 0x14c05bdf8 <col:31> 'struct ndp_msg *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c05bd78 <col:31> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    |-NullStmt 0x14c05be30 <col:36>
    |-LabelStmt 0x14c05bfb0 <line:51:1, line:52:21> 'free_msg'
    | `-CallExpr 0x14c05bf70 <col:2, col:21> 'int'
    |   |-ImplicitCastExpr 0x14c05bf58 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14c05bf18 <col:2> 'int ()' Function 0x14c05be60 'ndp_msg_destroy' 'int ()'
    |   `-ImplicitCastExpr 0x14c05bf98 <col:18> 'struct ndp_msg *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c05bf38 <col:18> 'struct ndp_msg *' lvalue Var 0x14c0581b8 'msg' 'struct ndp_msg *'
    `-ReturnStmt 0x14c05c008 <line:53:2, col:9>
      `-ImplicitCastExpr 0x14c05bff0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c05bfd0 <col:9> 'int' lvalue Var 0x14c0584a8 'err' 'int'
