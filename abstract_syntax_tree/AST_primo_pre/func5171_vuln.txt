`-FunctionDecl 0x137940b48  line:1:5 iwch_cxgb3_ofld_send 'int (struct t3cdev *, struct sk_buff *)'
  |-ParmVarDecl 0x137928648 <col:26, col:41> col:41 used tdev 'struct t3cdev *'
  |-ParmVarDecl 0x137940a28 <col:47, col:63> col:63 used skb 'struct sk_buff *'
  `-CompoundStmt 0x137941818 <line:2:1, line:15:1>
    |-DeclStmt 0x137940ce8 <line:3:2, col:15>
    | `-VarDecl 0x137940c60 <col:2, col:14> col:6 used error 'int' cinit
    |   `-IntegerLiteral 0x137940cc8 <col:14> 'int' 0
    |-DeclStmt 0x137940ee8 <line:4:2, col:24>
    | |-RecordDecl 0x137940d00 <col:2, col:9> col:9 struct cxio_rdev
    | `-VarDecl 0x137940e68 <col:2, col:20> col:20 used rdev 'struct cxio_rdev *'
    |-BinaryOperator 0x137941030 <line:6:2, col:35> 'struct cxio_rdev *' contains-errors '='
    | |-DeclRefExpr 0x137940f00 <col:2> 'struct cxio_rdev *' lvalue Var 0x137940e68 'rdev' 'struct cxio_rdev *'
    | `-CStyleCastExpr 0x137941008 <col:9, col:35> 'struct cxio_rdev *' contains-errors <Dependent>
    |   `-RecoveryExpr 0x137940f58 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x137940f20 <col:29> 'struct t3cdev *' lvalue ParmVar 0x137928648 'tdev' 'struct t3cdev *'
    |-IfStmt 0x137941488 <line:7:2, line:10:2>
    | |-CallExpr 0x137941208 <line:7:6, col:27> 'int'
    | | |-ImplicitCastExpr 0x1379411f0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x137941180 <col:6> 'int ()' Function 0x1379410c8 'cxio_fatal_error' 'int ()'
    | | `-ImplicitCastExpr 0x137941230 <col:23> 'struct cxio_rdev *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1379411a0 <col:23> 'struct cxio_rdev *' lvalue Var 0x137940e68 'rdev' 'struct cxio_rdev *'
    | `-CompoundStmt 0x137941468 <col:30, line:10:2>
    |   |-CallExpr 0x137941380 <line:8:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x137941368 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x137941328 <col:3> 'int ()' Function 0x137941270 'kfree_skb' 'int ()'
    |   | `-ImplicitCastExpr 0x1379413a8 <col:13> 'struct sk_buff *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x137941348 <col:13> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'
    |   `-ReturnStmt 0x137941458 <line:9:3, col:11>
    |     `-UnaryOperator 0x137941440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x137941428 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x137941408 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x137941680 <line:11:2, col:35> 'int' '='
    | |-DeclRefExpr 0x1379414a8 <col:2> 'int' lvalue Var 0x137940c60 'error' 'int'
    | `-CallExpr 0x137941620 <col:10, col:35> 'int'
    |   |-ImplicitCastExpr 0x137941608 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1379415a8 <col:10> 'int ()' Function 0x1379414f0 'cxgb3_ofld_send' 'int ()'
    |   |-ImplicitCastExpr 0x137941650 <col:26> 'struct t3cdev *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1379415c8 <col:26> 'struct t3cdev *' lvalue ParmVar 0x137928648 'tdev' 'struct t3cdev *'
    |   `-ImplicitCastExpr 0x137941668 <col:32> 'struct sk_buff *' <LValueToRValue>
    |     `-DeclRefExpr 0x1379415e8 <col:32> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'
    |-IfStmt 0x1379417b0 <line:12:2, line:13:16>
    | |-BinaryOperator 0x1379416f8 <line:12:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x1379416e0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1379416a0 <col:6> 'int' lvalue Var 0x137940c60 'error' 'int'
    | | `-IntegerLiteral 0x1379416c0 <col:14> 'int' 0
    | `-CallExpr 0x137941770 <line:13:3, col:16> 'int'
    |   |-ImplicitCastExpr 0x137941758 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x137941718 <col:3> 'int ()' Function 0x137941270 'kfree_skb' 'int ()'
    |   `-ImplicitCastExpr 0x137941798 <col:13> 'struct sk_buff *' <LValueToRValue>
    |     `-DeclRefExpr 0x137941738 <col:13> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'
    `-ReturnStmt 0x137941808 <line:14:2, col:9>
      `-ImplicitCastExpr 0x1379417f0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1379417d0 <col:9> 'int' lvalue Var 0x137940c60 'error' 'int'
