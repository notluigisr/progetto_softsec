`-FunctionDecl 0x15b03f7f0  line:1:6 invalid lremCommand 'void (int *)'
  |-ParmVarDecl 0x15b03f728 <col:18, col:26> col:26 invalid c 'int *'
  `-CompoundStmt 0x15b8f3c98 <col:29, line:43:1>
    |-DeclStmt 0x15b03fa40 <line:4:5, col:18>
    | `-VarDecl 0x15b03f9d8 <col:5, col:10> col:10 used toremove 'long'
    |-DeclStmt 0x15b03fb10 <line:5:5, col:21>
    | `-VarDecl 0x15b03fa70 <col:5, col:20> col:10 used removed 'long' cinit
    |   `-ImplicitCastExpr 0x15b03faf8 <col:20> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x15b03fad8 <col:20> 'int' 0
    |-IfStmt 0x15b0586e0 <line:7:5, line:8:9>
    | |-RecoveryExpr 0x15b0586b0 <line:7:9, col:74> '_Bool' contains-errors
    | `-ReturnStmt 0x15b0586d0 <line:8:9>
    |-IfStmt 0x15b058cb0 <line:11:5, col:59>
    | |-BinaryOperator 0x15b058c80 <col:9, col:56> 'int' contains-errors '||'
    | | |-BinaryOperator 0x15b058be8 <col:9, col:20> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x15b058ba8 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x15b058bc8 <col:20> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x15b058c48 <col:28, col:56> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x15b058ae0 <col:28> 'int ()' Function 0x15b058a28 'checkType' 'int ()'
    | |   |-RecoveryExpr 0x15b058b00 <col:38> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x15b058c08 <col:40> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x15b058c28 <col:48> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x15b058ca0 <col:59>
    |-IfStmt 0x15b058fa8 <line:14:5, line:19:5> has_else
    | |-BinaryOperator 0x15b058d58 <line:14:9, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x15b058d28 <col:9> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x15b058ce8 <col:9> 'long' lvalue Var 0x15b03f9d8 'toremove' 'long'
    | | `-ImplicitCastExpr 0x15b058d40 <col:20> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x15b058d08 <col:20> 'int' 0
    | |-CompoundStmt 0x15b058f40 <col:23, line:17:5>
    | | `-BinaryOperator 0x15b058de8 <line:15:9, col:21> 'long' '='
    | |   |-DeclRefExpr 0x15b058d78 <col:9> 'long' lvalue Var 0x15b03f9d8 'toremove' 'long'
    | |   `-UnaryOperator 0x15b058dd0 <col:20, col:21> 'long' prefix '-'
    | |     `-ImplicitCastExpr 0x15b058db8 <col:21> 'long' <LValueToRValue>
    | |       `-DeclRefExpr 0x15b058d98 <col:21> 'long' lvalue Var 0x15b03f9d8 'toremove' 'long'
    | `-CompoundStmt 0x15b058f98 <line:17:12, line:19:5>
    |-WhileStmt 0x15b0594b8 <line:22:5, line:29:5>
    | |-RecoveryExpr 0x15b0590d8 <line:22:12, col:34> '_Bool' contains-errors
    | `-CompoundStmt 0x15b0594a0 <col:37, line:29:5>
    |   `-IfStmt 0x15b059480 <line:23:9, line:28:9>
    |     |-RecoveryExpr 0x15b0591f8 <line:23:13, col:37> '_Bool' contains-errors
    |     `-CompoundStmt 0x15b059460 <col:40, line:28:9>
    |       |-UnaryOperator 0x15b059338 <line:26:13, col:20> 'long' postfix '++'
    |       | `-DeclRefExpr 0x15b059318 <col:13> 'long' lvalue Var 0x15b03fa70 'removed' 'long'
    |       `-IfStmt 0x15b059440 <line:27:13, col:50>
    |         |-BinaryOperator 0x15b059418 <col:17, col:40> 'int' '&&'
    |         | |-ImplicitCastExpr 0x15b059400 <col:17> 'long' <LValueToRValue>
    |         | | `-DeclRefExpr 0x15b059350 <col:17> 'long' lvalue Var 0x15b03f9d8 'toremove' 'long'
    |         | `-BinaryOperator 0x15b0593e0 <col:29, col:40> 'int' '=='
    |         |   |-ImplicitCastExpr 0x15b0593b0 <col:29> 'long' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x15b059370 <col:29> 'long' lvalue Var 0x15b03fa70 'removed' 'long'
    |         |   `-ImplicitCastExpr 0x15b0593c8 <col:40> 'long' <LValueToRValue>
    |         |     `-DeclRefExpr 0x15b059390 <col:40> 'long' lvalue Var 0x15b03f9d8 'toremove' 'long'
    |         `-BreakStmt 0x15b059438 <col:50>
    |-IfStmt 0x15b8f3588 <line:32:5, line:35:5>
    | |-ImplicitCastExpr 0x15b8f3000 <line:32:9> 'long' <LValueToRValue>
    | | `-DeclRefExpr 0x15b0595d8 <col:9> 'long' lvalue Var 0x15b03fa70 'removed' 'long'
    | `-CompoundStmt 0x15b8f3570 <col:18, line:35:5>
    |   `-CallExpr 0x15b8f3260 <line:33:9, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15b8f30f8 <col:9> 'int ()' Function 0x15b8f3040 'signalModifiedKey' 'int ()'
    |     |-RecoveryExpr 0x15b8f3118 <col:27> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x15b8f3158 <col:29, col:32> '<dependent type>' contains-errors lvalue ->db
    |     | `-RecoveryExpr 0x15b8f3138 <col:29> '<dependent type>' contains-errors lvalue
    |     `-ArraySubscriptExpr 0x15b8f3240 <col:35, col:44> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x15b8f3228 <col:35, col:38> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-CXXDependentScopeMemberExpr 0x15b8f31c0 <col:35, col:38> '<dependent type>' contains-errors lvalue ->argv
    |       |   `-RecoveryExpr 0x15b8f31a0 <col:35> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x15b8f3208 <col:43> 'int' 1
    |-IfStmt 0x15b8f3b08 <line:37:5, line:40:5>
    | |-RecoveryExpr 0x15b8f36c8 <line:37:9, col:36> '_Bool' contains-errors
    | `-CompoundStmt 0x15b8f3af0 <col:39, line:40:5>
    |   `-CallExpr 0x15b8f3910 <line:38:9, col:34> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15b8f37c8 <col:9> 'int ()' Function 0x15b8f3710 'dbDelete' 'int ()'
    |     |-CXXDependentScopeMemberExpr 0x15b8f3808 <col:18, col:21> '<dependent type>' contains-errors lvalue ->db
    |     | `-RecoveryExpr 0x15b8f37e8 <col:18> '<dependent type>' contains-errors lvalue
    |     `-ArraySubscriptExpr 0x15b8f38f0 <col:24, col:33> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x15b8f38d8 <col:24, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-CXXDependentScopeMemberExpr 0x15b8f3870 <col:24, col:27> '<dependent type>' contains-errors lvalue ->argv
    |       |   `-RecoveryExpr 0x15b8f3850 <col:24> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x15b8f38b8 <col:32> 'int' 1
    `-CallExpr 0x15b8f3c68 <line:42:5, col:31> '<dependent type>' contains-errors
      |-DeclRefExpr 0x15b8f3c08 <col:5> 'int ()' Function 0x15b8f3b50 'addReplyLongLong' 'int ()'
      |-RecoveryExpr 0x15b8f3c28 <col:22> '<dependent type>' contains-errors lvalue
      `-DeclRefExpr 0x15b8f3c48 <col:24> 'long' lvalue Var 0x15b03fa70 'removed' 'long'
