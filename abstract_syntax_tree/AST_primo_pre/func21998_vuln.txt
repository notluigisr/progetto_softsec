`-FunctionDecl 0x15180e018  line:1:12 invalid pkcs7_decrypt_rinfo 'int (unsigned char **, int *, int *, int *)' static
  |-ParmVarDecl 0x15180dd40 <col:32, col:48> col:48 used pek 'unsigned char **'
  |-ParmVarDecl 0x15180ddf8 <col:53, col:58> col:58 used peklen 'int *'
  |-ParmVarDecl 0x15180de90 <line:2:32, col:50> col:50 invalid ri 'int *'
  |-ParmVarDecl 0x15180df10 <col:54, col:64> col:64 invalid pkey 'int *'
  `-CompoundStmt 0x151829e58 <line:3:1, line:53:1>
    |-DeclStmt 0x15180e1c8 <line:5:5, col:29>
    | `-VarDecl 0x15180e128 <col:5, col:25> col:20 used ek 'unsigned char *' cinit
    |   `-RecoveryExpr 0x15180e1a8 <col:25> '<dependent type>' contains-errors lvalue
    |-UnaryExprOrTypeTraitExpr 0x15180e238 <line:6:5, col:12> 'unsigned long' sizeof
    | `-DeclRefExpr 0x15180e218 <col:12> 'int *' lvalue ParmVar 0x15180ddf8 'peklen' 'int *' non_odr_use_unevaluated
    |-DeclStmt 0x15180e310 <line:8:5, col:17>
    | `-VarDecl 0x15180e270 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x15180e2f8 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x15180e2d8 <col:16> 'int' 1
    |-IfStmt 0x151827620 <line:11:5, line:12:17>
    | |-UnaryOperator 0x1518275c0 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1518275a8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x151827588 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x151827610 <line:12:9, col:17>
    |   `-UnaryOperator 0x1518275f8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1518275d8 <col:17> 'int' 1
    |-IfStmt 0x151827890 <line:14:5, line:15:14>
    | |-BinaryOperator 0x151827808 <line:14:9, col:40> 'int' contains-errors '<='
    | | |-CallExpr 0x1518277e0 <col:9, col:35> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x151827720 <col:9> 'int ()' Function 0x151827668 'EVP_PKEY_decrypt_init' 'int ()'
    | | | `-RecoveryExpr 0x1518277c0 <col:31> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x151827780 <col:40> 'int' 0
    | `-GotoStmt 0x151827878 <line:15:9, col:14> 'err' 0x151827828
    |-IfStmt 0x151827dd8 <line:17:5, line:21:5>
    | |-BinaryOperator 0x151827bb0 <line:17:9, line:18:66> 'int' contains-errors '<='
    | | |-CallExpr 0x151827b60 <line:17:9, line:18:61> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x151827990 <line:17:9> 'int ()' Function 0x1518278d8 'EVP_PKEY_CTX_ctrl' 'int ()'
    | | | |-RecoveryExpr 0x151827b00 <col:27> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x1518279e8 <col:33, col:34> 'int' prefix '-'
    | | | | `-IntegerLiteral 0x1518279c8 <col:34> 'int' 1
    | | | |-RecoveryExpr 0x151827b20 <col:37> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x151827b40 <line:18:27> '<dependent type>' contains-errors lvalue
    | | | |-IntegerLiteral 0x151827a30 <col:56> 'int' 0
    | | | `-RecoveryExpr 0x151827a50 <col:59> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x151827ac0 <col:66> 'int' 0
    | `-CompoundStmt 0x151827db8 <col:69, line:21:5>
    |   |-CallExpr 0x151827d70 <line:19:9, col:65> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151827cb0 <col:9> 'int ()' Function 0x151827bf8 'PKCS7err' 'int ()'
    |   | |-RecoveryExpr 0x151827d30 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x151827d50 <col:47> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x151827da0 <line:20:9, col:14> 'err' 0x151827828
    |-IfStmt 0x1518280b0 <line:23:5, line:25:14>
    | |-RecoveryExpr 0x151828078 <line:23:9, line:24:69> '_Bool' contains-errors
    | `-GotoStmt 0x151828098 <line:25:9, col:14> 'err' 0x151827828
    |-IfStmt 0x151828280 <line:29:5, line:32:5>
    | |-RecoveryExpr 0x151828210 <line:29:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x151828268 <col:21, line:32:5>
    |   `-GotoStmt 0x151828250 <line:31:9, col:14> 'err' 0x151827828
    |-IfStmt 0x151829740 <line:34:5, line:39:5>
    | |-RecoveryExpr 0x151829668 <line:34:9, line:35:69> '_Bool' contains-errors
    | `-CompoundStmt 0x151829720 <col:72, line:39:5>
    |   |-BinaryOperator 0x1518296c8 <line:36:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x151829688 <col:9> 'int' lvalue Var 0x15180e270 'ret' 'int'
    |   | `-IntegerLiteral 0x1518296a8 <col:15> 'int' 0
    |   `-GotoStmt 0x151829708 <line:38:9, col:14> 'err' 0x151827828
    |-BinaryOperator 0x1518297a0 <line:41:5, col:11> 'int' '='
    | |-DeclRefExpr 0x151829760 <col:5> 'int' lvalue Var 0x15180e270 'ret' 'int'
    | `-IntegerLiteral 0x151829780 <col:11> 'int' 1
    |-CallExpr 0x1518299a8 <line:43:5, col:37> 'int'
    | |-ImplicitCastExpr 0x151829990 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1518298a0 <col:5> 'int ()' Function 0x1518297e8 'OPENSSL_clear_free' 'int ()'
    | |-ImplicitCastExpr 0x1518299d8 <col:24, col:25> 'unsigned char *' <LValueToRValue>
    | | `-UnaryOperator 0x1518298f8 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x1518298e0 <col:25> 'unsigned char **' <LValueToRValue>
    | |     `-DeclRefExpr 0x1518298c0 <col:25> 'unsigned char **' lvalue ParmVar 0x15180dd40 'pek' 'unsigned char **'
    | `-ImplicitCastExpr 0x1518299f0 <col:30, col:31> 'int' <LValueToRValue>
    |   `-UnaryOperator 0x151829948 <col:30, col:31> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x151829930 <col:31> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x151829910 <col:31> 'int *' lvalue ParmVar 0x15180ddf8 'peklen' 'int *'
    |-BinaryOperator 0x151829a90 <line:44:5, col:12> 'unsigned char *' contains-errors '='
    | |-UnaryOperator 0x151829a40 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x151829a28 <col:6> 'unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x151829a08 <col:6> 'unsigned char **' lvalue ParmVar 0x15180dd40 'pek' 'unsigned char **'
    | `-ImplicitCastExpr 0x151829a78 <col:12> 'unsigned char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x151829a58 <col:12> 'unsigned char *' contains-errors lvalue Var 0x15180e128 'ek' 'unsigned char *'
    |-LabelStmt 0x151829c08 <line:47:2, col:5> 'err'
    | `-NullStmt 0x151829c00 <col:5>
    |-IfStmt 0x151829df0 <line:49:5, line:50:24>
    | |-UnaryOperator 0x151829c60 <line:49:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x151829c48 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x151829c28 <col:10> 'int' lvalue Var 0x15180e270 'ret' 'int'
    | `-CallExpr 0x151829db0 <line:50:9, col:24> 'int' contains-errors
    |   |-ImplicitCastExpr 0x151829d98 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x151829d58 <col:9> 'int ()' Function 0x151829ca0 'OPENSSL_free' 'int ()'
    |   `-ImplicitCastExpr 0x151829dd8 <col:22> 'unsigned char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x151829d78 <col:22> 'unsigned char *' contains-errors lvalue Var 0x15180e128 'ek' 'unsigned char *'
    `-ReturnStmt 0x151829e48 <line:52:5, col:12>
      `-ImplicitCastExpr 0x151829e30 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x151829e10 <col:12> 'int' lvalue Var 0x15180e270 'ret' 'int'
