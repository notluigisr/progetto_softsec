`-FunctionDecl 0x12a928750  line:1:13 ax25_kill_by_device 'void (struct net_device *)' static
  |-ParmVarDecl 0x12a928648 <col:33, col:52> col:52 used dev 'struct net_device *'
  `-CompoundStmt 0x12a943768 <line:2:1, line:39:1>
    |-DeclStmt 0x12a940c78 <line:5:2, col:17>
    | |-RecordDecl 0x12a940a90 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12a940bf8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-IfStmt 0x12a940ef0 <line:7:2, line:8:3>
    | |-RecoveryExpr 0x12a940ec0 <line:7:6, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x12a940ee0 <line:8:3>
    |-CallExpr 0x12a9410a0 <line:10:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a940ff0 <col:2> 'int ()' Function 0x12a940f38 'spin_lock_bh' 'int ()'
    | `-UnaryOperator 0x12a941088 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12a941068 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x12a941318 <line:11:1, line:12:29> 'again'
    | `-CallExpr 0x12a941298 <col:2, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12a9411a8 <col:2> 'int ()' Function 0x12a9410f0 'ax25_for_each' 'int ()'
    |   |-RecoveryExpr 0x12a941240 <col:16> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x12a941280 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12a941260 <col:20> '<dependent type>' contains-errors lvalue
    `-CompoundStmt 0x12a943730 <col:31, line:37:2>
      `-IfStmt 0x12a943710 <line:13:3, line:36:3>
        |-BinaryOperator 0x12a941458 <line:13:7, col:22> 'int' contains-errors '=='
        | |-CXXDependentScopeMemberExpr 0x12a9413f0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ax25_dev
        | | `-RecoveryExpr 0x12a9413d0 <col:7> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x12a941438 <col:22> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x12a9436c0 <col:32, line:36:3>
          |-BinaryOperator 0x12a941580 <line:14:4, col:12> 'struct sock *' contains-errors '='
          | |-DeclRefExpr 0x12a941478 <col:4> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          | `-CXXDependentScopeMemberExpr 0x12a941538 <col:9, col:12> '<dependent type>' contains-errors lvalue ->sk
          |   `-RecoveryExpr 0x12a941518 <col:9> '<dependent type>' contains-errors lvalue
          |-IfStmt 0x12a941918 <line:15:4, line:21:4>
          | |-UnaryOperator 0x12a9415d8 <line:15:8, col:9> 'int' prefix '!' cannot overflow
          | | `-ImplicitCastExpr 0x12a9415c0 <col:9> 'struct sock *' <LValueToRValue>
          | |   `-DeclRefExpr 0x12a9415a0 <col:9> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          | `-CompoundStmt 0x12a9418f8 <col:13, line:21:4>
          |   |-CallExpr 0x12a941780 <line:16:5, col:35> '<dependent type>' contains-errors
          |   | |-DeclRefExpr 0x12a9416d0 <col:5> 'int ()' Function 0x12a941618 'spin_unlock_bh' 'int ()'
          |   | `-UnaryOperator 0x12a941768 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
          |   |   `-RecoveryExpr 0x12a941748 <col:21> '<dependent type>' contains-errors lvalue
          |   `-GotoStmt 0x12a9418e0 <line:20:5, col:10> 'again' 0x12a9412c8
          |-CallExpr 0x12a942f10 <line:22:4, col:16> 'int'
          | |-ImplicitCastExpr 0x12a942ef8 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x12a942eb8 <col:4> 'int ()' Function 0x12a942e00 'sock_hold' 'int ()'
          | `-ImplicitCastExpr 0x12a942f38 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x12a942ed8 <col:14> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          |-CallExpr 0x12a9430a8 <line:24:4, col:16> 'int'
          | |-ImplicitCastExpr 0x12a943090 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x12a943050 <col:4> 'int ()' Function 0x12a942f98 'lock_sock' 'int ()'
          | `-ImplicitCastExpr 0x12a9430d0 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x12a943070 <col:14> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          |-IfStmt 0x12a943358 <line:26:4, line:29:4>
          | |-RecoveryExpr 0x12a943120 <line:26:8, col:12> '<dependent type>' contains-errors lvalue
          | | `-DeclRefExpr 0x12a9430e8 <col:8> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          | `-CompoundStmt 0x12a943348 <col:23, line:29:4>
          |-CallExpr 0x12a9434d0 <line:31:4, col:19> 'int'
          | |-ImplicitCastExpr 0x12a9434b8 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x12a943478 <col:4> 'int ()' Function 0x12a9433c0 'release_sock' 'int ()'
          | `-ImplicitCastExpr 0x12a9434f8 <col:17> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x12a943498 <col:17> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          |-CallExpr 0x12a943668 <line:33:4, col:15> 'int'
          | |-ImplicitCastExpr 0x12a943650 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x12a943610 <col:4> 'int ()' Function 0x12a943558 'sock_put' 'int ()'
          | `-ImplicitCastExpr 0x12a943690 <col:13> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x12a943630 <col:13> 'struct sock *' lvalue Var 0x12a940bf8 'sk' 'struct sock *'
          `-GotoStmt 0x12a9436a8 <line:35:4, col:9> 'again' 0x12a9412c8
