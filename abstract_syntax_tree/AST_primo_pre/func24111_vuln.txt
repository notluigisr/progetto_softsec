`-FunctionDecl 0x1519281a8  line:1:13 string_of_NPNVariable 'const char *(int)'
  |-ParmVarDecl 0x1519280d8 <col:35, col:39> col:39 used variable 'int'
  `-CompoundStmt 0x151942448 <line:2:1, line:38:1>
    |-DeclStmt 0x151928320 <line:3:3, col:18>
    | `-VarDecl 0x1519282b8 <col:3, col:15> col:15 used str 'const char *'
    |-SwitchStmt 0x151928370 <line:5:3, line:35:3>
    | |-ImplicitCastExpr 0x151928358 <line:5:11> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x151928338 <col:11> 'int' lvalue ParmVar 0x1519280d8 'variable' 'int'
    | `-CompoundStmt 0x151942370 <col:21, line:35:3>
    |   |-CallExpr 0x151928540 <line:7:2, col:16> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1519284c0 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151928520 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1519285e8 <line:8:2, col:20> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151928568 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x1519285c8 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151928690 <line:9:2, col:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151928610 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151928670 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151928738 <line:10:2, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1519286b8 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151928718 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941800 <line:11:2, col:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151928760 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x1519287c0 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1519418a8 <line:12:2, col:21> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941828 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941888 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941950 <line:13:2, col:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1519418d0 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941930 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x1519419f8 <line:14:2, col:18> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941978 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x1519419d8 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941aa0 <line:15:2, col:17> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941a20 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941a80 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941b48 <line:16:2, col:15> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941ac8 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941b28 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941bf0 <line:17:2, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941b70 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941bd0 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941c98 <line:18:2, col:22> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941c18 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941c78 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941d40 <line:19:2, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941cc0 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941d20 <col:4> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x151941de8 <line:20:2, col:26> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x151941d68 <col:2> 'int ()' Function 0x151928408 '_' 'int ()'
    |   | `-RecoveryExpr 0x151941dc8 <col:4> '<dependent type>' contains-errors lvalue
    |   |-DefaultStmt 0x151942348 <line:22:3, line:33:2>
    |   | `-SwitchStmt 0x151941e88 <line:23:2, line:33:2>
    |   |   |-BinaryOperator 0x151941e68 <line:23:10, col:21> 'int' '&'
    |   |   | |-ImplicitCastExpr 0x151941e50 <col:10> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x151941e10 <col:10> 'int' lvalue ParmVar 0x1519280d8 'variable' 'int'
    |   |   | `-IntegerLiteral 0x151941e30 <col:21> 'int' 255
    |   |   `-CompoundStmt 0x151942308 <col:27, line:33:2>
    |   |     |-CallExpr 0x151941f58 <line:25:4, col:28> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x151941eb0 <col:4> 'int ()' Function 0x151928408 '_' 'int ()'
    |   |     | |-IntegerLiteral 0x151941ed0 <col:6> 'int' 10
    |   |     | `-RecoveryExpr 0x151941f38 <col:10> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x151942030 <line:26:4, col:24> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x151941f88 <col:4> 'int ()' Function 0x151928408 '_' 'int ()'
    |   |     | |-IntegerLiteral 0x151941fa8 <col:6> 'int' 11
    |   |     | `-RecoveryExpr 0x151942010 <col:10> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x151942108 <line:27:4, col:23> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x151942060 <col:4> 'int ()' Function 0x151928408 '_' 'int ()'
    |   |     | |-IntegerLiteral 0x151942080 <col:6> 'int' 12
    |   |     | `-RecoveryExpr 0x1519420e8 <col:10> '<dependent type>' contains-errors lvalue
    |   |     |-CallExpr 0x1519421e0 <line:28:4, col:21> '<dependent type>' contains-errors
    |   |     | |-DeclRefExpr 0x151942138 <col:4> 'int ()' Function 0x151928408 '_' 'int ()'
    |   |     | |-IntegerLiteral 0x151942158 <col:6> 'int' 13
    |   |     | `-RecoveryExpr 0x1519421c0 <col:10> '<dependent type>' contains-errors lvalue
    |   |     |-DefaultStmt 0x1519422e0 <line:30:2, line:31:10>
    |   |     | `-BinaryOperator 0x1519422c0 <col:4, col:10> 'const char *' '='
    |   |     |   |-DeclRefExpr 0x151942210 <col:4> 'const char *' lvalue Var 0x1519282b8 'str' 'const char *'
    |   |     |   `-ImplicitCastExpr 0x1519422a8 <col:10> 'const char *' <NoOp>
    |   |     |     `-ImplicitCastExpr 0x151942290 <col:10> 'char *' <ArrayToPointerDecay>
    |   |     |       `-StringLiteral 0x151942270 <col:10> 'char[4]' lvalue "STR"
    |   |     `-BreakStmt 0x151942300 <line:32:4>
    |   `-BreakStmt 0x151942368 <line:34:2>
    `-ReturnStmt 0x151942438 <line:37:3, col:10>
      `-ImplicitCastExpr 0x151942420 <col:10> 'const char *' <LValueToRValue>
        `-DeclRefExpr 0x151942400 <col:10> 'const char *' lvalue Var 0x1519282b8 'str' 'const char *'
