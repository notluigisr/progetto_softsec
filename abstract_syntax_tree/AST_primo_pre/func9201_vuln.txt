`-FunctionDecl 0x1501294a8  line:1:16 invalid rbd_image_refresh 'int (struct device *, struct device_attribute *, const char *, int)' static
  |-ParmVarDecl 0x150110068 <col:34, col:49> col:49 used dev 'struct device *'
  |-ParmVarDecl 0x150129258 <line:2:6, col:31> col:31 attr 'struct device_attribute *'
  |-ParmVarDecl 0x1501292d8 <line:3:6, col:18> col:18 buf 'const char *'
  |-ParmVarDecl 0x150129358 <line:4:6, col:13> col:13 invalid size 'int'
  `-CompoundStmt 0x150129cd0 <line:5:1, line:14:1>
    |-DeclStmt 0x150129998 <line:6:2, col:50>
    | |-RecordDecl 0x150129570 <col:2, col:9> col:9 struct rbd_device
    | `-VarDecl 0x1501296d8 <col:2, col:49> col:21 used rbd_dev 'struct rbd_device *' cinit
    |   `-ImplicitCastExpr 0x150129968 <col:31, col:49> 'struct rbd_device *' <IntegralToPointer>
    |     `-CallExpr 0x150129928 <col:31, col:49> 'int'
    |       |-ImplicitCastExpr 0x150129910 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1501298a0 <col:31> 'int ()' Function 0x1501297e8 'dev_to_rbd_dev' 'int ()'
    |       `-ImplicitCastExpr 0x150129950 <col:46> 'struct device *' <LValueToRValue>
    |         `-DeclRefExpr 0x1501298c0 <col:46> 'struct device *' lvalue ParmVar 0x150110068 'dev' 'struct device *'
    |-DeclStmt 0x150129a30 <line:7:2, col:9>
    | `-VarDecl 0x1501299c8 <col:2, col:6> col:6 used ret 'int'
    |-BinaryOperator 0x150129be0 <line:9:2, col:31> 'int' '='
    | |-DeclRefExpr 0x150129a48 <col:2> 'int' lvalue Var 0x1501299c8 'ret' 'int'
    | `-CallExpr 0x150129ba0 <col:8, col:31> 'int'
    |   |-ImplicitCastExpr 0x150129b88 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x150129b48 <col:8> 'int ()' Function 0x150129a90 'rbd_dev_refresh' 'int ()'
    |   `-ImplicitCastExpr 0x150129bc8 <col:24> 'struct rbd_device *' <LValueToRValue>
    |     `-DeclRefExpr 0x150129b68 <col:24> 'struct rbd_device *' lvalue Var 0x1501296d8 'rbd_dev' 'struct rbd_device *'
    |-IfStmt 0x150129c80 <line:10:2, line:11:10>
    | |-ImplicitCastExpr 0x150129c20 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x150129c00 <col:6> 'int' lvalue Var 0x1501299c8 'ret' 'int'
    | `-ReturnStmt 0x150129c70 <line:11:3, col:10>
    |   `-ImplicitCastExpr 0x150129c58 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x150129c38 <col:10> 'int' lvalue Var 0x1501299c8 'ret' 'int'
    `-ReturnStmt 0x150129cc0 <line:13:2, col:9>
      `-RecoveryExpr 0x150129ca0 <col:9> '<dependent type>' contains-errors lvalue
