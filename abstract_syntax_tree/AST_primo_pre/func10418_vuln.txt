`-FunctionDecl 0x123926d58  line:1:1 nbd_unlocked_opt_info 'int (struct nbd_handle *)'
  |-ParmVarDecl 0x123926c48 <col:24, col:43> col:43 used h 'struct nbd_handle *'
  `-CompoundStmt 0x12400c830 <line:2:1, line:17:1>
    |-DeclStmt 0x12400bad0 <line:3:3, col:10>
    | `-VarDecl 0x12400ba68 <col:3, col:7> col:7 used err 'int'
    |-DeclStmt 0x12400bd98 <line:5:3, col:44>
    | `-VarDecl 0x12400bb18 <col:3, col:43> col:7 used r 'int' cinit
    |   `-CallExpr 0x12400bd68 <col:11, col:43> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12400bc90 <col:11> 'int ()' Function 0x12400bbd8 'nbd_unlocked_aio_opt_info' 'int ()'
    |     |-DeclRefExpr 0x12400bcb0 <col:38> 'struct nbd_handle *' lvalue ParmVar 0x123926c48 'h' 'struct nbd_handle *'
    |     `-UnaryOperator 0x12400bd50 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12400bd30 <col:42> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12400be88 <line:7:3, line:8:12>
    | |-BinaryOperator 0x12400be20 <line:7:7, col:13> 'int' contains-errors '=='
    | | |-ImplicitCastExpr 0x12400be08 <col:7> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x12400bdb0 <col:7> 'int' contains-errors lvalue Var 0x12400bb18 'r' 'int'
    | | `-UnaryOperator 0x12400bdf0 <col:12, col:13> 'int' prefix '-'
    | |   `-IntegerLiteral 0x12400bdd0 <col:13> 'int' 1
    | `-ReturnStmt 0x12400be78 <line:8:5, col:12>
    |   `-ImplicitCastExpr 0x12400be60 <col:12> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12400be40 <col:12> 'int' contains-errors lvalue Var 0x12400bb18 'r' 'int'
    |-BinaryOperator 0x12400c078 <line:10:3, col:25> 'int' contains-errors '='
    | |-DeclRefExpr 0x12400bea8 <col:3> 'int' contains-errors lvalue Var 0x12400bb18 'r' 'int'
    | `-CallExpr 0x12400c038 <col:7, col:25> 'int'
    |   |-ImplicitCastExpr 0x12400c020 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12400bfa8 <col:7> 'int ()' Function 0x12400bef0 'wait_for_option' 'int ()'
    |   `-ImplicitCastExpr 0x12400c060 <col:24> 'struct nbd_handle *' <LValueToRValue>
    |     `-DeclRefExpr 0x12400bfc8 <col:24> 'struct nbd_handle *' lvalue ParmVar 0x123926c48 'h' 'struct nbd_handle *'
    |-IfStmt 0x12400c7c8 <line:11:3, line:15:3>
    | |-BinaryOperator 0x12400c148 <line:11:7, col:17> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12400c0f0 <col:7, col:12> 'int' contains-errors '=='
    | | | |-ImplicitCastExpr 0x12400c0d8 <col:7> 'int' contains-errors <LValueToRValue>
    | | | | `-DeclRefExpr 0x12400c098 <col:7> 'int' contains-errors lvalue Var 0x12400bb18 'r' 'int'
    | | | `-IntegerLiteral 0x12400c0b8 <col:12> 'int' 0
    | | `-ImplicitCastExpr 0x12400c130 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12400c110 <col:17> 'int' lvalue Var 0x12400ba68 'err' 'int'
    | `-CompoundStmt 0x12400c7a0 <col:22, line:15:3>
    |   |-CallExpr 0x12400c538 <line:12:5, col:67> 'int'
    |   | |-ImplicitCastExpr 0x12400c520 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12400c248 <col:5> 'int ()' Function 0x12400c190 'assert' 'int ()'
    |   | `-CallExpr 0x12400c4f8 <col:13, col:66> 'int'
    |   |   |-ImplicitCastExpr 0x12400c4e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12400c348 <col:13> 'int ()' Function 0x12400c290 'nbd_internal_is_state_negotiating' 'int ()'
    |   |   `-CallExpr 0x12400c4a0 <col:48, col:65> 'int'
    |   |     |-ImplicitCastExpr 0x12400c488 <col:48> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12400c448 <col:48> 'int ()' Function 0x12400c390 'get_next_state' 'int ()'
    |   |     `-ImplicitCastExpr 0x12400c4c8 <col:64> 'struct nbd_handle *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12400c468 <col:64> 'struct nbd_handle *' lvalue ParmVar 0x123926c48 'h' 'struct nbd_handle *'
    |   |-CallExpr 0x12400c6f8 <line:13:5, col:26> 'int'
    |   | |-ImplicitCastExpr 0x12400c6e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12400c640 <col:5> 'int ()' Function 0x12400c588 'set_error' 'int ()'
    |   | |-ImplicitCastExpr 0x12400c728 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12400c660 <col:16> 'int' lvalue Var 0x12400ba68 'err' 'int'
    |   | `-ImplicitCastExpr 0x12400c740 <col:21> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x12400c6c0 <col:21> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12400c790 <line:14:5, col:13>
    |     `-UnaryOperator 0x12400c778 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x12400c758 <col:13> 'int' 1
    `-ReturnStmt 0x12400c820 <line:16:3, col:10>
      `-ImplicitCastExpr 0x12400c808 <col:10> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12400c7e8 <col:10> 'int' contains-errors lvalue Var 0x12400bb18 'r' 'int'
