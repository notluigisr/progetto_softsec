`-FunctionDecl 0x1318274d8  line:1:12 invalid i40e_queue_pair_toggle_rings 'int (struct i40e_vsi *, int, int)' static
  |-ParmVarDecl 0x13180e248 <col:41, col:58> col:58 used vsi 'struct i40e_vsi *'
  |-ParmVarDecl 0x13180e2c8 <col:63, col:67> col:67 used queue_pair 'int'
  |-ParmVarDecl 0x13180e360 <line:2:6, col:11> col:11 invalid enable 'int'
  `-CompoundStmt 0x13182ae58 <line:3:1, line:43:1>
    |-DeclStmt 0x1318277e8 <line:4:2, col:32>
    | |-RecordDecl 0x131827598 <col:2, col:9> col:9 struct i40e_pf
    | `-VarDecl 0x131827708 <col:2, col:28> col:18 used pf 'struct i40e_pf *' cinit
    |   `-RecoveryExpr 0x1318277a8 <col:23, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x131827770 <col:23> 'struct i40e_vsi *' lvalue ParmVar 0x13180e248 'vsi' 'struct i40e_vsi *'
    |-DeclStmt 0x131827938 <line:5:2, col:19>
    | |-VarDecl 0x131827818 <col:2, col:6> col:6 used pf_q 'int'
    | `-VarDecl 0x131827898 <col:2, col:18> col:12 used ret 'int' cinit
    |   `-IntegerLiteral 0x131827900 <col:18> 'int' 0
    |-BinaryOperator 0x131827a10 <line:7:2, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x131827950 <col:2> 'int' lvalue Var 0x131827818 'pf_q' 'int'
    | `-BinaryOperator 0x1318279f0 <col:9, col:27> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x1318279a8 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x131827970 <col:9> 'struct i40e_vsi *' lvalue ParmVar 0x13180e248 'vsi' 'struct i40e_vsi *'
    |   `-DeclRefExpr 0x1318279d0 <col:27> 'int' lvalue ParmVar 0x13180e2c8 'queue_pair' 'int'
    |-IfStmt 0x131828020 <line:10:2, line:15:2>
    | |-ImplicitCastExpr 0x131827cc8 <line:10:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x131827ca8 <col:6> 'int' lvalue Var 0x131827898 'ret' 'int'
    | `-CompoundStmt 0x131828008 <col:11, line:15:2>
    |   `-ReturnStmt 0x131827ff8 <line:14:3, col:10>
    |     `-ImplicitCastExpr 0x131827fe0 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x131827fc0 <col:10> 'int' lvalue Var 0x131827898 'ret' 'int'
    |-CallExpr 0x1318281a0 <line:17:2, col:36> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x131828120 <col:2> 'int ()' Function 0x131828068 'i40e_control_rx_q' 'int ()'
    | |-DeclRefExpr 0x131828140 <col:20> 'struct i40e_pf *' contains-errors lvalue Var 0x131827708 'pf' 'struct i40e_pf *'
    | |-DeclRefExpr 0x131828160 <col:24> 'int' lvalue Var 0x131827818 'pf_q' 'int'
    | `-RecoveryExpr 0x131828180 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x131828390 <line:18:2, col:41> 'int' contains-errors '='
    | |-DeclRefExpr 0x1318281d8 <col:2> 'int' lvalue Var 0x131827898 'ret' 'int'
    | `-CallExpr 0x131828358 <col:8, col:41> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1318282d8 <col:8> 'int ()' Function 0x131828220 'i40e_pf_rxq_wait' 'int ()'
    |   |-DeclRefExpr 0x1318282f8 <col:25> 'struct i40e_pf *' contains-errors lvalue Var 0x131827708 'pf' 'struct i40e_pf *'
    |   |-DeclRefExpr 0x131828318 <col:29> 'int' lvalue Var 0x131827818 'pf_q' 'int'
    |   `-RecoveryExpr 0x131828338 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13182a620 <line:19:2, line:24:2>
    | |-ImplicitCastExpr 0x1318283d0 <line:19:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1318283b0 <col:6> 'int' lvalue Var 0x131827898 'ret' 'int'
    | `-CompoundStmt 0x13182a608 <col:11, line:24:2>
    |   `-ReturnStmt 0x13182a5f8 <line:23:3, col:10>
    |     `-ImplicitCastExpr 0x13182a5e0 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13182a5c0 <col:10> 'int' lvalue Var 0x131827898 'ret' 'int'
    |-IfStmt 0x13182a850 <line:27:2, line:28:12>
    | |-UnaryOperator 0x13182a6a8 <line:27:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13182a690 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x13182a640 <col:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13182a828 <line:28:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x13182a810 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13182a7a0 <col:3> 'int ()' Function 0x13182a6e8 'mdelay' 'int ()'
    |   `-IntegerLiteral 0x13182a7c0 <col:10> 'int' 50
    |-IfStmt 0x13182aa48 <line:30:2, line:31:10>
    | |-UnaryOperator 0x13182a9e8 <line:30:6, col:31> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x13182a9a8 <col:7, col:31> 'int'
    | |   |-ImplicitCastExpr 0x13182a990 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13182a950 <col:7> 'int ()' Function 0x13182a898 'i40e_enabled_xdp_vsi' 'int ()'
    | |   `-ImplicitCastExpr 0x13182a9d0 <col:28> 'struct i40e_vsi *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13182a970 <col:28> 'struct i40e_vsi *' lvalue ParmVar 0x13180e248 'vsi' 'struct i40e_vsi *'
    | `-ReturnStmt 0x13182aa38 <line:31:3, col:10>
    |   `-ImplicitCastExpr 0x13182aa20 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13182aa00 <col:10> 'int' lvalue Var 0x131827898 'ret' 'int'
    |-IfStmt 0x13182adf0 <line:36:2, line:40:2>
    | |-ImplicitCastExpr 0x13182ac08 <line:36:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13182abe8 <col:6> 'int' lvalue Var 0x131827898 'ret' 'int'
    | `-CompoundStmt 0x13182ade0 <col:11, line:40:2>
    `-ReturnStmt 0x13182ae48 <line:42:2, col:9>
      `-ImplicitCastExpr 0x13182ae30 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13182ae10 <col:9> 'int' lvalue Var 0x131827898 'ret' 'int'
