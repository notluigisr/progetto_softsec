`-FunctionDecl 0x14e128288  line:1:1 invalid getRuleCharsText 'int (int *, int *)'
  |-ParmVarDecl 0x14e128128 <col:18, col:28> col:28 invalid file 'int *'
  |-ParmVarDecl 0x14e1281a8 <col:34, col:47> col:47 invalid ruleChars 'int *'
  `-CompoundStmt 0x14e8092d0 <col:58, line:5:1>
    |-IfStmt 0x14e128678 <line:3:2, col:45>
    | |-UnaryOperator 0x14e128630 <col:6, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x14e1285f8 <col:7, col:35> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14e1284a0 <col:7> 'int ()' Function 0x14e1283e8 'getToken' 'int ()'
    | |   |-RecoveryExpr 0x14e1284c0 <col:16> '<dependent type>' contains-errors lvalue
    | |   |-UnaryOperator 0x14e1285e0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x14e1285c0 <col:23> '<dependent type>' contains-errors lvalue
    | |   `-StringLiteral 0x14e128550 <col:30> 'char[4]' lvalue "STR"
    | `-ReturnStmt 0x14e128668 <col:38, col:45>
    |   `-IntegerLiteral 0x14e128648 <col:45> 'int' 0
    `-ReturnStmt 0x14e8092c0 <line:4:2, col:43>
      `-CallExpr 0x14e809288 <col:9, col:43> '<dependent type>' contains-errors
        |-DeclRefExpr 0x14e128778 <col:9> 'int ()' Function 0x14e1286c0 'parseChars' 'int ()'
        |-RecoveryExpr 0x14e128798 <col:20> '<dependent type>' contains-errors lvalue
        |-RecoveryExpr 0x14e1287b8 <col:26> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x14e809270 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x14e809250 <col:38> '<dependent type>' contains-errors lvalue
