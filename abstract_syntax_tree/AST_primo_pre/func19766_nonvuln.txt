`-FunctionDecl 0x14000dd98  line:1:12 test_expmodzero 'int (void)' static
  `-CompoundStmt 0x14002dac8 <line:2:1, line:32:1>
    |-DeclStmt 0x14000e070 <line:4:5, col:15>
    | `-VarDecl 0x14000dfe8 <col:5, col:14> col:9 used st 'int' cinit
    |   `-IntegerLiteral 0x14000e050 <col:14> 'int' 0
    |-IfStmt 0x140028298 <line:6:5, line:9:14>
    | |-BinaryOperator 0x140028210 <line:6:9, line:8:38> 'int' contains-errors '||'
    | | |-BinaryOperator 0x140028138 <line:6:9, line:7:38> 'int' contains-errors '||'
    | | | |-UnaryOperator 0x140028068 <line:6:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-CallExpr 0x140028040 <col:10, col:34> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x14000e1a0 <col:10> 'int ()' Function 0x14000e0e8 'TEST_ptr' 'int ()'
    | | | |   `-BinaryOperator 0x140028020 <col:19, col:33> '<dependent type>' contains-errors '='
    | | | |     |-RecoveryExpr 0x140027fc8 <col:19> '<dependent type>' contains-errors lvalue
    | | | |     `-CallExpr 0x140028000 <col:26, col:33> 'int'
    | | | |       `-ImplicitCastExpr 0x140027fe8 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | | | |         `-DeclRefExpr 0x14000e2b8 <col:26> 'int ()' Function 0x14000e200 'BN_new' 'int ()'
    | | | `-UnaryOperator 0x140028120 <line:7:16, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | |   `-CallExpr 0x1400280f8 <col:17, col:38> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x14000e3a8 <col:17> 'int ()' Function 0x14000e0e8 'TEST_ptr' 'int ()'
    | | |     `-BinaryOperator 0x1400280d8 <col:26, col:37> '<dependent type>' contains-errors '='
    | | |       |-RecoveryExpr 0x140028080 <col:26> '<dependent type>' contains-errors lvalue
    | | |       `-CallExpr 0x1400280b8 <col:30, col:37> 'int'
    | | |         `-ImplicitCastExpr 0x1400280a0 <col:30> 'int (*)()' <FunctionToPointerDecay>
    | | |           `-DeclRefExpr 0x14000e3e0 <col:30> 'int ()' Function 0x14000e200 'BN_new' 'int ()'
    | | `-UnaryOperator 0x1400281f8 <line:8:16, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-CallExpr 0x1400281d0 <col:17, col:38> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x140027eb8 <col:17> 'int ()' Function 0x14000e0e8 'TEST_ptr' 'int ()'
    | |     `-BinaryOperator 0x1400281b0 <col:26, col:37> '<dependent type>' contains-errors '='
    | |       |-RecoveryExpr 0x140028158 <col:26> '<dependent type>' contains-errors lvalue
    | |       `-CallExpr 0x140028190 <col:30, col:37> 'int'
    | |         `-ImplicitCastExpr 0x140028178 <col:30> 'int (*)()' <FunctionToPointerDecay>
    | |           `-DeclRefExpr 0x140027ef0 <col:30> 'int ()' Function 0x14000e200 'BN_new' 'int ()'
    | `-GotoStmt 0x140028280 <line:9:9, col:14> 'err' 0x140028230
    |-CallExpr 0x140028418 <line:10:5, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x140028398 <col:5> 'int ()' Function 0x1400282e0 'BN_zero' 'int ()'
    | `-RecoveryExpr 0x1400283f8 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14002d898 <line:12:5, line:24:14>
    | |-RecoveryExpr 0x14002d860 <line:12:9, line:23:34> '_Bool' contains-errors
    | `-GotoStmt 0x14002d880 <line:24:9, col:14> 'err' 0x140028230
    |-BinaryOperator 0x14002d8f8 <line:26:5, col:10> 'int' '='
    | |-DeclRefExpr 0x14002d8b8 <col:5> 'int' lvalue Var 0x14000dfe8 'st' 'int'
    | `-IntegerLiteral 0x14002d8d8 <col:10> 'int' 1
    |-LabelStmt 0x14002da20 <line:27:2, col:5> 'err'
    | `-NullStmt 0x14002da18 <col:5>
    `-ReturnStmt 0x14002dab8 <line:31:5, col:12>
      `-ImplicitCastExpr 0x14002daa0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14002da80 <col:12> 'int' lvalue Var 0x14000dfe8 'st' 'int'
