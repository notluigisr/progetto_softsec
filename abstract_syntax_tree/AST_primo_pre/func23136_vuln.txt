`-FunctionDecl 0x12f1281a8  line:1:1 plperl_validator 'int (int)'
  |-ParmVarDecl 0x12f1280d8 <col:18> col:18 PG_FUNCTION_ARGS 'int'
  `-CompoundStmt 0x13880a9f8 <line:2:1, line:64:1>
    |-DeclStmt 0x12f128330 <line:6:2, col:19>
    | `-VarDecl 0x12f1282c8 <col:2, col:8> col:8 used functyptype 'char'
    |-DeclStmt 0x12f1283c8 <line:7:2, col:15>
    | `-VarDecl 0x12f128360 <col:2, col:8> col:8 used numargs 'int'
    |-DeclStmt 0x12f1284b0 <line:9:2, col:19>
    | `-VarDecl 0x12f128448 <col:2, col:11> col:11 used argnames 'char **'
    |-DeclStmt 0x12f128548 <line:10:2, col:19>
    | `-VarDecl 0x12f1284e0 <col:2, col:11> col:11 used argmodes 'char *'
    |-DeclStmt 0x12f1285e0 <line:13:2, col:9>
    | `-VarDecl 0x12f128578 <col:2, col:8> col:8 used i 'int'
    |-IfStmt 0x138809348 <line:17:2, line:18:29>
    | |-UnaryOperator 0x1388090e8 <line:17:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x1388090c0 <col:7, col:29> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x138809028 <col:7> 'int ()' Function 0x138808f70 'HeapTupleIsValid' 'int ()'
    | |   `-RecoveryExpr 0x1388090a0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x138809310 <line:18:3, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1388091e0 <col:3> 'int ()' Function 0x138809128 'elog' 'int ()'
    |   |-RecoveryExpr 0x1388092d0 <col:8> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x138809260 <col:15> 'char[4]' lvalue "STR"
    |   `-RecoveryExpr 0x1388092f0 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x138809978 <line:25:2, line:39:2>
    | |-RecoveryExpr 0x1388094a8 <line:25:6, col:21> '_Bool' contains-errors
    | `-CompoundStmt 0x138809968 <line:26:2, line:39:2>
    |-ForStmt 0x13880a600 <line:44:2, line:52:2>
    | |-BinaryOperator 0x138809ba0 <line:44:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x138809b60 <col:7> 'int' lvalue Var 0x12f128578 'i' 'int'
    | | `-IntegerLiteral 0x138809b80 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x138809c30 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x138809c00 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x138809bc0 <col:14> 'int' lvalue Var 0x12f128578 'i' 'int'
    | | `-ImplicitCastExpr 0x138809c18 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x138809be0 <col:18> 'int' lvalue Var 0x12f128360 'numargs' 'int'
    | |-UnaryOperator 0x138809c70 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x138809c50 <col:27> 'int' lvalue Var 0x12f128578 'i' 'int'
    | `-CompoundStmt 0x138809dc8 <line:45:2, line:52:2>
    |-IfStmt 0x13880a868 <line:57:2, line:60:2>
    | |-RecoveryExpr 0x13880a738 <line:57:6> '_Bool' contains-errors
    | `-CompoundStmt 0x13880a858 <line:58:2, line:60:2>
    `-CallExpr 0x13880a9d8 <line:63:2, col:17> 'int'
      `-ImplicitCastExpr 0x13880a9c0 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x13880a968 <col:2> 'int ()' Function 0x13880a8b0 'PG_RETURN_VOID' 'int ()'
