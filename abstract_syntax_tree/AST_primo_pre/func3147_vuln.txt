`-FunctionDecl 0x14a1281a0  line:1:13 sapi_run_header_callback 'void (int)' static
  |-ParmVarDecl 0x14a1280d8 <col:38> col:38 TSRMLS_D 'int'
  `-CompoundStmt 0x14a809f60 <line:2:1, line:29:1>
    |-DeclStmt 0x14a128318 <line:3:2, col:13>
    | `-VarDecl 0x14a1282b0 <col:2, col:8> col:8 used error 'int'
    |-DeclStmt 0x14a128400 <line:5:2, col:28>
    | `-VarDecl 0x14a128360 <col:2, col:24> col:8 used callback_name 'char *' cinit
    |   `-RecoveryExpr 0x14a1283e0 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14a1284d0 <line:6:2, col:29>
    | `-VarDecl 0x14a128430 <col:2, col:25> col:8 used callback_error 'char *' cinit
    |   `-RecoveryExpr 0x14a1284b0 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14a809c40 <line:9:2, line:21:2> has_else
    | |-RecoveryExpr 0x14a8095c0 <line:9:6, col:117> '_Bool' contains-errors
    | |-CompoundStmt 0x14a809a88 <col:126, line:18:2>
    | | `-IfStmt 0x14a809a58 <line:13:3, line:17:3> has_else
    | |   |-BinaryOperator 0x14a809850 <line:13:7, col:16> 'int' contains-errors '=='
    | |   | |-DeclRefExpr 0x14a8097d8 <col:7> 'int' lvalue Var 0x14a1282b0 'error' 'int'
    | |   | `-RecoveryExpr 0x14a809830 <col:16> '<dependent type>' contains-errors lvalue
    | |   |-CompoundStmt 0x14a8098d8 <col:25, line:15:3>
    | |   | `-GotoStmt 0x14a8098c0 <line:14:4, col:9> 'callback_failed' 0x14a809870
    | |   `-IfStmt 0x14a809a38 <line:15:10, line:17:3>
    | |     |-RecoveryExpr 0x14a809908 <line:15:14> '<dependent type>' contains-errors lvalue
    | |     `-CompoundStmt 0x14a809a28 <col:26, line:17:3>
    | `-CompoundStmt 0x14a809c28 <line:18:9, line:21:2>
    |   `-LabelStmt 0x14a809c08 <line:19:1, col:16> 'callback_failed'
    |     `-NullStmt 0x14a809c00 <col:16>
    |-IfStmt 0x14a809e38 <line:23:2, line:25:2>
    | |-ImplicitCastExpr 0x14a809c90 <line:23:6> 'char *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x14a809c70 <col:6> 'char *' contains-errors lvalue Var 0x14a128360 'callback_name' 'char *'
    | `-CompoundStmt 0x14a809e20 <col:21, line:25:2>
    |   `-CallExpr 0x14a809de0 <line:24:3, col:22> 'int' contains-errors
    |     |-ImplicitCastExpr 0x14a809dc8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14a809d88 <col:3> 'int ()' Function 0x14a809cd0 'efree' 'int ()'
    |     `-ImplicitCastExpr 0x14a809e08 <col:9> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14a809da8 <col:9> 'char *' contains-errors lvalue Var 0x14a128360 'callback_name' 'char *'
    `-IfStmt 0x14a809f40 <line:26:2, line:28:2>
      |-ImplicitCastExpr 0x14a809e78 <line:26:6> 'char *' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x14a809e58 <col:6> 'char *' contains-errors lvalue Var 0x14a128430 'callback_error' 'char *'
      `-CompoundStmt 0x14a809f28 <col:22, line:28:2>
        `-CallExpr 0x14a809ee8 <line:27:3, col:23> 'int' contains-errors
          |-ImplicitCastExpr 0x14a809ed0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14a809e90 <col:3> 'int ()' Function 0x14a809cd0 'efree' 'int ()'
          `-ImplicitCastExpr 0x14a809f10 <col:9> 'char *' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x14a809eb0 <col:9> 'char *' contains-errors lvalue Var 0x14a128430 'callback_error' 'char *'
