`-FunctionDecl 0x136128158  line:1:20 parse_scheme 'const char *(struct parse_state *)' static
  |-ParmVarDecl 0x136128048 <col:33, col:53> col:53 used state 'struct parse_state *'
  `-CompoundStmt 0x136141ab0 <line:2:1, line:43:1>
    |-UnaryExprOrTypeTraitExpr 0x1361404c0 <line:3:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x1361404a0 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1361405c0 <line:4:2, col:30>
    | `-VarDecl 0x1361404f8 <col:2, col:27> col:14 used tmp 'const char *' cinit
    |   `-RecoveryExpr 0x136140598 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x136140560 <col:20> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    |-DoStmt 0x1378097e0 <line:6:2, line:40:37>
    | |-CompoundStmt 0x1378096d0 <line:6:5, line:40:2>
    | | `-SwitchStmt 0x136140668 <line:7:3, line:39:3>
    | |   |-UnaryOperator 0x136140650 <line:7:11, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x136140638 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x136140610 <col:12, col:19> '<dependent type>' contains-errors lvalue
    | |   |     `-DeclRefExpr 0x1361405d8 <col:12> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |   `-CompoundStmt 0x137809680 <col:24, line:39:3>
    | |     |-CaseStmt 0x1361406a8 <line:8:3, line:10:40>
    | |     | |-CharacterLiteral 0x136140690 <line:8:8> 'int' 58
    | |     | `-BinaryOperator 0x136140848 <line:10:4, col:40> '<dependent type>' contains-errors '='
    | |     |   |-CXXDependentScopeMemberExpr 0x136140730 <col:4, col:15> '<dependent type>' contains-errors lvalue .scheme
    | |     |   | `-RecoveryExpr 0x136140708 <col:4, col:11> '<dependent type>' contains-errors lvalue
    | |     |   |   `-DeclRefExpr 0x1361406d0 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |   `-UnaryOperator 0x136140830 <col:24, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     |     `-ArraySubscriptExpr 0x136140810 <col:25, col:40> '<dependent type>' contains-errors lvalue
    | |     |       |-ImplicitCastExpr 0x1361407f8 <col:25, col:32> '<dependent type>' contains-errors <LValueToRValue>
    | |     |       | `-RecoveryExpr 0x1361407b0 <col:25, col:32> '<dependent type>' contains-errors lvalue
    | |     |       |   `-DeclRefExpr 0x136140778 <col:25> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |       `-IntegerLiteral 0x1361407d8 <col:39> 'int' 0
    | |     |-BinaryOperator 0x136140998 <line:11:4, col:37> '<dependent type>' contains-errors '='
    | |     | |-ArraySubscriptExpr 0x136140958 <col:4, col:33> '<dependent type>' contains-errors lvalue
    | |     | | |-ImplicitCastExpr 0x136140940 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     | | | `-RecoveryExpr 0x1361408a0 <col:4, col:11> '<dependent type>' contains-errors lvalue
    | |     | | |   `-DeclRefExpr 0x136140868 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     | | `-UnaryOperator 0x136140928 <col:18, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |     | |   `-RecoveryExpr 0x136140900 <col:18, col:25> '<dependent type>' contains-errors lvalue
    | |     | |     `-DeclRefExpr 0x1361408c8 <col:18> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     | `-IntegerLiteral 0x136140978 <col:37> 'int' 0
    | |     |-ReturnStmt 0x136140a30 <line:12:4, col:20>
    | |     | `-UnaryOperator 0x136140a18 <col:11, col:20> '<dependent type>' contains-errors prefix '++' cannot overflow
    | |     |   `-RecoveryExpr 0x1361409f0 <col:13, col:20> '<dependent type>' contains-errors lvalue
    | |     |     `-DeclRefExpr 0x1361409b8 <col:13> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |-CaseStmt 0x136140a58 <line:14:3, line:19:4>
    | |     | |-CharacterLiteral 0x136140a40 <line:14:8> 'int' 48
    | |     | `-CaseStmt 0x136140a98 <col:13, line:19:4>
    | |     |   |-CharacterLiteral 0x136140a80 <line:14:18> 'int' 49
    | |     |   `-CaseStmt 0x136140ad8 <col:23, line:19:4>
    | |     |     |-CharacterLiteral 0x136140ac0 <line:14:28> 'int' 50
    | |     |     `-CaseStmt 0x136140b18 <col:33, line:19:4>
    | |     |       |-CharacterLiteral 0x136140b00 <line:14:38> 'int' 51
    | |     |       `-CaseStmt 0x136140b58 <col:43, line:19:4>
    | |     |         |-CharacterLiteral 0x136140b40 <line:14:48> 'int' 52
    | |     |         `-CaseStmt 0x136140b98 <col:53, line:19:4>
    | |     |           |-CharacterLiteral 0x136140b80 <line:14:58> 'int' 53
    | |     |           `-CaseStmt 0x136140bd8 <col:63, line:19:4>
    | |     |             |-CharacterLiteral 0x136140bc0 <line:14:68> 'int' 54
    | |     |             `-CaseStmt 0x136140c18 <line:15:3, line:19:4>
    | |     |               |-CharacterLiteral 0x136140c00 <line:15:8> 'int' 55
    | |     |               `-CaseStmt 0x136140c58 <col:13, line:19:4>
    | |     |                 |-CharacterLiteral 0x136140c40 <line:15:18> 'int' 56
    | |     |                 `-CaseStmt 0x136140c98 <col:23, line:19:4>
    | |     |                   |-CharacterLiteral 0x136140c80 <line:15:28> 'int' 57
    | |     |                   `-CaseStmt 0x136140cd8 <line:16:3, line:19:4>
    | |     |                     |-CharacterLiteral 0x136140cc0 <line:16:8> 'int' 43
    | |     |                     `-CaseStmt 0x136140d18 <col:13, line:19:4>
    | |     |                       |-CharacterLiteral 0x136140d00 <line:16:18> 'int' 45
    | |     |                       `-CaseStmt 0x136140d58 <col:23, line:19:4>
    | |     |                         |-CharacterLiteral 0x136140d40 <line:16:28> 'int' 46
    | |     |                         `-IfStmt 0x136140e80 <line:17:4, line:19:4>
    | |     |                           |-BinaryOperator 0x136140e00 <line:17:8, col:22> 'int' contains-errors '=='
    | |     |                           | |-RecoveryExpr 0x136140db8 <col:8, col:15> '<dependent type>' contains-errors lvalue
    | |     |                           | | `-DeclRefExpr 0x136140d80 <col:8> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |                           | `-DeclRefExpr 0x136140de0 <col:22> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'
    | |     |                           `-CompoundStmt 0x136140e68 <col:27, line:19:4>
    | |     |                             `-ReturnStmt 0x136140e58 <line:18:5, col:12>
    | |     |                               `-ImplicitCastExpr 0x136140e40 <col:12> 'const char *' contains-errors <LValueToRValue>
    | |     |                                 `-DeclRefExpr 0x136140e20 <col:12> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'
    | |     |-CaseStmt 0x136140eb8 <line:21:3, line:30:45>
    | |     | |-CharacterLiteral 0x136140ea0 <line:21:8> 'int' 65
    | |     | `-CaseStmt 0x136140ef8 <col:13, line:30:45>
    | |     |   |-CharacterLiteral 0x136140ee0 <line:21:18> 'int' 66
    | |     |   `-CaseStmt 0x136140f38 <col:23, line:30:45>
    | |     |     |-CharacterLiteral 0x136140f20 <line:21:28> 'int' 67
    | |     |     `-CaseStmt 0x136140f78 <col:33, line:30:45>
    | |     |       |-CharacterLiteral 0x136140f60 <line:21:38> 'int' 68
    | |     |       `-CaseStmt 0x136140fb8 <col:43, line:30:45>
    | |     |         |-CharacterLiteral 0x136140fa0 <line:21:48> 'int' 69
    | |     |         `-CaseStmt 0x136140ff8 <col:53, line:30:45>
    | |     |           |-CharacterLiteral 0x136140fe0 <line:21:58> 'int' 70
    | |     |           `-CaseStmt 0x136141038 <col:63, line:30:45>
    | |     |             |-CharacterLiteral 0x136141020 <line:21:68> 'int' 71
    | |     |             `-CaseStmt 0x136141078 <line:22:3, line:30:45>
    | |     |               |-CharacterLiteral 0x136141060 <line:22:8> 'int' 72
    | |     |               `-CaseStmt 0x1361410b8 <col:13, line:30:45>
    | |     |                 |-CharacterLiteral 0x1361410a0 <line:22:18> 'int' 73
    | |     |                 `-CaseStmt 0x1361410f8 <col:23, line:30:45>
    | |     |                   |-CharacterLiteral 0x1361410e0 <line:22:28> 'int' 74
    | |     |                   `-CaseStmt 0x136141138 <col:33, line:30:45>
    | |     |                     |-CharacterLiteral 0x136141120 <line:22:38> 'int' 75
    | |     |                     `-CaseStmt 0x136141178 <col:43, line:30:45>
    | |     |                       |-CharacterLiteral 0x136141160 <line:22:48> 'int' 76
    | |     |                       `-CaseStmt 0x1361411b8 <col:53, line:30:45>
    | |     |                         |-CharacterLiteral 0x1361411a0 <line:22:58> 'int' 77
    | |     |                         `-CaseStmt 0x1361411f8 <col:63, line:30:45>
    | |     |                           |-CharacterLiteral 0x1361411e0 <line:22:68> 'int' 78
    | |     |                           `-CaseStmt 0x136141238 <line:23:3, line:30:45>
    | |     |                             |-CharacterLiteral 0x136141220 <line:23:8> 'int' 79
    | |     |                             `-CaseStmt 0x136141278 <col:13, line:30:45>
    | |     |                               |-CharacterLiteral 0x136141260 <line:23:18> 'int' 80
    | |     |                               `-CaseStmt 0x1361412b8 <col:23, line:30:45>
    | |     |                                 |-CharacterLiteral 0x1361412a0 <line:23:28> 'int' 81
    | |     |                                 `-CaseStmt 0x1361412f8 <col:33, line:30:45>
    | |     |                                   |-CharacterLiteral 0x1361412e0 <line:23:38> 'int' 82
    | |     |                                   `-CaseStmt 0x136141338 <col:43, line:30:45>
    | |     |                                     |-CharacterLiteral 0x136141320 <line:23:48> 'int' 83
    | |     |                                     `-CaseStmt 0x136141378 <col:53, line:30:45>
    | |     |                                       |-CharacterLiteral 0x136141360 <line:23:58> 'int' 84
    | |     |                                       `-CaseStmt 0x1361413b8 <col:63, line:30:45>
    | |     |                                         |-CharacterLiteral 0x1361413a0 <line:23:68> 'int' 85
    | |     |                                         `-CaseStmt 0x137808800 <line:24:3, line:30:45>
    | |     |                                           |-CharacterLiteral 0x1361413e0 <line:24:8> 'int' 86
    | |     |                                           `-CaseStmt 0x137808840 <col:13, line:30:45>
    | |     |                                             |-CharacterLiteral 0x137808828 <line:24:18> 'int' 87
    | |     |                                             `-CaseStmt 0x137808880 <col:23, line:30:45>
    | |     |                                               |-CharacterLiteral 0x137808868 <line:24:28> 'int' 88
    | |     |                                               `-CaseStmt 0x1378088c0 <col:33, line:30:45>
    | |     |                                                 |-CharacterLiteral 0x1378088a8 <line:24:38> 'int' 89
    | |     |                                                 `-CaseStmt 0x137808900 <col:43, line:30:45>
    | |     |                                                   |-CharacterLiteral 0x1378088e8 <line:24:48> 'int' 90
    | |     |                                                   `-CaseStmt 0x137808940 <line:25:3, line:30:45>
    | |     |                                                     |-CharacterLiteral 0x137808928 <line:25:8> 'int' 97
    | |     |                                                     `-CaseStmt 0x137808980 <col:13, line:30:45>
    | |     |                                                       |-CharacterLiteral 0x137808968 <line:25:18> 'int' 98
    | |     |                                                       `-CaseStmt 0x1378089c0 <col:23, line:30:45>
    | |     |                                                         |-CharacterLiteral 0x1378089a8 <line:25:28> 'int' 99
    | |     |                                                         `-CaseStmt 0x137808a00 <col:33, line:30:45>
    | |     |                                                           |-CharacterLiteral 0x1378089e8 <line:25:38> 'int' 100
    | |     |                                                           `-CaseStmt 0x137808a40 <col:43, line:30:45>
    | |     |                                                             |-CharacterLiteral 0x137808a28 <line:25:48> 'int' 101
    | |     |                                                             `-CaseStmt 0x137808a80 <col:53, line:30:45>
    | |     |                                                               |-CharacterLiteral 0x137808a68 <line:25:58> 'int' 102
    | |     |                                                               `-CaseStmt 0x137808ac0 <col:63, line:30:45>
    | |     |                                                                 |-CharacterLiteral 0x137808aa8 <line:25:68> 'int' 103
    | |     |                                                                 `-CaseStmt 0x137808b00 <line:26:3, line:30:45>
    | |     |                                                                   |-CharacterLiteral 0x137808ae8 <line:26:8> 'int' 104
    | |     |                                                                   `-CaseStmt 0x137808b40 <col:13, line:30:45>
    | |     |                                                                     |-CharacterLiteral 0x137808b28 <line:26:18> 'int' 105
    | |     |                                                                     `-CaseStmt 0x137808b80 <col:23, line:30:45>
    | |     |                                                                       |-CharacterLiteral 0x137808b68 <line:26:28> 'int' 106
    | |     |                                                                       `-CaseStmt 0x137808bc0 <col:33, line:30:45>
    | |     |                                                                         |-CharacterLiteral 0x137808ba8 <line:26:38> 'int' 107
    | |     |                                                                         `-CaseStmt 0x137808c00 <col:43, line:30:45>
    | |     |                                                                           |-CharacterLiteral 0x137808be8 <line:26:48> 'int' 108
    | |     |                                                                           `-CaseStmt 0x137808c40 <col:53, line:30:45>
    | |     |                                                                             |-CharacterLiteral 0x137808c28 <line:26:58> 'int' 109
    | |     |                                                                             `-CaseStmt 0x137808c80 <col:63, line:30:45>
    | |     |                                                                               |-CharacterLiteral 0x137808c68 <line:26:68> 'int' 110
    | |     |                                                                               `-CaseStmt 0x137808cc0 <line:27:3, line:30:45>
    | |     |                                                                                 |-CharacterLiteral 0x137808ca8 <line:27:8> 'int' 111
    | |     |                                                                                 `-CaseStmt 0x137808d00 <col:13, line:30:45>
    | |     |                                                                                   |-CharacterLiteral 0x137808ce8 <line:27:18> 'int' 112
    | |     |                                                                                   `-CaseStmt 0x137808d40 <col:23, line:30:45>
    | |     |                                                                                     |-CharacterLiteral 0x137808d28 <line:27:28> 'int' 113
    | |     |                                                                                     `-CaseStmt 0x137808d80 <col:33, line:30:45>
    | |     |                                                                                       |-CharacterLiteral 0x137808d68 <line:27:38> 'int' 114
    | |     |                                                                                       `-CaseStmt 0x137808dc0 <col:43, line:30:45>
    | |     |                                                                                         |-CharacterLiteral 0x137808da8 <line:27:48> 'int' 115
    | |     |                                                                                         `-CaseStmt 0x137808e00 <col:53, line:30:45>
    | |     |                                                                                           |-CharacterLiteral 0x137808de8 <line:27:58> 'int' 116
    | |     |                                                                                           `-CaseStmt 0x137808e40 <col:63, line:30:45>
    | |     |                                                                                             |-CharacterLiteral 0x137808e28 <line:27:68> 'int' 117
    | |     |                                                                                             `-CaseStmt 0x137808e80 <line:28:3, line:30:45>
    | |     |                                                                                               |-CharacterLiteral 0x137808e68 <line:28:8> 'int' 118
    | |     |                                                                                               `-CaseStmt 0x137808ec0 <col:13, line:30:45>
    | |     |                                                                                                 |-CharacterLiteral 0x137808ea8 <line:28:18> 'int' 119
    | |     |                                                                                                 `-CaseStmt 0x137808f00 <col:23, line:30:45>
    | |     |                                                                                                   |-CharacterLiteral 0x137808ee8 <line:28:28> 'int' 120
    | |     |                                                                                                   `-CaseStmt 0x137808f40 <col:33, line:30:45>
    | |     |                                                                                                     |-CharacterLiteral 0x137808f28 <line:28:38> 'int' 121
    | |     |                                                                                                     `-CaseStmt 0x137808f80 <col:43, line:30:45>
    | |     |                                                                                                       |-CharacterLiteral 0x137808f68 <line:28:48> 'int' 122
    | |     |                                                                                                       `-BinaryOperator 0x137809148 <line:30:4, col:45> '<dependent type>' contains-errors '='
    | |     |                                                                                                         |-ArraySubscriptExpr 0x137809098 <col:4, col:33> '<dependent type>' contains-errors lvalue
    | |     |                                                                                                         | |-ImplicitCastExpr 0x137809080 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |     |                                                                                                         | | `-RecoveryExpr 0x137808fe0 <col:4, col:11> '<dependent type>' contains-errors lvalue
    | |     |                                                                                                         | |   `-DeclRefExpr 0x137808fa8 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |                                                                                                         | `-UnaryOperator 0x137809068 <col:18, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow
    | |     |                                                                                                         |   `-RecoveryExpr 0x137809040 <col:18, col:25> '<dependent type>' contains-errors lvalue
    | |     |                                                                                                         |     `-DeclRefExpr 0x137809008 <col:18> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |                                                                                                         `-UnaryOperator 0x137809130 <col:37, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     |                                                                                                           `-ImplicitCastExpr 0x137809118 <col:38, col:45> '<dependent type>' contains-errors <LValueToRValue>
    | |     |                                                                                                             `-RecoveryExpr 0x1378090f0 <col:38, col:45> '<dependent type>' contains-errors lvalue
    | |     |                                                                                                               `-DeclRefExpr 0x1378090b8 <col:38> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |     |-BreakStmt 0x137809168 <line:31:4>
    | |     |-DefaultStmt 0x137809508 <line:33:3, line:37:4>
    | |     | `-IfStmt 0x1378094e8 <line:34:4, line:37:4>
    | |     |   |-RecoveryExpr 0x137809468 <line:34:8, col:76> '_Bool' contains-errors
    | |     |   `-CompoundStmt 0x1378094d0 <col:79, line:37:4>
    | |     |     `-ReturnStmt 0x1378094c0 <line:36:5, col:12>
    | |     |       `-ImplicitCastExpr 0x1378094a8 <col:12> 'const char *' contains-errors <LValueToRValue>
    | |     |         `-DeclRefExpr 0x137809488 <col:12> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'
    | |     `-CompoundAssignOperator 0x137809650 <line:38:4, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |       |-RecoveryExpr 0x137809560 <col:4, col:11> '<dependent type>' contains-errors lvalue
    | |       | `-DeclRefExpr 0x137809528 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    | |       `-BinaryOperator 0x137809630 <col:18, col:23> '<dependent type>' contains-errors '-'
    | |         |-RecoveryExpr 0x137809610 <col:18> '<dependent type>' contains-errors lvalue
    | |         `-IntegerLiteral 0x1378095a0 <col:23> 'int' 1
    | `-BinaryOperator 0x1378097c0 <line:40:11, col:34> 'int' contains-errors '!='
    |   |-UnaryOperator 0x137809748 <col:11, col:20> '<dependent type>' contains-errors prefix '++' cannot overflow
    |   | `-RecoveryExpr 0x137809720 <col:13, col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1378096e8 <col:13> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    |   `-RecoveryExpr 0x137809798 <col:27, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x137809760 <col:27> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
    `-ReturnStmt 0x136141aa0 <line:42:2, col:22>
      `-BinaryOperator 0x136141a80 <col:9, col:22> '<dependent type>' contains-errors '='
        |-RecoveryExpr 0x136141a38 <col:9, col:16> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x136141a00 <col:9> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'
        `-DeclRefExpr 0x136141a60 <col:22> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'
