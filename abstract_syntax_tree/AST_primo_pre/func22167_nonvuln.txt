`-FunctionDecl 0x1451281c8  line:1:21 invalid mp_logical_and 'double (int)' static
  |-ParmVarDecl 0x1451280f0 <col:36, <invalid sloc>> col:53 invalid 'int'
  `-CompoundStmt 0x145141bb0 <col:59, line:13:7>
    |-DeclStmt 0x145128370 <line:2:9, col:37>
    | `-VarDecl 0x145128290 <col:9, col:20> col:20 invalid val_left 'const int'
    |-IfStmt 0x145128490 <line:4:9, col:59>
    | |-UnaryOperator 0x1451283c0 <col:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1451283a8 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x145128388 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x145128478 <col:24, col:59>
    |   `-ReturnStmt 0x145128468 <col:49, col:56>
    |     `-ImplicitCastExpr 0x145128450 <col:56> 'double' <IntegralToFloating>
    |       `-IntegerLiteral 0x145128430 <col:56> 'int' 0
    |-DeclStmt 0x1451285b0 <line:5:9, col:46>
    | `-VarDecl 0x1451284c8 <col:9, col:22> col:22 mem_right 'const long'
    `-ForStmt 0x145141b78 <line:6:9, line:10:9>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x1451286e8 <line:6:17, col:27> 'int' contains-errors '<'
      | |-CXXDependentScopeMemberExpr 0x145128680 <col:17, col:20> '<dependent type>' contains-errors lvalue .p_code
      | | `-RecoveryExpr 0x145128660 <col:17> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x1451286c8 <col:27> '<dependent type>' contains-errors lvalue
      |-UnaryOperator 0x1451287e8 <col:34, col:39> '<dependent type>' contains-errors prefix '++' cannot overflow
      | `-CXXDependentScopeMemberExpr 0x1451287a0 <col:36, col:39> '<dependent type>' contains-errors lvalue .p_code
      |   `-RecoveryExpr 0x145128780 <col:36> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x145141b60 <col:47, line:10:9>
        `-DeclStmt 0x1451419a8 <line:8:11, col:45>
          `-VarDecl 0x1451418c0 <col:11, col:24> col:24 used target 'const long'
