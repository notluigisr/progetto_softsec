`-FunctionDecl 0x12e844488  line:1:12 invalid jas_iccgetuint64 'int (int *, int *)' static
  |-ParmVarDecl 0x12e844328 <col:29, col:43> col:43 invalid in 'int *'
  |-ParmVarDecl 0x12e8443a8 <col:47, col:64> col:64 invalid val 'int *'
  `-CompoundStmt 0x12e844998 <line:2:1, line:8:1>
    |-IfStmt 0x12e844820 <line:4:2, line:5:11>
    | |-CallExpr 0x12e8447a0 <line:4:6, col:32> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e8446a0 <col:6> 'int ()' Function 0x12e8445e8 'jas_iccgetuint' 'int ()'
    | | |-RecoveryExpr 0x12e8446c0 <col:21> '<dependent type>' contains-errors lvalue
    | | |-IntegerLiteral 0x12e8446e0 <col:25> 'int' 8
    | | `-UnaryOperator 0x12e844788 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x12e844768 <col:29> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12e844810 <line:5:3, col:11>
    |   `-UnaryOperator 0x12e8447f8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x12e8447d8 <col:11> 'int' 1
    |-BinaryOperator 0x12e844948 <line:6:2, col:9> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x12e844910 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12e8448f8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12e844840 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12e844928 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12e844988 <line:7:2, col:9>
      `-IntegerLiteral 0x12e844968 <col:9> 'int' 0
