`-FunctionDecl 0x13081f4c8  line:1:12 find_voice 'int (int, int, int)' static
  |-ParmVarDecl 0x13081f2d8 <col:23, col:27> col:27 used dev 'int'
  |-ParmVarDecl 0x13081f358 <col:32, col:36> col:36 used chn 'int'
  |-ParmVarDecl 0x13081f3d8 <col:41, col:45> col:45 used note 'int'
  `-CompoundStmt 0x13083e510 <line:2:1, line:11:1>
    |-DeclStmt 0x13081f650 <line:3:2, col:20>
    | `-VarDecl 0x13081f5e8 <col:2, col:17> col:17 used key 'unsigned short'
    |-DeclStmt 0x13081f6e8 <line:4:2, col:7>
    | `-VarDecl 0x13081f680 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x13081f888 <line:6:2, col:30> 'unsigned short' '='
    | |-DeclRefExpr 0x13081f700 <col:2> 'unsigned short' lvalue Var 0x13081f5e8 'key' 'unsigned short'
    | `-ImplicitCastExpr 0x13081f870 <col:8, col:30> 'unsigned short' <IntegralCast>
    |   `-BinaryOperator 0x13081f850 <col:8, col:30> 'int' '|'
    |     |-ParenExpr 0x13081f798 <col:8, col:17> 'int'
    |     | `-BinaryOperator 0x13081f778 <col:9, col:16> 'int' '<<'
    |     |   |-ImplicitCastExpr 0x13081f760 <col:9> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x13081f720 <col:9> 'int' lvalue ParmVar 0x13081f358 'chn' 'int'
    |     |   `-IntegerLiteral 0x13081f740 <col:16> 'int' 8
    |     `-ParenExpr 0x13081f830 <col:21, col:30> 'int'
    |       `-BinaryOperator 0x13081f810 <col:22, col:29> 'int' '+'
    |         |-ImplicitCastExpr 0x13081f7f8 <col:22> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x13081f7b8 <col:22> 'int' lvalue ParmVar 0x13081f3d8 'note' 'int'
    |         `-IntegerLiteral 0x13081f7d8 <col:29> 'int' 1
    `-ReturnStmt 0x13083e500 <line:10:2, col:10>
      `-UnaryOperator 0x13083e4e8 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x13083e4c8 <col:10> 'int' 1
