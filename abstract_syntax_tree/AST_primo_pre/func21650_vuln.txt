`-FunctionDecl 0x14000de08  line:1:28 invalid ScaleQuantumToMap 'unsigned int (const int)' static inline
  |-ParmVarDecl 0x14000dcf0 <col:46, col:60> col:60 invalid quantum 'const int'
  `-CompoundStmt 0x14000e218 <line:2:1, line:8:1>
    |-IfStmt 0x14000df80 <line:3:3, line:4:15>
    | |-BinaryOperator 0x14000def8 <line:3:7, col:18> 'int' contains-errors '<='
    | | |-RecoveryExpr 0x14000deb8 <col:7> '<dependent type>' contains-errors lvalue
    | | `-FloatingLiteral 0x14000ded8 <col:18> 'double' 0.000000e+00
    | `-ReturnStmt 0x14000df70 <line:4:5, col:15>
    |   `-ImplicitCastExpr 0x14000df58 <col:11, col:15> 'unsigned int' <IntegralCast>
    |     `-ParenExpr 0x14000df38 <col:11, col:15> 'unsigned long'
    |       `-IntegerLiteral 0x14000df18 <col:12> 'unsigned long' 0
    `-ReturnStmt 0x14000e208 <line:7:3, col:56>
      `-ParenExpr 0x14000e1e8 <col:9, col:56> 'unsigned int' contains-errors
        `-CStyleCastExpr 0x14000e1c0 <col:10, col:55> 'unsigned int' contains-errors <Dependent>
          `-ParenExpr 0x14000e1a0 <col:25, col:55> '<dependent type>' contains-errors
            `-BinaryOperator 0x14000e148 <col:26, col:52> '<dependent type>' contains-errors '+'
              |-BinaryOperator 0x14000e108 <col:26, col:34> '<dependent type>' contains-errors '/'
              | |-RecoveryExpr 0x14000e0c8 <col:26> '<dependent type>' contains-errors lvalue
              | `-FloatingLiteral 0x14000e0e8 <col:34> 'double' 2.814793e+14
              `-FloatingLiteral 0x14000e128 <col:52> 'double' 5.000000e-01
