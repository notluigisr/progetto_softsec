`-FunctionDecl 0x157128238  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x157128158 <col:8> col:8 ServerSelectorTestFixture 'int'
  |-ParmVarDecl 0x1571280d8 <col:35> col:35 ShouldFilterCorrectlyByLatencyWindow 'int'
  `-CompoundStmt 0x157141830 <col:73, line:21:1>
    |-DeclStmt 0x157128590 <line:2:5, col:40>
    | `-VarDecl 0x157128350 <col:5, col:39> col:16 delta 'const int' auto cinit
    |   `-CallExpr 0x157128568 <col:24, col:39> 'int'
    |     |-ImplicitCastExpr 0x157128550 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1571284e0 <col:24> 'int ()' Function 0x157128428 'Milliseconds' 'int ()'
    |     `-IntegerLiteral 0x157128500 <col:37> 'int' 10
    |-DeclStmt 0x1571286a8 <line:3:5, col:47>
    | `-VarDecl 0x1571285c0 <col:5, col:46> col:16 used windowWidth 'const int' auto cinit
    |   `-CallExpr 0x157128680 <col:30, col:46> 'int'
    |     |-ImplicitCastExpr 0x157128668 <col:30> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x157128628 <col:30> 'int ()' Function 0x157128428 'Milliseconds' 'int ()'
    |     `-IntegerLiteral 0x157128648 <col:43> 'int' 100
    |-DeclStmt 0x1571287c0 <line:4:5, col:46>
    | `-VarDecl 0x1571286d8 <col:5, col:45> col:16 used lowerBound 'const int' auto cinit
    |   `-CallExpr 0x157128798 <col:29, col:45> 'int'
    |     |-ImplicitCastExpr 0x157128780 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x157128740 <col:29> 'int ()' Function 0x157128428 'Milliseconds' 'int ()'
    |     `-IntegerLiteral 0x157128760 <col:42> 'int' 100
    |-DeclStmt 0x157140c20 <line:6:5, col:57>
    | `-VarDecl 0x157140a00 <col:5, col:56> col:10 used window 'int' auto cinit
    |   `-CallExpr 0x157140bc0 <col:19, col:56> 'int'
    |     |-ImplicitCastExpr 0x157140ba8 <col:19> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x157140b48 <col:19> 'int ()' Function 0x157140a90 'LatencyWindow' 'int ()'
    |     |-ImplicitCastExpr 0x157140bf0 <col:33> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x157140b68 <col:33> 'const int' lvalue Var 0x1571286d8 'lowerBound' 'const int'
    |     `-ImplicitCastExpr 0x157140c08 <col:45> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x157140b88 <col:45> 'const int' lvalue Var 0x1571285c0 'windowWidth' 'const int'
    |-RecoveryExpr 0x157140c68 <line:8:5> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x157141188 <line:15:5, col:34> '<dependent type>' contains-errors
    | |-RecoveryExpr 0x1571410d0 <col:5, col:12> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x157140c88 <col:5> 'int' lvalue Var 0x157140a00 'window' 'int'
    | `-UnaryOperator 0x157141170 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x157141150 <col:27> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x157141408 <line:17:5, col:32> '<dependent type>' contains-errors
      |-DeclRefExpr 0x157141290 <col:5> 'int ()' Function 0x1571411d8 'ASSERT_EQ' 'int ()'
      |-IntegerLiteral 0x1571412b0 <col:15> 'int' 3
      `-CallExpr 0x1571413e8 <col:18, col:31> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x1571413a0 <col:18, col:26> '<dependent type>' contains-errors lvalue .size
          `-RecoveryExpr 0x157141380 <col:18> '<dependent type>' contains-errors lvalue
