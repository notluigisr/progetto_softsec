`-FunctionDecl 0x13900e068  line:1:15 invalid id3_parse_tag 'int (char *, int, char **, int *, int *)' static
  |-ParmVarDecl 0x13900dcf0 <col:29, col:35> col:35 used data 'char *'
  |-ParmVarDecl 0x13900dd70 <col:41, col:45> col:45 invalid length 'int'
  |-ParmVarDecl 0x13900de28 <col:53, col:60> col:60 used output 'char **'
  |-ParmVarDecl 0x13900ded8 <col:68, col:73> col:73 invalid output_size 'int *'
  |-ParmVarDecl 0x13900df58 <col:86, col:91> col:91 invalid output_pos 'int *'
  `-CompoundStmt 0x1390295d8 <line:2:1, line:41:1>
    |-IfStmt 0x1390278d8 <line:6:2, line:7:10>
    | |-BinaryOperator 0x139027870 <line:6:6, col:61> 'int' '||'
    | | |-BinaryOperator 0x13900e350 <col:6, col:41> 'int' '||'
    | | | |-ParenExpr 0x13900e230 <col:6, col:21> 'int'
    | | | | `-BinaryOperator 0x13900e210 <col:7, col:18> 'int' '!='
    | | | |   |-ImplicitCastExpr 0x13900e1f8 <col:7, col:13> 'int' <IntegralCast>
    | | | |   | `-ImplicitCastExpr 0x13900e1e0 <col:7, col:13> 'char' <LValueToRValue>
    | | | |   |   `-ArraySubscriptExpr 0x13900e1a8 <col:7, col:13> 'char' lvalue
    | | | |   |     |-ImplicitCastExpr 0x13900e190 <col:7> 'char *' <LValueToRValue>
    | | | |   |     | `-DeclRefExpr 0x13900e150 <col:7> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'
    | | | |   |     `-IntegerLiteral 0x13900e170 <col:12> 'int' 0
    | | | |   `-CharacterLiteral 0x13900e1c8 <col:18> 'int' 73
    | | | `-ParenExpr 0x13900e330 <col:26, col:41> 'int'
    | | |   `-BinaryOperator 0x13900e310 <col:27, col:38> 'int' '!='
    | | |     |-ImplicitCastExpr 0x13900e2f8 <col:27, col:33> 'int' <IntegralCast>
    | | |     | `-ImplicitCastExpr 0x13900e2e0 <col:27, col:33> 'char' <LValueToRValue>
    | | |     |   `-ArraySubscriptExpr 0x13900e2a8 <col:27, col:33> 'char' lvalue
    | | |     |     |-ImplicitCastExpr 0x13900e290 <col:27> 'char *' <LValueToRValue>
    | | |     |     | `-DeclRefExpr 0x13900e250 <col:27> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'
    | | |     |     `-IntegerLiteral 0x13900e270 <col:32> 'int' 1
    | | |     `-CharacterLiteral 0x13900e2c8 <col:38> 'int' 68
    | | `-ParenExpr 0x139027850 <col:46, col:61> 'int'
    | |   `-BinaryOperator 0x139027830 <col:47, col:58> 'int' '!='
    | |     |-ImplicitCastExpr 0x139027818 <col:47, col:53> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x139027800 <col:47, col:53> 'char' <LValueToRValue>
    | |     |   `-ArraySubscriptExpr 0x13900e3c8 <col:47, col:53> 'char' lvalue
    | |     |     |-ImplicitCastExpr 0x13900e3b0 <col:47> 'char *' <LValueToRValue>
    | |     |     | `-DeclRefExpr 0x13900e370 <col:47> 'char *' lvalue ParmVar 0x13900dcf0 'data' 'char *'
    | |     |     `-IntegerLiteral 0x13900e390 <col:52> 'int' 2
    | |     `-CharacterLiteral 0x13900e3e8 <col:58> 'int' 51
    | `-ReturnStmt 0x1390278c8 <line:7:3, col:10>
    |   `-RecoveryExpr 0x1390278a8 <col:10> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x139027c88 <line:11:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027be0 <col:2> 'int ()' Function 0x139027b28 'gf_bs_skip_bytes' 'int ()'
    | |-RecoveryExpr 0x139027c68 <col:19> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x139027c18 <col:23> 'int' 3
    |-CallExpr 0x139027e18 <line:12:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027d98 <col:2> 'int ()' Function 0x139027ce0 'gf_bs_read_u8' 'int ()'
    | `-RecoveryExpr 0x139027df8 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x139027ec0 <line:13:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027e40 <col:2> 'int ()' Function 0x139027ce0 'gf_bs_read_u8' 'int ()'
    | `-RecoveryExpr 0x139027ea0 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x139028070 <line:14:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139027fc8 <col:2> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'
    | |-RecoveryExpr 0x139028050 <col:17> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x139028000 <col:21> 'int' 1
    |-CallExpr 0x139028148 <line:15:3, col:23> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1390280a0 <col:3> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'
    | |-RecoveryExpr 0x139028128 <col:18> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x1390280d8 <col:22> 'int' 1
    |-CallExpr 0x139028220 <line:16:2, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139028178 <col:2> 'int ()' Function 0x139027f10 'gf_bs_read_int' 'int ()'
    | |-RecoveryExpr 0x139028200 <col:17> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x1390281b0 <col:21> 'int' 6
    `-WhileStmt 0x1390294b8 <line:23:2, line:38:2>
      |-RecoveryExpr 0x1390283d0 <line:23:9, col:41> '_Bool' contains-errors
      `-CompoundStmt 0x1390294a0 <col:45, line:38:2>
        `-IfStmt 0x139029450 <line:30:3, line:36:3> has_else
          |-RecoveryExpr 0x139028510 <line:30:7, col:13> '_Bool' contains-errors
          |-CompoundStmt 0x139028768 <col:31, line:34:3>
          | `-DeclStmt 0x1390285d0 <line:32:4, col:25>
          |   `-VarDecl 0x139028548 <col:4, col:10> col:10 used text 'char *'
          `-CompoundStmt 0x139029440 <line:34:10, line:36:3>
