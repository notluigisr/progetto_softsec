`-FunctionDecl 0x11f9281a8  line:1:1 DEFINE_TEST 'int (int)'
  |-ParmVarDecl 0x11f9280d8 <col:13> col:13 test_read_format_rar5_solid_skip_all 'int'
  `-CompoundStmt 0x128809580 <line:2:1, line:24:1>
    |-DeclStmt 0x11f9283b0 <line:3:2, col:29>
    | `-VarDecl 0x11f9282b8 <col:2, col:24> col:14 used reffile 'const char *' cinit
    |   `-ImplicitCastExpr 0x11f928398 <col:24> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x11f928380 <col:24> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x11f928360 <col:24> 'char[4]' lvalue "STR"
    |-CallExpr 0x11f928578 <line:7:2, col:18> 'int'
    | |-ImplicitCastExpr 0x11f928560 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11f9284f0 <col:2> 'int ()' Function 0x11f928438 'PROLOGUE' 'int ()'
    | `-ImplicitCastExpr 0x11f9285a0 <col:11> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x11f928510 <col:11> 'const char *' lvalue Var 0x11f9282b8 'reffile' 'const char *'
    |-CallExpr 0x11f942950 <line:8:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f928698 <col:2> 'int ()' Function 0x11f9285e0 'assertA' 'int ()'
    | `-BinaryOperator 0x11f942930 <col:10, col:46> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x11f9286b8 <col:10> 'int' 0
    |   `-CallExpr 0x11f942900 <col:15, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f9287b8 <col:15> 'int ()' Function 0x11f928700 'archive_read_next_header' 'int ()'
    |     |-RecoveryExpr 0x11f9428a8 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x11f9428e8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11f9428c8 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f942c50 <line:9:2, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f942a58 <col:2> 'int ()' Function 0x11f9429a0 'assertEqualString' 'int ()'
    | |-StringLiteral 0x11f942a78 <col:20> 'char[4]' lvalue "STR"
    | `-CallExpr 0x11f942c28 <col:27, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f942b78 <col:27> 'int ()' Function 0x11f942ac0 'archive_entry_pathname' 'int ()'
    |   `-RecoveryExpr 0x11f942c08 <col:50> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f942e48 <line:10:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f942c80 <col:2> 'int ()' Function 0x11f9285e0 'assertA' 'int ()'
    | `-BinaryOperator 0x11f942e28 <col:10, col:46> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x11f942ca0 <col:10> 'int' 0
    |   `-CallExpr 0x11f942df8 <col:15, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f942cc0 <col:15> 'int ()' Function 0x11f928700 'archive_read_next_header' 'int ()'
    |     |-RecoveryExpr 0x11f942da0 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x11f942de0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11f942dc0 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f942f88 <line:11:2, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f942e70 <col:2> 'int ()' Function 0x11f9429a0 'assertEqualString' 'int ()'
    | |-StringLiteral 0x11f942e90 <col:20> 'char[4]' lvalue "STR"
    | `-CallExpr 0x11f942f60 <col:27, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f942eb0 <col:27> 'int ()' Function 0x11f942ac0 'archive_entry_pathname' 'int ()'
    |   `-RecoveryExpr 0x11f942f40 <col:50> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f943180 <line:12:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f942fb8 <col:2> 'int ()' Function 0x11f9285e0 'assertA' 'int ()'
    | `-BinaryOperator 0x11f943160 <col:10, col:46> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x11f942fd8 <col:10> 'int' 0
    |   `-CallExpr 0x11f943130 <col:15, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f942ff8 <col:15> 'int ()' Function 0x11f928700 'archive_read_next_header' 'int ()'
    |     |-RecoveryExpr 0x11f9430d8 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x11f943118 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11f9430f8 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f9432c0 <line:13:2, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f9431a8 <col:2> 'int ()' Function 0x11f9429a0 'assertEqualString' 'int ()'
    | |-StringLiteral 0x11f9431c8 <col:20> 'char[4]' lvalue "STR"
    | `-CallExpr 0x11f943298 <col:27, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f9431e8 <col:27> 'int ()' Function 0x11f942ac0 'archive_entry_pathname' 'int ()'
    |   `-RecoveryExpr 0x11f943278 <col:50> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f9434b8 <line:14:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f9432f0 <col:2> 'int ()' Function 0x11f9285e0 'assertA' 'int ()'
    | `-BinaryOperator 0x11f943498 <col:10, col:46> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x11f943310 <col:10> 'int' 0
    |   `-CallExpr 0x11f943468 <col:15, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f943330 <col:15> 'int ()' Function 0x11f928700 'archive_read_next_header' 'int ()'
    |     |-RecoveryExpr 0x11f943410 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x11f943450 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11f943430 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f9435f8 <line:15:2, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f9434e0 <col:2> 'int ()' Function 0x11f9429a0 'assertEqualString' 'int ()'
    | |-StringLiteral 0x11f943500 <col:20> 'char[4]' lvalue "STR"
    | `-CallExpr 0x11f9435d0 <col:27, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11f943520 <col:27> 'int ()' Function 0x11f942ac0 'archive_entry_pathname' 'int ()'
    |   `-RecoveryExpr 0x11f9435b0 <col:50> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x128809200 <line:16:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11f943628 <col:2> 'int ()' Function 0x11f9285e0 'assertA' 'int ()'
    | `-BinaryOperator 0x11f9437d0 <col:10, col:46> 'int' contains-errors '=='
    |   |-IntegerLiteral 0x11f943648 <col:10> 'int' 0
    |   `-CallExpr 0x11f9437a0 <col:15, col:46> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x11f943668 <col:15> 'int ()' Function 0x11f928700 'archive_read_next_header' 'int ()'
    |     |-RecoveryExpr 0x11f943748 <col:40> '<dependent type>' contains-errors lvalue
    |     `-UnaryOperator 0x11f943788 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x11f943768 <col:44> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x128809560 <line:23:2, col:11> 'int'
      `-ImplicitCastExpr 0x128809548 <col:2> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x128809528 <col:2> 'int ()' Function 0x128809470 'EPILOGUE' 'int ()'
