`-FunctionDecl 0x1521281a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x1521280d8 <col:14> col:14 getcwd 'int'
  `-CompoundStmt 0x1521418f8 <line:2:1, line:21:1>
    |-DeclStmt 0x152128348 <line:3:2, col:23>
    | `-VarDecl 0x1521282e0 <col:2, col:7> col:7 invalid path 'char'
    |-DeclStmt 0x152128418 <line:4:2, col:16>
    | `-VarDecl 0x152128378 <col:2, col:12> col:8 used ret 'char *' cinit
    |   `-RecoveryExpr 0x1521283f8 <col:12> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1521286d8 <line:6:2, line:8:2>
    | |-BinaryOperator 0x152128690 <line:6:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x152128650 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x152128638 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x152128540 <col:6> 'int ()' Function 0x152128488 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x152128670 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1521286c0 <col:47, line:8:2>
    |   `-ReturnStmt 0x1521286b0 <line:7:3>
    `-IfStmt 0x1521418c8 <line:16:2, line:20:2> has_else
      |-ImplicitCastExpr 0x152128718 <line:16:6> 'char *' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x1521286f8 <col:6> 'char *' contains-errors lvalue Var 0x152128378 'ret' 'char *'
      |-CompoundStmt 0x1521418a0 <col:11, line:18:2>
      | `-CallExpr 0x152141870 <line:17:3, col:24> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x152141810 <col:3> 'int ()' Function 0x152128758 'RETURN_STRING' 'int ()'
      |   |-RecoveryExpr 0x152141830 <col:17> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x152141850 <col:23> 'int' 1
      `-CompoundStmt 0x1521418b8 <line:18:9, line:20:2>
