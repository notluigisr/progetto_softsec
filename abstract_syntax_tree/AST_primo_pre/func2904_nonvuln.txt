`-FunctionDecl 0x1231283d8  line:1:1 invalid read_one_row 'int (int *, int, int, long *)'
  |-ParmVarDecl 0x123128128 <col:14, col:21> col:21 referenced invalid mysql 'int *'
  |-ParmVarDecl 0x1231281a8 <col:27, col:32> col:32 used fields 'int'
  |-ParmVarDecl 0x123128228 <col:39, col:49> col:49 referenced invalid row 'int'
  |-ParmVarDecl 0x1231282d8 <col:54, col:61> col:61 used lengths 'long *'
  `-CompoundStmt 0x123145630 <line:2:1, line:47:1>
    |-DeclStmt 0x123128520 <line:3:3, col:13>
    | `-VarDecl 0x1231284b8 <col:3, col:8> col:8 used field 'int'
    |-DeclStmt 0x123128650 <line:4:3, col:20>
    | |-VarDecl 0x123128550 <col:3, col:9> col:9 used pkt_len 'long'
    | `-VarDecl 0x1231285d0 <col:3, col:17> col:17 used len 'long'
    |-DeclStmt 0x123141820 <line:5:3, col:34>
    | |-VarDecl 0x123128680 <col:3, col:10> col:10 used pos 'char *'
    | |-VarDecl 0x123128700 <col:3, col:16> col:16 used prev_pos 'char *'
    | `-VarDecl 0x123128780 <col:3, col:27> col:27 used end_pos 'char *'
    |-IfStmt 0x123141bb8 <line:8:3, line:9:13>
    | |-BinaryOperator 0x123141b50 <line:8:7, col:41> 'int' contains-errors '=='
    | | |-ParenExpr 0x123141ad8 <col:7, col:36> 'long' contains-errors
    | | | `-BinaryOperator 0x123141ab8 <col:8, col:35> 'long' contains-errors '='
    | | |   |-DeclRefExpr 0x1231418d0 <col:8> 'long' lvalue Var 0x123128550 'pkt_len' 'long'
    | | |   `-CallExpr 0x123141a90 <col:16, col:35> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x123141a50 <col:16> 'int ()' Function 0x123141998 'cli_safe_read' 'int ()'
    | | |     `-RecoveryExpr 0x123141a70 <col:30> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x123141b30 <col:41> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x123141ba8 <line:9:5, col:13>
    |   `-UnaryOperator 0x123141b90 <col:12, col:13> 'int' prefix '-'
    |     `-IntegerLiteral 0x123141b70 <col:13> 'int' 1
    |-IfStmt 0x1231423f8 <line:10:3, line:18:3>
    | |-RecoveryExpr 0x123141d08 <line:10:7, col:43> '_Bool' contains-errors
    | `-CompoundStmt 0x1231423d8 <line:11:3, line:18:3>
    |   |-IfStmt 0x123142388 <line:12:5, line:16:5>
    |   | |-BinaryOperator 0x123141d98 <line:12:9, col:19> 'int' '>'
    |   | | |-ImplicitCastExpr 0x123141d68 <col:9> 'long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x123141d28 <col:9> 'long' lvalue Var 0x123128550 'pkt_len' 'long'
    |   | | `-ImplicitCastExpr 0x123141d80 <col:19> 'long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x123141d48 <col:19> 'int' 1
    |   | `-CompoundStmt 0x123142368 <line:13:5, line:16:5>
    |   |   |-BinaryOperator 0x1231420e0 <line:14:7, col:54> '<dependent type>' contains-errors '='
    |   |   | |-CXXDependentScopeMemberExpr 0x123141e00 <col:7, col:14> '<dependent type>' contains-errors lvalue ->warning_count
    |   |   | | `-RecoveryExpr 0x123141dd8 <col:7> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x123141db8 <col:7> 'int *' lvalue ParmVar 0x123128128 'mysql' 'int *'
    |   |   | `-CallExpr 0x1231420b8 <col:29, col:54> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x123141f28 <col:29> 'int ()' Function 0x123141e70 'uint2korr' 'int ()'
    |   |   |   `-BinaryOperator 0x123142098 <col:39, col:53> '<dependent type>' contains-errors '+'
    |   |   |     |-CXXDependentScopeMemberExpr 0x123142050 <col:39, col:44> '<dependent type>' contains-errors lvalue ->read_pos
    |   |   |     | `-RecoveryExpr 0x123142030 <col:39> '<dependent type>' contains-errors lvalue
    |   |   |     `-IntegerLiteral 0x123141fa8 <col:53> 'int' 1
    |   |   `-BinaryOperator 0x123142348 <line:15:7, col:54> '<dependent type>' contains-errors '='
    |   |     |-CXXDependentScopeMemberExpr 0x123142148 <col:7, col:14> '<dependent type>' contains-errors lvalue ->server_status
    |   |     | `-RecoveryExpr 0x123142120 <col:7> '<dependent type>' contains-errors lvalue
    |   |     |   `-DeclRefExpr 0x123142100 <col:7> 'int *' lvalue ParmVar 0x123128128 'mysql' 'int *'
    |   |     `-CallExpr 0x123142320 <col:29, col:54> '<dependent type>' contains-errors
    |   |       |-DeclRefExpr 0x123142190 <col:29> 'int ()' Function 0x123141e70 'uint2korr' 'int ()'
    |   |       `-BinaryOperator 0x123142300 <col:39, col:53> '<dependent type>' contains-errors '+'
    |   |         |-CXXDependentScopeMemberExpr 0x1231422b8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->read_pos
    |   |         | `-RecoveryExpr 0x123142298 <col:39> '<dependent type>' contains-errors lvalue
    |   |         `-IntegerLiteral 0x123142210 <col:53> 'int' 3
    |   `-ReturnStmt 0x1231423c8 <line:17:5, col:12>
    |     `-IntegerLiteral 0x1231423a8 <col:12> 'int' 1
    |-BinaryOperator 0x123142470 <line:19:3, col:13> 'char *' '='
    | |-DeclRefExpr 0x123142418 <col:3> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    | `-ImplicitCastExpr 0x123142458 <col:13> 'char *' <NullToPointer>
    |   `-IntegerLiteral 0x123142438 <col:13> 'int' 0
    |-BinaryOperator 0x123142598 <line:20:3, col:12> 'char *' contains-errors '='
    | |-DeclRefExpr 0x123142490 <col:3> 'char *' lvalue Var 0x123128680 'pos' 'char *'
    | `-CXXDependentScopeMemberExpr 0x123142550 <col:7, col:12> '<dependent type>' contains-errors lvalue ->read_pos
    |   `-RecoveryExpr 0x123142530 <col:7> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123142668 <line:21:3, col:15> 'char *' '='
    | |-DeclRefExpr 0x1231425b8 <col:3> 'char *' lvalue Var 0x123128780 'end_pos' 'char *'
    | `-BinaryOperator 0x123142648 <col:11, col:15> 'char *' '+'
    |   |-ImplicitCastExpr 0x123142618 <col:11> 'char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1231425d8 <col:11> 'char *' lvalue Var 0x123128680 'pos' 'char *'
    |   `-ImplicitCastExpr 0x123142630 <col:15> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x1231425f8 <col:15> 'long' lvalue Var 0x123128550 'pkt_len' 'long'
    |-ForStmt 0x123143b80 <line:22:3, line:43:3>
    | |-BinaryOperator 0x1231426c8 <line:22:8, col:14> 'int' '='
    | | |-DeclRefExpr 0x123142688 <col:8> 'int' lvalue Var 0x1231284b8 'field' 'int'
    | | `-IntegerLiteral 0x1231426a8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x123142758 <col:18, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x123142728 <col:18> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1231426e8 <col:18> 'int' lvalue Var 0x1231284b8 'field' 'int'
    | | `-ImplicitCastExpr 0x123142740 <col:26> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x123142708 <col:26> 'int' lvalue ParmVar 0x1231281a8 'fields' 'int'
    | |-UnaryOperator 0x123142798 <col:35, col:40> 'int' postfix '++'
    | | `-DeclRefExpr 0x123142778 <col:35> 'int' lvalue Var 0x1231284b8 'field' 'int'
    | `-CompoundStmt 0x123143b58 <line:23:3, line:43:3>
    |   |-IfStmt 0x1231439b0 <line:24:5, line:39:5> has_else
    |   | |-RecoveryExpr 0x1231432b0 <line:24:9, col:49> '_Bool' contains-errors
    |   | |-CompoundStmt 0x123143470 <line:25:5, line:28:5>
    |   | | |-BinaryOperator 0x1231433a8 <line:26:7, col:20> '<dependent type>' contains-errors '='
    |   | | | |-ArraySubscriptExpr 0x123143368 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |   | | | | |-ImplicitCastExpr 0x123143338 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | | | `-RecoveryExpr 0x1231432f0 <col:7> '<dependent type>' contains-errors lvalue
    |   | | | | |   `-DeclRefExpr 0x1231432d0 <col:7> 'int' lvalue ParmVar 0x123128228 'row' 'int'
    |   | | | | `-ImplicitCastExpr 0x123143350 <col:11> 'int' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x123143318 <col:11> 'int' lvalue Var 0x1231284b8 'field' 'int'
    |   | | | `-IntegerLiteral 0x123143388 <col:20> 'int' 0
    |   | | `-BinaryOperator 0x123143450 <line:27:7, col:18> 'long' '='
    |   | |   |-UnaryOperator 0x123143400 <col:7, col:15> 'long' lvalue prefix '*' cannot overflow
    |   | |   | `-UnaryOperator 0x1231433e8 <col:8, col:15> 'long *' postfix '++'
    |   | |   |   `-DeclRefExpr 0x1231433c8 <col:8> 'long *' lvalue ParmVar 0x1231282d8 'lengths' 'long *'
    |   | |   `-ImplicitCastExpr 0x123143438 <col:18> 'long' <IntegralCast>
    |   | |     `-IntegerLiteral 0x123143418 <col:18> 'int' 0
    |   | `-CompoundStmt 0x123143980 <line:30:5, line:39:5>
    |   |   |-IfStmt 0x1231436e0 <line:31:7, line:35:7>
    |   |   | |-RecoveryExpr 0x123143540 <line:31:11, col:39> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x1231436c8 <line:32:7, line:35:7>
    |   |   |   `-ReturnStmt 0x1231436b8 <line:34:9, col:17>
    |   |   |     `-UnaryOperator 0x1231436a0 <col:16, col:17> 'int' prefix '-'
    |   |   |       `-IntegerLiteral 0x123143680 <col:17> 'int' 1
    |   |   |-BinaryOperator 0x123143830 <line:36:7, col:28> '<dependent type>' contains-errors '='
    |   |   | |-ArraySubscriptExpr 0x123143798 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |   |   | | |-ImplicitCastExpr 0x123143768 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | | | `-RecoveryExpr 0x123143720 <col:7> '<dependent type>' contains-errors lvalue
    |   |   | | |   `-DeclRefExpr 0x123143700 <col:7> 'int' lvalue ParmVar 0x123128228 'row' 'int'
    |   |   | | `-ImplicitCastExpr 0x123143780 <col:11> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x123143748 <col:11> 'int' lvalue Var 0x1231284b8 'field' 'int'
    |   |   | `-CStyleCastExpr 0x123143808 <col:20, col:28> 'char *' <NoOp>
    |   |   |   `-ImplicitCastExpr 0x1231437f0 <col:28> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   |     `-DeclRefExpr 0x1231437b8 <col:28> 'char *' lvalue Var 0x123128680 'pos' 'char *'
    |   |   |-CompoundAssignOperator 0x1231438a8 <line:37:7, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |   |   | |-DeclRefExpr 0x123143850 <col:7> 'char *' lvalue Var 0x123128680 'pos' 'char *'
    |   |   | `-ImplicitCastExpr 0x123143890 <col:12> 'long' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x123143870 <col:12> 'long' lvalue Var 0x1231285d0 'len' 'long'
    |   |   `-BinaryOperator 0x123143960 <line:38:7, col:18> 'long' '='
    |   |     |-UnaryOperator 0x123143910 <col:7, col:15> 'long' lvalue prefix '*' cannot overflow
    |   |     | `-UnaryOperator 0x1231438f8 <col:8, col:15> 'long *' postfix '++'
    |   |     |   `-DeclRefExpr 0x1231438d8 <col:8> 'long *' lvalue ParmVar 0x1231282d8 'lengths' 'long *'
    |   |     `-ImplicitCastExpr 0x123143948 <col:18> 'long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x123143928 <col:18> 'long' lvalue Var 0x1231285d0 'len' 'long'
    |   |-IfStmt 0x123143ac0 <line:40:5, line:41:17>
    |   | |-ImplicitCastExpr 0x123143a00 <line:40:9> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1231439e0 <col:9> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    |   | `-BinaryOperator 0x123143aa0 <line:41:7, col:17> 'char' '='
    |   |   |-UnaryOperator 0x123143a50 <col:7, col:8> 'char' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x123143a38 <col:8> 'char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x123143a18 <col:8> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    |   |   `-ImplicitCastExpr 0x123143a88 <col:17> 'char' <IntegralCast>
    |   |     `-IntegerLiteral 0x123143a68 <col:17> 'int' 0
    |   `-BinaryOperator 0x123143b38 <line:42:5, col:14> 'char *' '='
    |     |-DeclRefExpr 0x123143ae0 <col:5> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    |     `-ImplicitCastExpr 0x123143b20 <col:14> 'char *' <LValueToRValue>
    |       `-DeclRefExpr 0x123143b00 <col:14> 'char *' lvalue Var 0x123128680 'pos' 'char *'
    |-BinaryOperator 0x123143d28 <line:44:3, col:31> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x123143c50 <col:3, col:12> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x123143c20 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x123143bd8 <col:3> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x123143bb8 <col:3> 'int' lvalue ParmVar 0x123128228 'row' 'int'
    | | `-ImplicitCastExpr 0x123143c38 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x123143c00 <col:7> 'int' lvalue Var 0x1231284b8 'field' 'int'
    | `-BinaryOperator 0x123143d08 <col:14, col:31> 'char *' '+'
    |   |-CStyleCastExpr 0x123143cc0 <col:14, col:22> 'char *' <NoOp>
    |   | `-ImplicitCastExpr 0x123143ca8 <col:22> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   `-DeclRefExpr 0x123143c70 <col:22> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    |   `-IntegerLiteral 0x123143ce8 <col:31> 'int' 1
    |-BinaryOperator 0x123143dd0 <line:45:3, col:13> 'char' '='
    | |-UnaryOperator 0x123143d80 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x123143d68 <col:4> 'char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x123143d48 <col:4> 'char *' lvalue Var 0x123128700 'prev_pos' 'char *'
    | `-ImplicitCastExpr 0x123143db8 <col:13> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x123143d98 <col:13> 'int' 0
    `-ReturnStmt 0x123145620 <line:46:3, col:10>
      `-IntegerLiteral 0x123145600 <col:10> 'int' 0
