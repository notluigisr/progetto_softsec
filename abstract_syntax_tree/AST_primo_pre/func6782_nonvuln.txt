`-FunctionDecl 0x13200de88  line:1:12 invalid unit_deserialize_job 'int (int *, int *)' static
  |-ParmVarDecl 0x13200dd28 <col:33, col:39> col:39 invalid u 'int *'
  |-ParmVarDecl 0x13200dda8 <col:42, col:48> col:48 invalid f 'int *'
  `-CompoundStmt 0x1330092d0 <col:51, line:22:1>
    |-CallExpr 0x13200e120 <line:2:9, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13200e0a0 <col:9> 'int ()' Function 0x13200dfe8 '_cleanup_' 'int ()'
    | `-RecoveryExpr 0x13200e100 <col:19> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13200e1f8 <line:3:9, col:14>
    | `-VarDecl 0x13200e190 <col:9, col:13> col:13 used r 'int'
    |-CallExpr 0x13200e330 <line:5:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13200e2f0 <col:9> 'int ()' Function 0x13200e238 'assert' 'int ()'
    | `-RecoveryExpr 0x13200e310 <col:16> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13200e398 <line:6:9, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13200e358 <col:9> 'int ()' Function 0x13200e238 'assert' 'int ()'
    | `-RecoveryExpr 0x13200e378 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133008b38 <line:9:9, line:10:32>
    | |-UnaryOperator 0x1330089a0 <line:9:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x133008988 <col:14> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x133008968 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x133008b28 <line:10:17, col:32>
    |   `-CallExpr 0x133008b08 <col:24, col:32> 'int'
    |     `-ImplicitCastExpr 0x133008af0 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x133008a98 <col:24> 'int ()' Function 0x1330089e0 'log_oom' 'int ()'
    |-BinaryOperator 0x133008d50 <line:12:9, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x133008b58 <col:9> 'int' lvalue Var 0x13200e190 'r' 'int'
    | `-CallExpr 0x133008d20 <col:13, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x133008c58 <col:13> 'int ()' Function 0x133008ba0 'job_deserialize' 'int ()'
    |   |-RecoveryExpr 0x133008d00 <col:29> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x133008c90 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x133008e30 <line:13:9, line:14:24>
    | |-BinaryOperator 0x133008dc8 <line:13:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x133008db0 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x133008d70 <col:13> 'int' lvalue Var 0x13200e190 'r' 'int'
    | | `-IntegerLiteral 0x133008d90 <col:17> 'int' 0
    | `-ReturnStmt 0x133008e20 <line:14:17, col:24>
    |   `-ImplicitCastExpr 0x133008e08 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x133008de8 <col:24> 'int' lvalue Var 0x13200e190 'r' 'int'
    |-BinaryOperator 0x133009018 <line:16:9, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x133008e50 <col:9> 'int' lvalue Var 0x13200e190 'r' 'int'
    | `-CallExpr 0x133008ff0 <col:13, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x133008f50 <col:13> 'int ()' Function 0x133008e98 'job_install_deserialized' 'int ()'
    |   `-RecoveryExpr 0x133008fd0 <col:38> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1330090f8 <line:17:9, line:18:24>
    | |-BinaryOperator 0x133009090 <line:17:13, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x133009078 <col:13> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x133009038 <col:13> 'int' lvalue Var 0x13200e190 'r' 'int'
    | | `-IntegerLiteral 0x133009058 <col:17> 'int' 0
    | `-ReturnStmt 0x1330090e8 <line:18:17, col:24>
    |   `-ImplicitCastExpr 0x1330090d0 <col:24> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1330090b0 <col:24> 'int' lvalue Var 0x13200e190 'r' 'int'
    |-CallExpr 0x133009278 <line:20:9, col:19> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1330091f8 <col:9> 'int ()' Function 0x133009140 'TAKE_PTR' 'int ()'
    | `-RecoveryExpr 0x133009258 <col:18> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1330092c0 <line:21:9, col:16>
      `-IntegerLiteral 0x1330092a0 <col:16> 'int' 0
