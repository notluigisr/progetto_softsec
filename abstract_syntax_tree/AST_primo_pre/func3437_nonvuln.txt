`-FunctionDecl 0x12e9286e8  line:1:19 argtoi 'int (struct arg)' static inline
  |-ParmVarDecl 0x12e9285d8 <col:26, col:37> col:37 invalid arg 'struct arg'
  `-CompoundStmt 0x12e944f30 <line:2:1, line:6:1>
    |-DeclStmt 0x12e944c68 <line:3:5, col:14>
    | `-VarDecl 0x12e944c00 <col:5, col:9> col:9 used value 'int'
    |-CallExpr 0x12e944eb8 <line:4:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e944db0 <col:5> 'int ()' Function 0x12e944cf8 'mystrtoi' 'int ()'
    | |-UnaryOperator 0x12e944e38 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12e944df0 <col:15, col:19> '<dependent type>' contains-errors lvalue .start
    | |   `-RecoveryExpr 0x12e944dd0 <col:15> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12e944ea0 <col:26, col:27> 'int *' prefix '&' cannot overflow
    |   `-DeclRefExpr 0x12e944e50 <col:27> 'int' lvalue Var 0x12e944c00 'value' 'int'
    `-ReturnStmt 0x12e944f20 <line:5:5, col:12>
      `-ImplicitCastExpr 0x12e944f08 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e944ee8 <col:12> 'int' lvalue Var 0x12e944c00 'value' 'int'
