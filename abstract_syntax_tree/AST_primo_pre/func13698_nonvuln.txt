`-FunctionDecl 0x11f9282c8  line:1:15 invalid name_list_append 'int (int **, char *)'
  |-ParmVarDecl 0x11f928160 <col:32, col:44> col:44 referenced invalid ptr 'int **'
  |-ParmVarDecl 0x11f9281e0 <col:49, col:55> col:55 used name 'char *'
  `-CompoundStmt 0x11f941c08 <col:61, line:7:1>
    |-WhileStmt 0x11f928508 <line:2:5, line:3:22>
    | |-UnaryOperator 0x11f9283b8 <line:2:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x11f9283a0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x11f928380 <col:12> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11f9284e8 <line:3:9, col:22> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x11f9283f0 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x11f9283d0 <col:9> 'int **' lvalue ParmVar 0x11f928160 'ptr' 'int **'
    |   `-UnaryOperator 0x11f9284d0 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x11f928488 <col:14, col:22> '<dependent type>' contains-errors lvalue ->next
    |       `-ParenExpr 0x11f928468 <col:14, col:19> '<dependent type>' contains-errors
    |         `-UnaryOperator 0x11f928450 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x11f928438 <col:16> '<dependent type>' contains-errors <LValueToRValue>
    |             `-RecoveryExpr 0x11f928418 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11f941988 <line:5:5, col:39> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11f928778 <col:5, col:13> '<dependent type>' contains-errors lvalue ->name
    | | `-ParenExpr 0x11f928758 <col:5, col:10> '<dependent type>' contains-errors
    | |   `-UnaryOperator 0x11f928740 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x11f928728 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x11f928708 <col:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x11f941948 <col:18, col:39> 'int'
    |   |-ImplicitCastExpr 0x11f941930 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f9418b8 <col:18> 'int ()' Function 0x11f941800 'str_dup_detached' 'int ()'
    |   `-ImplicitCastExpr 0x11f941970 <col:35> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x11f9418d8 <col:35> 'char *' lvalue ParmVar 0x11f9281e0 'name' 'char *'
    `-BinaryOperator 0x11f941be8 <line:6:5, col:18> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x11f941b80 <col:5, col:13> '<dependent type>' contains-errors lvalue ->next
      | `-ParenExpr 0x11f941b60 <col:5, col:10> '<dependent type>' contains-errors
      |   `-UnaryOperator 0x11f941b48 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow
      |     `-ImplicitCastExpr 0x11f941b30 <col:7> '<dependent type>' contains-errors <LValueToRValue>
      |       `-RecoveryExpr 0x11f9419a8 <col:7> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x11f941bc8 <col:18> '<dependent type>' contains-errors lvalue
