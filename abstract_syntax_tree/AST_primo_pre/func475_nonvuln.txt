`-FunctionDecl 0x13f80de80  line:1:13 invalid FVSetColor 'void (int *, int)' static
  |-ParmVarDecl 0x13f80dd28 <col:24, col:34> col:34 invalid fv 'int *'
  |-ParmVarDecl 0x13f80dda8 <col:38, col:45> col:45 invalid col 'int'
  `-CompoundStmt 0x13f827d60 <col:50, line:9:1>
    |-DeclStmt 0x13f80dfb8 <line:2:5, col:10>
    | `-VarDecl 0x13f80df50 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x13f827ae0 <line:4:5, line:7:5>
    | |-BinaryOperator 0x13f80e010 <line:4:11, col:13> 'int' '='
    | | |-DeclRefExpr 0x13f80dfd0 <col:11> 'int' lvalue Var 0x13f80df50 'i' 'int'
    | | `-IntegerLiteral 0x13f80dff0 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13f80e148 <col:16, col:29> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13f80e030 <col:16> 'int' lvalue Var 0x13f80df50 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x13f80e100 <col:18, col:29> '<dependent type>' contains-errors lvalue ->enccount
    | |   `-CXXDependentScopeMemberExpr 0x13f80e0b8 <col:18, col:24> '<dependent type>' contains-errors lvalue .map
    | |     `-CXXDependentScopeMemberExpr 0x13f80e070 <col:18, col:22> '<dependent type>' contains-errors lvalue ->b
    | |       `-RecoveryExpr 0x13f80e050 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13f80e188 <col:39, col:41> 'int' prefix '++'
    | | `-DeclRefExpr 0x13f80e168 <col:41> 'int' lvalue Var 0x13f80df50 'i' 'int'
    | `-IfStmt 0x13f827ac0 <col:45, line:7:5>
    |   |-ArraySubscriptExpr 0x13f80e2a0 <line:4:50, col:66> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x13f80e270 <col:50, col:56> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-CXXDependentScopeMemberExpr 0x13f80e208 <col:50, col:56> '<dependent type>' contains-errors lvalue .selected
    |   | |   `-CXXDependentScopeMemberExpr 0x13f80e1c0 <col:50, col:54> '<dependent type>' contains-errors lvalue ->b
    |   | |     `-RecoveryExpr 0x13f80e1a0 <col:50> '<dependent type>' contains-errors lvalue
    |   | `-ImplicitCastExpr 0x13f80e288 <col:65> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x13f80e250 <col:65> 'int' lvalue Var 0x13f80df50 'i' 'int'
    |   `-CompoundStmt 0x13f827ab0 <col:70, line:7:5>
    `-CallExpr 0x13f827d28 <line:8:5, col:40> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13f827bf8 <col:5> 'int ()' Function 0x13f827b40 'GDrawRequestExpose' 'int ()'
      |-CXXDependentScopeMemberExpr 0x13f827c38 <col:24, col:28> '<dependent type>' contains-errors lvalue ->v
      | `-RecoveryExpr 0x13f827c18 <col:24> '<dependent type>' contains-errors lvalue
      |-RecoveryExpr 0x13f827ce8 <col:30> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x13f827d08 <col:35> '<dependent type>' contains-errors lvalue
