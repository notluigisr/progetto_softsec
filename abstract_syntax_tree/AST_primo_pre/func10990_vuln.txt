`-FunctionDecl 0x13980dee8  line:1:12 invalid print_media_desc 'int (const int *, char *, int)' static
  |-ParmVarDecl 0x13980dcf0 <col:29, col:54> col:54 invalid m 'const int *'
  |-ParmVarDecl 0x13980dd70 <col:57, col:63> col:63 used buf 'char *'
  |-ParmVarDecl 0x13980ddf0 <col:68, col:78> col:78 invalid len 'int'
  `-CompoundStmt 0x13982bf78 <line:2:1, line:63:1>
    |-DeclStmt 0x13980e060 <line:3:5, col:18>
    | `-VarDecl 0x13980dfc0 <col:5, col:15> col:11 used p 'char *' cinit
    |   `-ImplicitCastExpr 0x13980e048 <col:15> 'char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13980e028 <col:15> 'char *' lvalue ParmVar 0x13980dd70 'buf' 'char *'
    |-DeclStmt 0x13980e158 <line:4:5, col:24>
    | `-VarDecl 0x13980e090 <col:5, col:21> col:11 used end 'char *' cinit
    |   `-BinaryOperator 0x13980e138 <col:17, col:21> '<dependent type>' contains-errors '+'
    |     |-DeclRefExpr 0x13980e0f8 <col:17> 'char *' lvalue ParmVar 0x13980dd70 'buf' 'char *'
    |     `-RecoveryExpr 0x13980e118 <col:21> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13980e1f0 <line:5:5, col:15>
    | `-VarDecl 0x13980e188 <col:5, col:14> col:14 used i 'unsigned int'
    |-DeclStmt 0x13980e288 <line:6:5, col:16>
    | `-VarDecl 0x13980e220 <col:5, col:9> col:9 used printed 'int'
    |-IfStmt 0x13980e358 <line:9:5, line:11:5>
    | |-RecoveryExpr 0x13980e2d8 <line:9:9, col:71> '_Bool' contains-errors
    | `-CompoundStmt 0x13980e340 <col:75, line:11:5>
    |   `-ReturnStmt 0x13980e330 <line:10:2, col:10>
    |     `-UnaryOperator 0x13980e318 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x13980e2f8 <col:10> 'int' 1
    |-BinaryOperator 0x139827800 <line:12:5, col:12> 'char' '='
    | |-UnaryOperator 0x13980e3b0 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x13980e398 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x13980e378 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x13980e3e0 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x13980e3c8 <col:12> 'int' 109
    |-BinaryOperator 0x1398278a0 <line:13:5, col:12> 'char' '='
    | |-UnaryOperator 0x139827858 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x139827840 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x139827820 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x139827888 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x139827870 <col:12> 'int' 61
    |-CallExpr 0x139827c50 <line:14:5, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139827a20 <col:5> 'int ()' Function 0x139827968 'pj_memcpy' 'int ()'
    | |-DeclRefExpr 0x139827a40 <col:15> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | |-CXXDependentScopeMemberExpr 0x139827b10 <col:18, col:32> '<dependent type>' contains-errors lvalue .ptr
    | | `-CXXDependentScopeMemberExpr 0x139827ac8 <col:18, col:26> '<dependent type>' contains-errors lvalue .media
    | |   `-CXXDependentScopeMemberExpr 0x139827a80 <col:18, col:21> '<dependent type>' contains-errors lvalue ->desc
    | |     `-RecoveryExpr 0x139827a60 <col:18> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x139827c08 <col:37, col:51> '<dependent type>' contains-errors lvalue .slen
    |   `-CXXDependentScopeMemberExpr 0x139827bc0 <col:37, col:45> '<dependent type>' contains-errors lvalue .media
    |     `-CXXDependentScopeMemberExpr 0x139827b78 <col:37, col:40> '<dependent type>' contains-errors lvalue ->desc
    |       `-RecoveryExpr 0x139827b58 <col:37> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x139827da0 <line:15:5, col:24> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x139827c88 <col:5> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-CXXDependentScopeMemberExpr 0x139827d58 <col:10, col:24> '<dependent type>' contains-errors lvalue .slen
    |   `-CXXDependentScopeMemberExpr 0x139827d10 <col:10, col:18> '<dependent type>' contains-errors lvalue .media
    |     `-CXXDependentScopeMemberExpr 0x139827cc8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->desc
    |       `-RecoveryExpr 0x139827ca8 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x139827e50 <line:16:5, col:12> 'char' '='
    | |-UnaryOperator 0x139827e08 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x139827df0 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x139827dd0 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x139827e38 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x139827e20 <col:12> 'int' 32
    |-BinaryOperator 0x139828090 <line:17:5, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x139827e70 <col:5> 'int' lvalue Var 0x13980e220 'printed' 'int'
    | `-CallExpr 0x139828060 <col:15, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139827f70 <col:15> 'int ()' Function 0x139827eb8 'pj_utoa' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x139827ff8 <col:23, col:31> '<dependent type>' contains-errors lvalue .port
    |   | `-CXXDependentScopeMemberExpr 0x139827fb0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->desc
    |   |   `-RecoveryExpr 0x139827f90 <col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x139828040 <col:37> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |-CompoundAssignOperator 0x139828108 <line:18:5, col:10> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    | |-DeclRefExpr 0x1398280b0 <col:5> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x1398280f0 <col:10> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1398280d0 <col:10> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |-IfStmt 0x1398284d8 <line:19:5, line:23:5>
    | |-BinaryOperator 0x139828208 <line:19:9, col:30> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x1398281a0 <col:9, col:17> '<dependent type>' contains-errors lvalue .port_count
    | | | `-CXXDependentScopeMemberExpr 0x139828158 <col:9, col:12> '<dependent type>' contains-errors lvalue ->desc
    | | |   `-RecoveryExpr 0x139828138 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1398281e8 <col:30> 'int' 1
    | `-CompoundStmt 0x1398284b0 <col:33, line:23:5>
    |   |-BinaryOperator 0x1398282a8 <line:20:2, col:9> 'char' '='
    |   | |-UnaryOperator 0x139828260 <col:2, col:4> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x139828248 <col:3, col:4> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x139828228 <col:3> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   | `-ImplicitCastExpr 0x139828290 <col:9> 'char' <IntegralCast>
    |   |   `-CharacterLiteral 0x139828278 <col:9> 'int' 47
    |   |-BinaryOperator 0x139828408 <line:21:2, col:41> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1398282c8 <col:2> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | `-CallExpr 0x1398283d8 <col:12, col:41> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1398282e8 <col:12> 'int ()' Function 0x139827eb8 'pj_utoa' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x139828370 <col:20, col:28> '<dependent type>' contains-errors lvalue .port_count
    |   |   | `-CXXDependentScopeMemberExpr 0x139828328 <col:20, col:23> '<dependent type>' contains-errors lvalue ->desc
    |   |   |   `-RecoveryExpr 0x139828308 <col:20> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x1398283b8 <col:40> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   `-CompoundAssignOperator 0x139828480 <line:22:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |     |-DeclRefExpr 0x139828428 <col:2> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |     `-ImplicitCastExpr 0x139828468 <col:7> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x139828448 <col:7> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |-BinaryOperator 0x139828578 <line:24:5, col:12> 'char' '='
    | |-UnaryOperator 0x139828530 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x139828518 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x1398284f8 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x139828560 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x139828548 <col:12> 'int' 32
    |-CallExpr 0x1398287c8 <line:25:5, col:63> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139828598 <col:5> 'int ()' Function 0x139827968 'pj_memcpy' 'int ()'
    | |-DeclRefExpr 0x1398285b8 <col:15> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | |-CXXDependentScopeMemberExpr 0x139828688 <col:18, col:36> '<dependent type>' contains-errors lvalue .ptr
    | | `-CXXDependentScopeMemberExpr 0x139828640 <col:18, col:26> '<dependent type>' contains-errors lvalue .transport
    | |   `-CXXDependentScopeMemberExpr 0x1398285f8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->desc
    | |     `-RecoveryExpr 0x1398285d8 <col:18> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x139828780 <col:41, col:59> '<dependent type>' contains-errors lvalue .slen
    |   `-CXXDependentScopeMemberExpr 0x139828738 <col:41, col:49> '<dependent type>' contains-errors lvalue .transport
    |     `-CXXDependentScopeMemberExpr 0x1398286f0 <col:41, col:44> '<dependent type>' contains-errors lvalue ->desc
    |       `-RecoveryExpr 0x1398286d0 <col:41> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x139828f18 <line:26:5, col:28> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x139828e00 <col:5> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-CXXDependentScopeMemberExpr 0x139828ed0 <col:10, col:28> '<dependent type>' contains-errors lvalue .slen
    |   `-CXXDependentScopeMemberExpr 0x139828e88 <col:10, col:18> '<dependent type>' contains-errors lvalue .transport
    |     `-CXXDependentScopeMemberExpr 0x139828e40 <col:10, col:13> '<dependent type>' contains-errors lvalue ->desc
    |       `-RecoveryExpr 0x139828e20 <col:10> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1398296b0 <line:27:5, line:31:5>
    | |-BinaryOperator 0x139828fa0 <line:27:10, col:12> 'unsigned int' '='
    | | |-DeclRefExpr 0x139828f48 <col:10> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x139828f88 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x139828f68 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x139829090 <col:15, col:25> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x139828fc0 <col:15> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x139829048 <col:17, col:25> '<dependent type>' contains-errors lvalue .fmt_count
    | |   `-CXXDependentScopeMemberExpr 0x139829000 <col:17, col:20> '<dependent type>' contains-errors lvalue ->desc
    | |     `-RecoveryExpr 0x139828fe0 <col:17> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1398290d0 <col:36, col:38> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1398290b0 <col:38> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | `-CompoundStmt 0x139829688 <col:41, line:31:5>
    |   |-BinaryOperator 0x139829168 <line:28:2, col:9> 'char' '='
    |   | |-UnaryOperator 0x139829120 <col:2, col:4> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x139829108 <col:3, col:4> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1398290e8 <col:3> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   | `-ImplicitCastExpr 0x139829150 <col:9> 'char' <IntegralCast>
    |   |   `-CharacterLiteral 0x139829138 <col:9> 'int' 32
    |   |-CallExpr 0x139829498 <line:29:2, col:54> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x139829188 <col:2> 'int ()' Function 0x139827968 'pj_memcpy' 'int ()'
    |   | |-DeclRefExpr 0x1398291a8 <col:12> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   | |-CXXDependentScopeMemberExpr 0x1398292e8 <col:15, col:30> '<dependent type>' contains-errors lvalue .ptr
    |   | | `-ArraySubscriptExpr 0x1398292c8 <col:15, col:28> '<dependent type>' contains-errors lvalue
    |   | |   |-ImplicitCastExpr 0x139829298 <col:15, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   | `-CXXDependentScopeMemberExpr 0x139829230 <col:15, col:23> '<dependent type>' contains-errors lvalue .fmt
    |   | |   |   `-CXXDependentScopeMemberExpr 0x1398291e8 <col:15, col:18> '<dependent type>' contains-errors lvalue ->desc
    |   | |   |     `-RecoveryExpr 0x1398291c8 <col:15> '<dependent type>' contains-errors lvalue
    |   | |   `-ImplicitCastExpr 0x1398292b0 <col:27> 'unsigned int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x139829278 <col:27> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    |   | `-CXXDependentScopeMemberExpr 0x139829450 <col:35, col:50> '<dependent type>' contains-errors lvalue .slen
    |   |   `-ArraySubscriptExpr 0x139829430 <col:35, col:48> '<dependent type>' contains-errors lvalue
    |   |     |-ImplicitCastExpr 0x139829400 <col:35, col:43> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | `-CXXDependentScopeMemberExpr 0x139829398 <col:35, col:43> '<dependent type>' contains-errors lvalue .fmt
    |   |     |   `-CXXDependentScopeMemberExpr 0x139829350 <col:35, col:38> '<dependent type>' contains-errors lvalue ->desc
    |   |     |     `-RecoveryExpr 0x139829330 <col:35> '<dependent type>' contains-errors lvalue
    |   |     `-ImplicitCastExpr 0x139829418 <col:47> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1398293e0 <col:47> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    |   `-CompoundAssignOperator 0x139829658 <line:30:2, col:22> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x1398294d0 <col:2> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |     `-CXXDependentScopeMemberExpr 0x139829610 <col:7, col:22> '<dependent type>' contains-errors lvalue .slen
    |       `-ArraySubscriptExpr 0x1398295f0 <col:7, col:20> '<dependent type>' contains-errors lvalue
    |         |-ImplicitCastExpr 0x1398295c0 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>
    |         | `-CXXDependentScopeMemberExpr 0x139829558 <col:7, col:15> '<dependent type>' contains-errors lvalue .fmt
    |         |   `-CXXDependentScopeMemberExpr 0x139829510 <col:7, col:10> '<dependent type>' contains-errors lvalue ->desc
    |         |     `-RecoveryExpr 0x1398294f0 <col:7> '<dependent type>' contains-errors lvalue
    |         `-ImplicitCastExpr 0x1398295d8 <col:19> 'unsigned int' <LValueToRValue>
    |           `-DeclRefExpr 0x1398295a0 <col:19> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    |-BinaryOperator 0x139829768 <line:32:5, col:12> 'char' '='
    | |-UnaryOperator 0x139829720 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x139829708 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x1398296e8 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x139829750 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x139829738 <col:12> 'int' 13
    |-BinaryOperator 0x139829808 <line:33:5, col:12> 'char' '='
    | |-UnaryOperator 0x1398297c0 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x1398297a8 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x139829788 <col:6> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    | `-ImplicitCastExpr 0x1398297f0 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x1398297d8 <col:12> 'int' 10
    |-IfStmt 0x139829d48 <line:36:5, line:42:5>
    | |-CXXDependentScopeMemberExpr 0x139829848 <line:36:9, col:12> '<dependent type>' contains-errors lvalue ->conn
    | | `-RecoveryExpr 0x139829828 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139829d20 <col:18, line:42:5>
    |   |-BinaryOperator 0x139829b80 <line:37:2, col:58> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x139829890 <col:2> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | `-CallExpr 0x139829b48 <col:12, col:58> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x139829990 <col:12> 'int ()' Function 0x1398298d8 'print_connection_info' 'int ()'
    |   |   |-CXXDependentScopeMemberExpr 0x1398299d0 <col:34, col:37> '<dependent type>' contains-errors lvalue ->conn
    |   |   | `-RecoveryExpr 0x1398299b0 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x139829a18 <col:43> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |   `-CStyleCastExpr 0x139829b20 <col:46, col:57> 'int' contains-errors <IntegralCast>
    |   |     `-ParenExpr 0x139829b00 <col:51, col:57> 'long' contains-errors
    |   |       `-BinaryOperator 0x139829aa8 <col:52, col:56> 'long' contains-errors '-'
    |   |         |-ImplicitCastExpr 0x139829a78 <col:52> 'char *' contains-errors <LValueToRValue>
    |   |         | `-DeclRefExpr 0x139829a38 <col:52> 'char *' contains-errors lvalue Var 0x13980e090 'end' 'char *'
    |   |         `-ImplicitCastExpr 0x139829a90 <col:56> 'char *' <LValueToRValue>
    |   |           `-DeclRefExpr 0x139829a58 <col:56> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |-IfStmt 0x139829c78 <line:38:2, line:40:2>
    |   | |-BinaryOperator 0x139829bf8 <line:38:6, col:16> 'int' '<'
    |   | | |-ImplicitCastExpr 0x139829be0 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x139829ba0 <col:6> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | | `-IntegerLiteral 0x139829bc0 <col:16> 'int' 0
    |   | `-CompoundStmt 0x139829c60 <col:19, line:40:2>
    |   |   `-ReturnStmt 0x139829c50 <line:39:6, col:14>
    |   |     `-UnaryOperator 0x139829c38 <col:13, col:14> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x139829c18 <col:14> 'int' 1
    |   `-CompoundAssignOperator 0x139829cf0 <line:41:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |     |-DeclRefExpr 0x139829c98 <col:2> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |     `-ImplicitCastExpr 0x139829cd8 <col:7> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x139829cb8 <col:7> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |-ForStmt 0x13982b7a8 <line:45:5, line:51:5>
    | |-BinaryOperator 0x139829dc0 <line:45:10, col:12> 'unsigned int' '='
    | | |-DeclRefExpr 0x139829d68 <col:10> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x139829da8 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x139829d88 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13982b268 <col:15, col:20> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x139829de0 <col:15> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x13982b220 <col:17, col:20> '<dependent type>' contains-errors lvalue ->bandw_count
    | |   `-RecoveryExpr 0x13982b200 <col:17> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13982b2a8 <col:33, col:35> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x13982b288 <col:35> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | `-CompoundStmt 0x13982b780 <col:38, line:51:5>
    |   |-BinaryOperator 0x13982b5e0 <line:46:2, col:50> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13982b2c0 <col:2> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | `-CStyleCastExpr 0x13982b5b8 <col:12, col:50> 'int' contains-errors <Dependent>
    |   |   `-CallExpr 0x13982b568 <col:17, col:50> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13982b3c0 <col:17> 'int ()' Function 0x13982b308 'print_bandw' 'int ()'
    |   |     |-ArraySubscriptExpr 0x13982b498 <col:29, col:39> '<dependent type>' contains-errors lvalue
    |   |     | |-ImplicitCastExpr 0x13982b468 <col:29, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | `-CXXDependentScopeMemberExpr 0x13982b400 <col:29, col:32> '<dependent type>' contains-errors lvalue ->bandw
    |   |     | |   `-RecoveryExpr 0x13982b3e0 <col:29> '<dependent type>' contains-errors lvalue
    |   |     | `-ImplicitCastExpr 0x13982b480 <col:38> 'unsigned int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x13982b448 <col:38> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    |   |     |-DeclRefExpr 0x13982b4b8 <col:42> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |     `-BinaryOperator 0x13982b548 <col:45, col:49> 'long' contains-errors '-'
    |   |       |-ImplicitCastExpr 0x13982b518 <col:45> 'char *' contains-errors <LValueToRValue>
    |   |       | `-DeclRefExpr 0x13982b4d8 <col:45> 'char *' contains-errors lvalue Var 0x13980e090 'end' 'char *'
    |   |       `-ImplicitCastExpr 0x13982b530 <col:49> 'char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13982b4f8 <col:49> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |-IfStmt 0x13982b6d8 <line:47:2, line:49:2>
    |   | |-BinaryOperator 0x13982b658 <line:47:6, col:16> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13982b640 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13982b600 <col:6> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | | `-IntegerLiteral 0x13982b620 <col:16> 'int' 0
    |   | `-CompoundStmt 0x13982b6c0 <col:19, line:49:2>
    |   |   `-ReturnStmt 0x13982b6b0 <line:48:6, col:14>
    |   |     `-UnaryOperator 0x13982b698 <col:13, col:14> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x13982b678 <col:14> 'int' 1
    |   `-CompoundAssignOperator 0x13982b750 <line:50:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |     |-DeclRefExpr 0x13982b6f8 <col:2> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |     `-ImplicitCastExpr 0x13982b738 <col:7> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13982b718 <col:7> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |-ForStmt 0x13982be20 <line:54:5, line:60:5>
    | |-BinaryOperator 0x13982b838 <line:54:10, col:12> 'unsigned int' '='
    | | |-DeclRefExpr 0x13982b7e0 <col:10> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x13982b820 <col:12> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x13982b800 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13982b8e0 <col:15, col:20> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x13982b858 <col:15> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x13982b898 <col:17, col:20> '<dependent type>' contains-errors lvalue ->attr_count
    | |   `-RecoveryExpr 0x13982b878 <col:17> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13982b920 <col:32, col:34> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x13982b900 <col:34> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    | `-CompoundStmt 0x13982bdf8 <col:37, line:60:5>
    |   |-BinaryOperator 0x13982bc58 <line:55:2, col:48> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13982b938 <col:2> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | `-CStyleCastExpr 0x13982bc30 <col:12, col:48> 'int' contains-errors <Dependent>
    |   |   `-CallExpr 0x13982bbe0 <col:17, col:48> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x13982ba38 <col:17> 'int ()' Function 0x13982b980 'print_attr' 'int ()'
    |   |     |-ArraySubscriptExpr 0x13982bb10 <col:28, col:37> '<dependent type>' contains-errors lvalue
    |   |     | |-ImplicitCastExpr 0x13982bae0 <col:28, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |   |     | | `-CXXDependentScopeMemberExpr 0x13982ba78 <col:28, col:31> '<dependent type>' contains-errors lvalue ->attr
    |   |     | |   `-RecoveryExpr 0x13982ba58 <col:28> '<dependent type>' contains-errors lvalue
    |   |     | `-ImplicitCastExpr 0x13982baf8 <col:36> 'unsigned int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x13982bac0 <col:36> 'unsigned int' lvalue Var 0x13980e188 'i' 'unsigned int'
    |   |     |-DeclRefExpr 0x13982bb30 <col:40> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |     `-BinaryOperator 0x13982bbc0 <col:43, col:47> 'long' contains-errors '-'
    |   |       |-ImplicitCastExpr 0x13982bb90 <col:43> 'char *' contains-errors <LValueToRValue>
    |   |       | `-DeclRefExpr 0x13982bb50 <col:43> 'char *' contains-errors lvalue Var 0x13980e090 'end' 'char *'
    |   |       `-ImplicitCastExpr 0x13982bba8 <col:47> 'char *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x13982bb70 <col:47> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |   |-IfStmt 0x13982bd50 <line:56:2, line:58:2>
    |   | |-BinaryOperator 0x13982bcd0 <line:56:6, col:16> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13982bcb8 <col:6> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13982bc78 <col:6> 'int' lvalue Var 0x13980e220 'printed' 'int'
    |   | | `-IntegerLiteral 0x13982bc98 <col:16> 'int' 0
    |   | `-CompoundStmt 0x13982bd38 <col:19, line:58:2>
    |   |   `-ReturnStmt 0x13982bd28 <line:57:6, col:14>
    |   |     `-UnaryOperator 0x13982bd10 <col:13, col:14> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x13982bcf0 <col:14> 'int' 1
    |   `-CompoundAssignOperator 0x13982bdc8 <line:59:2, col:7> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |     |-DeclRefExpr 0x13982bd70 <col:2> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
    |     `-ImplicitCastExpr 0x13982bdb0 <col:7> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x13982bd90 <col:7> 'int' lvalue Var 0x13980e220 'printed' 'int'
    `-ReturnStmt 0x13982bf68 <line:62:5, col:23>
      `-CStyleCastExpr 0x13982bf40 <col:12, col:23> 'int' <IntegralCast>
        `-ParenExpr 0x13982bf20 <col:17, col:23> 'long'
          `-BinaryOperator 0x13982bec8 <col:18, col:20> 'long' '-'
            |-ImplicitCastExpr 0x13982be98 <col:18> 'char *' <LValueToRValue>
            | `-DeclRefExpr 0x13982be58 <col:18> 'char *' lvalue Var 0x13980dfc0 'p' 'char *'
            `-ImplicitCastExpr 0x13982beb0 <col:20> 'char *' <LValueToRValue>
              `-DeclRefExpr 0x13982be78 <col:20> 'char *' lvalue ParmVar 0x13980dd70 'buf' 'char *'
