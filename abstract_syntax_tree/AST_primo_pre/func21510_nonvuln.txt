`-FunctionDecl 0x126928758  line:1:12 smack_inode_getattr 'int (const struct path *)' static
  |-ParmVarDecl 0x126928648 <col:32, col:51> col:51 used path 'const struct path *'
  `-CompoundStmt 0x127008a48 <line:2:1, line:12:1>
    |-DeclStmt 0x126944dc8 <line:3:2, col:26>
    | |-RecordDecl 0x126944c50 <col:2, col:9> col:9 struct smk_audit_info
    | `-VarDecl 0x126944d48 <col:2, col:24> col:24 invalid ad 'struct smk_audit_info'
    |-DeclStmt 0x1269451a0 <line:4:2, col:53>
    | |-RecordDecl 0x126944de0 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x126944f48 <col:2, col:52> col:16 used inode 'struct inode *' cinit
    |   `-CallExpr 0x126945160 <col:24, col:52> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1269450e0 <col:24> 'int ()' Function 0x126945028 'd_backing_inode' 'int ()'
    |     `-RecoveryExpr 0x126945138 <col:40, col:46> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x126945100 <col:40> 'const struct path *' lvalue ParmVar 0x126928648 'path' 'const struct path *'
    |-DeclStmt 0x126945238 <line:5:2, col:8>
    | `-VarDecl 0x1269451d0 <col:2, col:6> col:6 used rc 'int'
    |-CallExpr 0x1269454c8 <line:7:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x126945330 <col:2> 'int ()' Function 0x126945278 'smk_ad_init' 'int ()'
    | |-UnaryOperator 0x126945370 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x126945350 <col:15> '<dependent type>' contains-errors lvalue
    | |-PredefinedExpr 0x126945440 <col:19> 'const char[20]' lvalue __func__
    | | `-StringLiteral 0x126945410 <col:19> 'const char[20]' lvalue "smack_inode_getattr"
    | `-RecoveryExpr 0x1269454a8 <col:29> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x126945688 <line:8:2, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1269455e0 <col:2> 'int ()' Function 0x126945528 'smk_ad_setfield_u_fs_path' 'int ()'
    | |-UnaryOperator 0x126945620 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x126945600 <col:29> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x126945670 <col:33, col:34> 'const struct path' lvalue prefix '*' cannot overflow
    |   `-ImplicitCastExpr 0x126945658 <col:34> 'const struct path *' <LValueToRValue>
    |     `-DeclRefExpr 0x126945638 <col:34> 'const struct path *' lvalue ParmVar 0x126928648 'path' 'const struct path *'
    |-BinaryOperator 0x126945b38 <line:9:2, col:52> 'int' contains-errors '='
    | |-DeclRefExpr 0x1269456b8 <col:2> 'int' lvalue Var 0x1269451d0 'rc' 'int'
    | `-CallExpr 0x126945b00 <col:7, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1269457b8 <col:7> 'int ()' Function 0x126945700 'smk_curacc' 'int ()'
    |   |-CallExpr 0x126945aa0 <col:18, col:36> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x126945a88 <col:18> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1269458b8 <col:18> 'int ()' Function 0x126945800 'smk_of_inode' 'int ()'
    |   | `-ImplicitCastExpr 0x126945ac8 <col:31> 'struct inode *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x1269458d8 <col:31> 'struct inode *' contains-errors lvalue Var 0x126944f48 'inode' 'struct inode *'
    |   |-RecoveryExpr 0x126945ae0 <col:39> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1269459c0 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1269459a0 <col:50> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1270089e0 <line:10:2, col:39> 'int' contains-errors '='
    | |-DeclRefExpr 0x126945b58 <col:2> 'int' lvalue Var 0x1269451d0 'rc' 'int'
    | `-CallExpr 0x1270089a8 <col:7, col:39> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1270088b8 <col:7> 'int ()' Function 0x127008800 'smk_bu_inode' 'int ()'
    |   |-DeclRefExpr 0x1270088d8 <col:20> 'struct inode *' contains-errors lvalue Var 0x126944f48 'inode' 'struct inode *'
    |   |-RecoveryExpr 0x127008988 <col:27> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x127008910 <col:37> 'int' lvalue Var 0x1269451d0 'rc' 'int'
    `-ReturnStmt 0x127008a38 <line:11:2, col:9>
      `-ImplicitCastExpr 0x127008a20 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x127008a00 <col:9> 'int' lvalue Var 0x1269451d0 'rc' 'int'
