`-FunctionDecl 0x122928318  line:1:1 invalid agoo_ws_calc_len 'int (int, int *, int)'
  |-ParmVarDecl 0x1229280f0 <col:18, col:26> col:26 invalid c 'int'
  |-ParmVarDecl 0x1229281a8 <col:29, col:38> col:38 invalid buf 'int *'
  |-ParmVarDecl 0x122928228 <col:43, col:50> col:50 invalid cnt 'int'
  `-CompoundStmt 0x122943028 <col:55, line:37:1>
    |-IfStmt 0x122942958 <line:6:5, line:9:5>
    | |-RecoveryExpr 0x1229284b8 <line:6:9, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x122942938 <col:27, line:9:5>
    |   |-CallExpr 0x1229428a0 <line:7:2, col:64> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x122942888 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x122928630 <col:2> 'int ()' Function 0x122928578 'agoo_log_cat' 'int ()'
    |   | |-UnaryOperator 0x122942830 <col:15, col:16> 'int (*)()' prefix '&' cannot overflow
    |   | | `-DeclRefExpr 0x1229287c0 <col:16> 'int ()' Function 0x122928578 'agoo_log_cat' 'int ()'
    |   | |-ImplicitCastExpr 0x1229428d8 <col:32> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x1229286c0 <col:32> 'char[4]' lvalue "STR"
    |   | `-CStyleCastExpr 0x122942860 <col:39, col:62> 'unsigned long long' contains-errors <Dependent>
    |   |   `-CXXDependentScopeMemberExpr 0x122928700 <col:59, col:62> '<dependent type>' contains-errors lvalue ->id
    |   |     `-RecoveryExpr 0x1229286e0 <col:59> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x122942928 <line:8:2, col:10>
    |     `-UnaryOperator 0x122942910 <col:9, col:10> 'int' prefix '-'
    |       `-IntegerLiteral 0x1229428f0 <col:10> 'int' 1
    |-IfStmt 0x122942b30 <line:13:5, line:15:5>
    | |-BinaryOperator 0x122942ac8 <line:13:9, col:15> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x122942a88 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x122942aa8 <col:15> 'int' 3
    | `-CompoundStmt 0x122942b18 <col:18, line:15:5>
    |   `-ReturnStmt 0x122942b08 <line:14:2, col:9>
    |     `-IntegerLiteral 0x122942ae8 <col:9> 'int' 0
    `-IfStmt 0x122942f98 <line:17:5, line:35:5> has_else
      |-BinaryOperator 0x122942bc8 <line:17:9, col:16> 'int' contains-errors '=='
      | |-IntegerLiteral 0x122942b50 <col:9> 'int' 126
      | `-RecoveryExpr 0x122942ba8 <col:16> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x122942d18 <col:22, line:23:5>
      | `-IfStmt 0x122942c90 <line:18:2, line:20:2>
      |   |-BinaryOperator 0x122942c28 <line:18:6, col:12> 'int' contains-errors '<'
      |   | |-RecoveryExpr 0x122942be8 <col:6> '<dependent type>' contains-errors lvalue
      |   | `-IntegerLiteral 0x122942c08 <col:12> 'int' 5
      |   `-CompoundStmt 0x122942c78 <col:15, line:20:2>
      |     `-ReturnStmt 0x122942c68 <line:19:6, col:13>
      |       `-IntegerLiteral 0x122942c48 <col:13> 'int' 0
      `-IfStmt 0x122942f78 <line:23:12, line:35:5>
        |-RecoveryExpr 0x122942d50 <line:23:16, col:23> '_Bool' contains-errors
        `-CompoundStmt 0x122942f60 <col:29, line:35:5>
          `-IfStmt 0x122942e60 <line:24:2, line:26:2>
            |-BinaryOperator 0x122942df8 <line:24:6, col:16> 'int' contains-errors '<'
            | |-CXXDependentScopeMemberExpr 0x122942d90 <col:6, col:9> '<dependent type>' contains-errors lvalue ->bcnt
            | | `-RecoveryExpr 0x122942d70 <col:6> '<dependent type>' contains-errors lvalue
            | `-IntegerLiteral 0x122942dd8 <col:16> 'int' 11
            `-CompoundStmt 0x122942e48 <col:20, line:26:2>
              `-ReturnStmt 0x122942e38 <line:25:6, col:13>
                `-IntegerLiteral 0x122942e18 <col:13> 'int' 0
