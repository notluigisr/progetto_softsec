`-FunctionDecl 0x12b128b88  line:1:5 passwd_to_utf16 'int (unsigned char *, int, int, unsigned char *)'
  |-ParmVarDecl 0x12b128908 <col:21, col:36> col:36 used in_passwd 'unsigned char *'
  |-ParmVarDecl 0x12b128988 <line:2:21, col:25> col:25 used length 'int'
  |-ParmVarDecl 0x12b128a08 <line:3:21, col:25> col:25 max_length 'int'
  |-ParmVarDecl 0x12b128a88 <line:4:21, col:36> col:36 used out_passwd 'unsigned char *'
  `-CompoundStmt 0x12b141480 <line:5:1, line:78:1>
    |-DeclStmt 0x12b128d18 <line:23:5, col:10>
    | `-VarDecl 0x12b128cb0 <col:5, col:9> col:9 used i 'int'
    |-ForStmt 0x12b1413c0 <line:24:5, line:27:5>
    | |-BinaryOperator 0x12b128d70 <line:24:10, col:12> 'int' '='
    | | |-DeclRefExpr 0x12b128d30 <col:10> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    | | `-IntegerLiteral 0x12b128d50 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12b128e40 <col:14, col:23> 'int' '<'
    | | |-ImplicitCastExpr 0x12b128e28 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12b128d90 <col:14> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    | | `-BinaryOperator 0x12b128e08 <col:16, col:23> 'int' '+'
    | |   |-ImplicitCastExpr 0x12b128df0 <col:16> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12b128db0 <col:16> 'int' lvalue ParmVar 0x12b128988 'length' 'int'
    | |   `-IntegerLiteral 0x12b128dd0 <col:23> 'int' 1
    | |-UnaryOperator 0x12b128e80 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x12b128e60 <col:25> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    | `-CompoundStmt 0x12b1413a0 <col:30, line:27:5>
    |   |-BinaryOperator 0x12b141218 <line:25:9, col:38> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x12b128f48 <col:9, col:23> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x12b128f30 <col:9> 'unsigned char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12b128e98 <col:9> 'unsigned char *' lvalue ParmVar 0x12b128a88 'out_passwd' 'unsigned char *'
    |   | | `-BinaryOperator 0x12b128f10 <col:20, col:22> 'int' '*'
    |   | |   |-ImplicitCastExpr 0x12b128ef8 <col:20> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x12b128eb8 <col:20> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    |   | |   `-IntegerLiteral 0x12b128ed8 <col:22> 'int' 2
    |   | `-ImplicitCastExpr 0x12b141200 <col:27, col:38> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x12b128fd8 <col:27, col:38> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x12b128fa8 <col:27> 'unsigned char *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12b128f68 <col:27> 'unsigned char *' lvalue ParmVar 0x12b128908 'in_passwd' 'unsigned char *'
    |   |     `-ImplicitCastExpr 0x12b128fc0 <col:37> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12b128f88 <col:37> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    |   `-BinaryOperator 0x12b141380 <line:26:9, col:29> 'unsigned char' '='
    |     |-ArraySubscriptExpr 0x12b141328 <col:9, col:25> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x12b141310 <col:9> 'unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12b141238 <col:9> 'unsigned char *' lvalue ParmVar 0x12b128a88 'out_passwd' 'unsigned char *'
    |     | `-BinaryOperator 0x12b1412f0 <col:20, col:24> 'int' '+'
    |     |   |-BinaryOperator 0x12b1412b0 <col:20, col:22> 'int' '*'
    |     |   | |-ImplicitCastExpr 0x12b141298 <col:20> 'int' <LValueToRValue>
    |     |   | | `-DeclRefExpr 0x12b141258 <col:20> 'int' lvalue Var 0x12b128cb0 'i' 'int'
    |     |   | `-IntegerLiteral 0x12b141278 <col:22> 'int' 2
    |     |   `-IntegerLiteral 0x12b1412d0 <col:24> 'int' 1
    |     `-ImplicitCastExpr 0x12b141368 <col:29> 'unsigned char' <IntegralCast>
    |       `-IntegerLiteral 0x12b141348 <col:29> 'int' 0
    `-ReturnStmt 0x12b141470 <line:28:5, col:19>
      `-BinaryOperator 0x12b141450 <col:12, col:19> 'int' '*'
        |-ImplicitCastExpr 0x12b141438 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12b1413f8 <col:12> 'int' lvalue ParmVar 0x12b128988 'length' 'int'
        `-IntegerLiteral 0x12b141418 <col:19> 'int' 2
