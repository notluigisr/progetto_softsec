`-FunctionDecl 0x12100de80  line:1:6 invalid spl_array_iterator_append 'void (int *, int *)'
  |-ParmVarDecl 0x12100dd28 <col:32, col:38> col:38 invalid object 'int *'
  |-ParmVarDecl 0x12100dda8 <col:46, col:52> col:52 invalid append_value 'int *'
  `-CompoundStmt 0x1210278d0 <line:2:1, line:20:1>
    |-IfStmt 0x12100e310 <line:6:2, line:9:2>
    | |-UnaryOperator 0x12100e1b8 <line:6:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12100e1a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12100e180 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12100e2f8 <col:12, line:9:2>
    |   `-ReturnStmt 0x12100e2e8 <line:8:3>
    |-IfStmt 0x121027620 <line:11:2, line:14:2>
    | |-BinaryOperator 0x1210275a0 <line:11:6, col:33> 'int' contains-errors '=='
    | | |-CallExpr 0x121027558 <col:6, col:28> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x121027410 <col:6> 'int ()' Function 0x12100e358 'Z_TYPE_P' 'int ()'
    | | | `-CXXDependentScopeMemberExpr 0x121027510 <col:15, col:23> '<dependent type>' contains-errors lvalue ->array
    | | |   `-RecoveryExpr 0x1210274f0 <col:15> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x121027580 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x121027608 <col:44, line:14:2>
    |   `-ReturnStmt 0x1210275f8 <line:13:3>
    `-IfStmt 0x1210278b0 <line:17:2, line:19:2>
      |-RecoveryExpr 0x121027780 <line:17:6, col:15> '_Bool' contains-errors
      `-CompoundStmt 0x1210278a0 <col:20, line:19:2>
