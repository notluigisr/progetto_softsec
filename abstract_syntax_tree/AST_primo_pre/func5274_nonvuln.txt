`-FunctionDecl 0x16000de58  line:1:14 invalid XMLRPC_UtilityCreateFault 'int (int, const char *)'
  |-ParmVarDecl 0x16000dcf0 <col:40, col:44> col:44 used fault_code 'int'
  |-ParmVarDecl 0x16000dd70 <col:56, col:68> col:68 used fault_string 'const char *'
  `-CompoundStmt 0x1610093e0 <col:82, line:60:1>
    |-DeclStmt 0x16000dfc8 <line:4:4, col:23>
    | `-VarDecl 0x16000df28 <col:4, col:19> col:10 used string 'char *' cinit
    |   `-RecoveryExpr 0x16000dfa8 <col:19> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x16000e1f0 <line:6:4, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x16000e140 <col:4> 'int ()' Function 0x16000e088 'simplestring_init' 'int ()'
    | `-UnaryOperator 0x16000e1d8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x16000e1b8 <col:23> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x16000e250 <line:8:4, line:39:4>
    | |-ImplicitCastExpr 0x16000e238 <line:8:12> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x16000e218 <col:12> 'int' lvalue ParmVar 0x16000dcf0 'fault_code' 'int'
    | `-CompoundStmt 0x161008bf8 <col:24, line:39:4>
    |   |-BinaryOperator 0x16000e308 <line:10:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x16000e290 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x16000e2e8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x16000e328 <line:11:3>
    |   |-BinaryOperator 0x16000e3c0 <line:13:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x16000e348 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x16000e3a0 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x16000e3e0 <line:14:3>
    |   |-BinaryOperator 0x161008878 <line:16:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x161008800 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x161008858 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x161008898 <line:17:3>
    |   |-BinaryOperator 0x161008930 <line:19:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x1610088b8 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x161008910 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x161008950 <line:20:3>
    |   |-BinaryOperator 0x1610089e8 <line:22:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x161008970 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x1610089c8 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x161008a08 <line:23:3>
    |   |-BinaryOperator 0x161008aa0 <line:25:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x161008a28 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x161008a80 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x161008ac0 <line:26:3>
    |   |-BinaryOperator 0x161008b58 <line:28:3, col:12> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x161008ae0 <col:3> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    |   | `-RecoveryExpr 0x161008b38 <col:12> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x161008b78 <line:29:3>
    |   |-BreakStmt 0x161008ba0 <line:32:3>
    |   |-BreakStmt 0x161008bc8 <line:35:3>
    |   `-BreakStmt 0x161008bf0 <line:38:3>
    |-IfStmt 0x161008ed0 <line:43:4, line:45:4>
    | |-BinaryOperator 0x161008e20 <line:43:7, col:17> 'int' contains-errors '&&'
    | | |-ImplicitCastExpr 0x161008df0 <col:7> 'char *' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x161008db0 <col:7> 'char *' contains-errors lvalue Var 0x16000df28 'string' 'char *'
    | | `-ImplicitCastExpr 0x161008e08 <col:17> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x161008dd0 <col:17> 'const char *' lvalue ParmVar 0x16000dd70 'fault_string' 'const char *'
    | `-CompoundStmt 0x161008ec0 <col:31, line:45:4>
    `-IfStmt 0x1610092c0 <line:49:4, line:55:4>
      |-RecoveryExpr 0x161008f30 <line:49:7, col:19> '_Bool' contains-errors
      `-CompoundStmt 0x1610092b0 <col:24, line:55:4>
