`-FunctionDecl 0x15c00ddc8  line:1:1 invalid plugin_parse_file 'int (int)'
  |-ParmVarDecl 0x15c00dcf0 <col:20, <invalid sloc>> col:25 invalid 'int'
  `-CompoundStmt 0x15c027cd0 <line:3:1, line:36:1>
    `-IfStmt 0x15c027ca0 <line:9:3, line:35:3> has_else
      |-BinaryOperator 0x15c00e0e8 <line:9:7, col:17> 'int' contains-errors '!='
      | |-RecoveryExpr 0x15c00e0c8 <col:7> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x15c00e088 <col:17> 'int' 0
      |-CompoundStmt 0x15c027c78 <col:20, line:30:3>
      | `-IfStmt 0x15c027c48 <line:16:5, line:29:5> has_else
      |   |-CallExpr 0x15c00e340 <line:16:9, col:51> '<dependent type>' contains-errors
      |   | |-DeclRefExpr 0x15c00e1e8 <col:9> 'int ()' Function 0x15c00e130 'g_module_symbol' 'int ()'
      |   | |-RecoveryExpr 0x15c00e2e8 <col:26> '<dependent type>' contains-errors lvalue
      |   | |-StringLiteral 0x15c00e260 <col:34> 'char[4]' lvalue "STR"
      |   | `-UnaryOperator 0x15c00e328 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   |   `-RecoveryExpr 0x15c00e308 <col:42> '<dependent type>' contains-errors lvalue
      |   |-CompoundStmt 0x15c027b20 <col:54, line:23:5>
      |   | `-CallExpr 0x15c027938 <line:21:7, col:37> '<dependent type>' contains-errors
      |   |   |-DeclRefExpr 0x15c0278b8 <col:7> 'int ()' Function 0x15c027800 'g_module_make_resident' 'int ()'
      |   |   `-RecoveryExpr 0x15c027918 <col:31> '<dependent type>' contains-errors lvalue
      |   `-CompoundStmt 0x15c027c38 <line:23:12, line:29:5>
      `-CompoundStmt 0x15c027c90 <line:30:10, line:35:3>
