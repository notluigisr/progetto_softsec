`-FunctionDecl 0x12c80deb8  line:1:8 invalid cJSON_CreateFloatArray 'int *(double *, int)'
  |-ParmVarDecl 0x12c80dd28 <col:32, col:40> col:40 used numbers 'double *'
  |-ParmVarDecl 0x12c80dda8 <col:49, col:53> col:53 used count 'int'
  `-CompoundStmt 0x12d809210 <line:2:1, line:14:1>
    |-DeclStmt 0x12c80dff0 <line:3:2, col:7>
    | `-VarDecl 0x12c80df88 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x12d809190 <line:5:2, line:12:2>
    | |-BinaryOperator 0x12c80e358 <line:5:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x12c80e318 <col:8> 'int' lvalue Var 0x12c80df88 'i' 'int'
    | | `-IntegerLiteral 0x12c80e338 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12d808cb0 <col:15, col:24> 'int' contains-errors '&&'
    | | |-RecoveryExpr 0x12d808c40 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12d808c90 <col:20, col:24> 'int' '<'
    | |   |-ImplicitCastExpr 0x12d808c60 <col:20> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c80e390 <col:20> 'int' lvalue Var 0x12c80df88 'i' 'int'
    | |   `-ImplicitCastExpr 0x12d808c78 <col:24> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x12c80e3b0 <col:24> 'int' lvalue ParmVar 0x12c80dda8 'count' 'int'
    | |-UnaryOperator 0x12d808cf0 <col:31, col:33> 'int' prefix '++'
    | | `-DeclRefExpr 0x12d808cd0 <col:33> 'int' lvalue Var 0x12c80df88 'i' 'int'
    | `-CompoundStmt 0x12d809178 <col:37, line:12:2>
    |   `-IfStmt 0x12d809130 <line:7:3, line:10:24> has_else
    |     |-UnaryOperator 0x12d808f28 <line:7:8, col:10> 'int' prefix '!' cannot overflow
    |     | `-ImplicitCastExpr 0x12d808f10 <col:10> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12d808ef0 <col:10> 'int' lvalue Var 0x12c80df88 'i' 'int'
    |     |-NullStmt 0x12d809128 <line:8:4>
    |     `-CallExpr 0x12d8090f8 <line:10:4, col:24> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12d809038 <col:4> 'int ()' Function 0x12d808f80 'suffix_object' 'int ()'
    |       |-RecoveryExpr 0x12d8090b8 <col:19> '<dependent type>' contains-errors lvalue
    |       `-RecoveryExpr 0x12d8090d8 <col:22> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12d809200 <line:13:2, col:9>
      `-RecoveryExpr 0x12d8091e0 <col:9> '<dependent type>' contains-errors lvalue
