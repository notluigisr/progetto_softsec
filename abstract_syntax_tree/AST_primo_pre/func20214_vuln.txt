`-FunctionDecl 0x12e80e350  line:1:13 __sk_destruct 'void (struct rcu_head *)' static
  |-ParmVarDecl 0x12e80e248 <col:27, col:44> col:44 used head 'struct rcu_head *'
  `-CompoundStmt 0x12e1228b8 <line:2:1, line:37:1>
    |-DeclStmt 0x12e8269c0 <line:3:2, col:59>
    | |-RecordDecl 0x12e826648 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x12e8267b8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-DeclStmt 0x12e826bc8 <line:4:2, col:26>
    | |-RecordDecl 0x12e8269d8 <col:2, col:9> col:9 struct sk_filter
    | `-VarDecl 0x12e826b48 <col:2, col:20> col:20 used filter 'struct sk_filter *'
    |-IfStmt 0x12e826ce8 <line:6:2, line:7:21>
    | |-RecoveryExpr 0x12e826c18 <line:6:6, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e826be0 <col:6> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-CallExpr 0x12e826cc0 <line:7:3, col:21> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x12e826c78 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12e826c40 <col:3> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |   `-DeclRefExpr 0x12e826ca0 <col:19> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |-BinaryOperator 0x12e827098 <line:9:2, line:10:50> 'struct sk_filter *' contains-errors '='
    | |-DeclRefExpr 0x12e826d08 <line:9:2> 'struct sk_filter *' lvalue Var 0x12e826b48 'filter' 'struct sk_filter *'
    | `-CallExpr 0x12e827068 <col:11, line:10:50> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e826e08 <line:9:11> 'int ()' Function 0x12e826d50 'rcu_dereference_check' 'int ()'
    |   |-RecoveryExpr 0x12e826e60 <col:33, col:37> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12e826e28 <col:33> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |   `-BinaryOperator 0x12e827048 <line:10:12, col:49> 'int' contains-errors '=='
    |     |-CallExpr 0x12e827000 <col:12, col:44> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x12e826f68 <col:12> 'int ()' Function 0x12e826eb0 'refcount_read' 'int ()'
    |     | `-UnaryOperator 0x12e826fe8 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x12e826fc0 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x12e826f88 <col:27> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |     `-IntegerLiteral 0x12e827028 <col:49> 'int' 0
    |-IfStmt 0x12e8274f0 <line:11:2, line:14:2>
    | |-ImplicitCastExpr 0x12e8270d8 <line:11:6> 'struct sk_filter *' <LValueToRValue>
    | | `-DeclRefExpr 0x12e8270b8 <col:6> 'struct sk_filter *' lvalue Var 0x12e826b48 'filter' 'struct sk_filter *'
    | `-CompoundStmt 0x12e8274d0 <col:14, line:14:2>
    |   |-CallExpr 0x12e827278 <line:12:3, col:32> 'int'
    |   | |-ImplicitCastExpr 0x12e827260 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e8271d0 <col:3> 'int ()' Function 0x12e827118 'sk_filter_uncharge' 'int ()'
    |   | |-ImplicitCastExpr 0x12e8272a8 <col:22> 'struct sock *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12e8271f0 <col:22> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |   | `-ImplicitCastExpr 0x12e8272c0 <col:26> 'struct sk_filter *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e827210 <col:26> 'struct sk_filter *' lvalue Var 0x12e826b48 'filter' 'struct sk_filter *'
    |   `-CallExpr 0x12e8274a0 <line:13:3, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e8273b8 <col:3> 'int ()' Function 0x12e827300 'RCU_INIT_POINTER' 'int ()'
    |     |-RecoveryExpr 0x12e827410 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x12e8273d8 <col:20> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |     `-RecoveryExpr 0x12e827480 <col:35> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12e8292a8 <line:16:2, col:47> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e829200 <col:2> 'int ()' Function 0x12e827538 'sock_disable_timestamp' 'int ()'
    | |-DeclRefExpr 0x12e829220 <col:25> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x12e829288 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e829798 <line:22:2, line:24:46>
    | |-CallExpr 0x12e829450 <line:22:6, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e8293b8 <col:6> 'int ()' Function 0x12e829300 'atomic_read' 'int ()'
    | | `-UnaryOperator 0x12e829438 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x12e829410 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e8293d8 <col:19> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-CallExpr 0x12e829760 <line:23:3, line:24:46> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e829558 <line:23:3> 'int ()' Function 0x12e8294a0 'pr_debug' 'int ()'
    |   |-StringLiteral 0x12e8295c0 <col:12> 'char[4]' lvalue "STR"
    |   |-PredefinedExpr 0x12e829688 <line:24:5> 'const char[14]' lvalue __func__
    |   | `-StringLiteral 0x12e829660 <col:5> 'const char[14]' lvalue "__sk_destruct"
    |   `-CallExpr 0x12e829738 <col:15, col:45> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e8296a0 <col:15> 'int ()' Function 0x12e829300 'atomic_read' 'int ()'
    |     `-UnaryOperator 0x12e829720 <col:27, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12e8296f8 <col:28, col:32> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12e8296c0 <col:28> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |-IfStmt 0x12e829af0 <line:26:2, line:29:2>
    | |-CXXDependentScopeMemberExpr 0x12e829818 <line:26:6, col:18> '<dependent type>' contains-errors lvalue .page
    | | `-RecoveryExpr 0x12e8297f0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12e8297b8 <col:6> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-CompoundStmt 0x12e829ad8 <col:24, line:29:2>
    |   `-CallExpr 0x12e829a08 <line:27:3, col:28> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12e829940 <col:3> 'int ()' Function 0x12e829888 'put_page' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x12e8299c0 <col:12, col:24> '<dependent type>' contains-errors lvalue .page
    |       `-RecoveryExpr 0x12e829998 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12e829960 <col:12> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |-IfStmt 0x12e829cf8 <line:31:2, line:32:28>
    | |-RecoveryExpr 0x12e829b48 <line:31:6, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12e829b10 <col:6> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-CallExpr 0x12e829cd0 <line:32:3, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12e829c50 <col:3> 'int ()' Function 0x12e829b98 'put_cred' 'int ()'
    |   `-RecoveryExpr 0x12e829ca8 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x12e829c70 <col:12> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |-CallExpr 0x12e829e78 <line:33:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12e829df8 <col:2> 'int ()' Function 0x12e829d40 'put_pid' 'int ()'
    | `-RecoveryExpr 0x12e829e50 <col:10, col:14> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e829e18 <col:10> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    |-IfStmt 0x12e1226e8 <line:34:2, line:35:23>
    | |-CallExpr 0x12e82a000 <line:34:6, col:30> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12e829f80 <col:6> 'int ()' Function 0x12e829ec8 'likely' 'int ()'
    | | `-RecoveryExpr 0x12e829fd8 <col:13, col:17> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12e829fa0 <col:13> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    | `-CallExpr 0x12e1226c0 <line:35:3, col:23> 'int'
    |   |-ImplicitCastExpr 0x12e1226a8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12e82a108 <col:3> 'int ()' Function 0x12e82a050 'put_net' 'int ()'
    |   `-CallExpr 0x12e122668 <col:11, col:22> 'int'
    |     |-ImplicitCastExpr 0x12e122650 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12e122610 <col:11> 'int ()' Function 0x12e82a150 'sock_net' 'int ()'
    |     `-ImplicitCastExpr 0x12e122690 <col:20> 'struct sock *' <LValueToRValue>
    |       `-DeclRefExpr 0x12e122630 <col:20> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
    `-CallExpr 0x12e122888 <line:36:2, col:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12e1227e8 <col:2> 'int ()' Function 0x12e122730 'sk_prot_free' 'int ()'
      |-RecoveryExpr 0x12e122840 <col:15, col:19> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x12e122808 <col:15> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
      `-DeclRefExpr 0x12e122868 <col:36> 'struct sock *' lvalue Var 0x12e8267b8 'sk' 'struct sock *'
