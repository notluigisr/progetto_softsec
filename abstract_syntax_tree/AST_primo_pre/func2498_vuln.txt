`-FunctionDecl 0x120128288  line:1:14 invalid EluPrepare 'int (int *, int *)'
  |-ParmVarDecl 0x120128128 <col:25, col:40> col:40 invalid context 'int *'
  |-ParmVarDecl 0x1201281a8 <col:49, col:61> col:61 invalid node 'int *'
  `-CompoundStmt 0x1070091c0 <col:67, line:13:1>
    |-DeclStmt 0x1201285d8 <line:2:3, col:57>
    | `-VarDecl 0x120128358 <col:3, col:23> col:23 invalid input 'const int *'
    |-IfStmt 0x107009020 <line:7:3, line:11:3>
    | |-BinaryOperator 0x107008f48 <line:7:7, col:22> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x107008ea8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type
    | | | `-RecoveryExpr 0x107008e88 <col:7> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x107008f28 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x107009010 <col:35, line:11:3>
    `-ReturnStmt 0x1070091b0 <line:12:3, col:38>
      `-CallExpr 0x107009180 <col:10, col:38> '<dependent type>' contains-errors
        |-DeclRefExpr 0x107009120 <col:10> 'int ()' Function 0x107009068 'GenericPrepare' 'int ()'
        |-RecoveryExpr 0x107009140 <col:25> '<dependent type>' contains-errors lvalue
        `-RecoveryExpr 0x107009160 <col:34> '<dependent type>' contains-errors lvalue
