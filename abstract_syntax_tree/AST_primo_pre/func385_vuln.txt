`-FunctionDecl 0x14b128598  line:1:12 DefragMfIpv4Test 'int (void)' static
  `-CompoundStmt 0x14b142b20 <line:2:1, line:53:1>
    |-DeclStmt 0x14b128728 <line:3:5, col:19>
    | `-VarDecl 0x14b1286a0 <col:5, col:18> col:9 used retval 'int' cinit
    |   `-IntegerLiteral 0x14b128708 <col:18> 'int' 0
    |-DeclStmt 0x14b1287e0 <line:4:5, col:18>
    | `-VarDecl 0x14b128758 <col:5, col:17> col:9 used ip_id 'int' cinit
    |   `-IntegerLiteral 0x14b1287c0 <col:17> 'int' 9
    |-CallExpr 0x14b1289b8 <line:7:5, col:16> 'int'
    | `-ImplicitCastExpr 0x14b1289a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14b128950 <col:5> 'int ()' Function 0x14b128898 'DefragInit' 'int ()'
    |-IfStmt 0x14b1421a0 <line:12:5, line:14:5>
    | |-BinaryOperator 0x14b142100 <line:12:9, col:43> 'int' contains-errors '||'
    | | |-BinaryOperator 0x14b142080 <col:9, col:29> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x14b142000 <col:9, col:15> 'int' contains-errors '=='
    | | | | |-RecoveryExpr 0x14b141fc0 <col:9> '<dependent type>' contains-errors lvalue
    | | | | `-RecoveryExpr 0x14b141fe0 <col:15> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x14b142060 <col:23, col:29> 'int' contains-errors '=='
    | | |   |-RecoveryExpr 0x14b142020 <col:23> '<dependent type>' contains-errors lvalue
    | | |   `-RecoveryExpr 0x14b142040 <col:29> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14b1420e0 <col:37, col:43> 'int' contains-errors '=='
    | |   |-RecoveryExpr 0x14b1420a0 <col:37> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x14b1420c0 <col:43> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14b142188 <col:49, line:14:5>
    |   `-GotoStmt 0x14b142170 <line:13:9, col:14> 'end' 0x14b142120
    |-IfStmt 0x14b1423b0 <line:17:5, line:19:5>
    | |-RecoveryExpr 0x14b142360 <line:17:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142398 <col:20, line:19:5>
    |   `-GotoStmt 0x14b142380 <line:18:9, col:14> 'end' 0x14b142120
    |-IfStmt 0x14b142440 <line:22:5, line:24:5>
    | |-RecoveryExpr 0x14b1423f0 <line:22:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142428 <col:20, line:24:5>
    |   `-GotoStmt 0x14b142410 <line:23:9, col:14> 'end' 0x14b142120
    |-IfStmt 0x14b1424d0 <line:28:5, line:30:5>
    | |-RecoveryExpr 0x14b142480 <line:28:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14b1424b8 <col:20, line:30:5>
    |   `-GotoStmt 0x14b1424a0 <line:29:9, col:14> 'end' 0x14b142120
    |-IfStmt 0x14b142660 <line:33:5, line:35:5>
    | |-RecoveryExpr 0x14b142610 <line:33:9, col:30> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142648 <col:34, line:35:5>
    |   `-GotoStmt 0x14b142630 <line:34:9, col:14> 'end' 0x14b142120
    |-BinaryOperator 0x14b1426c0 <line:37:5, col:14> 'int' '='
    | |-DeclRefExpr 0x14b142680 <col:5> 'int' lvalue Var 0x14b1286a0 'retval' 'int'
    | `-IntegerLiteral 0x14b1426a0 <col:14> 'int' 1
    |-LabelStmt 0x14b142830 <line:38:1, line:41:5> 'end'
    | `-IfStmt 0x14b142810 <line:39:5, line:41:5>
    |   |-RecoveryExpr 0x14b1426e0 <line:39:9, col:15> '_Bool' contains-errors
    |   `-CompoundStmt 0x14b142800 <col:21, line:41:5>
    |-IfStmt 0x14b1428a0 <line:42:5, line:44:5>
    | |-RecoveryExpr 0x14b142850 <line:42:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142890 <col:21, line:44:5>
    |-IfStmt 0x14b142910 <line:45:5, line:47:5>
    | |-RecoveryExpr 0x14b1428c0 <line:45:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142900 <col:21, line:47:5>
    |-IfStmt 0x14b142980 <line:48:5, line:50:5>
    | |-RecoveryExpr 0x14b142930 <line:48:9, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x14b142970 <col:20, line:50:5>
    |-CallExpr 0x14b142ab8 <line:51:5, col:19> 'int'
    | `-ImplicitCastExpr 0x14b142aa0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14b142a80 <col:5> 'int ()' Function 0x14b1429c8 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x14b142b10 <line:52:5, col:12>
      `-ImplicitCastExpr 0x14b142af8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14b142ad8 <col:12> 'int' lvalue Var 0x14b1286a0 'retval' 'int'
