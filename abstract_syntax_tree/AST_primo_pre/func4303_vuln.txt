`-FunctionDecl 0x13300de88  line:1:16 invalid drop_sync 'int (int *, int)' static
  |-ParmVarDecl 0x13300dd28 <col:26, col:38> col:38 invalid ioc 'int *'
  |-ParmVarDecl 0x13300dda8 <col:43, col:50> col:50 referenced invalid size 'int'
  `-CompoundStmt 0x133028358 <line:2:1, line:24:1>
    |-DeclStmt 0x13300e048 <line:4:5, col:21>
    | `-VarDecl 0x13300dfe0 <col:5, col:20> col:10 used small 'char[1024]'
    |-DeclStmt 0x13300e0e0 <line:5:5, col:17>
    | `-VarDecl 0x13300e078 <col:5, col:11> col:11 used buffer 'char *'
    |-BinaryOperator 0x133027ba0 <line:7:5, col:70> 'char *' contains-errors '='
    | |-DeclRefExpr 0x13300e0f8 <col:5> 'char *' lvalue Var 0x13300e078 'buffer' 'char *'
    | `-ConditionalOperator 0x133027b70 <col:14, col:70> '<dependent type>' contains-errors
    |   |-BinaryOperator 0x13300e198 <col:14, col:30> 'int' contains-errors '<'
    |   | |-UnaryExprOrTypeTraitExpr 0x13300e158 <col:14, col:26> 'unsigned long' sizeof
    |   | | `-ParenExpr 0x13300e138 <col:20, col:26> 'char[1024]' lvalue
    |   | |   `-DeclRefExpr 0x13300e118 <col:21> 'char[1024]' lvalue Var 0x13300dfe0 'small' 'char[1024]' non_odr_use_unevaluated
    |   | `-RecoveryExpr 0x13300e178 <col:30> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13300e1b8 <col:37> 'char[1024]' lvalue Var 0x13300dfe0 'small' 'char[1024]'
    |   `-CallExpr 0x133027b48 <col:45, col:70> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13300e330 <col:45> 'int ()' Function 0x13300e278 'g_malloc' 'int ()'
    |     `-CallExpr 0x133027b18 <col:54, col:69> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x133027ab8 <col:54> 'int ()' Function 0x133027a00 'MIN' 'int ()'
    |       |-IntegerLiteral 0x133027ad8 <col:58> 'int' 65536
    |       `-RecoveryExpr 0x133027af8 <col:65> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x133028060 <line:8:5, line:17:5>
    | |-BinaryOperator 0x133027c00 <line:8:12, col:19> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x133027bc0 <col:12> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x133027be0 <col:19> 'int' 0
    | `-CompoundStmt 0x133028038 <col:22, line:17:5>
    |   |-IfStmt 0x133027d38 <line:11:9, line:13:9>
    |   | |-BinaryOperator 0x133027c98 <line:11:13, col:22> 'int' contains-errors '<='
    |   | | |-RecoveryExpr 0x133027c78 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x133027c38 <col:22> 'int' 0
    |   | `-CompoundStmt 0x133027d20 <col:25, line:13:9>
    |   |   `-GotoStmt 0x133027d08 <line:12:13, col:18> 'cleanup' 0x133027cb8
    |   |-CallExpr 0x133027f18 <line:14:9, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x133027e38 <col:9> 'int ()' Function 0x133027d80 'assert' 'int ()'
    |   | `-BinaryOperator 0x133027ef8 <col:16, col:25> 'int' contains-errors '<='
    |   |   |-RecoveryExpr 0x133027ed8 <col:16> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x133027e70 <col:25> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x133027ff0 <line:15:9, col:17> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x133027f60 <col:9> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x133027f40 <col:9> 'int' lvalue ParmVar 0x13300dda8 'size' 'int'
    |     `-RecoveryExpr 0x133027fd0 <col:17> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x1330282f0 <line:19:2, line:22:5> 'cleanup'
    | `-IfStmt 0x1330282d0 <line:20:5, line:22:5>
    |   |-BinaryOperator 0x1330280f0 <line:20:9, col:19> 'int' '!='
    |   | |-ImplicitCastExpr 0x1330280c0 <col:9> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x133028080 <col:9> 'char *' lvalue Var 0x13300e078 'buffer' 'char *'
    |   | `-ImplicitCastExpr 0x1330280d8 <col:19> 'char *' <ArrayToPointerDecay>
    |   |   `-DeclRefExpr 0x1330280a0 <col:19> 'char[1024]' lvalue Var 0x13300dfe0 'small' 'char[1024]'
    |   `-CompoundStmt 0x1330282b8 <col:26, line:22:5>
    |     `-CallExpr 0x133028278 <line:21:9, col:22> 'int'
    |       |-ImplicitCastExpr 0x133028260 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1330281f0 <col:9> 'int ()' Function 0x133028138 'g_free' 'int ()'
    |       `-ImplicitCastExpr 0x1330282a0 <col:16> 'char *' <LValueToRValue>
    |         `-DeclRefExpr 0x133028210 <col:16> 'char *' lvalue Var 0x13300e078 'buffer' 'char *'
    `-ReturnStmt 0x133028348 <line:23:5, col:12>
      `-RecoveryExpr 0x133028328 <col:12> '<dependent type>' contains-errors lvalue
