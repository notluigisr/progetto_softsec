`-FunctionDecl 0x12f053ff8  line:1:1 arch_get_unmapped_area 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'
  |-ParmVarDecl 0x12f030e48 <col:24, col:37> col:37 used filp 'struct file *'
  |-ParmVarDecl 0x12f030ec8 <col:43, col:57> col:57 used addr 'unsigned long'
  |-ParmVarDecl 0x12f030f48 <line:2:3, col:17> col:17 used len 'unsigned long'
  |-ParmVarDecl 0x12f053e00 <col:22, col:36> col:36 used pgoff 'unsigned long'
  |-ParmVarDecl 0x12f053e80 <col:43, col:57> col:57 used flags 'unsigned long'
  `-CompoundStmt 0x12f0582e0 <line:3:1, line:44:1>
    |-DeclStmt 0x12f0543d8 <line:4:2, col:36>
    | |-RecordDecl 0x12f054110 <col:2, col:9> col:9 struct mm_struct
    | `-VarDecl 0x12f054278 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit
    |   `-CXXDependentScopeMemberExpr 0x12f054378 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm
    |     `-RecoveryExpr 0x12f054358 <col:25> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12f0545d8 <line:5:2, col:28>
    | |-RecordDecl 0x12f0543f0 <col:2, col:9> col:9 struct vm_area_struct
    | `-VarDecl 0x12f054558 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'
    |-DeclStmt 0x12f054690 <line:6:2, col:18>
    | `-VarDecl 0x12f054608 <col:2, col:17> col:6 used do_align 'int' cinit
    |   `-IntegerLiteral 0x12f054670 <col:17> 'int' 0
    |-DeclStmt 0x12f0548c8 <line:7:2, col:41>
    | `-VarDecl 0x12f0546c0 <col:2, col:40> col:6 used aliasing 'int' cinit
    |   `-CallExpr 0x12f0548a8 <col:17, col:40> 'int'
    |     `-ImplicitCastExpr 0x12f054890 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x12f054840 <col:17> 'int ()' Function 0x12f054788 'cache_is_vipt_aliasing' 'int ()'
    |-DeclStmt 0x12f054a58 <line:8:2, col:35>
    | |-RecordDecl 0x12f0548e0 <col:2, col:9> col:9 struct vm_unmapped_area_info
    | `-VarDecl 0x12f0549d8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'
    |-IfStmt 0x12f0564b0 <line:15:2, line:20:2>
    | |-BinaryOperator 0x12f054bb8 <line:15:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x12f054b40 <col:6> 'unsigned long' lvalue ParmVar 0x12f053e80 'flags' 'unsigned long'
    | | `-RecoveryExpr 0x12f054b98 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f056490 <col:25, line:20:2>
    |   |-IfStmt 0x12f056410 <line:16:3, line:18:12>
    |   | |-RecoveryExpr 0x12f054d40 <line:16:7, line:17:51> '_Bool' contains-errors
    |   | `-ReturnStmt 0x12f056400 <line:18:4, col:12>
    |   |   `-UnaryOperator 0x12f054de0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x12f054dc8 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x12f054da8 <col:12> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x12f056480 <line:19:3, col:10>
    |     `-ImplicitCastExpr 0x12f056468 <col:10> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x12f056450 <col:10> 'unsigned long' <LValueToRValue>
    |         `-DeclRefExpr 0x12f056430 <col:10> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |-IfStmt 0x12f056610 <line:22:2, line:23:11>
    | |-BinaryOperator 0x12f056548 <line:22:6, col:12> 'int' contains-errors '>'
    | | |-DeclRefExpr 0x12f0564d0 <col:6> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'
    | | `-RecoveryExpr 0x12f056528 <col:12> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f056600 <line:23:3, col:11>
    |   `-UnaryOperator 0x12f0565e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12f0565d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12f0565b0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f0571e0 <line:25:2, line:35:2>
    | |-ImplicitCastExpr 0x12f056650 <line:25:6> 'unsigned long' <LValueToRValue>
    | | `-DeclRefExpr 0x12f056630 <col:6> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    | `-CompoundStmt 0x12f0571b8 <col:12, line:35:2>
    |   |-IfStmt 0x12f056a80 <line:26:3, line:29:26> has_else
    |   | |-ImplicitCastExpr 0x12f056688 <line:26:7> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12f056668 <col:7> 'int' lvalue Var 0x12f054608 'do_align' 'int'
    |   | |-BinaryOperator 0x12f056890 <line:27:4, col:35> 'unsigned long' '='
    |   | | |-DeclRefExpr 0x12f0566a0 <col:4> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |   | | `-ImplicitCastExpr 0x12f056878 <col:11, col:35> 'unsigned long' <IntegralCast>
    |   | |   `-CallExpr 0x12f056818 <col:11, col:35> 'int'
    |   | |     |-ImplicitCastExpr 0x12f056800 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   | |     | `-DeclRefExpr 0x12f0567a0 <col:11> 'int ()' Function 0x12f0566e8 'COLOUR_ALIGN' 'int ()'
    |   | |     |-ImplicitCastExpr 0x12f056848 <col:24> 'unsigned long' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x12f0567c0 <col:24> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |   | |     `-ImplicitCastExpr 0x12f056860 <col:30> 'unsigned long' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x12f0567e0 <col:30> 'unsigned long' lvalue ParmVar 0x12f053e00 'pgoff' 'unsigned long'
    |   | `-BinaryOperator 0x12f056a60 <line:29:4, col:26> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x12f0568b0 <col:4> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x12f056a48 <col:11, col:26> 'unsigned long' <IntegralCast>
    |   |     `-CallExpr 0x12f056a08 <col:11, col:26> 'int'
    |   |       |-ImplicitCastExpr 0x12f0569f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12f0569b0 <col:11> 'int ()' Function 0x12f0568f8 'PAGE_ALIGN' 'int ()'
    |   |       `-ImplicitCastExpr 0x12f056a30 <col:22> 'unsigned long' <LValueToRValue>
    |   |         `-DeclRefExpr 0x12f0569d0 <col:22> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |   |-BinaryOperator 0x12f056ca0 <line:31:3, col:26> 'struct vm_area_struct *' contains-errors '='
    |   | |-DeclRefExpr 0x12f056ab0 <col:3> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'
    |   | `-ImplicitCastExpr 0x12f056c88 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>
    |   |   `-CallExpr 0x12f056c28 <col:9, col:26> 'int' contains-errors
    |   |     |-ImplicitCastExpr 0x12f056c10 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x12f056bb0 <col:9> 'int ()' Function 0x12f056af8 'find_vma' 'int ()'
    |   |     |-ImplicitCastExpr 0x12f056c58 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>
    |   |     | `-DeclRefExpr 0x12f056bd0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x12f054278 'mm' 'struct mm_struct *'
    |   |     `-ImplicitCastExpr 0x12f056c70 <col:22> 'unsigned long' <LValueToRValue>
    |   |       `-DeclRefExpr 0x12f056bf0 <col:22> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |   `-IfStmt 0x12f057198 <line:32:3, line:34:11>
    |     |-BinaryOperator 0x12f057118 <line:32:7, line:33:43> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x12f057018 <line:32:7, col:26> 'int' contains-errors '>='
    |     | | |-BinaryOperator 0x12f056ff8 <col:7, col:19> '<dependent type>' contains-errors '-'
    |     | | | |-RecoveryExpr 0x12f056fd8 <col:7> '<dependent type>' contains-errors lvalue
    |     | | | `-DeclRefExpr 0x12f056cd8 <col:19> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'
    |     | | `-DeclRefExpr 0x12f056d18 <col:26> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |     | `-ParenExpr 0x12f0570f8 <line:33:7, col:43> 'int' contains-errors
    |     |   `-BinaryOperator 0x12f0570d8 <col:8, col:35> 'int' contains-errors '||'
    |     |     |-UnaryOperator 0x12f057050 <col:8, col:9> 'int' prefix '!' cannot overflow
    |     |     | `-ImplicitCastExpr 0x12f057038 <col:9> 'struct vm_area_struct *' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x12f056d58 <col:9> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'
    |     |     `-BinaryOperator 0x12f0570b8 <col:16, col:35> 'int' contains-errors '<='
    |     |       |-BinaryOperator 0x12f057098 <col:16, col:23> 'unsigned long' '+'
    |     |       | |-ImplicitCastExpr 0x12f057068 <col:16> 'unsigned long' <LValueToRValue>
    |     |       | | `-DeclRefExpr 0x12f056da8 <col:16> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |     |       | `-ImplicitCastExpr 0x12f057080 <col:23> 'unsigned long' <LValueToRValue>
    |     |       |   `-DeclRefExpr 0x12f056dc8 <col:23> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'
    |     |       `-RecoveryExpr 0x12f056e70 <col:30, col:35> '<dependent type>' contains-errors lvalue
    |     |         `-DeclRefExpr 0x12f056e38 <col:30> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'
    |     `-ReturnStmt 0x12f057188 <line:34:4, col:11>
    |       `-ImplicitCastExpr 0x12f057170 <col:11> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x12f057158 <col:11> 'unsigned long' <LValueToRValue>
    |           `-DeclRefExpr 0x12f057138 <col:11> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'
    |-BinaryOperator 0x12f0572b0 <line:37:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f057248 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x12f057220 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f057200 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'
    | `-IntegerLiteral 0x12f057290 <col:15> 'int' 0
    |-BinaryOperator 0x12f057380 <line:38:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f057318 <col:2, col:7> '<dependent type>' contains-errors lvalue .length
    | | `-RecoveryExpr 0x12f0572f0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f0572d0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'
    | `-DeclRefExpr 0x12f057360 <col:16> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'
    |-BinaryOperator 0x12f057ea8 <line:39:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f057e00 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit
    | | `-RecoveryExpr 0x12f0573c0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f0573a0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x12f057e80 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12f057e48 <col:19> 'struct mm_struct *' contains-errors lvalue Var 0x12f054278 'mm' 'struct mm_struct *'
    |-BinaryOperator 0x12f057fb0 <line:40:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12f057f10 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit
    | | `-RecoveryExpr 0x12f057ee8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12f057ec8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'
    | `-RecoveryExpr 0x12f057f90 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12f0582d0 <line:43:2, col:31>
      `-CallExpr 0x12f0582a8 <col:9, col:31> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12f058250 <col:9> 'int ()' Function 0x12f058198 'vm_unmapped_area' 'int ()'
        `-UnaryOperator 0x12f058290 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
          `-RecoveryExpr 0x12f058270 <col:27> '<dependent type>' contains-errors lvalue
