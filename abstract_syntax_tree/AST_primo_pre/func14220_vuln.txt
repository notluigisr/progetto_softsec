`-FunctionDecl 0x11e128cc8  line:1:1 invalid xsltNumberFormatGetMultipleLevel 'int (int, int, int, int, double *, int)'
  |-ParmVarDecl 0x11e1288f0 <col:34, col:58> col:58 referenced invalid context 'int'
  |-ParmVarDecl 0x11e128970 <line:2:6, col:17> col:17 invalid node 'int'
  |-ParmVarDecl 0x11e1289f0 <line:3:6, col:23> col:23 invalid countPat 'int'
  |-ParmVarDecl 0x11e128a70 <line:4:6, col:23> col:23 invalid fromPat 'int'
  |-ParmVarDecl 0x11e128b28 <line:5:6, col:14> col:14 used array 'double *'
  |-ParmVarDecl 0x11e128ba8 <line:6:6, col:10> col:10 used max 'int'
  `-CompoundStmt 0x11e80ae00 <line:7:1, line:59:1>
    |-DeclStmt 0x11e128e40 <line:8:5, col:19>
    | `-VarDecl 0x11e128db8 <col:5, col:18> col:9 used amount 'int' cinit
    |   `-IntegerLiteral 0x11e128e20 <col:18> 'int' 0
    |-DeclStmt 0x11e128ed8 <line:9:5, col:12>
    | `-VarDecl 0x11e128e70 <col:5, col:9> col:9 used cnt 'int'
    |-BinaryOperator 0x11e142000 <line:14:5, col:32> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x11e128f80 <col:5, col:25> '<dependent type>' contains-errors lvalue ->node
    | | `-CXXDependentScopeMemberExpr 0x11e128f38 <col:5, col:14> '<dependent type>' contains-errors lvalue ->xpathCtxt
    | |   `-RecoveryExpr 0x11e128f10 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x11e128ef0 <col:5> 'int' lvalue ParmVar 0x11e1288f0 'context' 'int'
    | `-RecoveryExpr 0x11e128fc8 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11e80ad98 <line:16:5, line:57:5>
    | |-RecoveryExpr 0x11e142268 <line:16:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11e80ad88 <col:17, line:57:5>
    `-ReturnStmt 0x11e80adf0 <line:58:5, col:12>
      `-ImplicitCastExpr 0x11e80add8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x11e80adb8 <col:12> 'int' lvalue Var 0x11e128db8 'amount' 'int'
