`-FunctionDecl 0x156065888  line:1:1 invalid getNumber 'int (int *, int *)'
  |-ParmVarDecl 0x156065728 <col:12, col:23> col:23 invalid source 'int *'
  |-ParmVarDecl 0x1560657a8 <col:31, col:42> col:42 invalid dest 'int *'
  `-CompoundStmt 0x15584c6a8 <line:2:1, line:9:1>
    |-DeclStmt 0x1560659e0 <line:4:3, col:12>
    | `-VarDecl 0x156065958 <col:3, col:11> col:7 used k 'int' cinit
    |   `-IntegerLiteral 0x1560659c0 <col:11> 'int' 0
    |-BinaryOperator 0x156065a68 <line:5:3, col:11> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x156065a30 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x156065a18 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x1560659f8 <col:4> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x156065a48 <col:11> 'int' 0
    |-WhileStmt 0x15584c640 <line:6:3, line:7:44>
    | |-BinaryOperator 0x156065c18 <line:6:10, col:43> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x156065b30 <col:10, col:23> 'int' contains-errors '>='
    | | | |-ArraySubscriptExpr 0x156065af8 <col:10, col:18> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x156065ac8 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x156065a88 <col:10> '<dependent type>' contains-errors lvalue
    | | | | `-ImplicitCastExpr 0x156065ae0 <col:17> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x156065aa8 <col:17> 'int' lvalue Var 0x156065958 'k' 'int'
    | | | `-CharacterLiteral 0x156065b18 <col:23> 'int' 48
    | | `-BinaryOperator 0x156065bf8 <col:30, col:43> 'int' contains-errors '<='
    | |   |-ArraySubscriptExpr 0x156065bc0 <col:30, col:38> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x156065b90 <col:30> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x156065b50 <col:30> '<dependent type>' contains-errors lvalue
    | |   | `-ImplicitCastExpr 0x156065ba8 <col:37> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x156065b70 <col:37> 'int' lvalue Var 0x156065958 'k' 'int'
    | |   `-CharacterLiteral 0x156065be0 <col:43> 'int' 57
    | `-BinaryOperator 0x15584c620 <line:7:5, col:44> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x156065c70 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x156065c58 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x156065c38 <col:6> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x15584c600 <col:13, col:44> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x156065cf8 <col:13, col:19> '<dependent type>' contains-errors '*'
    |     | |-IntegerLiteral 0x156065c88 <col:13> 'int' 10
    |     | `-UnaryOperator 0x156065ce0 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     |   `-ImplicitCastExpr 0x156065cc8 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x156065ca8 <col:19> '<dependent type>' contains-errors lvalue
    |     `-ParenExpr 0x156065de0 <col:26, col:44> '<dependent type>' contains-errors
    |       `-BinaryOperator 0x156065dc0 <col:27, col:41> '<dependent type>' contains-errors '-'
    |         |-ArraySubscriptExpr 0x156065d88 <col:27, col:37> '<dependent type>' contains-errors lvalue
    |         | |-ImplicitCastExpr 0x156065d70 <col:27> '<dependent type>' contains-errors <LValueToRValue>
    |         | | `-RecoveryExpr 0x156065d18 <col:27> '<dependent type>' contains-errors lvalue
    |         | `-UnaryOperator 0x156065d58 <col:34, col:35> 'int' postfix '++'
    |         |   `-DeclRefExpr 0x156065d38 <col:34> 'int' lvalue Var 0x156065958 'k' 'int'
    |         `-CharacterLiteral 0x156065da8 <col:41> 'int' 48
    `-ReturnStmt 0x15584c698 <line:8:3, col:10>
      `-ImplicitCastExpr 0x15584c680 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15584c660 <col:10> 'int' lvalue Var 0x156065958 'k' 'int'
