`-FunctionDecl 0x12d0274d8  line:1:7 invalid sock_kmalloc 'void *(struct sock *, int, int)'
  |-ParmVarDecl 0x12d00e248 <col:20, col:33> col:33 used sk 'struct sock *'
  |-ParmVarDecl 0x12d00e2c8 <col:37, col:41> col:41 used size 'int'
  |-ParmVarDecl 0x12d00e360 <col:47, col:53> col:53 invalid priority 'int'
  `-CompoundStmt 0x12d028160 <line:2:1, line:14:1>
    |-IfStmt 0x12d0280f8 <line:3:2, line:12:2>
    | |-BinaryOperator 0x12d027a28 <line:3:6, line:4:47> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x12d0279c8 <line:3:6, col:28> 'int' contains-errors '<='
    | | | |-CStyleCastExpr 0x12d027980 <col:6, col:20> 'unsigned int' <IntegralCast>
    | | | | `-ImplicitCastExpr 0x12d027968 <col:20> 'int' <LValueToRValue> part_of_explicit_cast
    | | | |   `-DeclRefExpr 0x12d027598 <col:20> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    | | | `-RecoveryExpr 0x12d0279a8 <col:28> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12d027a08 <line:4:6, col:47> 'int' contains-errors '<'
    | |   |-BinaryOperator 0x12d027880 <col:6, col:40> '<dependent type>' contains-errors '+'
    | |   | |-CallExpr 0x12d027838 <col:6, col:36> '<dependent type>' contains-errors
    | |   | | |-DeclRefExpr 0x12d0277a0 <col:6> 'int ()' Function 0x12d0276e8 'atomic_read' 'int ()'
    | |   | | `-UnaryOperator 0x12d027820 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | |   `-RecoveryExpr 0x12d0277f8 <col:19, col:23> '<dependent type>' contains-errors lvalue
    | |   | |     `-DeclRefExpr 0x12d0277c0 <col:19> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    | |   | `-DeclRefExpr 0x12d027860 <col:40> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    | |   `-RecoveryExpr 0x12d0279e8 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12d0280c0 <col:66, line:12:2>
    |   |-DeclStmt 0x12d027ac8 <line:5:3, col:12>
    |   | `-VarDecl 0x12d027a60 <col:3, col:9> col:9 used mem 'void *'
    |   |-CallExpr 0x12d027c78 <line:7:3, col:38> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12d027bc0 <col:3> 'int ()' Function 0x12d027b08 'atomic_add' 'int ()'
    |   | |-DeclRefExpr 0x12d027be0 <col:14> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |   | `-UnaryOperator 0x12d027c60 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x12d027c38 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12d027c00 <col:21> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    |   |-BinaryOperator 0x12d027e38 <line:8:3, col:31> 'void *' contains-errors '='
    |   | |-DeclRefExpr 0x12d027ca8 <col:3> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   | `-CallExpr 0x12d027e08 <col:9, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12d027da8 <col:9> 'int ()' Function 0x12d027cf0 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x12d027dc8 <col:17> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |   |   `-RecoveryExpr 0x12d027de8 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x12d027ed8 <line:9:3, line:10:11>
    |   | |-ImplicitCastExpr 0x12d027e78 <line:9:7> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12d027e58 <col:7> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   | `-ReturnStmt 0x12d027ec8 <line:10:4, col:11>
    |   |   `-ImplicitCastExpr 0x12d027eb0 <col:11> 'void *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12d027e90 <col:11> 'void *' lvalue Var 0x12d027a60 'mem' 'void *'
    |   `-CallExpr 0x12d028090 <line:11:3, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12d027fd8 <col:3> 'int ()' Function 0x12d027f20 'atomic_sub' 'int ()'
    |     |-DeclRefExpr 0x12d027ff8 <col:14> 'int' lvalue ParmVar 0x12d00e2c8 'size' 'int'
    |     `-UnaryOperator 0x12d028078 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x12d028050 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12d028018 <col:21> 'struct sock *' lvalue ParmVar 0x12d00e248 'sk' 'struct sock *'
    `-ReturnStmt 0x12d028150 <line:13:2, col:9>
      `-RecoveryExpr 0x12d028130 <col:9> '<dependent type>' contains-errors lvalue
