`-FunctionDecl 0x1461283a8  line:1:12 invalid tight_init_stream 'int (int *, int, int, int)' static
  |-ParmVarDecl 0x146128128 <col:30, col:40> col:40 referenced invalid vs 'int *'
  |-ParmVarDecl 0x1461281a8 <col:44, col:48> col:48 used stream_id 'int'
  |-ParmVarDecl 0x146128228 <line:2:30, col:34> col:34 used level 'int'
  |-ParmVarDecl 0x1461282a8 <col:41, col:45> col:45 used strategy 'int'
  `-CompoundStmt 0x146808800 <line:3:1, line:33:1>
    |-IfStmt 0x146142290 <line:6:5, line:24:5>
    | |-BinaryOperator 0x146128590 <line:6:9, col:28> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x146128528 <col:9, col:18> '<dependent type>' contains-errors lvalue ->opaque
    | | | `-RecoveryExpr 0x146128508 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x146128570 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x146142250 <col:34, line:24:5>
    |   |-DeclStmt 0x146128630 <line:7:9, col:16>
    |   | `-VarDecl 0x1461285c8 <col:9, col:13> col:13 used err 'int'
    |   |-CallExpr 0x146141888 <line:9:9, col:35> 'int'
    |   | |-ImplicitCastExpr 0x146141870 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1461287a0 <col:9> 'int ()' Function 0x1461286e8 'VNC_DEBUG' 'int ()'
    |   | |-ImplicitCastExpr 0x1461418b8 <col:19> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x146141800 <col:19> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1461418d0 <col:26> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x146141820 <col:26> 'int' lvalue ParmVar 0x1461281a8 'stream_id' 'int'
    |   |-CallExpr 0x146141a48 <line:10:9, col:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1461418e8 <col:9> 'int ()' Function 0x1461286e8 'VNC_DEBUG' 'int ()'
    |   | |-StringLiteral 0x146141908 <col:19> 'char[4]' lvalue "STR"
    |   | |-CXXDependentScopeMemberExpr 0x146141a00 <col:26, col:35> '<dependent type>' contains-errors lvalue ->opaque
    |   | | `-RecoveryExpr 0x1461419e0 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x146141988 <col:43> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x146141db0 <line:14:9, line:15:51> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x146141ab0 <line:14:9> 'int' lvalue Var 0x1461285c8 'err' 'int'
    |   | `-CallExpr 0x146141d60 <col:15, line:15:51> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x146141bb0 <line:14:15> 'int ()' Function 0x146141af8 'deflateInit2' 'int ()'
    |   |   |-RecoveryExpr 0x146141ce0 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x146141be8 <col:37> 'int' lvalue ParmVar 0x146128228 'level' 'int'
    |   |   |-RecoveryExpr 0x146141d00 <col:44> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x146141d20 <col:56> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x146141d40 <line:15:28> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x146141c50 <col:43> 'int' lvalue ParmVar 0x1461282a8 'strategy' 'int'
    |   |-IfStmt 0x146142088 <line:17:9, line:20:9>
    |   | |-BinaryOperator 0x146141e48 <line:17:13, col:20> 'int' contains-errors '!='
    |   | | |-DeclRefExpr 0x146141dd0 <col:13> 'int' lvalue Var 0x1461285c8 'err' 'int'
    |   | | `-RecoveryExpr 0x146141e28 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x146142068 <col:26, line:20:9>
    |   |   |-CallExpr 0x146141ff0 <line:18:13, col:34> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x146141f48 <col:13> 'int ()' Function 0x146141e90 'fprintf' 'int ()'
    |   |   | |-RecoveryExpr 0x146141fd0 <col:21> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x146141f80 <col:29> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x146142058 <line:19:13, col:21>
    |   |     `-UnaryOperator 0x146142040 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x146142020 <col:21> 'int' 1
    |   `-BinaryOperator 0x146142210 <line:22:9, col:39> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x1461421d0 <col:9, col:35> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1461421a0 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x146142138 <col:9, col:19> '<dependent type>' contains-errors lvalue .levels
    |     | |   `-CXXDependentScopeMemberExpr 0x1461420f0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->tight
    |     | |     `-RecoveryExpr 0x1461420c8 <col:9> '<dependent type>' contains-errors lvalue
    |     | |       `-DeclRefExpr 0x1461420a8 <col:9> 'int *' lvalue ParmVar 0x146128128 'vs' 'int *'
    |     | `-ImplicitCastExpr 0x1461421b8 <col:26> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x146142180 <col:26> 'int' lvalue ParmVar 0x1461281a8 'stream_id' 'int'
    |     `-DeclRefExpr 0x1461421f0 <col:39> 'int' lvalue ParmVar 0x146128228 'level' 'int'
    |-IfStmt 0x146142798 <line:26:5, line:31:5>
    | |-BinaryOperator 0x1461423f0 <line:26:9, col:40> 'int' contains-errors '!='
    | | |-ArraySubscriptExpr 0x1461423b0 <col:9, col:35> '<dependent type>' contains-errors lvalue
    | | | |-ImplicitCastExpr 0x146142380 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
    | | | | `-CXXDependentScopeMemberExpr 0x146142318 <col:9, col:19> '<dependent type>' contains-errors lvalue .levels
    | | | |   `-CXXDependentScopeMemberExpr 0x1461422d0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->tight
    | | | |     `-RecoveryExpr 0x1461422b0 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-ImplicitCastExpr 0x146142398 <col:26> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x146142360 <col:26> 'int' lvalue ParmVar 0x1461281a8 'stream_id' 'int'
    | | `-DeclRefExpr 0x1461423d0 <col:40> 'int' lvalue ParmVar 0x146128228 'level' 'int'
    | `-CompoundStmt 0x146142778 <col:47, line:31:5>
    |   |-IfStmt 0x1461425d0 <line:27:9, line:29:9>
    |   | |-RecoveryExpr 0x146142550 <line:27:13, col:56> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1461425b8 <col:62, line:29:9>
    |   |   `-ReturnStmt 0x1461425a8 <line:28:13, col:21>
    |   |     `-UnaryOperator 0x146142590 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x146142570 <col:21> 'int' 1
    |   `-BinaryOperator 0x146142758 <line:30:9, col:39> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x146142718 <col:9, col:35> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x1461426e8 <col:9, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x146142680 <col:9, col:19> '<dependent type>' contains-errors lvalue .levels
    |     | |   `-CXXDependentScopeMemberExpr 0x146142638 <col:9, col:13> '<dependent type>' contains-errors lvalue ->tight
    |     | |     `-RecoveryExpr 0x146142610 <col:9> '<dependent type>' contains-errors lvalue
    |     | |       `-DeclRefExpr 0x1461425f0 <col:9> 'int *' lvalue ParmVar 0x146128128 'vs' 'int *'
    |     | `-ImplicitCastExpr 0x146142700 <col:26> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1461426c8 <col:26> 'int' lvalue ParmVar 0x1461281a8 'stream_id' 'int'
    |     `-DeclRefExpr 0x146142738 <col:39> 'int' lvalue ParmVar 0x146128228 'level' 'int'
    `-ReturnStmt 0x1461427d8 <line:32:5, col:12>
      `-IntegerLiteral 0x1461427b8 <col:12> 'int' 0
