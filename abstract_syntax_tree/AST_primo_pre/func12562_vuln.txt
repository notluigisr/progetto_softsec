`-FunctionDecl 0x14f103f88  line:1:1 gstd_accept 'int (int, char **, char **, char **)'
  |-ParmVarDecl 0x14f103cd8 <col:13, col:17> col:17 used fd 'int'
  |-ParmVarDecl 0x14f103d88 <col:21, col:28> col:28 used display_creds 'char **'
  |-ParmVarDecl 0x14f103e08 <col:43, col:50> col:50 used export_name 'char **'
  |-ParmVarDecl 0x14f103e88 <col:63, col:70> col:70 used mech 'char **'
  `-CompoundStmt 0x14f122360 <line:2:1, line:44:1>
    |-DeclStmt 0x14f104298 <line:5:2, col:22>
    | |-RecordDecl 0x14f1040b0 <col:2, col:9> col:9 struct gstd_tok
    | `-VarDecl 0x14f104218 <col:2, col:19> col:19 used tok 'struct gstd_tok *'
    |-DeclStmt 0x14f104330 <line:9:2, col:11>
    | `-VarDecl 0x14f1042c8 <col:2, col:8> col:8 used ret 'int'
    |-BinaryOperator 0x14f11c650 <line:11:2, col:19> 'char *' contains-errors '='
    | |-UnaryOperator 0x14f11c618 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14f11c600 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f104348 <col:3> 'char **' lvalue ParmVar 0x14f103d88 'display_creds' 'char **'
    | `-RecoveryExpr 0x14f11c630 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f11c778 <line:12:2, col:17> 'char *' contains-errors '='
    | |-UnaryOperator 0x14f11c740 <col:2, col:3> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14f11c728 <col:3> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14f11c670 <col:3> 'char **' lvalue ParmVar 0x14f103e08 'export_name' 'char **'
    | `-RecoveryExpr 0x14f11c758 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14f11ca18 <line:15:2, col:31> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f11c8f0 <col:2> 'int ()' Function 0x14f11c838 'read_packet' 'int ()'
    | |-DeclRefExpr 0x14f11c910 <col:14> 'int' lvalue ParmVar 0x14f103cd8 'fd' 'int'
    | |-UnaryOperator 0x14f11ca00 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14f11c9e0 <col:19> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x14f11c960 <col:23> 'int' 60000
    | `-IntegerLiteral 0x14f11c980 <col:30> 'int' 1
    |-LabelStmt 0x14f11cc58 <line:16:1, line:18:3> 'again'
    | `-WhileStmt 0x14f11cbe8 <line:17:2, line:18:3>
    |   |-RecoveryExpr 0x14f11cbc0 <line:17:9, col:52> '_Bool' contains-errors
    |   `-NullStmt 0x14f11cbe0 <line:18:3>
    |-IfStmt 0x14f11cd38 <line:20:2, line:21:10>
    | |-BinaryOperator 0x14f11ccd0 <line:20:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x14f11ccb8 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14f11cc78 <col:6> 'int' lvalue Var 0x14f1042c8 'ret' 'int'
    | | `-IntegerLiteral 0x14f11cc98 <col:12> 'int' 1
    | `-ReturnStmt 0x14f11cd28 <line:21:3, col:10>
    |   `-RecoveryExpr 0x14f11cd08 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f11d2b8 <line:27:2, line:30:2>
    | |-RecoveryExpr 0x14f11d188 <line:27:6, col:41> '_Bool' contains-errors
    | `-CompoundStmt 0x14f11d2a8 <col:44, line:30:2>
    |-IfStmt 0x14f11d478 <line:34:2, line:35:8>
    | |-RecoveryExpr 0x14f11d440 <line:34:6, col:12> '_Bool' contains-errors
    | `-GotoStmt 0x14f11d460 <line:35:3, col:8> 'again' 0x14f11cc08
    `-ReturnStmt 0x14f122350 <line:43:2, col:9>
      `-ImplicitCastExpr 0x14f122338 <col:9> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x14f122320 <col:9> 'struct gstd_tok *' <LValueToRValue>
          `-DeclRefExpr 0x14f122300 <col:9> 'struct gstd_tok *' lvalue Var 0x14f104218 'tok' 'struct gstd_tok *'
