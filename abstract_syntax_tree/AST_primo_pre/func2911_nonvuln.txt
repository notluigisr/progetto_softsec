`-FunctionDecl 0x13b128758  line:1:5 referenced platform_device_add 'int (struct platform_device *)'
  |-ParmVarDecl 0x13b128648 <col:25, col:49> col:49 used pdev 'struct platform_device *'
  `-CompoundStmt 0x13b1452f0 <line:2:1, line:76:1>
    |-DeclStmt 0x13b140ae8 <line:4:2, col:9>
    | `-VarDecl 0x13b140a80 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x13b140bf8 <line:6:2, line:7:11>
    | |-UnaryOperator 0x13b140b38 <line:6:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b140b20 <col:7> 'struct platform_device *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13b140b00 <col:7> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    | `-ReturnStmt 0x13b140be8 <line:7:3, col:11>
    |   `-UnaryOperator 0x13b140bd0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13b140bb8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13b140b98 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b140e40 <line:9:2, line:10:23>
    | |-UnaryOperator 0x13b140cd8 <line:9:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13b140cc0 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x13b140c78 <col:7, col:17> '<dependent type>' contains-errors lvalue .parent
    | |     `-RecoveryExpr 0x13b140c50 <col:7, col:13> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x13b140c18 <col:7> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    | `-BinaryOperator 0x13b140e20 <line:10:3, col:23> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x13b140d50 <col:3, col:13> '<dependent type>' contains-errors lvalue .parent
    |   | `-RecoveryExpr 0x13b140d28 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13b140cf0 <col:3> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   `-UnaryOperator 0x13b140e08 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13b140de8 <col:23> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13b140f90 <line:12:2, col:19> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13b140ec0 <col:2, col:12> '<dependent type>' contains-errors lvalue .bus
    | | `-RecoveryExpr 0x13b140e98 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b140e60 <col:2> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    | `-UnaryOperator 0x13b140f78 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13b140f58 <col:19> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x13b141028 <line:14:2, line:30:2>
    | |-ImplicitCastExpr 0x13b141010 <line:14:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x13b140fe8 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13b140fb0 <col:10> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    | `-CompoundStmt 0x13b1435e8 <col:20, line:30:2>
    |   |-DefaultStmt 0x13b141360 <line:15:2, line:16:56>
    |   | `-CallExpr 0x13b141320 <col:3, col:56> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13b141160 <col:3> 'int ()' Function 0x13b1410a8 'dev_set_name' 'int ()'
    |   |   |-UnaryOperator 0x13b1411e0 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x13b1411b8 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x13b141180 <col:17> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   |   |-StringLiteral 0x13b141240 <col:28> 'char[4]' lvalue "STR"
    |   |   |-RecoveryExpr 0x13b141298 <col:35, col:41> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x13b141260 <col:35> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   |   `-RecoveryExpr 0x13b1412f8 <col:48, col:54> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x13b1412c0 <col:48> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   |-BreakStmt 0x13b141380 <line:17:3>
    |   |-CallExpr 0x13b1414b8 <line:19:3, col:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b1413a0 <col:3> 'int ()' Function 0x13b1410a8 'dev_set_name' 'int ()'
    |   | |-UnaryOperator 0x13b141420 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13b1413f8 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13b1413c0 <col:17> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   | |-StringLiteral 0x13b141438 <col:28> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x13b141490 <col:35, col:41> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13b141458 <col:35> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   |-BreakStmt 0x13b1414f0 <line:20:3>
    |   |-BinaryOperator 0x13b1417f0 <line:23:3, col:50> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13b141510 <col:3> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    |   | `-CallExpr 0x13b1417c0 <col:9, col:50> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x13b141610 <col:9> 'int ()' Function 0x13b141558 'ida_alloc' 'int ()'
    |   |   |-UnaryOperator 0x13b141788 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x13b141768 <col:20> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x13b1417a0 <col:40> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x13b1418f0 <line:24:3, line:25:9>
    |   | |-BinaryOperator 0x13b141868 <line:24:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x13b141850 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x13b141810 <col:7> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    |   | | `-IntegerLiteral 0x13b141830 <col:13> 'int' 0
    |   | `-GotoStmt 0x13b1418d8 <line:25:4, col:9> 'err_out' 0x13b141888
    |   |-BinaryOperator 0x13b141990 <line:26:3, col:14> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x13b141948 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13b141910 <col:3> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   | `-DeclRefExpr 0x13b141970 <col:14> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    |   |-CallExpr 0x13b1435a0 <line:28:3, col:55> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13b143428 <col:3> 'int ()' Function 0x13b1410a8 'dev_set_name' 'int ()'
    |   | |-UnaryOperator 0x13b1434a8 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x13b143480 <col:17, col:23> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x13b143448 <col:17> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   | |-StringLiteral 0x13b1434c0 <col:28> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x13b143518 <col:35, col:41> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x13b1434e0 <col:35> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   | `-RecoveryExpr 0x13b143578 <col:47, col:53> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13b143540 <col:47> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   `-BreakStmt 0x13b1435e0 <line:29:3>
    |-CallExpr 0x13b144868 <line:55:2, line:56:52> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b144678 <line:55:2> 'int ()' Function 0x13b1445c0 'pr_debug' 'int ()'
    | |-StringLiteral 0x13b144698 <col:11> 'char[4]' lvalue "STR"
    | |-CallExpr 0x13b144750 <line:56:4, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13b1446b8 <col:4> 'int ()' Function 0x13b143ac0 'dev_name' 'int ()'
    | | `-UnaryOperator 0x13b144738 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x13b144710 <col:14, col:20> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x13b1446d8 <col:14> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    | `-CallExpr 0x13b144840 <col:26, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b144778 <col:26> 'int ()' Function 0x13b143ac0 'dev_name' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x13b1447f8 <col:35, col:45> '<dependent type>' contains-errors lvalue .parent
    |     `-RecoveryExpr 0x13b1447d0 <col:35, col:41> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13b144798 <col:35> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |-BinaryOperator 0x13b144a60 <line:58:2, col:29> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b1448a0 <col:2> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    | `-CallExpr 0x13b144a38 <col:8, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b1449a0 <col:8> 'int ()' Function 0x13b1448e8 'device_add' 'int ()'
    |   `-UnaryOperator 0x13b144a20 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x13b1449f8 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x13b1449c0 <col:20> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |-IfStmt 0x13b144b40 <line:59:2, line:60:10>
    | |-BinaryOperator 0x13b144ad8 <line:59:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x13b144ac0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b144a80 <col:6> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    | | `-IntegerLiteral 0x13b144aa0 <col:13> 'int' 0
    | `-ReturnStmt 0x13b144b30 <line:60:3, col:10>
    |   `-ImplicitCastExpr 0x13b144b18 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13b144af8 <col:10> 'int' lvalue Var 0x13b140a80 'ret' 'int'
    |-LabelStmt 0x13b144db0 <line:62:2, line:66:2> 'failed'
    | `-IfStmt 0x13b144d90 <line:63:2, line:66:2>
    |   |-RecoveryExpr 0x13b144b98 <line:63:6, col:12> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x13b144b60 <col:6> 'struct platform_device *' lvalue ParmVar 0x13b128648 'pdev' 'struct platform_device *'
    |   `-CompoundStmt 0x13b144d80 <col:21, line:66:2>
    |-WhileStmt 0x13b145268 <line:68:2, line:72:2>
    | |-RecoveryExpr 0x13b144dd0 <line:68:9, col:10> '_Bool' contains-errors
    | `-CompoundStmt 0x13b145248 <col:14, line:72:2>
    |   |-DeclStmt 0x13b145038 <line:69:3, col:42>
    |   | |-RecordDecl 0x13b144df0 <col:3, col:10> col:10 struct resource
    |   | `-VarDecl 0x13b144f58 <col:3, col:20> col:20 used r 'struct resource *'
    |   `-IfStmt 0x13b145228 <line:70:3, line:71:22>
    |     |-RecoveryExpr 0x13b145088 <line:70:7, col:10> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x13b145050 <col:7> 'struct resource *' lvalue Var 0x13b144f58 'r' 'struct resource *'
    |     `-CallExpr 0x13b1451e8 <line:71:4, col:22> 'int'
    |       |-ImplicitCastExpr 0x13b1451d0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x13b145190 <col:4> 'int ()' Function 0x13b1450d8 'release_resource' 'int ()'
    |       `-ImplicitCastExpr 0x13b145210 <col:21> 'struct resource *' <LValueToRValue>
    |         `-DeclRefExpr 0x13b1451b0 <col:21> 'struct resource *' lvalue Var 0x13b144f58 'r' 'struct resource *'
    `-LabelStmt 0x13b1452d0 <line:74:2, line:75:9> 'err_out'
      `-ReturnStmt 0x13b1452c0 <col:2, col:9>
        `-ImplicitCastExpr 0x13b1452a8 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x13b145288 <col:9> 'int' lvalue Var 0x13b140a80 'ret' 'int'
