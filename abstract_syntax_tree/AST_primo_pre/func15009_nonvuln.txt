`-FunctionDecl 0x15a80de88  line:1:1 invalid xmlRelaxNGDumpDefines 'int (int *, int)'
  |-ParmVarDecl 0x15a80dd28 <col:23, col:30> col:30 invalid output 'int *'
  |-ParmVarDecl 0x15a80dda8 <col:38, col:58> col:58 referenced invalid defines 'int'
  `-CompoundStmt 0x15a80e2d0 <line:2:1, line:7:1>
    `-WhileStmt 0x15a80e2b0 <line:3:5, line:6:5>
      |-BinaryOperator 0x15a80dfb8 <line:3:12, col:23> 'int' contains-errors '!='
      | |-RecoveryExpr 0x15a80df40 <col:12> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x15a80df98 <col:23> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15a80e290 <col:29, line:6:5>
        |-CallExpr 0x15a80e190 <line:4:9, col:45> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x15a80e130 <col:9> 'int ()' Function 0x15a80e078 'xmlRelaxNGDumpDefine' 'int ()'
        | |-RecoveryExpr 0x15a80e150 <col:30> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x15a80e170 <col:38> '<dependent type>' contains-errors lvalue
        `-BinaryOperator 0x15a80e270 <line:5:9, col:28> '<dependent type>' contains-errors '='
          |-RecoveryExpr 0x15a80e1e0 <col:9> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x15a80e1c0 <col:9> 'int' lvalue ParmVar 0x15a80dda8 'defines' 'int'
          `-CXXDependentScopeMemberExpr 0x15a80e228 <col:19, col:28> '<dependent type>' contains-errors lvalue ->next
            `-RecoveryExpr 0x15a80e208 <col:19> '<dependent type>' contains-errors lvalue
