`-FunctionDecl 0x123141838  line:1:16 invalid smtcfb_read 'int (struct fb_info *, char)' static
  |-ParmVarDecl 0x123128668 <col:28, col:44> col:44 used info 'struct fb_info *'
  |-ParmVarDecl 0x1231286e0 <col:50, col:55> col:55 __user 'char'
  `-CompoundStmt 0x1231442a8 <line:3:1, line:76:1>
    |-DeclStmt 0x123141a08 <line:4:2, col:25>
    | `-VarDecl 0x123141908 <col:2, col:21> col:16 used p 'unsigned long' cinit
    |   `-UnaryOperator 0x1231419f0 <col:20, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x1231419d8 <col:21> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1231419b8 <col:21> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x123141ce8 <line:8:2, col:28>
    | |-VarDecl 0x123141a98 <col:2, col:6> col:6 used c 'int'
    | |-VarDecl 0x123141b18 <col:2, col:9> col:9 used i 'int'
    | |-VarDecl 0x123141b98 <col:2, col:18> col:12 used cnt 'int' cinit
    | | `-IntegerLiteral 0x123141c00 <col:18> 'int' 0
    | `-VarDecl 0x123141c38 <col:2, col:27> col:21 used err 'int' cinit
    |   `-IntegerLiteral 0x123141ca0 <col:27> 'int' 0
    |-DeclStmt 0x123141d80 <line:9:2, col:26>
    | `-VarDecl 0x123141d18 <col:2, col:16> col:16 used total_size 'unsigned long'
    |-IfStmt 0x123141f40 <line:11:2, line:12:11>
    | |-BinaryOperator 0x123141e78 <line:11:6, col:22> 'int' contains-errors '||'
    | | |-UnaryOperator 0x123141dd0 <col:6, col:7> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x123141db8 <col:7> 'struct fb_info *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x123141d98 <col:7> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    | | `-UnaryOperator 0x123141e60 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x123141e48 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x123141e20 <col:16, col:22> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x123141de8 <col:16> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    | `-ReturnStmt 0x123141f30 <line:12:3, col:11>
    |   `-UnaryOperator 0x123141f18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x123141f00 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123141ee0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1231420e0 <line:14:2, line:15:11>
    | |-BinaryOperator 0x123142018 <line:14:6, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x123141f98 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x123141f60 <col:6> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    | | `-RecoveryExpr 0x123141ff8 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1231420d0 <line:15:3, col:11>
    |   `-UnaryOperator 0x1231420b8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x1231420a0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x123142080 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x123142180 <line:17:2, col:21> 'unsigned long' contains-errors '='
    | |-DeclRefExpr 0x123142100 <col:2> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'
    | `-RecoveryExpr 0x123142158 <col:15, col:21> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x123142120 <col:15> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    |-IfStmt 0x123142318 <line:19:2, line:20:26>
    | |-BinaryOperator 0x123142210 <line:19:6, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x1231421e0 <col:6> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1231421a0 <col:6> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'
    | | `-ImplicitCastExpr 0x1231421f8 <col:20> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1231421c0 <col:20> 'int' 0
    | `-BinaryOperator 0x1231422f8 <line:20:3, col:26> 'unsigned long' contains-errors '='
    |   |-DeclRefExpr 0x123142230 <col:3> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'
    |   `-CXXDependentScopeMemberExpr 0x1231422b0 <col:16, col:26> '<dependent type>' contains-errors lvalue .smem_len
    |     `-RecoveryExpr 0x123142288 <col:16, col:22> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x123142250 <col:16> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    |-IfStmt 0x1231423f8 <line:22:2, line:23:10>
    | |-BinaryOperator 0x1231423a8 <line:22:6, col:11> 'int' contains-errors '>='
    | | |-ImplicitCastExpr 0x123142378 <col:6> 'unsigned long' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x123142338 <col:6> 'unsigned long' contains-errors lvalue Var 0x123141908 'p' 'unsigned long'
    | | `-ImplicitCastExpr 0x123142390 <col:11> 'unsigned long' <LValueToRValue>
    | |   `-DeclRefExpr 0x123142358 <col:11> 'unsigned long' lvalue Var 0x123141d18 'total_size' 'unsigned long'
    | `-ReturnStmt 0x1231423e8 <line:23:3, col:10>
    |   `-IntegerLiteral 0x1231423c8 <col:10> 'int' 0
    |-IfStmt 0x123143638 <line:37:2, line:38:28>
    | |-CXXDependentScopeMemberExpr 0x123143500 <line:37:6, col:19> '<dependent type>' contains-errors lvalue ->fb_sync
    | | `-RecoveryExpr 0x1231434d8 <col:6, col:12> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1231434a0 <col:6> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    | `-CallExpr 0x123143610 <line:38:3, col:28> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x1231435a8 <col:3, col:16> '<dependent type>' contains-errors lvalue ->fb_sync
    |   | `-RecoveryExpr 0x123143580 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x123143548 <col:3> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    |   `-DeclRefExpr 0x1231435f0 <col:24> 'struct fb_info *' lvalue ParmVar 0x123128668 'info' 'struct fb_info *'
    |-WhileStmt 0x123144080 <line:40:2, line:71:2>
    | |-RecoveryExpr 0x123143658 <line:40:9> '_Bool' contains-errors
    | `-CompoundStmt 0x123144050 <col:16, line:71:2>
    |   |-ForStmt 0x123143998 <line:43:3, line:47:3>
    |   | |-BinaryOperator 0x123143730 <line:43:8, col:17> 'int' '='
    |   | | |-DeclRefExpr 0x123143698 <col:8> 'int' lvalue Var 0x123141b18 'i' 'int'
    |   | | `-BinaryOperator 0x123143710 <col:12, col:17> 'int' '>>'
    |   | |   |-ImplicitCastExpr 0x1231436f8 <col:12> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x1231436b8 <col:12> 'int' lvalue Var 0x123141a98 'c' 'int'
    |   | |   `-IntegerLiteral 0x1231436d8 <col:17> 'int' 2
    |   | |-<<<NULL>>>
    |   | |-UnaryOperator 0x123143770 <col:20, col:21> 'int' postfix '--'
    |   | | `-DeclRefExpr 0x123143750 <col:20> 'int' lvalue Var 0x123141b18 'i' 'int'
    |   | |-<<<NULL>>>
    |   | `-CompoundStmt 0x123143988 <col:26, line:47:3>
    |   |-IfStmt 0x123143da8 <line:48:3, line:61:3>
    |   | |-BinaryOperator 0x123143a28 <line:48:7, col:11> 'int' '&'
    |   | | |-ImplicitCastExpr 0x123143a10 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1231439d0 <col:7> 'int' lvalue Var 0x123141a98 'c' 'int'
    |   | | `-IntegerLiteral 0x1231439f0 <col:11> 'int' 3
    |   | `-CompoundStmt 0x123143d90 <col:14, line:61:3>
    |   |   `-ForStmt 0x123143d58 <line:52:4, line:59:4>
    |   |     |-BinaryOperator 0x123143ae0 <line:52:9, col:17> 'int' '='
    |   |     | |-DeclRefExpr 0x123143a48 <col:9> 'int' lvalue Var 0x123141b18 'i' 'int'
    |   |     | `-BinaryOperator 0x123143ac0 <col:13, col:17> 'int' '&'
    |   |     |   |-ImplicitCastExpr 0x123143aa8 <col:13> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x123143a68 <col:13> 'int' lvalue Var 0x123141a98 'c' 'int'
    |   |     |   `-IntegerLiteral 0x123143a88 <col:17> 'int' 3
    |   |     |-<<<NULL>>>
    |   |     |-UnaryOperator 0x123143b20 <col:20, col:21> 'int' postfix '--'
    |   |     | `-DeclRefExpr 0x123143b00 <col:20> 'int' lvalue Var 0x123141b18 'i' 'int'
    |   |     |-<<<NULL>>>
    |   |     `-CompoundStmt 0x123143d40 <col:26, line:59:4>
    |   |       `-IfStmt 0x123143d10 <line:53:5, line:58:5> has_else
    |   |         |-BinaryOperator 0x123143b90 <line:53:9, col:13> 'int' '&'
    |   |         | |-ImplicitCastExpr 0x123143b78 <col:9> 'int' <LValueToRValue>
    |   |         | | `-DeclRefExpr 0x123143b38 <col:9> 'int' lvalue Var 0x123141b18 'i' 'int'
    |   |         | `-IntegerLiteral 0x123143b58 <col:13> 'int' 1
    |   |         |-CompoundStmt 0x123143cb0 <col:16, line:55:5>
    |   |         `-CompoundStmt 0x123143d00 <col:12, line:58:5>
    |   |-IfStmt 0x123143f48 <line:63:3, line:66:3>
    |   | |-RecoveryExpr 0x123143ee8 <line:63:7, col:34> '_Bool' contains-errors
    |   | `-CompoundStmt 0x123143f30 <col:37, line:66:3>
    |   |   `-BreakStmt 0x123143f28 <line:65:4>
    |   `-CompoundAssignOperator 0x123144000 <line:69:3, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x123143fa8 <col:3> 'int' lvalue Var 0x123141b98 'cnt' 'int'
    |     `-ImplicitCastExpr 0x123143fe8 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x123143fc8 <col:10> 'int' lvalue Var 0x123141a98 'c' 'int'
    `-ReturnStmt 0x123144298 <line:75:2, col:23>
      `-ConditionalOperator 0x123144268 <col:9, col:23> 'int'
        |-ImplicitCastExpr 0x123144220 <col:9, col:13> 'int' <LValueToRValue>
        | `-ParenExpr 0x1231441c0 <col:9, col:13> 'int' lvalue
        |   `-DeclRefExpr 0x1231441a0 <col:10> 'int' lvalue Var 0x123141c38 'err' 'int'
        |-ImplicitCastExpr 0x123144238 <col:17> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x1231441e0 <col:17> 'int' lvalue Var 0x123141c38 'err' 'int'
        `-ImplicitCastExpr 0x123144250 <col:23> 'int' <LValueToRValue>
          `-DeclRefExpr 0x123144200 <col:23> 'int' lvalue Var 0x123141b98 'cnt' 'int'
