`-FunctionDecl 0x140128318  line:1:12 invalid mov_read_pasp 'int (int *, int *, int)' static
  |-ParmVarDecl 0x140128128 <col:26, col:38> col:38 invalid c 'int *'
  |-ParmVarDecl 0x1401281a8 <col:41, col:54> col:54 invalid pb 'int *'
  |-ParmVarDecl 0x140128228 <col:58, col:66> col:66 invalid atom 'int'
  `-CompoundStmt 0x140143808 <line:2:1, line:22:1>
    |-DeclStmt 0x140128618 <line:3:5, col:34>
    | `-VarDecl 0x1401283f0 <col:5, col:33> col:15 used num 'const int' cinit
    |   `-CallExpr 0x1401285f0 <col:21, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1401285b0 <col:21> 'int ()' Function 0x1401284f8 'avio_rb32' 'int ()'
    |     `-RecoveryExpr 0x1401285d0 <col:31> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x140128718 <line:4:5, col:34>
    | `-VarDecl 0x140128648 <col:5, col:33> col:15 used den 'const int' cinit
    |   `-CallExpr 0x1401286f0 <col:21, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x1401286b0 <col:21> 'int ()' Function 0x1401284f8 'avio_rb32' 'int ()'
    |     `-RecoveryExpr 0x1401286d0 <col:31> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140141870 <line:7:5, line:8:16>
    | |-BinaryOperator 0x140141820 <line:7:9, col:29> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x1401287b0 <col:9, col:16> '<dependent type>' contains-errors lvalue ->nb_streams
    | | | `-CXXDependentScopeMemberExpr 0x140128768 <col:9, col:12> '<dependent type>' contains-errors lvalue ->fc
    | | |   `-RecoveryExpr 0x140128748 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x140141800 <col:29> 'int' 1
    | `-ReturnStmt 0x140141860 <line:8:9, col:16>
    |   `-IntegerLiteral 0x140141840 <col:16> 'int' 0
    |-IfStmt 0x1401437a8 <line:11:5, line:20:5> has_else
    | |-RecoveryExpr 0x140141e08 <line:11:9, line:12:82> '_Bool' contains-errors
    | |-CompoundStmt 0x1401423d0 <col:85, line:17:5>
    | | `-CallExpr 0x140142378 <line:13:9, line:16:24> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x140141f08 <line:13:9> 'int ()' Function 0x140141e50 'av_log' 'int ()'
    | |   |-CXXDependentScopeMemberExpr 0x140141f48 <col:16, col:19> '<dependent type>' contains-errors lvalue ->fc
    | |   | `-RecoveryExpr 0x140141f28 <col:16> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x1401421f8 <col:23> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x140141ff0 <line:14:16> 'char[4]' lvalue "STR"
    | |   |-CXXDependentScopeMemberExpr 0x140142280 <line:15:16, col:40> '<dependent type>' contains-errors lvalue .num
    | |   | `-CXXDependentScopeMemberExpr 0x140142238 <col:16, col:20> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio
    | |   |   `-RecoveryExpr 0x140142218 <col:16> '<dependent type>' contains-errors lvalue
    | |   |-CXXDependentScopeMemberExpr 0x140142330 <col:45, col:69> '<dependent type>' contains-errors lvalue .den
    | |   | `-CXXDependentScopeMemberExpr 0x1401422e8 <col:45, col:49> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio
    | |   |   `-RecoveryExpr 0x1401422c8 <col:45> '<dependent type>' contains-errors lvalue
    | |   |-DeclRefExpr 0x140142160 <line:16:16> 'const int' contains-errors lvalue Var 0x1401283f0 'num' 'const int'
    | |   `-DeclRefExpr 0x140142180 <col:21> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'
    | `-IfStmt 0x140143788 <line:17:12, line:20:5>
    |   |-BinaryOperator 0x140142440 <line:17:16, col:23> 'int' contains-errors '!='
    |   | |-ImplicitCastExpr 0x140142428 <col:16> 'int' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x1401423e8 <col:16> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'
    |   | `-IntegerLiteral 0x140142408 <col:23> 'int' 0
    |   `-CompoundStmt 0x140143770 <col:26, line:20:5>
    |     `-CallExpr 0x140143728 <line:18:9, line:19:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x140142540 <line:18:9> 'int ()' Function 0x140142488 'av_reduce' 'int ()'
    |       |-UnaryOperator 0x140143648 <col:19, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-CXXDependentScopeMemberExpr 0x140143600 <col:20, col:44> '<dependent type>' contains-errors lvalue .num
    |       |   `-CXXDependentScopeMemberExpr 0x1401427a8 <col:20, col:24> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio
    |       |     `-RecoveryExpr 0x140142788 <col:20> '<dependent type>' contains-errors lvalue
    |       |-UnaryOperator 0x140143710 <col:49, col:74> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-CXXDependentScopeMemberExpr 0x1401436c8 <col:50, col:74> '<dependent type>' contains-errors lvalue .den
    |       |   `-CXXDependentScopeMemberExpr 0x140143680 <col:50, col:54> '<dependent type>' contains-errors lvalue ->sample_aspect_ratio
    |       |     `-RecoveryExpr 0x140143660 <col:50> '<dependent type>' contains-errors lvalue
    |       |-DeclRefExpr 0x1401426e0 <line:19:19> 'const int' contains-errors lvalue Var 0x1401283f0 'num' 'const int'
    |       |-DeclRefExpr 0x140142700 <col:24> 'const int' contains-errors lvalue Var 0x140128648 'den' 'const int'
    |       `-IntegerLiteral 0x140142720 <col:29> 'int' 32767
    `-ReturnStmt 0x1401437f8 <line:21:5, col:12>
      `-IntegerLiteral 0x1401437d8 <col:12> 'int' 0
