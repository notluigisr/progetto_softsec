`-FunctionDecl 0x13980de38  line:1:1 SPL_METHOD 'int (int, int)'
  |-ParmVarDecl 0x13980dd58 <col:12> col:12 Array 'int'
  |-ParmVarDecl 0x13980dcd8 <col:19> col:19 getFlags 'int'
  `-CompoundStmt 0x1398268c8 <line:2:1, line:11:1>
    |-IfStmt 0x13980e380 <line:6:2, line:8:2>
    | |-BinaryOperator 0x13980e338 <line:6:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x13980e2f8 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x13980e2e0 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x13980e218 <col:6> 'int ()' Function 0x13980e160 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x13980e318 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13980e368 <col:47, line:8:2>
    |   `-ReturnStmt 0x13980e358 <line:7:3>
    `-CallExpr 0x1398268a0 <line:10:2, col:52> '<dependent type>' contains-errors
      |-DeclRefExpr 0x1398266b8 <col:2> 'int ()' Function 0x139826600 'RETURN_LONG' 'int ()'
      `-BinaryOperator 0x139826880 <col:14, col:34> '<dependent type>' contains-errors '&'
        |-CXXDependentScopeMemberExpr 0x1398267e8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->ar_flags
        | `-RecoveryExpr 0x1398267c8 <col:14> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x139826868 <col:33, col:34> '<dependent type>' contains-errors prefix '~' cannot overflow
          `-ImplicitCastExpr 0x139826850 <col:34> '<dependent type>' contains-errors <LValueToRValue>
            `-RecoveryExpr 0x139826830 <col:34> '<dependent type>' contains-errors lvalue
