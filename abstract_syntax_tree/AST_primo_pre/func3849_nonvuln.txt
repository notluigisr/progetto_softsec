`-FunctionDecl 0x14d80df18  line:1:30 invalid snow_interleave_line_footer 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x14d80dd28 <col:58, col:64> col:64 used i 'int *'
  |-ParmVarDecl 0x14d80dda8 <col:67, col:78> col:78 referenced invalid low 'int *'
  |-ParmVarDecl 0x14d80de28 <col:83, col:94> col:94 invalid high 'int *'
  `-CompoundStmt 0x14d827680 <col:99, line:6:1>
    `-ForStmt 0x14d827648 <line:2:5, line:5:5>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x14d80e080 <line:2:12, col:18> 'int' '>='
      | |-ImplicitCastExpr 0x14d80e068 <col:12, col:15> 'int' <LValueToRValue>
      | | `-ParenExpr 0x14d80e028 <col:12, col:15> 'int' lvalue
      | |   `-UnaryOperator 0x14d80e010 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
      | |     `-ImplicitCastExpr 0x14d80dff8 <col:14> 'int *' <LValueToRValue>
      | |       `-DeclRefExpr 0x14d80dfd8 <col:14> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
      | `-IntegerLiteral 0x14d80e048 <col:18> 'int' 0
      |-CompoundAssignOperator 0x14d80e130 <col:21, col:27> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
      | |-ParenExpr 0x14d80e0f0 <col:21, col:24> 'int' lvalue
      | | `-UnaryOperator 0x14d80e0d8 <col:22, col:23> 'int' lvalue prefix '*' cannot overflow
      | |   `-ImplicitCastExpr 0x14d80e0c0 <col:23> 'int *' <LValueToRValue>
      | |     `-DeclRefExpr 0x14d80e0a0 <col:23> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
      | `-IntegerLiteral 0x14d80e110 <col:27> 'int' 2
      `-CompoundStmt 0x14d827628 <col:29, line:5:5>
        |-BinaryOperator 0x14d80e3c8 <line:3:9, col:35> '<dependent type>' contains-errors '='
        | |-ArraySubscriptExpr 0x14d80e288 <col:9, col:19> '<dependent type>' contains-errors lvalue
        | | |-ImplicitCastExpr 0x14d80e270 <col:9> '<dependent type>' contains-errors <LValueToRValue>
        | | | `-RecoveryExpr 0x14d80e180 <col:9> '<dependent type>' contains-errors lvalue
        | | |   `-DeclRefExpr 0x14d80e160 <col:9> 'int *' lvalue ParmVar 0x14d80dda8 'low' 'int *'
        | | `-BinaryOperator 0x14d80e250 <col:13, col:18> 'int' '+'
        | |   |-ImplicitCastExpr 0x14d80e238 <col:13, col:16> 'int' <LValueToRValue>
        | |   | `-ParenExpr 0x14d80e1f8 <col:13, col:16> 'int' lvalue
        | |   |   `-UnaryOperator 0x14d80e1e0 <col:14, col:15> 'int' lvalue prefix '*' cannot overflow
        | |   |     `-ImplicitCastExpr 0x14d80e1c8 <col:15> 'int *' <LValueToRValue>
        | |   |       `-DeclRefExpr 0x14d80e1a8 <col:15> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
        | |   `-IntegerLiteral 0x14d80e218 <col:18> 'int' 1
        | `-ArraySubscriptExpr 0x14d80e3a8 <col:23, col:35> '<dependent type>' contains-errors lvalue
        |   |-ImplicitCastExpr 0x14d80e390 <col:23> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-RecoveryExpr 0x14d80e2a8 <col:23> '<dependent type>' contains-errors lvalue
        |   `-BinaryOperator 0x14d80e370 <col:28, col:34> 'int' '>>'
        |     |-ImplicitCastExpr 0x14d80e358 <col:28, col:31> 'int' <LValueToRValue>
        |     | `-ParenExpr 0x14d80e318 <col:28, col:31> 'int' lvalue
        |     |   `-UnaryOperator 0x14d80e300 <col:29, col:30> 'int' lvalue prefix '*' cannot overflow
        |     |     `-ImplicitCastExpr 0x14d80e2e8 <col:30> 'int *' <LValueToRValue>
        |     |       `-DeclRefExpr 0x14d80e2c8 <col:30> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
        |     `-IntegerLiteral 0x14d80e338 <col:34> 'int' 1
        `-BinaryOperator 0x14d827608 <line:4:9, col:30> '<dependent type>' contains-errors '='
          |-ArraySubscriptExpr 0x14d8274c8 <col:9, col:15> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x14d827498 <col:9> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x14d827420 <col:9> '<dependent type>' contains-errors lvalue
          | |   `-DeclRefExpr 0x14d827400 <col:9> 'int *' lvalue ParmVar 0x14d80dda8 'low' 'int *'
          | `-ImplicitCastExpr 0x14d8274b0 <col:13, col:14> 'int' <LValueToRValue>
          |   `-UnaryOperator 0x14d827480 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
          |     `-ImplicitCastExpr 0x14d827468 <col:14> 'int *' <LValueToRValue>
          |       `-DeclRefExpr 0x14d827448 <col:14> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
          `-ArraySubscriptExpr 0x14d8275e8 <col:19, col:30> '<dependent type>' contains-errors lvalue
            |-ImplicitCastExpr 0x14d8275d0 <col:19> '<dependent type>' contains-errors <LValueToRValue>
            | `-RecoveryExpr 0x14d8274e8 <col:19> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x14d8275b0 <col:23, col:29> 'int' '>>'
              |-ImplicitCastExpr 0x14d827598 <col:23, col:26> 'int' <LValueToRValue>
              | `-ParenExpr 0x14d827558 <col:23, col:26> 'int' lvalue
              |   `-UnaryOperator 0x14d827540 <col:24, col:25> 'int' lvalue prefix '*' cannot overflow
              |     `-ImplicitCastExpr 0x14d827528 <col:25> 'int *' <LValueToRValue>
              |       `-DeclRefExpr 0x14d827508 <col:25> 'int *' lvalue ParmVar 0x14d80dd28 'i' 'int *'
              `-IntegerLiteral 0x14d827578 <col:29> 'int' 1
