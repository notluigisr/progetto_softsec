`-FunctionDecl 0x142128110  line:1:13 php_imagepolygon 'void ()' static
  `-CompoundStmt 0x14380a558 <line:2:1, line:56:1>
    |-DeclStmt 0x142128390 <line:4:2, col:19>
    | |-VarDecl 0x142128290 <col:2, col:7> col:7 used NPOINTS 'long'
    | `-VarDecl 0x142128310 <col:2, col:16> col:16 used COL 'long'
    |-DeclStmt 0x142128630 <line:8:2, col:28>
    | |-VarDecl 0x142128420 <col:2, col:6> col:6 used npoints 'int'
    | |-VarDecl 0x1421284a0 <col:2, col:15> col:15 used col 'int'
    | |-VarDecl 0x142128520 <col:2, col:20> col:20 used nelem 'int'
    | `-VarDecl 0x1421285a0 <col:2, col:27> col:27 used i 'int'
    |-IfStmt 0x1438089a8 <line:10:2, line:12:2>
    | |-RecoveryExpr 0x143808960 <line:10:6, col:95> '_Bool' contains-errors
    | `-CompoundStmt 0x143808990 <col:104, line:12:2>
    |   `-ReturnStmt 0x143808980 <line:11:3>
    |-CallExpr 0x143808cc0 <line:14:2, col:59> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x143808aa8 <col:2> 'int ()' Function 0x1438089f0 'ZEND_FETCH_RESOURCE' 'int ()'
    | |-RecoveryExpr 0x143808c28 <col:22> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x143808c48 <col:26> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x143808c88 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x143808c68 <col:39> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x143808b48 <col:43, col:44> 'int' prefix '-'
    | | `-IntegerLiteral 0x143808b28 <col:44> 'int' 1
    | |-StringLiteral 0x143808ba0 <col:47> 'char[4]' lvalue "STR"
    | `-RecoveryExpr 0x143808ca0 <col:54> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x143808d80 <line:16:2, col:12> 'int' '='
    | |-DeclRefExpr 0x143808d10 <col:2> 'int' lvalue Var 0x142128420 'npoints' 'int'
    | `-ImplicitCastExpr 0x143808d68 <col:12> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x143808d50 <col:12> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x143808d30 <col:12> 'long' lvalue Var 0x142128290 'NPOINTS' 'long'
    |-BinaryOperator 0x143808e10 <line:17:2, col:8> 'int' '='
    | |-DeclRefExpr 0x143808da0 <col:2> 'int' lvalue Var 0x1421284a0 'col' 'int'
    | `-ImplicitCastExpr 0x143808df8 <col:8> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x143808de0 <col:8> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x143808dc0 <col:8> 'long' lvalue Var 0x142128310 'COL' 'long'
    |-IfStmt 0x1438091f8 <line:20:2, line:23:2>
    | |-BinaryOperator 0x1438090a8 <line:20:6, col:14> 'int' '<'
    | | |-ImplicitCastExpr 0x143809090 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x143809050 <col:6> 'int' lvalue Var 0x142128520 'nelem' 'int'
    | | `-IntegerLiteral 0x143809070 <col:14> 'int' 6
    | `-CompoundStmt 0x1438091e8 <col:17, line:23:2>
    |-IfStmt 0x1438092e0 <line:24:2, line:27:2>
    | |-BinaryOperator 0x143809270 <line:24:6, col:17> 'int' '<='
    | | |-ImplicitCastExpr 0x143809258 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x143809218 <col:6> 'int' lvalue Var 0x142128420 'npoints' 'int'
    | | `-IntegerLiteral 0x143809238 <col:17> 'int' 0
    | `-CompoundStmt 0x1438092d0 <col:20, line:27:2>
    |-IfStmt 0x1438094b8 <line:28:2, line:31:2>
    | |-BinaryOperator 0x1438093b0 <line:28:6, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x143809398 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x143809300 <col:6> 'int' lvalue Var 0x142128520 'nelem' 'int'
    | | `-BinaryOperator 0x143809378 <col:14, col:24> 'int' '*'
    | |   |-ImplicitCastExpr 0x143809360 <col:14> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x143809320 <col:14> 'int' lvalue Var 0x142128420 'npoints' 'int'
    | |   `-IntegerLiteral 0x143809340 <col:24> 'int' 2
    | `-CompoundStmt 0x1438094a8 <col:27, line:31:2>
    |-ForStmt 0x14380a130 <line:35:2, line:46:2>
    | |-BinaryOperator 0x143809518 <line:35:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1438094d8 <col:7> 'int' lvalue Var 0x1421285a0 'i' 'int'
    | | `-IntegerLiteral 0x1438094f8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1438095a8 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x143809578 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x143809538 <col:14> 'int' lvalue Var 0x1421285a0 'i' 'int'
    | | `-ImplicitCastExpr 0x143809590 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x143809558 <col:18> 'int' lvalue Var 0x142128420 'npoints' 'int'
    | |-UnaryOperator 0x1438095e8 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x1438095c8 <col:27> 'int' lvalue Var 0x1421285a0 'i' 'int'
    | `-CompoundStmt 0x14380a110 <col:32, line:46:2>
    |   |-IfStmt 0x143809f08 <line:36:3, line:40:3>
    |   | |-RecoveryExpr 0x1438097b8 <line:36:7, col:76> '_Bool' contains-errors
    |   | `-CompoundStmt 0x143809ef8 <col:85, line:40:3>
    |   `-IfStmt 0x14380a0f0 <line:41:3, line:45:3>
    |     |-RecoveryExpr 0x14380a040 <line:41:7, col:80> '_Bool' contains-errors
    |     `-CompoundStmt 0x14380a0e0 <col:89, line:45:3>
    `-IfStmt 0x14380a428 <line:48:2, line:52:2> has_else
      |-RecoveryExpr 0x14380a168 <line:48:6> '_Bool' contains-errors
      |-CompoundStmt 0x14380a2c8 <col:14, line:50:2>
      `-CompoundStmt 0x14380a418 <col:9, line:52:2>
