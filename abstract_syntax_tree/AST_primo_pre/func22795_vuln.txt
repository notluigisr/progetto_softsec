`-FunctionDecl 0x160108e28  line:1:1 invalid store_rrsets 'int (struct module_env *, struct reply_info *, int, int, int, struct reply_info *, struct regional *)'
  |-ParmVarDecl 0x1600f0448 <col:14, col:33> col:33 used env 'struct module_env *'
  |-ParmVarDecl 0x160108828 <col:38, col:57> col:57 used rep 'struct reply_info *'
  |-ParmVarDecl 0x1601088c0 <col:62, col:69> col:69 invalid now 'int'
  |-ParmVarDecl 0x160108940 <line:2:2, col:9> col:9 invalid leeway 'int'
  |-ParmVarDecl 0x1601089c0 <col:17, col:21> col:21 used pside 'int'
  |-ParmVarDecl 0x160108ab8 <col:28, col:47> col:47 used qrep 'struct reply_info *'
  |-ParmVarDecl 0x160108c88 <line:3:2, col:19> col:19 used region 'struct regional *'
  `-CompoundStmt 0x16010b108 <line:4:1, line:38:1>
    |-UnaryExprOrTypeTraitExpr 0x160108f60 <line:5:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x160108f40 <col:9> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x16010b0d0 <line:7:2, line:37:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x160109090 <line:7:11, col:18> 'int' contains-errors '<'
      | |-RecoveryExpr 0x160109070 <col:11> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x160109028 <col:13, col:18> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x160108ff0 <col:13> 'struct reply_info *' lvalue ParmVar 0x160108828 'rep' 'struct reply_info *'
      |-UnaryOperator 0x160109100 <col:31, col:32> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x1601090e0 <col:31> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x16010b0b8 <col:36, line:37:2>
        `-SwitchStmt 0x1601097c0 <line:11:3, line:36:3>
          |-RecoveryExpr 0x1601097a0 <line:11:10, line:13:41> 'int' contains-errors
          `-CompoundStmt 0x16010b090 <col:44, line:36:3>
            |-CaseStmt 0x16010a638 <line:14:3, line:15:4>
            | |-ConstantExpr 0x16010a620 <line:14:8> 'int'
            | | `-IntegerLiteral 0x16010a600 <col:8> 'int' 0
            | `-BreakStmt 0x16010a660 <line:15:4>
            |-CaseStmt 0x16010a6a0 <line:16:3, line:30:4>
            | |-ConstantExpr 0x16010a688 <line:16:8> 'int'
            | | `-IntegerLiteral 0x16010a668 <col:8> 'int' 2
            | `-IfStmt 0x16010af48 <line:17:4, line:30:4>
            |   |-ImplicitCastExpr 0x16010a6e8 <line:17:7> 'struct regional *' <LValueToRValue>
            |   | `-DeclRefExpr 0x16010a6c8 <col:7> 'struct regional *' lvalue ParmVar 0x160108c88 'region' 'struct regional *'
            |   `-CompoundStmt 0x16010af28 <col:15, line:30:4>
            |     |-DeclStmt 0x16010a8e8 <line:18:5, col:35>
            |     | |-RecordDecl 0x16010a700 <col:5, col:12> col:12 struct ub_packed_rrset_key
            |     | `-VarDecl 0x16010a868 <col:5, col:33> col:33 used ck 'struct ub_packed_rrset_key *'
            |     `-IfStmt 0x16010af08 <line:26:5, line:29:5>
            |       |-ImplicitCastExpr 0x16010ae60 <line:26:8> 'struct ub_packed_rrset_key *' <LValueToRValue>
            |       | `-DeclRefExpr 0x16010ae40 <col:8> 'struct ub_packed_rrset_key *' lvalue Var 0x16010a868 'ck' 'struct ub_packed_rrset_key *'
            |       `-CompoundStmt 0x16010aef8 <col:12, line:29:5>
            `-CaseStmt 0x16010afa0 <line:34:3, <invalid sloc>>
              |-ConstantExpr 0x16010af88 <col:8> 'int'
              | `-IntegerLiteral 0x16010af68 <col:8> 'int' 1
              `-NullStmt 0x16010b088 <<invalid sloc>>
