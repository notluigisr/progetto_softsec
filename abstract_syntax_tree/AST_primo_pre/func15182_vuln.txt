`-FunctionDecl 0x123110318  line:1:1 invalid ref_param_read_signal_error 'int (int *, int, int)'
  |-ParmVarDecl 0x123110128 <col:29, col:45> col:45 referenced invalid plist 'int *'
  |-ParmVarDecl 0x1231101a8 <col:52, col:66> col:66 invalid pkey 'int'
  |-ParmVarDecl 0x123110228 <col:72, col:76> col:76 used code 'int'
  `-CompoundStmt 0x123128ea8 <line:2:1, line:16:1>
    |-CallExpr 0x1231106a8 <line:6:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123110530 <col:5> 'int ()' Function 0x123110478 'ref_param_read' 'int ()'
    | |-RecoveryExpr 0x123110650 <col:20> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x123110568 <col:28> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x123110690 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x123110670 <col:35> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x1231105d8 <col:40, col:41> 'int' prefix '-'
    |   `-IntegerLiteral 0x1231105b8 <col:41> 'int' 1
    |-BinaryOperator 0x123128a78 <line:7:5, col:20> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x123128a60 <col:5, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x123128a48 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x123128a00 <col:6, col:10> '<dependent type>' contains-errors lvalue .presult
    | |     `-RecoveryExpr 0x1231107b8 <col:6> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x123110778 <col:20> 'int' lvalue ParmVar 0x123110228 'code' 'int'
    `-SwitchStmt 0x123128c08 <line:8:5, line:15:5>
      |-CallExpr 0x123128bd8 <line:8:13, col:50> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x123128b78 <col:13> 'int ()' Function 0x123128ac0 'ref_param_read_get_policy' 'int ()'
      | |-RecoveryExpr 0x123128b98 <col:39> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x123128bb8 <col:46> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x123128e80 <col:53, line:15:5>
        |-ReturnStmt 0x123128c68 <line:10:13, col:20>
        | `-IntegerLiteral 0x123128c48 <col:20> 'int' 0
        |-CallExpr 0x123128df0 <line:12:13, col:53> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x123128d70 <col:13> 'int ()' Function 0x123128cb8 'return_error' 'int ()'
        | `-RecoveryExpr 0x123128dd0 <col:26> '<dependent type>' contains-errors lvalue
        `-DefaultStmt 0x123128e60 <line:13:9, line:14:20>
          `-ReturnStmt 0x123128e50 <col:13, col:20>
            `-ImplicitCastExpr 0x123128e38 <col:20> 'int' <LValueToRValue>
              `-DeclRefExpr 0x123128e18 <col:20> 'int' lvalue ParmVar 0x123110228 'code' 'int'
