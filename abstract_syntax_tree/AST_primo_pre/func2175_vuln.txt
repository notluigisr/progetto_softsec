`-FunctionDecl 0x125928288  line:1:14 invalid AverageEval 'int (int *, int *)'
  |-ParmVarDecl 0x125928128 <col:26, col:41> col:41 invalid context 'int *'
  |-ParmVarDecl 0x1259281a8 <col:50, col:62> col:62 invalid node 'int *'
  `-CompoundStmt 0x125942430 <col:68, line:31:1>
    |-DeclStmt 0x125928478 <line:2:3, col:73>
    | `-VarDecl 0x125928358 <col:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x125941998 <line:6:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1259286d0 <col:3> 'int ()' Function 0x125928618 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x1259286f0 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x125941958 <col:30, col:69> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125941800 <col:30> 'int ()' Function 0x125928738 'GetOutputSafe' 'int ()'
    |   |-RecoveryExpr 0x125941820 <col:44> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x125941840 <col:53> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x125941860 <col:59> 'int' 0
    |   `-UnaryOperator 0x125941940 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x125941920 <col:63> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125941a48 <line:7:3, col:28>
    | `-VarDecl 0x1259419e0 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x125941c78 <line:8:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x125941a60 <col:3> 'int ()' Function 0x125928618 'TF_LITE_ENSURE_OK' 'int ()'
    | |-RecoveryExpr 0x125941a80 <col:21> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x125941c38 <col:30, col:67> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x125941b80 <col:30> 'int ()' Function 0x125941ac8 'GetInputSafe' 'int ()'
    |   |-RecoveryExpr 0x125941ba0 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x125941bc0 <col:52> '<dependent type>' contains-errors lvalue
    |   |-IntegerLiteral 0x125941be0 <col:58> 'int' 0
    |   `-UnaryOperator 0x125941c20 <col:61, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x125941c00 <col:62> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x125941d28 <line:9:3, line:29:3>
      |-ImplicitCastExpr 0x125941d10 <line:9:11, col:18> '<dependent type>' contains-errors <LValueToRValue>
      | `-CXXDependentScopeMemberExpr 0x125941cc8 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type
      |   `-RecoveryExpr 0x125941ca8 <col:11> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1259423f8 <col:24, line:29:3>
        |-BreakStmt 0x125941e28 <line:12:7>
        |-BreakStmt 0x125941ef0 <line:16:7>
        |-BreakStmt 0x125941fb8 <line:20:7>
        |-BreakStmt 0x125942080 <line:24:7>
        `-DefaultStmt 0x1259423d8 <line:25:5, line:27:56>
          `-CallExpr 0x1259423a0 <line:26:7, line:27:56> '<dependent type>' contains-errors
            |-DeclRefExpr 0x125942168 <line:26:7> 'int ()' Function 0x1259420b0 'TF_LITE_KERNEL_LOG' 'int ()'
            |-RecoveryExpr 0x125942188 <col:26> '<dependent type>' contains-errors lvalue
            |-StringLiteral 0x1259421f0 <col:35> 'char[4]' lvalue "STR"
            `-CallExpr 0x125942378 <line:27:26, col:55> '<dependent type>' contains-errors
              |-DeclRefExpr 0x1259422f0 <col:26> 'int ()' Function 0x125942238 'TfLiteTypeGetName' 'int ()'
              `-CXXDependentScopeMemberExpr 0x125942330 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type
                `-RecoveryExpr 0x125942310 <col:44> '<dependent type>' contains-errors lvalue
