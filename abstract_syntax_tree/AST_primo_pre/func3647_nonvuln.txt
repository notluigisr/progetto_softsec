`-FunctionDecl 0x1240274d8  line:1:18 invalid validate_segments_array 'int (struct crypt_device *, int *, int *)' static
  |-ParmVarDecl 0x12400e268 <col:42, col:63> col:63 used cd 'struct crypt_device *'
  |-ParmVarDecl 0x12400e318 <line:2:7, col:20> col:20 invalid jarr 'int *'
  |-ParmVarDecl 0x12400e398 <col:26, col:39> col:39 invalid jobj_segments 'int *'
  `-CompoundStmt 0x12402b0d0 <line:3:1, line:22:1>
    |-DeclStmt 0x1240278f0 <line:5:2, col:58>
    | |-VarDecl 0x1240275c8 <col:2, col:10> col:6 used i 'int' cinit
    | | `-IntegerLiteral 0x124027630 <col:10> 'int' 0
    | `-VarDecl 0x124027668 <col:2, col:57> col:13 used length 'int' cinit
    |   `-CStyleCastExpr 0x1240278b0 <col:22, col:57> 'int' contains-errors <Dependent>
    |     `-CallExpr 0x124027870 <col:28, col:57> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x124027830 <col:28> 'int ()' Function 0x124027778 'json_object_array_length' 'int ()'
    |       `-RecoveryExpr 0x124027850 <col:53> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x12402b080 <line:7:2, line:19:2>
    | |-BinaryOperator 0x124027978 <line:7:9, col:13> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x124027948 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x124027908 <col:9> 'int' lvalue Var 0x1240275c8 'i' 'int'
    | | `-ImplicitCastExpr 0x124027960 <col:13> 'int' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x124027928 <col:13> 'int' contains-errors lvalue Var 0x124027668 'length' 'int'
    | `-CompoundStmt 0x12402b058 <col:21, line:19:2>
    |   |-IfStmt 0x124027fc8 <line:9:3, line:12:3>
    |   | |-UnaryOperator 0x124027cf0 <line:9:7, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x124027cc0 <col:8, col:50> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x124027be8 <col:8> 'int ()' Function 0x124027b30 'json_object_is_type' 'int ()'
    |   | |   |-RecoveryExpr 0x124027c80 <col:28> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x124027ca0 <col:34> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x124027fa8 <col:53, line:12:3>
    |   |   |-CallExpr 0x124027ef8 <line:10:4, col:24> 'int'
    |   |   | |-ImplicitCastExpr 0x124027ee0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x124027de8 <col:4> 'int ()' Function 0x124027d30 'log_dbg' 'int ()'
    |   |   | |-ImplicitCastExpr 0x124027f30 <col:12> 'struct crypt_device *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x124027e08 <col:12> 'struct crypt_device *' lvalue ParmVar 0x12400e268 'cd' 'struct crypt_device *'
    |   |   | |-ImplicitCastExpr 0x124027f48 <col:16> 'char *' <ArrayToPointerDecay>
    |   |   | | `-StringLiteral 0x124027e70 <col:16> 'char[4]' lvalue "STR"
    |   |   | `-ImplicitCastExpr 0x124027f60 <col:23> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x124027e90 <col:23> 'int' lvalue Var 0x1240275c8 'i' 'int'
    |   |   `-ReturnStmt 0x124027f98 <line:11:4, col:11>
    |   |     `-IntegerLiteral 0x124027f78 <col:11> 'int' 0
    |   |-IfStmt 0x12402b000 <line:14:3, line:16:11>
    |   | |-UnaryOperator 0x1240283b0 <line:14:7, line:15:54> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x124028368 <line:14:8, line:15:54> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x1240280c8 <line:14:8> 'int ()' Function 0x124028010 'json_contains' 'int ()'
    |   | |   |-DeclRefExpr 0x1240280e8 <col:22> 'struct crypt_device *' lvalue ParmVar 0x12400e268 'cd' 'struct crypt_device *'
    |   | |   |-RecoveryExpr 0x124028108 <col:26> '<dependent type>' contains-errors lvalue
    |   | |   |-StringLiteral 0x124028128 <col:41> 'char[4]' lvalue "STR"
    |   | |   |-CallExpr 0x124028320 <line:15:8, col:35> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x124028228 <col:8> 'int ()' Function 0x124028170 'json_object_get_string' 'int ()'
    |   | |   | `-RecoveryExpr 0x124028300 <col:31> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x124028348 <col:38> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x1240283e8 <line:16:4, col:11>
    |   |   `-IntegerLiteral 0x1240283c8 <col:11> 'int' 0
    |   `-UnaryOperator 0x12402b040 <line:18:3, col:4> 'int' postfix '++'
    |     `-DeclRefExpr 0x12402b020 <col:3> 'int' lvalue Var 0x1240275c8 'i' 'int'
    `-ReturnStmt 0x12402b0c0 <line:21:2, col:9>
      `-IntegerLiteral 0x12402b0a0 <col:9> 'int' 1
