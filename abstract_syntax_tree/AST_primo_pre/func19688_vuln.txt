`-FunctionDecl 0x13c128318  line:1:1 invalid beep_print 'int (int *, const char *, int)'
  |-ParmVarDecl 0x13c128128 <col:12, col:32> col:32 invalid ndo 'int *'
  |-ParmVarDecl 0x13c1281a8 <col:37, col:51> col:51 used bp 'const char *'
  |-ParmVarDecl 0x13c128228 <col:55, col:61> col:61 invalid length 'int'
  `-CompoundStmt 0x13c143680 <line:2:1, line:20:1>
    `-IfStmt 0x13c143650 <line:4:2, line:19:24> has_else
      |-CallExpr 0x13c128668 <line:4:6, col:52> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x13c128530 <col:6> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
      | |-StringLiteral 0x13c128590 <col:18> 'char[4]' lvalue "STR"
      | |-IntegerLiteral 0x13c1285b0 <col:25> 'int' 4
      | |-CStyleCastExpr 0x13c128620 <col:28, col:42> 'const char *' <NoOp>
      | | `-ImplicitCastExpr 0x13c128608 <col:42> 'const char *' <LValueToRValue> part_of_explicit_cast
      | |   `-DeclRefExpr 0x13c1285d0 <col:42> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
      | `-RecoveryExpr 0x13c128648 <col:46> '<dependent type>' contains-errors lvalue
      |-CallExpr 0x13c142840 <line:5:3, col:24> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x13c128788 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
      | `-ParenExpr 0x13c142820 <col:12, col:23> 'char[4]' contains-errors
      |   `-BinaryOperator 0x13c142800 <col:13, col:18> 'char[4]' contains-errors ','
      |     |-RecoveryExpr 0x13c1287a8 <col:13> '<dependent type>' contains-errors lvalue
      |     `-StringLiteral 0x13c1287c8 <col:18> 'char[4]' lvalue "STR"
      `-IfStmt 0x13c143620 <line:6:7, line:19:24> has_else
        |-CallExpr 0x13c142960 <line:6:11, col:57> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13c142868 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
        | |-StringLiteral 0x13c142888 <col:23> 'char[4]' lvalue "STR"
        | |-IntegerLiteral 0x13c1428a8 <col:30> 'int' 4
        | |-CStyleCastExpr 0x13c142918 <col:33, col:47> 'const char *' <NoOp>
        | | `-ImplicitCastExpr 0x13c142900 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
        | |   `-DeclRefExpr 0x13c1428c8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
        | `-RecoveryExpr 0x13c142940 <col:51> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x13c142a40 <line:7:3, col:24> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13c1429a0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
        | `-ParenExpr 0x13c142a20 <col:12, col:23> 'char[4]' contains-errors
        |   `-BinaryOperator 0x13c142a00 <col:13, col:18> 'char[4]' contains-errors ','
        |     |-RecoveryExpr 0x13c1429c0 <col:13> '<dependent type>' contains-errors lvalue
        |     `-StringLiteral 0x13c1429e0 <col:18> 'char[4]' lvalue "STR"
        `-IfStmt 0x13c1435f0 <line:8:7, line:19:24> has_else
          |-CallExpr 0x13c142b60 <line:8:11, col:57> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x13c142a68 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
          | |-StringLiteral 0x13c142a88 <col:23> 'char[4]' lvalue "STR"
          | |-IntegerLiteral 0x13c142aa8 <col:30> 'int' 4
          | |-CStyleCastExpr 0x13c142b18 <col:33, col:47> 'const char *' <NoOp>
          | | `-ImplicitCastExpr 0x13c142b00 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
          | |   `-DeclRefExpr 0x13c142ac8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
          | `-RecoveryExpr 0x13c142b40 <col:51> '<dependent type>' contains-errors lvalue
          |-CallExpr 0x13c142c40 <line:9:3, col:24> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x13c142ba0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
          | `-ParenExpr 0x13c142c20 <col:12, col:23> 'char[4]' contains-errors
          |   `-BinaryOperator 0x13c142c00 <col:13, col:18> 'char[4]' contains-errors ','
          |     |-RecoveryExpr 0x13c142bc0 <col:13> '<dependent type>' contains-errors lvalue
          |     `-StringLiteral 0x13c142be0 <col:18> 'char[4]' lvalue "STR"
          `-IfStmt 0x13c1435c0 <line:10:7, line:19:24> has_else
            |-CallExpr 0x13c142d60 <line:10:11, col:57> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x13c142c68 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
            | |-StringLiteral 0x13c142c88 <col:23> 'char[4]' lvalue "STR"
            | |-IntegerLiteral 0x13c142ca8 <col:30> 'int' 4
            | |-CStyleCastExpr 0x13c142d18 <col:33, col:47> 'const char *' <NoOp>
            | | `-ImplicitCastExpr 0x13c142d00 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
            | |   `-DeclRefExpr 0x13c142cc8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
            | `-RecoveryExpr 0x13c142d40 <col:51> '<dependent type>' contains-errors lvalue
            |-CallExpr 0x13c142e40 <line:11:3, col:24> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x13c142da0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
            | `-ParenExpr 0x13c142e20 <col:12, col:23> 'char[4]' contains-errors
            |   `-BinaryOperator 0x13c142e00 <col:13, col:18> 'char[4]' contains-errors ','
            |     |-RecoveryExpr 0x13c142dc0 <col:13> '<dependent type>' contains-errors lvalue
            |     `-StringLiteral 0x13c142de0 <col:18> 'char[4]' lvalue "STR"
            `-IfStmt 0x13c143590 <line:12:7, line:19:24> has_else
              |-CallExpr 0x13c142f60 <line:12:11, col:57> '<dependent type>' contains-errors
              | |-DeclRefExpr 0x13c142e68 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
              | |-StringLiteral 0x13c142e88 <col:23> 'char[4]' lvalue "STR"
              | |-IntegerLiteral 0x13c142ea8 <col:30> 'int' 4
              | |-CStyleCastExpr 0x13c142f18 <col:33, col:47> 'const char *' <NoOp>
              | | `-ImplicitCastExpr 0x13c142f00 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
              | |   `-DeclRefExpr 0x13c142ec8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
              | `-RecoveryExpr 0x13c142f40 <col:51> '<dependent type>' contains-errors lvalue
              |-CallExpr 0x13c143040 <line:13:3, col:24> '<dependent type>' contains-errors
              | |-DeclRefExpr 0x13c142fa0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
              | `-ParenExpr 0x13c143020 <col:12, col:23> 'char[4]' contains-errors
              |   `-BinaryOperator 0x13c143000 <col:13, col:18> 'char[4]' contains-errors ','
              |     |-RecoveryExpr 0x13c142fc0 <col:13> '<dependent type>' contains-errors lvalue
              |     `-StringLiteral 0x13c142fe0 <col:18> 'char[4]' lvalue "STR"
              `-IfStmt 0x13c143560 <line:14:7, line:19:24> has_else
                |-CallExpr 0x13c143160 <line:14:11, col:57> '<dependent type>' contains-errors
                | |-DeclRefExpr 0x13c143068 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
                | |-StringLiteral 0x13c143088 <col:23> 'char[4]' lvalue "STR"
                | |-IntegerLiteral 0x13c1430a8 <col:30> 'int' 4
                | |-CStyleCastExpr 0x13c143118 <col:33, col:47> 'const char *' <NoOp>
                | | `-ImplicitCastExpr 0x13c143100 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
                | |   `-DeclRefExpr 0x13c1430c8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
                | `-RecoveryExpr 0x13c143140 <col:51> '<dependent type>' contains-errors lvalue
                |-CallExpr 0x13c143240 <line:15:3, col:24> '<dependent type>' contains-errors
                | |-DeclRefExpr 0x13c1431a0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
                | `-ParenExpr 0x13c143220 <col:12, col:23> 'char[4]' contains-errors
                |   `-BinaryOperator 0x13c143200 <col:13, col:18> 'char[4]' contains-errors ','
                |     |-RecoveryExpr 0x13c1431c0 <col:13> '<dependent type>' contains-errors lvalue
                |     `-StringLiteral 0x13c1431e0 <col:18> 'char[4]' lvalue "STR"
                `-IfStmt 0x13c143530 <line:16:7, line:19:24> has_else
                  |-CallExpr 0x13c143360 <line:16:11, col:57> '<dependent type>' contains-errors
                  | |-DeclRefExpr 0x13c143268 <col:11> 'int ()' Function 0x13c128478 'l_strnstart' 'int ()'
                  | |-StringLiteral 0x13c143288 <col:23> 'char[4]' lvalue "STR"
                  | |-IntegerLiteral 0x13c1432a8 <col:30> 'int' 4
                  | |-CStyleCastExpr 0x13c143318 <col:33, col:47> 'const char *' <NoOp>
                  | | `-ImplicitCastExpr 0x13c143300 <col:47> 'const char *' <LValueToRValue> part_of_explicit_cast
                  | |   `-DeclRefExpr 0x13c1432c8 <col:47> 'const char *' lvalue ParmVar 0x13c1281a8 'bp' 'const char *'
                  | `-RecoveryExpr 0x13c143340 <col:51> '<dependent type>' contains-errors lvalue
                  |-CallExpr 0x13c143440 <line:17:3, col:24> '<dependent type>' contains-errors
                  | |-DeclRefExpr 0x13c1433a0 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
                  | `-ParenExpr 0x13c143420 <col:12, col:23> 'char[4]' contains-errors
                  |   `-BinaryOperator 0x13c143400 <col:13, col:18> 'char[4]' contains-errors ','
                  |     |-RecoveryExpr 0x13c1433c0 <col:13> '<dependent type>' contains-errors lvalue
                  |     `-StringLiteral 0x13c1433e0 <col:18> 'char[4]' lvalue "STR"
                  `-CallExpr 0x13c143508 <line:19:3, col:24> '<dependent type>' contains-errors
                    |-DeclRefExpr 0x13c143468 <col:3> 'int ()' Function 0x13c1286d0 'ND_PRINT' 'int ()'
                    `-ParenExpr 0x13c1434e8 <col:12, col:23> 'char[4]' contains-errors
                      `-BinaryOperator 0x13c1434c8 <col:13, col:18> 'char[4]' contains-errors ','
                        |-RecoveryExpr 0x13c143488 <col:13> '<dependent type>' contains-errors lvalue
                        `-StringLiteral 0x13c1434a8 <col:18> 'char[4]' lvalue "STR"
