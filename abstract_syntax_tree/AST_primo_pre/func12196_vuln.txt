`-FunctionDecl 0x143141538  line:1:12 br_mdb_fill_info 'int (struct sk_buff *, struct netlink_callback *, struct net_device *)' static
  |-ParmVarDecl 0x143128e48 <col:29, col:45> col:45 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x143141228 <col:50, col:75> col:75 used cb 'struct netlink_callback *'
  |-ParmVarDecl 0x1431413f8 <line:2:8, col:27> col:27 used dev 'struct net_device *'
  `-CompoundStmt 0x143144568 <line:3:1, line:68:1>
    |-DeclStmt 0x143141a38 <line:4:2, col:42>
    | |-RecordDecl 0x143141640 <col:2, col:9> col:9 struct net_bridge
    | `-VarDecl 0x1431417a8 <col:2, col:41> col:21 used br 'struct net_bridge *' cinit
    |   `-ImplicitCastExpr 0x143141a08 <col:26, col:41> 'struct net_bridge *' <IntegralToPointer>
    |     `-CallExpr 0x1431419c8 <col:26, col:41> 'int'
    |       |-ImplicitCastExpr 0x1431419b0 <col:26> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x143141940 <col:26> 'int ()' Function 0x143141888 'netdev_priv' 'int ()'
    |       `-ImplicitCastExpr 0x1431419f0 <col:38> 'struct net_device *' <LValueToRValue>
    |         `-DeclRefExpr 0x143141960 <col:38> 'struct net_device *' lvalue ParmVar 0x1431413f8 'dev' 'struct net_device *'
    |-DeclStmt 0x143141c38 <line:5:2, col:35>
    | |-RecordDecl 0x143141a50 <col:2, col:9> col:9 struct net_bridge_mdb_htable
    | `-VarDecl 0x143141bb8 <col:2, col:32> col:32 used mdb 'struct net_bridge_mdb_htable *'
    |-DeclStmt 0x143141ed0 <line:6:2, col:29>
    | |-RecordDecl 0x143141c50 <col:2, col:9> col:9 struct nlattr
    | |-VarDecl 0x143141db8 <col:2, col:17> col:17 used nest 'struct nlattr *'
    | `-VarDecl 0x143141e48 <col:2, col:24> col:24 nest2 'struct nlattr *'
    |-DeclStmt 0x143142020 <line:7:2, col:16>
    | |-VarDecl 0x143141f00 <col:2, col:6> col:6 used i 'int'
    | `-VarDecl 0x143141f80 <col:2, col:15> col:9 used err 'int' cinit
    |   `-IntegerLiteral 0x143141fe8 <col:15> 'int' 0
    |-DeclStmt 0x143143038 <line:8:2, col:34>
    | |-VarDecl 0x143142050 <col:2, col:12> col:6 used idx 'int' cinit
    | | `-IntegerLiteral 0x1431420b8 <col:12> 'int' 0
    | `-VarDecl 0x1431420f0 <col:2, col:33> col:15 s_idx 'int' cinit
    |   `-ArraySubscriptExpr 0x143143000 <col:23, col:33> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1431421d8 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-RecoveryExpr 0x143142190 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x143142158 <col:23> 'struct netlink_callback *' lvalue ParmVar 0x143141228 'cb' 'struct netlink_callback *'
    |     `-IntegerLiteral 0x1431421b8 <col:32> 'int' 1
    |-IfStmt 0x1431430e0 <line:10:2, line:11:10>
    | |-RecoveryExpr 0x143143088 <line:10:6, col:10> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x143143050 <col:6> 'struct net_bridge *' lvalue Var 0x1431417a8 'br' 'struct net_bridge *'
    | `-ReturnStmt 0x1431430d0 <line:11:3, col:10>
    |   `-IntegerLiteral 0x1431430b0 <col:10> 'int' 0
    |-BinaryOperator 0x1431432a8 <line:13:2, col:31> 'struct net_bridge_mdb_htable *' contains-errors '='
    | |-DeclRefExpr 0x143143100 <col:2> 'struct net_bridge_mdb_htable *' lvalue Var 0x143141bb8 'mdb' 'struct net_bridge_mdb_htable *'
    | `-CallExpr 0x143143280 <col:8, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x143143200 <col:8> 'int ()' Function 0x143143148 'rcu_dereference' 'int ()'
    |   `-RecoveryExpr 0x143143258 <col:24, col:28> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x143143220 <col:24> 'struct net_bridge *' lvalue Var 0x1431417a8 'br' 'struct net_bridge *'
    |-IfStmt 0x143143348 <line:14:2, line:15:10>
    | |-UnaryOperator 0x143143300 <line:14:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1431432e8 <col:7> 'struct net_bridge_mdb_htable *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1431432c8 <col:7> 'struct net_bridge_mdb_htable *' lvalue Var 0x143141bb8 'mdb' 'struct net_bridge_mdb_htable *'
    | `-ReturnStmt 0x143143338 <line:15:3, col:10>
    |   `-IntegerLiteral 0x143143318 <col:10> 'int' 0
    |-BinaryOperator 0x143143560 <line:17:2, col:37> 'struct nlattr *' contains-errors '='
    | |-DeclRefExpr 0x143143368 <col:2> 'struct nlattr *' lvalue Var 0x143141db8 'nest' 'struct nlattr *'
    | `-CallExpr 0x143143530 <col:9, col:37> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x143143468 <col:9> 'int ()' Function 0x1431433b0 'nla_nest_start' 'int ()'
    |   |-DeclRefExpr 0x143143488 <col:24> 'struct sk_buff *' lvalue ParmVar 0x143128e48 'skb' 'struct sk_buff *'
    |   `-RecoveryExpr 0x143143510 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1431436c0 <line:18:2, line:19:11>
    | |-BinaryOperator 0x1431435f8 <line:18:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x143143580 <col:6> 'struct nlattr *' lvalue Var 0x143141db8 'nest' 'struct nlattr *'
    | | `-RecoveryExpr 0x1431435d8 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1431436b0 <line:19:3, col:11>
    |   `-UnaryOperator 0x143143698 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x143143680 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x143143660 <col:11> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1431441c8 <line:21:2, line:62:2>
    | |-BinaryOperator 0x143143720 <line:21:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1431436e0 <col:7> 'int' lvalue Var 0x143141f00 'i' 'int'
    | | `-IntegerLiteral 0x143143700 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1431437c0 <col:14, col:23> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x143143740 <col:14> 'int' lvalue Var 0x143141f00 'i' 'int'
    | | `-RecoveryExpr 0x143143798 <col:18, col:23> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x143143760 <col:18> 'struct net_bridge_mdb_htable *' lvalue Var 0x143141bb8 'mdb' 'struct net_bridge_mdb_htable *'
    | |-UnaryOperator 0x143143800 <col:28, col:29> 'int' postfix '++'
    | | `-DeclRefExpr 0x1431437e0 <col:28> 'int' lvalue Var 0x143141f00 'i' 'int'
    | `-CompoundStmt 0x1431441a0 <col:33, line:62:2>
    |   |-DeclStmt 0x143143a08 <line:22:3, col:34>
    |   | |-RecordDecl 0x143143818 <col:3, col:10> col:10 struct net_bridge_mdb_entry
    |   | `-VarDecl 0x143143988 <col:3, col:32> col:32 used mp 'struct net_bridge_mdb_entry *'
    |   |-DeclStmt 0x143143d00 <line:23:3, col:40>
    |   | |-RecordDecl 0x143143a20 <col:3, col:10> col:10 struct net_bridge_port_group
    |   | |-VarDecl 0x143143b88 <col:3, col:33> col:33 p 'struct net_bridge_port_group *'
    |   | `-VarDecl 0x143143c78 <col:3, col:38> col:38 pp 'struct net_bridge_port_group **'
    |   `-DeclStmt 0x143143f08 <line:24:3, col:31>
    |     |-RecordDecl 0x143143d18 <col:3, col:10> col:10 struct net_bridge_port
    |     `-VarDecl 0x143143e88 <col:3, col:27> col:27 port 'struct net_bridge_port *'
    |-LabelStmt 0x143144348 <line:64:1, line:65:16> 'out'
    | `-BinaryOperator 0x1431442d8 <col:2, col:16> '<dependent type>' contains-errors '='
    |   |-ArraySubscriptExpr 0x143144298 <col:2, col:12> '<dependent type>' contains-errors lvalue
    |   | |-ImplicitCastExpr 0x143144280 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>
    |   | | `-RecoveryExpr 0x143144238 <col:2, col:6> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x143144200 <col:2> 'struct netlink_callback *' lvalue ParmVar 0x143141228 'cb' 'struct netlink_callback *'
    |   | `-IntegerLiteral 0x143144260 <col:11> 'int' 1
    |   `-DeclRefExpr 0x1431442b8 <col:16> 'int' lvalue Var 0x143142050 'idx' 'int'
    |-CallExpr 0x1431444c0 <line:66:2, col:24> 'int'
    | |-ImplicitCastExpr 0x1431444a8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x143144448 <col:2> 'int ()' Function 0x143144390 'nla_nest_end' 'int ()'
    | |-ImplicitCastExpr 0x1431444f0 <col:15> 'struct sk_buff *' <LValueToRValue>
    | | `-DeclRefExpr 0x143144468 <col:15> 'struct sk_buff *' lvalue ParmVar 0x143128e48 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x143144508 <col:20> 'struct nlattr *' <LValueToRValue>
    |   `-DeclRefExpr 0x143144488 <col:20> 'struct nlattr *' lvalue Var 0x143141db8 'nest' 'struct nlattr *'
    `-ReturnStmt 0x143144558 <line:67:2, col:9>
      `-ImplicitCastExpr 0x143144540 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x143144520 <col:9> 'int' lvalue Var 0x143141f80 'err' 'int'
