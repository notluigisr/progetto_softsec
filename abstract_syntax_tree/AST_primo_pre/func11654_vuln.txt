`-FunctionDecl 0x14480ddf0  line:1:13 invalid vnc_zrle_stop 'void (int *)' static
  |-ParmVarDecl 0x14480dd28 <col:27, col:37> col:37 referenced invalid vs 'int *'
  `-CompoundStmt 0x14480e160 <line:2:1, line:6:1>
    |-BinaryOperator 0x14480dfe0 <line:4:5, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14480df30 <col:5, col:14> '<dependent type>' contains-errors lvalue .zrle
    | | `-CXXDependentScopeMemberExpr 0x14480dee8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->zrle
    | |   `-RecoveryExpr 0x14480dec0 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14480dea0 <col:5> 'int *' lvalue ParmVar 0x14480dd28 'vs' 'int *'
    | `-CXXDependentScopeMemberExpr 0x14480df98 <col:21, col:25> '<dependent type>' contains-errors lvalue ->output
    |   `-RecoveryExpr 0x14480df78 <col:21> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x14480e140 <line:5:5, col:27> '<dependent type>' contains-errors '='
      |-CXXDependentScopeMemberExpr 0x14480e048 <col:5, col:9> '<dependent type>' contains-errors lvalue ->output
      | `-RecoveryExpr 0x14480e020 <col:5> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14480e000 <col:5> 'int *' lvalue ParmVar 0x14480dd28 'vs' 'int *'
      `-CXXDependentScopeMemberExpr 0x14480e0f8 <col:18, col:27> '<dependent type>' contains-errors lvalue .tmp
        `-CXXDependentScopeMemberExpr 0x14480e0b0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->zrle
          `-RecoveryExpr 0x14480e090 <col:18> '<dependent type>' contains-errors lvalue
