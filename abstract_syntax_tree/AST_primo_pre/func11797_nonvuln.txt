`-FunctionDecl 0x150027438  line:1:1 invalid miniflow_hash_5tuple 'int (const struct miniflow *, int)'
  |-ParmVarDecl 0x15000e248 <col:22, col:45> col:45 used flow 'const struct miniflow *'
  |-ParmVarDecl 0x15000e2e0 <col:51, col:60> col:60 invalid basis 'int'
  `-CompoundStmt 0x158922aa8 <line:2:1, line:41:1>
    |-CallExpr 0x150027730 <line:3:5, col:40> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x150027650 <col:5> 'int ()' Function 0x150027598 'BUILD_ASSERT_DECL' 'int ()'
    | `-BinaryOperator 0x150027710 <col:23, col:38> 'int' contains-errors '=='
    |   |-RecoveryExpr 0x1500276f0 <col:23> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x150027688 <col:38> 'int' 40
    |-IfStmt 0x158922940 <line:6:5, line:38:5>
    | |-ImplicitCastExpr 0x150027778 <line:6:9> 'const struct miniflow *' <LValueToRValue>
    | | `-DeclRefExpr 0x150027758 <col:9> 'const struct miniflow *' lvalue ParmVar 0x15000e248 'flow' 'const struct miniflow *'
    | `-CompoundStmt 0x158922920 <col:15, line:38:5>
    |   |-IfStmt 0x1589226e0 <line:10:9, line:26:9> has_else
    |   | |-BinaryOperator 0x150027970 <line:10:13, col:43> 'int' contains-errors '=='
    |   | | |-RecoveryExpr 0x150027908 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-CallExpr 0x150027948 <col:24, col:43> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x150027888 <col:24> 'int ()' Function 0x1500277d0 'htons' 'int ()'
    |   | |   `-RecoveryExpr 0x150027928 <col:30> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x1500280f0 <col:46, line:20:9>
    |   | | |-DeclStmt 0x150027b20 <line:11:13, col:59>
    |   | | | |-RecordDecl 0x150027990 <col:13, col:20> col:20 struct flowmap
    |   | | | `-VarDecl 0x150027a88 <col:13, col:28> col:28 invalid map 'struct flowmap'
    |   | | |-CallExpr 0x150027cd8 <line:14:13, col:39> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x150027c18 <col:13> 'int ()' Function 0x150027b60 'FLOWMAP_SET' 'int ()'
    |   | | | |-UnaryOperator 0x150027c58 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | `-RecoveryExpr 0x150027c38 <col:26> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x150027cb8 <col:31> '<dependent type>' contains-errors lvalue
    |   | | |-CallExpr 0x150027dc8 <line:15:13, col:39> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x150027d08 <col:13> 'int ()' Function 0x150027b60 'FLOWMAP_SET' 'int ()'
    |   | | | |-UnaryOperator 0x150027d48 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | | | `-RecoveryExpr 0x150027d28 <col:26> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x150027da8 <col:31> '<dependent type>' contains-errors lvalue
    |   | | |-CallExpr 0x150027fa8 <line:17:13, col:58> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x150027ed8 <col:13> 'int ()' Function 0x150027e20 'MINIFLOW_FOR_EACH_IN_FLOWMAP' 'int ()'
    |   | | | |-RecoveryExpr 0x150027f88 <col:42> '<dependent type>' contains-errors lvalue
    |   | | | |-DeclRefExpr 0x150027f10 <col:49> 'const struct miniflow *' lvalue ParmVar 0x15000e248 'flow' 'const struct miniflow *'
    |   | | | `-RecoveryExpr 0x150027f30 <col:55> '<dependent type>' contains-errors lvalue
    |   | | `-CompoundStmt 0x1500280e0 <col:60, line:19:13>
    |   | `-IfStmt 0x1589226b0 <line:20:16, line:26:9> has_else
    |   |   |-RecoveryExpr 0x150028168 <line:20:20, line:21:52> '_Bool' contains-errors
    |   |   |-CompoundStmt 0x158922620 <col:55, line:24:9>
    |   |   `-CompoundStmt 0x158922698 <col:16, line:26:9>
    |   |     `-GotoStmt 0x158922680 <line:25:13, col:18> 'out' 0x158922630
    |   `-IfStmt 0x1589228a0 <line:30:9, line:34:9>
    |     |-RecoveryExpr 0x158922850 <line:30:13, line:32:28> '_Bool' contains-errors
    |     `-CompoundStmt 0x158922888 <col:44, line:34:9>
    |       `-GotoStmt 0x158922870 <line:33:13, col:18> 'out' 0x158922630
    `-LabelStmt 0x158922a88 <line:39:1, col:4> 'out'
      `-NullStmt 0x158922a80 <col:4>
