`-FunctionDecl 0x139928288  line:1:12 invalid renameUnmapSelectCb 'int (int *, int *)' static
  |-ParmVarDecl 0x139928128 <col:32, col:40> col:40 invalid pWalker 'int *'
  |-ParmVarDecl 0x1399281a8 <col:49, col:57> col:57 invalid p 'int *'
  `-CompoundStmt 0x1399422d0 <col:59, line:22:1>
    |-DeclStmt 0x139928440 <line:3:3, col:8>
    | `-VarDecl 0x1399283d8 <col:3, col:7> col:7 used i 'int'
    |-IfStmt 0x139928568 <line:4:3, col:29>
    | |-CXXDependentScopeMemberExpr 0x1399284d8 <col:7, col:15> '<dependent type>' contains-errors lvalue ->nErr
    | | `-RecoveryExpr 0x1399284b8 <col:7> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x139928558 <col:22, col:29>
    |   `-RecoveryExpr 0x139928538 <col:29> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x139941cf8 <line:5:3, line:12:3>
    | |-CallExpr 0x139928768 <line:5:7, col:23> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1399286e0 <col:7> 'int ()' Function 0x139928628 'ALWAYS' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x139928720 <col:14, col:17> '<dependent type>' contains-errors lvalue ->pEList
    | |   `-RecoveryExpr 0x139928700 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139941ce0 <col:26, line:12:3>
    |   `-ForStmt 0x139941ca8 <line:7:5, line:11:5>
    |     |-BinaryOperator 0x139941888 <line:7:9, col:11> 'int' '='
    |     | |-DeclRefExpr 0x139941848 <col:9> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     | `-IntegerLiteral 0x139941868 <col:11> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1399419b0 <col:14, col:23> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x1399418a8 <col:14> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x139941968 <col:16, col:23> '<dependent type>' contains-errors lvalue ->nExpr
    |     |   `-RecoveryExpr 0x139941948 <col:16> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x1399419f0 <col:30, col:31> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1399419d0 <col:30> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     `-CompoundStmt 0x139941c90 <col:34, line:11:5>
    |       `-IfStmt 0x139941c70 <line:8:7, line:10:7>
    |         |-RecoveryExpr 0x139941a88 <line:8:11, col:23> '_Bool' contains-errors
    |         `-CompoundStmt 0x139941c60 <col:30, line:10:7>
    |-IfStmt 0x139942140 <line:13:3, line:18:3>
    | |-CallExpr 0x139941da0 <line:13:7, col:21> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x139941d18 <col:7> 'int ()' Function 0x139928628 'ALWAYS' 'int ()'
    | | `-CXXDependentScopeMemberExpr 0x139941d58 <col:14, col:17> '<dependent type>' contains-errors lvalue ->pSrc
    | |   `-RecoveryExpr 0x139941d38 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x139942128 <col:24, line:18:3>
    |   `-ForStmt 0x1399420f0 <line:15:5, line:17:5>
    |     |-BinaryOperator 0x139941e88 <line:15:9, col:11> 'int' '='
    |     | |-DeclRefExpr 0x139941e48 <col:9> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     | `-IntegerLiteral 0x139941e68 <col:11> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x139941fb0 <col:14, col:22> 'int' contains-errors '<'
    |     | |-DeclRefExpr 0x139941ea8 <col:14> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     | `-CXXDependentScopeMemberExpr 0x139941f68 <col:16, col:22> '<dependent type>' contains-errors lvalue ->nSrc
    |     |   `-RecoveryExpr 0x139941f48 <col:16> '<dependent type>' contains-errors lvalue
    |     |-UnaryOperator 0x139941ff0 <col:28, col:29> 'int' postfix '++'
    |     | `-DeclRefExpr 0x139941fd0 <col:28> 'int' lvalue Var 0x1399283d8 'i' 'int'
    |     `-CompoundStmt 0x1399420e0 <col:32, line:17:5>
    `-CallExpr 0x1399422a0 <line:20:3, col:28> '<dependent type>' contains-errors
      |-DeclRefExpr 0x139942240 <col:3> 'int ()' Function 0x139942188 'renameWalkWith' 'int ()'
      |-RecoveryExpr 0x139942260 <col:18> '<dependent type>' contains-errors lvalue
      `-RecoveryExpr 0x139942280 <col:27> '<dependent type>' contains-errors lvalue
