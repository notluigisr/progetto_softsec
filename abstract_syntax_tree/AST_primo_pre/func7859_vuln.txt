`-FunctionDecl 0x15900de30  line:1:6 sum_init 'void (int, int)'
  |-ParmVarDecl 0x15900dcd8 <col:15, col:19> col:19 used csum_type 'int'
  |-ParmVarDecl 0x15900dd58 <col:30, col:34> col:34 used seed 'int'
  `-CompoundStmt 0x159028750 <line:2:1, line:27:1>
    |-DeclStmt 0x15900e038 <line:3:2, col:11>
    | `-VarDecl 0x15900dfd0 <col:2, col:10> col:7 used s 'char[4]'
    |-IfStmt 0x15900e328 <line:5:2, line:6:38>
    | |-BinaryOperator 0x15900e0a8 <line:5:6, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x15900e090 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15900e050 <col:6> 'int' lvalue ParmVar 0x15900dcd8 'csum_type' 'int'
    | | `-IntegerLiteral 0x15900e070 <col:18> 'int' 0
    | `-BinaryOperator 0x15900e308 <line:6:3, col:38> 'int' contains-errors '='
    |   |-DeclRefExpr 0x15900e0c8 <col:3> 'int' lvalue ParmVar 0x15900dcd8 'csum_type' 'int'
    |   `-CallExpr 0x15900e2d8 <col:15, col:38> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15900e210 <col:15> 'int ()' Function 0x15900e158 'parse_csum_name' 'int ()'
    |     |-RecoveryExpr 0x15900e2b8 <col:31> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15900e248 <col:37> 'int' 0
    |-BinaryOperator 0x15900e3a0 <line:7:2, col:16> 'int' '='
    | |-DeclRefExpr 0x15900e348 <col:2> 'int' lvalue ParmVar 0x15900dcd8 'csum_type' 'int'
    | `-ImplicitCastExpr 0x15900e388 <col:16> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x15900e368 <col:16> 'int' lvalue ParmVar 0x15900dcd8 'csum_type' 'int'
    `-SwitchStmt 0x159027e00 <line:9:2, line:26:2>
      |-ImplicitCastExpr 0x15900e3e0 <line:9:10> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x15900e3c0 <col:10> 'int' lvalue ParmVar 0x15900dcd8 'csum_type' 'int'
      `-CompoundStmt 0x1590286f8 <col:21, line:26:2>
        |-CallExpr 0x159027fd0 <line:11:3, col:16> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x159027f20 <col:3> 'int ()' Function 0x159027e68 'md5_begin' 'int ()'
        | `-UnaryOperator 0x159027fb8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x159027f98 <col:14> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x159027ff8 <line:12:3>
        |-CallExpr 0x1590281a8 <line:14:3, col:19> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x1590280f8 <col:3> 'int ()' Function 0x159028040 'mdfour_begin' 'int ()'
        | `-UnaryOperator 0x159028190 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x159028170 <col:17> '<dependent type>' contains-errors lvalue
        |-BreakStmt 0x1590281f0 <line:16:3>
        |-CallExpr 0x1590282d8 <line:19:3, col:19> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x159028228 <col:3> 'int ()' Function 0x159028040 'mdfour_begin' 'int ()'
        | `-UnaryOperator 0x1590282c0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x1590282a0 <col:17> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x1590284c8 <line:21:3, col:19> 'int'
        | |-ImplicitCastExpr 0x1590284b0 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x159028400 <col:3> 'int ()' Function 0x159028348 'SIVAL' 'int ()'
        | |-ImplicitCastExpr 0x159028500 <col:9> 'char *' <ArrayToPointerDecay>
        | | `-DeclRefExpr 0x159028420 <col:9> 'char[4]' lvalue Var 0x15900dfd0 's' 'char[4]'
        | |-IntegerLiteral 0x159028440 <col:12> 'int' 0
        | `-ImplicitCastExpr 0x159028518 <col:15> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x159028460 <col:15> 'int' lvalue ParmVar 0x15900dd58 'seed' 'int'
        |-CallExpr 0x159028688 <line:22:3, col:18> 'int'
        | |-ImplicitCastExpr 0x159028670 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x159028610 <col:3> 'int ()' Function 0x159028558 'sum_update' 'int ()'
        | |-ImplicitCastExpr 0x1590286b8 <col:14> 'char *' <ArrayToPointerDecay>
        | | `-DeclRefExpr 0x159028630 <col:14> 'char[4]' lvalue Var 0x15900dfd0 's' 'char[4]'
        | `-IntegerLiteral 0x159028650 <col:17> 'int' 4
        |-BreakStmt 0x1590286d0 <line:23:3>
        `-BreakStmt 0x1590286f0 <line:25:3>
