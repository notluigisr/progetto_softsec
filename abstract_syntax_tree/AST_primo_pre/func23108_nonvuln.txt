`-FunctionDecl 0x13e128438  line:1:1 invalid load_downloaded_routers 'int (const char *, int *, int, int, const char *)'
  |-ParmVarDecl 0x13e1280d8 <col:25, col:37> col:37 used body 'const char *'
  |-ParmVarDecl 0x13e1281a8 <col:43, col:56> col:56 invalid which 'int *'
  |-ParmVarDecl 0x13e128228 <line:2:25, col:29> col:29 used descriptor_digests 'int'
  |-ParmVarDecl 0x13e1282a8 <line:3:25, col:29> col:29 used router_purpose 'int'
  |-ParmVarDecl 0x13e128328 <line:4:25, col:37> col:37 used source 'const char *'
  `-CompoundStmt 0x13e1442e8 <line:5:1, line:27:1>
    |-DeclStmt 0x13e128618 <line:6:3, col:16>
    | `-VarDecl 0x13e1285b0 <col:3, col:15> col:8 used buf 'char[256]'
    |-DeclStmt 0x13e128700 <line:7:3, col:32>
    | `-VarDecl 0x13e128698 <col:3, col:8> col:8 invalid time_buf 'char'
    |-DeclStmt 0x13e1287b8 <line:8:3, col:16>
    | `-VarDecl 0x13e128730 <col:3, col:15> col:7 used added 'int' cinit
    |   `-IntegerLiteral 0x13e128798 <col:15> 'int' 0
    |-DeclStmt 0x13e141900 <line:9:3, col:57>
    | `-VarDecl 0x13e141800 <col:3, col:35> col:7 used general 'int' cinit
    |   `-BinaryOperator 0x13e1418e0 <col:17, col:35> 'int' contains-errors '=='
    |     |-DeclRefExpr 0x13e141868 <col:17> 'int' lvalue ParmVar 0x13e1282a8 'router_purpose' 'int'
    |     `-RecoveryExpr 0x13e1418c0 <col:35> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e141c68 <line:10:3, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e141a70 <col:3> 'int ()' Function 0x13e1419b8 'format_iso_time' 'int ()'
    | |-RecoveryExpr 0x13e141a90 <col:19> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13e141c40 <col:29, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e141b90 <col:29> 'int ()' Function 0x13e141ad8 'time' 'int ()'
    |   `-RecoveryExpr 0x13e141c20 <col:34> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e141e08 <line:11:3, col:20> 'int'
    | |-ImplicitCastExpr 0x13e141df0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13e141d78 <col:3> 'int ()' Function 0x13e141cc0 'tor_assert' 'int ()'
    | `-ImplicitCastExpr 0x13e141e30 <col:14> 'const char *' <LValueToRValue>
    |   `-DeclRefExpr 0x13e141d98 <col:14> 'const char *' lvalue ParmVar 0x13e128328 'source' 'const char *'
    |-IfStmt 0x13e143c88 <line:13:3, line:20:12>
    | |-RecoveryExpr 0x13e143c20 <line:13:7, line:19:38> '_Bool' contains-errors
    | `-ReturnStmt 0x13e143c78 <line:20:5, col:12>
    |   `-ImplicitCastExpr 0x13e143c60 <col:12> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13e143c40 <col:12> 'int' lvalue Var 0x13e128730 'added' 'int'
    |-BinaryOperator 0x13e143f78 <line:22:3, line:23:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e143ca8 <line:22:3> 'int' lvalue Var 0x13e128730 'added' 'int'
    | `-CallExpr 0x13e143f28 <col:11, line:23:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e143da8 <line:22:11> 'int ()' Function 0x13e143cf0 'router_load_routers_from_string' 'int ()'
    |   |-DeclRefExpr 0x13e143dc8 <col:43> 'const char *' lvalue ParmVar 0x13e1280d8 'body' 'const char *'
    |   |-RecoveryExpr 0x13e143ee8 <col:49> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13e143f08 <col:55> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13e143e18 <col:70> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13e143e38 <line:23:35> 'int' lvalue ParmVar 0x13e128228 'descriptor_digests' 'int'
    |   `-DeclRefExpr 0x13e143e58 <col:55> 'char[256]' lvalue Var 0x13e1285b0 'buf' 'char[256]'
    |-CallExpr 0x13e144270 <line:24:3, line:25:63> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e144078 <line:24:3> 'int ()' Function 0x13e143fc0 'control_event_bootstrap' 'int ()'
    | |-RecoveryExpr 0x13e144218 <col:27> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13e144250 <line:25:27, col:62> 'int'
    |   `-ImplicitCastExpr 0x13e144238 <col:27> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13e144190 <col:27> 'int ()' Function 0x13e1440d8 'count_loading_descriptors_progress' 'int ()'
    `-ReturnStmt 0x13e1442d8 <line:26:3, col:10>
      `-ImplicitCastExpr 0x13e1442c0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e1442a0 <col:10> 'int' lvalue Var 0x13e128730 'added' 'int'
