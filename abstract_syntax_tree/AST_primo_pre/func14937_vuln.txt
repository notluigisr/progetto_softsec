`-FunctionDecl 0x12200dff0  line:1:6 invalid pointZZ_pMul 'void (int *, const int *, const int, const int *)'
  |-ParmVarDecl 0x12200dd28 <col:19, col:31> col:31 invalid rop 'int *'
  |-ParmVarDecl 0x12200dda8 <col:36, col:54> col:54 invalid point 'const int *'
  |-ParmVarDecl 0x12200de28 <col:61, col:73> col:73 invalid scalar 'const int'
  |-ParmVarDecl 0x12200dea8 <col:81, col:99> col:99 invalid curve 'const int *'
  `-CompoundStmt 0x12202a2a8 <col:106, line:32:1>
    |-CallExpr 0x122028e08 <line:3:5, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12200e210 <col:5> 'int ()' Function 0x12200e158 'mpz_inits' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x122028c68 <col:15, col:18> '<dependent type>' contains-errors lvalue .x
    | | `-RecoveryExpr 0x122028c48 <col:15> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x122028cd0 <col:21, col:24> '<dependent type>' contains-errors lvalue .y
    | | `-RecoveryExpr 0x122028cb0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x122028d38 <col:27, col:31> '<dependent type>' contains-errors lvalue .x
    | | `-RecoveryExpr 0x122028d18 <col:27> '<dependent type>' contains-errors lvalue
    | |-CXXDependentScopeMemberExpr 0x122028da0 <col:34, col:38> '<dependent type>' contains-errors lvalue .y
    | | `-RecoveryExpr 0x122028d80 <col:34> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x122028de8 <col:41> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1220290b0 <line:4:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122028f30 <col:5> 'int ()' Function 0x122028e78 'mpz_init_set' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x122029068 <col:18, col:21> '<dependent type>' contains-errors lvalue .x
    | | `-RecoveryExpr 0x122029048 <col:18> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x122028fd0 <col:24, col:31> '<dependent type>' contains-errors lvalue ->x
    |   `-RecoveryExpr 0x122028fb0 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x122029260 <line:5:5, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1220290e0 <col:5> 'int ()' Function 0x122028e78 'mpz_init_set' 'int ()'
    | |-CXXDependentScopeMemberExpr 0x122029218 <col:18, col:21> '<dependent type>' contains-errors lvalue .y
    | | `-RecoveryExpr 0x1220291f8 <col:18> '<dependent type>' contains-errors lvalue
    | `-CXXDependentScopeMemberExpr 0x122029180 <col:24, col:31> '<dependent type>' contains-errors lvalue ->y
    |   `-RecoveryExpr 0x122029160 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x122029470 <line:6:5, col:38> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x122029370 <col:5> 'int ()' Function 0x1220292b8 'pointZZ_pDouble' 'int ()'
    | |-UnaryOperator 0x122029458 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x122029438 <col:22> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x1220293c0 <col:26> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1220293e0 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122029730 <line:8:5, col:45>
    | |-VarDecl 0x1220294c0 <col:5, col:41> col:9 used dbits 'int' cinit
    | | `-CallExpr 0x122029668 <col:17, col:41> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x122029608 <col:17> 'int ()' Function 0x122029550 'mpz_sizeinbase' 'int ()'
    | |   |-RecoveryExpr 0x122029628 <col:32> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x122029648 <col:40> 'int' 2
    | `-VarDecl 0x1220296b0 <col:5, col:44> col:44 used i 'int'
    `-ForStmt 0x12202a060 <line:10:5, line:27:5>
      |-BinaryOperator 0x1220297e0 <line:10:9, col:21> 'int' contains-errors '='
      | |-DeclRefExpr 0x122029748 <col:9> 'int' lvalue Var 0x1220296b0 'i' 'int'
      | `-BinaryOperator 0x1220297c0 <col:13, col:21> 'int' contains-errors '-'
      |   |-ImplicitCastExpr 0x1220297a8 <col:13> 'int' contains-errors <LValueToRValue>
      |   | `-DeclRefExpr 0x122029768 <col:13> 'int' contains-errors lvalue Var 0x1220294c0 'dbits' 'int'
      |   `-IntegerLiteral 0x122029788 <col:21> 'int' 2
      |-<<<NULL>>>
      |-BinaryOperator 0x122029858 <col:24, col:29> 'int' '>='
      | |-ImplicitCastExpr 0x122029840 <col:24> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x122029800 <col:24> 'int' lvalue Var 0x1220296b0 'i' 'int'
      | `-IntegerLiteral 0x122029820 <col:29> 'int' 0
      |-UnaryOperator 0x122029898 <col:32, col:33> 'int' postfix '--'
      | `-DeclRefExpr 0x122029878 <col:32> 'int' lvalue Var 0x1220296b0 'i' 'int'
      `-CompoundStmt 0x12202a048 <col:37, line:27:5>
        `-IfStmt 0x12202a018 <line:11:9, line:26:9> has_else
          |-CallExpr 0x1220299f0 <line:11:12, col:32> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x122029990 <col:12> 'int ()' Function 0x1220298d8 'mpz_tstbit' 'int ()'
          | |-RecoveryExpr 0x1220299b0 <col:23> '<dependent type>' contains-errors lvalue
          | `-DeclRefExpr 0x1220299d0 <col:31> 'int' lvalue Var 0x1220296b0 'i' 'int'
          |-CompoundStmt 0x122029ef0 <col:35, line:18:9>
          | `-CallExpr 0x122029d00 <line:12:13, col:32> '<dependent type>' contains-errors
          |   |-DeclRefExpr 0x122029b00 <col:13> 'int ()' Function 0x122029a48 'mpz_set' 'int ()'
          |   |-CXXDependentScopeMemberExpr 0x122029c50 <col:21, col:25> '<dependent type>' contains-errors lvalue .x
          |   | `-RecoveryExpr 0x122029c30 <col:21> '<dependent type>' contains-errors lvalue
          |   `-CXXDependentScopeMemberExpr 0x122029cb8 <col:28, col:31> '<dependent type>' contains-errors lvalue .x
          |     `-RecoveryExpr 0x122029c98 <col:28> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x12202a008 <line:19:14, line:26:9>
