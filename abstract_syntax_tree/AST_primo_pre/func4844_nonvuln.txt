`-FunctionDecl 0x13e80ddf8  line:1:1 invalid ex_resize 'int (int *)'
  |-ParmVarDecl 0x13e80dd28 <col:11, col:20> col:20 invalid eap 'int *'
  `-CompoundStmt 0x13e82a8c8 <line:2:1, line:33:1>
    |-DeclStmt 0x13e80df28 <line:3:5, col:11>
    | `-VarDecl 0x13e80dec0 <col:5, col:10> col:10 used n 'int'
    |-IfStmt 0x13e8282c8 <line:6:5, line:11:5>
    | |-BinaryOperator 0x13e80dff8 <line:6:9, col:27> 'int' contains-errors '>'
    | | |-CXXDependentScopeMemberExpr 0x13e80df90 <col:9, col:14> '<dependent type>' contains-errors lvalue ->addr_count
    | | | `-RecoveryExpr 0x13e80df70 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13e80dfd8 <col:27> 'int' 0
    | `-CompoundStmt 0x13e8282a8 <line:7:5, line:11:5>
    |   |-BinaryOperator 0x13e80e0a0 <line:8:2, col:11> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13e80e018 <col:2> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x13e80e058 <col:6, col:11> '<dependent type>' contains-errors lvalue ->line2
    |   |   `-RecoveryExpr 0x13e80e038 <col:6> '<dependent type>' contains-errors lvalue
    |   `-ForStmt 0x13e828270 <line:9:2, line:10:6>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x13e80e2e8 <line:9:22, col:50> 'int' contains-errors '&&'
    |     | |-BinaryOperator 0x13e80e2c8 <col:22, col:36> 'int' contains-errors '!='
    |     | | |-CXXDependentScopeMemberExpr 0x13e80e260 <col:22, col:26> '<dependent type>' contains-errors lvalue ->w_next
    |     | | | `-RecoveryExpr 0x13e80e240 <col:22> '<dependent type>' contains-errors lvalue
    |     | | `-RecoveryExpr 0x13e80e2a8 <col:36> '<dependent type>' contains-errors lvalue
    |     | `-BinaryOperator 0x13e80e200 <col:44, col:50> 'int' '>'
    |     |   |-UnaryOperator 0x13e80e1c8 <col:44, col:46> 'int' prefix '--'
    |     |   | `-DeclRefExpr 0x13e80e1a8 <col:46> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    |     |   `-IntegerLiteral 0x13e80e1e0 <col:50> 'int' 0
    |     |-BinaryOperator 0x13e828248 <col:53, col:62> '<dependent type>' contains-errors '='
    |     | |-RecoveryExpr 0x13e80e3a0 <col:53> '<dependent type>' contains-errors lvalue
    |     | `-CXXDependentScopeMemberExpr 0x13e828200 <col:58, col:62> '<dependent type>' contains-errors lvalue ->w_next
    |     |   `-RecoveryExpr 0x13e80e3c0 <col:58> '<dependent type>' contains-errors lvalue
    |     `-NullStmt 0x13e828268 <line:10:6>
    |-BinaryOperator 0x13e8285a0 <line:16:5, col:30> 'int' contains-errors '='
    | |-DeclRefExpr 0x13e8282e8 <col:5> 'int' lvalue Var 0x13e80dec0 'n' 'int'
    | `-CallExpr 0x13e828578 <col:9, col:30> 'int' contains-errors
    |   |-ImplicitCastExpr 0x13e828560 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13e828460 <col:9> 'int ()' Function 0x13e8283a8 'atol' 'int ()'
    |   `-CStyleCastExpr 0x13e828500 <col:14, col:27> 'char *' contains-errors <Dependent>
    |     `-CXXDependentScopeMemberExpr 0x13e8284a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->arg
    |       `-RecoveryExpr 0x13e828480 <col:22> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13e82a898 <line:17:5, line:32:5> has_else
      |-BinaryOperator 0x13e8286e0 <line:17:9, col:29> '<dependent type>' contains-errors '&'
      | |-CXXDependentScopeMemberExpr 0x13e828678 <col:9, col:16> '<dependent type>' contains-errors lvalue .cmod_split
      | | `-RecoveryExpr 0x13e828658 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x13e8286c0 <col:29> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x13e829048 <line:18:5, line:24:5>
      | |-IfStmt 0x13e828d58 <line:19:2, line:22:10> has_else
      | | |-BinaryOperator 0x13e8288a0 <line:19:6, col:39> 'int' contains-errors '||'
      | | | |-BinaryOperator 0x13e8287b0 <col:6, col:19> 'int' contains-errors '=='
      | | | | |-UnaryOperator 0x13e828780 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | | | | `-ImplicitCastExpr 0x13e828768 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | | | |   `-CXXDependentScopeMemberExpr 0x13e828720 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg
      | | | | |     `-RecoveryExpr 0x13e828700 <col:7> '<dependent type>' contains-errors lvalue
      | | | | `-CharacterLiteral 0x13e828798 <col:19> 'int' 45
      | | | `-BinaryOperator 0x13e828880 <col:26, col:39> 'int' contains-errors '=='
      | | |   |-UnaryOperator 0x13e828850 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
      | | |   | `-ImplicitCastExpr 0x13e828838 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
      | | |   |   `-CXXDependentScopeMemberExpr 0x13e8287f0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg
      | | |   |     `-RecoveryExpr 0x13e8287d0 <col:27> '<dependent type>' contains-errors lvalue
      | | |   `-CharacterLiteral 0x13e828868 <col:39> 'int' 43
      | | |-CompoundAssignOperator 0x13e8289d8 <line:20:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
      | | | |-DeclRefExpr 0x13e8288c0 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | | | `-CXXDependentScopeMemberExpr 0x13e828990 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_width
      | | |   `-RecoveryExpr 0x13e828970 <col:11> '<dependent type>' contains-errors lvalue
      | | `-IfStmt 0x13e828d38 <line:21:7, line:22:10>
      | |   |-BinaryOperator 0x13e828cb8 <line:21:11, col:36> 'int' contains-errors '&&'
      | |   | |-BinaryOperator 0x13e828c20 <col:11, col:16> 'int' '=='
      | |   | | |-ImplicitCastExpr 0x13e828c08 <col:11> 'int' <LValueToRValue>
      | |   | | | `-DeclRefExpr 0x13e828a08 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | |   | | `-IntegerLiteral 0x13e828a28 <col:16> 'int' 0
      | |   | `-BinaryOperator 0x13e828c98 <col:21, col:36> 'int' contains-errors '=='
      | |   |   |-ArraySubscriptExpr 0x13e828c58 <col:21, col:31> '<dependent type>' contains-errors lvalue
      | |   |   | |-ImplicitCastExpr 0x13e828c40 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
      | |   |   | | `-CXXDependentScopeMemberExpr 0x13e828aa0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg
      | |   |   | |   `-RecoveryExpr 0x13e828a80 <col:21> '<dependent type>' contains-errors lvalue
      | |   |   | `-IntegerLiteral 0x13e828ae8 <col:30> 'int' 0
      | |   |   `-RecoveryExpr 0x13e828c78 <col:36> '<dependent type>' contains-errors lvalue
      | |   `-BinaryOperator 0x13e828d18 <line:22:6, col:10> 'int' '='
      | |     |-DeclRefExpr 0x13e828cd8 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      | |     `-IntegerLiteral 0x13e828cf8 <col:10> 'int' 9999
      | `-CallExpr 0x13e829018 <line:23:2, col:29> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x13e828e68 <col:2> 'int ()' Function 0x13e828db0 'win_setwidth_win' 'int ()'
      |   |-CStyleCastExpr 0x13e828fd0 <col:19, col:24> 'int' <NoOp>
      |   | `-ImplicitCastExpr 0x13e828fb8 <col:24> 'int' <LValueToRValue> part_of_explicit_cast
      |   |   `-DeclRefExpr 0x13e828e88 <col:24> 'int' lvalue Var 0x13e80dec0 'n' 'int'
      |   `-RecoveryExpr 0x13e828ff8 <col:27> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13e82a880 <line:26:5, line:32:5>
        `-IfStmt 0x13e82a6d8 <line:27:2, line:30:10> has_else
          |-BinaryOperator 0x13e82a220 <line:27:6, col:39> 'int' contains-errors '||'
          | |-BinaryOperator 0x13e829118 <col:6, col:19> 'int' contains-errors '=='
          | | |-UnaryOperator 0x13e8290e8 <col:6, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow
          | | | `-ImplicitCastExpr 0x13e8290d0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
          | | |   `-CXXDependentScopeMemberExpr 0x13e829088 <col:7, col:12> '<dependent type>' contains-errors lvalue ->arg
          | | |     `-RecoveryExpr 0x13e829068 <col:7> '<dependent type>' contains-errors lvalue
          | | `-CharacterLiteral 0x13e829100 <col:19> 'int' 45
          | `-BinaryOperator 0x13e82a200 <col:26, col:39> 'int' contains-errors '=='
          |   |-UnaryOperator 0x13e8291b8 <col:26, col:32> '<dependent type>' contains-errors prefix '*' cannot overflow
          |   | `-ImplicitCastExpr 0x13e8291a0 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
          |   |   `-CXXDependentScopeMemberExpr 0x13e829158 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arg
          |   |     `-RecoveryExpr 0x13e829138 <col:27> '<dependent type>' contains-errors lvalue
          |   `-CharacterLiteral 0x13e8291d0 <col:39> 'int' 43
          |-CompoundAssignOperator 0x13e82a358 <line:28:6, col:15> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          | |-DeclRefExpr 0x13e82a240 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
          | `-CXXDependentScopeMemberExpr 0x13e82a310 <col:11, col:15> '<dependent type>' contains-errors lvalue ->w_height
          |   `-RecoveryExpr 0x13e82a2f0 <col:11> '<dependent type>' contains-errors lvalue
          `-IfStmt 0x13e82a6b8 <line:29:7, line:30:10>
            |-BinaryOperator 0x13e82a638 <line:29:11, col:36> 'int' contains-errors '&&'
            | |-BinaryOperator 0x13e82a5a0 <col:11, col:16> 'int' '=='
            | | |-ImplicitCastExpr 0x13e82a588 <col:11> 'int' <LValueToRValue>
            | | | `-DeclRefExpr 0x13e82a388 <col:11> 'int' lvalue Var 0x13e80dec0 'n' 'int'
            | | `-IntegerLiteral 0x13e82a3a8 <col:16> 'int' 0
            | `-BinaryOperator 0x13e82a618 <col:21, col:36> 'int' contains-errors '=='
            |   |-ArraySubscriptExpr 0x13e82a5d8 <col:21, col:31> '<dependent type>' contains-errors lvalue
            |   | |-ImplicitCastExpr 0x13e82a5c0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>
            |   | | `-CXXDependentScopeMemberExpr 0x13e82a420 <col:21, col:26> '<dependent type>' contains-errors lvalue ->arg
            |   | |   `-RecoveryExpr 0x13e82a400 <col:21> '<dependent type>' contains-errors lvalue
            |   | `-IntegerLiteral 0x13e82a468 <col:30> 'int' 0
            |   `-RecoveryExpr 0x13e82a5f8 <col:36> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x13e82a698 <line:30:6, col:10> 'int' '='
              |-DeclRefExpr 0x13e82a658 <col:6> 'int' lvalue Var 0x13e80dec0 'n' 'int'
              `-IntegerLiteral 0x13e82a678 <col:10> 'int' 9999
