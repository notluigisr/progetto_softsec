`-FunctionDecl 0x1561281f0  line:1:6 invalid lsetCommand 'void (int *)'
  |-ParmVarDecl 0x156128128 <col:18, col:26> col:26 invalid c 'int *'
  `-CompoundStmt 0x156808fd0 <col:29, line:25:1>
    |-IfStmt 0x1561424e8 <line:3:5, col:47>
    | |-BinaryOperator 0x1561424b8 <col:9, col:44> 'int' contains-errors '||'
    | | |-BinaryOperator 0x156142420 <col:9, col:14> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x1561287d8 <col:9> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x156142400 <col:14> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x156142480 <col:22, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x156128710 <col:22> 'int ()' Function 0x156128658 'checkType' 'int ()'
    | |   |-RecoveryExpr 0x156128730 <col:32> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x156142440 <col:34> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x156142460 <col:36> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1561424d8 <col:47>
    |-DeclStmt 0x156142588 <line:4:5, col:15>
    | `-VarDecl 0x156142520 <col:5, col:10> col:10 used index 'long'
    |-IfStmt 0x1561429c0 <line:7:5, line:8:9>
    | |-RecoveryExpr 0x156142990 <line:7:9, col:71> '_Bool' contains-errors
    | `-ReturnStmt 0x1561429b0 <line:8:9>
    `-IfStmt 0x156808fa0 <line:10:5, line:24:5> has_else
      |-BinaryOperator 0x156142b00 <line:10:9, col:24> 'int' contains-errors '=='
      | |-CXXDependentScopeMemberExpr 0x156142a98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encoding
      | | `-RecoveryExpr 0x156142a78 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x156142ae0 <col:24> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x156808db8 <col:48, line:22:5>
      | |-DeclStmt 0x156142e38 <line:12:9, line:13:79>
      | | `-VarDecl 0x156142bb0 <line:12:9, col:13> col:13 used replaced 'int'
      | `-IfStmt 0x156808d88 <line:14:9, line:21:9> has_else
      |   |-UnaryOperator 0x156142e88 <line:14:13, col:14> 'int' prefix '!' cannot overflow
      |   | `-ImplicitCastExpr 0x156142e70 <col:14> 'int' <LValueToRValue>
      |   |   `-DeclRefExpr 0x156142e50 <col:14> 'int' lvalue Var 0x156142bb0 'replaced' 'int'
      |   |-CompoundStmt 0x156142fc0 <col:24, line:16:9>
      |   `-CompoundStmt 0x156808d70 <col:16, line:21:9>
      |     `-CallExpr 0x156143258 <line:18:13, col:49> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x1561430f0 <col:13> 'int ()' Function 0x156143038 'signalModifiedKey' 'int ()'
      |       |-RecoveryExpr 0x156143110 <col:31> '<dependent type>' contains-errors lvalue
      |       |-CXXDependentScopeMemberExpr 0x156143150 <col:33, col:36> '<dependent type>' contains-errors lvalue ->db
      |       | `-RecoveryExpr 0x156143130 <col:33> '<dependent type>' contains-errors lvalue
      |       `-ArraySubscriptExpr 0x156143238 <col:39, col:48> '<dependent type>' contains-errors lvalue
      |         |-ImplicitCastExpr 0x156143220 <col:39, col:42> '<dependent type>' contains-errors <LValueToRValue>
      |         | `-CXXDependentScopeMemberExpr 0x1561431b8 <col:39, col:42> '<dependent type>' contains-errors lvalue ->argv
      |         |   `-RecoveryExpr 0x156143198 <col:39> '<dependent type>' contains-errors lvalue
      |         `-IntegerLiteral 0x156143200 <col:47> 'int' 1
      `-CompoundStmt 0x156808f88 <line:22:12, line:24:5>
        `-CallExpr 0x156808f48 <line:23:9, col:26> 'int'
          |-ImplicitCastExpr 0x156808f30 <col:9> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x156808eb8 <col:9> 'int ()' Function 0x156808e00 'serverPanic' 'int ()'
          `-ImplicitCastExpr 0x156808f70 <col:21> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x156808ed8 <col:21> 'char[4]' lvalue "STR"
