`-FunctionDecl 0x14e0185f8  line:1:1 referenced invalid ex_startinsert 'int (int *)'
  |-ParmVarDecl 0x14e018528 <col:16, col:25> col:25 invalid eap 'int *'
  `-CompoundStmt 0x14c81a208 <line:2:1, line:30:1>
    |-IfStmt 0x14e018ab8 <line:3:5, line:11:5>
    | |-CXXDependentScopeMemberExpr 0x14e0186c8 <line:3:9, col:14> '<dependent type>' contains-errors lvalue ->forceit
    | | `-RecoveryExpr 0x14e0186a8 <col:9> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14e018aa8 <line:4:5, line:11:5>
    |-IfStmt 0x14e018b98 <line:14:5, line:15:2>
    | |-BinaryOperator 0x14e018b68 <line:14:9, col:17> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x14e018b28 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14e018b48 <col:17> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x14e018b88 <line:15:2>
    `-IfStmt 0x14c81a1e8 <line:24:5, line:29:5>
      |-UnaryOperator 0x14c81a088 <line:24:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x14c81a070 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
      |   `-CXXDependentScopeMemberExpr 0x14c81a028 <col:10, col:15> '<dependent type>' contains-errors lvalue ->forceit
      |     `-RecoveryExpr 0x14c81a008 <col:10> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x14c81a1d8 <line:25:5, line:29:5>
