`-FunctionDecl 0x14d941938  line:1:1 invalid onig_scan 'int (int *, const int *, const int *, int *, int, int (*)(int, int, int *, void *), void *)'
  |-ParmVarDecl 0x14d928128 <col:11, col:20> col:20 invalid reg 'int *'
  |-ParmVarDecl 0x14d9281a8 <col:25, col:38> col:38 invalid str 'const int *'
  |-ParmVarDecl 0x14d928228 <col:43, col:56> col:56 invalid end 'const int *'
  |-ParmVarDecl 0x14d9282a8 <line:2:4, col:16> col:16 invalid region 'int *'
  |-ParmVarDecl 0x14d928328 <col:24, col:39> col:39 invalid option 'int'
  |-ParmVarDecl 0x14d9286c8 <line:3:4, col:53> col:10 used scan_callback 'int (*)(int, int, int *, void *)'
  |-ParmVarDecl 0x14d928748 <line:4:4, col:10> col:10 used callback_arg 'void *'
  `-CompoundStmt 0x14f0099a8 <line:5:1, line:47:1>
    |-DeclStmt 0x14d941a98 <line:6:3, col:8>
    | `-VarDecl 0x14d941a30 <col:3, col:7> col:7 used r 'int'
    |-DeclStmt 0x14d941b30 <line:7:3, col:8>
    | `-VarDecl 0x14d941ac8 <col:3, col:7> col:7 used n 'int'
    |-DeclStmt 0x14d941bc8 <line:8:3, col:9>
    | `-VarDecl 0x14d941b60 <col:3, col:7> col:7 used rs 'int'
    |-DeclStmt 0x14d941c60 <line:9:3, col:21>
    | `-VarDecl 0x14d941bf8 <col:3, col:16> col:16 referenced invalid start 'const int *'
    |-IfStmt 0x14d9422e0 <line:11:3, line:16:3>
    | |-CallExpr 0x14d941e78 <line:11:7, col:69> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14d941dd0 <col:7> 'int ()' Function 0x14d941d18 'ONIG_IS_OPTION_ON' 'int ()'
    | | |-RecoveryExpr 0x14d941df0 <col:25> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14d941e58 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d9422c0 <col:72, line:16:3>
    |   |-IfStmt 0x14d9420e8 <line:12:5, line:13:14>
    |   | |-UnaryOperator 0x14d942088 <line:12:9, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x14d942050 <col:11, col:57> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x14d941f88 <col:11> 'int ()' Function 0x14d941ed0 'ONIGENC_IS_VALID_MBC_STRING' 'int ()'
    |   | |   |-CXXDependentScopeMemberExpr 0x14d941fc8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->enc
    |   | |   | `-RecoveryExpr 0x14d941fa8 <col:39> '<dependent type>' contains-errors lvalue
    |   | |   |-RecoveryExpr 0x14d942010 <col:49> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x14d942030 <col:54> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x14d9420d8 <line:13:7, col:14>
    |   |   `-RecoveryExpr 0x14d9420b8 <col:14> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x14d942290 <line:15:5, col:65> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d9421e8 <col:5> 'int ()' Function 0x14d942130 'ONIG_OPTION_OFF' 'int ()'
    |     |-RecoveryExpr 0x14d942208 <col:21> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14d942270 <col:29> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d942340 <line:18:3, col:7> 'int' '='
    | |-DeclRefExpr 0x14d942300 <col:3> 'int' lvalue Var 0x14d941ac8 'n' 'int'
    | `-IntegerLiteral 0x14d942320 <col:7> 'int' 0
    |-BinaryOperator 0x14d9423c8 <line:19:3, col:11> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d942380 <col:3> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d942360 <col:3> 'const int *' lvalue Var 0x14d941bf8 'start' 'const int *'
    | `-RecoveryExpr 0x14d9423a8 <col:11> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14f009940 <line:20:3, line:44:3>
    | |-IntegerLiteral 0x14d9423e8 <line:20:10> 'int' 1
    | `-CompoundStmt 0x14f009920 <col:13, line:44:3>
    |   |-BinaryOperator 0x14d942660 <line:21:5, col:62> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14d942408 <col:5> 'int' lvalue Var 0x14d941a30 'r' 'int'
    |   | `-CallExpr 0x14d942608 <col:9, col:62> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14d942508 <col:9> 'int ()' Function 0x14d942450 'onig_search' 'int ()'
    |   |   |-RecoveryExpr 0x14d942528 <col:21> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942548 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942568 <col:31> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942588 <col:36> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d9425a8 <col:43> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d9425c8 <col:48> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x14d9425e8 <col:56> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x14f0098f0 <line:22:5, line:43:5> has_else
    |     |-BinaryOperator 0x14d9426d8 <line:22:9, col:14> 'int' '>='
    |     | |-ImplicitCastExpr 0x14d9426c0 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x14d942680 <col:9> 'int' lvalue Var 0x14d941a30 'r' 'int'
    |     | `-IntegerLiteral 0x14d9426a0 <col:14> 'int' 0
    |     |-CompoundStmt 0x14f009770 <col:17, line:37:5>
    |     | |-BinaryOperator 0x14f009000 <line:23:7, col:52> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x14d9426f8 <col:7> 'int' lvalue Var 0x14d941b60 'rs' 'int'
    |     | | `-CallExpr 0x14d9427b8 <col:12, col:52> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x14d942718 <col:12> 'int (*)(int, int, int *, void *)' lvalue ParmVar 0x14d9286c8 'scan_callback' 'int (*)(int, int, int *, void *)'
    |     | |   |-DeclRefExpr 0x14d942738 <col:26> 'int' lvalue Var 0x14d941ac8 'n' 'int'
    |     | |   |-DeclRefExpr 0x14d942758 <col:29> 'int' lvalue Var 0x14d941a30 'r' 'int'
    |     | |   |-RecoveryExpr 0x14d942778 <col:32> '<dependent type>' contains-errors lvalue
    |     | |   `-DeclRefExpr 0x14d942798 <col:40> 'void *' lvalue ParmVar 0x14d928748 'callback_arg' 'void *'
    |     | |-UnaryOperator 0x14f009040 <line:24:7, col:8> 'int' postfix '++'
    |     | | `-DeclRefExpr 0x14f009020 <col:7> 'int' lvalue Var 0x14d941ac8 'n' 'int'
    |     | |-IfStmt 0x14f009118 <line:25:7, line:26:16>
    |     | | |-BinaryOperator 0x14f0090b0 <line:25:11, col:17> 'int' '!='
    |     | | | |-ImplicitCastExpr 0x14f009098 <col:11> 'int' <LValueToRValue>
    |     | | | | `-DeclRefExpr 0x14f009058 <col:11> 'int' lvalue Var 0x14d941b60 'rs' 'int'
    |     | | | `-IntegerLiteral 0x14f009078 <col:17> 'int' 0
    |     | | `-ReturnStmt 0x14f009108 <line:26:9, col:16>
    |     | |   `-ImplicitCastExpr 0x14f0090f0 <col:16> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x14f0090d0 <col:16> 'int' lvalue Var 0x14d941b60 'rs' 'int'
    |     | |-IfStmt 0x14f0096b8 <line:28:7, line:33:36> has_else
    |     | | |-BinaryOperator 0x14f009258 <line:28:11, col:37> 'int' contains-errors '=='
    |     | | | |-ArraySubscriptExpr 0x14f0091d8 <col:11, col:24> '<dependent type>' contains-errors lvalue
    |     | | | | |-ImplicitCastExpr 0x14f0091c0 <col:11, col:19> '<dependent type>' contains-errors <LValueToRValue>
    |     | | | | | `-CXXDependentScopeMemberExpr 0x14f009158 <col:11, col:19> '<dependent type>' contains-errors lvalue ->end
    |     | | | | |   `-RecoveryExpr 0x14f009138 <col:11> '<dependent type>' contains-errors lvalue
    |     | | | | `-IntegerLiteral 0x14f0091a0 <col:23> 'int' 0
    |     | | | `-BinaryOperator 0x14f009238 <col:29, col:37> '<dependent type>' contains-errors '-'
    |     | | |   |-RecoveryExpr 0x14f0091f8 <col:29> '<dependent type>' contains-errors lvalue
    |     | | |   `-RecoveryExpr 0x14f009218 <col:37> '<dependent type>' contains-errors lvalue
    |     | | |-CompoundStmt 0x14f009530 <col:42, line:31:7>
    |     | | | |-IfStmt 0x14f0092e0 <line:29:9, col:27>
    |     | | | | |-BinaryOperator 0x14f0092b8 <col:13, col:22> 'int' contains-errors '>='
    |     | | | | | |-RecoveryExpr 0x14f009278 <col:13> '<dependent type>' contains-errors lvalue
    |     | | | | | `-RecoveryExpr 0x14f009298 <col:22> '<dependent type>' contains-errors lvalue
    |     | | | | `-BreakStmt 0x14f0092d8 <col:27>
    |     | | | `-CompoundAssignOperator 0x14f009500 <line:30:9, col:40> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     | | |   |-RecoveryExpr 0x14f009320 <col:9> '<dependent type>' contains-errors lvalue
    |     | | |   | `-DeclRefExpr 0x14f009300 <col:9> 'const int *' lvalue Var 0x14d941bf8 'start' 'const int *'
    |     | | |   `-CallExpr 0x14f0094d0 <col:18, col:40> '<dependent type>' contains-errors
    |     | | |     |-DeclRefExpr 0x14f009428 <col:18> 'int ()' Function 0x14f009370 'enclen' 'int ()'
    |     | | |     |-CXXDependentScopeMemberExpr 0x14f009468 <col:25, col:30> '<dependent type>' contains-errors lvalue ->enc
    |     | | |     | `-RecoveryExpr 0x14f009448 <col:25> '<dependent type>' contains-errors lvalue
    |     | | |     `-RecoveryExpr 0x14f0094b0 <col:35> '<dependent type>' contains-errors lvalue
    |     | | `-BinaryOperator 0x14f009698 <line:33:9, col:36> '<dependent type>' contains-errors '='
    |     | |   |-RecoveryExpr 0x14f009570 <col:9> '<dependent type>' contains-errors lvalue
    |     | |   | `-DeclRefExpr 0x14f009550 <col:9> 'const int *' lvalue Var 0x14d941bf8 'start' 'const int *'
    |     | |   `-BinaryOperator 0x14f009678 <col:17, col:36> '<dependent type>' contains-errors '+'
    |     | |     |-RecoveryExpr 0x14f009598 <col:17> '<dependent type>' contains-errors lvalue
    |     | |     `-ArraySubscriptExpr 0x14f009658 <col:23, col:36> '<dependent type>' contains-errors lvalue
    |     | |       |-ImplicitCastExpr 0x14f009640 <col:23, col:31> '<dependent type>' contains-errors <LValueToRValue>
    |     | |       | `-CXXDependentScopeMemberExpr 0x14f0095d8 <col:23, col:31> '<dependent type>' contains-errors lvalue ->end
    |     | |       |   `-RecoveryExpr 0x14f0095b8 <col:23> '<dependent type>' contains-errors lvalue
    |     | |       `-IntegerLiteral 0x14f009620 <col:35> 'int' 0
    |     | `-IfStmt 0x14f009750 <line:35:7, line:36:9>
    |     |   |-BinaryOperator 0x14f009728 <line:35:11, col:19> 'int' contains-errors '>'
    |     |   | |-RecoveryExpr 0x14f0096e8 <col:11> '<dependent type>' contains-errors lvalue
    |     |   | `-RecoveryExpr 0x14f009708 <col:19> '<dependent type>' contains-errors lvalue
    |     |   `-BreakStmt 0x14f009748 <line:36:9>
    |     `-IfStmt 0x14f0098c0 <line:38:10, line:43:5> has_else
    |       |-BinaryOperator 0x14f009820 <line:38:14, col:19> 'int' contains-errors '=='
    |       | |-DeclRefExpr 0x14f0097a8 <col:14> 'int' lvalue Var 0x14d941a30 'r' 'int'
    |       | `-RecoveryExpr 0x14f009800 <col:19> '<dependent type>' contains-errors lvalue
    |       |-CompoundStmt 0x14f009848 <col:34, line:40:5>
    |       | `-BreakStmt 0x14f009840 <line:39:7>
    |       `-CompoundStmt 0x14f0098a8 <line:41:10, line:43:5>
    |         `-ReturnStmt 0x14f009898 <line:42:7, col:14>
    |           `-ImplicitCastExpr 0x14f009880 <col:14> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x14f009860 <col:14> 'int' lvalue Var 0x14d941a30 'r' 'int'
    `-ReturnStmt 0x14f009998 <line:46:3, col:10>
      `-ImplicitCastExpr 0x14f009980 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f009960 <col:10> 'int' lvalue Var 0x14d941ac8 'n' 'int'
