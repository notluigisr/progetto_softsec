`-FunctionDecl 0x11d9281f8  line:1:22 invalid parse_uiv 'int (const unsigned char *)' static inline
  |-ParmVarDecl 0x11d928128 <col:32, col:53> col:53 used p 'const unsigned char *'
  `-CompoundStmt 0x11d9420b8 <line:2:1, line:20:1>
    |-DeclStmt 0x11d928328 <line:3:2, col:22>
    | `-VarDecl 0x11d9282c0 <col:2, col:16> col:16 used cursor 'unsigned char'
    |-RecoveryExpr 0x11d928420 <line:4:2, col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x11d928400 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x11d9283e0 <col:9> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11d928378 <col:18> 'int' 0
    |-IfStmt 0x11d928558 <line:6:2, line:8:2>
    | |-BinaryOperator 0x11d9284e8 <line:6:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x11d9284d0 <col:6, col:7> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x11d9284b8 <col:6, col:7> 'unsigned char' <LValueToRValue>
    | | |   `-UnaryOperator 0x11d928488 <col:6, col:7> 'const unsigned char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x11d928470 <col:7> 'const unsigned char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x11d928450 <col:7> 'const unsigned char *' lvalue ParmVar 0x11d928128 'p' 'const unsigned char *'
    | | `-CharacterLiteral 0x11d9284a0 <col:12> 'int' 43
    | `-CompoundStmt 0x11d928540 <col:17, line:8:2>
    |   `-UnaryOperator 0x11d928528 <line:7:3, col:4> 'const unsigned char *' postfix '++'
    |     `-DeclRefExpr 0x11d928508 <col:3> 'const unsigned char *' lvalue ParmVar 0x11d928128 'p' 'const unsigned char *'
    |-WhileStmt 0x11d942050 <line:10:2, line:18:2>
    | |-IntegerLiteral 0x11d928578 <line:10:9> 'int' 1
    | `-CompoundStmt 0x11d942028 <col:12, line:18:2>
    |   |-BinaryOperator 0x11d928620 <line:11:3, col:13> 'unsigned char' '='
    |   | |-DeclRefExpr 0x11d928598 <col:3> 'unsigned char' lvalue Var 0x11d9282c0 'cursor' 'unsigned char'
    |   | `-ImplicitCastExpr 0x11d928608 <col:12, col:13> 'unsigned char' <LValueToRValue>
    |   |   `-UnaryOperator 0x11d9285f0 <col:12, col:13> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x11d9285d8 <col:13> 'const unsigned char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x11d9285b8 <col:13> 'const unsigned char *' lvalue ParmVar 0x11d928128 'p' 'const unsigned char *'
    |   |-IfStmt 0x11d941fc0 <line:12:3, line:16:3> has_else
    |   | |-BinaryOperator 0x11d928750 <line:12:7, col:34> 'int' '&&'
    |   | | |-BinaryOperator 0x11d9286a8 <col:7, col:17> 'int' '>='
    |   | | | |-ImplicitCastExpr 0x11d928690 <col:7> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x11d928678 <col:7> 'unsigned char' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x11d928640 <col:7> 'unsigned char' lvalue Var 0x11d9282c0 'cursor' 'unsigned char'
    |   | | | `-CharacterLiteral 0x11d928660 <col:17> 'int' 48
    |   | | `-BinaryOperator 0x11d928730 <col:24, col:34> 'int' '<='
    |   | |   |-ImplicitCastExpr 0x11d928718 <col:24> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x11d928700 <col:24> 'unsigned char' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x11d9286c8 <col:24> 'unsigned char' lvalue Var 0x11d9282c0 'cursor' 'unsigned char'
    |   | |   `-CharacterLiteral 0x11d9286e8 <col:34> 'int' 57
    |   | |-CompoundStmt 0x11d941f90 <col:39, line:14:3>
    |   | `-CompoundStmt 0x11d941fa8 <col:10, line:16:3>
    |   |   `-BreakStmt 0x11d941fa0 <line:15:4>
    |   `-UnaryOperator 0x11d942010 <line:17:3, col:4> 'const unsigned char *' postfix '++'
    |     `-DeclRefExpr 0x11d941ff0 <col:3> 'const unsigned char *' lvalue ParmVar 0x11d928128 'p' 'const unsigned char *'
    `-ReturnStmt 0x11d9420a8 <line:19:2, col:9>
      `-RecoveryExpr 0x11d942088 <col:9> '<dependent type>' contains-errors lvalue
