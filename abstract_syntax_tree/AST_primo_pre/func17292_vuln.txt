`-FunctionDecl 0x12980e070  line:1:13 invalid spl_array_set_array 'void (int *, int *, int **, long, int)' static
  |-ParmVarDecl 0x12980dd28 <col:33, col:39> col:39 invalid object 'int *'
  |-ParmVarDecl 0x12980dda8 <col:47, col:65> col:65 referenced invalid intern 'int *'
  |-ParmVarDecl 0x12980de60 <col:73, col:80> col:80 invalid array 'int **'
  |-ParmVarDecl 0x12980dee0 <col:87, col:92> col:92 used ar_flags 'long'
  |-ParmVarDecl 0x12980df60 <col:102, col:106> col:106 used just_array 'int'
  `-CompoundStmt 0x129828638 <col:128, line:40:1>
    |-IfStmt 0x12a009338 <line:3:2, line:5:2>
    | |-BinaryOperator 0x12980e360 <line:3:6, col:26> 'int' contains-errors '=='
    | | |-CallExpr 0x12980e2e0 <col:6, col:21> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12980e2a0 <col:6> 'int ()' Function 0x12980e1e8 'Z_TYPE_PP' 'int ()'
    | | | `-RecoveryExpr 0x12980e2c0 <col:16> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12980e340 <col:26> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a009320 <col:36, line:5:2>
    |   `-CallExpr 0x12a0092f8 <line:4:3, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12a0092b8 <col:3> 'int ()' Function 0x12a009200 'SEPARATE_ZVAL_IF_NOT_REF' 'int ()'
    |     `-RecoveryExpr 0x12a0092d8 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129827c78 <line:7:2, line:22:2> has_else
    | |-RecoveryExpr 0x12a009668 <line:7:6, col:138> '_Bool' contains-errors
    | |-CompoundStmt 0x12a009c88 <col:141, line:15:2>
    | | |-CallExpr 0x12a009808 <line:8:3, col:31> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12a009768 <col:3> 'int ()' Function 0x12a0096b0 'zval_ptr_dtor' 'int ()'
    | | | `-UnaryOperator 0x12a0097f0 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-CXXDependentScopeMemberExpr 0x12a0097a8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->array
    | | |     `-RecoveryExpr 0x12a009788 <col:18> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x12a009ab0 <line:9:3, line:12:3>
    | | | |-ImplicitCastExpr 0x12a009850 <line:9:7> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12a009830 <col:7> 'int' lvalue ParmVar 0x12980df60 'just_array' 'int'
    | | | `-CompoundStmt 0x12a009a98 <col:19, line:12:3>
    | | |   `-BinaryOperator 0x12a009a78 <line:11:4, col:34> 'long' contains-errors '='
    | | |     |-DeclRefExpr 0x12a009898 <col:4> 'long' lvalue ParmVar 0x12980dee0 'ar_flags' 'long'
    | | |     `-BinaryOperator 0x12a009a58 <col:15, col:34> '<dependent type>' contains-errors '&'
    | | |       |-CXXDependentScopeMemberExpr 0x12a0099c0 <col:15, col:22> '<dependent type>' contains-errors lvalue ->ar_flags
    | | |       | `-RecoveryExpr 0x12a0099a0 <col:15> '<dependent type>' contains-errors lvalue
    | | |       `-UnaryOperator 0x12a009a40 <col:33, col:34> '<dependent type>' contains-errors prefix '~' cannot overflow
    | | |         `-ImplicitCastExpr 0x12a009a28 <col:34> '<dependent type>' contains-errors <LValueToRValue>
    | | |           `-RecoveryExpr 0x12a009a08 <col:34> '<dependent type>' contains-errors lvalue
    | | |-CompoundAssignOperator 0x12a009b58 <line:13:3, col:15> 'long' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | | |-DeclRefExpr 0x12a009ad0 <col:3> 'long' lvalue ParmVar 0x12980dee0 'ar_flags' 'long'
    | | | `-RecoveryExpr 0x12a009b38 <col:15> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x12a009c68 <line:14:3, col:20> '<dependent type>' contains-errors '='
    | |   |-CXXDependentScopeMemberExpr 0x12a009bd0 <col:3, col:11> '<dependent type>' contains-errors lvalue ->array
    | |   | `-RecoveryExpr 0x12a009ba8 <col:3> '<dependent type>' contains-errors lvalue
    | |   |   `-DeclRefExpr 0x12a009b88 <col:3> 'int *' lvalue ParmVar 0x12980dda8 'intern' 'int *'
    | |   `-UnaryOperator 0x12a009c50 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x12a009c38 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    | |       `-RecoveryExpr 0x12a009c18 <col:20> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x129827c50 <line:15:9, line:22:2>
    |   |-IfStmt 0x12a00a068 <line:16:3, line:19:3>
    |   | |-BinaryOperator 0x12a009e98 <line:16:7, col:60> 'int' contains-errors '&&'
    |   | | |-BinaryOperator 0x12a009e38 <col:7, col:27> 'int' contains-errors '!='
    |   | | | |-CallExpr 0x12a009cf8 <col:7, col:22> '<dependent type>' contains-errors
    |   | | | | |-DeclRefExpr 0x12a009cb8 <col:7> 'int ()' Function 0x12980e1e8 'Z_TYPE_PP' 'int ()'
    |   | | | | `-RecoveryExpr 0x12a009cd8 <col:17> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x12a009e18 <col:27> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x12a009e78 <col:40, col:60> 'int' contains-errors '!='
    |   | |   |-CallExpr 0x12a009d98 <col:40, col:55> '<dependent type>' contains-errors
    |   | |   | |-DeclRefExpr 0x12a009d58 <col:40> 'int ()' Function 0x12980e1e8 'Z_TYPE_PP' 'int ()'
    |   | |   | `-RecoveryExpr 0x12a009d78 <col:50> '<dependent type>' contains-errors lvalue
    |   | |   `-RecoveryExpr 0x12a009e58 <col:60> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x12a00a050 <col:70, line:19:3>
    |   |   `-ReturnStmt 0x12a00a040 <line:18:4>
    |   |-CallExpr 0x12a00a128 <line:20:3, col:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12a00a088 <col:3> 'int ()' Function 0x12a0096b0 'zval_ptr_dtor' 'int ()'
    |   | `-UnaryOperator 0x12a00a110 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-CXXDependentScopeMemberExpr 0x12a00a0c8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->array
    |   |     `-RecoveryExpr 0x12a00a0a8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x129827c30 <line:21:3, col:20> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x12a00a198 <col:3, col:11> '<dependent type>' contains-errors lvalue ->array
    |     | `-RecoveryExpr 0x12a00a170 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12a00a150 <col:3> 'int *' lvalue ParmVar 0x12980dda8 'intern' 'int *'
    |     `-UnaryOperator 0x129827c18 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x129827c00 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12a00a1e0 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129827f08 <line:23:2, line:28:2> has_else
    | |-BinaryOperator 0x129827d18 <line:23:6, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x129827ca8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x129827d00 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x129827ce8 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x129827cc8 <col:17> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x129827e58 <col:24, line:26:2>
    | `-CompoundStmt 0x129827ef8 <col:9, line:28:2>
    |-CompoundAssignOperator 0x129827fe8 <line:29:2, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x129827f80 <col:2, col:10> '<dependent type>' contains-errors lvalue ->ar_flags
    | | `-RecoveryExpr 0x129827f58 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x129827f38 <col:2> 'int *' lvalue ParmVar 0x12980dda8 'intern' 'int *'
    | `-DeclRefExpr 0x129827fc8 <col:22> 'long' lvalue ParmVar 0x12980dee0 'ar_flags' 'long'
    |-CallExpr 0x129828180 <line:30:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1298280f8 <col:2> 'int ()' Function 0x129828040 'Z_ADDREF_P' 'int ()'
    | `-CXXDependentScopeMemberExpr 0x129828138 <col:13, col:21> '<dependent type>' contains-errors lvalue ->array
    |   `-RecoveryExpr 0x129828118 <col:13> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1298284f8 <line:31:2, line:37:2>
      |-RecoveryExpr 0x129828210 <line:31:6, col:26> '_Bool' contains-errors
      `-CompoundStmt 0x1298284e0 <col:37, line:37:2>
        `-IfStmt 0x1298284c0 <line:33:3, line:36:3>
          |-RecoveryExpr 0x129828370 <line:33:7, line:34:51> '_Bool' contains-errors
          `-CompoundStmt 0x1298284b0 <col:54, line:36:3>
