`-FunctionDecl 0x14d80de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x14d80dd58 <col:6> col:6 EqOp 'int'
  |-ParmVarDecl 0x14d80dcd8 <col:12> col:12 MatchesReferencedObjectValue 'int'
  `-CompoundStmt 0x14d1231f8 <col:42, line:8:1>
    |-CallExpr 0x14d122a48 <line:5:5, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d80e0c0 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'
    | |-CallExpr 0x14d122a00 <col:12, col:43> '<dependent type>' contains-errors
    | | |-CXXDependentScopeMemberExpr 0x14d1229b8 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
    | | | `-RecoveryExpr 0x14d122998 <col:12> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14d122900 <col:27, col:42> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14d80e220 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'
    | |   `-RecoveryExpr 0x14d1228d0 <col:32, col:41> '<dependent type>' contains-errors lvalue
    | |     |-StringLiteral 0x14d80e240 <col:32> 'char[4]' lvalue "STR"
    | |     `-IntegerLiteral 0x14d80e260 <col:41> 'int' 5
    | `-RecoveryExpr 0x14d122a28 <col:46> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d122ef8 <line:6:5, col:62> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d122a78 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'
    | |-CallExpr 0x14d122eb0 <col:12, col:55> '<dependent type>' contains-errors
    | | |-CXXDependentScopeMemberExpr 0x14d122dd0 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
    | | | `-RecoveryExpr 0x14d122db0 <col:12> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x14d122e88 <col:27, col:54> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14d122af8 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'
    | |   `-RecoveryExpr 0x14d122e58 <col:32, col:53> '<dependent type>' contains-errors lvalue
    | |     |-StringLiteral 0x14d122b18 <col:32> 'char[4]' lvalue "STR"
    | |     `-CallExpr 0x14d122e30 <col:41, col:53> 'int'
    | |       |-ImplicitCastExpr 0x14d122e18 <col:41> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x14d122c18 <col:41> 'int ()' Function 0x14d122b60 'BSON_ARRAY' 'int ()'
    | |       `-IntegerLiteral 0x14d122c38 <col:52> 'int' 5
    | `-RecoveryExpr 0x14d122ed8 <col:58> '<dependent type>' contains-errors lvalue
    `-BinaryOperator 0x14d1231d8 <line:7:5, col:47> '<dependent type>' contains-errors ','
      |-CallExpr 0x14d123190 <col:5, col:44> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x14d122f28 <col:5> 'int ()' Function 0x14d80e008 'ASSERT' 'int ()'
      | `-CallExpr 0x14d123168 <col:12, col:43> '<dependent type>' contains-errors
      |   |-CXXDependentScopeMemberExpr 0x14d123120 <col:12, col:15> '<dependent type>' contains-errors lvalue .matchesBSON
      |   | `-RecoveryExpr 0x14d123100 <col:12> '<dependent type>' contains-errors lvalue
      |   `-CallExpr 0x14d123050 <col:27, col:42> '<dependent type>' contains-errors
      |     |-DeclRefExpr 0x14d122fa8 <col:27> 'int ()' Function 0x14d80e168 'BSON' 'int ()'
      |     `-RecoveryExpr 0x14d123020 <col:32, col:41> '<dependent type>' contains-errors lvalue
      |       |-StringLiteral 0x14d122fc8 <col:32> 'char[4]' lvalue "STR"
      |       `-IntegerLiteral 0x14d122fe8 <col:41> 'int' 5
      `-RecoveryExpr 0x14d1231b8 <col:47> '<dependent type>' contains-errors lvalue
