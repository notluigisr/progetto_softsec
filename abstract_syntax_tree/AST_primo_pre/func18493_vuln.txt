`-FunctionDecl 0x11e928a88  line:1:14 invalid Prepare 'int (int *, int *)'
  |-ParmVarDecl 0x11e928928 <col:22, col:37> col:37 invalid context 'int *'
  |-ParmVarDecl 0x11e9289a8 <col:46, col:58> col:58 invalid node 'int *'
  `-CompoundStmt 0x11e943a58 <col:64, line:36:1>
    |-DeclStmt 0x11e928c78 <line:2:3, line:3:70>
    | `-VarDecl 0x11e928b58 <line:2:3, col:9> col:9 used params 'int *' auto
    |-CallExpr 0x11e928f98 <line:5:3, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e928df0 <col:3> 'int ()' Function 0x11e928d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11e928e10 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x11e928f50 <col:30, col:44> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11e928f10 <col:30> 'int ()' Function 0x11e928e58 'NumInputs' 'int ()'
    | | `-RecoveryExpr 0x11e928f30 <col:40> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11e928f78 <col:47> 'int' 1
    |-CallExpr 0x11e942188 <line:6:3, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e928fd0 <col:3> 'int ()' Function 0x11e928d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11e942000 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x11e942140 <col:30, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11e942100 <col:30> 'int ()' Function 0x11e942048 'NumOutputs' 'int ()'
    | | `-RecoveryExpr 0x11e942120 <col:41> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11e942168 <col:48> 'int' 1
    |-DeclStmt 0x11e9423d0 <line:8:3, col:68>
    | `-VarDecl 0x11e9421d8 <col:3, col:23> col:23 invalid input 'const int *'
    |-CallExpr 0x11e942738 <line:11:3, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e942590 <col:3> 'int ()' Function 0x11e928d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11e9425b0 <col:21> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x11e9426f0 <col:30, col:49> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11e9426b0 <col:30> 'int ()' Function 0x11e9425f8 'NumDimensions' 'int ()'
    | | `-RecoveryExpr 0x11e9426d0 <col:44> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x11e942718 <col:52> 'int' 4
    |-DeclStmt 0x11e9428b8 <line:13:3, col:32>
    | `-VarDecl 0x11e942788 <col:3, col:28> col:8 used data_type 'int' auto cinit
    |   `-CXXDependentScopeMemberExpr 0x11e942870 <col:20, col:28> '<dependent type>' contains-errors lvalue ->type
    |     `-RecoveryExpr 0x11e942850 <col:20> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11e942cf8 <line:20:3, col:44>
    | `-VarDecl 0x11e942c30 <col:3, col:34> col:13 used block_size 'const int' cinit
    |   `-RecoveryExpr 0x11e942cd0 <col:26, col:34> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x11e942c98 <col:26> 'int *' lvalue Var 0x11e928b58 'params' 'int *'
    |-DeclStmt 0x11e942e98 <line:21:3, col:48>
    | `-VarDecl 0x11e942d28 <col:3, col:47> col:13 used input_height 'const int' cinit
    |   `-ArraySubscriptExpr 0x11e942e78 <col:28, col:47> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x11e942e60 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x11e942df8 <col:28, col:41> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x11e942db0 <col:28, col:35> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x11e942d90 <col:28> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x11e942e40 <col:46> 'int' 1
    |-DeclStmt 0x11e943038 <line:22:3, col:47>
    | `-VarDecl 0x11e942ec8 <col:3, col:46> col:13 used input_width 'const int' cinit
    |   `-ArraySubscriptExpr 0x11e943018 <col:27, col:46> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x11e943000 <col:27, col:40> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x11e942f98 <col:27, col:40> '<dependent type>' contains-errors lvalue ->data
    |     |   `-CXXDependentScopeMemberExpr 0x11e942f50 <col:27, col:34> '<dependent type>' contains-errors lvalue ->dims
    |     |     `-RecoveryExpr 0x11e942f30 <col:27> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x11e942fe0 <col:45> 'int' 2
    |-DeclStmt 0x11e943160 <line:23:3, col:48>
    | `-VarDecl 0x11e943068 <col:3, col:38> col:7 used output_height 'int' cinit
    |   `-BinaryOperator 0x11e943140 <col:23, col:38> 'int' contains-errors '/'
    |     |-ImplicitCastExpr 0x11e943110 <col:23> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x11e9430d0 <col:23> 'const int' contains-errors lvalue Var 0x11e942d28 'input_height' 'const int'
    |     `-ImplicitCastExpr 0x11e943128 <col:38> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x11e9430f0 <col:38> 'const int' contains-errors lvalue Var 0x11e942c30 'block_size' 'const int'
    |-DeclStmt 0x11e943288 <line:24:3, col:46>
    | `-VarDecl 0x11e943190 <col:3, col:36> col:7 used output_width 'int' cinit
    |   `-BinaryOperator 0x11e943268 <col:22, col:36> 'int' contains-errors '/'
    |     |-ImplicitCastExpr 0x11e943238 <col:22> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x11e9431f8 <col:22> 'const int' contains-errors lvalue Var 0x11e942ec8 'input_width' 'const int'
    |     `-ImplicitCastExpr 0x11e943250 <col:36> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x11e943218 <col:36> 'const int' contains-errors lvalue Var 0x11e942c30 'block_size' 'const int'
    |-CallExpr 0x11e943390 <line:26:3, col:70> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e9432a0 <col:3> 'int ()' Function 0x11e928d38 'TF_LITE_ENSURE_EQ' 'int ()'
    | |-RecoveryExpr 0x11e9432c0 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x11e9432e0 <col:30> 'const int' contains-errors lvalue Var 0x11e942d28 'input_height' 'const int'
    | `-BinaryOperator 0x11e943370 <col:44, col:60> 'int' contains-errors '*'
    |   |-ImplicitCastExpr 0x11e943340 <col:44> 'int' contains-errors <LValueToRValue>
    |   | `-DeclRefExpr 0x11e943300 <col:44> 'int' contains-errors lvalue Var 0x11e943068 'output_height' 'int'
    |   `-ImplicitCastExpr 0x11e943358 <col:60> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x11e943320 <col:60> 'const int' contains-errors lvalue Var 0x11e942c30 'block_size' 'const int'
    `-CallExpr 0x11e9434b8 <line:27:3, col:68> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11e9433c8 <col:3> 'int ()' Function 0x11e928d38 'TF_LITE_ENSURE_EQ' 'int ()'
      |-RecoveryExpr 0x11e9433e8 <col:21> '<dependent type>' contains-errors lvalue
      |-DeclRefExpr 0x11e943408 <col:30> 'const int' contains-errors lvalue Var 0x11e942ec8 'input_width' 'const int'
      `-BinaryOperator 0x11e943498 <col:43, col:58> 'int' contains-errors '*'
        |-ImplicitCastExpr 0x11e943468 <col:43> 'int' contains-errors <LValueToRValue>
        | `-DeclRefExpr 0x11e943428 <col:43> 'int' contains-errors lvalue Var 0x11e943190 'output_width' 'int'
        `-ImplicitCastExpr 0x11e943480 <col:58> 'int' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x11e943448 <col:58> 'const int' contains-errors lvalue Var 0x11e942c30 'block_size' 'const int'
