`-FunctionDecl 0x12800df10  line:1:13 invalid spl_array_unset_dimension_ex 'void (int, int *, int *)' static
  |-ParmVarDecl 0x12800dcd8 <col:42, col:46> col:46 used check_inherited 'int'
  |-ParmVarDecl 0x12800dda8 <col:63, col:69> col:69 invalid object 'int *'
  |-ParmVarDecl 0x12800de28 <col:77, col:83> col:83 invalid offset 'int *'
  `-CompoundStmt 0x12802b7b0 <line:2:1, line:81:1>
    |-DeclStmt 0x12800e080 <line:4:2, col:12>
    | `-VarDecl 0x12800e018 <col:2, col:7> col:7 used index 'long'
    |-IfStmt 0x128027e48 <line:7:2, line:12:2>
    | |-BinaryOperator 0x12800e1b8 <line:7:6, col:33> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x12800e0b0 <col:6> 'int' lvalue ParmVar 0x12800dcd8 'check_inherited' 'int'
    | | `-CXXDependentScopeMemberExpr 0x12800e170 <col:25, col:33> '<dependent type>' contains-errors lvalue ->fptr_offset_del
    | |   `-RecoveryExpr 0x12800e150 <col:25> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128027e18 <col:50, line:12:2>
    |   |-CallExpr 0x12800e370 <line:8:3, col:29> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12800e330 <col:3> 'int ()' Function 0x12800e278 'SEPARATE_ARG_IF_REF' 'int ()'
    |   | `-RecoveryExpr 0x12800e350 <col:23> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x128027c58 <line:9:3, col:107> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1280278b8 <col:3> 'int ()' Function 0x128027800 'zend_call_method_with_1_params' 'int ()'
    |   | |-UnaryOperator 0x1280278f8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-RecoveryExpr 0x1280278d8 <col:35> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x128027a30 <col:43, col:59> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1280279f0 <col:43> 'int ()' Function 0x128027938 'Z_OBJCE_P' 'int ()'
    |   | | `-RecoveryExpr 0x128027a10 <col:53> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x128027c20 <col:62, col:71> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x128027bd8 <col:63, col:71> '<dependent type>' contains-errors lvalue ->fptr_offset_del
    |   | |   `-RecoveryExpr 0x128027bb8 <col:63> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x128027b10 <col:88> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x128027c38 <col:95> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x128027b48 <col:101> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x128027de0 <line:10:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x128027d88 <col:3> 'int ()' Function 0x128027cd0 'zval_ptr_dtor' 'int ()'
    |   | `-UnaryOperator 0x128027dc8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x128027da8 <col:18> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x128027e08 <line:11:3>
    `-SwitchStmt 0x128027fb0 <line:14:2, line:79:2>
      |-CallExpr 0x128027f88 <line:14:9, col:24> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x128027f48 <col:9> 'int ()' Function 0x128027e90 'Z_TYPE_P' 'int ()'
      | `-RecoveryExpr 0x128027f68 <col:18> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12802b658 <col:27, line:79:2>
        |-IfStmt 0x128028298 <line:17:3, line:20:3>
        | |-RecoveryExpr 0x128028130 <line:17:7, col:25> '_Bool' contains-errors
        | `-CompoundStmt 0x128028280 <col:28, line:20:3>
        |   `-ReturnStmt 0x128028270 <line:19:4>
        |-IfStmt 0x128029e38 <line:21:3, line:56:3> has_else
        | |-RecoveryExpr 0x1280283b8 <line:21:7, col:29> '_Bool' contains-errors
        | |-CompoundStmt 0x128029678 <col:32, line:25:3>
        | | `-IfStmt 0x128029658 <line:22:4, line:24:4>
        | |   |-RecoveryExpr 0x128028768 <line:22:8, col:84> '_Bool' contains-errors
        | |   `-CompoundStmt 0x128029648 <col:87, line:24:4>
        | `-CompoundStmt 0x128029e20 <line:25:10, line:56:3>
        |   `-IfStmt 0x128029df0 <line:26:4, line:55:4> has_else
        |     |-RecoveryExpr 0x1280298a0 <line:26:8, col:75> '_Bool' contains-errors
        |     |-CompoundStmt 0x128029968 <col:84, line:28:4>
        |     `-CompoundStmt 0x128029dd0 <col:11, line:55:4>
        |       |-WhileStmt 0x128029b88 <line:31:5, line:45:5>
        |       | |-IntegerLiteral 0x128029978 <line:31:12> 'int' 1
        |       | `-CompoundStmt 0x128029b70 <col:15, line:45:5>
        |       |   `-IfStmt 0x128029b40 <line:32:6, line:44:6> has_else
        |       |     |-RecoveryExpr 0x1280299b8 <line:32:10, col:49> '_Bool' contains-errors
        |       |     |-CompoundStmt 0x1280299e0 <col:52, line:34:6>
        |       |     | `-BreakStmt 0x1280299d8 <line:33:7>
        |       |     `-IfStmt 0x128029b10 <line:34:13, line:44:6> has_else
        |       |       |-RecoveryExpr 0x128029a18 <line:34:17, col:41> '_Bool' contains-errors
        |       |       |-CompoundStmt 0x128029ad8 <col:52, line:41:6>
        |       |       | `-IfStmt 0x128029aa8 <line:35:10, line:40:10> has_else
        |       |       |   |-RecoveryExpr 0x128029a58 <line:35:14, col:55> '_Bool' contains-errors
        |       |       |   |-CompoundStmt 0x128029a80 <col:58, line:38:7>
        |       |       |   | `-BreakStmt 0x128029a78 <line:37:11>
        |       |       |   `-CompoundStmt 0x128029a98 <line:38:14, line:40:10>
        |       |       `-CompoundStmt 0x128029af8 <line:41:13, line:44:6>
        |       |         `-BreakStmt 0x128029af0 <line:43:7>
        |       `-IfStmt 0x128029db0 <line:46:5, line:54:5>
        |         |-RecoveryExpr 0x128029ba8 <line:46:9> '_Bool' contains-errors
        |         `-CompoundStmt 0x128029d98 <col:14, line:54:5>
        |           `-IfStmt 0x128029d78 <line:49:6, line:53:6>
        |             |-RecoveryExpr 0x128029d48 <line:49:10, line:51:35> '_Bool' contains-errors
        |             `-CompoundStmt 0x128029d68 <col:38, line:53:6>
        |-BreakStmt 0x128029e68 <line:57:3>
        |-IfStmt 0x12802a278 <line:62:3, line:66:3> has_else
        | |-RecoveryExpr 0x128029ed8 <line:62:7, col:23> '_Bool' contains-errors
        | |-CompoundStmt 0x12802a0c0 <col:34, line:64:3>
        | | `-BinaryOperator 0x12802a0a0 <line:63:4, col:33> 'long' contains-errors '='
        | |   |-DeclRefExpr 0x128029ef8 <col:4> 'long' lvalue Var 0x12800e018 'index' 'long'
        | |   `-CStyleCastExpr 0x12802a078 <col:12, col:33> 'long' contains-errors <Dependent>
        | |     `-CallExpr 0x12802a038 <col:18, col:33> '<dependent type>' contains-errors
        | |       |-DeclRefExpr 0x128029ff8 <col:18> 'int ()' Function 0x128029f40 'Z_DVAL_P' 'int ()'
        | |       `-RecoveryExpr 0x12802a018 <col:27> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x12802a260 <line:64:10, line:66:3>
        |   `-BinaryOperator 0x12802a240 <line:65:4, col:27> 'long' contains-errors '='
        |     |-DeclRefExpr 0x12802a0d8 <col:4> 'long' lvalue Var 0x12800e018 'index' 'long'
        |     `-CallExpr 0x12802a218 <col:12, col:27> '<dependent type>' contains-errors
        |       |-DeclRefExpr 0x12802a1d8 <col:12> 'int ()' Function 0x12802a120 'Z_LVAL_P' 'int ()'
        |       `-RecoveryExpr 0x12802a1f8 <col:21> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x12802a390 <line:68:3, line:71:3>
        | |-RecoveryExpr 0x12802a308 <line:68:7, col:25> '_Bool' contains-errors
        | `-CompoundStmt 0x12802a378 <col:28, line:71:3>
        |   `-ReturnStmt 0x12802a368 <line:70:4>
        |-IfStmt 0x12802a5a8 <line:72:3, line:74:3>
        | |-RecoveryExpr 0x12802a4d0 <line:72:7, col:41> '_Bool' contains-errors
        | `-CompoundStmt 0x12802a598 <col:50, line:74:3>
        |-BreakStmt 0x12802a5c8 <line:75:3>
        |-DefaultStmt 0x12802b628 <line:76:2, col:9>
        | `-NullStmt 0x12802b620 <col:9>
        `-ReturnStmt 0x12802b648 <line:78:3>
