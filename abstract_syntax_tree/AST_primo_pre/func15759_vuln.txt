`-FunctionDecl 0x14b00de88  line:1:20 invalid parse_array 'const char *(int *, const char *)' static
  |-ParmVarDecl 0x14b00dd28 <col:33, col:40> col:40 referenced invalid item 'int *'
  |-ParmVarDecl 0x14b00dda8 <col:46, col:58> col:58 used value 'const char *'
  `-CompoundStmt 0x14a922828 <line:2:1, line:37:1>
    |-IfStmt 0x14b00e090 <line:5:2, line:9:2>
    | |-BinaryOperator 0x14b00dff0 <line:5:7, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x14b00dfd8 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14b00dfc0 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14b00df90 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14b00df78 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14b00df58 <col:8> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    | | `-CharacterLiteral 0x14b00dfa8 <col:17> 'int' 91
    | `-CompoundStmt 0x14b00e078 <col:23, line:9:2>
    |   `-ReturnStmt 0x14b00e068 <line:8:3, col:10>
    |     `-ImplicitCastExpr 0x14b00e050 <col:10> 'const char *' <NullToPointer>
    |       `-IntegerLiteral 0x14b00e030 <col:10> 'int' 0
    |-BinaryOperator 0x14b00e198 <line:11:2, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14b00e0f8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->type
    | | `-RecoveryExpr 0x14b00e0d0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14b00e0b0 <col:2> 'int *' lvalue ParmVar 0x14b00dd28 'item' 'int *'
    | `-RecoveryExpr 0x14b00e178 <col:15> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14a921480 <line:12:2, col:26> 'const char *' '='
    | |-DeclRefExpr 0x14b00e1b8 <col:2> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    | `-ImplicitCastExpr 0x14a921040 <col:10, col:26> 'const char *' <IntegralToPointer>
    |   `-CallExpr 0x14a921018 <col:10, col:26> 'int'
    |     |-ImplicitCastExpr 0x14a921000 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x14b00e330 <col:10> 'int ()' Function 0x14b00e278 'skip' 'int ()'
    |     `-BinaryOperator 0x14b00e3a8 <col:16, col:24> 'const char *' '+'
    |       |-ImplicitCastExpr 0x14b00e390 <col:16> 'const char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x14b00e350 <col:16> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    |       `-IntegerLiteral 0x14b00e370 <col:24> 'int' 1
    |-IfStmt 0x14a9215e0 <line:13:2, line:14:18>
    | |-BinaryOperator 0x14a921538 <line:13:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14a921520 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14a921508 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14a9214d8 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14a9214c0 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14a9214a0 <col:8> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    | | `-CharacterLiteral 0x14a9214f0 <col:17> 'int' 93
    | `-ReturnStmt 0x14a9215d0 <line:14:3, col:18>
    |   `-BinaryOperator 0x14a9215b0 <col:10, col:18> 'const char *' '+'
    |     |-ImplicitCastExpr 0x14a921598 <col:10> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14a921558 <col:10> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    |     `-IntegerLiteral 0x14a921578 <col:18> 'int' 1
    |-IfStmt 0x14a9216e8 <line:16:2, line:17:10>
    | |-RecoveryExpr 0x14a921680 <line:16:7, col:50> '_Bool' contains-errors
    | `-ReturnStmt 0x14a9216d8 <line:17:3, col:10>
    |   `-ImplicitCastExpr 0x14a9216c0 <col:10> 'const char *' <NullToPointer>
    |     `-IntegerLiteral 0x14a9216a0 <col:10> 'int' 0
    |-IfStmt 0x14a921960 <line:18:2, line:19:10>
    | |-RecoveryExpr 0x14a9218f8 <line:18:7, col:63> '_Bool' contains-errors
    | `-ReturnStmt 0x14a921950 <line:19:3, col:10>
    |   `-ImplicitCastExpr 0x14a921938 <col:10> 'const char *' <NullToPointer>
    |     `-IntegerLiteral 0x14a921918 <col:10> 'int' 0
    |-WhileStmt 0x14a921e40 <line:21:2, line:30:2>
    | |-BinaryOperator 0x14a921a18 <line:21:10, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x14a921a00 <col:10, col:11> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14a9219e8 <col:10, col:11> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14a9219b8 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14a9219a0 <col:11> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14a921980 <col:11> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    | | `-CharacterLiteral 0x14a9219d0 <col:20> 'int' 44
    | `-CompoundStmt 0x14a921e20 <col:26, line:30:2>
    |   |-IfStmt 0x14a921c28 <line:23:3, line:24:11>
    |   | |-RecoveryExpr 0x14a921bc0 <line:23:8, col:40> '_Bool' contains-errors
    |   | `-ReturnStmt 0x14a921c18 <line:24:4, col:11>
    |   |   `-ImplicitCastExpr 0x14a921c00 <col:11> 'const char *' <NullToPointer>
    |   |     `-IntegerLiteral 0x14a921be0 <col:11> 'int' 0
    |   `-IfStmt 0x14a921e00 <line:28:3, line:29:11>
    |     |-RecoveryExpr 0x14a921d98 <line:28:8, col:66> '_Bool' contains-errors
    |     `-ReturnStmt 0x14a921df0 <line:29:4, col:11>
    |       `-ImplicitCastExpr 0x14a921dd8 <col:11> 'const char *' <NullToPointer>
    |         `-IntegerLiteral 0x14a921db8 <col:11> 'int' 0
    |-IfStmt 0x14a921fa0 <line:32:2, line:33:18>
    | |-BinaryOperator 0x14a921ef8 <line:32:7, col:17> 'int' '=='
    | | |-ImplicitCastExpr 0x14a921ee0 <col:7, col:8> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14a921ec8 <col:7, col:8> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14a921e98 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14a921e80 <col:8> 'const char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14a921e60 <col:8> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    | | `-CharacterLiteral 0x14a921eb0 <col:17> 'int' 93
    | `-ReturnStmt 0x14a921f90 <line:33:3, col:18>
    |   `-BinaryOperator 0x14a921f70 <col:10, col:18> 'const char *' '+'
    |     |-ImplicitCastExpr 0x14a921f58 <col:10> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x14a921f18 <col:10> 'const char *' lvalue ParmVar 0x14b00dda8 'value' 'const char *'
    |     `-IntegerLiteral 0x14a921f38 <col:18> 'int' 1
    `-ReturnStmt 0x14a922818 <line:36:2, col:9>
      `-ImplicitCastExpr 0x14a922800 <col:9> 'const char *' <NullToPointer>
        `-IntegerLiteral 0x14a921fe0 <col:9> 'int' 0
