`-FunctionDecl 0x15b9283a0  line:1:6 invalid GetGhostNum 'void (int *, int, int, int *)'
  |-ParmVarDecl 0x15b928128 <col:18, col:32> col:32 invalid ent 'int *'
  |-ParmVarDecl 0x15b9281a8 <col:37, col:41> col:41 invalid EntryIndex 'int'
  |-ParmVarDecl 0x15b928228 <col:53, col:57> col:57 invalid count 'int'
  |-ParmVarDecl 0x15b9282a8 <col:64, col:83> col:83 referenced invalid stbl 'int *'
  `-CompoundStmt 0x15b9422d0 <line:2:1, line:30:1>
    |-IfStmt 0x15b928618 <line:6:2, line:9:2>
    | |-UnaryOperator 0x15b9284b8 <line:6:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15b9284a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15b928480 <col:7> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b9285f8 <col:12, line:9:2>
    |   |-BinaryOperator 0x15b9285c8 <line:7:3, col:38> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x15b928560 <col:3, col:24> '<dependent type>' contains-errors lvalue ->ghostNumber
    |   | | `-CXXDependentScopeMemberExpr 0x15b928518 <col:3, col:9> '<dependent type>' contains-errors lvalue ->SampleToChunk
    |   | |   `-RecoveryExpr 0x15b9284f0 <col:3> '<dependent type>' contains-errors lvalue
    |   | |     `-DeclRefExpr 0x15b9284d0 <col:3> 'int *' lvalue ParmVar 0x15b9282a8 'stbl' 'int *'
    |   | `-IntegerLiteral 0x15b9285a8 <col:38> 'int' 0
    |   `-ReturnStmt 0x15b9285e8 <line:8:3>
    `-IfStmt 0x15b9421c8 <line:11:2, line:28:2> has_else
      |-UnaryOperator 0x15b9286b8 <line:11:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x15b9286a0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>
      |   `-CXXDependentScopeMemberExpr 0x15b928658 <col:7, col:12> '<dependent type>' contains-errors lvalue ->nextChunk
      |     `-RecoveryExpr 0x15b928638 <col:7> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x15b941f30 <col:23, line:26:2>
      | `-IfStmt 0x15b941f00 <line:12:3, line:25:3> has_else
      |   |-BinaryOperator 0x15b928750 <line:12:7, col:23> 'int' contains-errors '=='
      |   | |-BinaryOperator 0x15b928710 <col:7, col:18> '<dependent type>' contains-errors '+'
      |   | | |-RecoveryExpr 0x15b9286d0 <col:7> '<dependent type>' contains-errors lvalue
      |   | | `-IntegerLiteral 0x15b9286f0 <col:18> 'int' 1
      |   | `-RecoveryExpr 0x15b928730 <col:23> '<dependent type>' contains-errors lvalue
      |   |-CompoundStmt 0x15b941d10 <col:30, line:21:3>
      |   | `-IfStmt 0x15b941ce0 <line:14:4, line:20:4> has_else
      |   |   |-BinaryOperator 0x15b9418a0 <line:14:8, col:35> 'int' contains-errors '=='
      |   |   | |-CXXDependentScopeMemberExpr 0x15b941800 <col:8, col:27> '<dependent type>' contains-errors lvalue ->type
      |   |   | | `-CXXDependentScopeMemberExpr 0x15b928790 <col:8, col:14> '<dependent type>' contains-errors lvalue ->ChunkOffset
      |   |   | |   `-RecoveryExpr 0x15b928770 <col:8> '<dependent type>' contains-errors lvalue
      |   |   | `-RecoveryExpr 0x15b941880 <col:35> '<dependent type>' contains-errors lvalue
      |   |   |-CompoundStmt 0x15b941b80 <col:58, line:17:4>
      |   |   `-CompoundStmt 0x15b941cd0 <col:11, line:20:4>
      |   `-CompoundStmt 0x15b941ef0 <line:21:10, line:25:3>
      `-CompoundStmt 0x15b9421b8 <line:26:9, line:28:2>
