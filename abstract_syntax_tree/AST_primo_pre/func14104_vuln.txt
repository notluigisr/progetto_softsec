`-FunctionDecl 0x1591281f0  line:1:13 invalid Sp_search 'void (int *)' static
  |-ParmVarDecl 0x159128128 <col:23, col:33> col:33 invalid J 'int *'
  `-CompoundStmt 0x159142660 <line:2:1, line:22:1>
    |-DeclStmt 0x159128338 <line:4:2, col:18>
    | `-VarDecl 0x1591282d0 <col:2, col:14> col:14 used text 'const char *'
    |-BinaryOperator 0x159128560 <line:7:2, col:25> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x159128350 <col:2> 'const char *' lvalue Var 0x1591282d0 'text' 'const char *'
    | `-CallExpr 0x159128530 <col:9, col:25> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1591284d0 <col:9> 'int ()' Function 0x159128418 'checkstring' 'int ()'
    |   |-RecoveryExpr 0x1591284f0 <col:21> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x159128510 <col:24> 'int' 0
    |-IfStmt 0x159141de8 <line:9:2, line:14:39> has_else
    | |-CallExpr 0x1591286c0 <line:9:6, col:22> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x159128660 <col:6> 'int ()' Function 0x1591285a8 'js_isregexp' 'int ()'
    | | |-RecoveryExpr 0x159128680 <col:18> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x1591286a0 <col:21> 'int' 1
    | |-CallExpr 0x159141840 <line:10:3, col:15> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1591287d0 <col:3> 'int ()' Function 0x159128718 'js_copy' 'int ()'
    | | |-RecoveryExpr 0x159141800 <col:11> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x159141820 <col:14> 'int' 1
    | `-IfStmt 0x159141db8 <line:11:7, line:14:39> has_else
    |   |-CallExpr 0x1591419b0 <line:11:11, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159141950 <col:11> 'int ()' Function 0x159141898 'js_isundefined' 'int ()'
    |   | |-RecoveryExpr 0x159141970 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-IntegerLiteral 0x159141990 <col:29> 'int' 1
    |   |-CallExpr 0x159141b78 <line:12:3, col:24> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x159141ac0 <col:3> 'int ()' Function 0x159141a08 'js_newregexp' 'int ()'
    |   | |-RecoveryExpr 0x159141ae0 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-StringLiteral 0x159141b40 <col:19> 'char[1]' lvalue ""
    |   | `-IntegerLiteral 0x159141b58 <col:23> 'int' 0
    |   `-CallExpr 0x159141d80 <line:14:3, col:39> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x159141bb0 <col:3> 'int ()' Function 0x159141a08 'js_newregexp' 'int ()'
    |     |-RecoveryExpr 0x159141bd0 <col:16> '<dependent type>' contains-errors lvalue
    |     |-CallExpr 0x159141d30 <col:19, col:35> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x159141cd0 <col:19> 'int ()' Function 0x159141c18 'js_tostring' 'int ()'
    |     | |-RecoveryExpr 0x159141cf0 <col:31> '<dependent type>' contains-errors lvalue
    |     | `-IntegerLiteral 0x159141d10 <col:34> 'int' 1
    |     `-IntegerLiteral 0x159141d60 <col:38> 'int' 0
    `-IfStmt 0x159142630 <line:18:2, line:21:22> has_else
      |-UnaryOperator 0x1591422a8 <line:18:6, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
      | `-CallExpr 0x159142268 <col:7, col:39> '<dependent type>' contains-errors
      |   |-DeclRefExpr 0x159142080 <col:7> 'int ()' Function 0x159141fc8 'js_regexec' 'int ()'
      |   |-CXXDependentScopeMemberExpr 0x1591421e8 <col:18, col:22> '<dependent type>' contains-errors lvalue ->prog
      |   | `-RecoveryExpr 0x1591421c8 <col:18> '<dependent type>' contains-errors lvalue
      |   |-DeclRefExpr 0x159142100 <col:28> 'const char *' lvalue Var 0x1591282d0 'text' 'const char *'
      |   |-UnaryOperator 0x159142250 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
      |   | `-RecoveryExpr 0x159142230 <col:35> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x159142150 <col:38> 'int' 0
      |-NullStmt 0x159142628 <line:19:3>
      `-CallExpr 0x1591425f8 <line:21:3, col:22> '<dependent type>' contains-errors
        |-DeclRefExpr 0x159142580 <col:3> 'int ()' Function 0x1591422e8 'js_pushnumber' 'int ()'
        |-RecoveryExpr 0x1591425a0 <col:17> '<dependent type>' contains-errors lvalue
        `-UnaryOperator 0x1591425e0 <col:20, col:21> 'int' prefix '-'
          `-IntegerLiteral 0x1591425c0 <col:21> 'int' 1
