`-FunctionDecl 0x13800df48  line:1:16 invalid ssl_add_serverhello_tlsext 'unsigned char *(int *, unsigned char *, unsigned char *)'
  |-ParmVarDecl 0x13800dd28 <col:43, col:48> col:48 invalid s 'int *'
  |-ParmVarDecl 0x13800ddd8 <col:51, col:66> col:66 used p 'unsigned char *'
  |-ParmVarDecl 0x13800de58 <col:69, col:84> col:84 used limit 'unsigned char *'
  `-CompoundStmt 0x1380288b0 <line:2:2, line:22:1>
    |-DeclStmt 0x13800e0a8 <line:3:2, col:18>
    | `-VarDecl 0x13800e020 <col:2, col:17> col:6 used extdatalen 'int' cinit
    |   `-IntegerLiteral 0x13800e088 <col:17> 'int' 0
    |-DeclStmt 0x13800e178 <line:4:2, col:24>
    | `-VarDecl 0x13800e0d8 <col:2, col:23> col:17 used ret 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x13800e160 <col:23> 'unsigned char *' <LValueToRValue>
    |     `-DeclRefExpr 0x13800e140 <col:23> 'unsigned char *' lvalue ParmVar 0x13800ddd8 'p' 'unsigned char *'
    |-CompoundAssignOperator 0x13800e1d0 <line:6:2, col:7> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | |-DeclRefExpr 0x13800e190 <col:2> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
    | `-IntegerLiteral 0x13800e1b0 <col:7> 'int' 2
    |-IfStmt 0x13800e2d8 <line:7:2, col:25>
    | |-BinaryOperator 0x13800e270 <col:6, col:11> 'int' '>='
    | | |-ImplicitCastExpr 0x13800e240 <col:6> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x13800e200 <col:6> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
    | | `-ImplicitCastExpr 0x13800e258 <col:11> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13800e220 <col:11> 'unsigned char *' lvalue ParmVar 0x13800de58 'limit' 'unsigned char *'
    | `-ReturnStmt 0x13800e2c8 <col:18, col:25>
    |   `-RecoveryExpr 0x13800e2a8 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x138028568 <line:9:2, line:15:3>
    | |-BinaryOperator 0x138028048 <line:9:6, col:75> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x138027fe8 <col:6, col:39> 'int' contains-errors '&&'
    | | | |-UnaryOperator 0x138027fd0 <col:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x138027fb8 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | | |   `-CXXDependentScopeMemberExpr 0x13800e318 <col:7, col:10> '<dependent type>' contains-errors lvalue ->hit
    | | | |     `-RecoveryExpr 0x13800e2f8 <col:7> '<dependent type>' contains-errors lvalue
    | | | `-BinaryOperator 0x138027e20 <col:17, col:39> 'int' contains-errors '=='
    | | |   |-CXXDependentScopeMemberExpr 0x13800e3b0 <col:17, col:20> '<dependent type>' contains-errors lvalue ->servername_done
    | | |   | `-RecoveryExpr 0x13800e390 <col:17> '<dependent type>' contains-errors lvalue
    | | |   `-IntegerLiteral 0x138027e00 <col:39> 'int' 1
    | | `-BinaryOperator 0x138028028 <col:44, col:75> 'int' contains-errors '!='
    | |   |-CXXDependentScopeMemberExpr 0x138027ec8 <col:44, col:56> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    | |   | `-CXXDependentScopeMemberExpr 0x138027e80 <col:44, col:47> '<dependent type>' contains-errors lvalue ->session
    | |   |   `-RecoveryExpr 0x138027e60 <col:44> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x138028008 <col:75> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x138028540 <line:10:3, line:15:3>
    |   |-IfStmt 0x1380281f0 <line:11:3, col:33>
    |   | |-BinaryOperator 0x138028188 <col:7, col:23> 'int' '<'
    |   | | |-BinaryOperator 0x138028130 <col:7, col:19> 'long' '-'
    |   | | | |-BinaryOperator 0x1380280d8 <col:7, col:15> 'long' '-'
    |   | | | | |-ImplicitCastExpr 0x1380280a8 <col:7> 'unsigned char *' <LValueToRValue>
    |   | | | | | `-DeclRefExpr 0x138028068 <col:7> 'unsigned char *' lvalue ParmVar 0x13800de58 'limit' 'unsigned char *'
    |   | | | | `-ImplicitCastExpr 0x1380280c0 <col:15> 'unsigned char *' <LValueToRValue>
    |   | | | |   `-DeclRefExpr 0x138028088 <col:15> 'unsigned char *' lvalue ParmVar 0x13800ddd8 'p' 'unsigned char *'
    |   | | | `-ImplicitCastExpr 0x138028118 <col:19> 'long' <IntegralCast>
    |   | | |   `-IntegerLiteral 0x1380280f8 <col:19> 'int' 4
    |   | | `-ImplicitCastExpr 0x138028170 <col:23> 'long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x138028150 <col:23> 'int' 0
    |   | `-ReturnStmt 0x1380281e0 <col:26, col:33>
    |   |   `-RecoveryExpr 0x1380281c0 <col:33> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x138028418 <line:13:3, col:34> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x138028370 <col:3> 'int ()' Function 0x1380282b8 's2n' 'int ()'
    |   | |-RecoveryExpr 0x1380283f8 <col:7> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x1380283a8 <col:31> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
    |   `-CallExpr 0x1380284f8 <line:14:3, col:12> 'int'
    |     |-ImplicitCastExpr 0x1380284e0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x138028448 <col:3> 'int ()' Function 0x1380282b8 's2n' 'int ()'
    |     |-IntegerLiteral 0x138028468 <col:7> 'int' 0
    |     `-ImplicitCastExpr 0x138028528 <col:9> 'unsigned char *' <LValueToRValue>
    |       `-DeclRefExpr 0x138028488 <col:9> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
    |-IfStmt 0x138028770 <line:17:2, line:18:10>
    | |-BinaryOperator 0x138028708 <line:17:6, col:31> 'int' '=='
    | | |-ParenExpr 0x1380286c8 <col:6, col:27> 'int'
    | | | `-BinaryOperator 0x1380286a8 <col:7, col:26> 'int' '='
    | | |   |-DeclRefExpr 0x138028588 <col:7> 'int' lvalue Var 0x13800e020 'extdatalen' 'int'
    | | |   `-ImplicitCastExpr 0x138028690 <col:20, col:26> 'int' <IntegralCast>
    | | |     `-BinaryOperator 0x138028670 <col:20, col:26> 'long' '-'
    | | |       |-BinaryOperator 0x138028618 <col:20, col:24> 'long' '-'
    | | |       | |-ImplicitCastExpr 0x1380285e8 <col:20> 'unsigned char *' <LValueToRValue>
    | | |       | | `-DeclRefExpr 0x1380285a8 <col:20> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
    | | |       | `-ImplicitCastExpr 0x138028600 <col:24> 'unsigned char *' <LValueToRValue>
    | | |       |   `-DeclRefExpr 0x1380285c8 <col:24> 'unsigned char *' lvalue ParmVar 0x13800ddd8 'p' 'unsigned char *'
    | | |       `-ImplicitCastExpr 0x138028658 <col:26> 'long' <IntegralCast>
    | | |         `-IntegerLiteral 0x138028638 <col:26> 'int' 2
    | | `-IntegerLiteral 0x1380286e8 <col:31> 'int' 0
    | `-ReturnStmt 0x138028760 <line:18:3, col:10>
    |   `-ImplicitCastExpr 0x138028748 <col:10> 'unsigned char *' <LValueToRValue>
    |     `-DeclRefExpr 0x138028728 <col:10> 'unsigned char *' lvalue ParmVar 0x13800ddd8 'p' 'unsigned char *'
    |-CallExpr 0x138028808 <line:20:2, col:18> 'int'
    | |-ImplicitCastExpr 0x1380287f0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x138028790 <col:2> 'int ()' Function 0x1380282b8 's2n' 'int ()'
    | |-ImplicitCastExpr 0x138028838 <col:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1380287b0 <col:6> 'int' lvalue Var 0x13800e020 'extdatalen' 'int'
    | `-ImplicitCastExpr 0x138028850 <col:17> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1380287d0 <col:17> 'unsigned char *' lvalue ParmVar 0x13800ddd8 'p' 'unsigned char *'
    `-ReturnStmt 0x1380288a0 <line:21:2, col:9>
      `-ImplicitCastExpr 0x138028888 <col:9> 'unsigned char *' <LValueToRValue>
        `-DeclRefExpr 0x138028868 <col:9> 'unsigned char *' lvalue Var 0x13800e0d8 'ret' 'unsigned char *'
