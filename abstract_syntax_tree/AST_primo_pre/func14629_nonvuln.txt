`-FunctionDecl 0x125940e88  line:1:12 invalid tcp_check_dsack 'int (struct sock *, const struct sk_buff *, struct tcp_sack_block_wire *, int, int)' static
  |-ParmVarDecl 0x125928648 <col:28, col:41> col:41 used sk 'struct sock *'
  |-ParmVarDecl 0x125940a28 <col:45, col:67> col:67 used ack_skb 'const struct sk_buff *'
  |-ParmVarDecl 0x125940bf8 <line:2:7, col:35> col:35 sp 'struct tcp_sack_block_wire *'
  |-ParmVarDecl 0x125940c78 <col:39, col:43> col:43 used num_sacks 'int'
  |-ParmVarDecl 0x125940d10 <line:3:7, col:11> col:11 invalid prior_snd_una 'int'
  `-CompoundStmt 0x1259440f8 <line:4:1, line:34:1>
    |-DeclStmt 0x125941388 <line:5:2, col:34>
    | |-RecordDecl 0x125940f58 <col:2, col:9> col:9 struct tcp_sock
    | `-VarDecl 0x1259410c8 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit
    |   `-ImplicitCastExpr 0x125941358 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>
    |     `-CallExpr 0x125941318 <col:24, col:33> 'int'
    |       |-ImplicitCastExpr 0x125941300 <col:24> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x125941290 <col:24> 'int ()' Function 0x1259411d8 'tcp_sk' 'int ()'
    |       `-ImplicitCastExpr 0x125941340 <col:31> 'struct sock *' <LValueToRValue>
    |         `-DeclRefExpr 0x1259412b0 <col:31> 'struct sock *' lvalue ParmVar 0x125928648 'sk' 'struct sock *'
    |-DeclStmt 0x125941440 <line:8:2, col:18>
    | `-VarDecl 0x1259413b8 <col:2, col:17> col:6 used dup_sack 'int' cinit
    |   `-IntegerLiteral 0x125941420 <col:17> 'int' 0
    |-IfStmt 0x125943de8 <line:10:2, line:25:2> has_else
    | |-CallExpr 0x1259417e0 <line:10:6, col:54> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x125941538 <col:6> 'int ()' Function 0x125941480 'before' 'int ()'
    | | |-RecoveryExpr 0x125941740 <col:13> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1259417b8 <col:26, col:47> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x125941778 <col:26, col:44> 'int'
    | |     |-ImplicitCastExpr 0x125941760 <col:26> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x125941650 <col:26> 'int ()' Function 0x125941598 'TCP_SKB_CB' 'int ()'
    | |     `-ImplicitCastExpr 0x1259417a0 <col:37> 'const struct sk_buff *' <LValueToRValue>
    | |       `-DeclRefExpr 0x125941670 <col:37> 'const struct sk_buff *' lvalue ParmVar 0x125940a28 'ack_skb' 'const struct sk_buff *'
    | |-CompoundStmt 0x1259437c0 <col:57, line:14:2>
    | | |-BinaryOperator 0x125941850 <line:11:3, col:14> 'int' '='
    | | | |-DeclRefExpr 0x125941810 <col:3> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int'
    | | | `-IntegerLiteral 0x125941830 <col:14> 'int' 1
    | | |-CallExpr 0x1259419a8 <line:12:3, col:20> 'int'
    | | | |-ImplicitCastExpr 0x125941990 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x125941950 <col:3> 'int ()' Function 0x125941898 'tcp_dsack_seen' 'int ()'
    | | | `-ImplicitCastExpr 0x1259419d0 <col:18> 'struct tcp_sock *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x125941970 <col:18> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'
    | | `-CallExpr 0x125943790 <line:13:3, col:56> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x1259434e0 <col:3> 'int ()' Function 0x125943428 'NET_INC_STATS_BH' 'int ()'
    | |   |-CallExpr 0x125943730 <col:20, col:31> 'int'
    | |   | |-ImplicitCastExpr 0x125943718 <col:20> 'int (*)()' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x1259435e0 <col:20> 'int ()' Function 0x125943528 'sock_net' 'int ()'
    | |   | `-ImplicitCastExpr 0x125943758 <col:29> 'struct sock *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x125943600 <col:29> 'struct sock *' lvalue ParmVar 0x125928648 'sk' 'struct sock *'
    | |   `-RecoveryExpr 0x125943770 <col:34> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x125943dc8 <line:14:9, line:25:2>
    |   |-BinaryOperator 0x125943840 <line:14:13, col:25> 'int' '>'
    |   | |-ImplicitCastExpr 0x125943828 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1259437e8 <col:13> 'int' lvalue ParmVar 0x125940c78 'num_sacks' 'int'
    |   | `-IntegerLiteral 0x125943808 <col:25> 'int' 1
    |   `-CompoundStmt 0x125943db0 <col:28, line:25:2>
    |     `-IfStmt 0x125943d90 <line:18:3, line:24:3>
    |       |-BinaryOperator 0x125943ba0 <line:18:7, line:19:39> 'int' contains-errors '&&'
    |       | |-UnaryOperator 0x125943b00 <line:18:7, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       | | `-CallExpr 0x125943ad0 <col:8, col:34> '<dependent type>' contains-errors
    |       | |   |-DeclRefExpr 0x125943940 <col:8> 'int ()' Function 0x125943888 'after' 'int ()'
    |       | |   |-RecoveryExpr 0x125943a90 <col:14> '<dependent type>' contains-errors lvalue
    |       | |   `-RecoveryExpr 0x125943ab0 <col:25> '<dependent type>' contains-errors lvalue
    |       | `-UnaryOperator 0x125943b88 <line:19:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    |       |   `-CallExpr 0x125943b58 <col:8, col:39> '<dependent type>' contains-errors
    |       |     |-DeclRefExpr 0x1259439d8 <col:8> 'int ()' Function 0x125941480 'before' 'int ()'
    |       |     |-RecoveryExpr 0x125943b18 <col:15> '<dependent type>' contains-errors lvalue
    |       |     `-RecoveryExpr 0x125943b38 <col:28> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x125943d70 <col:42, line:24:3>
    |         |-BinaryOperator 0x125943c00 <line:20:4, col:15> 'int' '='
    |         | |-DeclRefExpr 0x125943bc0 <col:4> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int'
    |         | `-IntegerLiteral 0x125943be0 <col:15> 'int' 1
    |         `-CallExpr 0x125943c78 <line:21:4, col:21> 'int'
    |           |-ImplicitCastExpr 0x125943c60 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x125943c20 <col:4> 'int ()' Function 0x125941898 'tcp_dsack_seen' 'int ()'
    |           `-ImplicitCastExpr 0x125943ca0 <col:19> 'struct tcp_sock *' <LValueToRValue>
    |             `-DeclRefExpr 0x125943c40 <col:19> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'
    |-IfStmt 0x125944090 <line:28:2, line:31:19>
    | |-RecoveryExpr 0x125943ff8 <line:28:6, line:30:38> '_Bool' contains-errors
    | `-UnaryOperator 0x125944078 <line:31:3, col:19> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   `-RecoveryExpr 0x125944050 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x125944018 <col:3> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'
    `-ReturnStmt 0x1259440e8 <line:33:2, col:9>
      `-ImplicitCastExpr 0x1259440d0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1259440b0 <col:9> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int'
