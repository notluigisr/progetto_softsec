`-FunctionDecl 0x12a00e350  line:1:6 release_sock 'void (struct sock *)'
  |-ParmVarDecl 0x12a00e248 <col:19, col:32> col:32 used sk 'struct sock *'
  `-CompoundStmt 0x129922600 <line:2:1, line:17:1>
    |-CallExpr 0x12a0268e0 <line:4:2, col:49> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a026770 <col:2> 'int ()' Function 0x12a0266b8 'mutex_release' 'int ()'
    | |-UnaryOperator 0x12a026838 <col:16, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12a0267f0 <col:17, col:29> '<dependent type>' contains-errors lvalue .dep_map
    | |   `-RecoveryExpr 0x12a0267c8 <col:17, col:21> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12a026790 <col:17> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    | |-IntegerLiteral 0x12a026850 <col:38> 'int' 1
    | `-RecoveryExpr 0x12a0268c0 <col:41> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12a026ad8 <line:6:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12a0269f8 <col:2> 'int ()' Function 0x12a026940 'spin_lock_bh' 'int ()'
    | `-UnaryOperator 0x12a026ac0 <col:15, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12a026a78 <col:16, col:28> '<dependent type>' contains-errors lvalue .slock
    |     `-RecoveryExpr 0x12a026a50 <col:16, col:20> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12a026a18 <col:16> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    |-IfStmt 0x12a026d58 <line:7:2, line:8:20>
    | |-CXXDependentScopeMemberExpr 0x12a026b60 <line:7:6, col:21> '<dependent type>' contains-errors lvalue .tail
    | | `-RecoveryExpr 0x12a026b38 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12a026b00 <col:6> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    | `-CallExpr 0x12a026d18 <line:8:3, col:20> 'int'
    |   |-ImplicitCastExpr 0x12a026d00 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12a026c88 <col:3> 'int ()' Function 0x12a026bd0 '__release_sock' 'int ()'
    |   `-ImplicitCastExpr 0x12a026d40 <col:18> 'struct sock *' <LValueToRValue>
    |     `-DeclRefExpr 0x12a026ca8 <col:18> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    |-IfStmt 0x12a026f10 <line:10:2, line:11:29>
    | |-CXXDependentScopeMemberExpr 0x12a026dd8 <line:10:6, col:19> '<dependent type>' contains-errors lvalue ->release_cb
    | | `-RecoveryExpr 0x12a026db0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12a026d78 <col:6> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    | `-CallExpr 0x12a026ee8 <line:11:3, col:29> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x12a026e80 <col:3, col:16> '<dependent type>' contains-errors lvalue ->release_cb
    |   | `-RecoveryExpr 0x12a026e58 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12a026e20 <col:3> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    |   `-DeclRefExpr 0x12a026ec8 <col:27> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    |-BinaryOperator 0x12a026ff8 <line:13:2, col:22> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12a026f90 <col:2, col:14> '<dependent type>' contains-errors lvalue .owned
    | | `-RecoveryExpr 0x12a026f68 <col:2, col:6> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12a026f30 <col:2> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    | `-IntegerLiteral 0x12a026fd8 <col:22> 'int' 0
    |-IfStmt 0x12a0273e8 <line:14:2, line:15:26>
    | |-CallExpr 0x12a0271d8 <line:14:6, col:38> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12a0270f8 <col:6> 'int ()' Function 0x12a027040 'waitqueue_active' 'int ()'
    | | `-UnaryOperator 0x12a0271c0 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-CXXDependentScopeMemberExpr 0x12a027178 <col:24, col:36> '<dependent type>' contains-errors lvalue .wq
    | |     `-RecoveryExpr 0x12a027150 <col:24, col:28> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x12a027118 <col:24> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    | `-CallExpr 0x12a0273c0 <line:15:3, col:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12a0272e0 <col:3> 'int ()' Function 0x12a027228 'wake_up' 'int ()'
    |   `-UnaryOperator 0x12a0273a8 <col:11, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12a027360 <col:12, col:24> '<dependent type>' contains-errors lvalue .wq
    |       `-RecoveryExpr 0x12a027338 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x12a027300 <col:12> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
    `-CallExpr 0x12a0275c8 <line:16:2, col:35> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12a0274e8 <col:2> 'int ()' Function 0x12a027430 'spin_unlock_bh' 'int ()'
      `-UnaryOperator 0x12a0275b0 <col:17, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-CXXDependentScopeMemberExpr 0x12a027568 <col:18, col:30> '<dependent type>' contains-errors lvalue .slock
          `-RecoveryExpr 0x12a027540 <col:18, col:22> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x12a027508 <col:18> 'struct sock *' lvalue ParmVar 0x12a00e248 'sk' 'struct sock *'
