`-FunctionDecl 0x148928a30  line:4:13 php_tidy_quick_repair 'void (int, int)' static
  |-ParmVarDecl 0x148928958 <col:35> col:35 INTERNAL_FUNCTION_PARAMETERS 'int'
  |-ParmVarDecl 0x1489288d8 <col:65> col:65 used zend_bool 'int'
  `-CompoundStmt 0x148943eb0 <line:5:1, line:82:22>
    |-DeclStmt 0x148928d58 <line:6:2, col:37>
    | |-VarDecl 0x148928b48 <col:2, col:13> col:8 used data 'char *' cinit
    | | `-RecoveryExpr 0x148928be0 <col:13> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x148928c18 <col:2, col:20> col:20 used arg1 'char *'
    | `-VarDecl 0x148928c98 <col:2, col:33> col:27 used enc 'char *' cinit
    |   `-RecoveryExpr 0x148928d18 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x148928f50 <line:7:2, col:41>
    | |-VarDecl 0x148928d88 <col:2, col:6> col:6 used arg1_len 'int'
    | |-VarDecl 0x148928e08 <col:2, col:26> col:16 used enc_len 'int' cinit
    | | `-IntegerLiteral 0x148928e70 <col:26> 'int' 0
    | `-VarDecl 0x148928ea8 <col:2, col:40> col:29 used data_len 'int' cinit
    |   `-IntegerLiteral 0x148928f10 <col:40> 'int' 0
    |-ImplicitCastExpr 0x148928f88 <line:8:2> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x148928f68 <col:2> 'int' lvalue ParmVar 0x1489288d8 'zend_bool' 'int'
    |-IfStmt 0x148941530 <line:13:2, line:15:2>
    | |-RecoveryExpr 0x148941500 <line:13:6, col:127> '_Bool' contains-errors
    | `-CompoundStmt 0x148941520 <col:136, line:15:2>
    |-IfStmt 0x148941890 <line:17:2, line:24:2> has_else
    | |-RecoveryExpr 0x148941550 <line:17:6> '_Bool' contains-errors
    | |-CompoundStmt 0x148941768 <col:15, line:21:2>
    | | `-IfStmt 0x148941748 <line:18:3, line:20:3>
    | |   |-RecoveryExpr 0x148941718 <line:18:7, col:81> '_Bool' contains-errors
    | |   `-CompoundStmt 0x148941738 <col:84, line:20:3>
    | `-CompoundStmt 0x148941870 <line:21:9, line:24:2>
    |   |-BinaryOperator 0x1489417d8 <line:22:3, col:10> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x148941780 <col:3> 'char *' contains-errors lvalue Var 0x148928b48 'data' 'char *'
    |   | `-ImplicitCastExpr 0x1489417c0 <col:10> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1489417a0 <col:10> 'char *' lvalue Var 0x148928c18 'arg1' 'char *'
    |   `-BinaryOperator 0x148941850 <line:23:3, col:14> 'int' '='
    |     |-DeclRefExpr 0x1489417f8 <col:3> 'int' lvalue Var 0x148928ea8 'data_len' 'int'
    |     `-ImplicitCastExpr 0x148941838 <col:14> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x148941818 <col:14> 'int' lvalue Var 0x148928d88 'arg1_len' 'int'
    |-IfStmt 0x1489421b0 <line:30:2, line:35:2>
    | |-RecoveryExpr 0x148941d18 <line:30:6, col:41> '_Bool' contains-errors
    | `-CompoundStmt 0x1489421a0 <col:44, line:35:2>
    |-IfStmt 0x148943328 <line:42:2, line:44:2>
    | |-RecoveryExpr 0x1489431f8 <line:42:6> '_Bool' contains-errors
    | `-CompoundStmt 0x148943318 <col:14, line:44:2>
    |-IfStmt 0x148943588 <line:46:2, line:51:2>
    | |-ImplicitCastExpr 0x148943368 <line:46:5> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x148943348 <col:5> 'int' lvalue Var 0x148928e08 'enc_len' 'int'
    | `-CompoundStmt 0x148943570 <col:14, line:51:2>
    |   `-IfStmt 0x148943550 <line:47:3, line:50:3>
    |     |-RecoveryExpr 0x1489434c0 <line:47:7, col:39> '_Bool' contains-errors
    |     `-CompoundStmt 0x148943540 <col:42, line:50:3>
    |-IfStmt 0x148943d80 <line:53:2, line:76:2>
    | |-ImplicitCastExpr 0x1489435c8 <line:53:6> 'char *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x1489435a8 <col:6> 'char *' contains-errors lvalue Var 0x148928b48 'data' 'char *'
    | `-CompoundStmt 0x148943d68 <col:12, line:76:2>
    |   `-IfStmt 0x148943d18 <line:59:3, line:73:3> has_else
    |     |-RecoveryExpr 0x148943860 <line:59:7, col:36> '_Bool' contains-errors
    |     |-CompoundStmt 0x1489438c0 <col:39, line:62:3>
    |     `-CompoundStmt 0x148943d00 <col:10, line:73:3>
    |       `-IfStmt 0x148943cd0 <line:63:4, line:72:4> has_else
    |         |-RecoveryExpr 0x1489439f0 <line:63:8, col:35> '_Bool' contains-errors
    |         |-CompoundStmt 0x148943cb0 <col:38, line:70:4>
    |         `-CompoundStmt 0x148943cc0 <col:11, line:72:4>
    `-IfStmt 0x148943e70 <line:78:2, line:80:2>
      |-RecoveryExpr 0x148943da0 <line:78:6> '_Bool' contains-errors
      `-CompoundStmt 0x148943e58 <col:15, line:80:2>
        `-CallExpr 0x148943e18 <line:79:3, col:13> 'int' contains-errors
          |-ImplicitCastExpr 0x148943e00 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x148943dc0 <col:3> 'int ()' Function 0x148941e60 'efree' 'int ()'
          `-ImplicitCastExpr 0x148943e40 <col:9> 'char *' contains-errors <LValueToRValue>
            `-DeclRefExpr 0x148943de0 <col:9> 'char *' contains-errors lvalue Var 0x148928b48 'data' 'char *'
