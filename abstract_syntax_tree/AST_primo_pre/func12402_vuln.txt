`-FunctionDecl 0x154826600  line:1:13 l2cap_sock_teardown_cb 'void (struct l2cap_chan *, int)' static
  |-ParmVarDecl 0x15480e248 <col:36, col:55> col:55 used chan 'struct l2cap_chan *'
  |-ParmVarDecl 0x15480e2c8 <col:61, col:65> col:65 used err 'int'
  `-CompoundStmt 0x156009128 <line:2:1, line:44:1>
    |-DeclStmt 0x154826948 <line:3:2, col:30>
    | |-RecordDecl 0x154826700 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x154826868 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x154826908 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1548268d0 <col:20> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    |-DeclStmt 0x154826a50 <line:4:2, col:21>
    | `-VarDecl 0x1548269e8 <col:2, col:15> col:15 used parent 'struct sock *'
    |-CallExpr 0x154826db8 <line:6:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154826b90 <col:2> 'int ()' Function 0x154826ad8 'BT_DBG' 'int ()'
    | |-StringLiteral 0x154826bf0 <col:9> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x154826c10 <col:16> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    | `-CallExpr 0x154826d90 <col:22, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154826d10 <col:22> 'int ()' Function 0x154826c58 'state_to_string' 'int ()'
    |   `-RecoveryExpr 0x154826d68 <col:38, col:44> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x154826d30 <col:38> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    |-CallExpr 0x1548270b0 <line:9:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x154826ed0 <col:2> 'int ()' Function 0x154826e18 'lock_sock_nested' 'int ()'
    | |-DeclRefExpr 0x154826ef0 <col:19> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    | `-CallExpr 0x154827088 <col:23, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154826ff0 <col:23> 'int ()' Function 0x154826f38 'atomic_read' 'int ()'
    |   `-UnaryOperator 0x154827070 <col:35, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x154827048 <col:36, col:42> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x154827010 <col:36> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    |-BinaryOperator 0x1548272d0 <line:11:2, col:22> 'struct sock *' contains-errors '='
    | |-DeclRefExpr 0x1548270e0 <col:2> 'struct sock *' lvalue Var 0x1548269e8 'parent' 'struct sock *'
    | `-RecoveryExpr 0x1548272a8 <col:11, col:22> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x154827268 <col:11, col:19> 'int' contains-errors
    |     |-ImplicitCastExpr 0x154827250 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1548271e0 <col:11> 'int ()' Function 0x154827128 'bt_sk' 'int ()'
    |     `-ImplicitCastExpr 0x154827290 <col:17> 'struct sock *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x154827200 <col:17> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |-SwitchStmt 0x154827368 <line:13:2, line:38:2>
    | |-ImplicitCastExpr 0x154827350 <line:13:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x154827328 <col:10, col:16> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1548272f0 <col:10> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    | `-CompoundStmt 0x156008e38 <col:23, line:38:2>
    |   |-BreakStmt 0x1548273d8 <line:17:3>
    |   |-CallExpr 0x154827530 <line:19:3, col:31> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x154827518 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1548274d8 <col:3> 'int ()' Function 0x154827420 'l2cap_sock_cleanup_listen' 'int ()'
    |   | `-ImplicitCastExpr 0x154827558 <col:29> 'struct sock *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x1548274f8 <col:29> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   |-BinaryOperator 0x156008840 <line:20:3, col:18> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x1548275a8 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x154827570 <col:3> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   | `-RecoveryExpr 0x156008820 <col:18> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x156008918 <line:21:3, col:17> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x156008898 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x156008860 <col:3> 'struct l2cap_chan *' lvalue ParmVar 0x15480e248 'chan' 'struct l2cap_chan *'
    |   | `-RecoveryExpr 0x1560088f8 <col:17> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x156008938 <line:23:3>
    |   |-DefaultStmt 0x1560089a8 <line:24:2, col:9>
    |   | `-NullStmt 0x1560089a0 <col:9>
    |   |-BinaryOperator 0x156008aa8 <line:28:3, col:16> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x156008a60 <col:3, col:7> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x156008a28 <col:3> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   | `-DeclRefExpr 0x156008a88 <col:16> 'int' lvalue ParmVar 0x15480e2c8 'err' 'int'
    |   |-IfStmt 0x156008e00 <line:30:3, line:35:3> has_else
    |   | |-ImplicitCastExpr 0x156008ae8 <line:30:7> 'struct sock *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x156008ac8 <col:7> 'struct sock *' lvalue Var 0x1548269e8 'parent' 'struct sock *'
    |   | |-CompoundStmt 0x156008d20 <col:15, line:33:3>
    |   | | |-CallExpr 0x156008c38 <line:31:4, col:23> 'int' contains-errors
    |   | | | |-ImplicitCastExpr 0x156008c20 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   | | | | `-DeclRefExpr 0x156008be0 <col:4> 'int ()' Function 0x156008b28 'bt_accept_unlink' 'int ()'
    |   | | | `-ImplicitCastExpr 0x156008c60 <col:21> 'struct sock *' contains-errors <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x156008c00 <col:21> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   | | `-CallExpr 0x156008cf8 <line:32:4, col:32> '<dependent type>' contains-errors
    |   | |   |-RecoveryExpr 0x156008cb0 <col:4, col:12> '<dependent type>' contains-errors lvalue
    |   | |   | `-DeclRefExpr 0x156008c78 <col:4> 'struct sock *' lvalue Var 0x1548269e8 'parent' 'struct sock *'
    |   | |   `-DeclRefExpr 0x156008cd8 <col:26> 'struct sock *' lvalue Var 0x1548269e8 'parent' 'struct sock *'
    |   | `-CompoundStmt 0x156008de8 <line:33:10, line:35:3>
    |   |   `-CallExpr 0x156008dc0 <line:34:4, col:26> '<dependent type>' contains-errors
    |   |     |-RecoveryExpr 0x156008d78 <col:4, col:8> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x156008d40 <col:4> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   |     `-DeclRefExpr 0x156008da0 <col:24> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
    |   `-BreakStmt 0x156008e30 <line:37:3>
    `-CallExpr 0x156008fc8 <line:39:2, col:17> 'int' contains-errors
      |-ImplicitCastExpr 0x156008fb0 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x156008f70 <col:2> 'int ()' Function 0x156008eb8 'release_sock' 'int ()'
      `-ImplicitCastExpr 0x156008ff0 <col:15> 'struct sock *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x156008f90 <col:15> 'struct sock *' contains-errors lvalue Var 0x154826868 'sk' 'struct sock *'
