`-FunctionDecl 0x134141258  line:1:12 invalid atomic_open 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, int, int)' static
  |-ParmVarDecl 0x134128648 <col:24, col:42> col:42 used nd 'struct nameidata *'
  |-ParmVarDecl 0x134140a28 <col:46, col:61> col:61 used dentry 'struct dentry *'
  |-ParmVarDecl 0x134140bf8 <line:2:4, col:17> col:17 used path 'struct path *'
  |-ParmVarDecl 0x134140dc8 <col:23, col:36> col:36 used file 'struct file *'
  |-ParmVarDecl 0x134140f98 <line:3:4, col:29> col:29 used op 'const struct open_flags *'
  |-ParmVarDecl 0x134141018 <line:4:4, col:8> col:8 used open_flag 'int'
  |-ParmVarDecl 0x1341410b0 <col:19, col:27> col:27 invalid mode 'int'
  `-CompoundStmt 0x13414a688 <line:5:1, line:53:1>
    |-DeclStmt 0x1341414c0 <line:6:2, col:53>
    | `-VarDecl 0x1341413c8 <col:2, col:50> col:23 used DENTRY_NOT_SET 'struct dentry *const' cinit
    |   `-ImplicitCastExpr 0x1341414a8 <col:40, col:50> 'struct dentry *' <BitCast>
    |     `-CStyleCastExpr 0x134141480 <col:40, col:50> 'void *' <IntegralToPointer>
    |       `-UnaryOperator 0x134141450 <col:49, col:50> 'unsigned long' prefix '-'
    |         `-IntegerLiteral 0x134141430 <col:50> 'unsigned long' 1
    |-DeclStmt 0x1341417b8 <line:7:2, col:47>
    | |-RecordDecl 0x1341414d8 <col:2, col:9> col:9 struct inode
    | `-VarDecl 0x134141648 <col:2, col:40> col:16 used dir 'struct inode *' cinit
    |   `-CXXDependentScopeMemberExpr 0x134141758 <col:23, col:40> '<dependent type>' contains-errors lvalue ->d_inode
    |     `-CXXDependentScopeMemberExpr 0x134141710 <col:23, col:32> '<dependent type>' contains-errors lvalue .dentry
    |       `-RecoveryExpr 0x1341416e8 <col:23, col:27> '<dependent type>' contains-errors lvalue
    |         `-DeclRefExpr 0x1341416b0 <col:23> 'struct nameidata *' lvalue ParmVar 0x134128648 'nd' 'struct nameidata *'
    |-DeclStmt 0x134141850 <line:8:2, col:11>
    | `-VarDecl 0x1341417e8 <col:2, col:6> col:6 used error 'int'
    |-IfStmt 0x134148648 <line:10:2, line:11:17>
    | |-RecoveryExpr 0x134141908 <line:10:6, col:39> '_Bool' contains-errors
    | `-CompoundAssignOperator 0x134148618 <line:11:3, col:17> 'int' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x134141928 <col:3> 'int' lvalue ParmVar 0x134141018 'open_flag' 'int'
    |   `-UnaryOperator 0x134148600 <col:16, col:17> '<dependent type>' contains-errors prefix '~' cannot overflow
    |     `-ImplicitCastExpr 0x1341419e0 <col:17> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1341419c0 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1341487f8 <line:13:2, line:14:16>
    | |-BinaryOperator 0x134148720 <line:13:6, col:18> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x1341486a0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x134148668 <col:6> 'struct nameidata *' lvalue ParmVar 0x134128648 'nd' 'struct nameidata *'
    | | `-RecoveryExpr 0x134148700 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x1341487c8 <line:14:3, col:16> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x134148740 <col:3> 'int' lvalue ParmVar 0x134141018 'open_flag' 'int'
    |   `-RecoveryExpr 0x1341487a8 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1341488e0 <line:16:2, col:24> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x134148878 <col:2, col:15> '<dependent type>' contains-errors lvalue .dentry
    | | `-RecoveryExpr 0x134148850 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x134148818 <col:2> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    | `-DeclRefExpr 0x1341488c0 <col:24> 'struct dentry *const' lvalue Var 0x1341413c8 'DENTRY_NOT_SET' 'struct dentry *const'
    |-BinaryOperator 0x134148a50 <line:17:2, col:30> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x134148960 <col:2, col:15> '<dependent type>' contains-errors lvalue .mnt
    | | `-RecoveryExpr 0x134148938 <col:2, col:8> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x134148900 <col:2> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    | `-CXXDependentScopeMemberExpr 0x134148a08 <col:21, col:30> '<dependent type>' contains-errors lvalue .mnt
    |   `-RecoveryExpr 0x1341489e0 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1341489a8 <col:21> 'struct nameidata *' lvalue ParmVar 0x134128648 'nd' 'struct nameidata *'
    |-BinaryOperator 0x134148e20 <line:18:2, line:19:48> 'int' contains-errors '='
    | |-DeclRefExpr 0x134148a70 <line:18:2> 'int' lvalue Var 0x1341417e8 'error' 'int'
    | `-CallExpr 0x134148dd8 <col:10, line:19:48> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x134148af0 <line:18:10, col:21> '<dependent type>' contains-errors lvalue ->atomic_open
    |   | `-RecoveryExpr 0x134148ac8 <col:10, col:15> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x134148a90 <col:10> 'struct inode *' contains-errors lvalue Var 0x134141648 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x134148b38 <col:33> 'struct inode *' contains-errors lvalue Var 0x134141648 'dir' 'struct inode *'
    |   |-DeclRefExpr 0x134148b58 <col:38> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |   |-DeclRefExpr 0x134148b78 <col:46> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |   |-CallExpr 0x134148d78 <line:19:12, col:41> 'int'
    |   | |-ImplicitCastExpr 0x134148d60 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x134148cf0 <col:12> 'int ()' Function 0x134148c38 'open_to_namei_flags' 'int ()'
    |   | `-ImplicitCastExpr 0x134148da0 <col:32> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x134148d10 <col:32> 'int' lvalue ParmVar 0x134141018 'open_flag' 'int'
    |   `-RecoveryExpr 0x134148db8 <col:44> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x134148f78 <line:20:2, col:22> 'int'
    | |-ImplicitCastExpr 0x134148f60 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x134148f20 <col:2> 'int ()' Function 0x134148e68 'd_lookup_done' 'int ()'
    | `-ImplicitCastExpr 0x134148fa0 <col:16> 'struct dentry *' <LValueToRValue>
    |   `-DeclRefExpr 0x134148f40 <col:16> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |-IfStmt 0x13414a588 <line:21:2, line:50:2>
    | |-UnaryOperator 0x134148ff0 <line:21:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x134148fd8 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x134148fb8 <col:7> 'int' lvalue Var 0x1341417e8 'error' 'int'
    | `-CompoundStmt 0x13414a570 <col:14, line:50:2>
    |   `-IfStmt 0x13414a540 <line:22:3, line:49:3> has_else
    |     |-BinaryOperator 0x1341490c0 <line:22:7, col:22> '<dependent type>' contains-errors '&'
    |     | |-RecoveryExpr 0x134149040 <col:7, col:13> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x134149008 <col:7> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |     | `-RecoveryExpr 0x1341490a0 <col:22> '<dependent type>' contains-errors lvalue
    |     |-CompoundStmt 0x134149968 <col:36, line:33:3>
    |     | |-DeclStmt 0x1341491c0 <line:24:4, col:31>
    |     | | `-VarDecl 0x1341490f8 <col:4, col:23> col:8 used acc_mode 'int' cinit
    |     | |   `-RecoveryExpr 0x134149198 <col:19, col:23> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x134149160 <col:19> 'const struct open_flags *' lvalue ParmVar 0x134140f98 'op' 'const struct open_flags *'
    |     | |-IfStmt 0x134149620 <line:25:4, line:29:4>
    |     | | |-BinaryOperator 0x134149290 <line:25:8, col:23> '<dependent type>' contains-errors '&'
    |     | | | |-RecoveryExpr 0x134149210 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |     | | | | `-DeclRefExpr 0x1341491d8 <col:8> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |     | | | `-RecoveryExpr 0x134149270 <col:23> '<dependent type>' contains-errors lvalue
    |     | | `-CompoundStmt 0x134149600 <col:38, line:29:4>
    |     | |   |-CallExpr 0x134149528 <line:27:5, col:32> 'int' contains-errors
    |     | |   | |-ImplicitCastExpr 0x134149510 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | | `-DeclRefExpr 0x1341494b0 <col:5> 'int ()' Function 0x1341493f8 'fsnotify_create' 'int ()'
    |     | |   | |-ImplicitCastExpr 0x134149558 <col:21> 'struct inode *' contains-errors <LValueToRValue>
    |     | |   | | `-DeclRefExpr 0x1341494d0 <col:21> 'struct inode *' contains-errors lvalue Var 0x134141648 'dir' 'struct inode *'
    |     | |   | `-ImplicitCastExpr 0x134149570 <col:26> 'struct dentry *' <LValueToRValue>
    |     | |   |   `-DeclRefExpr 0x1341494f0 <col:26> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |     | |   `-BinaryOperator 0x1341495c8 <line:28:5, col:16> 'int' contains-errors '='
    |     | |     |-DeclRefExpr 0x134149588 <col:5> 'int' contains-errors lvalue Var 0x1341490f8 'acc_mode' 'int'
    |     | |     `-IntegerLiteral 0x1341495a8 <col:16> 'int' 0
    |     | `-BinaryOperator 0x134149850 <line:30:4, col:55> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x134149640 <col:4> 'int' lvalue Var 0x1341417e8 'error' 'int'
    |     |   `-CallExpr 0x134149818 <col:12, col:55> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x134149740 <col:12> 'int ()' Function 0x134149688 'may_open' 'int ()'
    |     |     |-UnaryOperator 0x1341497c0 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |     | `-RecoveryExpr 0x134149798 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |     |     |   `-DeclRefExpr 0x134149760 <col:22> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |     |     |-DeclRefExpr 0x1341497d8 <col:36> 'int' contains-errors lvalue Var 0x1341490f8 'acc_mode' 'int'
    |     |     `-DeclRefExpr 0x1341497f8 <col:46> 'int' lvalue ParmVar 0x134141018 'open_flag' 'int'
    |     `-IfStmt 0x13414a510 <line:33:10, line:49:3> has_else
    |       |-CallExpr 0x134149a98 <line:33:14, col:59> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x134149990 <col:14> 'int ()' Function 0x1341492d8 'WARN_ON' 'int ()'
    |       | `-BinaryOperator 0x134149a78 <col:22, col:45> 'int' contains-errors '=='
    |       |   |-CXXDependentScopeMemberExpr 0x134149a10 <col:22, col:35> '<dependent type>' contains-errors lvalue .dentry
    |       |   | `-RecoveryExpr 0x1341499e8 <col:22, col:28> '<dependent type>' contains-errors lvalue
    |       |   |   `-DeclRefExpr 0x1341499b0 <col:22> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |       |   `-DeclRefExpr 0x134149a58 <col:45> 'struct dentry *const' lvalue Var 0x1341413c8 'DENTRY_NOT_SET' 'struct dentry *const'
    |       |-CompoundStmt 0x134149ae0 <col:62, line:35:3>
    |       `-CompoundStmt 0x13414a4e8 <col:10, line:49:3>
    |         |-IfStmt 0x134149e18 <line:36:4, line:39:4>
    |         | |-CXXDependentScopeMemberExpr 0x134149b50 <line:36:8, col:21> '<dependent type>' contains-errors lvalue .dentry
    |         | | `-RecoveryExpr 0x134149b28 <col:8, col:14> '<dependent type>' contains-errors lvalue
    |         | |   `-DeclRefExpr 0x134149af0 <col:8> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |         | `-CompoundStmt 0x134149df8 <col:29, line:39:4>
    |         |   |-CallExpr 0x134149cd0 <line:37:5, col:16> 'int'
    |         |   | |-ImplicitCastExpr 0x134149cb8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |         |   | | `-DeclRefExpr 0x134149c78 <col:5> 'int ()' Function 0x134149bc0 'dput' 'int ()'
    |         |   | `-ImplicitCastExpr 0x134149cf8 <col:10> 'struct dentry *' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x134149c98 <col:10> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |         |   `-BinaryOperator 0x134149dd8 <line:38:5, col:27> 'struct dentry *' contains-errors '='
    |         |     |-DeclRefExpr 0x134149d10 <col:5> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |         |     `-CXXDependentScopeMemberExpr 0x134149d90 <col:14, col:27> '<dependent type>' contains-errors lvalue .dentry
    |         |       `-RecoveryExpr 0x134149d68 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |         |         `-DeclRefExpr 0x134149d30 <col:14> 'struct file *' lvalue ParmVar 0x134140dc8 'file' 'struct file *'
    |         |-IfStmt 0x134149f90 <line:40:4, line:41:32>
    |         | |-RecoveryExpr 0x134149e98 <line:40:8, col:23> '_Bool' contains-errors
    |         | `-CallExpr 0x134149f30 <line:41:5, col:32> 'int' contains-errors
    |         |   |-ImplicitCastExpr 0x134149f18 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |         |   | `-DeclRefExpr 0x134149eb8 <col:5> 'int ()' Function 0x1341493f8 'fsnotify_create' 'int ()'
    |         |   |-ImplicitCastExpr 0x134149f60 <col:21> 'struct inode *' contains-errors <LValueToRValue>
    |         |   | `-DeclRefExpr 0x134149ed8 <col:21> 'struct inode *' contains-errors lvalue Var 0x134141648 'dir' 'struct inode *'
    |         |   `-ImplicitCastExpr 0x134149f78 <col:26> 'struct dentry *' <LValueToRValue>
    |         |     `-DeclRefExpr 0x134149ef8 <col:26> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |         `-IfStmt 0x13414a4b8 <line:42:4, line:48:4> has_else
    |           |-CallExpr 0x13414a240 <line:42:8, col:38> 'int'
    |           | |-ImplicitCastExpr 0x13414a228 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |           | | `-DeclRefExpr 0x13414a090 <col:8> 'int ()' Function 0x134149fd8 'unlikely' 'int ()'
    |           | `-CallExpr 0x13414a1e8 <col:17, col:37> 'int'
    |           |   |-ImplicitCastExpr 0x13414a1d0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |           |   | `-DeclRefExpr 0x13414a190 <col:17> 'int ()' Function 0x13414a0d8 'd_is_negative' 'int ()'
    |           |   `-ImplicitCastExpr 0x13414a210 <col:31> 'struct dentry *' <LValueToRValue>
    |           |     `-DeclRefExpr 0x13414a1b0 <col:31> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |           |-CompoundStmt 0x13414a288 <col:41, line:44:4>
    |           `-CompoundStmt 0x13414a490 <col:11, line:48:4>
    |             |-BinaryOperator 0x13414a318 <line:45:5, col:20> '<dependent type>' contains-errors '='
    |             | |-RecoveryExpr 0x13414a2d0 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |             | | `-DeclRefExpr 0x13414a298 <col:5> 'struct path *' lvalue ParmVar 0x134140bf8 'path' 'struct path *'
    |             | `-DeclRefExpr 0x13414a2f8 <col:20> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    |             |-BinaryOperator 0x13414a440 <line:46:5, col:26> '<dependent type>' contains-errors '='
    |             | |-RecoveryExpr 0x13414a370 <col:5, col:11> '<dependent type>' contains-errors lvalue
    |             | | `-DeclRefExpr 0x13414a338 <col:5> 'struct path *' lvalue ParmVar 0x134140bf8 'path' 'struct path *'
    |             | `-CXXDependentScopeMemberExpr 0x13414a3f8 <col:17, col:26> '<dependent type>' contains-errors lvalue .mnt
    |             |   `-RecoveryExpr 0x13414a3d0 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |             |     `-DeclRefExpr 0x13414a398 <col:17> 'struct nameidata *' lvalue ParmVar 0x134128648 'nd' 'struct nameidata *'
    |             `-ReturnStmt 0x13414a480 <line:47:5, col:12>
    |               `-IntegerLiteral 0x13414a460 <col:12> 'int' 0
    |-CallExpr 0x13414a600 <line:51:2, col:13> 'int'
    | |-ImplicitCastExpr 0x13414a5e8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13414a5a8 <col:2> 'int ()' Function 0x134149bc0 'dput' 'int ()'
    | `-ImplicitCastExpr 0x13414a628 <col:7> 'struct dentry *' <LValueToRValue>
    |   `-DeclRefExpr 0x13414a5c8 <col:7> 'struct dentry *' lvalue ParmVar 0x134140a28 'dentry' 'struct dentry *'
    `-ReturnStmt 0x13414a678 <line:52:2, col:9>
      `-ImplicitCastExpr 0x13414a660 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13414a640 <col:9> 'int' lvalue Var 0x1341417e8 'error' 'int'
