`-FunctionDecl 0x14f00dda8  line:1:1 is_string_valid_atr 'int (const char *)'
  |-ParmVarDecl 0x14f00dcd8 <col:21, col:33> col:33 used atr_str 'const char *'
  `-CompoundStmt 0x14f026910 <line:2:1, line:13:1>
    |-DeclStmt 0x14f00df50 <line:3:2, col:36>
    | `-VarDecl 0x14f00dee8 <col:2, col:16> col:16 invalid atr 'unsigned char'
    |-RecoveryExpr 0x14f00e0c8 <line:4:2, col:29> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x14f00e0a8 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x14f00e088 <col:9> '<dependent type>' contains-errors lvalue
    | `-UnaryExprOrTypeTraitExpr 0x14f00dfe0 <col:19, col:29> 'unsigned long' contains-errors sizeof
    |   `-ParenExpr 0x14f00dfc0 <col:25, col:29> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x14f00dfa0 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f00e3b0 <line:6:2, line:7:10>
    | |-CallExpr 0x14f00e348 <line:6:6, col:42> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x14f00e210 <col:6> 'int ()' Function 0x14f00e158 'sc_hex_to_bin' 'int ()'
    | | |-DeclRefExpr 0x14f00e230 <col:20> 'const char *' lvalue ParmVar 0x14f00dcd8 'atr_str' 'const char *'
    | | |-RecoveryExpr 0x14f00e250 <col:29> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x14f00e330 <col:34, col:35> 'const char **' prefix '&' cannot overflow
    | |   `-DeclRefExpr 0x14f00e2d8 <col:35> 'const char *' lvalue ParmVar 0x14f00dcd8 'atr_str' 'const char *'
    | `-ReturnStmt 0x14f00e3a0 <line:7:3, col:10>
    |   `-IntegerLiteral 0x14f00e380 <col:10> 'int' 0
    |-IfStmt 0x14f0266e0 <line:8:2, line:9:10>
    | |-BinaryOperator 0x14f026690 <line:8:6, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x14f026660 <col:6> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14f026640 <col:6> 'const char *' lvalue ParmVar 0x14f00dcd8 'atr_str' 'const char *'
    | | `-ImplicitCastExpr 0x14f026678 <col:16> 'const char *' <IntegralToPointer>
    | |   `-IntegerLiteral 0x14f026600 <col:16> 'int' 2
    | `-ReturnStmt 0x14f0266d0 <line:9:3, col:10>
    |   `-IntegerLiteral 0x14f0266b0 <col:10> 'int' 0
    |-IfStmt 0x14f0268c0 <line:10:2, line:11:10>
    | |-BinaryOperator 0x14f026870 <line:10:6, col:34> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x14f026798 <col:6, col:16> 'int' contains-errors '!='
    | | | |-ArraySubscriptExpr 0x14f026758 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | | |-ImplicitCastExpr 0x14f026740 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | | | | | `-RecoveryExpr 0x14f026700 <col:6> '<dependent type>' contains-errors lvalue
    | | | | `-IntegerLiteral 0x14f026720 <col:10> 'int' 0
    | | | `-IntegerLiteral 0x14f026778 <col:16> 'int' 59
    | | `-BinaryOperator 0x14f026850 <col:24, col:34> 'int' contains-errors '!='
    | |   |-ArraySubscriptExpr 0x14f026810 <col:24, col:29> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x14f0267f8 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x14f0267b8 <col:24> '<dependent type>' contains-errors lvalue
    | |   | `-IntegerLiteral 0x14f0267d8 <col:28> 'int' 0
    | |   `-IntegerLiteral 0x14f026830 <col:34> 'int' 63
    | `-ReturnStmt 0x14f0268b0 <line:11:3, col:10>
    |   `-IntegerLiteral 0x14f026890 <col:10> 'int' 0
    `-ReturnStmt 0x14f026900 <line:12:2, col:9>
      `-IntegerLiteral 0x14f0268e0 <col:9> 'int' 1
