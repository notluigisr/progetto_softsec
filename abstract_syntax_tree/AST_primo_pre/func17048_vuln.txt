`-FunctionDecl 0x12300df18  line:1:12 referenced invalid jas_icclut16_input 'int (int *, int *, int)' static
  |-ParmVarDecl 0x12300dd28 <col:31, col:49> col:49 invalid attrval 'int *'
  |-ParmVarDecl 0x12300dda8 <col:58, col:72> col:72 invalid in 'int *'
  |-ParmVarDecl 0x12300de28 <line:2:3, col:7> col:7 used cnt 'int'
  `-CompoundStmt 0x12302b728 <line:3:1, line:68:1>
    |-DeclStmt 0x12300e058 <line:4:2, col:7>
    | `-VarDecl 0x12300dff0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x12300e0f0 <line:5:2, col:7>
    | `-VarDecl 0x12300e088 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x12300e188 <line:6:2, col:14>
    | `-VarDecl 0x12300e120 <col:2, col:6> col:6 used clutsize 'int'
    |-BinaryOperator 0x12300e348 <line:7:2, col:41> '<dependent type>' contains-errors '='
    | |-BinaryOperator 0x12300e328 <col:2, col:18> '<dependent type>' contains-errors '*'
    | | |-RecoveryExpr 0x12300e1c0 <col:2> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12300e1a0 <col:2> 'int (int *, int *, int)' Function 0x12300df18 'jas_icclut16_input' 'int (int *, int *, int)'
    | | `-RecoveryExpr 0x12300e308 <col:18> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12300e2d0 <col:26, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x12300e288 <col:27, col:41> '<dependent type>' contains-errors lvalue .lut16
    |     `-CXXDependentScopeMemberExpr 0x12300e240 <col:27, col:36> '<dependent type>' contains-errors lvalue ->data
    |       `-RecoveryExpr 0x12300e220 <col:27> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x123027d30 <line:13:2, line:17:8>
    | |-BinaryOperator 0x123027ca8 <line:13:6, line:16:27> 'int' contains-errors '||'
    | | |-BinaryOperator 0x123027c48 <line:13:6, line:15:39> 'int' contains-errors '||'
    | | | |-BinaryOperator 0x123027b78 <line:13:6, line:14:43> 'int' contains-errors '||'
    | | | | |-CallExpr 0x123027a98 <line:13:6, col:44> '<dependent type>' contains-errors
    | | | | | |-DeclRefExpr 0x123027580 <col:6> 'int ()' Function 0x1230274c8 'jas_iccgetuint8' 'int ()'
    | | | | | |-RecoveryExpr 0x1230275a0 <col:22> '<dependent type>' contains-errors lvalue
    | | | | | `-UnaryOperator 0x123027a80 <col:26, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | |   `-CXXDependentScopeMemberExpr 0x123027a38 <col:27, col:34> '<dependent type>' contains-errors lvalue ->numinchans
    | | | | |     `-RecoveryExpr 0x123027a18 <col:27> '<dependent type>' contains-errors lvalue
    | | | | `-CallExpr 0x123027b48 <line:14:4, col:43> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x123027668 <col:4> 'int ()' Function 0x1230274c8 'jas_iccgetuint8' 'int ()'
    | | | |   |-RecoveryExpr 0x123027688 <col:20> '<dependent type>' contains-errors lvalue
    | | | |   `-UnaryOperator 0x123027b30 <col:24, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | |     `-CXXDependentScopeMemberExpr 0x123027ae8 <col:25, col:32> '<dependent type>' contains-errors lvalue ->numoutchans
    | | | |       `-RecoveryExpr 0x123027ac8 <col:25> '<dependent type>' contains-errors lvalue
    | | | `-CallExpr 0x123027c18 <line:15:4, col:39> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x123027770 <col:4> 'int ()' Function 0x1230274c8 'jas_iccgetuint8' 'int ()'
    | | |   |-RecoveryExpr 0x123027790 <col:20> '<dependent type>' contains-errors lvalue
    | | |   `-UnaryOperator 0x123027c00 <col:24, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-CXXDependentScopeMemberExpr 0x123027bb8 <col:25, col:32> '<dependent type>' contains-errors lvalue ->clutlen
    | | |       `-RecoveryExpr 0x123027b98 <col:25> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x123027c88 <line:16:4, col:27> 'int' contains-errors '=='
    | |   |-CallExpr 0x123027998 <col:4, col:22> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x123027958 <col:4> 'int ()' Function 0x1230278a0 'jas_stream_getc' 'int ()'
    | |   | `-RecoveryExpr 0x123027978 <col:20> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x123027c68 <col:27> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x123027d18 <line:17:3, col:8> 'error' 0x123027cc8
    |-ForStmt 0x1230281f0 <line:18:2, line:23:2>
    | |-BinaryOperator 0x123027d90 <line:18:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x123027d50 <col:7> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | | `-IntegerLiteral 0x123027d70 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x123027e08 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x123027df0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x123027db0 <col:14> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | | `-IntegerLiteral 0x123027dd0 <col:18> 'int' 3
    | |-UnaryOperator 0x123027e48 <col:21, col:23> 'int' prefix '++'
    | | `-DeclRefExpr 0x123027e28 <col:23> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | `-CompoundStmt 0x1230281d8 <col:26, line:23:2>
    |   `-ForStmt 0x1230281a0 <line:19:3, line:22:3>
    |     |-BinaryOperator 0x123027ea0 <line:19:8, col:12> 'int' '='
    |     | |-DeclRefExpr 0x123027e60 <col:8> 'int' lvalue Var 0x12300e088 'j' 'int'
    |     | `-IntegerLiteral 0x123027e80 <col:12> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x123027f18 <col:15, col:19> 'int' '<'
    |     | |-ImplicitCastExpr 0x123027f00 <col:15> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x123027ec0 <col:15> 'int' lvalue Var 0x12300e088 'j' 'int'
    |     | `-IntegerLiteral 0x123027ee0 <col:19> 'int' 3
    |     |-UnaryOperator 0x123027f58 <col:22, col:24> 'int' prefix '++'
    |     | `-DeclRefExpr 0x123027f38 <col:24> 'int' lvalue Var 0x12300e088 'j' 'int'
    |     `-CompoundStmt 0x123028188 <col:27, line:22:3>
    |       `-IfStmt 0x123028168 <line:20:4, line:21:10>
    |         |-RecoveryExpr 0x123028130 <line:20:8, col:44> '_Bool' contains-errors
    |         `-GotoStmt 0x123028150 <line:21:5, col:10> 'error' 0x123027cc8
    |-IfStmt 0x123029ca0 <line:24:2, line:26:8>
    | |-BinaryOperator 0x123029c68 <line:24:6, line:25:46> 'int' contains-errors '||'
    | | |-CallExpr 0x123029b88 <line:24:6, col:47> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x123028308 <col:6> 'int ()' Function 0x123028250 'jas_iccgetuint16' 'int ()'
    | | | |-RecoveryExpr 0x123028328 <col:23> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x123029b70 <col:27, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-CXXDependentScopeMemberExpr 0x123029b28 <col:28, col:35> '<dependent type>' contains-errors lvalue ->numintabents
    | | |     `-RecoveryExpr 0x123029b08 <col:28> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x123029c38 <line:25:4, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x123029a00 <col:4> 'int ()' Function 0x123028250 'jas_iccgetuint16' 'int ()'
    | |   |-RecoveryExpr 0x123029a20 <col:21> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x123029c20 <col:25, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-CXXDependentScopeMemberExpr 0x123029bd8 <col:26, col:33> '<dependent type>' contains-errors lvalue ->numouttabents
    | |       `-RecoveryExpr 0x123029bb8 <col:26> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x123029c88 <line:26:3, col:8> 'error' 0x123027cc8
    |-IfStmt 0x123029f78 <line:28:2, line:33:8>
    | |-RecoveryExpr 0x123029f40 <line:28:6, line:32:30> '_Bool' contains-errors
    | `-GotoStmt 0x123029f60 <line:33:3, col:8> 'error' 0x123027cc8
    |-IfStmt 0x12302a108 <line:36:2, line:40:8>
    | |-RecoveryExpr 0x12302a0d0 <line:36:6, line:39:30> '_Bool' contains-errors
    | `-GotoStmt 0x12302a0f0 <line:40:3, col:8> 'error' 0x123027cc8
    |-ForStmt 0x12302b418 <line:55:2, line:58:2>
    | |-BinaryOperator 0x12302a860 <line:55:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x12302a820 <col:7> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | | `-IntegerLiteral 0x12302a840 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12302a8f0 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x12302a8c0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12302a880 <col:14> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | | `-ImplicitCastExpr 0x12302a8d8 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12302a8a0 <col:18> 'int' lvalue Var 0x12300e120 'clutsize' 'int'
    | |-UnaryOperator 0x12302a930 <col:28, col:30> 'int' prefix '++'
    | | `-DeclRefExpr 0x12302a910 <col:30> 'int' lvalue Var 0x12300dff0 'i' 'int'
    | `-CompoundStmt 0x12302b400 <col:33, line:58:2>
    |   `-IfStmt 0x12302a9e0 <line:56:3, line:57:9>
    |     |-RecoveryExpr 0x12302a9a8 <line:56:7, col:43> '_Bool' contains-errors
    |     `-GotoStmt 0x12302a9c8 <line:57:4, col:9> 'error' 0x123027cc8
    |-IfStmt 0x12302b528 <line:59:2, line:63:8>
    | |-RecoveryExpr 0x12302b4f0 <line:59:6, line:62:28> '_Bool' contains-errors
    | `-GotoStmt 0x12302b510 <line:63:3, col:8> 'error' 0x123027cc8
    |-ReturnStmt 0x12302b568 <line:64:2, col:9>
    | `-IntegerLiteral 0x12302b548 <col:9> 'int' 0
    |-LabelStmt 0x12302b6c0 <line:65:1, line:66:30> 'error'
    | `-CallExpr 0x12302b698 <col:2, col:30> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12302b658 <col:2> 'int ()' Function 0x12302b5a0 'jas_icclut16_destroy' 'int ()'
    |   `-RecoveryExpr 0x12302b678 <col:23> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12302b718 <line:67:2, col:10>
      `-UnaryOperator 0x12302b700 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x12302b6e0 <col:10> 'int' 1
