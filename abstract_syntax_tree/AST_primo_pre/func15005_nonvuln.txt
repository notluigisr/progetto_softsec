`-FunctionDecl 0x15780df18  line:1:1 invalid tokenize 'int (int *, int *, const int *)'
  |-ParmVarDecl 0x15780dd28 <col:10, col:20> col:20 referenced invalid parseCtx 'int *'
  |-ParmVarDecl 0x15780dda8 <col:30, col:39> col:39 referenced invalid ctx 'int *'
  |-ParmVarDecl 0x15780de28 <col:44, col:65> col:65 invalid src 'const int *'
  `-CompoundStmt 0x157122d60 <col:70, line:23:1>
    |-BinaryOperator 0x15780e140 <line:3:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15780e020 <col:5, col:10> '<dependent type>' contains-errors lvalue ->pos
    | | `-RecoveryExpr 0x15780dff8 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15780dfd8 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'
    | `-UnaryOperator 0x15780e128 <col:16, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x15780e108 <col:17, col:28> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x15780e0f0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x15780e088 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data
    |     |   `-RecoveryExpr 0x15780e068 <col:17> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15780e0d0 <col:27> 'int' 0
    |-BinaryOperator 0x15780e328 <line:4:5, col:38> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15780e1a8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->end
    | | `-RecoveryExpr 0x15780e180 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15780e160 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'
    | `-UnaryOperator 0x15780e310 <col:16, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x15780e2f0 <col:17, col:38> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x15780e2c0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x15780e210 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data
    |     |   `-RecoveryExpr 0x15780e1f0 <col:17> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x15780e2d8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>
    |       `-CXXDependentScopeMemberExpr 0x15780e278 <col:27, col:32> '<dependent type>' contains-errors lvalue ->length
    |         `-RecoveryExpr 0x15780e258 <col:27> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x157122600 <line:5:5, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x15780e390 <col:5, col:10> '<dependent type>' contains-errors lvalue ->depth
    | | `-RecoveryExpr 0x15780e368 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x15780e348 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'
    | `-IntegerLiteral 0x15780e3d8 <col:18> 'int' 0
    |-BinaryOperator 0x1571226d0 <line:6:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x157122668 <col:5, col:15> '<dependent type>' contains-errors lvalue ->tokenCount
    | | `-RecoveryExpr 0x157122640 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x157122620 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'
    | `-IntegerLiteral 0x1571226b0 <col:28> 'int' 0
    |-BinaryOperator 0x1571227a0 <line:7:5, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x157122738 <col:5, col:15> '<dependent type>' contains-errors lvalue ->index
    | | `-RecoveryExpr 0x157122710 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x1571226f0 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'
    | `-IntegerLiteral 0x157122780 <col:23> 'int' 0
    |-CallExpr 0x1571229d0 <line:11:5, col:17> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x157122920 <col:5> 'int ()' Function 0x157122868 'jsmn_init' 'int ()'
    | `-UnaryOperator 0x1571229b8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x157122998 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x157122cf8 <line:16:5, line:20:5>
    | |-BinaryOperator 0x157122b28 <line:16:8, col:31> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x157122ac0 <col:8, col:18> '<dependent type>' contains-errors lvalue ->tokenCount
    | | | `-RecoveryExpr 0x157122aa0 <col:8> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x157122b08 <col:31> 'int' 0
    | `-CompoundStmt 0x157122cd8 <col:34, line:20:5>
    |   |-IfStmt 0x157122c70 <line:17:9, line:18:20>
    |   | |-BinaryOperator 0x157122c08 <line:17:12, col:36> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x157122b68 <col:12, col:22> '<dependent type>' contains-errors lvalue ->tokenCount
    |   | | | `-RecoveryExpr 0x157122b48 <col:12> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x157122be8 <col:36> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x157122c60 <line:18:13, col:20>
    |   |   `-RecoveryExpr 0x157122c40 <col:20> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x157122cc8 <line:19:9, col:16>
    |     `-RecoveryExpr 0x157122ca8 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x157122d50 <line:22:5, col:12>
      `-RecoveryExpr 0x157122d30 <col:12> '<dependent type>' contains-errors lvalue
