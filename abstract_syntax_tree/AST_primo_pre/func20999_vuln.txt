`-FunctionDecl 0x14780dd18  line:1:1 SYSCALL_DEFINE6 'int ()'
  `-CompoundStmt 0x14782b418 <line:4:1, line:41:1>
    |-DeclStmt 0x14780dff8 <line:5:2, col:21>
    | |-RecordDecl 0x14780de08 <col:2, col:9> col:9 struct socket
    | `-VarDecl 0x14780df78 <col:2, col:17> col:17 used sock 'struct socket *'
    |-DeclStmt 0x1478267b8 <line:6:2, col:33>
    | |-RecordDecl 0x14780e010 <col:2, col:9> col:9 struct sockaddr_storage
    | `-VarDecl 0x14780e108 <col:2, col:26> col:26 invalid address 'struct sockaddr_storage'
    |-DeclStmt 0x147826850 <line:7:2, col:9>
    | `-VarDecl 0x1478267e8 <col:2, col:6> col:6 used err 'int'
    |-DeclStmt 0x1478269e8 <line:8:2, col:19>
    | |-RecordDecl 0x147826868 <col:2, col:9> col:9 struct msghdr
    | `-VarDecl 0x147826968 <col:2, col:16> col:16 referenced invalid msg 'struct msghdr'
    |-DeclStmt 0x147826b78 <line:9:2, col:18>
    | |-RecordDecl 0x147826a00 <col:2, col:9> col:9 struct iovec
    | `-VarDecl 0x147826af8 <col:2, col:15> col:15 referenced invalid iov 'struct iovec'
    |-DeclStmt 0x147826c10 <line:10:2, col:17>
    | `-VarDecl 0x147826ba8 <col:2, col:6> col:6 used fput_needed 'int'
    |-BinaryOperator 0x147826f90 <line:14:2, col:51> 'struct socket *' contains-errors '='
    | |-DeclRefExpr 0x147826d08 <col:2> 'struct socket *' lvalue Var 0x14780df78 'sock' 'struct socket *'
    | `-CallExpr 0x147826f58 <col:9, col:51> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x147826e08 <col:9> 'int ()' Function 0x147826d50 'sockfd_lookup_light' 'int ()'
    |   |-RecoveryExpr 0x147826f38 <col:29> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x147826e90 <col:33, col:34> 'int *' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x147826e40 <col:34> 'int' lvalue Var 0x1478267e8 'err' 'int'
    |   `-UnaryOperator 0x147826ec8 <col:39, col:40> 'int *' prefix '&' cannot overflow
    |     `-DeclRefExpr 0x147826ea8 <col:40> 'int' lvalue Var 0x147826ba8 'fput_needed' 'int'
    |-IfStmt 0x147827068 <line:15:2, line:16:8>
    | |-UnaryOperator 0x147826fe8 <line:15:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x147826fd0 <col:7> 'struct socket *' <LValueToRValue>
    | |   `-DeclRefExpr 0x147826fb0 <col:7> 'struct socket *' lvalue Var 0x14780df78 'sock' 'struct socket *'
    | `-GotoStmt 0x147827050 <line:16:3, col:8> 'out' 0x147827000
    |-BinaryOperator 0x147827170 <line:18:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1478270d0 <col:2, col:6> '<dependent type>' contains-errors lvalue .iov_base
    | | `-RecoveryExpr 0x1478270a8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x147827088 <col:2> 'struct iovec' lvalue Var 0x147826af8 'iov' 'struct iovec'
    | `-RecoveryExpr 0x147827150 <col:17> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x147827278 <line:19:2, col:16> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1478271d8 <col:2, col:6> '<dependent type>' contains-errors lvalue .iov_len
    | | `-RecoveryExpr 0x1478271b0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x147827190 <col:2> 'struct iovec' lvalue Var 0x147826af8 'iov' 'struct iovec'
    | `-RecoveryExpr 0x147827258 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x147827380 <line:20:2, col:17> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1478272e0 <col:2, col:6> '<dependent type>' contains-errors lvalue .msg_name
    | | `-RecoveryExpr 0x1478272b8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x147827298 <col:2> 'struct msghdr' lvalue Var 0x147826968 'msg' 'struct msghdr'
    | `-RecoveryExpr 0x147827360 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14782a640 <line:21:2, col:50> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x147827480 <col:2> 'int ()' Function 0x1478273c8 'iov_iter_init' 'int ()'
    | |-UnaryOperator 0x147827508 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x1478274c0 <col:17, col:21> '<dependent type>' contains-errors lvalue .msg_iter
    | |   `-RecoveryExpr 0x1478274a0 <col:17> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x14782a600 <col:31> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x147827558 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x147827538 <col:39> '<dependent type>' contains-errors lvalue
    | |-IntegerLiteral 0x147827570 <col:44> 'int' 1
    | `-RecoveryExpr 0x14782a620 <col:47> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14782a770 <line:22:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14782a6d0 <col:2, col:6> '<dependent type>' contains-errors lvalue .msg_control
    | | `-RecoveryExpr 0x14782a6a8 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14782a688 <col:2> 'struct msghdr' lvalue Var 0x147826968 'msg' 'struct msghdr'
    | `-RecoveryExpr 0x14782a750 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14782a840 <line:23:2, col:23> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14782a7d8 <col:2, col:6> '<dependent type>' contains-errors lvalue .msg_controllen
    | | `-RecoveryExpr 0x14782a7b0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14782a790 <col:2> 'struct msghdr' lvalue Var 0x147826968 'msg' 'struct msghdr'
    | `-IntegerLiteral 0x14782a820 <col:23> 'int' 0
    |-BinaryOperator 0x14782a910 <line:24:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14782a8a8 <col:2, col:6> '<dependent type>' contains-errors lvalue .msg_namelen
    | | `-RecoveryExpr 0x14782a880 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14782a860 <col:2> 'struct msghdr' lvalue Var 0x147826968 'msg' 'struct msghdr'
    | `-IntegerLiteral 0x14782a8f0 <col:20> 'int' 0
    |-IfStmt 0x14782aef0 <line:25:2, line:31:2>
    | |-RecoveryExpr 0x14782a948 <line:25:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14782aed0 <col:12, line:31:2>
    |   |-IfStmt 0x14782aba0 <line:27:3, line:28:9>
    |   | |-BinaryOperator 0x14782ab18 <line:27:7, col:13> 'int' '<'
    |   | | |-ImplicitCastExpr 0x14782ab00 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x14782aac0 <col:7> 'int' lvalue Var 0x1478267e8 'err' 'int'
    |   | | `-IntegerLiteral 0x14782aae0 <col:13> 'int' 0
    |   | `-GotoStmt 0x14782ab88 <line:28:4, col:9> 'out_put' 0x14782ab38
    |   `-BinaryOperator 0x14782ae20 <line:29:3, col:38> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x14782ac08 <col:3, col:7> '<dependent type>' contains-errors lvalue .msg_name
    |     | `-RecoveryExpr 0x14782abe0 <col:3> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x14782abc0 <col:3> 'struct msghdr' lvalue Var 0x147826968 'msg' 'struct msghdr'
    |     `-CStyleCastExpr 0x14782adf8 <col:18, col:38> 'struct sockaddr *' contains-errors <Dependent>
    |       `-UnaryOperator 0x14782ad10 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |         `-RecoveryExpr 0x14782acf0 <col:38> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x14782b390 <line:37:1, line:38:36> 'out_put'
    | `-CallExpr 0x14782b360 <col:2, col:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14782b2c0 <col:2> 'int ()' Function 0x14782b208 'fput_light' 'int ()'
    |   |-RecoveryExpr 0x14782b318 <col:13, col:19> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14782b2e0 <col:13> 'struct socket *' lvalue Var 0x14780df78 'sock' 'struct socket *'
    |   `-DeclRefExpr 0x14782b340 <col:25> 'int' lvalue Var 0x147826ba8 'fput_needed' 'int'
    `-LabelStmt 0x14782b3f8 <line:39:1, line:40:9> 'out'
      `-ReturnStmt 0x14782b3e8 <col:2, col:9>
        `-ImplicitCastExpr 0x14782b3d0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x14782b3b0 <col:9> 'int' lvalue Var 0x1478267e8 'err' 'int'
