`-FunctionDecl 0x12f922938  line:1:19 invalid check_pmd_range 'int (struct vm_area_struct *, int *, unsigned long, unsigned long, const int *, unsigned long, void *)' static inline
  |-ParmVarDecl 0x13800e248 <col:35, col:58> col:58 used vma 'struct vm_area_struct *'
  |-ParmVarDecl 0x13800e318 <col:63, col:70> col:70 referenced invalid pud 'int *'
  |-ParmVarDecl 0x13800e398 <line:2:3, col:17> col:17 used addr 'unsigned long'
  |-ParmVarDecl 0x12f922618 <col:23, col:37> col:37 used end 'unsigned long'
  |-ParmVarDecl 0x12f922698 <line:3:3, col:21> col:21 invalid nodes 'const int *'
  |-ParmVarDecl 0x12f922718 <col:28, col:42> col:42 used flags 'unsigned long'
  |-ParmVarDecl 0x12f922798 <line:4:3, col:9> col:9 used private 'void *'
  `-CompoundStmt 0x138027038 <line:5:1, line:20:1>
    |-DeclStmt 0x12f922ad0 <line:7:2, col:20>
    | `-VarDecl 0x12f922a68 <col:2, col:16> col:16 used next 'unsigned long'
    |-BinaryOperator 0x12f922d20 <line:9:2, col:28> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12f922b08 <col:2> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12f922ae8 <col:2> 'int *' lvalue ParmVar 0x13800e318 'pud' 'int *'
    | `-CallExpr 0x12f922cf0 <col:8, col:28> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12f922c90 <col:8> 'int ()' Function 0x12f922bd8 'pmd_offset' 'int ()'
    |   |-RecoveryExpr 0x12f922cb0 <col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12f922cd0 <col:24> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'
    |-DoStmt 0x138026fe8 <line:10:2, line:18:42>
    | |-CompoundStmt 0x138026d20 <line:10:5, line:18:2>
    | | |-BinaryOperator 0x12f922f60 <line:11:3, col:32> 'unsigned long' '='
    | | | |-DeclRefExpr 0x12f922d40 <col:3> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'
    | | | `-ImplicitCastExpr 0x12f922f48 <col:10, col:32> 'unsigned long' <IntegralCast>
    | | |   `-CallExpr 0x12f922ee8 <col:10, col:32> 'int'
    | | |     |-ImplicitCastExpr 0x12f922ed0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x12f922e40 <col:10> 'int ()' Function 0x12f922d88 'pmd_addr_end' 'int ()'
    | | |     |-ImplicitCastExpr 0x12f922f18 <col:23> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12f922e60 <col:23> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x12f922f30 <col:29> 'unsigned long' <LValueToRValue>
    | | |       `-DeclRefExpr 0x12f922e80 <col:29> 'unsigned long' lvalue ParmVar 0x12f922618 'end' 'unsigned long'
    | | |-CallExpr 0x12f923168 <line:12:3, col:38> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12f923060 <col:3> 'int ()' Function 0x12f922fa8 'split_huge_page_pmd' 'int ()'
    | | | |-RecoveryExpr 0x12f9230b8 <col:23, col:28> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x12f923080 <col:23> 'struct vm_area_struct *' lvalue ParmVar 0x13800e248 'vma' 'struct vm_area_struct *'
    | | | `-RecoveryExpr 0x12f923148 <col:35> '<dependent type>' contains-errors lvalue
    | | |-IfStmt 0x12f923348 <line:13:3, line:14:4>
    | | | |-CallExpr 0x12f923318 <line:13:7, col:32> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x12f923278 <col:7> 'int ()' Function 0x12f9231c0 'pmd_none_or_clear_bad' 'int ()'
    | | | | `-RecoveryExpr 0x12f9232f8 <col:29> '<dependent type>' contains-errors lvalue
    | | | `-ContinueStmt 0x12f923340 <line:14:4>
    | | `-IfStmt 0x138026d00 <line:15:3, line:17:12>
    | |   |-CallExpr 0x138026c00 <line:15:7, line:16:23> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x12f923448 <line:15:7> 'int ()' Function 0x12f923390 'check_pte_range' 'int ()'
    | |   | |-DeclRefExpr 0x12f923468 <col:23> 'struct vm_area_struct *' lvalue ParmVar 0x13800e248 'vma' 'struct vm_area_struct *'
    | |   | |-RecoveryExpr 0x12f9235b8 <col:28> '<dependent type>' contains-errors lvalue
    | |   | |-DeclRefExpr 0x12f9234a0 <col:33> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'
    | |   | |-DeclRefExpr 0x12f9234c0 <col:39> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'
    | |   | |-RecoveryExpr 0x12f9234e0 <col:45> '<dependent type>' contains-errors lvalue
    | |   | |-DeclRefExpr 0x12f923500 <line:16:9> 'unsigned long' lvalue ParmVar 0x12f922718 'flags' 'unsigned long'
    | |   | `-DeclRefExpr 0x12f923520 <col:16> 'void *' lvalue ParmVar 0x12f922798 'private' 'void *'
    | |   `-ReturnStmt 0x138026cf0 <line:17:4, col:12>
    | |     `-UnaryOperator 0x138026cd8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |       `-ImplicitCastExpr 0x138026cc0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    | |         `-RecoveryExpr 0x138026ca0 <col:12> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x138026fc8 <line:18:11, col:39> 'int' contains-errors ','
    |   |-BinaryOperator 0x138026f58 <col:11, col:25> 'unsigned long' contains-errors ','
    |   | |-UnaryOperator 0x138026f08 <col:11, col:14> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | | `-RecoveryExpr 0x138026ee8 <col:11> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x138026f38 <col:18, col:25> 'unsigned long' '='
    |   |   |-DeclRefExpr 0x138026d80 <col:18> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'
    |   |   `-ImplicitCastExpr 0x138026f20 <col:25> 'unsigned long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x138026da0 <col:25> 'unsigned long' lvalue Var 0x12f922a68 'next' 'unsigned long'
    |   `-BinaryOperator 0x138026fa8 <col:31, col:39> 'int' '!='
    |     |-ImplicitCastExpr 0x138026f78 <col:31> 'unsigned long' <LValueToRValue>
    |     | `-DeclRefExpr 0x138026e18 <col:31> 'unsigned long' lvalue ParmVar 0x13800e398 'addr' 'unsigned long'
    |     `-ImplicitCastExpr 0x138026f90 <col:39> 'unsigned long' <LValueToRValue>
    |       `-DeclRefExpr 0x138026e38 <col:39> 'unsigned long' lvalue ParmVar 0x12f922618 'end' 'unsigned long'
    `-ReturnStmt 0x138027028 <line:19:2, col:9>
      `-IntegerLiteral 0x138027008 <col:9> 'int' 0
