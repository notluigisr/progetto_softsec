`-FunctionDecl 0x14d9289f8  line:1:12 referenced invalid vnc_zlib_stop 'int (int *)' static
  |-ParmVarDecl 0x14d928928 <col:26, col:36> col:36 referenced invalid vs 'int *'
  `-CompoundStmt 0x14f009698 <line:2:1, line:61:1>
    |-DeclStmt 0x14d928b28 <line:4:5, col:21>
    | `-VarDecl 0x14d928ac0 <col:5, col:9> col:9 used previous_out 'int'
    |-BinaryOperator 0x14d928c80 <line:7:5, col:25> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d928bd0 <col:5, col:14> '<dependent type>' contains-errors lvalue .zlib
    | | `-CXXDependentScopeMemberExpr 0x14d928b88 <col:5, col:9> '<dependent type>' contains-errors lvalue ->zlib
    | |   `-RecoveryExpr 0x14d928b60 <col:5> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x14d928b40 <col:5> 'int *' lvalue ParmVar 0x14d928928 'vs' 'int *'
    | `-CXXDependentScopeMemberExpr 0x14d928c38 <col:21, col:25> '<dependent type>' contains-errors lvalue ->output
    |   `-RecoveryExpr 0x14d928c18 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d928de0 <line:8:5, col:27> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x14d928ce8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->output
    | | `-RecoveryExpr 0x14d928cc0 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x14d928ca0 <col:5> 'int *' lvalue ParmVar 0x14d928928 'vs' 'int *'
    | `-CXXDependentScopeMemberExpr 0x14d928d98 <col:18, col:27> '<dependent type>' contains-errors lvalue .tmp
    |   `-CXXDependentScopeMemberExpr 0x14d928d50 <col:18, col:22> '<dependent type>' contains-errors lvalue ->zlib
    |     `-RecoveryExpr 0x14d928d30 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d942d18 <line:14:5, line:32:5>
    | |-BinaryOperator 0x14d928f08 <line:14:9, col:28> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14d928ec0 <col:9, col:18> '<dependent type>' contains-errors lvalue ->opaque
    | | | `-RecoveryExpr 0x14d928ea0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x14d928e60 <col:28> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d942cd8 <col:32, line:32:5>
    |   |-DeclStmt 0x14d928fa8 <line:15:9, col:16>
    |   | `-VarDecl 0x14d928f40 <col:9, col:13> col:13 used err 'int'
    |   |-CallExpr 0x14d942228 <line:17:9, col:24> 'int'
    |   | |-ImplicitCastExpr 0x14d942210 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d942160 <col:9> 'int ()' Function 0x14d9420a8 'VNC_DEBUG' 'int ()'
    |   | `-ImplicitCastExpr 0x14d942250 <col:19> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x14d9421c0 <col:19> 'char[4]' lvalue "STR"
    |   |-CallExpr 0x14d9423c8 <line:18:9, col:45> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d942268 <col:9> 'int ()' Function 0x14d9420a8 'VNC_DEBUG' 'int ()'
    |   | |-StringLiteral 0x14d942288 <col:19> 'char[4]' lvalue "STR"
    |   | |-CXXDependentScopeMemberExpr 0x14d942380 <col:26, col:35> '<dependent type>' contains-errors lvalue ->opaque
    |   | | `-RecoveryExpr 0x14d942360 <col:26> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14d942308 <col:43> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x14d942818 <line:22:9, line:23:61> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x14d942470 <line:22:9> 'int' lvalue Var 0x14d928f40 'err' 'int'
    |   | `-CallExpr 0x14d9427c8 <col:15, line:23:61> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x14d942570 <line:22:15> 'int ()' Function 0x14d9424b8 'deflateInit2' 'int ()'
    |   |   |-RecoveryExpr 0x14d942728 <col:28> '<dependent type>' contains-errors lvalue
    |   |   |-CXXDependentScopeMemberExpr 0x14d942610 <col:37, col:47> '<dependent type>' contains-errors lvalue .compression
    |   |   | `-CXXDependentScopeMemberExpr 0x14d9425c8 <col:37, col:41> '<dependent type>' contains-errors lvalue ->tight
    |   |   |   `-RecoveryExpr 0x14d9425a8 <col:37> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942748 <col:60> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942768 <col:72> '<dependent type>' contains-errors lvalue
    |   |   |-RecoveryExpr 0x14d942788 <line:23:28> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x14d9427a8 <col:43> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x14d942af0 <line:25:9, line:28:9>
    |   | |-BinaryOperator 0x14d9428b0 <line:25:13, col:20> 'int' contains-errors '!='
    |   | | |-DeclRefExpr 0x14d942838 <col:13> 'int' lvalue Var 0x14d928f40 'err' 'int'
    |   | | `-RecoveryExpr 0x14d942890 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14d942ad0 <col:26, line:28:9>
    |   |   |-CallExpr 0x14d942a58 <line:26:13, col:34> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d9429b0 <col:13> 'int ()' Function 0x14d9428f8 'fprintf' 'int ()'
    |   |   | |-RecoveryExpr 0x14d942a38 <col:21> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x14d9429e8 <col:29> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x14d942ac0 <line:27:13, col:21>
    |   |     `-UnaryOperator 0x14d942aa8 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x14d942a88 <col:21> 'int' 1
    |   `-BinaryOperator 0x14d942c98 <line:30:9, col:36> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x14d942ba0 <col:9, col:18> '<dependent type>' contains-errors lvalue .level
    |     | `-CXXDependentScopeMemberExpr 0x14d942b58 <col:9, col:13> '<dependent type>' contains-errors lvalue ->zlib
    |     |   `-RecoveryExpr 0x14d942b30 <col:9> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14d942b10 <col:9> 'int *' lvalue ParmVar 0x14d928928 'vs' 'int *'
    |     `-CXXDependentScopeMemberExpr 0x14d942c50 <col:26, col:36> '<dependent type>' contains-errors lvalue .compression
    |       `-CXXDependentScopeMemberExpr 0x14d942c08 <col:26, col:30> '<dependent type>' contains-errors lvalue ->tight
    |         `-RecoveryExpr 0x14d942be8 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f008af8 <line:34:5, line:40:5>
    | |-BinaryOperator 0x14d942e98 <line:34:9, col:43> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x14d942da0 <col:9, col:19> '<dependent type>' contains-errors lvalue .compression
    | | | `-CXXDependentScopeMemberExpr 0x14d942d58 <col:9, col:13> '<dependent type>' contains-errors lvalue ->tight
    | | |   `-RecoveryExpr 0x14d942d38 <col:9> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x14d942e50 <col:34, col:43> '<dependent type>' contains-errors lvalue .level
    | |   `-CXXDependentScopeMemberExpr 0x14d942e08 <col:34, col:38> '<dependent type>' contains-errors lvalue ->zlib
    | |     `-RecoveryExpr 0x14d942de8 <col:34> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14f008ad8 <col:50, line:40:5>
    |   |-IfStmt 0x14f008910 <line:35:9, line:38:9>
    |   | |-RecoveryExpr 0x14f008890 <line:35:13, line:36:50> '_Bool' contains-errors
    |   | `-CompoundStmt 0x14f0088f8 <col:56, line:38:9>
    |   |   `-ReturnStmt 0x14f0088e8 <line:37:13, col:21>
    |   |     `-UnaryOperator 0x14f0088d0 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x14f0088b0 <col:21> 'int' 1
    |   `-BinaryOperator 0x14f008ab8 <line:39:9, col:36> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x14f0089c0 <col:9, col:18> '<dependent type>' contains-errors lvalue .level
    |     | `-CXXDependentScopeMemberExpr 0x14f008978 <col:9, col:13> '<dependent type>' contains-errors lvalue ->zlib
    |     |   `-RecoveryExpr 0x14f008950 <col:9> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x14f008930 <col:9> 'int *' lvalue ParmVar 0x14d928928 'vs' 'int *'
    |     `-CXXDependentScopeMemberExpr 0x14f008a70 <col:26, col:36> '<dependent type>' contains-errors lvalue .compression
    |       `-CXXDependentScopeMemberExpr 0x14f008a28 <col:26, col:30> '<dependent type>' contains-errors lvalue ->tight
    |         `-RecoveryExpr 0x14f008a08 <col:26> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14f008dd0 <line:43:5, col:58> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f008bf8 <col:5> 'int ()' Function 0x14f008b40 'buffer_reserve' 'int ()'
    | |-UnaryOperator 0x14f008c80 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x14f008c38 <col:21, col:25> '<dependent type>' contains-errors lvalue ->output
    | |   `-RecoveryExpr 0x14f008c18 <col:21> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14f008db0 <col:33, col:56> '<dependent type>' contains-errors '+'
    |   |-CXXDependentScopeMemberExpr 0x14f008d48 <col:33, col:47> '<dependent type>' contains-errors lvalue .offset
    |   | `-CXXDependentScopeMemberExpr 0x14f008d00 <col:33, col:42> '<dependent type>' contains-errors lvalue .zlib
    |   |   `-CXXDependentScopeMemberExpr 0x14f008cb8 <col:33, col:37> '<dependent type>' contains-errors lvalue ->zlib
    |   |     `-RecoveryExpr 0x14f008c98 <col:33> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x14f008d90 <col:56> 'int' 64
    `-IfStmt 0x14f0094d0 <line:54:5, line:57:5>
      |-RecoveryExpr 0x14f009410 <line:54:9, col:43> '_Bool' contains-errors
      `-CompoundStmt 0x14f0094b8 <col:49, line:57:5>
        `-ReturnStmt 0x14f0094a8 <line:56:9, col:17>
          `-UnaryOperator 0x14f009490 <col:16, col:17> 'int' prefix '-'
            `-IntegerLiteral 0x14f009470 <col:17> 'int' 1
