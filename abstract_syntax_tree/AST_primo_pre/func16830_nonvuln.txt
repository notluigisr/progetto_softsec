`-FunctionDecl 0x13c9285e8  line:1:1 invalid slapi_config_register_callback_plugin 'int (int, int, const char *, int, const char *, int, void *, int *)'
  |-ParmVarDecl 0x13c9280d8 <col:39, col:43> col:43 used operation 'int'
  |-ParmVarDecl 0x13c928158 <line:2:39, col:43> col:43 used flags 'int'
  |-ParmVarDecl 0x13c9281d8 <line:3:39, col:51> col:51 used base 'const char *'
  |-ParmVarDecl 0x13c928258 <line:4:39, col:43> col:43 used scope 'int'
  |-ParmVarDecl 0x13c9282d8 <line:5:39, col:51> col:51 used filter 'const char *'
  |-ParmVarDecl 0x13c928370 <line:6:39, col:53> col:53 invalid fn 'int'
  |-ParmVarDecl 0x13c9283f0 <line:7:39, col:45> col:45 used fn_arg 'void *'
  |-ParmVarDecl 0x13c9284a8 <line:8:39, col:53> col:53 invalid pb 'int *'
  `-CompoundStmt 0x13c9449d0 <line:9:1, line:32:1>
    |-DeclStmt 0x13c928770 <line:10:5, col:15>
    | `-VarDecl 0x13c9286e8 <col:5, col:14> col:9 used rc 'int' cinit
    |   `-IntegerLiteral 0x13c928750 <col:14> 'int' 0
    |-IfStmt 0x13c944968 <line:12:5, line:30:5>
    | |-BinaryOperator 0x13c941a00 <line:12:9, col:15> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x13c9419c0 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13c9419e0 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c944948 <col:21, line:30:5>
    |   |-DeclStmt 0x13c941d40 <line:13:9, col:70>
    |   | |-RecordDecl 0x13c941a20 <col:9, col:16> col:16 struct dse
    |   | `-VarDecl 0x13c941b88 <col:9, col:21> col:21 used pdse 'struct dse *'
    |   `-IfStmt 0x13c944928 <line:14:9, line:29:9>
    |     |-BinaryOperator 0x13c941dd0 <line:14:13, col:21> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x13c941d58 <col:13> 'struct dse *' lvalue Var 0x13c941b88 'pdse' 'struct dse *'
    |     | `-RecoveryExpr 0x13c941db0 <col:21> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x13c944908 <col:27, line:29:9>
    |       |-CallExpr 0x13c941fa8 <line:16:13, col:46> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13c941ed0 <col:13> 'int ()' Function 0x13c941e18 'slapi_sdn_init_dn_byref' 'int ()'
    |       | |-UnaryOperator 0x13c941f90 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | | `-RecoveryExpr 0x13c941f70 <col:38> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x13c941f20 <col:42> 'const char *' lvalue ParmVar 0x13c9281d8 'base' 'const char *'
    |       `-IfStmt 0x13c9447d8 <line:17:13, line:26:13> has_else
    |         |-BinaryOperator 0x13c942050 <line:17:17, col:23> 'int' contains-errors '!='
    |         | |-RecoveryExpr 0x13c941fd8 <col:17> '<dependent type>' contains-errors lvalue
    |         | `-RecoveryExpr 0x13c942030 <col:23> '<dependent type>' contains-errors lvalue
    |         |-CompoundStmt 0x13c944688 <col:29, line:23:13>
    |         | |-DeclStmt 0x13c942290 <line:19:17, col:53>
    |         | | |-RecordDecl 0x13c942070 <col:17, col:24> col:24 struct slapdplugin
    |         | | `-VarDecl 0x13c9421d8 <col:17, col:49> col:37 used pb_plugin 'struct slapdplugin *' cinit
    |         | |   `-RecoveryExpr 0x13c942258 <col:49> '<dependent type>' contains-errors lvalue
    |         | `-CallExpr 0x13c9424d0 <line:20:17, col:62> '<dependent type>' contains-errors
    |         |   |-DeclRefExpr 0x13c942388 <col:17> 'int ()' Function 0x13c9422d0 'slapi_pblock_get' 'int ()'
    |         |   |-RecoveryExpr 0x13c9423a8 <col:34> '<dependent type>' contains-errors lvalue
    |         |   |-RecoveryExpr 0x13c9424b0 <col:38> '<dependent type>' contains-errors lvalue
    |         |   `-UnaryOperator 0x13c942460 <col:52, col:53> 'struct slapdplugin **' contains-errors prefix '&' cannot overflow
    |         |     `-DeclRefExpr 0x13c9423e0 <col:53> 'struct slapdplugin *' contains-errors lvalue Var 0x13c9421d8 'pb_plugin' 'struct slapdplugin *'
    |         `-CompoundStmt 0x13c9447c8 <line:23:20, line:26:13>
    `-ReturnStmt 0x13c9449c0 <line:31:5, col:12>
      `-ImplicitCastExpr 0x13c9449a8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13c944988 <col:12> 'int' lvalue Var 0x13c9286e8 'rc' 'int'
