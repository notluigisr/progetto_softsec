`-FunctionDecl 0x15d02d308  line:1:12 invalid merge_extent_mapping 'int (struct extent_map_tree *, struct extent_map *, struct extent_map *, int)' static
  |-ParmVarDecl 0x15d017448 <col:33, col:57> col:57 used em_tree 'struct extent_map_tree *'
  |-ParmVarDecl 0x15d02d028 <line:2:5, col:24> col:24 used existing 'struct extent_map *'
  |-ParmVarDecl 0x15d02d118 <line:3:5, col:24> col:24 used em 'struct extent_map *'
  |-ParmVarDecl 0x15d02d1b0 <line:4:5, col:9> col:9 invalid map_start 'int'
  `-CompoundStmt 0x15d0308f8 <line:5:1, line:35:1>
    |-DeclStmt 0x15d02d460 <line:6:2, col:25>
    | `-VarDecl 0x15d02d3f8 <col:2, col:21> col:21 used prev 'struct extent_map *'
    |-DeclStmt 0x15d02d508 <line:7:2, col:25>
    | `-VarDecl 0x15d02d4a0 <col:2, col:21> col:21 used next 'struct extent_map *'
    |-CallExpr 0x15d02d948 <line:12:2, col:65> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15d02d680 <col:2> 'int ()' Function 0x15d02d5c8 'BUG_ON' 'int ()'
    | `-BinaryOperator 0x15d02d928 <col:9, col:64> 'int' contains-errors '||'
    |   |-BinaryOperator 0x15d02d720 <col:9, col:25> 'int' contains-errors '<'
    |   | |-RecoveryExpr 0x15d02d6a0 <col:9> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x15d02d6f8 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x15d02d6c0 <col:21> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'
    |   `-BinaryOperator 0x15d02d908 <col:34, col:64> 'int' contains-errors '>='
    |     |-RecoveryExpr 0x15d02d740 <col:34> '<dependent type>' contains-errors lvalue
    |     `-CallExpr 0x15d02d8c8 <col:47, col:64> 'int'
    |       |-ImplicitCastExpr 0x15d02d8b0 <col:47> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x15d02d840 <col:47> 'int ()' Function 0x15d02d788 'extent_map_end' 'int ()'
    |       `-ImplicitCastExpr 0x15d02d8f0 <col:62> 'struct extent_map *' <LValueToRValue>
    |         `-DeclRefExpr 0x15d02d860 <col:62> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'
    |-IfStmt 0x15d02dee0 <line:14:2, line:20:2> has_else
    | |-BinaryOperator 0x15d02d9f0 <line:14:6, col:24> 'int' contains-errors '>'
    | | |-RecoveryExpr 0x15d02d9a8 <col:6, col:16> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x15d02d970 <col:6> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'
    | | `-RecoveryExpr 0x15d02d9d0 <col:24> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x15d02dc58 <col:35, line:17:2>
    | | |-BinaryOperator 0x15d02da68 <line:15:3, col:10> 'struct extent_map *' '='
    | | | |-DeclRefExpr 0x15d02da10 <col:3> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'
    | | | `-ImplicitCastExpr 0x15d02da50 <col:10> 'struct extent_map *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x15d02da30 <col:10> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'
    | | `-BinaryOperator 0x15d02dc38 <line:16:3, col:30> 'struct extent_map *' '='
    | |   |-DeclRefExpr 0x15d02da88 <col:3> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'
    | |   `-ImplicitCastExpr 0x15d02dc20 <col:10, col:30> 'struct extent_map *' <IntegralToPointer>
    | |     `-CallExpr 0x15d02dbe0 <col:10, col:30> 'int'
    | |       |-ImplicitCastExpr 0x15d02dbc8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x15d02db88 <col:10> 'int ()' Function 0x15d02dad0 'prev_extent_map' 'int ()'
    | |       `-ImplicitCastExpr 0x15d02dc08 <col:26> 'struct extent_map *' <LValueToRValue>
    | |         `-DeclRefExpr 0x15d02dba8 <col:26> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'
    | `-CompoundStmt 0x15d02dec0 <line:17:9, line:20:2>
    |   |-BinaryOperator 0x15d02dcd0 <line:18:3, col:10> 'struct extent_map *' '='
    |   | |-DeclRefExpr 0x15d02dc78 <col:3> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'
    |   | `-ImplicitCastExpr 0x15d02dcb8 <col:10> 'struct extent_map *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15d02dc98 <col:10> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'
    |   `-BinaryOperator 0x15d02dea0 <line:19:3, col:30> 'struct extent_map *' '='
    |     |-DeclRefExpr 0x15d02dcf0 <col:3> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'
    |     `-ImplicitCastExpr 0x15d02de88 <col:10, col:30> 'struct extent_map *' <IntegralToPointer>
    |       `-CallExpr 0x15d02de48 <col:10, col:30> 'int'
    |         |-ImplicitCastExpr 0x15d02de30 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x15d02ddf0 <col:10> 'int ()' Function 0x15d02dd38 'next_extent_map' 'int ()'
    |         `-ImplicitCastExpr 0x15d02de70 <col:26> 'struct extent_map *' <LValueToRValue>
    |           `-DeclRefExpr 0x15d02de10 <col:26> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'
    |-IfStmt 0x15d0306e8 <line:29:2, line:33:2>
    | |-RecoveryExpr 0x15d0305f8 <line:29:6, line:30:50> '_Bool' contains-errors
    | `-CompoundStmt 0x15d0306d8 <col:53, line:33:2>
    `-ReturnStmt 0x15d0308e8 <line:34:2, col:42>
      `-CallExpr 0x15d030880 <col:9, col:42> 'int'
        |-ImplicitCastExpr 0x15d030868 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x15d0307e8 <col:9> 'int ()' Function 0x15d030730 'add_extent_mapping' 'int ()'
        |-ImplicitCastExpr 0x15d0308b8 <col:28> 'struct extent_map_tree *' <LValueToRValue>
        | `-DeclRefExpr 0x15d030808 <col:28> 'struct extent_map_tree *' lvalue ParmVar 0x15d017448 'em_tree' 'struct extent_map_tree *'
        |-ImplicitCastExpr 0x15d0308d0 <col:37> 'struct extent_map *' <LValueToRValue>
        | `-DeclRefExpr 0x15d030828 <col:37> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'
        `-IntegerLiteral 0x15d030848 <col:41> 'int' 0
