`-FunctionDecl 0x14200e008  line:1:1 invalid _fill_a8_lerp_spans 'int (void *, int, int, const int *, unsigned int)'
  |-ParmVarDecl 0x14200dcd8 <col:22, col:28> col:28 used abstract_renderer 'void *'
  |-ParmVarDecl 0x14200dd58 <col:47, col:51> col:51 used y 'int'
  |-ParmVarDecl 0x14200ddd8 <col:54, col:58> col:58 used h 'int'
  |-ParmVarDecl 0x14200de70 <line:2:8, col:38> col:38 referenced invalid spans 'const int *'
  |-ParmVarDecl 0x14200def0 <col:45, col:54> col:54 used num_spans 'unsigned int'
  `-CompoundStmt 0x1420274f8 <line:3:1, line:46:1>
    |-IfStmt 0x14200e1e8 <line:6:5, line:7:9>
    | |-BinaryOperator 0x14200e180 <line:6:9, col:22> 'int' '=='
    | | |-ImplicitCastExpr 0x14200e150 <col:9> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14200e110 <col:9> 'unsigned int' lvalue ParmVar 0x14200def0 'num_spans' 'unsigned int'
    | | `-ImplicitCastExpr 0x14200e168 <col:22> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x14200e130 <col:22> 'int' 0
    | `-ReturnStmt 0x14200e1d8 <line:7:2, col:9>
    |   `-RecoveryExpr 0x14200e1b8 <col:9> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1420274c8 <line:9:5, line:43:5> has_else
      |-CallExpr 0x143808648 <line:9:9, col:22> 'int'
      | |-ImplicitCastExpr 0x143808630 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x14200e360 <col:9> 'int ()' Function 0x14200e2a8 'likely' 'int ()'
      | `-BinaryOperator 0x14200e3d8 <col:16, col:21> 'int' '=='
      |   |-ImplicitCastExpr 0x14200e3c0 <col:16> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x14200e380 <col:16> 'int' lvalue ParmVar 0x14200ddd8 'h' 'int'
      |   `-IntegerLiteral 0x14200e3a0 <col:21> 'int' 1
      |-CompoundStmt 0x143808ec8 <col:25, line:24:5>
      | `-DoStmt 0x143808ea8 <line:10:2, line:23:26>
      |   |-CompoundStmt 0x143808df8 <line:10:5, line:23:2>
      |   | |-IfStmt 0x143808d78 <line:12:6, line:21:6>
      |   | | |-RecoveryExpr 0x143808688 <line:12:10> '<dependent type>' contains-errors lvalue
      |   | | `-CompoundStmt 0x143808d58 <col:13, line:21:6>
      |   | |   |-DeclStmt 0x1438088c8 <line:13:3, col:36>
      |   | |   | `-VarDecl 0x1438086c0 <col:3, col:35> col:7 used len 'int' cinit
      |   | |   |   `-BinaryOperator 0x1438088a8 <col:13, col:35> '<dependent type>' contains-errors '-'
      |   | |   |     |-CXXDependentScopeMemberExpr 0x1438087a0 <col:13, col:22> '<dependent type>' contains-errors lvalue .x
      |   | |   |     | `-ArraySubscriptExpr 0x143808780 <col:13, col:20> '<dependent type>' contains-errors lvalue
      |   | |   |     |   |-ImplicitCastExpr 0x143808768 <col:13> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |     |   | `-RecoveryExpr 0x143808728 <col:13> '<dependent type>' contains-errors lvalue
      |   | |   |     |   `-IntegerLiteral 0x143808748 <col:19> 'int' 1
      |   | |   |     `-CXXDependentScopeMemberExpr 0x143808860 <col:26, col:35> '<dependent type>' contains-errors lvalue .x
      |   | |   |       `-ArraySubscriptExpr 0x143808840 <col:26, col:33> '<dependent type>' contains-errors lvalue
      |   | |   |         |-ImplicitCastExpr 0x143808828 <col:26> '<dependent type>' contains-errors <LValueToRValue>
      |   | |   |         | `-RecoveryExpr 0x1438087e8 <col:26> '<dependent type>' contains-errors lvalue
      |   | |   |         `-IntegerLiteral 0x143808808 <col:32> 'int' 0
      |   | |   `-WhileStmt 0x143808d38 <line:17:3, line:20:3>
      |   | |     |-UnaryOperator 0x143808c38 <line:17:10, col:13> 'int' contains-errors postfix '--'
      |   | |     | `-DeclRefExpr 0x143808c18 <col:10> 'int' contains-errors lvalue Var 0x1438086c0 'len' 'int'
      |   | |     `-CompoundStmt 0x143808d28 <col:17, line:20:3>
      |   | `-UnaryOperator 0x143808de0 <line:22:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
      |   |   `-RecoveryExpr 0x143808db8 <col:6> '<dependent type>' contains-errors lvalue
      |   |     `-DeclRefExpr 0x143808d98 <col:6> 'const int *' lvalue ParmVar 0x14200de70 'spans' 'const int *'
      |   `-BinaryOperator 0x143808e88 <line:23:11, col:25> 'int' '>'
      |     |-UnaryOperator 0x143808e38 <col:11, col:13> 'unsigned int' prefix '--'
      |     | `-DeclRefExpr 0x143808e18 <col:13> 'unsigned int' lvalue ParmVar 0x14200def0 'num_spans' 'unsigned int'
      |     `-ImplicitCastExpr 0x143808e70 <col:25> 'unsigned int' <IntegralCast>
      |       `-IntegerLiteral 0x143808e50 <col:25> 'int' 1
      `-CompoundStmt 0x1420274b0 <line:24:12, line:43:5>
        `-DoStmt 0x142027490 <line:25:2, line:42:26>
          |-CompoundStmt 0x1438095d0 <line:25:5, line:42:2>
          | |-IfStmt 0x143809550 <line:27:6, line:40:6>
          | | |-RecoveryExpr 0x143808ef8 <line:27:10> '<dependent type>' contains-errors lvalue
          | | `-CompoundStmt 0x143809530 <col:13, line:40:6>
          | |   |-DeclStmt 0x1438090a0 <line:28:3, col:21>
          | |   | |-VarDecl 0x143808f30 <col:3, col:12> col:7 used yy 'int' cinit
          | |   | | `-ImplicitCastExpr 0x143808fb8 <col:12> 'int' <LValueToRValue>
          | |   | |   `-DeclRefExpr 0x143808f98 <col:12> 'int' lvalue ParmVar 0x14200dd58 'y' 'int'
          | |   | `-VarDecl 0x143808fe8 <col:3, col:20> col:15 used hh 'int' cinit
          | |   |   `-ImplicitCastExpr 0x143809070 <col:20> 'int' <LValueToRValue>
          | |   |     `-DeclRefExpr 0x143809050 <col:20> 'int' lvalue ParmVar 0x14200ddd8 'h' 'int'
          | |   `-DoStmt 0x143809510 <line:31:3, line:39:16>
          | |     |-CompoundStmt 0x1438094b0 <line:31:6, line:39:3>
          | |     | |-DeclStmt 0x1438092d8 <line:32:7, col:40>
          | |     | | `-VarDecl 0x1438090d0 <col:7, col:39> col:11 used len 'int' cinit
          | |     | |   `-BinaryOperator 0x1438092b8 <col:17, col:39> '<dependent type>' contains-errors '-'
          | |     | |     |-CXXDependentScopeMemberExpr 0x1438091b0 <col:17, col:26> '<dependent type>' contains-errors lvalue .x
          | |     | |     | `-ArraySubscriptExpr 0x143809190 <col:17, col:24> '<dependent type>' contains-errors lvalue
          | |     | |     |   |-ImplicitCastExpr 0x143809178 <col:17> '<dependent type>' contains-errors <LValueToRValue>
          | |     | |     |   | `-RecoveryExpr 0x143809138 <col:17> '<dependent type>' contains-errors lvalue
          | |     | |     |   `-IntegerLiteral 0x143809158 <col:23> 'int' 1
          | |     | |     `-CXXDependentScopeMemberExpr 0x143809270 <col:30, col:39> '<dependent type>' contains-errors lvalue .x
          | |     | |       `-ArraySubscriptExpr 0x143809250 <col:30, col:37> '<dependent type>' contains-errors lvalue
          | |     | |         |-ImplicitCastExpr 0x143809238 <col:30> '<dependent type>' contains-errors <LValueToRValue>
          | |     | |         | `-RecoveryExpr 0x1438091f8 <col:30> '<dependent type>' contains-errors lvalue
          | |     | |         `-IntegerLiteral 0x143809218 <col:36> 'int' 0
          | |     | |-WhileStmt 0x143809458 <line:34:7, line:37:7>
          | |     | | |-UnaryOperator 0x1438093f0 <line:34:14, col:17> 'int' contains-errors postfix '--'
          | |     | | | `-DeclRefExpr 0x1438093d0 <col:14> 'int' contains-errors lvalue Var 0x1438090d0 'len' 'int'
          | |     | | `-CompoundStmt 0x143809448 <col:21, line:37:7>
          | |     | `-UnaryOperator 0x143809498 <line:38:7, col:9> 'int' postfix '++'
          | |     |   `-DeclRefExpr 0x143809478 <col:7> 'int' lvalue Var 0x143808f30 'yy' 'int'
          | |     `-UnaryOperator 0x1438094f8 <line:39:12, col:14> 'int' prefix '--'
          | |       `-DeclRefExpr 0x1438094d8 <col:14> 'int' lvalue Var 0x143808fe8 'hh' 'int'
          | `-UnaryOperator 0x1438095b8 <line:41:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow
          |   `-RecoveryExpr 0x143809590 <col:6> '<dependent type>' contains-errors lvalue
          |     `-DeclRefExpr 0x143809570 <col:6> 'const int *' lvalue ParmVar 0x14200de70 'spans' 'const int *'
          `-BinaryOperator 0x142027470 <line:42:11, col:25> 'int' '>'
            |-UnaryOperator 0x142027420 <col:11, col:13> 'unsigned int' prefix '--'
            | `-DeclRefExpr 0x142027400 <col:13> 'unsigned int' lvalue ParmVar 0x14200def0 'num_spans' 'unsigned int'
            `-ImplicitCastExpr 0x142027458 <col:25> 'unsigned int' <IntegralCast>
              `-IntegerLiteral 0x142027438 <col:25> 'int' 1
