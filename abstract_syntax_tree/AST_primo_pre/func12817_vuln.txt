`-FunctionDecl 0x124827748  line:1:12 invalid check_stack_boundary 'int (struct bpf_verifier_env *, int, int, int, struct bpf_call_arg_meta *)' static
  |-ParmVarDecl 0x12480e248 <col:33, col:58> col:58 used env 'struct bpf_verifier_env *'
  |-ParmVarDecl 0x12480e2c8 <col:63, col:67> col:67 used regno 'int'
  |-ParmVarDecl 0x12480e348 <line:2:5, col:9> col:9 used access_size 'int'
  |-ParmVarDecl 0x124827400 <col:22, col:27> col:27 invalid zero_size_allowed 'int'
  |-ParmVarDecl 0x1248275d8 <line:3:5, col:31> col:31 used meta 'struct bpf_call_arg_meta *'
  `-CompoundStmt 0x12482b4a0 <line:4:1, line:58:1>
    |-DeclStmt 0x124827a68 <line:5:2, col:51>
    | |-RecordDecl 0x124827818 <col:2, col:9> col:9 struct bpf_verifier_state
    | `-VarDecl 0x124827988 <col:2, col:42> col:29 used state 'struct bpf_verifier_state *' cinit
    |   `-RecoveryExpr 0x124827a28 <col:37, col:42> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1248279f0 <col:37> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    |-DeclStmt 0x124827cc8 <line:6:2, col:42>
    | |-RecordDecl 0x124827a80 <col:2, col:9> col:9 struct bpf_reg_state
    | `-VarDecl 0x124827be8 <col:2, col:38> col:24 used regs 'struct bpf_reg_state *' cinit
    |   `-RecoveryExpr 0x124827c88 <col:31, col:38> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x124827c50 <col:31> 'struct bpf_verifier_state *' contains-errors lvalue Var 0x124827988 'state' 'struct bpf_verifier_state *'
    |-DeclStmt 0x124827f08 <line:7:2, col:23>
    | |-VarDecl 0x124827cf8 <col:2, col:6> col:6 used off 'int'
    | |-VarDecl 0x124827d78 <col:2, col:11> col:11 used i 'int'
    | |-VarDecl 0x124827df8 <col:2, col:14> col:14 used slot 'int'
    | `-VarDecl 0x124827e78 <col:2, col:20> col:20 used spi 'int'
    |-IfStmt 0x124829000 <line:9:2, line:19:2>
    | |-RecoveryExpr 0x124827fa8 <line:9:6, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x124828fe0 <col:40, line:19:2>
    |   |-IfStmt 0x1248282c0 <line:11:3, line:13:11>
    |   | |-RecoveryExpr 0x124828270 <line:11:7, line:12:35> '_Bool' contains-errors
    |   | `-ReturnStmt 0x1248282b0 <line:13:4, col:11>
    |   |   `-IntegerLiteral 0x124828290 <col:11> 'int' 0
    |   `-ReturnStmt 0x124828fd0 <line:18:3, col:11>
    |     `-UnaryOperator 0x124828fb8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x124828fa0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x124828f80 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x124829668 <line:22:2, line:28:2>
    | |-RecoveryExpr 0x124829190 <line:22:6, col:40> '_Bool' contains-errors
    | `-CompoundStmt 0x124829648 <col:43, line:28:2>
    |   |-DeclStmt 0x1248292b8 <line:23:3, col:18>
    |   | `-VarDecl 0x124829250 <col:3, col:17> col:8 used tn_buf 'char[48]'
    |   `-CallExpr 0x1248295a8 <line:26:3, line:27:17> 'int'
    |     |-ImplicitCastExpr 0x124829590 <line:26:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1248294c0 <col:3> 'int ()' Function 0x124828308 'verbose' 'int ()'
    |     |-ImplicitCastExpr 0x1248295e8 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1248294e0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    |     |-ImplicitCastExpr 0x124829600 <col:16> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x124829500 <col:16> 'char[4]' lvalue "STR"
    |     |-ImplicitCastExpr 0x124829618 <line:27:4> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x124829520 <col:4> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'
    |     `-ImplicitCastExpr 0x124829630 <col:11> 'char *' <ArrayToPointerDecay>
    |       `-DeclRefExpr 0x124829540 <col:11> 'char[48]' lvalue Var 0x124829250 'tn_buf' 'char[48]'
    |-IfStmt 0x124829c40 <line:30:2, line:35:2>
    | |-RecoveryExpr 0x124829a70 <line:30:6, line:31:64> '_Bool' contains-errors
    | `-CompoundStmt 0x124829c28 <col:67, line:35:2>
    |   `-CallExpr 0x124829b68 <line:32:3, line:33:27> 'int'
    |     |-ImplicitCastExpr 0x124829b50 <line:32:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124829a90 <col:3> 'int ()' Function 0x124828308 'verbose' 'int ()'
    |     |-ImplicitCastExpr 0x124829bb0 <col:11> 'struct bpf_verifier_env *' <LValueToRValue>
    |     | `-DeclRefExpr 0x124829ab0 <col:11> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    |     |-ImplicitCastExpr 0x124829bc8 <col:16> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x124829ad0 <col:16> 'char[4]' lvalue "STR"
    |     |-ImplicitCastExpr 0x124829be0 <line:33:4> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x124829af0 <col:4> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'
    |     |-ImplicitCastExpr 0x124829bf8 <col:11> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x124829b10 <col:11> 'int' lvalue Var 0x124827cf8 'off' 'int'
    |     `-ImplicitCastExpr 0x124829c10 <col:16> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x124829b30 <col:16> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'
    |-IfStmt 0x12482ab28 <line:37:2, line:38:34>
    | |-BinaryOperator 0x124829da0 <line:37:6, col:37> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x124829d08 <col:6, col:22> '<dependent type>' contains-errors lvalue ->stack_depth
    | | | `-CXXDependentScopeMemberExpr 0x124829cc0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->aux
    | | |   `-RecoveryExpr 0x124829c98 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | |     `-DeclRefExpr 0x124829c60 <col:6> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    | | `-UnaryOperator 0x124829d88 <col:36, col:37> 'int' prefix '-'
    | |   `-ImplicitCastExpr 0x124829d70 <col:37> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x124829d50 <col:37> 'int' lvalue Var 0x124827cf8 'off' 'int'
    | `-BinaryOperator 0x12482ab08 <line:38:3, col:34> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x12482aa70 <col:3, col:19> '<dependent type>' contains-errors lvalue ->stack_depth
    |   | `-CXXDependentScopeMemberExpr 0x12482aa28 <col:3, col:14> '<dependent type>' contains-errors lvalue ->aux
    |   |   `-RecoveryExpr 0x12482aa00 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x124829dc0 <col:3> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    |   `-UnaryOperator 0x12482aaf0 <col:33, col:34> 'int' prefix '-'
    |     `-ImplicitCastExpr 0x12482aad8 <col:34> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12482aab8 <col:34> 'int' lvalue Var 0x124827cf8 'off' 'int'
    |-IfStmt 0x12482ad80 <line:40:2, line:44:2>
    | |-BinaryOperator 0x12482abc8 <line:40:6, col:20> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x12482ab48 <col:6> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'
    | | `-RecoveryExpr 0x12482aba0 <col:14, col:20> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12482ab68 <col:14> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'
    | `-CompoundStmt 0x12482ad58 <col:30, line:44:2>
    |   |-BinaryOperator 0x12482ac68 <line:41:3, col:23> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12482ac20 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12482abe8 <col:3> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'
    |   | `-DeclRefExpr 0x12482ac48 <col:23> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'
    |   |-BinaryOperator 0x12482ad08 <line:42:3, col:17> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x12482acc0 <col:3, col:9> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12482ac88 <col:3> 'struct bpf_call_arg_meta *' lvalue ParmVar 0x1248275d8 'meta' 'struct bpf_call_arg_meta *'
    |   | `-DeclRefExpr 0x12482ace8 <col:17> 'int' lvalue ParmVar 0x12480e2c8 'regno' 'int'
    |   `-ReturnStmt 0x12482ad48 <line:43:3, col:10>
    |     `-IntegerLiteral 0x12482ad28 <col:10> 'int' 0
    |-ForStmt 0x12482b438 <line:46:2, line:56:2>
    | |-BinaryOperator 0x12482ade0 <line:46:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x12482ada0 <col:7> 'int' lvalue Var 0x124827d78 'i' 'int'
    | | `-IntegerLiteral 0x12482adc0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12482ae70 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x12482ae40 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12482ae00 <col:14> 'int' lvalue Var 0x124827d78 'i' 'int'
    | | `-ImplicitCastExpr 0x12482ae58 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12482ae20 <col:18> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'
    | |-UnaryOperator 0x12482aeb0 <col:31, col:32> 'int' postfix '++'
    | | `-DeclRefExpr 0x12482ae90 <col:31> 'int' lvalue Var 0x124827d78 'i' 'int'
    | `-CompoundStmt 0x12482b418 <col:36, line:56:2>
    |   |-BinaryOperator 0x12482aff0 <line:47:3, col:23> 'int' '='
    |   | |-DeclRefExpr 0x12482aec8 <col:3> 'int' lvalue Var 0x124827df8 'slot' 'int'
    |   | `-BinaryOperator 0x12482afd0 <col:10, col:23> 'int' '-'
    |   |   |-UnaryOperator 0x12482af98 <col:10, col:19> 'int' prefix '-'
    |   |   | `-ParenExpr 0x12482af78 <col:11, col:19> 'int'
    |   |   |   `-BinaryOperator 0x12482af58 <col:12, col:18> 'int' '+'
    |   |   |     |-ImplicitCastExpr 0x12482af28 <col:12> 'int' <LValueToRValue>
    |   |   |     | `-DeclRefExpr 0x12482aee8 <col:12> 'int' lvalue Var 0x124827cf8 'off' 'int'
    |   |   |     `-ImplicitCastExpr 0x12482af40 <col:18> 'int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x12482af08 <col:18> 'int' lvalue Var 0x124827d78 'i' 'int'
    |   |   `-IntegerLiteral 0x12482afb0 <col:23> 'int' 1
    |   `-IfStmt 0x12482b3f8 <line:49:3, line:55:3>
    |     |-RecoveryExpr 0x12482b228 <line:49:7, line:51:4> '_Bool' contains-errors
    |     `-CompoundStmt 0x12482b3e0 <col:16, line:55:3>
    |       `-CallExpr 0x12482b320 <line:52:4, line:53:24> 'int'
    |         |-ImplicitCastExpr 0x12482b308 <line:52:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12482b248 <col:4> 'int ()' Function 0x124828308 'verbose' 'int ()'
    |         |-ImplicitCastExpr 0x12482b368 <col:12> 'struct bpf_verifier_env *' <LValueToRValue>
    |         | `-DeclRefExpr 0x12482b268 <col:12> 'struct bpf_verifier_env *' lvalue ParmVar 0x12480e248 'env' 'struct bpf_verifier_env *'
    |         |-ImplicitCastExpr 0x12482b380 <col:17> 'char *' <ArrayToPointerDecay>
    |         | `-StringLiteral 0x12482b288 <col:17> 'char[4]' lvalue "STR"
    |         |-ImplicitCastExpr 0x12482b398 <line:53:5> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x12482b2a8 <col:5> 'int' lvalue Var 0x124827cf8 'off' 'int'
    |         |-ImplicitCastExpr 0x12482b3b0 <col:10> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x12482b2c8 <col:10> 'int' lvalue Var 0x124827d78 'i' 'int'
    |         `-ImplicitCastExpr 0x12482b3c8 <col:13> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x12482b2e8 <col:13> 'int' lvalue ParmVar 0x12480e348 'access_size' 'int'
    `-ReturnStmt 0x12482b490 <line:57:2, col:9>
      `-IntegerLiteral 0x12482b470 <col:9> 'int' 0
