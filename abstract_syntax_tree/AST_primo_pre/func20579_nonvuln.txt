`-FunctionDecl 0x12d826670  line:1:6 d_exchange 'void (struct dentry *, struct dentry *)'
  |-ParmVarDecl 0x12d80e248 <col:17, col:32> col:32 used dentry1 'struct dentry *'
  |-ParmVarDecl 0x12d80e338 <col:41, col:56> col:56 used dentry2 'struct dentry *'
  `-CompoundStmt 0x12d8272b0 <line:2:1, line:13:1>
    |-CallExpr 0x12d826950 <line:3:2, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d8268a0 <col:2> 'int ()' Function 0x12d8267e8 'write_seqlock' 'int ()'
    | `-UnaryOperator 0x12d826938 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12d826918 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12d826b08 <line:5:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d826a58 <col:2> 'int ()' Function 0x12d8269a0 'WARN_ON' 'int ()'
    | `-UnaryOperator 0x12d826af0 <col:10, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x12d826ad8 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12d826ab0 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12d826a78 <col:11> 'struct dentry *' lvalue ParmVar 0x12d80e248 'dentry1' 'struct dentry *'
    |-CallExpr 0x12d826be0 <line:6:2, col:27> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d826b30 <col:2> 'int ()' Function 0x12d8269a0 'WARN_ON' 'int ()'
    | `-UnaryOperator 0x12d826bc8 <col:10, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   `-ImplicitCastExpr 0x12d826bb0 <col:11, col:20> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12d826b88 <col:11, col:20> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x12d826b50 <col:11> 'struct dentry *' lvalue ParmVar 0x12d80e338 'dentry2' 'struct dentry *'
    |-CallExpr 0x12d826df0 <line:7:2, col:26> 'int'
    | |-ImplicitCastExpr 0x12d826dd8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d826c08 <col:2> 'int ()' Function 0x12d8269a0 'WARN_ON' 'int ()'
    | `-CallExpr 0x12d826d98 <col:10, col:25> 'int'
    |   |-ImplicitCastExpr 0x12d826d80 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d826d08 <col:10> 'int ()' Function 0x12d826c50 'IS_ROOT' 'int ()'
    |   `-ImplicitCastExpr 0x12d826dc0 <col:18> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x12d826d28 <col:18> 'struct dentry *' lvalue ParmVar 0x12d80e248 'dentry1' 'struct dentry *'
    |-CallExpr 0x12d826ee8 <line:8:2, col:26> 'int'
    | |-ImplicitCastExpr 0x12d826ed0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12d826e18 <col:2> 'int ()' Function 0x12d8269a0 'WARN_ON' 'int ()'
    | `-CallExpr 0x12d826e90 <col:10, col:25> 'int'
    |   |-ImplicitCastExpr 0x12d826e78 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12d826e38 <col:10> 'int ()' Function 0x12d826c50 'IS_ROOT' 'int ()'
    |   `-ImplicitCastExpr 0x12d826eb8 <col:18> 'struct dentry *' <LValueToRValue>
    |     `-DeclRefExpr 0x12d826e58 <col:18> 'struct dentry *' lvalue ParmVar 0x12d80e338 'dentry2' 'struct dentry *'
    |-CallExpr 0x12d8270c0 <line:10:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d826ff0 <col:2> 'int ()' Function 0x12d826f38 '__d_move' 'int ()'
    | |-DeclRefExpr 0x12d827010 <col:11> 'struct dentry *' lvalue ParmVar 0x12d80e248 'dentry1' 'struct dentry *'
    | |-DeclRefExpr 0x12d827030 <col:20> 'struct dentry *' lvalue ParmVar 0x12d80e338 'dentry2' 'struct dentry *'
    | `-RecoveryExpr 0x12d8270a0 <col:29> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12d827288 <line:12:2, col:30> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12d8271d8 <col:2> 'int ()' Function 0x12d827120 'write_sequnlock' 'int ()'
      `-UnaryOperator 0x12d827270 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x12d827250 <col:19> '<dependent type>' contains-errors lvalue
