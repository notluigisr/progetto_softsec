`-FunctionDecl 0x138128258  line:1:1 invalid e_enum_to_string 'int (int, int)'
  |-ParmVarDecl 0x1381280f0 <col:19, col:25> col:25 invalid enum_type 'int'
  |-ParmVarDecl 0x138128170 <line:2:19, col:24> col:24 used enum_value 'int'
  `-CompoundStmt 0x138141cc8 <line:3:1, line:22:1>
    |-DeclStmt 0x1381283e0 <line:5:2, col:28>
    | `-VarDecl 0x138128340 <col:2, col:24> col:15 used string 'const char *' cinit
    |   `-RecoveryExpr 0x1381283c0 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1381287d0 <line:10:2, col:48> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x138128698 <col:2> 'int ()' Function 0x1381285e0 'g_return_val_if_fail' 'int ()'
    | |-BinaryOperator 0x138128790 <col:24, col:38> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x138128750 <col:24> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x138128770 <col:38> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x1381287b0 <col:44> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x138141b30 <line:12:2, line:17:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x138141978 <line:12:14, col:30> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x1381418f0 <col:14> '<dependent type>' contains-errors lvalue
    | | `-CXXDependentScopeMemberExpr 0x138141930 <col:18, col:30> '<dependent type>' contains-errors lvalue ->n_values
    | |   `-RecoveryExpr 0x138141910 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1381419e8 <col:40, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow
    | | `-RecoveryExpr 0x1381419c8 <col:40> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x138141b18 <col:45, line:17:2>
    |   `-IfStmt 0x138141af8 <line:13:3, line:16:3>
    |     |-RecoveryExpr 0x138141a98 <line:13:7, col:43> '_Bool' contains-errors
    |     `-CompoundStmt 0x138141ae0 <col:50, line:16:3>
    |       `-BreakStmt 0x138141ad8 <line:15:4>
    `-ReturnStmt 0x138141cb8 <line:21:2, col:9>
      `-ImplicitCastExpr 0x138141ca0 <col:9> 'int' contains-errors <PointerToIntegral>
        `-ImplicitCastExpr 0x138141c88 <col:9> 'const char *' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x138141c68 <col:9> 'const char *' contains-errors lvalue Var 0x138128340 'string' 'const char *'
