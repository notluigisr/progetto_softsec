`-FunctionDecl 0x1439282e8  line:1:12 invalid r_str_ncpy 'int (char *, const char *, int)'
  |-ParmVarDecl 0x1439280f0 <col:23, col:29> col:29 used dst 'char *'
  |-ParmVarDecl 0x143928170 <col:34, col:46> col:46 used src 'const char *'
  |-ParmVarDecl 0x1439281f0 <col:51, col:58> col:58 referenced invalid n 'int'
  `-CompoundStmt 0x1439419e0 <col:61, line:14:1>
    |-DeclStmt 0x143928428 <line:2:2, col:7>
    | `-VarDecl 0x1439283c0 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x1439284c8 <line:5:2, line:7:2>
    | |-BinaryOperator 0x143928480 <line:5:6, col:11> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x143928440 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x143928460 <col:11> 'int' 0
    | `-CompoundStmt 0x1439284b0 <col:14, line:7:2>
    |   `-ReturnStmt 0x1439284a0 <line:6:3>
    |-UnaryOperator 0x143928530 <line:9:2, col:3> '<dependent type>' contains-errors postfix '--' cannot overflow
    | `-RecoveryExpr 0x143928508 <col:2> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1439284e8 <col:2> 'int' lvalue ParmVar 0x1439281f0 'n' 'int'
    |-ForStmt 0x1439418c0 <line:10:2, line:12:2>
    | |-BinaryOperator 0x143928588 <line:10:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x143928548 <col:7> 'int' lvalue Var 0x1439283c0 'i' 'int'
    | | `-IntegerLiteral 0x143928568 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x143928698 <col:14, col:28> 'int' contains-errors '&&'
    | | |-ArraySubscriptExpr 0x143928618 <col:14, col:19> 'const char' lvalue
    | | | |-ImplicitCastExpr 0x1439285e8 <col:14> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1439285a8 <col:14> 'const char *' lvalue ParmVar 0x143928170 'src' 'const char *'
    | | | `-ImplicitCastExpr 0x143928600 <col:18> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1439285c8 <col:18> 'int' lvalue Var 0x1439283c0 'i' 'int'
    | | `-BinaryOperator 0x143928678 <col:24, col:28> 'int' contains-errors '>'
    | |   |-RecoveryExpr 0x143928638 <col:24> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x143928658 <col:28> 'int' 0
    | |-BinaryOperator 0x143928728 <col:31, col:37> '<dependent type>' contains-errors ','
    | | |-UnaryOperator 0x1439286d8 <col:31, col:32> 'int' postfix '++'
    | | | `-DeclRefExpr 0x1439286b8 <col:31> 'int' lvalue Var 0x1439283c0 'i' 'int'
    | | `-UnaryOperator 0x143928710 <col:36, col:37> '<dependent type>' contains-errors postfix '--' cannot overflow
    | |   `-RecoveryExpr 0x1439286f0 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1439418a8 <col:41, line:12:2>
    |   `-BinaryOperator 0x143941888 <line:11:3, col:17> 'char' '='
    |     |-ArraySubscriptExpr 0x1439287b8 <col:3, col:8> 'char' lvalue
    |     | |-ImplicitCastExpr 0x143928788 <col:3> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x143928748 <col:3> 'char *' lvalue ParmVar 0x1439280f0 'dst' 'char *'
    |     | `-ImplicitCastExpr 0x1439287a0 <col:7> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x143928768 <col:7> 'int' lvalue Var 0x1439283c0 'i' 'int'
    |     `-ImplicitCastExpr 0x143941870 <col:12, col:17> 'char' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x143941850 <col:12, col:17> 'const char' lvalue
    |         |-ImplicitCastExpr 0x143941820 <col:12> 'const char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x1439287d8 <col:12> 'const char *' lvalue ParmVar 0x143928170 'src' 'const char *'
    |         `-ImplicitCastExpr 0x143941838 <col:16> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x143941800 <col:16> 'int' lvalue Var 0x1439283c0 'i' 'int'
    `-BinaryOperator 0x1439419c0 <line:13:2, col:11> 'char' '='
      |-ArraySubscriptExpr 0x143941968 <col:2, col:7> 'char' lvalue
      | |-ImplicitCastExpr 0x143941938 <col:2> 'char *' <LValueToRValue>
      | | `-DeclRefExpr 0x1439418f8 <col:2> 'char *' lvalue ParmVar 0x1439280f0 'dst' 'char *'
      | `-ImplicitCastExpr 0x143941950 <col:6> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x143941918 <col:6> 'int' lvalue Var 0x1439283c0 'i' 'int'
      `-ImplicitCastExpr 0x1439419a8 <col:11> 'char' <IntegralCast>
        `-IntegerLiteral 0x143941988 <col:11> 'int' 0
