`-FunctionDecl 0x14280dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x14280dcd8 <col:14> col:14 sqlite_udf_decode_binary 'int'
  `-CompoundStmt 0x144008230 <line:2:1, line:25:1>
    |-DeclStmt 0x14280df70 <line:3:2, col:19>
    | `-VarDecl 0x14280deb8 <col:2, col:15> col:8 used data 'char *' cinit
    |   `-RecoveryExpr 0x14280df50 <col:15> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14280e008 <line:4:2, col:13>
    | `-VarDecl 0x14280dfa0 <col:2, col:6> col:6 used datalen 'int'
    |-IfStmt 0x14280e320 <line:6:2, line:8:2>
    | |-RecoveryExpr 0x14280e2d8 <line:6:6, col:88> '_Bool' contains-errors
    | `-CompoundStmt 0x14280e308 <col:91, line:8:2>
    |   `-ReturnStmt 0x14280e2f8 <line:7:3>
    |-IfStmt 0x143009728 <line:10:2, line:12:2>
    | |-BinaryOperator 0x14280e3b8 <line:10:6, col:14> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x14280e340 <col:6> 'char *' contains-errors lvalue Var 0x14280deb8 'data' 'char *'
    | | `-RecoveryExpr 0x14280e398 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x143009710 <col:20, line:12:2>
    |   `-CallExpr 0x1430096f0 <line:11:3, col:15> 'int'
    |     `-ImplicitCastExpr 0x1430096d8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x1430096b8 <col:3> 'int ()' Function 0x143009600 'RETURN_NULL' 'int ()'
    `-IfStmt 0x144008200 <line:13:2, line:24:2> has_else
      |-BinaryOperator 0x143009860 <line:13:6, col:28> 'int' contains-errors '&&'
      | |-ImplicitCastExpr 0x143009848 <col:6> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x143009748 <col:6> 'int' lvalue Var 0x14280dfa0 'datalen' 'int'
      | `-BinaryOperator 0x143009828 <col:17, col:28> 'int' contains-errors '=='
      |   |-ImplicitCastExpr 0x143009810 <col:17, col:23> 'int' contains-errors <IntegralCast>
      |   | `-ImplicitCastExpr 0x1430097f8 <col:17, col:23> 'char' contains-errors <LValueToRValue>
      |   |   `-ArraySubscriptExpr 0x1430097c0 <col:17, col:23> 'char' contains-errors lvalue
      |   |     |-ImplicitCastExpr 0x1430097a8 <col:17> 'char *' contains-errors <LValueToRValue>
      |   |     | `-DeclRefExpr 0x143009768 <col:17> 'char *' contains-errors lvalue Var 0x14280deb8 'data' 'char *'
      |   |     `-IntegerLiteral 0x143009788 <col:22> 'int' 0
      |   `-CharacterLiteral 0x1430097e0 <col:28> 'int' 1
      |-CompoundStmt 0x14300a498 <col:36, line:22:2>
      | |-DeclStmt 0x143009900 <line:15:3, col:13>
      | | `-VarDecl 0x143009898 <col:3, col:7> col:7 used enclen 'int'
      | |-DeclStmt 0x143009998 <line:16:3, col:12>
      | | `-VarDecl 0x143009930 <col:3, col:9> col:9 used ret 'char *'
      | |-BinaryOperator 0x143009f80 <line:18:3, col:24> 'char *' '='
      | | |-DeclRefExpr 0x1430099b0 <col:3> 'char *' lvalue Var 0x143009930 'ret' 'char *'
      | | `-ImplicitCastExpr 0x143009b48 <col:9, col:24> 'char *' <IntegralToPointer>
      | |   `-CallExpr 0x143009b08 <col:9, col:24> 'int'
      | |     |-ImplicitCastExpr 0x143009af0 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | |     | `-DeclRefExpr 0x143009ab0 <col:9> 'int ()' Function 0x1430099f8 'emalloc' 'int ()'
      | |     `-ImplicitCastExpr 0x143009b30 <col:17> 'int' <LValueToRValue>
      | |       `-DeclRefExpr 0x143009ad0 <col:17> 'int' lvalue Var 0x14280dfa0 'datalen' 'int'
      | |-BinaryOperator 0x14300a1b8 <line:19:3, col:48> 'int' contains-errors '='
      | | |-DeclRefExpr 0x143009fa0 <col:3> 'int' lvalue Var 0x143009898 'enclen' 'int'
      | | `-CallExpr 0x14300a170 <col:12, col:48> 'int' contains-errors
      | |   |-ImplicitCastExpr 0x14300a158 <col:12> 'int (*)()' <FunctionToPointerDecay>
      | |   | `-DeclRefExpr 0x14300a0a0 <col:12> 'int ()' Function 0x143009fe8 'php_sqlite_decode_binary' 'int ()'
      | |   |-BinaryOperator 0x14300a118 <col:37, col:42> 'char *' contains-errors '+'
      | |   | |-ImplicitCastExpr 0x14300a100 <col:37> 'char *' contains-errors <LValueToRValue>
      | |   | | `-DeclRefExpr 0x14300a0c0 <col:37> 'char *' contains-errors lvalue Var 0x14280deb8 'data' 'char *'
      | |   | `-IntegerLiteral 0x14300a0e0 <col:42> 'int' 1
      | |   `-ImplicitCastExpr 0x14300a1a0 <col:45> 'char *' <LValueToRValue>
      | |     `-DeclRefExpr 0x14300a138 <col:45> 'char *' lvalue Var 0x143009930 'ret' 'char *'
      | |-BinaryOperator 0x14300a298 <line:20:3, col:17> 'char' '='
      | | |-ArraySubscriptExpr 0x14300a248 <col:3, col:13> 'char' lvalue
      | | | |-ImplicitCastExpr 0x14300a218 <col:3> 'char *' <LValueToRValue>
      | | | | `-DeclRefExpr 0x14300a1d8 <col:3> 'char *' lvalue Var 0x143009930 'ret' 'char *'
      | | | `-ImplicitCastExpr 0x14300a230 <col:7> 'int' <LValueToRValue>
      | | |   `-DeclRefExpr 0x14300a1f8 <col:7> 'int' lvalue Var 0x143009898 'enclen' 'int'
      | | `-ImplicitCastExpr 0x14300a280 <col:17> 'char' <IntegralCast>
      | |   `-CharacterLiteral 0x14300a268 <col:17> 'int' 0
      | `-CallExpr 0x14300a430 <line:21:3, col:32> 'int'
      |   |-ImplicitCastExpr 0x14300a418 <col:3> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x14300a398 <col:3> 'int ()' Function 0x14300a2e0 'RETVAL_STRINGL' 'int ()'
      |   |-ImplicitCastExpr 0x14300a468 <col:18> 'char *' <LValueToRValue>
      |   | `-DeclRefExpr 0x14300a3b8 <col:18> 'char *' lvalue Var 0x143009930 'ret' 'char *'
      |   |-ImplicitCastExpr 0x14300a480 <col:23> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x14300a3d8 <col:23> 'int' lvalue Var 0x143009898 'enclen' 'int'
      |   `-IntegerLiteral 0x14300a3f8 <col:31> 'int' 0
      `-CompoundStmt 0x14300a5d8 <line:22:9, line:24:2>
        `-CallExpr 0x14300a570 <line:23:3, col:34> 'int' contains-errors
          |-ImplicitCastExpr 0x14300a558 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x14300a4d8 <col:3> 'int ()' Function 0x14300a2e0 'RETVAL_STRINGL' 'int ()'
          |-ImplicitCastExpr 0x14300a5a8 <col:18> 'char *' contains-errors <LValueToRValue>
          | `-DeclRefExpr 0x14300a4f8 <col:18> 'char *' contains-errors lvalue Var 0x14280deb8 'data' 'char *'
          |-ImplicitCastExpr 0x14300a5c0 <col:24> 'int' <LValueToRValue>
          | `-DeclRefExpr 0x14300a518 <col:24> 'int' lvalue Var 0x14280dfa0 'datalen' 'int'
          `-IntegerLiteral 0x14300a538 <col:33> 'int' 1
