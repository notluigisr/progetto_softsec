`-FunctionDecl 0x12c942038  line:1:1 invalid get_princs_2_svc 'int (int *, struct svc_req *)'
  |-ParmVarDecl 0x12c928928 <col:18, col:31> col:31 invalid arg 'int *'
  |-ParmVarDecl 0x12c928f18 <col:36, col:52> col:52 used rqstp 'struct svc_req *'
  `-CompoundStmt 0x12d00adc8 <line:2:1, line:56:1>
    |-DeclStmt 0x12c942170 <line:3:5, col:40>
    | `-VarDecl 0x12c942108 <col:5, col:37> col:37 referenced invalid ret 'int' static
    |-DeclStmt 0x12c942208 <line:4:5, col:47>
    | `-VarDecl 0x12c9421a0 <col:5, col:38> col:38 used prime_arg 'char *'
    |-DeclStmt 0x12c9422d8 <line:9:5, col:51>
    | `-VarDecl 0x12c942238 <col:5, col:47> col:38 used errmsg 'const char *' cinit
    |   `-RecoveryExpr 0x12c9422b8 <col:47> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c942510 <line:11:5, col:35> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c942450 <col:5> 'int ()' Function 0x12c942398 'xdr_free' 'int ()'
    | |-RecoveryExpr 0x12c9424f0 <col:14> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x12c9424a8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x12c942488 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c942840 <line:13:5, line:14:14>
    | |-RecoveryExpr 0x12c9427b8 <line:13:9, col:72> '_Bool' contains-errors
    | `-GotoStmt 0x12c942828 <line:14:9, col:14> 'exit_func' 0x12c9427d8
    |-IfStmt 0x12c942a30 <line:16:5, line:17:14>
    | |-RecoveryExpr 0x12c9429f8 <line:16:9, col:49> '_Bool' contains-errors
    | `-GotoStmt 0x12c942a18 <line:17:9, col:14> 'exit_func' 0x12c9427d8
    |-BinaryOperator 0x12c942bc8 <line:19:5, col:31> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x12c942a98 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version
    | | `-RecoveryExpr 0x12c942a70 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c942a50 <col:5> 'int' lvalue Var 0x12c942108 'ret' 'int'
    | `-CXXDependentScopeMemberExpr 0x12c942b80 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version
    |   `-RecoveryExpr 0x12c942b60 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d009a00 <line:21:5, line:24:5>
    | |-BinaryOperator 0x12c942e88 <line:21:9, col:63> 'int' contains-errors '<'
    | | |-CallExpr 0x12c942e50 <col:9, col:59> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12c942cc8 <col:9> 'int ()' Function 0x12c942c10 'setup_gss_names' 'int ()'
    | | | |-DeclRefExpr 0x12c942ce8 <col:25> 'struct svc_req *' lvalue ParmVar 0x12c928f18 'rqstp' 'struct svc_req *'
    | | | |-UnaryOperator 0x12c942e00 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x12c942de0 <col:33> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x12c942e38 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x12c942e18 <col:47> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12c942da0 <col:63> 'int' 0
    | `-CompoundStmt 0x12c942fc8 <col:66, line:24:5>
    |   |-BinaryOperator 0x12c942f90 <line:22:9, col:20> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x12c942ef0 <col:9, col:13> '<dependent type>' contains-errors lvalue .code
    |   | | `-RecoveryExpr 0x12c942ec8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x12c942ea8 <col:9> 'int' lvalue Var 0x12c942108 'ret' 'int'
    |   | `-RecoveryExpr 0x12c942f70 <col:20> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x12c942fb0 <line:23:9, col:14> 'exit_func' 0x12c9427d8
    |-BinaryOperator 0x12d009aa8 <line:25:5, col:22> 'char *' contains-errors '='
    | |-DeclRefExpr 0x12d009a20 <col:5> 'char *' lvalue Var 0x12c9421a0 'prime_arg' 'char *'
    | `-CXXDependentScopeMemberExpr 0x12d009a60 <col:17, col:22> '<dependent type>' contains-errors lvalue ->exp
    |   `-RecoveryExpr 0x12d009a40 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d009c18 <line:26:5, line:27:21>
    | |-BinaryOperator 0x12d009b40 <line:26:9, col:22> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x12d009ac8 <col:9> 'char *' lvalue Var 0x12c9421a0 'prime_arg' 'char *'
    | | `-RecoveryExpr 0x12d009b20 <col:22> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x12d009bf8 <line:27:9, col:21> 'char *' '='
    |   |-DeclRefExpr 0x12d009b60 <col:9> 'char *' lvalue Var 0x12c9421a0 'prime_arg' 'char *'
    |   `-ImplicitCastExpr 0x12d009be0 <col:21> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12d009bc0 <col:21> 'char[4]' lvalue "STR"
    |-IfStmt 0x12d00ab08 <line:29:5, line:50:5> has_else
    | |-RecoveryExpr 0x12d00a060 <line:29:9, line:33:60> '_Bool' contains-errors
    | |-CompoundStmt 0x12d00a270 <col:63, line:37:5>
    | `-CompoundStmt 0x12d00aaf8 <col:12, line:50:5>
    |-LabelStmt 0x12d00ad60 <line:53:1, col:10> 'exit_func'
    | `-NullStmt 0x12d00ad58 <col:10>
    `-ReturnStmt 0x12d00adb8 <line:55:5, col:13>
      `-UnaryOperator 0x12d00ada0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
        `-RecoveryExpr 0x12d00ad80 <col:13> '<dependent type>' contains-errors lvalue
