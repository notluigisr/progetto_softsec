`-FunctionDecl 0x126928198  line:1:12 tcm_loop_alloc_core_bus 'int (void)' static
  `-CompoundStmt 0x1269423e8 <line:2:1, line:32:1>
    |-DeclStmt 0x126928308 <line:3:2, col:9>
    | `-VarDecl 0x1269282a0 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x1269419b0 <line:6:2, line:9:2>
    | |-CallExpr 0x1269286b8 <line:6:6, col:29> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x126928638 <col:6> 'int ()' Function 0x126928580 'IS_ERR' 'int ()'
    | | `-RecoveryExpr 0x126928698 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x126941998 <col:32, line:9:2>
    |   `-ReturnStmt 0x126941988 <line:8:3, col:34>
    |     `-CallExpr 0x126941960 <col:10, col:34> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x1269418e0 <col:10> 'int ()' Function 0x126941828 'PTR_ERR' 'int ()'
    |       `-RecoveryExpr 0x126941940 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x126941bc8 <line:11:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x1269419d0 <col:2> 'int' lvalue Var 0x1269282a0 'ret' 'int'
    | `-CallExpr 0x126941ba0 <col:8, col:38> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126941ad0 <col:8> 'int ()' Function 0x126941a18 'bus_register' 'int ()'
    |   `-UnaryOperator 0x126941b88 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x126941b68 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126941cd8 <line:12:2, line:15:2>
    | |-ImplicitCastExpr 0x126941c08 <line:12:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126941be8 <col:6> 'int' lvalue Var 0x1269282a0 'ret' 'int'
    | `-CompoundStmt 0x126941cc0 <col:11, line:15:2>
    |   `-GotoStmt 0x126941ca8 <line:14:3, col:8> 'dev_unreg' 0x126941c58
    |-BinaryOperator 0x126941ef0 <line:17:2, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x126941cf8 <col:2> 'int' lvalue Var 0x1269282a0 'ret' 'int'
    | `-CallExpr 0x126941ec8 <col:8, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126941df8 <col:8> 'int ()' Function 0x126941d40 'driver_register' 'int ()'
    |   `-UnaryOperator 0x126941eb0 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x126941e90 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x126942000 <line:18:2, line:22:2>
    | |-ImplicitCastExpr 0x126941f30 <line:18:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x126941f10 <col:6> 'int' lvalue Var 0x1269282a0 'ret' 'int'
    | `-CompoundStmt 0x126941fe8 <col:11, line:22:2>
    |   `-GotoStmt 0x126941fd0 <line:21:3, col:8> 'bus_unreg' 0x126941f80
    |-ReturnStmt 0x126942090 <line:25:2, col:9>
    | `-ImplicitCastExpr 0x126942078 <col:9> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x126942058 <col:9> 'int' lvalue Var 0x1269282a0 'ret' 'int'
    |-LabelStmt 0x126942258 <line:27:1, line:28:34> 'bus_unreg'
    | `-CallExpr 0x126942230 <col:2, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126942180 <col:2> 'int ()' Function 0x1269420c8 'bus_unregister' 'int ()'
    |   `-UnaryOperator 0x126942218 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1269421f8 <col:18> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x126942380 <line:29:1, col:10> 'dev_unreg'
    | `-NullStmt 0x126942378 <col:10>
    `-ReturnStmt 0x1269423d8 <line:31:2, col:9>
      `-ImplicitCastExpr 0x1269423c0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1269423a0 <col:9> 'int' lvalue Var 0x1269282a0 'ret' 'int'
