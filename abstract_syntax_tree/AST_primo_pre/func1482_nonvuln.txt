`-FunctionDecl 0x13c928310  line:1:13 assign_masked 'void (long *, long, long)' static
  |-ParmVarDecl 0x13c928128 <col:27, col:34> col:34 used dest 'long *'
  |-ParmVarDecl 0x13c9281a8 <col:40, col:46> col:46 used src 'long'
  |-ParmVarDecl 0x13c928228 <col:51, col:57> col:57 used mask 'long'
  `-CompoundStmt 0x13c928650 <line:2:1, line:4:1>
    `-BinaryOperator 0x13c928630 <line:3:2, col:39> 'long' '='
      |-UnaryOperator 0x13c928450 <col:2, col:3> 'long' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x13c928438 <col:3> 'long *' <LValueToRValue>
      |   `-DeclRefExpr 0x13c928418 <col:3> 'long *' lvalue ParmVar 0x13c928128 'dest' 'long *'
      `-BinaryOperator 0x13c928610 <col:10, col:39> 'long' '|'
        |-ParenExpr 0x13c928540 <col:10, col:24> 'long'
        | `-BinaryOperator 0x13c928520 <col:11, col:20> 'long' '&'
        |   |-ImplicitCastExpr 0x13c928508 <col:11, col:12> 'long' <LValueToRValue>
        |   | `-UnaryOperator 0x13c9284a0 <col:11, col:12> 'long' lvalue prefix '*' cannot overflow
        |   |   `-ImplicitCastExpr 0x13c928488 <col:12> 'long *' <LValueToRValue>
        |   |     `-DeclRefExpr 0x13c928468 <col:12> 'long *' lvalue ParmVar 0x13c928128 'dest' 'long *'
        |   `-UnaryOperator 0x13c9284f0 <col:19, col:20> 'long' prefix '~' cannot overflow
        |     `-ImplicitCastExpr 0x13c9284d8 <col:20> 'long' <LValueToRValue>
        |       `-DeclRefExpr 0x13c9284b8 <col:20> 'long' lvalue ParmVar 0x13c928228 'mask' 'long'
        `-ParenExpr 0x13c9285f0 <col:28, col:39> 'long'
          `-BinaryOperator 0x13c9285d0 <col:29, col:35> 'long' '&'
            |-ImplicitCastExpr 0x13c9285a0 <col:29> 'long' <LValueToRValue>
            | `-DeclRefExpr 0x13c928560 <col:29> 'long' lvalue ParmVar 0x13c9281a8 'src' 'long'
            `-ImplicitCastExpr 0x13c9285b8 <col:35> 'long' <LValueToRValue>
              `-DeclRefExpr 0x13c928580 <col:35> 'long' lvalue ParmVar 0x13c928228 'mask' 'long'
