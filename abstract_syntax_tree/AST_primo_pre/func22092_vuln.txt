`-FunctionDecl 0x15a026a88  line:1:5 invalid bt_sock_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)'
  |-ParmVarDecl 0x15a00e248 <col:21, col:35> col:35 iocb 'struct kiocb *'
  |-ParmVarDecl 0x15a026628 <col:41, col:56> col:56 used sock 'struct socket *'
  |-ParmVarDecl 0x15a0267f8 <line:2:5, col:20> col:20 used msg 'struct msghdr *'
  |-ParmVarDecl 0x15a026890 <col:25, col:32> col:32 invalid len 'int'
  |-ParmVarDecl 0x15a026910 <col:37, col:41> col:41 used flags 'int'
  `-CompoundStmt 0x15a02edf8 <line:3:1, line:45:1>
    |-DeclStmt 0x15a026c70 <line:4:2, col:36>
    | `-VarDecl 0x15a026b70 <col:2, col:24> col:6 used noblock 'int' cinit
    |   `-BinaryOperator 0x15a026c50 <col:16, col:24> '<dependent type>' contains-errors '&'
    |     |-DeclRefExpr 0x15a026bd8 <col:16> 'int' lvalue ParmVar 0x15a026910 'flags' 'int'
    |     `-RecoveryExpr 0x15a026c30 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15a026ed8 <line:5:2, col:28>
    | |-RecordDecl 0x15a026c88 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x15a026df8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x15a026e98 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x15a026e60 <col:20> 'struct socket *' lvalue ParmVar 0x15a026628 'sock' 'struct socket *'
    |-DeclStmt 0x15a0270d8 <line:6:2, col:21>
    | |-RecordDecl 0x15a026ef0 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x15a027058 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-UnaryExprOrTypeTraitExpr 0x15a027148 <line:7:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x15a027128 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15a0271e8 <line:8:2, col:9>
    | `-VarDecl 0x15a027180 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x15a027440 <line:10:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15a027360 <col:2> 'int ()' Function 0x15a0272a8 'BT_DBG' 'int ()'
    | |-StringLiteral 0x15a0273c0 <col:9> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x15a0273e0 <col:16> 'struct socket *' lvalue ParmVar 0x15a026628 'sock' 'struct socket *'
    | |-DeclRefExpr 0x15a027400 <col:22> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x15a027420 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x15a027580 <line:12:2, line:13:11>
    | |-RecoveryExpr 0x15a0274b8 <line:12:6, col:22> '_Bool' contains-errors
    | `-ReturnStmt 0x15a027570 <line:13:3, col:11>
    |   `-UnaryOperator 0x15a027558 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x15a027540 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x15a027520 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x15a02d298 <line:15:2, col:50> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x15a0275a0 <col:2> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x15a02d280 <col:8, col:50> 'struct sk_buff *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x15a02d1f8 <col:8, col:50> 'int' contains-errors
    |     |-ImplicitCastExpr 0x15a02d1e0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x15a02d0b8 <col:8> 'int ()' Function 0x15a02d000 'skb_recv_datagram' 'int ()'
    |     |-ImplicitCastExpr 0x15a02d238 <col:26> 'struct sock *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x15a02d0d8 <col:26> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    |     |-ImplicitCastExpr 0x15a02d250 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x15a02d0f8 <col:30> 'int' lvalue ParmVar 0x15a026910 'flags' 'int'
    |     |-ImplicitCastExpr 0x15a02d268 <col:37> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x15a02d118 <col:37> 'int' contains-errors lvalue Var 0x15a026b70 'noblock' 'int'
    |     `-UnaryOperator 0x15a02d190 <col:46, col:47> 'int *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x15a02d138 <col:47> 'int' lvalue Var 0x15a027180 'err' 'int'
    |-IfStmt 0x15a02d558 <line:16:2, line:22:2>
    | |-UnaryOperator 0x15a02d2f0 <line:16:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15a02d2d8 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a02d2b8 <col:7> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x15a02d538 <col:12, line:22:2>
    |   |-IfStmt 0x15a02d4d0 <line:17:3, line:20:3>
    |   | |-BinaryOperator 0x15a02d3c0 <line:17:7, col:25> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x15a02d340 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x15a02d308 <col:7> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    |   | | `-RecoveryExpr 0x15a02d3a0 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x15a02d4b0 <col:39, line:20:3>
    |   |   |-BinaryOperator 0x15a02d460 <line:18:4, col:23> '<dependent type>' contains-errors '='
    |   |   | |-RecoveryExpr 0x15a02d418 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |   |   | | `-DeclRefExpr 0x15a02d3e0 <col:4> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |   |   | `-IntegerLiteral 0x15a02d440 <col:23> 'int' 0
    |   |   `-ReturnStmt 0x15a02d4a0 <line:19:4, col:11>
    |   |     `-IntegerLiteral 0x15a02d480 <col:11> 'int' 0
    |   `-ReturnStmt 0x15a02d528 <line:21:3, col:10>
    |     `-ImplicitCastExpr 0x15a02d510 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x15a02d4f0 <col:10> 'int' lvalue Var 0x15a027180 'err' 'int'
    |-IfStmt 0x15a02d7a0 <line:25:2, line:28:2>
    | |-BinaryOperator 0x15a02d650 <line:25:6, col:12> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x15a02d5d8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15a02d630 <col:12> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15a02d788 <col:20, line:28:2>
    |   `-CompoundAssignOperator 0x15a02d738 <line:26:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x15a02d6a8 <col:3, col:8> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x15a02d670 <col:3> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |     `-RecoveryExpr 0x15a02d718 <col:21> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x15a02d8f8 <line:30:2, col:32> 'int'
    | |-ImplicitCastExpr 0x15a02d8e0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x15a02d8a0 <col:2> 'int ()' Function 0x15a02d7e8 'skb_reset_transport_header' 'int ()'
    | `-ImplicitCastExpr 0x15a02d920 <col:29> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x15a02d8c0 <col:29> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
    |-IfStmt 0x15a02ec00 <line:32:2, line:40:2>
    | |-BinaryOperator 0x15a02db50 <line:32:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x15a02db38 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a02daf8 <col:6> 'int' lvalue Var 0x15a027180 'err' 'int'
    | | `-IntegerLiteral 0x15a02db18 <col:13> 'int' 0
    | `-CompoundStmt 0x15a02ebe0 <col:16, line:40:2>
    |   |-CallExpr 0x15a02dce8 <line:33:3, col:38> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x15a02dcd0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x15a02dc50 <col:3> 'int ()' Function 0x15a02db98 'sock_recv_ts_and_drops' 'int ()'
    |   | |-ImplicitCastExpr 0x15a02dd20 <col:26> 'struct msghdr *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x15a02dc70 <col:26> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |   | |-ImplicitCastExpr 0x15a02dd38 <col:31> 'struct sock *' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x15a02dc90 <col:31> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    |   | `-ImplicitCastExpr 0x15a02dd50 <col:35> 'struct sk_buff *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x15a02dcb0 <col:35> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
    |   `-IfStmt 0x15a02ebb0 <line:35:3, line:39:23> has_else
    |     |-RecoveryExpr 0x15a02dee0 <line:35:7, col:18> '<dependent type>' contains-errors lvalue
    |     | `-CallExpr 0x15a02dea0 <col:7, col:15> 'int' contains-errors
    |     |   |-ImplicitCastExpr 0x15a02de88 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x15a02de48 <col:7> 'int ()' Function 0x15a02dd90 'bt_sk' 'int ()'
    |     |   `-ImplicitCastExpr 0x15a02dec8 <col:13> 'struct sock *' contains-errors <LValueToRValue>
    |     |     `-DeclRefExpr 0x15a02de68 <col:13> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    |     |-CallExpr 0x15a02ead8 <line:36:4, line:37:24> '<dependent type>' contains-errors
    |     | |-RecoveryExpr 0x15a02dfa0 <line:36:4, col:15> '<dependent type>' contains-errors lvalue
    |     | | `-CallExpr 0x15a02df60 <col:4, col:12> 'int' contains-errors
    |     | |   |-ImplicitCastExpr 0x15a02df48 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |     | |   | `-DeclRefExpr 0x15a02df08 <col:4> 'int ()' Function 0x15a02dd90 'bt_sk' 'int ()'
    |     | |   `-ImplicitCastExpr 0x15a02df88 <col:10> 'struct sock *' contains-errors <LValueToRValue>
    |     | |     `-DeclRefExpr 0x15a02df28 <col:10> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
    |     | |-DeclRefExpr 0x15a02dfc8 <col:28> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
    |     | |-RecoveryExpr 0x15a02ea38 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |     | | `-DeclRefExpr 0x15a02ea00 <col:33> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |     | `-UnaryOperator 0x15a02eac0 <line:37:7, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     |   `-RecoveryExpr 0x15a02ea98 <col:8, col:13> '<dependent type>' contains-errors lvalue
    |     |     `-DeclRefExpr 0x15a02ea60 <col:8> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |     `-BinaryOperator 0x15a02eb90 <line:39:4, col:23> '<dependent type>' contains-errors '='
    |       |-RecoveryExpr 0x15a02eb48 <col:4, col:9> '<dependent type>' contains-errors lvalue
    |       | `-DeclRefExpr 0x15a02eb10 <col:4> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'
    |       `-IntegerLiteral 0x15a02eb70 <col:23> 'int' 0
    `-CallExpr 0x15a02ed78 <line:42:2, col:27> 'int' contains-errors
      |-ImplicitCastExpr 0x15a02ed60 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x15a02ed00 <col:2> 'int ()' Function 0x15a02ec48 'skb_free_datagram' 'int ()'
      |-ImplicitCastExpr 0x15a02eda8 <col:20> 'struct sock *' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x15a02ed20 <col:20> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'
      `-ImplicitCastExpr 0x15a02edc0 <col:24> 'struct sk_buff *' <LValueToRValue>
        `-DeclRefExpr 0x15a02ed40 <col:24> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'
