`-FunctionDecl 0x1429229c8  line:1:12 invalid xfrm_expand_policies 'int (const struct flowi *, int, struct xfrm_policy **, int *, int *)' static
  |-ParmVarDecl 0x14400e248 <col:33, col:53> col:53 fl 'const struct flowi *'
  |-ParmVarDecl 0x14400e2e0 <col:57, col:61> col:61 invalid family 'int'
  |-ParmVarDecl 0x142922728 <line:2:5, col:26> col:26 used pols 'struct xfrm_policy **'
  |-ParmVarDecl 0x1429227d8 <line:3:5, col:10> col:10 used num_pols 'int *'
  |-ParmVarDecl 0x142922858 <col:20, col:25> col:25 used num_xfrms 'int *'
  `-CompoundStmt 0x1440248d8 <line:4:1, line:44:1>
    |-DeclStmt 0x142922b18 <line:5:2, col:7>
    | `-VarDecl 0x142922ab0 <col:2, col:6> col:6 used i 'int'
    |-IfStmt 0x142922e18 <line:7:2, line:11:2>
    | |-BinaryOperator 0x142922c80 <line:7:6, col:31> 'int' '||'
    | | |-BinaryOperator 0x142922bb8 <col:6, col:19> 'int' '=='
    | | | |-ImplicitCastExpr 0x142922ba0 <col:6, col:7> 'int' <LValueToRValue>
    | | | | `-UnaryOperator 0x142922b68 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    | | | |   `-ImplicitCastExpr 0x142922b50 <col:7> 'int *' <LValueToRValue>
    | | | |     `-DeclRefExpr 0x142922b30 <col:7> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'
    | | | `-IntegerLiteral 0x142922b80 <col:19> 'int' 0
    | | `-UnaryOperator 0x142922c68 <col:24, col:31> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x142922c50 <col:25, col:31> 'struct xfrm_policy *' <LValueToRValue>
    | |     `-ArraySubscriptExpr 0x142922c30 <col:25, col:31> 'struct xfrm_policy *' lvalue
    | |       |-ImplicitCastExpr 0x142922c18 <col:25> 'struct xfrm_policy **' <LValueToRValue>
    | |       | `-DeclRefExpr 0x142922bd8 <col:25> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'
    | |       `-IntegerLiteral 0x142922bf8 <col:30> 'int' 0
    | `-CompoundStmt 0x142922df0 <col:34, line:11:2>
    |   |-BinaryOperator 0x142922d10 <line:8:3, col:15> 'int' '='
    |   | |-UnaryOperator 0x142922cd8 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x142922cc0 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x142922ca0 <col:4> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'
    |   | `-IntegerLiteral 0x142922cf0 <col:15> 'int' 0
    |   |-BinaryOperator 0x142922da0 <line:9:3, col:16> 'int' '='
    |   | |-UnaryOperator 0x142922d68 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x142922d50 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x142922d30 <col:4> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'
    |   | `-IntegerLiteral 0x142922d80 <col:16> 'int' 0
    |   `-ReturnStmt 0x142922de0 <line:10:3, col:10>
    |     `-IntegerLiteral 0x142922dc0 <col:10> 'int' 0
    |-IfStmt 0x142923298 <line:12:2, line:13:25>
    | |-CallExpr 0x142923078 <line:12:6, col:20> 'int'
    | | |-ImplicitCastExpr 0x142923060 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x142922f90 <col:6> 'int ()' Function 0x142922ed8 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x1429230a0 <col:13, col:19> 'struct xfrm_policy *' <LValueToRValue>
    | |   `-ArraySubscriptExpr 0x142923008 <col:13, col:19> 'struct xfrm_policy *' lvalue
    | |     |-ImplicitCastExpr 0x142922ff0 <col:13> 'struct xfrm_policy **' <LValueToRValue>
    | |     | `-DeclRefExpr 0x142922fb0 <col:13> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'
    | |     `-IntegerLiteral 0x142922fd0 <col:18> 'int' 0
    | `-ReturnStmt 0x142923288 <line:13:3, col:25>
    |   `-CallExpr 0x142923248 <col:10, col:25> 'int'
    |     |-ImplicitCastExpr 0x142923230 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x142923198 <col:10> 'int ()' Function 0x1429230e0 'PTR_ERR' 'int ()'
    |     `-ImplicitCastExpr 0x142923270 <col:18, col:24> 'struct xfrm_policy *' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x142923210 <col:18, col:24> 'struct xfrm_policy *' lvalue
    |         |-ImplicitCastExpr 0x1429231f8 <col:18> 'struct xfrm_policy **' <LValueToRValue>
    |         | `-DeclRefExpr 0x1429231b8 <col:18> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'
    |         `-IntegerLiteral 0x1429231d8 <col:23> 'int' 0
    |-BinaryOperator 0x1429233c0 <line:15:2, col:24> 'int' contains-errors '='
    | |-UnaryOperator 0x1429232f0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1429232d8 <col:3> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1429232b8 <col:3> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'
    | `-RecoveryExpr 0x142923398 <col:15, col:24> '<dependent type>' contains-errors lvalue
    |   `-ArraySubscriptExpr 0x142923360 <col:15, col:21> 'struct xfrm_policy *' lvalue
    |     |-ImplicitCastExpr 0x142923348 <col:15> 'struct xfrm_policy **' <LValueToRValue>
    |     | `-DeclRefExpr 0x142923308 <col:15> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'
    |     `-IntegerLiteral 0x142923328 <col:20> 'int' 0
    |-ForStmt 0x144024870 <line:35:2, line:40:2>
    | |-BinaryOperator 0x142923420 <line:35:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x1429233e0 <col:7> 'int' lvalue Var 0x142922ab0 'i' 'int'
    | | `-IntegerLiteral 0x142923400 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1429234e0 <col:14, col:19> 'int' '<'
    | | |-ImplicitCastExpr 0x1429234b0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x142923440 <col:14> 'int' lvalue Var 0x142922ab0 'i' 'int'
    | | `-ImplicitCastExpr 0x1429234c8 <col:18, col:19> 'int' <LValueToRValue>
    | |   `-UnaryOperator 0x142923498 <col:18, col:19> 'int' lvalue prefix '*' cannot overflow
    | |     `-ImplicitCastExpr 0x142923480 <col:19> 'int *' <LValueToRValue>
    | |       `-DeclRefExpr 0x142923460 <col:19> 'int *' lvalue ParmVar 0x1429227d8 'num_pols' 'int *'
    | |-UnaryOperator 0x142923520 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x142923500 <col:29> 'int' lvalue Var 0x142922ab0 'i' 'int'
    | `-CompoundStmt 0x144024858 <col:34, line:40:2>
    |   `-IfStmt 0x144024838 <line:36:3, line:39:3>
    |     |-BinaryOperator 0x144024748 <line:36:7, col:26> 'int' contains-errors '!='
    |     | |-RecoveryExpr 0x144024700 <col:7, col:16> '<dependent type>' contains-errors lvalue
    |     | | `-ArraySubscriptExpr 0x1440246e0 <col:7, col:13> 'struct xfrm_policy *' lvalue
    |     | |   |-ImplicitCastExpr 0x1440246b0 <col:7> 'struct xfrm_policy **' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x142923538 <col:7> 'struct xfrm_policy **' lvalue ParmVar 0x142922728 'pols' 'struct xfrm_policy **'
    |     | |   `-ImplicitCastExpr 0x1440246c8 <col:12> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x142923558 <col:12> 'int' lvalue Var 0x142922ab0 'i' 'int'
    |     | `-RecoveryExpr 0x144024728 <col:26> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x144024818 <col:45, line:39:3>
    |       |-BinaryOperator 0x1440247f0 <line:37:4, col:18> 'int' '='
    |       | |-UnaryOperator 0x1440247a0 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x144024788 <col:5> 'int *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x144024768 <col:5> 'int *' lvalue ParmVar 0x142922858 'num_xfrms' 'int *'
    |       | `-UnaryOperator 0x1440247d8 <col:17, col:18> 'int' prefix '-'
    |       |   `-IntegerLiteral 0x1440247b8 <col:18> 'int' 1
    |       `-BreakStmt 0x144024810 <line:38:4>
    `-ReturnStmt 0x1440248c8 <line:42:2, col:9>
      `-IntegerLiteral 0x1440248a8 <col:9> 'int' 0
