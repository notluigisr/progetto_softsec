`-FunctionDecl 0x15800f068  line:1:1 int_cmp 'int (const void *, const void *)'
  |-ParmVarDecl 0x15800ef08 <col:9, col:21> col:21 used a 'const void *'
  |-ParmVarDecl 0x15800ef88 <col:24, col:36> col:36 used b 'const void *'
  `-CompoundStmt 0x15800f2e8 <line:2:1, line:4:1>
    `-ReturnStmt 0x15800f2d8 <line:3:5, col:44>
      `-BinaryOperator 0x15800f2b8 <col:12, col:44> 'int' '-'
        |-ImplicitCastExpr 0x15800f288 <col:12, col:26> 'int' <LValueToRValue>
        | `-UnaryOperator 0x15800f1e0 <col:12, col:26> 'const int' lvalue prefix '*' cannot overflow
        |   `-CStyleCastExpr 0x15800f1b8 <col:13, col:26> 'const int *' <BitCast>
        |     `-ImplicitCastExpr 0x15800f1a0 <col:26> 'const void *' <LValueToRValue> part_of_explicit_cast
        |       `-DeclRefExpr 0x15800f168 <col:26> 'const void *' lvalue ParmVar 0x15800ef08 'a' 'const void *'
        `-ImplicitCastExpr 0x15800f2a0 <col:30, col:44> 'int' <LValueToRValue>
          `-UnaryOperator 0x15800f270 <col:30, col:44> 'const int' lvalue prefix '*' cannot overflow
            `-CStyleCastExpr 0x15800f248 <col:31, col:44> 'const int *' <BitCast>
              `-ImplicitCastExpr 0x15800f230 <col:44> 'const void *' <LValueToRValue> part_of_explicit_cast
                `-DeclRefExpr 0x15800f1f8 <col:44> 'const void *' lvalue ParmVar 0x15800ef88 'b' 'const void *'
