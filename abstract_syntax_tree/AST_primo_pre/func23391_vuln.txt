`-FunctionDecl 0x12381f390  line:1:13 test_jwt_token_escape 'void (void)' static
  `-CompoundStmt 0x12384ac68 <line:2:1, line:43:1>
    |-DeclStmt 0x123848718 <line:3:2, line:16:3>
    | |-RecordDecl 0x12381f480 <line:3:2, line:7:2> line:3:9 struct test_case definition
    | | |-FieldDecl 0x12381f538 <line:4:3, col:15> col:15 referenced alg 'const char *'
    | | |-FieldDecl 0x12381f5a0 <line:5:3, col:15> col:15 referenced kid 'const char *'
    | | `-FieldDecl 0x12381f608 <line:6:3, col:15> col:15 referenced esc_kid 'const char *'
    | `-VarDecl 0x12381f790 <line:3:2, line:16:2> line:7:4 used test_cases 'struct test_case[4]' cinit
    |   `-InitListExpr 0x1238482e8 <col:19, line:16:2> 'struct test_case[4]'
    |     |-InitListExpr 0x123848338 <line:8:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x1238483a8 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x123848390 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x12381f840 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x1238483c0 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x1238483d0 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x1238483f8 <line:9:3, col:11> 'struct test_case'
    |     | |-ImplicitCastExpr 0x123848468 <col:5> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x123848450 <col:5> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x12381f8a8 <col:5> 'char[4]' lvalue "STR"
    |     | |-ImplicitValueInitExpr 0x123848480 <<invalid sloc>> 'const char *'
    |     | `-ImplicitValueInitExpr 0x123848490 <<invalid sloc>> 'const char *'
    |     |-InitListExpr 0x1238484c0 <line:10:3, line:14:3> 'struct test_case'
    |     | |-ImplicitCastExpr 0x123848530 <line:11:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x123848518 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x12381f910 <col:4> 'char[4]' lvalue "STR"
    |     | |-ImplicitCastExpr 0x123848560 <line:12:4> 'const char *' <NoOp>
    |     | | `-ImplicitCastExpr 0x123848548 <col:4> 'char *' <ArrayToPointerDecay>
    |     | |   `-StringLiteral 0x12381f930 <col:4> 'char[4]' lvalue "STR"
    |     | `-ImplicitCastExpr 0x123848590 <line:13:4> 'const char *' <NoOp>
    |     |   `-ImplicitCastExpr 0x123848578 <col:4> 'char *' <ArrayToPointerDecay>
    |     |     `-StringLiteral 0x12381f950 <col:4> 'char[4]' lvalue "STR"
    |     `-InitListExpr 0x1238485d8 <line:15:3, col:11> 'struct test_case'
    |       |-ImplicitCastExpr 0x123848648 <col:5> 'const char *' <NoOp>
    |       | `-ImplicitCastExpr 0x123848630 <col:5> 'char *' <ArrayToPointerDecay>
    |       |   `-StringLiteral 0x12381f9c8 <col:5> 'char[4]' lvalue "STR"
    |       |-ImplicitValueInitExpr 0x123848660 <<invalid sloc>> 'const char *'
    |       `-ImplicitValueInitExpr 0x123848670 <<invalid sloc>> 'const char *'
    |-CallExpr 0x123848b28 <line:19:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123848aa8 <col:2> 'int ()' Function 0x1238489f0 'ARRAY_TYPE' 'int ()'
    | `-RecoveryExpr 0x123848b08 <col:13> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x123848d08 <line:20:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x123848c30 <col:2> 'int ()' Function 0x123848b78 't_array_init' 'int ()'
    | |-UnaryOperator 0x123848cf0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x123848cd0 <col:16> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x123848c80 <col:24> 'int' 8
    `-ForStmt 0x12384ac30 <line:22:2, line:42:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-BinaryOperator 0x123849090 <line:22:21, col:46> 'int' contains-errors '<'
      | |-RecoveryExpr 0x123849018 <col:21> '<dependent type>' contains-errors lvalue
      | `-CallExpr 0x123849050 <col:25, col:46> 'int'
      |   |-ImplicitCastExpr 0x123849038 <col:25> 'int (*)()' <FunctionToPointerDecay>
      |   | `-DeclRefExpr 0x123848ed0 <col:25> 'int ()' Function 0x123848e18 'N_ELEMENTS' 'int ()'
      |   `-ImplicitCastExpr 0x123849078 <col:36> 'struct test_case *' <ArrayToPointerDecay>
      |     `-DeclRefExpr 0x123848ef0 <col:36> 'struct test_case[4]' lvalue Var 0x12381f790 'test_cases' 'struct test_case[4]'
      |-UnaryOperator 0x123849100 <col:49, col:50> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x1238490e0 <col:49> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x12384abf8 <col:54, line:42:2>
        |-DeclStmt 0x1250088a0 <line:23:3, col:53>
        | `-VarDecl 0x125008800 <col:3, col:27> col:27 used test_case 'const struct test_case *'
        |-DeclStmt 0x125008ca8 <line:25:3, col:59>
        | |-RecordDecl 0x1250089b8 <col:3, col:10> col:10 struct oauth2_field
        | `-VarDecl 0x125008b28 <col:3, col:24> col:24 used field 'struct oauth2_field *'
        |-BinaryOperator 0x125008d40 <line:26:3, col:17> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x125008cf8 <col:3, col:10> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x125008cc0 <col:3> 'struct oauth2_field *' lvalue Var 0x125008b28 'field' 'struct oauth2_field *'
        | `-StringLiteral 0x125008d20 <col:17> 'char[4]' lvalue "STR"
        |-BinaryOperator 0x125008de0 <line:27:3, col:18> '<dependent type>' contains-errors '='
        | |-RecoveryExpr 0x125008d98 <col:3, col:10> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x125008d60 <col:3> 'struct oauth2_field *' lvalue Var 0x125008b28 'field' 'struct oauth2_field *'
        | `-StringLiteral 0x125008dc0 <col:18> 'char[4]' lvalue "STR"
        `-IfStmt 0x125009150 <line:28:3, line:32:3>
          |-BinaryOperator 0x125008ee0 <line:28:7, col:26> 'int' '!='
          | |-ImplicitCastExpr 0x125008ec8 <col:7, col:19> 'int' <IntegralCast>
          | | `-ImplicitCastExpr 0x125008eb0 <col:7, col:19> 'char' <LValueToRValue>
          | |   `-UnaryOperator 0x125008e80 <col:7, col:19> 'const char' lvalue prefix '*' cannot overflow
          | |     `-ImplicitCastExpr 0x125008e68 <col:8, col:19> 'const char *' <LValueToRValue>
          | |       `-MemberExpr 0x125008e38 <col:8, col:19> 'const char *const' lvalue ->kid 0x12381f5a0
          | |         `-ImplicitCastExpr 0x125008e20 <col:8> 'const struct test_case *' <LValueToRValue>
          | |           `-DeclRefExpr 0x125008e00 <col:8> 'const struct test_case *' lvalue Var 0x125008800 'test_case' 'const struct test_case *'
          | `-CharacterLiteral 0x125008e98 <col:26> 'int' 0
          `-CompoundStmt 0x125009130 <col:32, line:32:3>
            |-BinaryOperator 0x125008fc0 <line:30:4, col:18> '<dependent type>' contains-errors '='
            | |-RecoveryExpr 0x125008f78 <col:4, col:11> '<dependent type>' contains-errors lvalue
            | | `-DeclRefExpr 0x125008f40 <col:4> 'struct oauth2_field *' lvalue Var 0x125008b28 'field' 'struct oauth2_field *'
            | `-StringLiteral 0x125008fa0 <col:18> 'char[4]' lvalue "STR"
            `-BinaryOperator 0x125009110 <line:31:4, col:30> '<dependent type>' contains-errors '='
              |-RecoveryExpr 0x125009018 <col:4, col:11> '<dependent type>' contains-errors lvalue
              | `-DeclRefExpr 0x125008fe0 <col:4> 'struct oauth2_field *' lvalue Var 0x125008b28 'field' 'struct oauth2_field *'
              `-MemberExpr 0x1250090e0 <col:19, col:30> 'const char *const' lvalue ->kid 0x12381f5a0
                `-ImplicitCastExpr 0x1250090c8 <col:19> 'const struct test_case *' <LValueToRValue>
                  `-DeclRefExpr 0x125009040 <col:19> 'const struct test_case *' lvalue Var 0x125008800 'test_case' 'const struct test_case *'
