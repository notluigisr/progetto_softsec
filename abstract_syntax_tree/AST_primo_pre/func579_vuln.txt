`-FunctionDecl 0x12800ddf8  line:1:12 invalid PARSER_FLAGS 'int (int *)' static
  |-ParmVarDecl 0x12800dd28 <col:25, col:42> col:42 invalid flags 'int *'
  `-CompoundStmt 0x130122780 <line:2:1, line:13:1>
    |-DeclStmt 0x12800df48 <line:3:5, col:25>
    | `-VarDecl 0x12800dec0 <col:5, col:24> col:9 used parser_flags 'int' cinit
    |   `-IntegerLiteral 0x12800df28 <col:24> 'int' 0
    |-IfStmt 0x12800dfe0 <line:4:5, line:5:16>
    | |-UnaryOperator 0x12800df98 <line:4:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12800df80 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12800df60 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12800dfd0 <line:5:9, col:16>
    |   `-IntegerLiteral 0x12800dfb0 <col:16> 'int' 0
    |-IfStmt 0x12800e198 <line:6:5, line:7:25>
    | |-BinaryOperator 0x12800e0c0 <line:6:9, col:27> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x12800e020 <col:9, col:16> '<dependent type>' contains-errors lvalue ->cf_flags
    | | | `-RecoveryExpr 0x12800e000 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12800e0a0 <col:27> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x12800e168 <line:7:9, col:25> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x12800e0e0 <col:9> 'int' lvalue Var 0x12800dec0 'parser_flags' 'int'
    |   `-RecoveryExpr 0x12800e148 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12800e350 <line:8:5, line:9:25>
    | |-BinaryOperator 0x12800e278 <line:8:9, col:27> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x12800e1d8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->cf_flags
    | | | `-RecoveryExpr 0x12800e1b8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12800e258 <col:27> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x12800e320 <line:9:9, col:25> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x12800e298 <col:9> 'int' lvalue Var 0x12800dec0 'parser_flags' 'int'
    |   `-RecoveryExpr 0x12800e300 <col:25> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x130122718 <line:10:5, line:11:25>
    | |-BinaryOperator 0x130122640 <line:10:9, col:27> '<dependent type>' contains-errors '&'
    | | |-CXXDependentScopeMemberExpr 0x12800e390 <col:9, col:16> '<dependent type>' contains-errors lvalue ->cf_flags
    | | | `-RecoveryExpr 0x12800e370 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x130122620 <col:27> '<dependent type>' contains-errors lvalue
    | `-CompoundAssignOperator 0x1301226e8 <line:11:9, col:25> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |-DeclRefExpr 0x130122660 <col:9> 'int' lvalue Var 0x12800dec0 'parser_flags' 'int'
    |   `-RecoveryExpr 0x1301226c8 <col:25> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x130122770 <line:12:5, col:12>
      `-ImplicitCastExpr 0x130122758 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x130122738 <col:12> 'int' lvalue Var 0x12800dec0 'parser_flags' 'int'
