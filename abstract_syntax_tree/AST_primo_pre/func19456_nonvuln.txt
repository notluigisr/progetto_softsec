`-FunctionDecl 0x15080ddf8  line:1:1 invalid write_viminfo_sub_string 'int (int *)'
  |-ParmVarDecl 0x15080dd28 <col:26, col:32> col:32 invalid fp 'int *'
  `-CompoundStmt 0x150828548 <line:2:1, line:10:1>
    |-DeclStmt 0x150827d40 <line:3:5, col:36>
    | `-VarDecl 0x15080dec0 <col:5, col:35> col:13 used old_sub 'char *' cinit
    |   `-ImplicitCastExpr 0x15080e108 <col:23, col:35> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x15080e0e8 <col:23, col:35> 'int'
    |       `-ImplicitCastExpr 0x15080e0d0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x15080e080 <col:23> 'int ()' Function 0x15080dfc8 'get_old_sub' 'int ()'
    `-IfStmt 0x150828528 <line:5:5, line:9:5>
      |-BinaryOperator 0x150828068 <line:5:9, col:55> 'int' contains-errors '&&'
      | |-BinaryOperator 0x150828008 <col:9, col:39> 'int' '!='
      | | |-CallExpr 0x150827fe0 <col:9, col:34> 'int'
      | | | |-ImplicitCastExpr 0x150827fc8 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | | | `-DeclRefExpr 0x150827e38 <col:9> 'int ()' Function 0x150827d80 'get_viminfo_parameter' 'int ()'
      | | | `-CharacterLiteral 0x150827e58 <col:31> 'int' 47
      | | `-IntegerLiteral 0x150827eb0 <col:39> 'int' 0
      | `-BinaryOperator 0x150828048 <col:44, col:55> 'int' contains-errors '!='
      |   |-DeclRefExpr 0x150827ef0 <col:44> 'char *' lvalue Var 0x15080dec0 'old_sub' 'char *'
      |   `-RecoveryExpr 0x150828028 <col:55> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x150828508 <line:6:5, line:9:5>
        |-CallExpr 0x150828368 <line:7:2, col:20> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x150828168 <col:2> 'int ()' Function 0x1508280b0 'fputs' 'int ()'
        | |-CallExpr 0x150828308 <col:8, col:15> 'int'
        | | |-ImplicitCastExpr 0x1508282f0 <col:8> 'int (*)()' <FunctionToPointerDecay>
        | | | `-DeclRefExpr 0x150828268 <col:8> 'int ()' Function 0x1508281b0 '_' 'int ()'
        | | `-ImplicitCastExpr 0x150828330 <col:10> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x1508282d0 <col:10> 'char[4]' lvalue "STR"
        | `-RecoveryExpr 0x150828348 <col:18> '<dependent type>' contains-errors lvalue
        `-CallExpr 0x1508284d8 <line:8:2, col:33> '<dependent type>' contains-errors
          |-DeclRefExpr 0x150828478 <col:2> 'int ()' Function 0x1508283c0 'viminfo_writestring' 'int ()'
          |-RecoveryExpr 0x150828498 <col:22> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x1508284b8 <col:26> 'char *' lvalue Var 0x15080dec0 'old_sub' 'char *'
