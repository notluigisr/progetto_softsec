`-FunctionDecl 0x13b1281a8  line:1:1 DeleteChar 'int (int)'
  |-ParmVarDecl 0x13b1280d8 <line:2:1, col:5> col:5 used n 'int'
  `-CompoundStmt 0x13b142348 <line:3:1, line:12:1>
    |-DeclStmt 0x13b128560 <line:4:3, col:44>
    | |-VarDecl 0x13b1282b8 <col:3, col:26> col:16 used y 'int' register cinit
    | | `-CXXDependentScopeMemberExpr 0x13b1283b8 <col:20, col:26> '<dependent type>' contains-errors lvalue ->w_y
    | |   `-RecoveryExpr 0x13b128398 <col:20> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x13b128418 <col:3, col:41> col:31 used x 'int' register cinit
    |   `-CXXDependentScopeMemberExpr 0x13b128500 <col:35, col:41> '<dependent type>' contains-errors lvalue ->w_x
    |     `-RecoveryExpr 0x13b1284e0 <col:35> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13b128648 <line:6:3, line:7:6>
    | |-BinaryOperator 0x13b1285f0 <line:6:7, col:12> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x13b128578 <col:7> 'int' contains-errors lvalue Var 0x13b128418 'x' 'int'
    | | `-RecoveryExpr 0x13b1285d0 <col:12> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13b128630 <line:7:5, col:6> 'int' contains-errors postfix '--'
    |   `-DeclRefExpr 0x13b128610 <col:5> 'int' contains-errors lvalue Var 0x13b128418 'x' 'int'
    |-CallExpr 0x13b141b80 <line:9:3, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b141918 <col:3> 'int ()' Function 0x13b141860 'MScrollH' 'int ()'
    | |-RecoveryExpr 0x13b141ab8 <col:12> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x13b141950 <col:18> 'int' lvalue ParmVar 0x13b1280d8 'n' 'int'
    | |-DeclRefExpr 0x13b141970 <col:21> 'int' contains-errors lvalue Var 0x13b1282b8 'y' 'int'
    | |-DeclRefExpr 0x13b141990 <col:24> 'int' contains-errors lvalue Var 0x13b128418 'x' 'int'
    | |-BinaryOperator 0x13b141b40 <col:27, col:43> '<dependent type>' contains-errors '-'
    | | |-CXXDependentScopeMemberExpr 0x13b141af8 <col:27, col:33> '<dependent type>' contains-errors lvalue ->w_width
    | | | `-RecoveryExpr 0x13b141ad8 <col:27> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13b141a10 <col:43> 'int' 1
    | `-RecoveryExpr 0x13b141b60 <col:46> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b142048 <line:10:3, col:76> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b141cb0 <col:3> 'int ()' Function 0x13b141bf8 'LScrollH' 'int ()'
    | |-UnaryOperator 0x13b141f50 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x13b141f08 <col:13, col:19> '<dependent type>' contains-errors lvalue ->w_layer
    | |   `-RecoveryExpr 0x13b141ee8 <col:13> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x13b141d48 <col:28> 'int' lvalue ParmVar 0x13b1280d8 'n' 'int'
    | |-DeclRefExpr 0x13b141d68 <col:31> 'int' contains-errors lvalue Var 0x13b1282b8 'y' 'int'
    | |-DeclRefExpr 0x13b141d88 <col:34> 'int' contains-errors lvalue Var 0x13b128418 'x' 'int'
    | |-BinaryOperator 0x13b141fd0 <col:37, col:53> '<dependent type>' contains-errors '-'
    | | |-CXXDependentScopeMemberExpr 0x13b141f88 <col:37, col:43> '<dependent type>' contains-errors lvalue ->w_width
    | | | `-RecoveryExpr 0x13b141f68 <col:37> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13b141e08 <col:53> 'int' 1
    | |-RecoveryExpr 0x13b141ff0 <col:56> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13b142030 <col:66, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13b142010 <col:67> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x13b142310 <line:11:3, col:32> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13b142180 <col:3> 'int ()' Function 0x13b1420c8 'LGotoPos' 'int ()'
      |-UnaryOperator 0x13b1422f8 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
      | `-CXXDependentScopeMemberExpr 0x13b1422b0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->w_layer
      |   `-RecoveryExpr 0x13b142290 <col:13> '<dependent type>' contains-errors lvalue
      |-DeclRefExpr 0x13b142218 <col:28> 'int' contains-errors lvalue Var 0x13b128418 'x' 'int'
      `-DeclRefExpr 0x13b142238 <col:31> 'int' contains-errors lvalue Var 0x13b1282b8 'y' 'int'
