`-FunctionDecl 0x1369281f8  line:1:5 invalid lua_resetthread 'int (int *)'
  |-ParmVarDecl 0x136928128 <col:22, col:33> col:33 referenced invalid L 'int *'
  `-CompoundStmt 0x1369424c0 <col:36, line:20:1>
    |-DeclStmt 0x136928340 <line:3:3, col:13>
    | `-VarDecl 0x1369282d8 <col:3, col:7> col:7 used status 'int'
    |-CallExpr 0x1369284f0 <line:4:3, col:13> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1369284b0 <col:3> 'int ()' Function 0x1369283f8 'lua_lock' 'int ()'
    | `-RecoveryExpr 0x1369284d0 <col:12> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1369286c0 <line:5:3, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x136928560 <col:3, col:6> '<dependent type>' contains-errors lvalue ->ci
    | | `-RecoveryExpr 0x136928538 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136928518 <col:3> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'
    | `-BinaryOperator 0x1369286a0 <col:11, col:20> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x136928680 <col:11> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x136928628 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x1369285e0 <col:17, col:20> '<dependent type>' contains-errors lvalue ->base_ci
    |       `-RecoveryExpr 0x1369285c0 <col:17> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x136941990 <line:6:3, col:28> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1369287c0 <col:3> 'int ()' Function 0x136928708 'setnilvalue' 'int ()'
    | `-CallExpr 0x136941968 <col:15, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1369418e0 <col:15> 'int ()' Function 0x136941828 's2v' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x136941920 <col:19, col:22> '<dependent type>' contains-errors lvalue ->stack
    |     `-RecoveryExpr 0x136941900 <col:19> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x136941ca8 <line:9:3, col:48> 'int' contains-errors '='
    | |-DeclRefExpr 0x136941a38 <col:3> 'int' lvalue Var 0x1369282d8 'status' 'int'
    | `-CallExpr 0x136941c70 <col:12, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x136941b38 <col:12> 'int ()' Function 0x136941a80 'luaF_close' 'int ()'
    |   |-RecoveryExpr 0x136941b58 <col:23> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x136941b98 <col:26, col:29> '<dependent type>' contains-errors lvalue ->stack
    |   | `-RecoveryExpr 0x136941b78 <col:26> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x136941c50 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x136942190 <line:10:3, line:15:3> has_else
    | |-BinaryOperator 0x136941d40 <line:10:7, col:17> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x136941cc8 <col:7> 'int' lvalue Var 0x1369282d8 'status' 'int'
    | | `-RecoveryExpr 0x136941d20 <col:17> '<dependent type>' contains-errors lvalue
    | |-CallExpr 0x136941f48 <line:11:5, col:45> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x136941e40 <col:5> 'int ()' Function 0x136941d88 'luaD_seterrorobj' 'int ()'
    | | |-RecoveryExpr 0x136941e60 <col:22> '<dependent type>' contains-errors lvalue
    | | |-DeclRefExpr 0x136941e80 <col:25> 'int' lvalue Var 0x1369282d8 'status' 'int'
    | | `-BinaryOperator 0x136941f28 <col:33, col:44> '<dependent type>' contains-errors '+'
    | |   |-CXXDependentScopeMemberExpr 0x136941ec0 <col:33, col:36> '<dependent type>' contains-errors lvalue ->stack
    | |   | `-RecoveryExpr 0x136941ea0 <col:33> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x136941f08 <col:44> 'int' 1
    | `-CompoundStmt 0x136942170 <line:12:8, line:15:3>
    |   |-BinaryOperator 0x136941ff8 <line:13:5, col:14> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x136941f80 <col:5> 'int' lvalue Var 0x1369282d8 'status' 'int'
    |   | `-RecoveryExpr 0x136941fd8 <col:14> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x136942150 <line:14:5, col:25> '<dependent type>' contains-errors '='
    |     |-CXXDependentScopeMemberExpr 0x136942060 <col:5, col:8> '<dependent type>' contains-errors lvalue ->top
    |     | `-RecoveryExpr 0x136942038 <col:5> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x136942018 <col:5> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'
    |     `-BinaryOperator 0x136942130 <col:14, col:25> '<dependent type>' contains-errors '+'
    |       |-CXXDependentScopeMemberExpr 0x1369420c8 <col:14, col:17> '<dependent type>' contains-errors lvalue ->stack
    |       | `-RecoveryExpr 0x1369420a8 <col:14> '<dependent type>' contains-errors lvalue
    |       `-IntegerLiteral 0x136942110 <col:25> 'int' 1
    |-BinaryOperator 0x136942310 <line:17:3, col:15> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x1369422a8 <col:3, col:6> '<dependent type>' contains-errors lvalue ->status
    | | `-RecoveryExpr 0x136942280 <col:3> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x136942260 <col:3> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'
    | `-DeclRefExpr 0x1369422f0 <col:15> 'int' lvalue Var 0x1369282d8 'status' 'int'
    |-CallExpr 0x136942450 <line:18:3, col:15> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x136942410 <col:3> 'int ()' Function 0x136942358 'lua_unlock' 'int ()'
    | `-RecoveryExpr 0x136942430 <col:14> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1369424b0 <line:19:3, col:10>
      `-ImplicitCastExpr 0x136942498 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x136942478 <col:10> 'int' lvalue Var 0x1369282d8 'status' 'int'
