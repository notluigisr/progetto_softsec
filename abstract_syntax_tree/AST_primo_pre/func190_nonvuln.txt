`-FunctionDecl 0x141928318  line:1:1 invalid _gnutls_copy_comp_methods 'int (int, int *, int)'
  |-ParmVarDecl 0x1419280f0 <col:28, col:45> col:45 invalid session 'int'
  |-ParmVarDecl 0x1419281a8 <line:2:7, col:16> col:16 referenced invalid ret_data 'int *'
  |-ParmVarDecl 0x141928228 <col:26, col:33> col:33 invalid ret_data_size 'int'
  `-CompoundStmt 0x141942438 <line:3:1, line:36:1>
    |-DeclStmt 0x1419284f0 <line:4:3, col:13>
    | |-VarDecl 0x1419283f0 <col:3, col:7> col:7 used ret 'int'
    | `-VarDecl 0x141928470 <col:3, col:12> col:12 used i 'int'
    |-DeclStmt 0x141928650 <line:6:3, col:19>
    | |-VarDecl 0x141928550 <col:3, col:7> col:7 used datalen 'int'
    | `-VarDecl 0x1419285d0 <col:3, col:16> col:16 used pos 'int'
    |-BinaryOperator 0x141941908 <line:8:3, col:77> 'int' contains-errors '='
    | |-DeclRefExpr 0x141928668 <col:3> 'int' lvalue Var 0x1419283f0 'ret' 'int'
    | `-CallExpr 0x1419418d8 <col:9, col:77> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1419287e0 <col:9> 'int ()' Function 0x141928728 '_gnutls_supported_compression_methods' 'int ()'
    |   |-RecoveryExpr 0x141941800 <col:48> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x1419418c0 <col:57, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x1419418a0 <col:58> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x141941b70 <line:9:3, line:13:5>
    | |-BinaryOperator 0x141941980 <line:9:7, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x141941968 <col:7> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x141941928 <col:7> 'int' lvalue Var 0x1419283f0 'ret' 'int'
    | | `-IntegerLiteral 0x141941948 <col:13> 'int' 0
    | `-CompoundStmt 0x141941b50 <line:10:5, line:13:5>
    |   |-CallExpr 0x141941ae8 <line:11:7, col:22> 'int'
    |   | `-ImplicitCastExpr 0x141941ad0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x141941a80 <col:7> 'int ()' Function 0x1419419c8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x141941b40 <line:12:7, col:14>
    |     `-ImplicitCastExpr 0x141941b28 <col:14> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x141941b08 <col:14> 'int' lvalue Var 0x1419283f0 'ret' 'int'
    |-BinaryOperator 0x141941c30 <line:17:3, col:19> 'int' '='
    | |-DeclRefExpr 0x141941bb0 <col:3> 'int' lvalue Var 0x141928550 'datalen' 'int'
    | `-BinaryOperator 0x141941c10 <col:13, col:19> 'int' '='
    |   |-DeclRefExpr 0x141941bd0 <col:13> 'int' lvalue Var 0x1419285d0 'pos' 'int'
    |   `-IntegerLiteral 0x141941bf0 <col:19> 'int' 0
    |-CompoundAssignOperator 0x141941d38 <line:18:3, col:25> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x141941c50 <col:3> 'int' lvalue Var 0x141928550 'datalen' 'int'
    | `-BinaryOperator 0x141941d18 <col:14, col:25> '<dependent type>' contains-errors '+'
    |   |-RecoveryExpr 0x141941cf8 <col:14> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x141941c88 <col:25> 'int' 1
    |-IfStmt 0x141941ec8 <line:20:3, line:24:5>
    | |-RecoveryExpr 0x141941de0 <line:20:7, col:14> '_Bool' contains-errors
    | | `-ParenExpr 0x141941dc0 <col:7, col:14> '<overloaded function type>' lvalue
    | |   `-UnresolvedLookupExpr 0x141941d80 <col:8> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty
    | `-CompoundStmt 0x141941ea8 <line:21:5, line:24:5>
    |   |-CallExpr 0x141941e40 <line:22:7, col:22> 'int'
    |   | `-ImplicitCastExpr 0x141941e28 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x141941e08 <col:7> 'int ()' Function 0x1419419c8 'gnutls_assert' 'int ()'
    |   `-ReturnStmt 0x141941e98 <line:23:7, col:14>
    |     `-RecoveryExpr 0x141941e78 <col:14> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x141942068 <line:26:3, col:21> '<dependent type>' contains-errors '='
    | |-ArraySubscriptExpr 0x141942028 <col:3, col:17> '<dependent type>' contains-errors lvalue
    | | |-ImplicitCastExpr 0x141942010 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | | | `-RecoveryExpr 0x141941f08 <col:3> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x141941ee8 <col:3> 'int *' lvalue ParmVar 0x1419281a8 'ret_data' 'int *'
    | | `-UnaryOperator 0x141941f50 <col:12, col:15> 'int' postfix '++'
    | |   `-DeclRefExpr 0x141941f30 <col:12> 'int' lvalue Var 0x1419285d0 'pos' 'int'
    | `-RecoveryExpr 0x141942048 <col:21> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1419422b8 <line:28:3, line:31:5>
    | |-BinaryOperator 0x1419420c8 <line:28:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x141942088 <col:8> 'int' lvalue Var 0x141928470 'i' 'int'
    | | `-IntegerLiteral 0x1419420a8 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x141942160 <col:15, col:19> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1419420e8 <col:15> 'int' lvalue Var 0x141928470 'i' 'int'
    | | `-RecoveryExpr 0x141942140 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1419421a0 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x141942180 <col:29> 'int' lvalue Var 0x141928470 'i' 'int'
    | `-CompoundStmt 0x1419422a8 <line:29:5, line:31:5>
    `-ReturnStmt 0x141942428 <line:35:3, col:10>
      `-ImplicitCastExpr 0x141942410 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1419423f0 <col:10> 'int' lvalue Var 0x141928550 'datalen' 'int'
