`-FunctionDecl 0x125128280  line:1:13 invalid do_free_upto 'void (int *, int *)' static
  |-ParmVarDecl 0x125128128 <col:26, col:31> col:31 referenced invalid f 'int *'
  |-ParmVarDecl 0x1251281a8 <col:34, col:39> col:39 invalid upto 'int *'
  `-CompoundStmt 0x125141978 <line:2:2, line:16:2>
    `-IfStmt 0x125141948 <line:3:2, line:15:17> has_else
      |-RecoveryExpr 0x125128338 <line:3:6> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x1251287e0 <line:4:3, line:13:3>
      | `-DoStmt 0x1251287c0 <line:6:3, line:12:19>
      |   |-CompoundStmt 0x125128740 <line:7:4, line:11:4>
      |   | |-CallExpr 0x125128658 <line:9:4, col:14> '<dependent type>' contains-errors
      |   | | |-DeclRefExpr 0x125128618 <col:4> 'int ()' Function 0x125128560 'BIO_free' 'int ()'
      |   | | `-RecoveryExpr 0x125128638 <col:13> '<dependent type>' contains-errors lvalue
      |   | `-BinaryOperator 0x125128720 <line:10:4, col:8> '<dependent type>' contains-errors '='
      |   |   |-RecoveryExpr 0x1251286a0 <col:4> '<dependent type>' contains-errors lvalue
      |   |   | `-DeclRefExpr 0x125128680 <col:4> 'int *' lvalue ParmVar 0x125128128 'f' 'int *'
      |   |   `-RecoveryExpr 0x125128700 <col:8> '<dependent type>' contains-errors lvalue
      |   `-BinaryOperator 0x1251287a0 <line:12:10, col:15> 'int' contains-errors '!='
      |     |-RecoveryExpr 0x125128760 <col:10> '<dependent type>' contains-errors lvalue
      |     `-RecoveryExpr 0x125128780 <col:15> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x125141920 <line:15:3, col:17> '<dependent type>' contains-errors
        |-DeclRefExpr 0x1251418e0 <col:3> 'int ()' Function 0x125141828 'BIO_free_all' 'int ()'
        `-RecoveryExpr 0x125141900 <col:16> '<dependent type>' contains-errors lvalue
