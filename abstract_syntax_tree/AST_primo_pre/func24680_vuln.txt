`-FunctionDecl 0x12f80de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12f80dd58 <col:6> col:6 used HeaderMapImplTest 'int'
  |-ParmVarDecl 0x12f80dcd8 <col:25> col:25 Remove 'int'
  `-CompoundStmt 0x12f828d18 <col:33, line:36:1>
    |-ImplicitCastExpr 0x12f80df70 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x12f80df50 <col:3> 'int' lvalue ParmVar 0x12f80dd58 'HeaderMapImplTest' 'int'
    |-RecoveryExpr 0x12f80dfb8 <line:6:3> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f8284d0 <line:8:3, col:68> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f80e120 <col:3> 'int ()' Function 0x12f80e068 'EXPECT_EQ' 'int ()'
    | |-StringLiteral 0x12f80e180 <col:13> 'char[4]' lvalue "STR"
    | `-CallExpr 0x12f8284b0 <col:20, col:67> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x12f828468 <col:20, col:53> '<dependent type>' contains-errors lvalue .getStringView
    |     `-CallExpr 0x12f828448 <col:20, col:51> '<dependent type>' contains-errors
    |       `-CXXDependentScopeMemberExpr 0x12f828400 <col:20, col:45> '<dependent type>' contains-errors lvalue ->value
    |         `-CallExpr 0x12f80e3c8 <col:20, col:42> '<dependent type>' contains-errors
    |           |-CXXDependentScopeMemberExpr 0x12f80e360 <col:20, col:28> '<dependent type>' contains-errors lvalue .get
    |           | `-RecoveryExpr 0x12f80e340 <col:20> '<dependent type>' contains-errors lvalue
    |           `-RecoveryExpr 0x12f80e3a8 <col:32> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12f8286b0 <line:10:3, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12f828538 <col:3> 'int ()' Function 0x12f80e068 'EXPECT_EQ' 'int ()'
    | |-IntegerLiteral 0x12f828558 <col:13> 'unsigned long' 1
    | `-CallExpr 0x12f828690 <col:18, col:31> '<dependent type>' contains-errors
    |   `-CXXDependentScopeMemberExpr 0x12f828648 <col:18, col:26> '<dependent type>' contains-errors lvalue .size
    |     `-RecoveryExpr 0x12f828628 <col:18> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12f828910 <line:11:3, col:31> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12f8287c0 <col:3> 'int ()' Function 0x12f828708 'EXPECT_FALSE' 'int ()'
      `-CallExpr 0x12f8288f0 <col:16, col:30> '<dependent type>' contains-errors
        `-CXXDependentScopeMemberExpr 0x12f8288a8 <col:16, col:24> '<dependent type>' contains-errors lvalue .empty
          `-RecoveryExpr 0x12f828888 <col:16> '<dependent type>' contains-errors lvalue
