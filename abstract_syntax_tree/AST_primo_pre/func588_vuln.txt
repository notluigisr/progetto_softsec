`-FunctionDecl 0x1299281a8  line:1:1 DECLAREreadFunc 'int (int)'
  |-ParmVarDecl 0x1299280d8 <col:17> col:17 readContigTilesIntoBuffer 'int'
  `-CompoundStmt 0x12a00a0d0 <line:2:1, line:53:1>
    |-DeclStmt 0x129928340 <line:3:2, col:16>
    | `-VarDecl 0x1299282b8 <col:2, col:15> col:6 used status 'int' cinit
    |   `-IntegerLiteral 0x129928320 <col:15> 'int' 1
    |-DeclStmt 0x1299284a0 <line:8:2, col:28>
    | `-VarDecl 0x129928388 <col:2, col:23> col:6 used iskew 'int' cinit
    |   `-BinaryOperator 0x129928480 <col:14, col:23> '<dependent type>' contains-errors '-'
    |     |-RecoveryExpr 0x129928440 <col:14> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x129928460 <col:23> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x129928748 <line:15:2, line:16:10>
    | |-BinaryOperator 0x1299286f8 <line:15:6, col:17> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1299286d8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x129928698 <col:17> 'int' 0
    | `-ReturnStmt 0x129928738 <line:16:3, col:10>
    |   `-IntegerLiteral 0x129928718 <col:10> 'int' 0
    |-LabelStmt 0x12a00a068 <line:50:1, col:5> 'done'
    | `-NullStmt 0x12a00a060 <col:5>
    `-ReturnStmt 0x12a00a0c0 <line:52:2, col:9>
      `-ImplicitCastExpr 0x12a00a0a8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12a00a088 <col:9> 'int' lvalue Var 0x1299282b8 'status' 'int'
