`-FunctionDecl 0x14a026688  line:1:12 do_hidp_sock_ioctl 'int (struct socket *, unsigned int, int)' static
  |-ParmVarDecl 0x14a00e248 <col:31, col:46> col:46 sock 'struct socket *'
  |-ParmVarDecl 0x14a00e2c8 <col:52, col:65> col:65 used cmd 'unsigned int'
  |-ParmVarDecl 0x14a00e340 <col:70, col:75> col:75 __user 'int'
  `-CompoundStmt 0x14a02b3d0 <line:2:1, line:74:1>
    |-DeclStmt 0x14a026908 <line:3:2, col:28>
    | |-RecordDecl 0x14a026790 <col:2, col:9> col:9 struct hidp_connadd_req
    | `-VarDecl 0x14a026888 <col:2, col:26> col:26 invalid ca 'struct hidp_connadd_req'
    |-DeclStmt 0x14a026a98 <line:4:2, col:28>
    | |-RecordDecl 0x14a026920 <col:2, col:9> col:9 struct hidp_conndel_req
    | `-VarDecl 0x14a026a18 <col:2, col:26> col:26 invalid cd 'struct hidp_conndel_req'
    |-DeclStmt 0x14a026c28 <line:5:2, col:29>
    | |-RecordDecl 0x14a026ab0 <col:2, col:9> col:9 struct hidp_connlist_req
    | `-VarDecl 0x14a026ba8 <col:2, col:27> col:27 invalid cl 'struct hidp_connlist_req'
    |-DeclStmt 0x14a026db8 <line:6:2, col:25>
    | |-RecordDecl 0x14a026c40 <col:2, col:9> col:9 struct hidp_conninfo
    | `-VarDecl 0x14a026d38 <col:2, col:23> col:23 invalid ci 'struct hidp_conninfo'
    |-DeclStmt 0x14a026ec0 <line:7:2, col:22>
    | `-VarDecl 0x14a026e58 <col:2, col:17> col:17 used csock 'struct socket *'
    |-DeclStmt 0x14a026f68 <line:8:2, col:22>
    | `-VarDecl 0x14a026f00 <col:2, col:17> col:17 used isock 'struct socket *'
    |-DeclStmt 0x14a027000 <line:9:2, col:9>
    | `-VarDecl 0x14a026f98 <col:2, col:6> col:6 used err 'int'
    |-CallExpr 0x14a027250 <line:11:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14a027140 <col:2> 'int ()' Function 0x14a027088 'BT_DBG' 'int ()'
    | |-StringLiteral 0x14a0271a0 <col:9> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x14a0271c0 <col:16> 'unsigned int' lvalue ParmVar 0x14a00e2c8 'cmd' 'unsigned int'
    | `-RecoveryExpr 0x14a027230 <col:21> '<dependent type>' contains-errors lvalue
    `-SwitchStmt 0x14a0272c0 <line:13:2, line:71:2>
      |-ImplicitCastExpr 0x14a0272a8 <line:13:10> 'unsigned int' <LValueToRValue>
      | `-DeclRefExpr 0x14a027288 <col:10> 'unsigned int' lvalue ParmVar 0x14a00e2c8 'cmd' 'unsigned int'
      `-CompoundStmt 0x14a02b348 <col:15, line:71:2>
        |-IfStmt 0x14a027560 <line:15:3, line:16:12>
        | |-UnaryOperator 0x14a0274a0 <line:15:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow
        | | `-CallExpr 0x14a027478 <col:8, col:29> '<dependent type>' contains-errors
        | |   |-DeclRefExpr 0x14a0273e0 <col:8> 'int ()' Function 0x14a027328 'capable' 'int ()'
        | |   `-RecoveryExpr 0x14a027458 <col:16> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x14a027550 <line:16:4, col:12>
        |   `-UnaryOperator 0x14a027538 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
        |     `-ImplicitCastExpr 0x14a027520 <col:12> '<dependent type>' contains-errors <LValueToRValue>
        |       `-RecoveryExpr 0x14a027500 <col:12> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x14a0290c0 <line:18:3, line:19:12>
        | |-CallExpr 0x14a028fe0 <line:18:7, col:43> '<dependent type>' contains-errors
        | | |-DeclRefExpr 0x14a028eb8 <col:7> 'int ()' Function 0x14a028e00 'copy_from_user' 'int ()'
        | | |-UnaryOperator 0x14a028ef8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
        | | | `-RecoveryExpr 0x14a028ed8 <col:23> '<dependent type>' contains-errors lvalue
        | | |-RecoveryExpr 0x14a028fc0 <col:27> '<dependent type>' contains-errors lvalue
        | | `-UnaryExprOrTypeTraitExpr 0x14a028f68 <col:33, col:42> 'unsigned long' contains-errors sizeof
        | |   `-ParenExpr 0x14a028f48 <col:39, col:42> '<dependent type>' contains-errors lvalue
        | |     `-RecoveryExpr 0x14a028f28 <col:40> '<dependent type>' contains-errors lvalue
        | `-ReturnStmt 0x14a0290b0 <line:19:4, col:12>
        |   `-UnaryOperator 0x14a029098 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
        |     `-ImplicitCastExpr 0x14a029080 <col:12> '<dependent type>' contains-errors <LValueToRValue>
        |       `-RecoveryExpr 0x14a029060 <col:12> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x14a029308 <line:21:3, col:43> 'struct socket *' contains-errors '='
        | |-DeclRefExpr 0x14a0290e0 <col:3> 'struct socket *' lvalue Var 0x14a026e58 'csock' 'struct socket *'
        | `-CallExpr 0x14a0292d8 <col:11, col:43> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a0291e0 <col:11> 'int ()' Function 0x14a029128 'sockfd_lookup' 'int ()'
        |   |-CXXDependentScopeMemberExpr 0x14a029220 <col:25, col:28> '<dependent type>' contains-errors lvalue .ctrl_sock
        |   | `-RecoveryExpr 0x14a029200 <col:25> '<dependent type>' contains-errors lvalue
        |   `-UnaryOperator 0x14a0292c0 <col:39, col:40> 'int *' prefix '&' cannot overflow
        |     `-DeclRefExpr 0x14a029268 <col:40> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-IfStmt 0x14a0293c0 <line:22:3, line:23:11>
        | |-UnaryOperator 0x14a029360 <line:22:7, col:8> 'int' prefix '!' cannot overflow
        | | `-ImplicitCastExpr 0x14a029348 <col:8> 'struct socket *' <LValueToRValue>
        | |   `-DeclRefExpr 0x14a029328 <col:8> 'struct socket *' lvalue Var 0x14a026e58 'csock' 'struct socket *'
        | `-ReturnStmt 0x14a0293b0 <line:23:4, col:11>
        |   `-ImplicitCastExpr 0x14a029398 <col:11> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x14a029378 <col:11> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-BinaryOperator 0x14a0294f0 <line:25:3, col:43> 'struct socket *' contains-errors '='
        | |-DeclRefExpr 0x14a0293e0 <col:3> 'struct socket *' lvalue Var 0x14a026f00 'isock' 'struct socket *'
        | `-CallExpr 0x14a0294c0 <col:11, col:43> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a029400 <col:11> 'int ()' Function 0x14a029128 'sockfd_lookup' 'int ()'
        |   |-CXXDependentScopeMemberExpr 0x14a029440 <col:25, col:28> '<dependent type>' contains-errors lvalue .intr_sock
        |   | `-RecoveryExpr 0x14a029420 <col:25> '<dependent type>' contains-errors lvalue
        |   `-UnaryOperator 0x14a0294a8 <col:39, col:40> 'int *' prefix '&' cannot overflow
        |     `-DeclRefExpr 0x14a029488 <col:40> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-IfStmt 0x14a029770 <line:26:3, line:29:3>
        | |-UnaryOperator 0x14a029548 <line:26:7, col:8> 'int' prefix '!' cannot overflow
        | | `-ImplicitCastExpr 0x14a029530 <col:8> 'struct socket *' <LValueToRValue>
        | |   `-DeclRefExpr 0x14a029510 <col:8> 'struct socket *' lvalue Var 0x14a026f00 'isock' 'struct socket *'
        | `-CompoundStmt 0x14a029750 <col:15, line:29:3>
        |   |-CallExpr 0x14a0296c8 <line:27:4, col:20> 'int'
        |   | |-ImplicitCastExpr 0x14a0296b0 <col:4> 'int (*)()' <FunctionToPointerDecay>
        |   | | `-DeclRefExpr 0x14a029640 <col:4> 'int ()' Function 0x14a029588 'sockfd_put' 'int ()'
        |   | `-ImplicitCastExpr 0x14a0296f0 <col:15> 'struct socket *' <LValueToRValue>
        |   |   `-DeclRefExpr 0x14a029660 <col:15> 'struct socket *' lvalue Var 0x14a026e58 'csock' 'struct socket *'
        |   `-ReturnStmt 0x14a029740 <line:28:4, col:11>
        |     `-ImplicitCastExpr 0x14a029728 <col:11> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x14a029708 <col:11> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-BinaryOperator 0x14a029960 <line:31:3, col:46> 'int' contains-errors '='
        | |-DeclRefExpr 0x14a029790 <col:3> 'int' lvalue Var 0x14a026f98 'err' 'int'
        | `-CallExpr 0x14a029928 <col:9, col:46> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a029890 <col:9> 'int ()' Function 0x14a0297d8 'hidp_connection_add' 'int ()'
        |   |-UnaryOperator 0x14a0298d0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   | `-RecoveryExpr 0x14a0298b0 <col:30> '<dependent type>' contains-errors lvalue
        |   |-DeclRefExpr 0x14a0298e8 <col:34> 'struct socket *' lvalue Var 0x14a026e58 'csock' 'struct socket *'
        |   `-DeclRefExpr 0x14a029908 <col:41> 'struct socket *' lvalue Var 0x14a026f00 'isock' 'struct socket *'
        |-CallExpr 0x14a029d28 <line:35:3, col:19> 'int'
        | |-ImplicitCastExpr 0x14a029d10 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x14a029cd0 <col:3> 'int ()' Function 0x14a029588 'sockfd_put' 'int ()'
        | `-ImplicitCastExpr 0x14a029d50 <col:14> 'struct socket *' <LValueToRValue>
        |   `-DeclRefExpr 0x14a029cf0 <col:14> 'struct socket *' lvalue Var 0x14a026e58 'csock' 'struct socket *'
        |-CallExpr 0x14a029dc0 <line:36:3, col:19> 'int'
        | |-ImplicitCastExpr 0x14a029da8 <col:3> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x14a029d68 <col:3> 'int ()' Function 0x14a029588 'sockfd_put' 'int ()'
        | `-ImplicitCastExpr 0x14a029de8 <col:14> 'struct socket *' <LValueToRValue>
        |   `-DeclRefExpr 0x14a029d88 <col:14> 'struct socket *' lvalue Var 0x14a026f00 'isock' 'struct socket *'
        |-ReturnStmt 0x14a02a838 <line:38:3, col:10>
        | `-ImplicitCastExpr 0x14a02a820 <col:10> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x14a02a800 <col:10> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-ReturnStmt 0x14a02aac0 <line:47:3, col:33>
        | `-CallExpr 0x14a02aa98 <col:10, col:33> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a02aa40 <col:10> 'int ()' Function 0x14a02a988 'hidp_connection_del' 'int ()'
        |   `-UnaryOperator 0x14a02aa80 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-RecoveryExpr 0x14a02aa60 <col:31> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x14a02add0 <line:56:3, col:30> 'int' contains-errors '='
        | |-DeclRefExpr 0x14a02ac50 <col:3> 'int' lvalue Var 0x14a026f98 'err' 'int'
        | `-CallExpr 0x14a02ada8 <col:9, col:30> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a02ad50 <col:9> 'int ()' Function 0x14a02ac98 'hidp_get_connlist' 'int ()'
        |   `-UnaryOperator 0x14a02ad90 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-RecoveryExpr 0x14a02ad70 <col:28> '<dependent type>' contains-errors lvalue
        |-ReturnStmt 0x14a02af50 <line:60:3, col:10>
        | `-ImplicitCastExpr 0x14a02af38 <col:10> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x14a02af18 <col:10> 'int' lvalue Var 0x14a026f98 'err' 'int'
        |-BinaryOperator 0x14a02b1b8 <line:66:3, col:30> 'int' contains-errors '='
        | |-DeclRefExpr 0x14a02b038 <col:3> 'int' lvalue Var 0x14a026f98 'err' 'int'
        | `-CallExpr 0x14a02b190 <col:9, col:30> '<dependent type>' contains-errors
        |   |-DeclRefExpr 0x14a02b138 <col:9> 'int ()' Function 0x14a02b080 'hidp_get_conninfo' 'int ()'
        |   `-UnaryOperator 0x14a02b178 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
        |     `-RecoveryExpr 0x14a02b158 <col:28> '<dependent type>' contains-errors lvalue
        `-ReturnStmt 0x14a02b338 <line:70:3, col:10>
          `-ImplicitCastExpr 0x14a02b320 <col:10> 'int' <LValueToRValue>
            `-DeclRefExpr 0x14a02b300 <col:10> 'int' lvalue Var 0x14a026f98 'err' 'int'
