`-FunctionDecl 0x1280baba8  line:1:1 invalid XkbWriteExplicit 'int (int, int *, char *, int)'
  |-ParmVarDecl 0x1280ba8f0 <col:18, col:29> col:29 invalid xkb 'int'
  |-ParmVarDecl 0x1280ba9a8 <col:34, col:51> col:51 invalid rep 'int *'
  |-ParmVarDecl 0x1280baa28 <col:56, col:62> col:62 used buf 'char *'
  |-ParmVarDecl 0x1280baaa8 <line:2:18, col:28> col:28 invalid client 'int'
  `-CompoundStmt 0x1280d4e70 <line:3:1, line:18:1>
    |-DeclStmt 0x1280bacf0 <line:4:5, col:15>
    | `-VarDecl 0x1280bac88 <col:5, col:14> col:14 used i 'unsigned int'
    |-DeclStmt 0x1280bad88 <line:5:5, col:16>
    | `-VarDecl 0x1280bad20 <col:5, col:11> col:11 used start 'char *'
    |-DeclStmt 0x1280bae50 <line:6:5, col:24>
    | `-VarDecl 0x1280bade8 <col:5, col:20> col:20 used pExp 'unsigned char *'
    |-BinaryOperator 0x1280baec0 <line:8:5, col:13> 'char *' '='
    | |-DeclRefExpr 0x1280bae68 <col:5> 'char *' lvalue Var 0x1280bad20 'start' 'char *'
    | `-ImplicitCastExpr 0x1280baea8 <col:13> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1280bae88 <col:13> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
    |-BinaryOperator 0x1280d40b0 <line:9:5, col:56> 'unsigned char *' contains-errors '='
    | |-DeclRefExpr 0x1280baee0 <col:5> 'unsigned char *' lvalue Var 0x1280bade8 'pExp' 'unsigned char *'
    | `-UnaryOperator 0x1280d4098 <col:12, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-ArraySubscriptExpr 0x1280d4078 <col:13, col:56> '<dependent type>' contains-errors lvalue
    |     |-ImplicitCastExpr 0x1280d4048 <col:13, col:26> '<dependent type>' contains-errors <LValueToRValue>
    |     | `-CXXDependentScopeMemberExpr 0x1280baf68 <col:13, col:26> '<dependent type>' contains-errors lvalue ->explicit
    |     |   `-CXXDependentScopeMemberExpr 0x1280baf20 <col:13, col:18> '<dependent type>' contains-errors lvalue ->server
    |     |     `-RecoveryExpr 0x1280baf00 <col:13> '<dependent type>' contains-errors lvalue
    |     `-ImplicitCastExpr 0x1280d4060 <col:35, col:40> '<dependent type>' contains-errors <LValueToRValue>
    |       `-CXXDependentScopeMemberExpr 0x1280d4000 <col:35, col:40> '<dependent type>' contains-errors lvalue ->firstKeyExplicit
    |         `-RecoveryExpr 0x1280bafb0 <col:35> '<dependent type>' contains-errors lvalue
    |-ForStmt 0x1280d45a0 <line:10:5, line:15:5>
    | |-BinaryOperator 0x1280d4128 <line:10:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1280d40d0 <col:10> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1280d4110 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1280d40f0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1280d41d0 <col:17, col:26> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1280d4148 <col:17> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
    | | `-CXXDependentScopeMemberExpr 0x1280d4188 <col:21, col:26> '<dependent type>' contains-errors lvalue ->nKeyExplicit
    | |   `-RecoveryExpr 0x1280d4168 <col:21> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x1280d4260 <col:40, col:49> 'unsigned char *' ','
    | | |-UnaryOperator 0x1280d4210 <col:40, col:41> 'unsigned int' postfix '++'
    | | | `-DeclRefExpr 0x1280d41f0 <col:40> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
    | | `-UnaryOperator 0x1280d4248 <col:45, col:49> 'unsigned char *' postfix '++'
    | |   `-DeclRefExpr 0x1280d4228 <col:45> 'unsigned char *' lvalue Var 0x1280bade8 'pExp' 'unsigned char *'
    | `-CompoundStmt 0x1280d4588 <col:53, line:15:5>
    |   `-IfStmt 0x1280d4568 <line:11:9, line:14:9>
    |     |-BinaryOperator 0x1280d4320 <line:11:13, col:22> 'int' '!='
    |     | |-ImplicitCastExpr 0x1280d4308 <col:13, col:14> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x1280d42f0 <col:13, col:14> 'unsigned char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x1280d42b8 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x1280d42a0 <col:14> 'unsigned char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x1280d4280 <col:14> 'unsigned char *' lvalue Var 0x1280bade8 'pExp' 'unsigned char *'
    |     | `-IntegerLiteral 0x1280d42d0 <col:22> 'int' 0
    |     `-CompoundStmt 0x1280d4548 <col:25, line:14:9>
    |       |-BinaryOperator 0x1280d4438 <line:12:13, col:31> 'char' contains-errors '='
    |       | |-UnaryOperator 0x1280d4378 <col:13, col:17> 'char' lvalue prefix '*' cannot overflow
    |       | | `-UnaryOperator 0x1280d4360 <col:14, col:17> 'char *' postfix '++'
    |       | |   `-DeclRefExpr 0x1280d4340 <col:14> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
    |       | `-BinaryOperator 0x1280d4418 <col:22, col:31> '<dependent type>' contains-errors '+'
    |       |   |-DeclRefExpr 0x1280d4390 <col:22> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
    |       |   `-CXXDependentScopeMemberExpr 0x1280d43d0 <col:26, col:31> '<dependent type>' contains-errors lvalue ->firstKeyExplicit
    |       |     `-RecoveryExpr 0x1280d43b0 <col:26> '<dependent type>' contains-errors lvalue
    |       `-BinaryOperator 0x1280d4528 <line:13:13, col:23> 'char' '='
    |         |-UnaryOperator 0x1280d4490 <col:13, col:17> 'char' lvalue prefix '*' cannot overflow
    |         | `-UnaryOperator 0x1280d4478 <col:14, col:17> 'char *' postfix '++'
    |         |   `-DeclRefExpr 0x1280d4458 <col:14> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
    |         `-ImplicitCastExpr 0x1280d4510 <col:22, col:23> 'char' <IntegralCast>
    |           `-ImplicitCastExpr 0x1280d44f8 <col:22, col:23> 'unsigned char' <LValueToRValue>
    |             `-UnaryOperator 0x1280d44e0 <col:22, col:23> 'unsigned char' lvalue prefix '*' cannot overflow
    |               `-ImplicitCastExpr 0x1280d44c8 <col:23> 'unsigned char *' <LValueToRValue>
    |                 `-DeclRefExpr 0x1280d44a8 <col:23> 'unsigned char *' lvalue Var 0x1280bade8 'pExp' 'unsigned char *'
    |-BinaryOperator 0x1280d4970 <line:16:5, col:50> 'unsigned int' '='
    | |-DeclRefExpr 0x1280d45d8 <col:5> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x1280d4958 <col:9, col:50> 'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x1280d4938 <col:9, col:50> 'long' '-'
    |     |-ImplicitCastExpr 0x1280d4920 <col:9, col:34> 'long' <IntegralCast>
    |     | `-CallExpr 0x1280d4848 <col:9, col:34> 'int'
    |     |   |-ImplicitCastExpr 0x1280d4830 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     |   | `-DeclRefExpr 0x1280d4750 <col:9> 'int ()' Function 0x1280d4698 'XkbPaddedSize' 'int ()'
    |     |   `-BinaryOperator 0x1280d47e0 <col:23, col:29> 'long' '-'
    |     |     |-ImplicitCastExpr 0x1280d47b0 <col:23> 'char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x1280d4770 <col:23> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
    |     |     `-ImplicitCastExpr 0x1280d47c8 <col:29> 'char *' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1280d4790 <col:29> 'char *' lvalue Var 0x1280bad20 'start' 'char *'
    |     `-ParenExpr 0x1280d4900 <col:38, col:50> 'long'
    |       `-BinaryOperator 0x1280d48e0 <col:39, col:45> 'long' '-'
    |         |-ImplicitCastExpr 0x1280d48b0 <col:39> 'char *' <LValueToRValue>
    |         | `-DeclRefExpr 0x1280d4870 <col:39> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
    |         `-ImplicitCastExpr 0x1280d48c8 <col:45> 'char *' <LValueToRValue>
    |           `-DeclRefExpr 0x1280d4890 <col:45> 'char *' lvalue Var 0x1280bad20 'start' 'char *'
    `-ReturnStmt 0x1280d4e60 <line:17:5, col:18>
      `-ImplicitCastExpr 0x1280d4a20 <col:12, col:18> 'int' <PointerToIntegral>
        `-BinaryOperator 0x1280d4a00 <col:12, col:18> 'char *' '+'
          |-ImplicitCastExpr 0x1280d49d0 <col:12> 'char *' <LValueToRValue>
          | `-DeclRefExpr 0x1280d4990 <col:12> 'char *' lvalue ParmVar 0x1280baa28 'buf' 'char *'
          `-ImplicitCastExpr 0x1280d49e8 <col:18> 'unsigned int' <LValueToRValue>
            `-DeclRefExpr 0x1280d49b0 <col:18> 'unsigned int' lvalue Var 0x1280bac88 'i' 'unsigned int'
