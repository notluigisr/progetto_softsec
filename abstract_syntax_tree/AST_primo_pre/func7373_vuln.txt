`-FunctionDecl 0x11f80dee8  line:1:12 invalid user_reset_fdc 'int (int, int, int)' static
  |-ParmVarDecl 0x11f80dcd8 <col:27, col:31> col:31 used drive 'int'
  |-ParmVarDecl 0x11f80dd58 <col:38, col:42> col:42 used arg 'int'
  |-ParmVarDecl 0x11f80ddf0 <col:47, col:52> col:52 invalid interruptible 'int'
  `-CompoundStmt 0x11f827e98 <line:2:1, line:18:1>
    |-DeclStmt 0x11f80e028 <line:3:2, col:9>
    | `-VarDecl 0x11f80dfc0 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x11f80e2d8 <line:5:2, line:6:11>
    | |-CallExpr 0x11f80e200 <line:5:6, col:35> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x11f80e1a0 <col:6> 'int ()' Function 0x11f80e0e8 'lock_fdc' 'int ()'
    | | |-DeclRefExpr 0x11f80e1c0 <col:15> 'int' lvalue ParmVar 0x11f80dcd8 'drive' 'int'
    | | `-RecoveryExpr 0x11f80e1e0 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x11f80e2c8 <line:6:3, col:11>
    |   `-UnaryOperator 0x11f80e2b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x11f80e298 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x11f80e278 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x11f827cd8 <line:10:2, line:15:2>
    | |-CXXDependentScopeMemberExpr 0x11f827868 <line:10:6, col:12> '<dependent type>' contains-errors lvalue ->reset
    | | `-RecoveryExpr 0x11f827848 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x11f827cb8 <col:19, line:15:2>
    |   |-BinaryOperator 0x11f827ad8 <line:12:3, col:47> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11f8278e0 <col:3> 'int' lvalue Var 0x11f80dfc0 'ret' 'int'
    |   | `-CallExpr 0x11f827aa8 <col:9, col:47> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11f8279e0 <col:9> 'int ()' Function 0x11f827928 'wait_til_done' 'int ()'
    |   |   |-RecoveryExpr 0x11f827a88 <col:23> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x11f827a18 <col:34> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x11f827c98 <line:13:3, line:14:12>
    |     |-BinaryOperator 0x11f827bd0 <line:13:7, col:15> 'int' contains-errors '=='
    |     | |-DeclRefExpr 0x11f827af8 <col:7> 'int' lvalue Var 0x11f80dfc0 'ret' 'int'
    |     | `-UnaryOperator 0x11f827bb8 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     |   `-ImplicitCastExpr 0x11f827ba0 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x11f827b80 <col:15> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x11f827c88 <line:14:4, col:12>
    |       `-UnaryOperator 0x11f827c70 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x11f827c58 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x11f827c38 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11f827e48 <line:16:2, col:21> 'int'
    | `-ImplicitCastExpr 0x11f827e30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x11f827dd8 <col:2> 'int ()' Function 0x11f827d20 'process_fd_request' 'int ()'
    `-ReturnStmt 0x11f827e88 <line:17:2, col:9>
      `-IntegerLiteral 0x11f827e68 <col:9> 'int' 0
