`-FunctionDecl 0x15b928370  line:1:13 invalid build_dirs 'void (char *, char *, int, int)' static
  |-ParmVarDecl 0x15b9280d8 <col:24, col:30> col:30 used src 'char *'
  |-ParmVarDecl 0x15b928158 <col:35, col:41> col:41 used dst 'char *'
  |-ParmVarDecl 0x15b9281f0 <col:46, col:53> col:53 invalid src_prefix_len 'int'
  |-ParmVarDecl 0x15b928270 <col:69, col:76> col:76 invalid dst_prefix_len 'int'
  `-CompoundStmt 0x15b9433d0 <col:92, line:32:1>
    |-DeclStmt 0x15b928558 <line:2:2, col:36>
    | `-VarDecl 0x15b928450 <col:2, col:35> col:8 used p 'char *' cinit
    |   `-BinaryOperator 0x15b928538 <col:12, col:35> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x15b9284f8 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     | |-DeclRefExpr 0x15b9284b8 <col:12> 'char *' lvalue ParmVar 0x15b9280d8 'src' 'char *'
    |     | `-RecoveryExpr 0x15b9284d8 <col:18> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15b928518 <col:35> 'int' 1
    |-DeclStmt 0x15b928690 <line:3:2, col:36>
    | `-VarDecl 0x15b928588 <col:2, col:35> col:8 used q 'char *' cinit
    |   `-BinaryOperator 0x15b928670 <col:12, col:35> '<dependent type>' contains-errors '+'
    |     |-BinaryOperator 0x15b928630 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     | |-DeclRefExpr 0x15b9285f0 <col:12> 'char *' lvalue ParmVar 0x15b928158 'dst' 'char *'
    |     | `-RecoveryExpr 0x15b928610 <col:18> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x15b928650 <col:35> 'int' 1
    |-DeclStmt 0x15b928788 <line:4:2, col:32>
    | `-VarDecl 0x15b9286c0 <col:2, col:18> col:8 used r 'char *' cinit
    |   `-BinaryOperator 0x15b928768 <col:12, col:18> '<dependent type>' contains-errors '+'
    |     |-DeclRefExpr 0x15b928728 <col:12> 'char *' lvalue ParmVar 0x15b928158 'dst' 'char *'
    |     `-RecoveryExpr 0x15b928748 <col:18> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x15b941d98 <line:5:2, col:15>
    | |-RecordDecl 0x15b941800 <col:2, col:9> col:9 struct stat
    | `-VarDecl 0x15b9418f8 <col:2, col:14> col:14 invalid s 'struct stat'
    |-BinaryOperator 0x15b941e30 <line:7:2, col:7> 'char' contains-errors '='
    | |-UnaryOperator 0x15b941de8 <col:2, col:3> 'char' contains-errors lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15b941dd0 <col:3> 'char *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x15b941db0 <col:3> 'char *' contains-errors lvalue Var 0x15b9286c0 'r' 'char *'
    | `-ImplicitCastExpr 0x15b941e18 <col:7> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x15b941e00 <col:7> 'int' 0
    `-ForStmt 0x15b943398 <line:8:2, line:31:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-UnaryOperator 0x15b941ed0 <line:8:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x15b941eb8 <col:10> 'char *' <LValueToRValue>
      |   `-DeclRefExpr 0x15b941e98 <col:10> 'char *' lvalue ParmVar 0x15b928158 'dst' 'char *'
      |-BinaryOperator 0x15b941f58 <col:16, col:22> 'char *' contains-errors ','
      | |-UnaryOperator 0x15b941f08 <col:16, col:17> 'char *' contains-errors postfix '++'
      | | `-DeclRefExpr 0x15b941ee8 <col:16> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
      | `-UnaryOperator 0x15b941f40 <col:21, col:22> 'char *' contains-errors postfix '++'
      |   `-DeclRefExpr 0x15b941f20 <col:21> 'char *' contains-errors lvalue Var 0x15b928588 'q' 'char *'
      `-CompoundStmt 0x15b943378 <col:26, line:31:2>
        |-IfStmt 0x15b942058 <line:9:3, line:11:3>
        | |-BinaryOperator 0x15b942010 <line:9:7, col:13> 'int' contains-errors '=='
        | | |-ImplicitCastExpr 0x15b941ff8 <col:7, col:8> 'int' contains-errors <IntegralCast>
        | | | `-ImplicitCastExpr 0x15b941fe0 <col:7, col:8> 'char' contains-errors <LValueToRValue>
        | | |   `-UnaryOperator 0x15b941fb0 <col:7, col:8> 'char' contains-errors lvalue prefix '*' cannot overflow
        | | |     `-ImplicitCastExpr 0x15b941f98 <col:8> 'char *' contains-errors <LValueToRValue>
        | | |       `-DeclRefExpr 0x15b941f78 <col:8> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
        | | `-CharacterLiteral 0x15b941fc8 <col:13> 'int' 0
        | `-CompoundStmt 0x15b942048 <col:19, line:11:3>
        `-IfStmt 0x15b943358 <line:12:3, line:30:3>
          |-BinaryOperator 0x15b942340 <line:12:7, col:50> 'int' contains-errors '||'
          | |-BinaryOperator 0x15b942110 <col:7, col:13> 'int' contains-errors '=='
          | | |-ImplicitCastExpr 0x15b9420f8 <col:7, col:8> 'int' contains-errors <IntegralCast>
          | | | `-ImplicitCastExpr 0x15b9420e0 <col:7, col:8> 'char' contains-errors <LValueToRValue>
          | | |   `-UnaryOperator 0x15b9420b0 <col:7, col:8> 'char' contains-errors lvalue prefix '*' cannot overflow
          | | |     `-ImplicitCastExpr 0x15b942098 <col:8> 'char *' contains-errors <LValueToRValue>
          | | |       `-DeclRefExpr 0x15b942078 <col:8> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
          | | `-CharacterLiteral 0x15b9420c8 <col:13> 'int' 0
          | `-ParenExpr 0x15b942320 <col:21, col:50> 'int' contains-errors
          |   `-BinaryOperator 0x15b942300 <col:22, col:47> 'int' contains-errors '&&'
          |     |-BinaryOperator 0x15b9421c8 <col:22, col:28> 'int' contains-errors '=='
          |     | |-ImplicitCastExpr 0x15b9421b0 <col:22, col:23> 'int' contains-errors <IntegralCast>
          |     | | `-ImplicitCastExpr 0x15b942198 <col:22, col:23> 'char' contains-errors <LValueToRValue>
          |     | |   `-UnaryOperator 0x15b942168 <col:22, col:23> 'char' contains-errors lvalue prefix '*' cannot overflow
          |     | |     `-ImplicitCastExpr 0x15b942150 <col:23> 'char *' contains-errors <LValueToRValue>
          |     | |       `-DeclRefExpr 0x15b942130 <col:23> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
          |     | `-CharacterLiteral 0x15b942180 <col:28> 'int' 47
          |     `-BinaryOperator 0x15b9422e0 <col:35, col:47> 'int' contains-errors '!='
          |       |-ImplicitCastExpr 0x15b9422c8 <col:35, col:42> 'int' contains-errors <IntegralCast>
          |       | `-ImplicitCastExpr 0x15b9422b0 <col:35, col:42> 'char' contains-errors <LValueToRValue>
          |       |   `-UnaryOperator 0x15b942280 <col:35, col:42> 'char' contains-errors lvalue prefix '*' cannot overflow
          |       |     `-ParenExpr 0x15b942260 <col:36, col:42> 'char *' contains-errors
          |       |       `-BinaryOperator 0x15b942240 <col:37, col:41> 'char *' contains-errors '-'
          |       |         |-ImplicitCastExpr 0x15b942228 <col:37> 'char *' contains-errors <LValueToRValue>
          |       |         | `-DeclRefExpr 0x15b9421e8 <col:37> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
          |       |         `-IntegerLiteral 0x15b942208 <col:41> 'int' 1
          |       `-CharacterLiteral 0x15b942298 <col:47> 'int' 47
          `-CompoundStmt 0x15b943330 <col:53, line:30:3>
            |-BinaryOperator 0x15b9423e0 <line:16:4, col:9> 'char' contains-errors '='
            | |-UnaryOperator 0x15b942398 <col:4, col:5> 'char' contains-errors lvalue prefix '*' cannot overflow
            | | `-ImplicitCastExpr 0x15b942380 <col:5> 'char *' contains-errors <LValueToRValue>
            | |   `-DeclRefExpr 0x15b942360 <col:5> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
            | `-ImplicitCastExpr 0x15b9423c8 <col:9> 'char' <IntegralCast>
            |   `-CharacterLiteral 0x15b9423b0 <col:9> 'int' 0
            |-IfStmt 0x15b9431a0 <line:17:4, line:24:4>
            | |-BinaryOperator 0x15b9427d8 <line:17:8, col:47> 'int' contains-errors '&&'
            | | |-BinaryOperator 0x15b942628 <col:8, col:25> 'int' contains-errors '=='
            | | | |-CallExpr 0x15b9425d8 <col:8, col:20> '<dependent type>' contains-errors
            | | | | |-DeclRefExpr 0x15b942560 <col:8> 'int ()' Function 0x15b9424a8 'stat' 'int ()'
            | | | | |-DeclRefExpr 0x15b942580 <col:13> 'char *' lvalue ParmVar 0x15b9280d8 'src' 'char *'
            | | | | `-UnaryOperator 0x15b9425c0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | | |   `-RecoveryExpr 0x15b9425a0 <col:19> '<dependent type>' contains-errors lvalue
            | | | `-IntegerLiteral 0x15b942608 <col:25> 'int' 0
            | | `-CallExpr 0x15b9427b0 <col:30, col:47> '<dependent type>' contains-errors
            | |   |-DeclRefExpr 0x15b942728 <col:30> 'int ()' Function 0x15b942670 'S_ISDIR' 'int ()'
            | |   `-CXXDependentScopeMemberExpr 0x15b942768 <col:38, col:40> '<dependent type>' contains-errors lvalue .st_mode
            | |     `-RecoveryExpr 0x15b942748 <col:38> '<dependent type>' contains-errors lvalue
            | `-CompoundStmt 0x15b943170 <col:50, line:24:4>
            |   |-BinaryOperator 0x15b942e80 <line:20:5, col:10> 'char' contains-errors '='
            |   | |-UnaryOperator 0x15b942e38 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
            |   | | `-ImplicitCastExpr 0x15b942e20 <col:6> 'char *' contains-errors <LValueToRValue>
            |   | |   `-DeclRefExpr 0x15b942e00 <col:6> 'char *' contains-errors lvalue Var 0x15b928588 'q' 'char *'
            |   | `-ImplicitCastExpr 0x15b942e68 <col:10> 'char' <IntegralCast>
            |   |   `-CharacterLiteral 0x15b942e50 <col:10> 'int' 0
            |   |-BinaryOperator 0x15b942f20 <line:21:5, col:10> 'char' contains-errors '='
            |   | |-UnaryOperator 0x15b942ed8 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
            |   | | `-ImplicitCastExpr 0x15b942ec0 <col:6> 'char *' contains-errors <LValueToRValue>
            |   | |   `-DeclRefExpr 0x15b942ea0 <col:6> 'char *' contains-errors lvalue Var 0x15b9286c0 'r' 'char *'
            |   | `-ImplicitCastExpr 0x15b942f08 <col:10> 'char' <IntegralCast>
            |   |   `-CharacterLiteral 0x15b942ef0 <col:10> 'int' 47
            |   |-BinaryOperator 0x15b942f98 <line:22:5, col:9> 'char *' contains-errors '='
            |   | |-DeclRefExpr 0x15b942f40 <col:5> 'char *' contains-errors lvalue Var 0x15b9286c0 'r' 'char *'
            |   | `-ImplicitCastExpr 0x15b942f80 <col:9> 'char *' contains-errors <LValueToRValue>
            |   |   `-DeclRefExpr 0x15b942f60 <col:9> 'char *' contains-errors lvalue Var 0x15b928588 'q' 'char *'
            |   `-CallExpr 0x15b943140 <line:23:5, col:44> '<dependent type>' contains-errors
            |     |-DeclRefExpr 0x15b943098 <col:5> 'int ()' Function 0x15b942fe0 'create_empty_dir_as_root' 'int ()'
            |     |-DeclRefExpr 0x15b9430b8 <col:30> 'char *' lvalue ParmVar 0x15b928158 'dst' 'char *'
            |     `-CXXDependentScopeMemberExpr 0x15b9430f8 <col:35, col:37> '<dependent type>' contains-errors lvalue .st_mode
            |       `-RecoveryExpr 0x15b9430d8 <col:35> '<dependent type>' contains-errors lvalue
            `-IfStmt 0x15b943310 <line:25:4, line:29:4>
              |-UnaryOperator 0x15b943240 <line:25:8, col:9> 'int' prefix '!' cannot overflow
              | `-ImplicitCastExpr 0x15b943228 <col:9> 'char *' <LValueToRValue>
              |   `-DeclRefExpr 0x15b943208 <col:9> 'char *' lvalue ParmVar 0x15b928158 'dst' 'char *'
              `-CompoundStmt 0x15b9432f8 <col:15, line:29:4>
                `-BinaryOperator 0x15b9432d8 <line:28:5, col:10> 'char' contains-errors '='
                  |-UnaryOperator 0x15b943290 <col:5, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow
                  | `-ImplicitCastExpr 0x15b943278 <col:6> 'char *' contains-errors <LValueToRValue>
                  |   `-DeclRefExpr 0x15b943258 <col:6> 'char *' contains-errors lvalue Var 0x15b928450 'p' 'char *'
                  `-ImplicitCastExpr 0x15b9432c0 <col:10> 'char' <IntegralCast>
                    `-CharacterLiteral 0x15b9432a8 <col:10> 'int' 47
