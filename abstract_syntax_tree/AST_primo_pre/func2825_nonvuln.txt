`-FunctionDecl 0x13e026600  line:1:6 hci_sock_dev_event 'void (struct hci_dev *, int)'
  |-ParmVarDecl 0x13e00e248 <col:25, col:41> col:41 used hdev 'struct hci_dev *'
  |-ParmVarDecl 0x13e00e2c8 <col:47, col:51> col:51 used event 'int'
  `-CompoundStmt 0x13d923cd8 <line:2:1, line:43:1>
    |-DeclStmt 0x13e026878 <line:3:2, col:28>
    | |-RecordDecl 0x13e026700 <col:2, col:9> col:9 struct hci_ev_si_device
    | `-VarDecl 0x13e0267f8 <col:2, col:26> col:26 referenced invalid ev 'struct hci_ev_si_device'
    |-CallExpr 0x13e026ac0 <line:5:2, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e0269c0 <col:2> 'int ()' Function 0x13e026908 'BT_DBG' 'int ()'
    | |-StringLiteral 0x13e026a20 <col:9> 'char[4]' lvalue "STR"
    | |-RecoveryExpr 0x13e026a78 <col:16, col:22> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13e026a40 <col:16> 'struct hci_dev *' lvalue ParmVar 0x13e00e248 'hdev' 'struct hci_dev *'
    | `-DeclRefExpr 0x13e026aa0 <col:28> 'int' lvalue ParmVar 0x13e00e2c8 'event' 'int'
    |-IfStmt 0x13e027480 <line:8:2, line:16:2>
    | |-CallExpr 0x13e026c88 <line:8:6, col:34> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x13e026bd8 <col:6> 'int ()' Function 0x13e026b20 'atomic_read' 'int ()'
    | | `-UnaryOperator 0x13e026c70 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   `-RecoveryExpr 0x13e026c50 <col:19> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13e027458 <col:37, line:16:2>
    |   |-DeclStmt 0x13e026e98 <line:9:3, col:22>
    |   | |-RecordDecl 0x13e026cb0 <col:3, col:10> col:10 struct sk_buff
    |   | `-VarDecl 0x13e026e18 <col:3, col:19> col:19 used skb 'struct sk_buff *'
    |   |-BinaryOperator 0x13e0270d0 <line:11:3, col:41> 'struct sk_buff *' '='
    |   | |-DeclRefExpr 0x13e026eb0 <col:3> 'struct sk_buff *' lvalue Var 0x13e026e18 'skb' 'struct sk_buff *'
    |   | `-ImplicitCastExpr 0x13e0270b8 <col:9, col:41> 'struct sk_buff *' <IntegralToPointer>
    |   |   `-CallExpr 0x13e027058 <col:9, col:41> 'int'
    |   |     |-ImplicitCastExpr 0x13e027040 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x13e026fb0 <col:9> 'int ()' Function 0x13e026ef8 'create_monitor_event' 'int ()'
    |   |     |-ImplicitCastExpr 0x13e027088 <col:30> 'struct hci_dev *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x13e026fd0 <col:30> 'struct hci_dev *' lvalue ParmVar 0x13e00e248 'hdev' 'struct hci_dev *'
    |   |     `-ImplicitCastExpr 0x13e0270a0 <col:36> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x13e026ff0 <col:36> 'int' lvalue ParmVar 0x13e00e2c8 'event' 'int'
    |   `-IfStmt 0x13e027438 <line:12:3, line:15:3>
    |     |-ImplicitCastExpr 0x13e027110 <line:12:7> 'struct sk_buff *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13e0270f0 <col:7> 'struct sk_buff *' lvalue Var 0x13e026e18 'skb' 'struct sk_buff *'
    |     `-CompoundStmt 0x13e027418 <col:12, line:15:3>
    |       |-CallExpr 0x13e027260 <line:13:4, col:26> 'int'
    |       | |-ImplicitCastExpr 0x13e027248 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x13e027208 <col:4> 'int ()' Function 0x13e027150 'send_monitor_event' 'int ()'
    |       | `-ImplicitCastExpr 0x13e027288 <col:23> 'struct sk_buff *' <LValueToRValue>
    |       |   `-DeclRefExpr 0x13e027228 <col:23> 'struct sk_buff *' lvalue Var 0x13e026e18 'skb' 'struct sk_buff *'
    |       `-CallExpr 0x13e0273d8 <line:14:4, col:17> 'int'
    |         |-ImplicitCastExpr 0x13e0273c0 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x13e027380 <col:4> 'int ()' Function 0x13e0272c8 'kfree_skb' 'int ()'
    |         `-ImplicitCastExpr 0x13e027400 <col:14> 'struct sk_buff *' <LValueToRValue>
    |           `-DeclRefExpr 0x13e0273a0 <col:14> 'struct sk_buff *' lvalue Var 0x13e026e18 'skb' 'struct sk_buff *'
    |-BinaryOperator 0x13e027550 <line:19:2, col:14> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13e0274e8 <col:2, col:5> '<dependent type>' contains-errors lvalue .event
    | | `-RecoveryExpr 0x13e0274c0 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e0274a0 <col:2> 'struct hci_ev_si_device' lvalue Var 0x13e0267f8 'ev' 'struct hci_ev_si_device'
    | `-DeclRefExpr 0x13e027530 <col:14> 'int' lvalue ParmVar 0x13e00e2c8 'event' 'int'
    |-BinaryOperator 0x13d922660 <line:20:2, col:20> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x13e0275b8 <col:2, col:5> '<dependent type>' contains-errors lvalue .dev_id
    | | `-RecoveryExpr 0x13e027590 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x13e027570 <col:2> 'struct hci_ev_si_device' lvalue Var 0x13e0267f8 'ev' 'struct hci_ev_si_device'
    | `-RecoveryExpr 0x13d922638 <col:14, col:20> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x13d922600 <col:14> 'struct hci_dev *' lvalue ParmVar 0x13e00e248 'hdev' 'struct hci_dev *'
    |-CallExpr 0x13d9228c8 <line:21:2, col:54> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13d922760 <col:2> 'int ()' Function 0x13d9226a8 'hci_si_event' 'int ()'
    | |-RecoveryExpr 0x13d922888 <col:15> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x13d9228a8 <col:21> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x13d9227f0 <col:39, col:48> 'unsigned long' contains-errors sizeof
    | | `-ParenExpr 0x13d9227d0 <col:45, col:48> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x13d9227b0 <col:46> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x13d922830 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x13d922810 <col:52> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13d923cb8 <line:23:2, line:42:2>
      |-BinaryOperator 0x13d922980 <line:23:6, col:15> 'int' contains-errors '=='
      | |-DeclRefExpr 0x13d922908 <col:6> 'int' lvalue ParmVar 0x13e00e2c8 'event' 'int'
      | `-RecoveryExpr 0x13d922960 <col:15> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13d923c80 <col:30, line:42:2>
        |-DeclStmt 0x13d922b88 <line:24:3, col:18>
        | |-RecordDecl 0x13d9229a0 <col:3, col:10> col:10 struct sock
        | `-VarDecl 0x13d922b08 <col:3, col:16> col:16 used sk 'struct sock *'
        |-DeclStmt 0x13d922d88 <line:25:3, col:26>
        | |-RecordDecl 0x13d922ba0 <col:3, col:10> col:10 struct hlist_node
        | `-VarDecl 0x13d922d08 <col:3, col:22> col:22 used node 'struct hlist_node *'
        |-CallExpr 0x13d922fc0 <line:28:3, col:30> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13d922e80 <col:3> 'int ()' Function 0x13d922dc8 'read_lock' 'int ()'
        | `-UnaryOperator 0x13d922fa8 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-CXXDependentScopeMemberExpr 0x13d922f60 <col:14, col:26> '<dependent type>' contains-errors lvalue .lock
        |     `-RecoveryExpr 0x13d922f40 <col:14> '<dependent type>' contains-errors lvalue
        |-CallExpr 0x13d923258 <line:29:3, col:42> '<dependent type>' contains-errors
        | |-DeclRefExpr 0x13d9230c8 <col:3> 'int ()' Function 0x13d923010 'sk_for_each' 'int ()'
        | |-DeclRefExpr 0x13d9230e8 <col:15> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
        | |-DeclRefExpr 0x13d923108 <col:19> 'struct hlist_node *' lvalue Var 0x13d922d08 'node' 'struct hlist_node *'
        | `-UnaryOperator 0x13d923240 <col:25, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-CXXDependentScopeMemberExpr 0x13d9231f8 <col:26, col:38> '<dependent type>' contains-errors lvalue .head
        |     `-RecoveryExpr 0x13d9231d8 <col:26> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x13d923b58 <col:44, line:40:3>
          |-CallExpr 0x13d9233c8 <line:30:4, col:26> 'int'
          | |-ImplicitCastExpr 0x13d9233b0 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x13d923370 <col:4> 'int ()' Function 0x13d9232b8 'bh_lock_sock_nested' 'int ()'
          | `-ImplicitCastExpr 0x13d9233f0 <col:24> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x13d923390 <col:24> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
          |-IfStmt 0x13d9239c0 <line:31:4, line:38:4>
          | |-BinaryOperator 0x13d9235c8 <line:31:8, col:28> 'int' contains-errors '=='
          | | |-RecoveryExpr 0x13d923580 <col:8, col:20> '<dependent type>' contains-errors lvalue
          | | | `-CallExpr 0x13d923540 <col:8, col:17> 'int'
          | | |   |-ImplicitCastExpr 0x13d923528 <col:8> 'int (*)()' <FunctionToPointerDecay>
          | | |   | `-DeclRefExpr 0x13d9234e8 <col:8> 'int ()' Function 0x13d923430 'hci_pi' 'int ()'
          | | |   `-ImplicitCastExpr 0x13d923568 <col:15> 'struct sock *' <LValueToRValue>
          | | |     `-DeclRefExpr 0x13d923508 <col:15> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
          | | `-DeclRefExpr 0x13d9235a8 <col:28> 'struct hci_dev *' lvalue ParmVar 0x13e00e248 'hdev' 'struct hci_dev *'
          | `-CompoundStmt 0x13d9239a0 <col:34, line:38:4>
          |   |-CallExpr 0x13d923800 <line:35:5, col:27> '<dependent type>' contains-errors
          |   | |-RecoveryExpr 0x13d9237b8 <col:5, col:9> '<dependent type>' contains-errors lvalue
          |   | | `-DeclRefExpr 0x13d923780 <col:5> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
          |   | `-DeclRefExpr 0x13d9237e0 <col:25> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
          |   `-CallExpr 0x13d923960 <line:37:5, col:21> 'int'
          |     |-ImplicitCastExpr 0x13d923948 <col:5> 'int (*)()' <FunctionToPointerDecay>
          |     | `-DeclRefExpr 0x13d923908 <col:5> 'int ()' Function 0x13d923850 'hci_dev_put' 'int ()'
          |     `-ImplicitCastExpr 0x13d923988 <col:17> 'struct hci_dev *' <LValueToRValue>
          |       `-DeclRefExpr 0x13d923928 <col:17> 'struct hci_dev *' lvalue ParmVar 0x13e00e248 'hdev' 'struct hci_dev *'
          `-CallExpr 0x13d923b18 <line:39:4, col:21> 'int'
            |-ImplicitCastExpr 0x13d923b00 <col:4> 'int (*)()' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x13d923ac0 <col:4> 'int ()' Function 0x13d923a08 'bh_unlock_sock' 'int ()'
            `-ImplicitCastExpr 0x13d923b40 <col:19> 'struct sock *' <LValueToRValue>
              `-DeclRefExpr 0x13d923ae0 <col:19> 'struct sock *' lvalue Var 0x13d922b08 'sk' 'struct sock *'
