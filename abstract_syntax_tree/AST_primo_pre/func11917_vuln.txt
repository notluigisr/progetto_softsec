`-FunctionDecl 0x12e0083e8  line:1:5 usb_cypress_load_firmware 'int (struct usb_device *, const struct firmware *, int)'
  |-ParmVarDecl 0x12d80e248 <col:31, col:50> col:50 used udev 'struct usb_device *'
  |-ParmVarDecl 0x12e008228 <col:56, col:79> col:79 used fw 'const struct firmware *'
  |-ParmVarDecl 0x12e0082a8 <col:83, col:87> col:87 used type 'int'
  `-CompoundStmt 0x12e00c658 <line:2:1, line:46:1>
    |-DeclStmt 0x12e0086d8 <line:3:2, col:20>
    | |-RecordDecl 0x12e0084f0 <col:2, col:9> col:9 struct hexline
    | `-VarDecl 0x12e008658 <col:2, col:18> col:18 used hx 'struct hexline *'
    |-DeclStmt 0x12e008840 <line:5:2, col:15>
    | |-VarDecl 0x12e008720 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x12e0087a0 <col:2, col:14> col:10 used pos 'int' cinit
    |   `-IntegerLiteral 0x12e008808 <col:14> 'int' 0
    |-IfStmt 0x12e008b30 <line:8:2, line:9:11>
    | |-UnaryOperator 0x12e008a70 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12e008a58 <col:7> 'struct hexline *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12e008a38 <col:7> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    | `-ReturnStmt 0x12e008b20 <line:9:3, col:11>
    |   `-UnaryOperator 0x12e008b08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x12e008af0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x12e008ad0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12e008f68 <line:13:2, line:14:12>
    | |-RecoveryExpr 0x12e008d58 <line:13:6, col:83> '_Bool' contains-errors
    | `-CallExpr 0x12e008f28 <line:14:3, col:12> 'int'
    |   |-ImplicitCastExpr 0x12e008f10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12e008e58 <col:3> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |   `-ImplicitCastExpr 0x12e008f50 <col:7> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x12e008ec0 <col:7> 'char[4]' lvalue "STR"
    |-WhileStmt 0x12e00bee8 <line:16:2, line:26:2>
    | |-BinaryOperator 0x12e00b840 <line:16:9, col:53> 'int' '>'
    | | |-ParenExpr 0x12e00b800 <col:9, col:49> 'int'
    | | | `-BinaryOperator 0x12e0091d8 <col:10, col:48> 'int' '='
    | | |   |-DeclRefExpr 0x12e008f88 <col:10> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | |   `-CallExpr 0x12e009170 <col:16, col:48> 'int'
    | | |     |-ImplicitCastExpr 0x12e009158 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x12e009088 <col:16> 'int ()' Function 0x12e008fd0 'dvb_usb_get_hexline' 'int ()'
    | | |     |-ImplicitCastExpr 0x12e0091a8 <col:36> 'const struct firmware *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e0090a8 <col:36> 'const struct firmware *' lvalue ParmVar 0x12e008228 'fw' 'const struct firmware *'
    | | |     |-ImplicitCastExpr 0x12e0091c0 <col:40> 'struct hexline *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e0090c8 <col:40> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    | | |     `-UnaryOperator 0x12e009140 <col:44, col:45> 'int *' prefix '&' cannot overflow
    | | |       `-DeclRefExpr 0x12e0090e8 <col:45> 'int' lvalue Var 0x12e0087a0 'pos' 'int'
    | | `-IntegerLiteral 0x12e00b820 <col:53> 'int' 0
    | `-CompoundStmt 0x12e00bec0 <col:56, line:26:2>
    |   |-CallExpr 0x12e00baa0 <line:17:3, col:43> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x12e00b940 <col:3> 'int ()' Function 0x12e00b888 'deb_fw' 'int ()'
    |   | |-StringLiteral 0x12e00b960 <col:10> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x12e00b9b8 <col:17, col:21> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e00b980 <col:17> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   | |-RecoveryExpr 0x12e00ba18 <col:27, col:31> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x12e00b9e0 <col:27> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   | `-RecoveryExpr 0x12e00ba78 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x12e00ba40 <col:36> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |-BinaryOperator 0x12e00bca0 <line:18:3, col:63> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x12e00bae0 <col:3> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |   | `-CallExpr 0x12e00bc60 <col:9, col:63> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x12e00bb00 <col:9> 'int ()' Function 0x12e008bb8 'usb_cypress_writemem' 'int ()'
    |   |   |-DeclRefExpr 0x12e00bb20 <col:30> 'struct usb_device *' lvalue ParmVar 0x12d80e248 'udev' 'struct usb_device *'
    |   |   |-RecoveryExpr 0x12e00bb78 <col:36, col:40> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x12e00bb40 <col:36> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |   |-RecoveryExpr 0x12e00bbd8 <col:46, col:50> '<dependent type>' contains-errors lvalue
    |   |   | `-DeclRefExpr 0x12e00bba0 <col:46> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   |   `-RecoveryExpr 0x12e00bc38 <col:56, col:60> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x12e00bc00 <col:56> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   `-IfStmt 0x12e00bea0 <line:20:3, line:25:3>
    |     |-BinaryOperator 0x12e00bd40 <line:20:7, col:18> 'int' contains-errors '!='
    |     | |-DeclRefExpr 0x12e00bcc0 <col:7> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |     | `-RecoveryExpr 0x12e00bd18 <col:14, col:18> '<dependent type>' contains-errors lvalue
    |     |   `-DeclRefExpr 0x12e00bce0 <col:14> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |     `-CompoundStmt 0x12e00be80 <col:23, line:25:3>
    |       |-CallExpr 0x12e00be20 <line:21:4, line:22:17> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x12e00bd60 <line:21:4> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |       | |-StringLiteral 0x12e00bd80 <col:8> 'char[4]' lvalue "STR"
    |       | |-DeclRefExpr 0x12e00bda0 <line:22:5> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |       | `-RecoveryExpr 0x12e00bdf8 <col:10, col:14> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x12e00bdc0 <col:10> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |       `-BreakStmt 0x12e00be78 <line:24:4>
    |-IfStmt 0x12e00c280 <line:27:2, line:31:2>
    | |-BinaryOperator 0x12e00bf60 <line:27:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x12e00bf48 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e00bf08 <col:6> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | `-IntegerLiteral 0x12e00bf28 <col:12> 'int' 0
    | `-CompoundStmt 0x12e00c258 <col:15, line:31:2>
    |   |-CallExpr 0x12e00c018 <line:28:3, col:20> 'int'
    |   | |-ImplicitCastExpr 0x12e00c000 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e00bf80 <col:3> 'int ()' Function 0x12e008da0 'err' 'int ()'
    |   | |-ImplicitCastExpr 0x12e00c050 <col:7> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x12e00bfa0 <col:7> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x12e00c068 <col:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12e00bfc0 <col:13> 'int' lvalue Var 0x12e0087a0 'pos' 'int'
    |   | `-ImplicitCastExpr 0x12e00c080 <col:17> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e00bfe0 <col:17> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |   |-CallExpr 0x12e00c1d0 <line:29:3, col:11> 'int'
    |   | |-ImplicitCastExpr 0x12e00c1b8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12e00c178 <col:3> 'int ()' Function 0x12e00c0c0 'kfree' 'int ()'
    |   | `-ImplicitCastExpr 0x12e00c1f8 <col:9> 'struct hexline *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12e00c198 <col:9> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    |   `-ReturnStmt 0x12e00c248 <line:30:3, col:10>
    |     `-ImplicitCastExpr 0x12e00c230 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12e00c210 <col:10> 'int' lvalue Var 0x12e008720 'ret' 'int'
    |-IfStmt 0x12e00c548 <line:33:2, line:41:3> has_else
    | |-BinaryOperator 0x12e00c2f8 <line:33:6, col:13> 'int' '=='
    | | |-ImplicitCastExpr 0x12e00c2e0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e00c2a0 <col:6> 'int' lvalue Var 0x12e008720 'ret' 'int'
    | | `-IntegerLiteral 0x12e00c2c0 <col:13> 'int' 0
    | |-CompoundStmt 0x12e00c508 <col:16, line:40:2>
    | | `-IfStmt 0x12e00c4e8 <line:36:3, line:39:3>
    | |   |-RecoveryExpr 0x12e00c3f8 <line:36:7, col:83> '_Bool' contains-errors
    | |   `-CompoundStmt 0x12e00c4d0 <col:86, line:39:3>
    | |     `-CallExpr 0x12e00c470 <line:37:4, col:13> 'int'
    | |       |-ImplicitCastExpr 0x12e00c458 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x12e00c418 <col:4> 'int ()' Function 0x12e008da0 'err' 'int ()'
    | |       `-ImplicitCastExpr 0x12e00c498 <col:8> 'char *' <ArrayToPointerDecay>
    | |         `-StringLiteral 0x12e00c438 <col:8> 'char[4]' lvalue "STR"
    | `-NullStmt 0x12e00c540 <line:41:3>
    |-CallExpr 0x12e00c5d0 <line:43:2, col:10> 'int'
    | |-ImplicitCastExpr 0x12e00c5b8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12e00c578 <col:2> 'int ()' Function 0x12e00c0c0 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x12e00c5f8 <col:8> 'struct hexline *' <LValueToRValue>
    |   `-DeclRefExpr 0x12e00c598 <col:8> 'struct hexline *' lvalue Var 0x12e008658 'hx' 'struct hexline *'
    `-ReturnStmt 0x12e00c648 <line:45:2, col:9>
      `-ImplicitCastExpr 0x12e00c630 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12e00c610 <col:9> 'int' lvalue Var 0x12e008720 'ret' 'int'
