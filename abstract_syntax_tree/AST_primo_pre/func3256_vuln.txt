`-FunctionDecl 0x15100df10  line:1:13 invalid transit 'void (int *, const char *, int)' static
  |-ParmVarDecl 0x15100dd28 <col:21, col:33> col:33 referenced invalid session 'int *'
  |-ParmVarDecl 0x15100dda8 <col:42, col:54> col:54 used action 'const char *'
  |-ParmVarDecl 0x15100de28 <col:62, col:79> col:79 invalid nstate 'int'
  `-CompoundStmt 0x151028af8 <line:2:1, line:29:1>
    `-IfStmt 0x151028ad8 <line:3:5, line:28:5>
      |-BinaryOperator 0x15100e058 <line:3:9, col:27> 'int' contains-errors '!='
      | |-CXXDependentScopeMemberExpr 0x15100dff0 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state
      | | `-RecoveryExpr 0x15100dfd0 <col:9> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x15100e038 <col:27> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x151028aa8 <col:35, line:28:5>
        |-DeclStmt 0x15100e130 <line:4:9, col:33>
        | `-VarDecl 0x15100e090 <col:9, col:22> col:13 used loglvl 'int' cinit
        |   `-RecoveryExpr 0x15100e110 <col:22> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x151027e58 <line:5:9, line:8:9>
        | |-RecoveryExpr 0x15100e378 <line:5:13, line:6:85> '_Bool' contains-errors
        | `-CompoundStmt 0x151027e40 <col:87, line:8:9>
        |   `-BinaryOperator 0x151027e20 <line:7:13, col:22> 'int' contains-errors '='
        |     |-DeclRefExpr 0x15100e398 <col:13> 'int' contains-errors lvalue Var 0x15100e090 'loglvl' 'int'
        |     `-RecoveryExpr 0x151027e00 <col:22> '<dependent type>' contains-errors lvalue
        |-BinaryOperator 0x1510285f8 <line:14:9, col:26> '<dependent type>' contains-errors '='
        | |-CXXDependentScopeMemberExpr 0x151028590 <col:9, col:18> '<dependent type>' contains-errors lvalue ->state
        | | `-RecoveryExpr 0x151028568 <col:9> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x151028548 <col:9> 'int *' lvalue ParmVar 0x15100dd28 'session' 'int *'
        | `-RecoveryExpr 0x1510285d8 <col:26> '<dependent type>' contains-errors lvalue
        `-SwitchStmt 0x151028698 <line:15:9, line:27:9>
          |-ImplicitCastExpr 0x151028680 <line:15:17, col:26> '<dependent type>' contains-errors <LValueToRValue>
          | `-CXXDependentScopeMemberExpr 0x151028638 <col:17, col:26> '<dependent type>' contains-errors lvalue ->state
          |   `-RecoveryExpr 0x151028618 <col:17> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x151028a78 <col:33, line:27:9>
            |-BreakStmt 0x151028920 <line:20:17>
            |-CallExpr 0x151028a10 <line:22:17, col:67> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x151028940 <col:17> 'int ()' Function 0x151028700 'update_child_status' 'int ()'
            | |-RecoveryExpr 0x151028960 <col:37> '<dependent type>' contains-errors lvalue
            | |-RecoveryExpr 0x1510289f0 <col:46> '<dependent type>' contains-errors lvalue
            | `-StringLiteral 0x151028998 <col:62> 'char[4]' lvalue "STR"
            |-BreakStmt 0x151028a48 <line:23:17>
            `-DefaultStmt 0x151028a58 <line:24:13, line:26:17>
              `-BreakStmt 0x151028a50 <col:17>
