`-FunctionDecl 0x13e00dfa0  line:1:6 referenced invalid Huff_transmit 'void (int *, int, int *, int)'
  |-ParmVarDecl 0x13e00dd28 <col:21, col:29> col:29 invalid huff 'int *'
  |-ParmVarDecl 0x13e00dda8 <col:35, col:39> col:39 used ch 'int'
  |-ParmVarDecl 0x13e00de28 <col:43, col:49> col:49 invalid fout 'int *'
  |-ParmVarDecl 0x13e00dea8 <col:55, col:59> col:59 used maxoffset 'int'
  `-CompoundStmt 0x13e0280d0 <col:70, line:12:1>
    |-DeclStmt 0x13e00e0e8 <line:2:2, col:7>
    | `-VarDecl 0x13e00e080 <col:2, col:6> col:6 used i 'int'
    `-IfStmt 0x13e0280a0 <line:3:2, line:11:2> has_else
      |-BinaryOperator 0x13e00e2d0 <line:3:6, col:23> 'int' contains-errors '=='
      | |-ArraySubscriptExpr 0x13e00e290 <col:6, col:18> '<dependent type>' contains-errors lvalue
      | | |-ImplicitCastExpr 0x13e00e260 <col:6, col:12> '<dependent type>' contains-errors <LValueToRValue>
      | | | `-CXXDependentScopeMemberExpr 0x13e00e120 <col:6, col:12> '<dependent type>' contains-errors lvalue ->loc
      | | |   `-RecoveryExpr 0x13e00e100 <col:6> '<dependent type>' contains-errors lvalue
      | | `-ImplicitCastExpr 0x13e00e278 <col:16> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x13e00e168 <col:16> 'int' lvalue ParmVar 0x13e00dda8 'ch' 'int'
      | `-RecoveryExpr 0x13e00e2b0 <col:23> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x13e027cf8 <col:29, line:9:2>
      | |-CallExpr 0x13e027820 <line:5:3, col:43> '<dependent type>' contains-errors
      | | |-RecoveryExpr 0x13e00e310 <col:3> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x13e00e2f0 <col:3> 'void (int *, int, int *, int)' Function 0x13e00dfa0 'Huff_transmit' 'void (int *, int, int *, int)'
      | | |-RecoveryExpr 0x13e00e338 <col:17> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x13e027800 <col:23> '<dependent type>' contains-errors lvalue
      | | |-RecoveryExpr 0x13e00e370 <col:28> '<dependent type>' contains-errors lvalue
      | | `-DeclRefExpr 0x13e00e390 <col:34> 'int' lvalue ParmVar 0x13e00dea8 'maxoffset' 'int'
      | `-ForStmt 0x13e027cc0 <line:6:3, line:8:3>
      |   |-BinaryOperator 0x13e0278a0 <line:6:8, col:12> 'int' '='
      |   | |-DeclRefExpr 0x13e027860 <col:8> 'int' lvalue Var 0x13e00e080 'i' 'int'
      |   | `-IntegerLiteral 0x13e027880 <col:12> 'int' 7
      |   |-<<<NULL>>>
      |   |-BinaryOperator 0x13e027918 <col:15, col:20> 'int' '>='
      |   | |-ImplicitCastExpr 0x13e027900 <col:15> 'int' <LValueToRValue>
      |   | | `-DeclRefExpr 0x13e0278c0 <col:15> 'int' lvalue Var 0x13e00e080 'i' 'int'
      |   | `-IntegerLiteral 0x13e0278e0 <col:20> 'int' 0
      |   |-UnaryOperator 0x13e027958 <col:23, col:24> 'int' postfix '--'
      |   | `-DeclRefExpr 0x13e027938 <col:23> 'int' lvalue Var 0x13e00e080 'i' 'int'
      |   `-CompoundStmt 0x13e027ca8 <col:28, line:8:3>
      |     `-CallExpr 0x13e027c78 <line:7:4, col:41> '<dependent type>' contains-errors
      |       |-DeclRefExpr 0x13e027ad0 <col:4> 'int ()' Function 0x13e027a18 'add_bit' 'int ()'
      |       |-CStyleCastExpr 0x13e027c30 <col:12, col:34> 'char' <IntegralCast>
      |       | `-ParenExpr 0x13e027c10 <col:18, col:34> 'int'
      |       |   `-BinaryOperator 0x13e027bc0 <col:19, col:31> 'int' '&'
      |       |     |-ParenExpr 0x13e027b80 <col:19, col:27> 'int'
      |       |     | `-BinaryOperator 0x13e027b60 <col:20, col:26> 'int' '>>'
      |       |     |   |-ImplicitCastExpr 0x13e027b30 <col:20> 'int' <LValueToRValue>
      |       |     |   | `-DeclRefExpr 0x13e027af0 <col:20> 'int' lvalue ParmVar 0x13e00dda8 'ch' 'int'
      |       |     |   `-ImplicitCastExpr 0x13e027b48 <col:26> 'int' <LValueToRValue>
      |       |     |     `-DeclRefExpr 0x13e027b10 <col:26> 'int' lvalue Var 0x13e00e080 'i' 'int'
      |       |     `-IntegerLiteral 0x13e027ba0 <col:31> 'int' 1
      |       `-RecoveryExpr 0x13e027c58 <col:37> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x13e028088 <line:9:9, line:11:2>
        `-CallExpr 0x13e028048 <line:10:3, col:44> '<dependent type>' contains-errors
          |-DeclRefExpr 0x13e027df8 <col:3> 'int ()' Function 0x13e027d40 'send' 'int ()'
          |-ArraySubscriptExpr 0x13e028008 <col:8, col:20> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x13e027fd8 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>
          | | `-CXXDependentScopeMemberExpr 0x13e027e38 <col:8, col:14> '<dependent type>' contains-errors lvalue ->loc
          | |   `-RecoveryExpr 0x13e027e18 <col:8> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x13e027ff0 <col:18> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x13e027e80 <col:18> 'int' lvalue ParmVar 0x13e00dda8 'ch' 'int'
          |-RecoveryExpr 0x13e028028 <col:23> '<dependent type>' contains-errors lvalue
          |-RecoveryExpr 0x13e027f08 <col:29> '<dependent type>' contains-errors lvalue
          `-DeclRefExpr 0x13e027f28 <col:35> 'int' lvalue ParmVar 0x13e00dea8 'maxoffset' 'int'
