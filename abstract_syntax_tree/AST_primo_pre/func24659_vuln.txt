`-FunctionDecl 0x14d128318  line:1:1 invalid buflist_match 'int (int *, int *, int)'
  |-ParmVarDecl 0x14d128128 <line:2:5, col:17> col:17 invalid rmp 'int *'
  |-ParmVarDecl 0x14d1281a8 <line:3:5, col:12> col:12 invalid buf 'int *'
  |-ParmVarDecl 0x14d128228 <line:4:5, col:10> col:10 used ignore_case 'int'
  `-CompoundStmt 0x14d81bba0 <line:5:1, line:14:1>
    |-DeclStmt 0x14d128458 <line:6:5, col:18>
    | `-VarDecl 0x14d1283f0 <col:5, col:13> col:13 used match 'char *'
    |-BinaryOperator 0x14d1286f0 <line:9:5, col:56> 'char *' contains-errors '='
    | |-DeclRefExpr 0x14d128470 <col:5> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'
    | `-CallExpr 0x14d1286b8 <col:13, col:56> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14d1285f0 <col:13> 'int ()' Function 0x14d128538 'fname_match' 'int ()'
    |   |-RecoveryExpr 0x14d128610 <col:25> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x14d128650 <col:30, col:35> '<dependent type>' contains-errors lvalue ->b_sfname
    |   | `-RecoveryExpr 0x14d128630 <col:30> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x14d128698 <col:45> 'int' lvalue ParmVar 0x14d128228 'ignore_case' 'int'
    |-IfStmt 0x14d81b700 <line:10:5, line:11:53>
    | |-BinaryOperator 0x14d128788 <line:10:9, col:18> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x14d128710 <col:9> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'
    | | `-RecoveryExpr 0x14d128768 <col:18> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14d81b6e0 <line:11:2, col:53> 'char *' contains-errors '='
    |   |-DeclRefExpr 0x14d1287a8 <col:2> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'
    |   `-CallExpr 0x14d81b6a8 <col:10, col:53> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d1287c8 <col:10> 'int ()' Function 0x14d128538 'fname_match' 'int ()'
    |     |-RecoveryExpr 0x14d81b600 <col:22> '<dependent type>' contains-errors lvalue
    |     |-CXXDependentScopeMemberExpr 0x14d81b640 <col:27, col:32> '<dependent type>' contains-errors lvalue ->b_ffname
    |     | `-RecoveryExpr 0x14d81b620 <col:27> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x14d81b688 <col:42> 'int' lvalue ParmVar 0x14d128228 'ignore_case' 'int'
    `-ReturnStmt 0x14d81bb90 <line:13:5, col:12>
      `-ImplicitCastExpr 0x14d81b758 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x14d81b740 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x14d81b720 <col:12> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'
