`-FunctionDecl 0x12200df18  line:1:11 invalid r_socket_write 'int (int *, void *, int)'
  |-ParmVarDecl 0x12200dd28 <col:26, col:35> col:35 invalid s 'int *'
  |-ParmVarDecl 0x12200dda8 <col:38, col:44> col:44 used buf 'void *'
  |-ParmVarDecl 0x12200de28 <col:49, col:53> col:53 used len 'int'
  `-CompoundStmt 0x122028d58 <col:58, line:35:1>
    `-ForStmt 0x122028c60 <line:7:2, line:33:2>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      |-<<<NULL>>>
      `-CompoundStmt 0x122028c20 <line:7:11, line:33:2>
        |-DeclStmt 0x12200e078 <line:8:3, col:15>
        | `-VarDecl 0x12200dff0 <col:3, col:11> col:7 used b 'int' cinit
        |   `-IntegerLiteral 0x12200e058 <col:11> 'int' 1500
        |-IfStmt 0x12200e1b0 <line:9:3, line:11:3>
        | |-BinaryOperator 0x12200e100 <line:9:7, col:11> 'int' '>'
        | | |-ImplicitCastExpr 0x12200e0d0 <col:7> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x12200e090 <col:7> 'int' lvalue Var 0x12200dff0 'b' 'int'
        | | `-ImplicitCastExpr 0x12200e0e8 <col:11> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x12200e0b0 <col:11> 'int' lvalue ParmVar 0x12200de28 'len' 'int'
        | `-CompoundStmt 0x12200e198 <col:16, line:11:3>
        |   `-BinaryOperator 0x12200e178 <line:10:4, col:8> 'int' '='
        |     |-DeclRefExpr 0x12200e120 <col:4> 'int' lvalue Var 0x12200dff0 'b' 'int'
        |     `-ImplicitCastExpr 0x12200e160 <col:8> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x12200e140 <col:8> 'int' lvalue ParmVar 0x12200de28 'len' 'int'
        |-CompoundStmt 0x122028950 <line:21:3, line:23:3>
        |-IfStmt 0x122028a18 <line:25:3, line:27:3>
        | |-BinaryOperator 0x1220289d8 <line:25:7, col:13> 'int' contains-errors '<'
        | | |-RecoveryExpr 0x1220289b8 <col:7> '<dependent type>' contains-errors lvalue
        | | `-IntegerLiteral 0x122028978 <col:13> 'int' 1
        | `-CompoundStmt 0x122028a00 <col:16, line:27:3>
        |   `-BreakStmt 0x1220289f8 <line:26:4>
        |-IfStmt 0x122028b30 <line:28:3, line:30:3>
        | |-BinaryOperator 0x122028ab0 <line:28:7, col:14> 'int' contains-errors '=='
        | | |-RecoveryExpr 0x122028a90 <col:7> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x122028a50 <col:14> 'int' lvalue ParmVar 0x12200de28 'len' 'int'
        | `-CompoundStmt 0x122028b18 <col:19, line:30:3>
        |   `-ReturnStmt 0x122028b08 <line:29:4, col:11>
        |     `-ImplicitCastExpr 0x122028af0 <col:11> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x122028ad0 <col:11> 'int' lvalue ParmVar 0x12200de28 'len' 'int'
        `-CompoundAssignOperator 0x122028bf0 <line:32:3, col:10> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
          |-DeclRefExpr 0x122028b68 <col:3> 'int' lvalue ParmVar 0x12200de28 'len' 'int'
          `-RecoveryExpr 0x122028bd0 <col:10> '<dependent type>' contains-errors lvalue
