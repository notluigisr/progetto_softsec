`-FunctionDecl 0x12481e088  line:1:1 invalid create_node 'int (int *, int)'
  |-ParmVarDecl 0x12481df28 <col:13, col:21> col:21 referenced invalid parent_subnet 'int *'
  |-ParmVarDecl 0x12481dfa8 <col:36, col:40> col:40 used the_entry 'int'
  `-CompoundStmt 0x125109410 <line:2:1, line:21:1>
    |-CallExpr 0x12481e5a0 <line:6:3, col:22> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12481e520 <col:3> 'int ()' Function 0x12481e468 'clear_node' 'int ()'
    | `-RecoveryExpr 0x12481e580 <col:14> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x1251093f0 <line:8:3, line:19:3>
      |-BinaryOperator 0x125108e60 <line:8:7, col:18> 'int' contains-errors '=='
      | |-RecoveryExpr 0x125108e20 <col:7> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x125108e40 <col:18> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1251093d8 <col:29, line:19:3>
        `-IfStmt 0x1251093a8 <line:9:5, line:18:5> has_else
          |-RecoveryExpr 0x125108e98 <line:9:9> '<dependent type>' contains-errors lvalue
          |-CompoundStmt 0x125109018 <col:16, line:12:5>
          `-CompoundStmt 0x125109390 <col:12, line:18:5>
            `-IfStmt 0x125109270 <line:13:7, line:15:7>
              |-RecoveryExpr 0x125109048 <line:13:11, col:24> '_Bool' contains-errors
              `-CompoundStmt 0x125109258 <col:27, line:15:7>
                `-CallExpr 0x125109218 <line:14:9, col:20> 'int'
                  |-ImplicitCastExpr 0x125109200 <col:9> 'int (*)()' <FunctionToPointerDecay>
                  | `-DeclRefExpr 0x125109148 <col:9> 'int ()' Function 0x125109090 'CROAK' 'int ()'
                  `-ImplicitCastExpr 0x125109240 <col:15> 'char *' <ArrayToPointerDecay>
                    `-StringLiteral 0x1251091b0 <col:15> 'char[4]' lvalue "STR"
