`-FunctionDecl 0x12800dee8  line:1:1 invalid xsltParseStylesheetExcludePrefix 'int (int, int, int)'
  |-ParmVarDecl 0x12800dcf0 <col:34, col:52> col:52 referenced invalid style 'int'
  |-ParmVarDecl 0x12800dd70 <col:59, col:70> col:70 invalid cur 'int'
  |-ParmVarDecl 0x12800ddf0 <line:2:6, col:10> col:10 used isXsltElem 'int'
  `-CompoundStmt 0x128028e48 <line:3:1, line:57:1>
    |-DeclStmt 0x12800e048 <line:4:5, col:15>
    | `-VarDecl 0x12800dfc0 <col:5, col:14> col:9 used nb 'int' cinit
    |   `-IntegerLiteral 0x12800e028 <col:14> 'int' 0
    |-IfStmt 0x12800e298 <line:8:5, line:9:10>
    | |-RecoveryExpr 0x12800e228 <line:8:9, col:75> '_Bool' contains-errors
    | `-ReturnStmt 0x12800e288 <line:9:2, col:10>
    |   `-ParenExpr 0x12800e268 <col:8, col:10> 'int'
    |     `-IntegerLiteral 0x12800e248 <col:9> 'int' 0
    |-IfStmt 0x128027680 <line:18:5, line:20:5>
    | |-BinaryOperator 0x1280275f8 <line:18:9, col:21> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1280275b8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1280275d8 <col:21> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x128027668 <col:27, line:20:5>
    |   `-ReturnStmt 0x128027658 <line:19:2, col:10>
    |     `-ParenExpr 0x128027638 <col:8, col:10> 'int'
    |       `-IntegerLiteral 0x128027618 <col:9> 'int' 0
    |-WhileStmt 0x128028390 <line:23:5, line:54:5>
    | |-RecoveryExpr 0x1280276c0 <line:23:12, col:23> '_Bool' contains-errors
    | `-CompoundStmt 0x128028370 <col:26, line:54:5>
    |   |-IfStmt 0x128027848 <line:25:2, line:26:6>
    |   | |-RecoveryExpr 0x128027820 <line:25:6, col:17> '_Bool' contains-errors
    |   | `-BreakStmt 0x128027840 <line:26:6>
    |   `-IfStmt 0x128028350 <line:30:2, line:52:2>
    |     |-RecoveryExpr 0x1280279c8 <line:30:6> '_Bool' contains-errors
    |     `-CompoundStmt 0x128028338 <col:14, line:52:2>
    |       `-IfStmt 0x128028208 <line:37:6, line:50:6> has_else
    |         |-RecoveryExpr 0x128027d38 <line:37:10, col:16> '_Bool' contains-errors
    |         |-CompoundStmt 0x128028008 <col:22, line:42:6>
    |         | `-IfStmt 0x128027fe8 <line:41:3, col:37>
    |         |   |-RecoveryExpr 0x128027f20 <col:7, col:16> '_Bool' contains-errors
    |         |   `-UnaryOperator 0x128027fd0 <col:22, col:37> '<dependent type>' contains-errors postfix '++' cannot overflow
    |         |     `-CXXDependentScopeMemberExpr 0x128027f88 <col:22, col:29> '<dependent type>' contains-errors lvalue ->warnings
    |         |       `-RecoveryExpr 0x128027f60 <col:22> '<dependent type>' contains-errors lvalue
    |         |         `-DeclRefExpr 0x128027f40 <col:22> 'int' lvalue ParmVar 0x12800dcf0 'style' 'int'
    |         `-CompoundStmt 0x1280281f0 <line:42:13, line:50:6>
    |           `-IfStmt 0x1280281d0 <line:43:3, line:49:3>
    |             |-RecoveryExpr 0x128028160 <line:43:7, col:54> '_Bool' contains-errors
    |             `-CompoundStmt 0x1280281b8 <col:57, line:49:3>
    |               `-UnaryOperator 0x1280281a0 <line:48:7, col:9> 'int' postfix '++'
    |                 `-DeclRefExpr 0x128028180 <col:7> 'int' lvalue Var 0x12800dfc0 'nb' 'int'
    `-ReturnStmt 0x128028e38 <line:56:5, col:14>
      `-ImplicitCastExpr 0x128028e20 <col:11, col:14> 'int' <LValueToRValue>
        `-ParenExpr 0x128028e00 <col:11, col:14> 'int' lvalue
          `-DeclRefExpr 0x1280283d0 <col:12> 'int' lvalue Var 0x12800dfc0 'nb' 'int'
