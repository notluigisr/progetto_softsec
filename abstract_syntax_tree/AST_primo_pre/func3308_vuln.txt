`-FunctionDecl 0x12c80df18  line:1:12 invalid output_frame 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x12c80dd28 <col:25, col:38> col:38 invalid h 'int *'
  |-ParmVarDecl 0x12c80dda8 <col:41, col:50> col:50 referenced invalid dst 'int *'
  |-ParmVarDecl 0x12c80de28 <col:55, col:64> col:64 referenced invalid srcp 'int *'
  `-CompoundStmt 0x12c122630 <line:2:1, line:22:1>
    |-DeclStmt 0x12c80e110 <line:4:5, col:10>
    | `-VarDecl 0x12c80e0a8 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x12d809200 <line:5:5, col:37>
    | `-VarDecl 0x12c80e140 <col:5, col:36> col:9 used ret 'int' cinit
    |   `-CallExpr 0x12c80e3c8 <col:15, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c80e300 <col:15> 'int ()' Function 0x12c80e248 'av_frame_ref' 'int ()'
    |     |-RecoveryExpr 0x12c80e320 <col:28> '<dependent type>' contains-errors lvalue
    |     `-RecoveryExpr 0x12c80e3a8 <col:33> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d8092d8 <line:6:5, line:7:16>
    | |-BinaryOperator 0x12d809270 <line:6:9, col:15> 'int' contains-errors '<'
    | | |-ImplicitCastExpr 0x12d809258 <col:9> 'int' contains-errors <LValueToRValue>
    | | | `-DeclRefExpr 0x12d809218 <col:9> 'int' contains-errors lvalue Var 0x12c80e140 'ret' 'int'
    | | `-IntegerLiteral 0x12d809238 <col:15> 'int' 0
    | `-ReturnStmt 0x12d8092c8 <line:7:9, col:16>
    |   `-ImplicitCastExpr 0x12d8092b0 <col:16> 'int' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12d809290 <col:16> 'int' contains-errors lvalue Var 0x12c80e140 'ret' 'int'
    |-CallExpr 0x12d809648 <line:9:5, col:69> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12d8093d8 <col:5> 'int ()' Function 0x12d809320 'av_dict_set' 'int ()'
    | |-UnaryOperator 0x12d809460 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12d809418 <col:18, col:23> '<dependent type>' contains-errors lvalue ->metadata
    | |   `-RecoveryExpr 0x12d8093f8 <col:18> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x12d8094c0 <col:33> 'char[4]' lvalue "STR"
    | |-CallExpr 0x12d809600 <col:40, col:65> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12d8095c0 <col:40> 'int ()' Function 0x12d809508 'ff_h264_sei_stereo_mode' 'int ()'
    | | `-RecoveryExpr 0x12d8095e0 <col:64> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12d809628 <col:68> 'int' 0
    |-IfStmt 0x12d809750 <line:11:5, line:12:16>
    | |-UnaryOperator 0x12d809708 <line:11:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12d8096f0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x12d8096a8 <col:10, col:16> '<dependent type>' contains-errors lvalue ->crop
    | |     `-RecoveryExpr 0x12d809688 <col:10> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d809740 <line:12:9, col:16>
    |   `-IntegerLiteral 0x12d809720 <col:16> 'int' 0
    |-ForStmt 0x12d80a1b8 <line:14:5, line:20:5>
    | |-BinaryOperator 0x12d8097b0 <line:14:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12d809770 <col:10> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    | | `-IntegerLiteral 0x12d809790 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12d809828 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x12d809810 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12d8097d0 <col:17> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    | | `-IntegerLiteral 0x12d8097f0 <col:21> 'int' 3
    | |-UnaryOperator 0x12d809868 <col:24, col:25> 'int' postfix '++'
    | | `-DeclRefExpr 0x12d809848 <col:24> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    | `-CompoundStmt 0x12d80a188 <col:29, line:20:5>
    |   |-DeclStmt 0x12d809a50 <line:15:9, col:53>
    |   | `-VarDecl 0x12d809898 <col:9, col:52> col:13 used hshift 'int' cinit
    |   |   `-ConditionalOperator 0x12d809a20 <col:22, col:52> '<dependent type>' contains-errors
    |   |     |-ParenExpr 0x12d809978 <col:22, col:28> 'int'
    |   |     | `-BinaryOperator 0x12d809958 <col:23, col:27> 'int' '>'
    |   |     |   |-ImplicitCastExpr 0x12d809940 <col:23> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x12d809900 <col:23> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    |   |     |   `-IntegerLiteral 0x12d809920 <col:27> 'int' 0
    |   |     |-CXXDependentScopeMemberExpr 0x12d8099b8 <col:32, col:35> '<dependent type>' contains-errors lvalue ->chroma_x_shift
    |   |     | `-RecoveryExpr 0x12d809998 <col:32> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x12d809a00 <col:52> 'int' 0
    |   |-DeclStmt 0x12d809c38 <line:16:9, col:53>
    |   | `-VarDecl 0x12d809a80 <col:9, col:52> col:13 used vshift 'int' cinit
    |   |   `-ConditionalOperator 0x12d809c08 <col:22, col:52> '<dependent type>' contains-errors
    |   |     |-ParenExpr 0x12d809b60 <col:22, col:28> 'int'
    |   |     | `-BinaryOperator 0x12d809b40 <col:23, col:27> 'int' '>'
    |   |     |   |-ImplicitCastExpr 0x12d809b28 <col:23> 'int' <LValueToRValue>
    |   |     |   | `-DeclRefExpr 0x12d809ae8 <col:23> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    |   |     |   `-IntegerLiteral 0x12d809b08 <col:27> 'int' 0
    |   |     |-CXXDependentScopeMemberExpr 0x12d809ba0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->chroma_y_shift
    |   |     | `-RecoveryExpr 0x12d809b80 <col:32> '<dependent type>' contains-errors lvalue
    |   |     `-IntegerLiteral 0x12d809be8 <col:52> 'int' 0
    |   |-DeclStmt 0x12d80a020 <line:17:9, line:18:69>
    |   | `-VarDecl 0x12d809c68 <line:17:9, line:18:68> line:17:13 used off 'int' cinit
    |   |   `-BinaryOperator 0x12d80a000 <col:22, line:18:68> '<dependent type>' contains-errors '+'
    |   |     |-ParenExpr 0x12d809e20 <line:17:22, col:68> '<dependent type>' contains-errors
    |   |     | `-BinaryOperator 0x12d809e00 <col:23, col:57> '<dependent type>' contains-errors '<<'
    |   |     |   |-ParenExpr 0x12d809d78 <col:23, col:49> '<dependent type>' contains-errors
    |   |     |   | `-BinaryOperator 0x12d809d58 <col:24, col:43> '<dependent type>' contains-errors '>>'
    |   |     |   |   |-CXXDependentScopeMemberExpr 0x12d809cf0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crop_left
    |   |     |   |   | `-RecoveryExpr 0x12d809cd0 <col:24> '<dependent type>' contains-errors lvalue
    |   |     |   |   `-DeclRefExpr 0x12d809d38 <col:43> 'int' contains-errors lvalue Var 0x12d809898 'hshift' 'int'
    |   |     |   `-CXXDependentScopeMemberExpr 0x12d809db8 <col:54, col:57> '<dependent type>' contains-errors lvalue ->pixel_shift
    |   |     |     `-RecoveryExpr 0x12d809d98 <col:54> '<dependent type>' contains-errors lvalue
    |   |     `-BinaryOperator 0x12d809fe0 <line:18:23, col:68> '<dependent type>' contains-errors '*'
    |   |       |-ParenExpr 0x12d809ee8 <col:23, col:49> '<dependent type>' contains-errors
    |   |       | `-BinaryOperator 0x12d809ec8 <col:24, col:43> '<dependent type>' contains-errors '>>'
    |   |       |   |-CXXDependentScopeMemberExpr 0x12d809e60 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crop_top
    |   |       |   | `-RecoveryExpr 0x12d809e40 <col:24> '<dependent type>' contains-errors lvalue
    |   |       |   `-DeclRefExpr 0x12d809ea8 <col:43> 'int' contains-errors lvalue Var 0x12d809a80 'vshift' 'int'
    |   |       `-ArraySubscriptExpr 0x12d809fc0 <col:53, col:68> '<dependent type>' contains-errors lvalue
    |   |         |-ImplicitCastExpr 0x12d809f90 <col:53, col:58> '<dependent type>' contains-errors <LValueToRValue>
    |   |         | `-CXXDependentScopeMemberExpr 0x12d809f28 <col:53, col:58> '<dependent type>' contains-errors lvalue ->linesize
    |   |         |   `-RecoveryExpr 0x12d809f08 <col:53> '<dependent type>' contains-errors lvalue
    |   |         `-ImplicitCastExpr 0x12d809fa8 <col:67> 'int' <LValueToRValue>
    |   |           `-DeclRefExpr 0x12d809f70 <col:67> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    |   `-CompoundAssignOperator 0x12d80a158 <line:19:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-ArraySubscriptExpr 0x12d80a118 <col:9, col:20> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x12d80a0e8 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x12d80a080 <col:9, col:14> '<dependent type>' contains-errors lvalue ->data
    |     | |   `-RecoveryExpr 0x12d80a058 <col:9> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x12d80a038 <col:9> 'int *' lvalue ParmVar 0x12c80dda8 'dst' 'int *'
    |     | `-ImplicitCastExpr 0x12d80a100 <col:19> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12d80a0c8 <col:19> 'int' lvalue Var 0x12c80e0a8 'i' 'int'
    |     `-DeclRefExpr 0x12d80a138 <col:25> 'int' contains-errors lvalue Var 0x12d809c68 'off' 'int'
    `-ReturnStmt 0x12c122620 <line:21:5, col:12>
      `-IntegerLiteral 0x12c122600 <col:12> 'int' 0
