`-FunctionDecl 0x12e128438  line:1:1 invalid memxor3_different_alignment_ab 'int (int *, const char *, const char *, unsigned int, int)'
  |-ParmVarDecl 0x12e128128 <col:33, col:41> col:41 referenced invalid dst 'int *'
  |-ParmVarDecl 0x12e1281a8 <line:2:5, col:17> col:17 a 'const char *'
  |-ParmVarDecl 0x12e128228 <col:20, col:32> col:32 b 'const char *'
  |-ParmVarDecl 0x12e1282a8 <line:3:5, col:14> col:14 used offset 'unsigned int'
  |-ParmVarDecl 0x12e128328 <col:22, col:29> col:29 referenced invalid n 'int'
  `-CompoundStmt 0x12e142ef8 <line:4:1, line:35:1>
    |-DeclStmt 0x12e128620 <line:5:3, col:15>
    | |-VarDecl 0x12e128520 <col:3, col:7> col:7 used shl 'int'
    | `-VarDecl 0x12e1285a0 <col:3, col:12> col:12 used shr 'int'
    |-DeclStmt 0x12e1286b8 <line:6:3, col:23>
    | `-VarDecl 0x12e128650 <col:3, col:17> col:17 referenced invalid a_word 'const int *'
    |-DeclStmt 0x12e128750 <line:7:3, col:23>
    | `-VarDecl 0x12e1286e8 <col:3, col:17> col:17 referenced invalid b_word 'const int *'
    |-BinaryOperator 0x12e141840 <line:11:3, col:20> 'int' contains-errors '='
    | |-DeclRefExpr 0x12e128768 <col:3> 'int' lvalue Var 0x12e128520 'shl' 'int'
    | `-BinaryOperator 0x12e141820 <col:9, col:20> '<dependent type>' contains-errors '*'
    |   |-RecoveryExpr 0x12e141800 <col:9> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12e1287a0 <col:20> 'unsigned int' lvalue ParmVar 0x12e1282a8 'offset' 'unsigned int'
    |-IfStmt 0x12e142298 <line:17:3, line:25:5> has_else
    | |-BinaryOperator 0x12e1419a0 <line:17:7, col:11> '<dependent type>' contains-errors '&'
    | | |-RecoveryExpr 0x12e141960 <col:7> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x12e141980 <col:11> 'int' 1
    | |-CompoundStmt 0x12e142130 <line:18:5, line:23:5>
    | | |-UnaryOperator 0x12e141a08 <line:19:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow
    | | | `-RecoveryExpr 0x12e1419e0 <col:7> '<dependent type>' contains-errors lvalue
    | | |   `-DeclRefExpr 0x12e1419c0 <col:7> 'int' lvalue ParmVar 0x12e128328 'n' 'int'
    | | `-BinaryOperator 0x12e142110 <line:22:7, col:39> '<dependent type>' contains-errors '='
    | |   |-ArraySubscriptExpr 0x12e142070 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |-ImplicitCastExpr 0x12e142040 <col:7> '<dependent type>' contains-errors <LValueToRValue>
    | |   | | `-RecoveryExpr 0x12e141d10 <col:7> '<dependent type>' contains-errors lvalue
    | |   | |   `-DeclRefExpr 0x12e141cf0 <col:7> 'int *' lvalue ParmVar 0x12e128128 'dst' 'int *'
    | |   | `-ImplicitCastExpr 0x12e142058 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    | |   |   `-RecoveryExpr 0x12e141d38 <col:11> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x12e1420d0 <col:16, col:39> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x12e141f00 <col:16> 'int ()' Function 0x12e141e48 'MERGE' 'int ()'
    | |     |-RecoveryExpr 0x12e142090 <col:23> '<dependent type>' contains-errors lvalue
    | |     |-DeclRefExpr 0x12e141f38 <col:27> 'int' lvalue Var 0x12e128520 'shl' 'int'
    | |     |-RecoveryExpr 0x12e1420b0 <col:32> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x12e141f70 <col:36> 'int' lvalue Var 0x12e1285a0 'shr' 'int'
    | `-NullStmt 0x12e142290 <line:25:5>
    `-WhileStmt 0x12e142ed8 <line:27:3, line:34:5>
      |-BinaryOperator 0x12e142308 <line:27:10, col:14> 'int' contains-errors '>'
      | |-RecoveryExpr 0x12e1422c8 <col:10> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x12e1422e8 <col:14> 'int' 0
      `-CompoundStmt 0x12e142eb8 <line:28:5, line:34:5>
        |-CompoundAssignOperator 0x12e142390 <line:29:7, col:12> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
        | |-RecoveryExpr 0x12e142348 <col:7> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x12e142328 <col:7> 'int' lvalue ParmVar 0x12e128328 'n' 'int'
        | `-IntegerLiteral 0x12e142370 <col:12> 'int' 2
        `-BinaryOperator 0x12e142c40 <line:31:7, col:40> '<dependent type>' contains-errors '='
          |-ArraySubscriptExpr 0x12e142770 <col:7, col:14> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x12e142758 <col:7> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x12e142570 <col:7> '<dependent type>' contains-errors lvalue
          | |   `-DeclRefExpr 0x12e142550 <col:7> 'int *' lvalue ParmVar 0x12e128128 'dst' 'int *'
          | `-BinaryOperator 0x12e1425d8 <col:11, col:13> '<dependent type>' contains-errors '+'
          |   |-RecoveryExpr 0x12e142598 <col:11> '<dependent type>' contains-errors lvalue
          |   `-IntegerLiteral 0x12e1425b8 <col:13> 'int' 1
          `-CallExpr 0x12e142c00 <col:18, col:40> '<dependent type>' contains-errors
            |-DeclRefExpr 0x12e142630 <col:18> 'int ()' Function 0x12e141e48 'MERGE' 'int ()'
            |-RecoveryExpr 0x12e142790 <col:24> '<dependent type>' contains-errors lvalue
            |-DeclRefExpr 0x12e142668 <col:28> 'int' lvalue Var 0x12e128520 'shl' 'int'
            |-RecoveryExpr 0x12e1427b0 <col:33> '<dependent type>' contains-errors lvalue
            `-DeclRefExpr 0x12e1426a0 <col:37> 'int' lvalue Var 0x12e1285a0 'shr' 'int'
