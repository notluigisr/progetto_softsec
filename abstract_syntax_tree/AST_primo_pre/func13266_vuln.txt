`-FunctionDecl 0x13900ddd8  line:1:1 pq_getbyte_if_available 'int (unsigned char *)'
  |-ParmVarDecl 0x13900dd08 <col:25, col:40> col:40 used c 'unsigned char *'
  `-CompoundStmt 0x139028ac8 <line:2:1, line:36:1>
    |-DeclStmt 0x13900df50 <line:3:2, col:9>
    | `-VarDecl 0x13900dee8 <col:2, col:8> col:8 used r 'int'
    |-IfStmt 0x13900e110 <line:5:2, line:9:2>
    | |-BinaryOperator 0x13900e010 <line:5:6, col:22> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x13900dfd0 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13900dff0 <col:22> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13900e0f8 <line:6:2, line:9:2>
    |   `-ReturnStmt 0x13900e0e8 <line:8:3, col:10>
    |     `-IntegerLiteral 0x13900e0c8 <col:10> 'int' 1
    |-CallExpr 0x13900e2c0 <line:12:2, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13900e240 <col:2> 'int ()' Function 0x13900e188 'socket_set_nonblocking' 'int ()'
    | `-RecoveryExpr 0x13900e2a0 <col:25> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x139027f28 <line:14:2, col:34> 'int' contains-errors '='
    | |-DeclRefExpr 0x13900e2e8 <col:2> 'int' lvalue Var 0x13900dee8 'r' 'int'
    | `-CallExpr 0x139027ef0 <col:6, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x139027e00 <col:6> 'int ()' Function 0x13900e330 'secure_read' 'int ()'
    |   |-RecoveryExpr 0x139027ed0 <col:18> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x139027e38 <col:30> 'unsigned char *' lvalue ParmVar 0x13900dd08 'c' 'unsigned char *'
    |   `-IntegerLiteral 0x139027e58 <col:33> 'int' 1
    |-IfStmt 0x139028a50 <line:15:2, line:33:2> has_else
    | |-BinaryOperator 0x139027fa0 <line:15:6, col:10> 'int' '<'
    | | |-ImplicitCastExpr 0x139027f88 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x139027f48 <col:6> 'int' lvalue Var 0x13900dee8 'r' 'int'
    | | `-IntegerLiteral 0x139027f68 <col:10> 'int' 0
    | |-CompoundStmt 0x139028970 <line:16:2, line:28:2>
    | | `-IfStmt 0x139028940 <line:18:3, line:27:3> has_else
    | |   |-BinaryOperator 0x139028230 <line:18:7, col:59> 'int' contains-errors '||'
    | |   | |-BinaryOperator 0x1390281b0 <col:7, col:35> 'int' contains-errors '||'
    | |   | | |-BinaryOperator 0x139028130 <col:7, col:16> 'int' contains-errors '=='
    | |   | | | |-RecoveryExpr 0x1390280f0 <col:7> '<dependent type>' contains-errors lvalue
    | |   | | | `-RecoveryExpr 0x139028110 <col:16> '<dependent type>' contains-errors lvalue
    | |   | | `-BinaryOperator 0x139028190 <col:26, col:35> 'int' contains-errors '=='
    | |   | |   |-RecoveryExpr 0x139028150 <col:26> '<dependent type>' contains-errors lvalue
    | |   | |   `-RecoveryExpr 0x139028170 <col:35> '<dependent type>' contains-errors lvalue
    | |   | `-BinaryOperator 0x139028210 <col:50, col:59> 'int' contains-errors '=='
    | |   |   |-RecoveryExpr 0x1390281d0 <col:50> '<dependent type>' contains-errors lvalue
    | |   |   `-RecoveryExpr 0x1390281f0 <col:59> '<dependent type>' contains-errors lvalue
    | |   |-BinaryOperator 0x139028290 <line:19:4, col:8> 'int' '='
    | |   | |-DeclRefExpr 0x139028250 <col:4> 'int' lvalue Var 0x13900dee8 'r' 'int'
    | |   | `-IntegerLiteral 0x139028270 <col:8> 'int' 0
    | |   `-CompoundStmt 0x139028920 <line:21:3, line:27:3>
    | |     |-CallExpr 0x139028858 <line:23:4, line:25:21> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x139028390 <line:23:4> 'int ()' Function 0x1390282d8 'ereport' 'int ()'
    | |     | |-RecoveryExpr 0x139028768 <col:12> '<dependent type>' contains-errors lvalue
    | |     | `-ParenExpr 0x139028838 <line:24:6, line:25:20> 'int'
    | |     |   `-BinaryOperator 0x139028818 <line:24:7, line:25:19> 'int' ','
    | |     |     |-CallExpr 0x1390287a0 <line:24:7, col:33> 'int'
    | |     |     | `-ImplicitCastExpr 0x139028788 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |     |     |   `-DeclRefExpr 0x1390284a8 <col:7> 'int ()' Function 0x1390283f0 'errcode_for_socket_access' 'int ()'
    | |     |     `-CallExpr 0x1390287d8 <line:25:7, col:19> 'int'
    | |     |       |-ImplicitCastExpr 0x1390287c0 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |     |       | `-DeclRefExpr 0x139028618 <col:7> 'int ()' Function 0x139028560 'errmsg' 'int ()'
    | |     |       `-ImplicitCastExpr 0x139028800 <col:14> 'char *' <ArrayToPointerDecay>
    | |     |         `-StringLiteral 0x139028680 <col:14> 'char[4]' lvalue "STR"
    | |     `-BinaryOperator 0x139028900 <line:26:4, col:8> 'int' contains-errors '='
    | |       |-DeclRefExpr 0x139028888 <col:4> 'int' lvalue Var 0x13900dee8 'r' 'int'
    | |       `-RecoveryExpr 0x1390288e0 <col:8> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x139028a30 <line:29:7, line:33:2>
    |   |-BinaryOperator 0x1390289e0 <line:29:11, col:16> 'int' '=='
    |   | |-ImplicitCastExpr 0x1390289c8 <col:11> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x139028988 <col:11> 'int' lvalue Var 0x13900dee8 'r' 'int'
    |   | `-IntegerLiteral 0x1390289a8 <col:16> 'int' 0
    |   `-CompoundStmt 0x139028a20 <line:30:2, line:33:2>
    `-ReturnStmt 0x139028ab8 <line:35:2, col:9>
      `-ImplicitCastExpr 0x139028aa0 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x139028a80 <col:9> 'int' lvalue Var 0x13900dee8 'r' 'int'
