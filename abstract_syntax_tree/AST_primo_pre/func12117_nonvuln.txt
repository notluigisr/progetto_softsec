`-FunctionDecl 0x13600dd98  line:1:5 gss_spnegoint_lib_init 'int (void)'
  `-CompoundStmt 0x13600e270 <line:2:1, line:14:1>
    |-DeclStmt 0x13600df08 <line:3:2, col:9>
    | `-VarDecl 0x13600dea0 <col:2, col:6> col:6 used err 'int'
    |-BinaryOperator 0x13600e180 <line:5:2, col:54> 'int' contains-errors '='
    | |-DeclRefExpr 0x13600df20 <col:2> 'int' lvalue Var 0x13600dea0 'err' 'int'
    | `-CallExpr 0x13600e150 <col:8, col:54> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13600e070 <col:8> 'int ()' Function 0x13600dfb8 'k5_key_register' 'int ()'
    |   |-RecoveryExpr 0x13600e110 <col:24> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13600e130 <col:50> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13600e220 <line:6:2, line:7:10>
    | |-ImplicitCastExpr 0x13600e1c0 <line:6:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13600e1a0 <col:6> 'int' lvalue Var 0x13600dea0 'err' 'int'
    | `-ReturnStmt 0x13600e210 <line:7:3, col:10>
    |   `-ImplicitCastExpr 0x13600e1f8 <col:10> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x13600e1d8 <col:10> 'int' lvalue Var 0x13600dea0 'err' 'int'
    `-ReturnStmt 0x13600e260 <line:12:2, col:9>
      `-IntegerLiteral 0x13600e240 <col:9> 'int' 0
