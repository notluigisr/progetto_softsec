`-FunctionDecl 0x12a1281f8  line:1:1 invalid LogLuvSetupEncode 'int (int *)'
  |-ParmVarDecl 0x12a128128 <col:19, col:25> col:25 referenced invalid tif 'int *'
  `-CompoundStmt 0x12a1426a0 <line:2:1, line:67:1>
    |-DeclStmt 0x12a128440 <line:3:2, col:36>
    | `-VarDecl 0x12a128330 <col:2, col:31> col:20 used module 'const char[4]' static cinit
    |   `-StringLiteral 0x12a1283e0 <col:31> 'const char[4]' "STR"
    |-SwitchStmt 0x12a1287b0 <line:7:2, line:60:2>
    | |-CXXDependentScopeMemberExpr 0x12a128768 <line:7:10, col:14> '<dependent type>' contains-errors lvalue ->td_photometric
    | | `-RecoveryExpr 0x12a128748 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12a1424a0 <col:30, line:60:2>
    |   |-IfStmt 0x12a141968 <line:9:3, line:10:4>
    |   | |-UnaryOperator 0x12a141948 <line:9:7, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x12a141920 <col:8, col:27> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x12a1418e0 <col:8> 'int ()' Function 0x12a141828 'LogLuvInitState' 'int ()'
    |   | |   `-RecoveryExpr 0x12a141900 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-BreakStmt 0x12a141960 <line:10:4>
    |   |-IfStmt 0x12a141f98 <line:11:3, line:39:3> has_else
    |   | |-BinaryOperator 0x12a141aa8 <line:11:7, col:29> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x12a141a40 <col:7, col:11> '<dependent type>' contains-errors lvalue ->td_compression
    |   | | | `-RecoveryExpr 0x12a141a20 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x12a141a88 <col:29> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x12a141e08 <col:51, line:25:3>
    |   | | |-BinaryOperator 0x12a141bb0 <line:12:4, col:25> '<dependent type>' contains-errors '='
    |   | | | |-CXXDependentScopeMemberExpr 0x12a141b10 <col:4, col:9> '<dependent type>' contains-errors lvalue ->tif_encoderow
    |   | | | | `-RecoveryExpr 0x12a141ae8 <col:4> '<dependent type>' contains-errors lvalue
    |   | | | |   `-DeclRefExpr 0x12a141ac8 <col:4> 'int *' lvalue ParmVar 0x12a128128 'tif' 'int *'
    |   | | | `-RecoveryExpr 0x12a141b90 <col:25> '<dependent type>' contains-errors lvalue
    |   | | `-SwitchStmt 0x12a141cb0 <line:13:4, line:24:4>
    |   | |   |-CXXDependentScopeMemberExpr 0x12a141c68 <line:13:12, col:16> '<dependent type>' contains-errors lvalue ->user_datafmt
    |   | |   | `-RecoveryExpr 0x12a141c48 <col:12> '<dependent type>' contains-errors lvalue
    |   | |   `-CompoundStmt 0x12a141dd8 <col:30, line:24:4>
    |   | |     |-BreakStmt 0x12a141d08 <line:16:5>
    |   | |     |-BreakStmt 0x12a141d40 <line:19:5>
    |   | |     |-BreakStmt 0x12a141d48 <line:21:5>
    |   | |     `-DefaultStmt 0x12a141db8 <line:22:4, line:23:10>
    |   | |       `-GotoStmt 0x12a141da0 <col:5, col:10> 'notsupported' 0x12a141d50
    |   | `-CompoundStmt 0x12a141f80 <line:25:10, line:39:3>
    |   |   `-SwitchStmt 0x12a141ed8 <line:27:4, line:38:4>
    |   |     |-RecoveryExpr 0x12a141eb8 <line:27:12, col:16> 'int' contains-errors
    |   |     `-CompoundStmt 0x12a141f50 <col:30, line:38:4>
    |   |       |-BreakStmt 0x12a141f00 <line:30:5>
    |   |       |-BreakStmt 0x12a141f08 <line:33:5>
    |   |       |-BreakStmt 0x12a141f10 <line:35:5>
    |   |       `-DefaultStmt 0x12a141f30 <line:36:4, line:37:10>
    |   |         `-GotoStmt 0x12a141f18 <col:5, col:10> 'notsupported' 0x12a141d50
    |   |-BreakStmt 0x12a141fc8 <line:40:3>
    |   |-IfStmt 0x12a142138 <line:42:3, line:43:4>
    |   | |-UnaryOperator 0x12a142118 <line:42:7, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | | `-CallExpr 0x12a1420f0 <col:8, col:27> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x12a1420b0 <col:8> 'int ()' Function 0x12a141ff8 'LogL16InitState' 'int ()'
    |   | |   `-RecoveryExpr 0x12a1420d0 <col:24> '<dependent type>' contains-errors lvalue
    |   | `-BreakStmt 0x12a142130 <line:43:4>
    |   |-SwitchStmt 0x12a142208 <line:45:3, line:53:3>
    |   | |-RecoveryExpr 0x12a1421e8 <line:45:11, col:15> 'int' contains-errors
    |   | `-CompoundStmt 0x12a142278 <col:29, line:53:3>
    |   |   |-BreakStmt 0x12a142230 <line:48:4>
    |   |   |-BreakStmt 0x12a142238 <line:50:4>
    |   |   `-DefaultStmt 0x12a142258 <line:51:3, line:52:9>
    |   |     `-GotoStmt 0x12a142240 <col:4, col:9> 'notsupported' 0x12a141d50
    |   |-BreakStmt 0x12a1422a0 <line:54:3>
    |   |-DefaultStmt 0x12a142478 <line:55:2, col:9>
    |   | `-NullStmt 0x12a142470 <col:9>
    |   `-BreakStmt 0x12a142498 <line:59:3>
    |-ReturnStmt 0x12a142530 <line:61:2, col:11>
    | `-ParenExpr 0x12a142510 <col:9, col:11> 'int'
    |   `-IntegerLiteral 0x12a1424f0 <col:10> 'int' 1
    |-LabelStmt 0x12a142630 <line:62:1, col:13> 'notsupported'
    | `-NullStmt 0x12a142628 <col:13>
    `-ReturnStmt 0x12a142690 <line:66:2, col:11>
      `-ParenExpr 0x12a142670 <col:9, col:11> 'int'
        `-IntegerLiteral 0x12a142650 <col:10> 'int' 0
