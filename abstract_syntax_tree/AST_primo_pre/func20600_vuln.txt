`-FunctionDecl 0x12c128438  line:1:1 invalid read_bytes 'int (int *, void *, int, int, char *)'
  |-ParmVarDecl 0x12c128128 <col:12, col:18> col:18 invalid fp 'int *'
  |-ParmVarDecl 0x12c1281a8 <col:22, col:28> col:28 used buf 'void *'
  |-ParmVarDecl 0x12c128228 <col:33, col:40> col:40 invalid bytes_to_read 'int'
  |-ParmVarDecl 0x12c1282a8 <col:55, col:59> col:59 used fail_on_eof 'int'
  |-ParmVarDecl 0x12c128328 <line:2:5, col:11> col:11 used errbuf 'char *'
  `-CompoundStmt 0x12c142098 <line:3:1, line:21:1>
    |-UnaryExprOrTypeTraitExpr 0x12c128560 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x12c128540 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c142028 <line:7:2, line:19:2>
    | |-BinaryOperator 0x12c141840 <line:7:6, col:18> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x12c141820 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12c1287d8 <col:18> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12c142008 <col:33, line:19:2>
    |   |-IfStmt 0x12c141f70 <line:8:3, line:17:3> has_else
    |   | |-CallExpr 0x12c141980 <line:8:7, col:16> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x12c141940 <col:7> 'int ()' Function 0x12c141888 'ferror' 'int ()'
    |   | | `-RecoveryExpr 0x12c141960 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-CompoundStmt 0x12c141c20 <col:19, line:11:3>
    |   | | `-CallExpr 0x12c141be0 <line:9:4, line:10:20> '<dependent type>' contains-errors
    |   | |   |-DeclRefExpr 0x12c141a88 <line:9:4> 'int ()' Function 0x12c1419d0 'pcap_fmt_errmsg_for_errno' 'int ()'
    |   | |   |-DeclRefExpr 0x12c141aa8 <col:30> 'char *' lvalue ParmVar 0x12c128328 'errbuf' 'char *'
    |   | |   |-RecoveryExpr 0x12c141ba0 <col:38> '<dependent type>' contains-errors lvalue
    |   | |   |-RecoveryExpr 0x12c141bc0 <line:10:8> '<dependent type>' contains-errors lvalue
    |   | |   `-StringLiteral 0x12c141b40 <col:15> 'char[4]' lvalue "STR"
    |   | `-CompoundStmt 0x12c141f58 <line:11:10, line:17:3>
    |   |   `-IfStmt 0x12c141de0 <line:12:4, line:13:14>
    |   |     |-BinaryOperator 0x12c141d70 <line:12:8, col:26> 'int' contains-errors '&&'
    |   |     | |-BinaryOperator 0x12c141d20 <col:8, col:20> 'int' contains-errors '=='
    |   |     | | |-RecoveryExpr 0x12c141d00 <col:8> '<dependent type>' contains-errors lvalue
    |   |     | | `-IntegerLiteral 0x12c141c50 <col:20> 'int' 0
    |   |     | `-UnaryOperator 0x12c141d58 <col:25, col:26> 'int' prefix '!' cannot overflow
    |   |     |   `-ImplicitCastExpr 0x12c141d40 <col:26> 'int' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x12c141c90 <col:26> 'int' lvalue ParmVar 0x12c1282a8 'fail_on_eof' 'int'
    |   |     `-ReturnStmt 0x12c141dd0 <line:13:5, col:14>
    |   |       `-ParenExpr 0x12c141db0 <col:12, col:14> 'int'
    |   |         `-IntegerLiteral 0x12c141d90 <col:13> 'int' 0
    |   `-ReturnStmt 0x12c141ff8 <line:18:3, col:13>
    |     `-ParenExpr 0x12c141fd8 <col:10, col:13> 'int'
    |       `-UnaryOperator 0x12c141fc0 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x12c141fa0 <col:12> 'int' 1
    `-ReturnStmt 0x12c142088 <line:20:2, col:11>
      `-ParenExpr 0x12c142068 <col:9, col:11> 'int'
        `-IntegerLiteral 0x12c142048 <col:10> 'int' 1
