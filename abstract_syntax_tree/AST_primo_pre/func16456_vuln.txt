`-FunctionDecl 0x14e928318  line:1:1 invalid BuildIndexValueDescription 'int (int, int *, int *)'
  |-ParmVarDecl 0x14e9280f0 <col:28, col:37> col:37 invalid indexRelation 'int'
  |-ParmVarDecl 0x14e9281a8 <line:2:10, col:17> col:17 invalid values 'int *'
  |-ParmVarDecl 0x14e928228 <col:25, col:31> col:31 invalid isnull 'int *'
  `-CompoundStmt 0x14e942ea8 <line:3:1, line:38:1>
    |-DeclStmt 0x14e928508 <line:5:2, col:47>
    | `-VarDecl 0x14e9283f0 <col:2, col:39> col:8 used natts 'int' cinit
    |   `-CXXDependentScopeMemberExpr 0x14e9284c0 <col:16, col:39> '<dependent type>' contains-errors lvalue ->relnatts
    |     `-CXXDependentScopeMemberExpr 0x14e928478 <col:16, col:31> '<dependent type>' contains-errors lvalue ->rd_rel
    |       `-RecoveryExpr 0x14e928458 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x14e9285a0 <line:6:2, col:9>
    | `-VarDecl 0x14e928538 <col:2, col:8> col:8 used i 'int'
    |-CallExpr 0x14e9287c0 <line:8:2, col:21> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e928710 <col:2> 'int ()' Function 0x14e928658 'initStringInfo' 'int ()'
    | `-UnaryOperator 0x14e9287a8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14e928788 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14e941ce0 <line:9:2, line:11:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14e9418e0 <line:9:2> 'int ()' Function 0x14e941828 'appendStringInfo' 'int ()'
    | |-UnaryOperator 0x14e941c78 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x14e941c58 <col:20> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x14e941970 <col:25> 'char[4]' lvalue "STR"
    | `-CallExpr 0x14e941cb0 <line:10:7, line:11:17> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14e941a70 <line:10:7> 'int ()' Function 0x14e9419b8 'pg_get_indexdef_columns' 'int ()'
    |   |-CallExpr 0x14e941bb0 <col:31, col:61> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14e941b70 <col:31> 'int ()' Function 0x14e941ab8 'RelationGetRelid' 'int ()'
    |   | `-RecoveryExpr 0x14e941b90 <col:48> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x14e941c90 <line:11:13> '<dependent type>' contains-errors lvalue
    `-ForStmt 0x14e942d58 <line:13:2, line:33:2>
      |-BinaryOperator 0x14e941d58 <line:13:7, col:11> 'int' '='
      | |-DeclRefExpr 0x14e941d18 <col:7> 'int' lvalue Var 0x14e928538 'i' 'int'
      | `-IntegerLiteral 0x14e941d38 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14e941de8 <col:14, col:18> 'int' contains-errors '<'
      | |-ImplicitCastExpr 0x14e941db8 <col:14> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14e941d78 <col:14> 'int' lvalue Var 0x14e928538 'i' 'int'
      | `-ImplicitCastExpr 0x14e941dd0 <col:18> 'int' contains-errors <LValueToRValue>
      |   `-DeclRefExpr 0x14e941d98 <col:18> 'int' contains-errors lvalue Var 0x14e9283f0 'natts' 'int'
      |-UnaryOperator 0x14e941e28 <col:25, col:26> 'int' postfix '++'
      | `-DeclRefExpr 0x14e941e08 <col:25> 'int' lvalue Var 0x14e928538 'i' 'int'
      `-CompoundStmt 0x14e942d38 <line:14:2, line:33:2>
        |-DeclStmt 0x14e941ec0 <line:15:3, col:15>
        | `-VarDecl 0x14e941e58 <col:3, col:12> col:12 used val 'char *'
        `-IfStmt 0x14e942690 <line:17:3, line:28:3> has_else
          |-ArraySubscriptExpr 0x14e941f48 <line:17:7, col:15> '<dependent type>' contains-errors lvalue
          | |-ImplicitCastExpr 0x14e941f18 <col:7> '<dependent type>' contains-errors <LValueToRValue>
          | | `-RecoveryExpr 0x14e941ed8 <col:7> '<dependent type>' contains-errors lvalue
          | `-ImplicitCastExpr 0x14e941f30 <col:14> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x14e941ef8 <col:14> 'int' lvalue Var 0x14e928538 'i' 'int'
          |-BinaryOperator 0x14e941fc0 <line:18:4, col:10> 'char *' '='
          | |-DeclRefExpr 0x14e941f68 <col:4> 'char *' lvalue Var 0x14e941e58 'val' 'char *'
          | `-ImplicitCastExpr 0x14e941fa8 <col:10> 'char *' <ArrayToPointerDecay>
          |   `-StringLiteral 0x14e941f88 <col:10> 'char[4]' lvalue "STR"
          `-CompoundStmt 0x14e942670 <line:20:3, line:28:3>
            |-CallExpr 0x14e942360 <line:25:4, line:26:33> '<dependent type>' contains-errors
            | |-DeclRefExpr 0x14e9420c0 <line:25:4> 'int ()' Function 0x14e942008 'getTypeOutputInfo' 'int ()'
            | |-ArraySubscriptExpr 0x14e9422d0 <col:22, col:51> '<dependent type>' contains-errors lvalue
            | | |-ImplicitCastExpr 0x14e9422a0 <col:22, col:37> '<dependent type>' contains-errors <LValueToRValue>
            | | | `-CXXDependentScopeMemberExpr 0x14e942100 <col:22, col:37> '<dependent type>' contains-errors lvalue ->rd_opcintype
            | | |   `-RecoveryExpr 0x14e9420e0 <col:22> '<dependent type>' contains-errors lvalue
            | | `-ImplicitCastExpr 0x14e9422b8 <col:50> 'int' <LValueToRValue>
            | |   `-DeclRefExpr 0x14e942148 <col:50> 'int' lvalue Var 0x14e928538 'i' 'int'
            | |-UnaryOperator 0x14e942310 <line:26:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow
            | | `-RecoveryExpr 0x14e9422f0 <col:11> '<dependent type>' contains-errors lvalue
            | `-UnaryOperator 0x14e942348 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow
            |   `-RecoveryExpr 0x14e942328 <col:21> '<dependent type>' contains-errors lvalue
            `-BinaryOperator 0x14e942650 <line:27:4, col:50> 'char *' contains-errors '='
              |-DeclRefExpr 0x14e942398 <col:4> 'char *' lvalue Var 0x14e941e58 'val' 'char *'
              `-CallExpr 0x14e942620 <col:10, col:50> '<dependent type>' contains-errors
                |-DeclRefExpr 0x14e942498 <col:10> 'int ()' Function 0x14e9423e0 'OidOutputFunctionCall' 'int ()'
                |-RecoveryExpr 0x14e9425b0 <col:32> '<dependent type>' contains-errors lvalue
                `-ArraySubscriptExpr 0x14e942600 <col:41, col:49> '<dependent type>' contains-errors lvalue
                  |-ImplicitCastExpr 0x14e9425d0 <col:41> '<dependent type>' contains-errors <LValueToRValue>
                  | `-RecoveryExpr 0x14e9424d0 <col:41> '<dependent type>' contains-errors lvalue
                  `-ImplicitCastExpr 0x14e9425e8 <col:48> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x14e9424f0 <col:48> 'int' lvalue Var 0x14e928538 'i' 'int'
