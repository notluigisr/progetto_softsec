`-FunctionDecl 0x15000df48  line:1:5 invalid mongo_env_write_socket 'int (int *, const void *, int)'
  |-ParmVarDecl 0x15000dd28 <col:29, col:36> col:36 referenced invalid conn 'int *'
  |-ParmVarDecl 0x15000ddd8 <col:42, col:54> col:54 used buf 'const void *'
  |-ParmVarDecl 0x15000de58 <col:59, col:63> col:63 used len 'int'
  `-CompoundStmt 0x150028070 <col:69, line:26:1>
    |-DeclStmt 0x15000e0d8 <line:2:5, col:27>
    | `-VarDecl 0x15000e020 <col:5, col:24> col:17 used cbuf 'const char *' cinit
    |   `-ImplicitCastExpr 0x15000e0c0 <col:24> 'const char *' <BitCast>
    |     `-ImplicitCastExpr 0x15000e0a8 <col:24> 'const void *' <LValueToRValue>
    |       `-DeclRefExpr 0x15000e088 <col:24> 'const void *' lvalue ParmVar 0x15000ddd8 'buf' 'const void *'
    |-DeclStmt 0x15000e190 <line:7:5, col:18>
    | `-VarDecl 0x15000e108 <col:5, col:17> col:9 used flags 'int' cinit
    |   `-IntegerLiteral 0x15000e170 <col:17> 'int' 0
    |-WhileStmt 0x150028008 <line:13:5, line:23:5>
    | |-ImplicitCastExpr 0x15000e1c8 <line:13:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15000e1a8 <col:13> 'int' lvalue ParmVar 0x15000de58 'len' 'int'
    | `-CompoundStmt 0x150027fd8 <col:19, line:23:5>
    |   |-DeclStmt 0x150027ae8 <line:14:9, col:56>
    |   | `-VarDecl 0x15000e1f8 <col:9, col:55> col:13 used sent 'int' cinit
    |   |   `-CallExpr 0x150027aa8 <col:20, col:55> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x15000e3c0 <col:20> 'int ()' Function 0x15000e308 'send' 'int ()'
    |   |     |-CXXDependentScopeMemberExpr 0x150027a00 <col:26, col:32> '<dependent type>' contains-errors lvalue ->sock
    |   |     | `-RecoveryExpr 0x15000e3e0 <col:26> '<dependent type>' contains-errors lvalue
    |   |     |-DeclRefExpr 0x150027a48 <col:38> 'const char *' lvalue Var 0x15000e020 'cbuf' 'const char *'
    |   |     |-DeclRefExpr 0x150027a68 <col:44> 'int' lvalue ParmVar 0x15000de58 'len' 'int'
    |   |     `-DeclRefExpr 0x150027a88 <col:49> 'int' lvalue Var 0x15000e108 'flags' 'int'
    |   |-IfStmt 0x150027ea8 <line:15:9, line:20:9>
    |   | |-BinaryOperator 0x150027b70 <line:15:14, col:23> 'int' contains-errors '=='
    |   | | |-ImplicitCastExpr 0x150027b58 <col:14> 'int' contains-errors <LValueToRValue>
    |   | | | `-DeclRefExpr 0x150027b00 <col:14> 'int' contains-errors lvalue Var 0x15000e1f8 'sent' 'int'
    |   | | `-UnaryOperator 0x150027b40 <col:22, col:23> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x150027b20 <col:23> 'int' 1
    |   | `-CompoundStmt 0x150027e80 <col:27, line:20:9>
    |   |   |-IfStmt 0x150027d10 <line:16:13, line:17:35>
    |   |   | |-BinaryOperator 0x150027c20 <line:16:17, col:26> 'int' contains-errors '=='
    |   |   | | |-RecoveryExpr 0x150027be0 <col:17> '<dependent type>' contains-errors lvalue
    |   |   | | `-RecoveryExpr 0x150027c00 <col:26> '<dependent type>' contains-errors lvalue
    |   |   | `-BinaryOperator 0x150027cf0 <line:17:17, col:35> '<dependent type>' contains-errors '='
    |   |   |   |-CXXDependentScopeMemberExpr 0x150027c88 <col:17, col:23> '<dependent type>' contains-errors lvalue ->connected
    |   |   |   | `-RecoveryExpr 0x150027c60 <col:17> '<dependent type>' contains-errors lvalue
    |   |   |   |   `-DeclRefExpr 0x150027c40 <col:17> 'int *' lvalue ParmVar 0x15000dd28 'conn' 'int *'
    |   |   |   `-IntegerLiteral 0x150027cd0 <col:35> 'int' 0
    |   |   |-BinaryOperator 0x150027e18 <line:18:13, col:25> '<dependent type>' contains-errors '='
    |   |   | |-CXXDependentScopeMemberExpr 0x150027d78 <col:13, col:19> '<dependent type>' contains-errors lvalue ->err
    |   |   | | `-RecoveryExpr 0x150027d50 <col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x150027d30 <col:13> 'int *' lvalue ParmVar 0x15000dd28 'conn' 'int *'
    |   |   | `-RecoveryExpr 0x150027df8 <col:25> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x150027e70 <line:19:13, col:20>
    |   |     `-RecoveryExpr 0x150027e50 <col:20> '<dependent type>' contains-errors lvalue
    |   |-CompoundAssignOperator 0x150027f20 <line:21:9, col:17> 'const char *' contains-errors '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    |   | |-DeclRefExpr 0x150027ec8 <col:9> 'const char *' lvalue Var 0x15000e020 'cbuf' 'const char *'
    |   | `-ImplicitCastExpr 0x150027f08 <col:17> 'int' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x150027ee8 <col:17> 'int' contains-errors lvalue Var 0x15000e1f8 'sent' 'int'
    |   `-CompoundAssignOperator 0x150027fa8 <line:22:9, col:16> 'int' contains-errors '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x150027f50 <col:9> 'int' lvalue ParmVar 0x15000de58 'len' 'int'
    |     `-ImplicitCastExpr 0x150027f90 <col:16> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x150027f70 <col:16> 'int' contains-errors lvalue Var 0x15000e1f8 'sent' 'int'
    `-ReturnStmt 0x150028060 <line:25:5, col:12>
      `-RecoveryExpr 0x150028040 <col:12> '<dependent type>' contains-errors lvalue
