`-FunctionDecl 0x1400facb8  line:1:5 invalid xml_init 'int (int *, char **)'
  |-ParmVarDecl 0x1400fab28 <col:14, col:26> col:26 referenced invalid msr 'int *'
  |-ParmVarDecl 0x1400fabd8 <col:31, col:38> col:38 used error_msg 'char **'
  `-CompoundStmt 0x1401143d8 <col:49, line:9:1>
    |-IfStmt 0x1400fae50 <line:2:5, col:36>
    | |-BinaryOperator 0x1400fade8 <col:9, col:22> 'int' contains-errors '=='
    | | |-DeclRefExpr 0x1400fad70 <col:9> 'char **' lvalue ParmVar 0x1400fabd8 'error_msg' 'char **'
    | | `-RecoveryExpr 0x1400fadc8 <col:22> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1400fae40 <col:28, col:36>
    |   `-UnaryOperator 0x1400fae28 <col:35, col:36> 'int' prefix '-'
    |     `-IntegerLiteral 0x1400fae08 <col:36> 'int' 1
    |-BinaryOperator 0x1400faf78 <line:3:5, col:18> 'char *' contains-errors '='
    | |-UnaryOperator 0x1400faf40 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1400faf28 <col:6> 'char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x1400fae70 <col:6> 'char **' lvalue ParmVar 0x1400fabd8 'error_msg' 'char **'
    | `-RecoveryExpr 0x1400faf58 <col:18> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x140114388 <line:6:5, col:35>
    | |-BinaryOperator 0x140114320 <col:9, col:21> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x140114280 <col:9, col:14> '<dependent type>' contains-errors lvalue ->xml
    | | | `-RecoveryExpr 0x140114260 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x140114300 <col:21> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x140114378 <col:27, col:35>
    |   `-UnaryOperator 0x140114360 <col:34, col:35> 'int' prefix '-'
    |     `-IntegerLiteral 0x140114340 <col:35> 'int' 1
    `-ReturnStmt 0x1401143c8 <line:8:5, col:12>
      `-IntegerLiteral 0x1401143a8 <col:12> 'int' 1
