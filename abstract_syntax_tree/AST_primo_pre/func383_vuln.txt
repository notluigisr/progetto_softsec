`-FunctionDecl 0x14e80dee8  line:1:10 invalid getBase64Row 'int (char *, int, char *)'
  |-ParmVarDecl 0x14e80dcf0 <col:23, col:29> col:29 used ptr 'char *'
  |-ParmVarDecl 0x14e80dd70 <col:34, col:38> col:38 used indent 'int'
  |-ParmVarDecl 0x14e80ddf0 <col:46, col:50> col:52 'char *'
  `-CompoundStmt 0x14e828460 <line:2:5, line:18:5>
    |-WhileStmt 0x14e828148 <line:11:9, line:12:15>
    | |-CallExpr 0x14e8280b8 <line:11:15, col:30> 'int'
    | | |-ImplicitCastExpr 0x14e8280a0 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x14e828000 <col:15> 'int ()' Function 0x14e827f48 'cv_isprint' 'int ()'
    | | `-ImplicitCastExpr 0x14e8280f8 <col:26, col:27> 'int' <IntegralCast>
    | |   `-ImplicitCastExpr 0x14e8280e0 <col:26, col:27> 'char' <LValueToRValue>
    | |     `-UnaryOperator 0x14e828058 <col:26, col:27> 'char' lvalue prefix '*' cannot overflow
    | |       `-ImplicitCastExpr 0x14e828040 <col:27> 'char *' <LValueToRValue>
    | |         `-DeclRefExpr 0x14e828020 <col:27> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'
    | `-UnaryOperator 0x14e828130 <line:12:13, col:15> 'char *' prefix '++'
    |   `-DeclRefExpr 0x14e828110 <col:15> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'
    |-IfStmt 0x14e8283d8 <line:13:9, line:14:37>
    | |-BinaryOperator 0x14e828200 <line:13:13, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x14e8281e8 <col:13, col:14> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x14e8281d0 <col:13, col:14> 'char' <LValueToRValue>
    | | |   `-UnaryOperator 0x14e8281a0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    | | |     `-ImplicitCastExpr 0x14e828188 <col:14> 'char *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x14e828168 <col:14> 'char *' lvalue ParmVar 0x14e80dcf0 'ptr' 'char *'
    | | `-CharacterLiteral 0x14e8281b8 <col:21> 'int' 0
    | `-CallExpr 0x14e828398 <line:14:13, col:37> 'int'
    |   |-ImplicitCastExpr 0x14e828380 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14e828300 <col:13> 'int ()' Function 0x14e828248 'CV_PARSE_ERROR_CPP' 'int ()'
    |   `-ImplicitCastExpr 0x14e8283c0 <col:32> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x14e828360 <col:32> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x14e828450 <line:17:9, col:16>
      `-RecoveryExpr 0x14e828430 <col:16> '<dependent type>' contains-errors lvalue
