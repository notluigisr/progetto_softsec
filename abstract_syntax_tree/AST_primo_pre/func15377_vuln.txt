`-FunctionDecl 0x135928258  line:1:1 invalid rb_fiddle_handle_sym 'int (int, int)'
  |-ParmVarDecl 0x1359280f0 <col:22, col:28> col:28 invalid self 'int'
  |-ParmVarDecl 0x135928170 <col:34, col:40> col:40 invalid sym 'int'
  `-CompoundStmt 0x135942100 <line:2:1, line:11:1>
    |-DeclStmt 0x1359284f8 <line:3:5, col:36>
    | |-RecordDecl 0x135928310 <col:5, col:12> col:12 struct dl_handle
    | `-VarDecl 0x135928478 <col:5, col:23> col:23 used fiddle_handle 'struct dl_handle *'
    |-IfStmt 0x135941df8 <line:6:5, line:8:5>
    | |-UnaryOperator 0x135941bd0 <line:6:9, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x135941bb8 <col:11, col:26> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x135941b90 <col:11, col:26> '<dependent type>' contains-errors lvalue
    | |     `-DeclRefExpr 0x135928700 <col:11> 'struct dl_handle *' lvalue Var 0x135928478 'fiddle_handle' 'struct dl_handle *'
    | `-CompoundStmt 0x135941de0 <col:32, line:8:5>
    |   `-CallExpr 0x135941db0 <line:7:2, col:33> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x135941cc8 <col:2> 'int ()' Function 0x135941c10 'rb_raise' 'int ()'
    |     |-RecoveryExpr 0x135941d90 <col:11> '<dependent type>' contains-errors lvalue
    |     `-StringLiteral 0x135941d40 <col:28> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x1359420f0 <line:10:5, col:70>
      `-CallExpr 0x1359420c0 <col:12, col:70> '<dependent type>' contains-errors
        |-DeclRefExpr 0x135941ef8 <col:12> 'int ()' Function 0x135941e40 'fiddle_handle_sym' 'int ()'
        |-RecoveryExpr 0x135941f50 <col:30, col:45> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x135941f18 <col:30> 'struct dl_handle *' lvalue Var 0x135928478 'fiddle_handle' 'struct dl_handle *'
        `-CallExpr 0x135942098 <col:50, col:69> '<dependent type>' contains-errors
          |-DeclRefExpr 0x135942058 <col:50> 'int ()' Function 0x135941fa0 'StringValueCStr' 'int ()'
          `-RecoveryExpr 0x135942078 <col:66> '<dependent type>' contains-errors lvalue
