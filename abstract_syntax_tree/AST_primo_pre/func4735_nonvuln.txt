`-FunctionDecl 0x12c940de8  line:1:23 filename_create 'struct dentry *(int, struct filename *, struct path *, unsigned int)' static
  |-ParmVarDecl 0x12c928178 <col:39, col:43> col:43 used dfd 'int'
  |-ParmVarDecl 0x12c928768 <col:48, col:65> col:65 used name 'struct filename *'
  |-ParmVarDecl 0x12c940b68 <line:2:5, col:18> col:18 used path 'struct path *'
  |-ParmVarDecl 0x12c940be8 <col:24, col:37> col:37 used lookup_flags 'unsigned int'
  `-CompoundStmt 0x12c948200 <line:3:1, line:56:1>
    |-DeclStmt 0x12c941228 <line:4:2, col:42>
    | `-VarDecl 0x12c940f88 <col:2, col:41> col:17 used dentry 'struct dentry *' cinit
    |   `-CallExpr 0x12c941200 <col:26, col:41> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x12c941120 <col:26> 'int ()' Function 0x12c941068 'ERR_PTR' 'int ()'
    |     `-UnaryOperator 0x12c9411e8 <col:34, col:35> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12c9411d0 <col:35> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12c9411b0 <col:35> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12c9413b8 <line:5:2, col:21>
    | |-RecordDecl 0x12c941240 <col:2, col:9> col:9 struct nameidata
    | `-VarDecl 0x12c941338 <col:2, col:19> col:19 referenced invalid nd 'struct nameidata'
    |-DeclStmt 0x12c941450 <line:6:2, col:10>
    | `-VarDecl 0x12c9413e8 <col:2, col:6> col:6 used err2 'int'
    |-DeclStmt 0x12c9414e8 <line:7:2, col:11>
    | `-VarDecl 0x12c941480 <col:2, col:6> col:6 used error 'int'
    |-CompoundAssignOperator 0x12c941588 <line:11:2, col:18> 'unsigned int' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-DeclRefExpr 0x12c941500 <col:2> 'unsigned int' lvalue ParmVar 0x12c940be8 'lookup_flags' 'unsigned int'
    | `-RecoveryExpr 0x12c941568 <col:18> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c941888 <line:13:2, col:68> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c9415b8 <col:2> 'int' lvalue Var 0x12c941480 'error' 'int'
    | `-CallExpr 0x12c941848 <col:10, col:68> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c9416b8 <col:10> 'int ()' Function 0x12c941600 'filename_lookup' 'int ()'
    |   |-DeclRefExpr 0x12c9416d8 <col:26> 'int' lvalue ParmVar 0x12c928178 'dfd' 'int'
    |   |-DeclRefExpr 0x12c9416f8 <col:31> 'struct filename *' lvalue ParmVar 0x12c928768 'name' 'struct filename *'
    |   |-BinaryOperator 0x12c941828 <col:37, col:51> '<dependent type>' contains-errors '|'
    |   | |-RecoveryExpr 0x12c941808 <col:37> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x12c941730 <col:51> 'unsigned int' lvalue ParmVar 0x12c940be8 'lookup_flags' 'unsigned int'
    |   `-UnaryOperator 0x12c941790 <col:65, col:66> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12c941770 <col:66> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c9419d0 <line:14:2, line:15:23>
    | |-ImplicitCastExpr 0x12c9418c8 <line:14:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12c9418a8 <col:6> 'int' lvalue Var 0x12c941480 'error' 'int'
    | `-ReturnStmt 0x12c9419c0 <line:15:3, col:23>
    |   `-ImplicitCastExpr 0x12c9419a8 <col:10, col:23> 'struct dentry *' <IntegralToPointer>
    |     `-CallExpr 0x12c941968 <col:10, col:23> 'int'
    |       |-ImplicitCastExpr 0x12c941950 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x12c9418e0 <col:10> 'int ()' Function 0x12c941068 'ERR_PTR' 'int ()'
    |       `-ImplicitCastExpr 0x12c941990 <col:18> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x12c941900 <col:18> 'int' lvalue Var 0x12c941480 'error' 'int'
    |-IfStmt 0x12c945d48 <line:18:2, line:19:8>
    | |-BinaryOperator 0x12c945cc0 <line:18:6, col:22> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x12c945c20 <col:6, col:9> '<dependent type>' contains-errors lvalue .last_type
    | | | `-RecoveryExpr 0x12c945c00 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12c945ca0 <col:22> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x12c945d30 <line:19:3, col:8> 'out' 0x12c945ce0
    |-CompoundAssignOperator 0x12c945ec0 <line:20:2, col:15> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x12c945db0 <col:2, col:5> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x12c945d88 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c945d68 <col:2> 'struct nameidata' lvalue Var 0x12c941338 'nd' 'struct nameidata'
    | `-UnaryOperator 0x12c945ea8 <col:14, col:15> '<dependent type>' contains-errors prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x12c945e90 <col:15> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12c945e70 <col:15> '<dependent type>' contains-errors lvalue
    |-CompoundAssignOperator 0x12c946060 <line:21:2, col:30> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x12c945f38 <col:2, col:5> '<dependent type>' contains-errors lvalue .flags
    | | `-RecoveryExpr 0x12c945f10 <col:2> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c945ef0 <col:2> 'struct nameidata' lvalue Var 0x12c941338 'nd' 'struct nameidata'
    | `-BinaryOperator 0x12c946040 <col:14, col:30> '<dependent type>' contains-errors '|'
    |   |-RecoveryExpr 0x12c946000 <col:14> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x12c946020 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c946288 <line:24:2, col:35> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c946090 <col:2> 'int' lvalue Var 0x12c9413e8 'err2' 'int'
    | `-CallExpr 0x12c946260 <col:9, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c946190 <col:9> 'int ()' Function 0x12c9460d8 'mnt_want_write' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12c946218 <col:24, col:32> '<dependent type>' contains-errors lvalue .mnt
    |     `-CXXDependentScopeMemberExpr 0x12c9461d0 <col:24, col:27> '<dependent type>' contains-errors lvalue .path
    |       `-RecoveryExpr 0x12c9461b0 <col:24> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x12c946568 <line:26:2, col:69> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c946388 <col:2> 'int ()' Function 0x12c9462d0 'mutex_lock_nested' 'int ()'
    | |-UnaryOperator 0x12c9464e8 <col:20, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-CXXDependentScopeMemberExpr 0x12c9464a0 <col:21, col:46> '<dependent type>' contains-errors lvalue ->i_mutex
    | |   `-CXXDependentScopeMemberExpr 0x12c946458 <col:21, col:37> '<dependent type>' contains-errors lvalue ->d_inode
    | |     `-CXXDependentScopeMemberExpr 0x12c946410 <col:21, col:29> '<dependent type>' contains-errors lvalue .dentry
    | |       `-CXXDependentScopeMemberExpr 0x12c9463c8 <col:21, col:24> '<dependent type>' contains-errors lvalue .path
    | |         `-RecoveryExpr 0x12c9463a8 <col:21> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12c946548 <col:55> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c946718 <line:27:2, col:26> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x12c946598 <col:2> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    | `-CallExpr 0x12c9466f0 <col:11, col:26> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c946698 <col:11> 'int ()' Function 0x12c9465e0 'lookup_hash' 'int ()'
    |   `-UnaryOperator 0x12c9466d8 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x12c9466b8 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c946918 <line:28:2, line:29:8>
    | |-CallExpr 0x12c946870 <line:28:6, col:19> 'int' contains-errors
    | | |-ImplicitCastExpr 0x12c946858 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12c946818 <col:6> 'int ()' Function 0x12c946760 'IS_ERR' 'int ()'
    | | `-ImplicitCastExpr 0x12c946898 <col:13> 'struct dentry *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12c946838 <col:13> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    | `-GotoStmt 0x12c946900 <line:29:3, col:8> 'unlock' 0x12c9468b0
    |-BinaryOperator 0x12c946a10 <line:31:2, col:11> 'int' contains-errors '='
    | |-DeclRefExpr 0x12c946938 <col:2> 'int' lvalue Var 0x12c941480 'error' 'int'
    | `-UnaryOperator 0x12c9469f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   `-ImplicitCastExpr 0x12c9469e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |     `-RecoveryExpr 0x12c9469c0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c947218 <line:32:2, line:33:8>
    | |-CallExpr 0x12c946b68 <line:32:6, col:26> 'int' contains-errors
    | | |-ImplicitCastExpr 0x12c946b50 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12c946b10 <col:6> 'int ()' Function 0x12c946a58 'd_is_positive' 'int ()'
    | | `-ImplicitCastExpr 0x12c946b90 <col:20> 'struct dentry *' contains-errors <LValueToRValue>
    | |   `-DeclRefExpr 0x12c946b30 <col:20> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    | `-GotoStmt 0x12c947200 <line:33:3, col:8> 'fail' 0x12c946ba8
    |-IfStmt 0x12c947558 <line:36:2, line:39:2>
    | |-RecoveryExpr 0x12c9474e8 <line:36:6, col:51> '_Bool' contains-errors
    | `-CompoundStmt 0x12c947540 <col:54, line:39:2>
    |   `-GotoStmt 0x12c947528 <line:38:3, col:8> 'fail' 0x12c946ba8
    |-IfStmt 0x12c9476c0 <line:40:2, line:43:2>
    | |-CallExpr 0x12c9475d0 <line:40:6, col:19> 'int'
    | | |-ImplicitCastExpr 0x12c9475b8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x12c947578 <col:6> 'int ()' Function 0x12c947260 'unlikely' 'int ()'
    | | `-ImplicitCastExpr 0x12c9475f8 <col:15> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c947598 <col:15> 'int' lvalue Var 0x12c9413e8 'err2' 'int'
    | `-CompoundStmt 0x12c9476a0 <col:22, line:43:2>
    |   |-BinaryOperator 0x12c947668 <line:41:3, col:11> 'int' '='
    |   | |-DeclRefExpr 0x12c947610 <col:3> 'int' lvalue Var 0x12c941480 'error' 'int'
    |   | `-ImplicitCastExpr 0x12c947650 <col:11> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12c947630 <col:11> 'int' lvalue Var 0x12c9413e8 'err2' 'int'
    |   `-GotoStmt 0x12c947688 <line:42:3, col:8> 'fail' 0x12c946ba8
    |-BinaryOperator 0x12c947798 <line:44:2, col:13> 'struct path' contains-errors '='
    | |-UnaryOperator 0x12c947718 <col:2, col:3> 'struct path' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12c947700 <col:3> 'struct path *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c9476e0 <col:3> 'struct path *' lvalue ParmVar 0x12c940b68 'path' 'struct path *'
    | `-CXXDependentScopeMemberExpr 0x12c947750 <col:10, col:13> '<dependent type>' contains-errors lvalue .path
    |   `-RecoveryExpr 0x12c947730 <col:10> '<dependent type>' contains-errors lvalue
    |-ReturnStmt 0x12c9477f0 <line:45:2, col:9>
    | `-ImplicitCastExpr 0x12c9477d8 <col:9> 'struct dentry *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x12c9477b8 <col:9> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    |-LabelStmt 0x12c947978 <line:46:1, line:47:13> 'fail'
    | `-CallExpr 0x12c947938 <col:2, col:13> 'int' contains-errors
    |   |-ImplicitCastExpr 0x12c947920 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12c9478e0 <col:2> 'int ()' Function 0x12c947828 'dput' 'int ()'
    |   `-ImplicitCastExpr 0x12c947960 <col:7> 'struct dentry *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x12c947900 <col:7> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    |-BinaryOperator 0x12c947a68 <line:48:2, col:24> 'struct dentry *' contains-errors '='
    | |-DeclRefExpr 0x12c947998 <col:2> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
    | `-ImplicitCastExpr 0x12c947a50 <col:11, col:24> 'struct dentry *' <IntegralToPointer>
    |   `-CallExpr 0x12c947a10 <col:11, col:24> 'int'
    |     |-ImplicitCastExpr 0x12c9479f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c9479b8 <col:11> 'int ()' Function 0x12c941068 'ERR_PTR' 'int ()'
    |     `-ImplicitCastExpr 0x12c947a38 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c9479d8 <col:19> 'int' lvalue Var 0x12c941480 'error' 'int'
    |-LabelStmt 0x12c947d08 <line:49:1, line:50:48> 'unlock'
    | `-CallExpr 0x12c947ce0 <col:2, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c947b68 <col:2> 'int ()' Function 0x12c947ab0 'mutex_unlock' 'int ()'
    |   `-UnaryOperator 0x12c947cc8 <col:15, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12c947c80 <col:16, col:41> '<dependent type>' contains-errors lvalue ->i_mutex
    |       `-CXXDependentScopeMemberExpr 0x12c947c38 <col:16, col:32> '<dependent type>' contains-errors lvalue ->d_inode
    |         `-CXXDependentScopeMemberExpr 0x12c947bf0 <col:16, col:24> '<dependent type>' contains-errors lvalue .dentry
    |           `-CXXDependentScopeMemberExpr 0x12c947ba8 <col:16, col:19> '<dependent type>' contains-errors lvalue .path
    |             `-RecoveryExpr 0x12c947b88 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c947f50 <line:51:2, line:52:29>
    | |-UnaryOperator 0x12c947d60 <line:51:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12c947d48 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c947d28 <col:7> 'int' lvalue Var 0x12c9413e8 'err2' 'int'
    | `-CallExpr 0x12c947f28 <line:52:3, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c947e58 <col:3> 'int ()' Function 0x12c947da0 'mnt_drop_write' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x12c947ee0 <col:18, col:26> '<dependent type>' contains-errors lvalue .mnt
    |     `-CXXDependentScopeMemberExpr 0x12c947e98 <col:18, col:21> '<dependent type>' contains-errors lvalue .path
    |       `-RecoveryExpr 0x12c947e78 <col:18> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x12c948118 <line:53:1, line:54:19> 'out'
    | `-CallExpr 0x12c9480f0 <col:2, col:19> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c948050 <col:2> 'int ()' Function 0x12c947f98 'path_put' 'int ()'
    |   `-UnaryOperator 0x12c9480d8 <col:11, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-CXXDependentScopeMemberExpr 0x12c948090 <col:12, col:15> '<dependent type>' contains-errors lvalue .path
    |       `-RecoveryExpr 0x12c948070 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12c948170 <line:55:2, col:9>
      `-ImplicitCastExpr 0x12c948158 <col:9> 'struct dentry *' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x12c948138 <col:9> 'struct dentry *' contains-errors lvalue Var 0x12c940f88 'dentry' 'struct dentry *'
