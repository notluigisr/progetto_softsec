`-FunctionDecl 0x12181f3a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x12181f2d8 <col:14> col:14 mb_ereg_search_init 'int'
  `-CompoundStmt 0x123009168 <line:2:1, line:51:1>
    |-RecoveryExpr 0x12181f748 <line:3:2, col:30> '<dependent type>' contains-errors lvalue
    | |-UnaryExprOrTypeTraitExpr 0x12181f6f0 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x12181f6d0 <col:9> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x12181f728 <col:16, col:30> 'int'
    |   `-ImplicitCastExpr 0x12181f710 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x12181f600 <col:16> 'int ()' Function 0x12181f548 'ZEND_NUM_ARGS' 'int ()'
    |-DeclStmt 0x12181f918 <line:5:2, col:47>
    | |-VarDecl 0x12181f7a8 <col:2, col:22> col:8 used arg_pattern 'char *' cinit
    | | `-RecoveryExpr 0x12181f828 <col:22> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x12181f860 <col:2, col:43> col:29 used arg_options 'char *' cinit
    |   `-RecoveryExpr 0x12181f8e0 <col:43> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x122110ca0 <line:6:2, col:46>
    | |-VarDecl 0x12181f948 <col:2, col:24> col:6 used arg_pattern_len 'int' cinit
    | | `-IntegerLiteral 0x12181f9b0 <col:24> 'int' 0
    | `-VarDecl 0x122110c00 <col:2, col:45> col:27 used arg_options_len 'int' cinit
    |   `-IntegerLiteral 0x122110c68 <col:45> 'int' 0
    |-IfStmt 0x122110e60 <line:10:2, line:12:2>
    | |-RecoveryExpr 0x122110e18 <line:10:6, col:128> '_Bool' contains-errors
    | `-CompoundStmt 0x122110e48 <col:137, line:12:2>
    |   `-ReturnStmt 0x122110e38 <line:11:3>
    |-IfStmt 0x122111180 <line:14:2, line:17:2>
    | |-BinaryOperator 0x122110fe8 <line:14:6, col:37> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x122110f90 <col:6, col:13> 'int' contains-errors '>'
    | | | |-RecoveryExpr 0x122110f70 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-IntegerLiteral 0x122110e98 <col:13> 'int' 1
    | | `-BinaryOperator 0x122110fc8 <col:18, col:37> 'int' '=='
    | |   |-ImplicitCastExpr 0x122110fb0 <col:18> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x122110ed8 <col:18> 'int' lvalue Var 0x12181f948 'arg_pattern_len' 'int'
    | |   `-IntegerLiteral 0x122110ef8 <col:37> 'int' 0
    | `-CompoundStmt 0x122111170 <col:40, line:17:2>
    |-IfStmt 0x122111470 <line:22:2, line:25:2>
    | |-RecoveryExpr 0x1221112e0 <line:22:6, col:14> '_Bool' contains-errors
    | `-CompoundStmt 0x122111460 <col:17, line:25:2>
    |-IfStmt 0x1221116b8 <line:27:2, line:32:2>
    | |-RecoveryExpr 0x1221114b0 <line:27:6, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x1221116a0 <col:16, line:32:2>
    |   `-IfStmt 0x122111680 <line:29:3, line:31:3>
    |     |-RecoveryExpr 0x122111650 <line:29:7, col:139> '_Bool' contains-errors
    |     `-CompoundStmt 0x122111670 <col:145, line:31:3>
    |-IfStmt 0x122111868 <line:34:2, line:37:2>
    | |-RecoveryExpr 0x1221116f8 <line:34:6, col:27> '_Bool' contains-errors
    | `-CompoundStmt 0x122111858 <col:33, line:37:2>
    `-IfStmt 0x123009148 <line:45:2, line:48:2>
      |-RecoveryExpr 0x122111b48 <line:45:6, col:28> '_Bool' contains-errors
      `-CompoundStmt 0x123009138 <col:34, line:48:2>
