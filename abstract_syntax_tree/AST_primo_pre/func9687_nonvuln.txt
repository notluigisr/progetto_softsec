`-FunctionDecl 0x14800de38  line:1:1 TEST_F 'int (int, int)'
  |-ParmVarDecl 0x14800dd58 <col:8> col:8 GroupVerifierTest 'int'
  |-ParmVarDecl 0x14800dcd8 <col:27> col:27 TestRequiresAllBothFailed 'int'
  `-CompoundStmt 0x14980aa58 <col:54, line:18:1>
    |-RecoveryExpr 0x14800df80 <line:2:3> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14980a4e0 <line:6:3, col:47> '<dependent type>' contains-errors
    | |-CXXDependentScopeMemberExpr 0x14980a498 <col:3, col:40> '<dependent type>' contains-errors lvalue .Times
    | | `-CallExpr 0x14980a468 <col:3, col:38> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14800e1c8 <col:3> 'int ()' Function 0x14800e110 'EXPECT_CALL' 'int ()'
    | |   |-RecoveryExpr 0x14980a400 <col:15> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x14980a440 <col:25, col:37> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x14800e2e0 <col:25> 'int ()' Function 0x14800e228 'setPayload' 'int ()'
    | |     `-RecoveryExpr 0x14980a420 <col:36> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x14800e3b8 <col:46> 'int' 0
    |-DeclStmt 0x14980a710 <line:8:3, col:22>
    | `-VarDecl 0x14980a670 <col:3, col:18> col:8 used headers 'int' auto cinit
    |   `-RecoveryExpr 0x14980a6f0 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14980a918 <line:14:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14980a820 <col:3> 'int ()' Function 0x14980a768 'EXPECT_FALSE' 'int ()'
    | `-CallExpr 0x14980a8f0 <col:16, col:33> '<dependent type>' contains-errors
    |   |-RecoveryExpr 0x14980a860 <col:16, col:24> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x14980a840 <col:16> 'int' contains-errors lvalue Var 0x14980a670 'headers' 'int'
    |   `-StringLiteral 0x14980a8d0 <col:28> 'char[4]' lvalue "STR"
    `-CallExpr 0x14980a9f0 <line:15:3, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x14980a940 <col:3> 'int ()' Function 0x14980a768 'EXPECT_FALSE' 'int ()'
      `-CallExpr 0x14980a9c8 <col:16, col:33> '<dependent type>' contains-errors
        |-RecoveryExpr 0x14980a980 <col:16, col:24> '<dependent type>' contains-errors lvalue
        | `-DeclRefExpr 0x14980a960 <col:16> 'int' contains-errors lvalue Var 0x14980a670 'headers' 'int'
        `-StringLiteral 0x14980a9a8 <col:28> 'char[4]' lvalue "STR"
