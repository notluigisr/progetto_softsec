`-FunctionDecl 0x138028f48  line:1:12 con_font_copy 'int (struct vc_data *, struct console_font_op *)' static
  |-ParmVarDecl 0x138010a48 <col:26, col:42> col:42 used vc 'struct vc_data *'
  |-ParmVarDecl 0x138028e28 <col:46, col:70> col:70 used op 'struct console_font_op *'
  `-CompoundStmt 0x1388eff58 <line:2:1, line:20:1>
    |-DeclStmt 0x138029128 <line:3:2, col:22>
    | `-VarDecl 0x138029060 <col:2, col:16> col:6 used con 'int' cinit
    |   `-RecoveryExpr 0x138029100 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x1380290c8 <col:12> 'struct console_font_op *' lvalue ParmVar 0x138028e28 'op' 'struct console_font_op *'
    |-DeclStmt 0x1380291c0 <line:4:2, col:8>
    | `-VarDecl 0x138029158 <col:2, col:6> col:6 used rc 'int'
    |-CallExpr 0x138029368 <line:7:2, col:15> 'int'
    | `-ImplicitCastExpr 0x138029350 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x138029300 <col:2> 'int ()' Function 0x138029248 'console_lock' 'int ()'
    |-IfStmt 0x138029d30 <line:8:2, line:17:40> has_else
    | |-BinaryOperator 0x138029440 <line:8:6, col:21> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x1380293c0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x138029388 <col:6> 'struct vc_data *' lvalue ParmVar 0x138010a48 'vc' 'struct vc_data *'
    | | `-RecoveryExpr 0x138029420 <col:21> '<dependent type>' contains-errors lvalue
    | |-BinaryOperator 0x138029538 <line:9:3, col:9> 'int' contains-errors '='
    | | |-DeclRefExpr 0x138029460 <col:3> 'int' lvalue Var 0x138029158 'rc' 'int'
    | | `-UnaryOperator 0x138029520 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    | |   `-ImplicitCastExpr 0x138029508 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1380294e8 <col:9> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x138029d00 <line:10:7, line:17:40> has_else
    |   |-UnaryOperator 0x138029618 <line:10:11, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   | `-ImplicitCastExpr 0x138029600 <col:12, col:23> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-CXXDependentScopeMemberExpr 0x1380295b8 <col:12, col:23> '<dependent type>' contains-errors lvalue ->con_font_copy
    |   |     `-RecoveryExpr 0x138029590 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x138029558 <col:12> 'struct vc_data *' lvalue ParmVar 0x138010a48 'vc' 'struct vc_data *'
    |   |-BinaryOperator 0x138029708 <line:11:3, col:9> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x138029630 <col:3> 'int' lvalue Var 0x138029158 'rc' 'int'
    |   | `-UnaryOperator 0x1380296f0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x1380296d8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1380296b8 <col:9> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x138029cd0 <line:12:7, line:17:40> has_else
    |     |-BinaryOperator 0x138029930 <line:12:11, col:44> 'int' contains-errors '||'
    |     | |-BinaryOperator 0x138029780 <col:11, col:17> 'int' contains-errors '<'
    |     | | |-ImplicitCastExpr 0x138029768 <col:11> 'int' contains-errors <LValueToRValue>
    |     | | | `-DeclRefExpr 0x138029728 <col:11> 'int' contains-errors lvalue Var 0x138029060 'con' 'int'
    |     | | `-IntegerLiteral 0x138029748 <col:17> 'int' 0
    |     | `-UnaryOperator 0x138029918 <col:22, col:44> 'int' contains-errors prefix '!' cannot overflow
    |     |   `-CallExpr 0x1380298d8 <col:23, col:44> 'int' contains-errors
    |     |     |-ImplicitCastExpr 0x1380298c0 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x138029880 <col:23> 'int ()' Function 0x1380297c8 'vc_cons_allocated' 'int ()'
    |     |     `-ImplicitCastExpr 0x138029900 <col:41> 'int' contains-errors <LValueToRValue>
    |     |       `-DeclRefExpr 0x1380298a0 <col:41> 'int' contains-errors lvalue Var 0x138029060 'con' 'int'
    |     |-BinaryOperator 0x138029a28 <line:13:3, col:9> 'int' contains-errors '='
    |     | |-DeclRefExpr 0x138029950 <col:3> 'int' lvalue Var 0x138029158 'rc' 'int'
    |     | `-UnaryOperator 0x138029a10 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     |   `-ImplicitCastExpr 0x1380299f8 <col:9> '<dependent type>' contains-errors <LValueToRValue>
    |     |     `-RecoveryExpr 0x1380299d8 <col:9> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x138029ca0 <line:14:7, line:17:40> has_else
    |       |-BinaryOperator 0x138029ac8 <line:14:11, col:22> 'int' contains-errors '=='
    |       | |-DeclRefExpr 0x138029a48 <col:11> 'int' contains-errors lvalue Var 0x138029060 'con' 'int'
    |       | `-RecoveryExpr 0x138029aa0 <col:18, col:22> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x138029a68 <col:18> 'struct vc_data *' lvalue ParmVar 0x138010a48 'vc' 'struct vc_data *'
    |       |-BinaryOperator 0x138029b28 <line:15:3, col:8> 'int' '='
    |       | |-DeclRefExpr 0x138029ae8 <col:3> 'int' lvalue Var 0x138029158 'rc' 'int'
    |       | `-IntegerLiteral 0x138029b08 <col:8> 'int' 0
    |       `-BinaryOperator 0x138029c80 <line:17:3, col:40> 'int' contains-errors '='
    |         |-DeclRefExpr 0x138029b48 <col:3> 'int' lvalue Var 0x138029158 'rc' 'int'
    |         `-CallExpr 0x138029c50 <col:8, col:40> '<dependent type>' contains-errors
    |           |-CXXDependentScopeMemberExpr 0x138029bc8 <col:8, col:19> '<dependent type>' contains-errors lvalue ->con_font_copy
    |           | `-RecoveryExpr 0x138029ba0 <col:8, col:12> '<dependent type>' contains-errors lvalue
    |           |   `-DeclRefExpr 0x138029b68 <col:8> 'struct vc_data *' lvalue ParmVar 0x138010a48 'vc' 'struct vc_data *'
    |           |-DeclRefExpr 0x138029c10 <col:33> 'struct vc_data *' lvalue ParmVar 0x138010a48 'vc' 'struct vc_data *'
    |           `-DeclRefExpr 0x138029c30 <col:37> 'int' contains-errors lvalue Var 0x138029060 'con' 'int'
    |-CallExpr 0x1388efef0 <line:18:2, col:17> 'int'
    | `-ImplicitCastExpr 0x1388efed8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1388efeb8 <col:2> 'int ()' Function 0x1388efe00 'console_unlock' 'int ()'
    `-ReturnStmt 0x1388eff48 <line:19:2, col:9>
      `-ImplicitCastExpr 0x1388eff30 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1388eff10 <col:9> 'int' lvalue Var 0x138029158 'rc' 'int'
