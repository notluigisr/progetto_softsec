`-FunctionDecl 0x13100dd90  line:1:6 wait_for_receiver 'void (void)'
  `-CompoundStmt 0x131028358 <line:2:1, line:37:1>
    |-IfStmt 0x13100e158 <line:3:2, line:4:14>
    | |-UnaryOperator 0x13100dfa8 <line:3:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13100df90 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-CXXDependentScopeMemberExpr 0x13100df48 <col:7, col:13> '<dependent type>' contains-errors lvalue .raw_input_ends_before
    | |     `-RecoveryExpr 0x13100df28 <col:7> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x13100e138 <line:4:3, col:14> 'int'
    |   `-ImplicitCastExpr 0x13100e120 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x13100e0d0 <col:3> 'int ()' Function 0x13100e018 'read_a_msg' 'int ()'
    `-IfStmt 0x131028338 <line:6:2, line:36:2>
      |-CXXDependentScopeMemberExpr 0x13100e1f8 <line:6:6, col:12> '<dependent type>' contains-errors lvalue .raw_input_ends_before
      | `-RecoveryExpr 0x13100e1d8 <col:6> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x131028318 <col:35, line:36:2>
        |-DeclStmt 0x131027500 <line:7:3, col:34>
        | `-VarDecl 0x13100e258 <col:3, col:33> col:7 used ndx 'int' cinit
        |   `-CallExpr 0x1310274d8 <col:13, col:33> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x13100e3a0 <col:13> 'int ()' Function 0x13100e2e8 'read_int' 'int ()'
        |     `-CXXDependentScopeMemberExpr 0x131027490 <col:22, col:28> '<dependent type>' contains-errors lvalue .in_fd
        |       `-RecoveryExpr 0x131027470 <col:22> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x1310282e8 <line:8:3, line:35:3> has_else
          |-BinaryOperator 0x131027570 <line:8:7, col:13> 'int' contains-errors '<'
          | |-ImplicitCastExpr 0x131027558 <col:7> 'int' contains-errors <LValueToRValue>
          | | `-DeclRefExpr 0x131027518 <col:7> 'int' contains-errors lvalue Var 0x13100e258 'ndx' 'int'
          | `-IntegerLiteral 0x131027538 <col:13> 'int' 0
          |-CompoundStmt 0x131027d80 <col:16, line:21:3>
          | `-SwitchStmt 0x1310275c8 <line:9:4, line:20:4>
          |   |-ImplicitCastExpr 0x1310275b0 <line:9:12> 'int' contains-errors <LValueToRValue>
          |   | `-DeclRefExpr 0x131027590 <col:12> 'int' contains-errors lvalue Var 0x13100e258 'ndx' 'int'
          |   `-CompoundStmt 0x131027d50 <col:17, line:20:4>
          |     |-IfStmt 0x131027b60 <line:12:5, line:13:38>
          |     | |-CallExpr 0x1310277b0 <line:12:9, col:27> '<dependent type>' contains-errors
          |     | | |-DeclRefExpr 0x131027708 <col:9> 'int ()' Function 0x131027650 'DEBUG_GTE' 'int ()'
          |     | | |-RecoveryExpr 0x131027790 <col:19> '<dependent type>' contains-errors lvalue
          |     | | `-IntegerLiteral 0x131027740 <col:26> 'int' 3
          |     | `-CallExpr 0x131027b28 <line:13:6, col:38> '<dependent type>' contains-errors
          |     |   |-DeclRefExpr 0x1310278c0 <col:6> 'int ()' Function 0x131027808 'rprintf' 'int ()'
          |     |   |-RecoveryExpr 0x131027ad0 <col:14> '<dependent type>' contains-errors lvalue
          |     |   |-StringLiteral 0x131027940 <col:21> 'char[4]' lvalue "STR"
          |     |   `-CallExpr 0x131027b08 <col:28, col:37> 'int'
          |     |     `-ImplicitCastExpr 0x131027af0 <col:28> 'int (*)()' <FunctionToPointerDecay>
          |     |       `-DeclRefExpr 0x131027a40 <col:28> 'int ()' Function 0x131027988 'who_am_i' 'int ()'
          |     |-BreakStmt 0x131027b80 <line:14:5>
          |     |-BreakStmt 0x131027ba0 <line:17:5>
          |     `-DefaultStmt 0x131027d30 <line:18:4, line:19:31>
          |       `-CallExpr 0x131027d08 <col:5, col:31> '<dependent type>' contains-errors
          |         |-DeclRefExpr 0x131027c88 <col:5> 'int ()' Function 0x131027bd0 'exit_cleanup' 'int ()'
          |         `-RecoveryExpr 0x131027ce8 <col:18> '<dependent type>' contains-errors lvalue
          `-CompoundStmt 0x1310282c0 <line:21:10, line:35:3>
            |-DeclStmt 0x131027f88 <line:22:4, col:27>
            | |-RecordDecl 0x131027d98 <col:4, col:11> col:11 struct file_list
            | `-VarDecl 0x131027f08 <col:4, col:22> col:22 used flist 'struct file_list *'
            |-IfStmt 0x1310280e0 <line:24:4, line:27:4>
            | |-RecoveryExpr 0x131027ff8 <line:24:8, col:26> '_Bool' contains-errors
            | `-CompoundStmt 0x1310280d0 <col:29, line:27:4>
            `-BinaryOperator 0x1310282a0 <line:29:4, col:24> '<dependent type>' contains-errors '='
              |-RecoveryExpr 0x131028258 <col:4, col:11> '<dependent type>' contains-errors lvalue
              | `-DeclRefExpr 0x131028220 <col:4> 'struct file_list *' lvalue Var 0x131027f08 'flist' 'struct file_list *'
              `-DeclRefExpr 0x131028280 <col:24> 'int' contains-errors lvalue Var 0x13100e258 'ndx' 'int'
