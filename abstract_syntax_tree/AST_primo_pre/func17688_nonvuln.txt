`-FunctionDecl 0x14c00ddf8  line:1:12 invalid lua_websocket_ping 'int (int *)' static
  |-ParmVarDecl 0x14c00dd28 <col:31, col:42> col:42 invalid L 'int *'
  `-CompoundStmt 0x14d008a00 <line:2:1, line:50:1>
    |-DeclStmt 0x14c00dfc8 <line:5:5, col:20>
    | `-VarDecl 0x14c00df60 <col:5, col:19> col:10 used prelude 'char[2]'
    |-BinaryOperator 0x14c027418 <line:11:5, col:18> 'char' '='
    | |-ArraySubscriptExpr 0x14c00e3c0 <col:5, col:14> 'char' lvalue
    | | |-ImplicitCastExpr 0x14c00e3a8 <col:5> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x14c00e368 <col:5> 'char[2]' lvalue Var 0x14c00df60 'prelude' 'char[2]'
    | | `-IntegerLiteral 0x14c00e388 <col:13> 'int' 0
    | `-ImplicitCastExpr 0x14c027400 <col:18> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x14c00e3e0 <col:18> 'int' 137
    |-BinaryOperator 0x14c0274e8 <line:12:5, col:18> 'char' '='
    | |-ArraySubscriptExpr 0x14c027490 <col:5, col:14> 'char' lvalue
    | | |-ImplicitCastExpr 0x14c027478 <col:5> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x14c027438 <col:5> 'char[2]' lvalue Var 0x14c00df60 'prelude' 'char[2]'
    | | `-IntegerLiteral 0x14c027458 <col:13> 'int' 1
    | `-ImplicitCastExpr 0x14c0274d0 <col:18> 'char' <IntegralCast>
    |   `-IntegerLiteral 0x14c0274b0 <col:18> 'int' 0
    |-CallExpr 0x14c027720 <line:14:5, col:41> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14c027608 <col:5> 'int ()' Function 0x14c027550 'apr_socket_send' 'int ()'
    | |-RecoveryExpr 0x14c0276c8 <col:21> '<dependent type>' contains-errors lvalue
    | |-DeclRefExpr 0x14c027640 <col:27> 'char[2]' lvalue Var 0x14c00df60 'prelude' 'char[2]'
    | `-UnaryOperator 0x14c027708 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x14c0276e8 <col:37> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14d0089a0 <line:20:5, line:48:5> has_else
    | |-RecoveryExpr 0x14c027918 <line:20:9, col:15> '_Bool' contains-errors
    | |-CompoundStmt 0x14d0088b0 <col:28, line:45:5>
    | | |-DeclStmt 0x14c027a60 <line:21:9, col:42>
    | | | `-VarDecl 0x14c027950 <col:9, col:41> col:23 used opcode 'unsigned char' cinit
    | | |   `-ImplicitCastExpr 0x14c027a48 <col:32, col:41> 'unsigned char' <IntegralCast>
    | | |     `-ImplicitCastExpr 0x14c027a30 <col:32, col:41> 'char' <LValueToRValue>
    | | |       `-ArraySubscriptExpr 0x14c027a10 <col:32, col:41> 'char' lvalue
    | | |         |-ImplicitCastExpr 0x14c0279f8 <col:32> 'char *' <ArrayToPointerDecay>
    | | |         | `-DeclRefExpr 0x14c0279b8 <col:32> 'char[2]' lvalue Var 0x14c00df60 'prelude' 'char[2]'
    | | |         `-IntegerLiteral 0x14c0279d8 <col:40> 'int' 0
    | | |-DeclStmt 0x14c027ba0 <line:22:9, col:39>
    | | | `-VarDecl 0x14c027a90 <col:9, col:38> col:23 used len 'unsigned char' cinit
    | | |   `-ImplicitCastExpr 0x14c027b88 <col:29, col:38> 'unsigned char' <IntegralCast>
    | | |     `-ImplicitCastExpr 0x14c027b70 <col:29, col:38> 'char' <LValueToRValue>
    | | |       `-ArraySubscriptExpr 0x14c027b50 <col:29, col:38> 'char' lvalue
    | | |         |-ImplicitCastExpr 0x14c027b38 <col:29> 'char *' <ArrayToPointerDecay>
    | | |         | `-DeclRefExpr 0x14c027af8 <col:29> 'char[2]' lvalue Var 0x14c00df60 'prelude' 'char[2]'
    | | |         `-IntegerLiteral 0x14c027b18 <col:37> 'int' 1
    | | |-DeclStmt 0x14c027ce0 <line:23:9, col:38>
    | | | `-VarDecl 0x14c027bd0 <col:9, col:37> col:23 used mask 'unsigned char' cinit
    | | |   `-ImplicitCastExpr 0x14c027cc8 <col:30, col:37> 'unsigned char' <IntegralCast>
    | | |     `-BinaryOperator 0x14c027ca8 <col:30, col:37> 'int' '>>'
    | | |       |-ImplicitCastExpr 0x14c027c90 <col:30> 'int' <IntegralCast>
    | | |       | `-ImplicitCastExpr 0x14c027c78 <col:30> 'unsigned char' <LValueToRValue>
    | | |       |   `-DeclRefExpr 0x14c027c38 <col:30> 'unsigned char' lvalue Var 0x14c027a90 'len' 'unsigned char'
    | | |       `-IntegerLiteral 0x14c027c58 <col:37> 'int' 7
    | | |-IfStmt 0x14c027da0 <line:24:9, col:26>
    | | | |-ImplicitCastExpr 0x14c027d18 <col:13> 'unsigned char' <LValueToRValue>
    | | | | `-DeclRefExpr 0x14c027cf8 <col:13> 'unsigned char' lvalue Var 0x14c027bd0 'mask' 'unsigned char'
    | | | `-CompoundAssignOperator 0x14c027d70 <col:19, col:26> 'unsigned char' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |   |-DeclRefExpr 0x14c027d30 <col:19> 'unsigned char' lvalue Var 0x14c027a90 'len' 'unsigned char'
    | | |   `-IntegerLiteral 0x14c027d50 <col:26> 'int' 128
    | | |-IfStmt 0x14c028240 <line:28:9, line:33:9> has_else
    | | | |-BinaryOperator 0x14c027ff0 <line:28:13, col:23> 'int' '=='
    | | | | |-ImplicitCastExpr 0x14c027fd8 <col:13> 'int' <IntegralCast>
    | | | | | `-ImplicitCastExpr 0x14c027fc0 <col:13> 'unsigned char' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x14c027f80 <col:13> 'unsigned char' lvalue Var 0x14c027950 'opcode' 'unsigned char'
    | | | | `-IntegerLiteral 0x14c027fa0 <col:23> 'int' 138
    | | | |-CompoundStmt 0x14c028180 <col:29, line:30:9>
    | | | | `-CallExpr 0x14c028150 <line:29:13, col:33> '<dependent type>' contains-errors
    | | | |   |-DeclRefExpr 0x14c0280f0 <col:13> 'int ()' Function 0x14c028038 'lua_pushboolean' 'int ()'
    | | | |   |-RecoveryExpr 0x14c028110 <col:29> '<dependent type>' contains-errors lvalue
    | | | |   `-IntegerLiteral 0x14c028130 <col:32> 'int' 1
    | | | `-CompoundStmt 0x14c028228 <line:31:14, line:33:9>
    | | |   `-CallExpr 0x14c0281f8 <line:32:13, col:33> '<dependent type>' contains-errors
    | | |     |-DeclRefExpr 0x14c028198 <col:13> 'int ()' Function 0x14c028038 'lua_pushboolean' 'int ()'
    | | |     |-RecoveryExpr 0x14c0281b8 <col:29> '<dependent type>' contains-errors lvalue
    | | |     `-IntegerLiteral 0x14c0281d8 <col:32> 'int' 0
    | | |-IfStmt 0x14c028358 <line:34:9, line:38:9>
    | | | |-RecoveryExpr 0x14c028290 <line:34:13, col:20> '_Bool' contains-errors
    | | | `-CompoundStmt 0x14c028340 <col:23, line:38:9>
    | | |   `-ReturnStmt 0x14c028330 <line:37:13, col:20>
    | | |     `-IntegerLiteral 0x14c028310 <col:20> 'int' 1
    | | `-IfStmt 0x14d008890 <line:39:9, line:44:9>
    | |   |-ImplicitCastExpr 0x14c028398 <line:39:13> 'unsigned char' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14c028378 <col:13> 'unsigned char' lvalue Var 0x14c027bd0 'mask' 'unsigned char'
    | |   `-CompoundStmt 0x14d008880 <col:19, line:44:9>
    | `-CompoundStmt 0x14d008988 <line:46:10, line:48:5>
    |   `-CallExpr 0x14d008958 <line:47:9, col:29> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x14d0088f8 <col:9> 'int ()' Function 0x14c028038 'lua_pushboolean' 'int ()'
    |     |-RecoveryExpr 0x14d008918 <col:25> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x14d008938 <col:28> 'int' 0
    `-ReturnStmt 0x14d0089f0 <line:49:5, col:12>
      `-IntegerLiteral 0x14d0089d0 <col:12> 'int' 1
