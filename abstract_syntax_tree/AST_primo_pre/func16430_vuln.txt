`-FunctionDecl 0x134928548  line:1:12 invalid ocsp_verify_signer 'int (int *, int, int *, unsigned long, int (*)())' static
  |-ParmVarDecl 0x134928128 <col:31, col:37> col:37 invalid signer 'int *'
  |-ParmVarDecl 0x1349281a8 <col:45, col:49> col:49 used response 'int'
  |-ParmVarDecl 0x134928228 <line:2:31, col:43> col:43 invalid st 'int *'
  |-ParmVarDecl 0x1349282a8 <col:47, col:61> col:61 used flags 'unsigned long'
  |-ParmVarDecl 0x1349283d0 <line:3:31, <invalid sloc>> col:31 invalid STACK_OF 'int (*)()'
  `-CompoundStmt 0x134943978 <line:4:1, line:41:1>
    |-DeclStmt 0x1349418a0 <line:7:5, col:17>
    | `-VarDecl 0x134941800 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x134941888 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x134941868 <col:16> 'int' 1
    |-IfStmt 0x134941bc0 <line:9:5, line:12:5>
    | |-BinaryOperator 0x134941948 <line:9:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x134941908 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x134941928 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x134941ba0 <col:22, line:12:5>
    |   |-CallExpr 0x134941b08 <line:10:9, col:53> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x134941a48 <col:9> 'int ()' Function 0x134941990 'ERR_raise' 'int ()'
    |   | |-RecoveryExpr 0x134941ac8 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x134941ae8 <col:33> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x134941b88 <line:11:9, col:14> 'end' 0x134941b38
    |-IfStmt 0x134941f68 <line:13:5, line:16:5>
    | |-UnaryOperator 0x134941e28 <line:13:9, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x134941de8 <col:10, col:56> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x134941cc0 <col:10> 'int ()' Function 0x134941c08 'X509_STORE_CTX_init' 'int ()'
    | |   |-RecoveryExpr 0x134941da8 <col:30> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x134941cf8 <col:35> '<dependent type>' contains-errors lvalue
    | |   |-RecoveryExpr 0x134941d18 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x134941dc8 <col:47> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x134941f48 <col:59, line:16:5>
    |   |-CallExpr 0x134941f00 <line:14:9, col:47> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x134941e40 <col:9> 'int ()' Function 0x134941990 'ERR_raise' 'int ()'
    |   | |-RecoveryExpr 0x134941ec0 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x134941ee0 <col:33> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x134941f30 <line:15:9, col:14> 'end' 0x134941b38
    |-IfStmt 0x1349420c0 <line:17:5, line:18:14>
    | |-RecoveryExpr 0x134942088 <line:17:9, col:50> '_Bool' contains-errors
    | `-GotoStmt 0x1349420a8 <line:18:9, col:14> 'end' 0x134941b38
    |-IfStmt 0x1349436c8 <line:29:5, line:34:5>
    | |-BinaryOperator 0x134943278 <line:29:9, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x134943260 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x134943220 <col:9> 'int' lvalue Var 0x134941800 'ret' 'int'
    | | `-IntegerLiteral 0x134943240 <col:16> 'int' 0
    | `-CompoundStmt 0x1349436b0 <col:19, line:34:5>
    |   `-GotoStmt 0x134943698 <line:33:9, col:14> 'end' 0x134941b38
    |-LabelStmt 0x134943910 <line:38:2, col:5> 'end'
    | `-NullStmt 0x134943908 <col:5>
    `-ReturnStmt 0x134943968 <line:40:5, col:12>
      `-ImplicitCastExpr 0x134943950 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134943930 <col:12> 'int' lvalue Var 0x134941800 'ret' 'int'
