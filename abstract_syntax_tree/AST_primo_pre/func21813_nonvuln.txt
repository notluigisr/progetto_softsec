`-FunctionDecl 0x15580ddf0  line:1:6 invalid tr_variantFree 'void (int *)'
  |-ParmVarDecl 0x15580dd28 <col:21, col:33> col:33 invalid v 'int *'
  `-CompoundStmt 0x15580e318 <line:2:1, line:7:1>
    `-IfStmt 0x15580e2f8 <line:3:5, line:6:5>
      |-CallExpr 0x15580e040 <line:3:9, col:32> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x15580e000 <col:9> 'int ()' Function 0x15580df48 'tr_variantIsSomething' 'int ()'
      | `-RecoveryExpr 0x15580e020 <col:31> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x15580e2e0 <line:4:5, line:6:5>
        `-CallExpr 0x15580e2a0 <line:5:9, col:54> '<dependent type>' contains-errors
          |-DeclRefExpr 0x15580e148 <col:9> 'int ()' Function 0x15580e090 'tr_variantWalk' 'int ()'
          |-RecoveryExpr 0x15580e168 <col:24> '<dependent type>' contains-errors lvalue
          |-UnaryOperator 0x15580e248 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow
          | `-RecoveryExpr 0x15580e228 <col:28> '<dependent type>' contains-errors lvalue
          |-RecoveryExpr 0x15580e260 <col:43> '<dependent type>' contains-errors lvalue
          `-RecoveryExpr 0x15580e280 <col:49> '<dependent type>' contains-errors lvalue
