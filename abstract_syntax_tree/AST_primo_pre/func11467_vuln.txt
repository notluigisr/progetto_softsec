`-FunctionDecl 0x13a128288  line:1:5 invalid am_check_url 'int (int *, const char *)'
  |-ParmVarDecl 0x13a128128 <col:18, col:31> col:31 invalid r 'int *'
  |-ParmVarDecl 0x13a1281a8 <col:34, col:46> col:46 used url 'const char *'
  `-CompoundStmt 0x13a809dc0 <line:2:1, line:21:1>
    |-DeclStmt 0x13a1283c0 <line:3:5, col:18>
    | `-VarDecl 0x13a128358 <col:5, col:17> col:17 used i 'const char *'
    |-ForStmt 0x13a809d40 <line:5:5, line:18:5>
    | |-BinaryOperator 0x13a128430 <line:5:10, col:14> 'const char *' '='
    | | |-DeclRefExpr 0x13a1283d8 <col:10> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | | `-ImplicitCastExpr 0x13a128418 <col:14> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13a1283f8 <col:14> 'const char *' lvalue ParmVar 0x13a1281a8 'url' 'const char *'
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x13a1284a0 <col:19, col:20> 'char' <LValueToRValue>
    | | `-UnaryOperator 0x13a128488 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow
    | |   `-ImplicitCastExpr 0x13a128470 <col:20> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x13a128450 <col:20> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | |-UnaryOperator 0x13a1284d8 <col:23, col:24> 'const char *' postfix '++'
    | | `-DeclRefExpr 0x13a1284b8 <col:23> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    | `-CompoundStmt 0x13a809d20 <col:28, line:18:5>
    |   |-IfStmt 0x13a809a28 <line:6:9, line:11:9>
    |   | |-BinaryOperator 0x13a128668 <line:6:13, col:29> 'int' '&&'
    |   | | |-BinaryOperator 0x13a128590 <col:13, col:19> 'int' '>='
    |   | | | |-ImplicitCastExpr 0x13a128578 <col:13, col:14> 'int' <IntegralCast>
    |   | | | | `-ImplicitCastExpr 0x13a128560 <col:13, col:14> 'char' <LValueToRValue>
    |   | | | |   `-UnaryOperator 0x13a128528 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |   | | | |     `-ImplicitCastExpr 0x13a128510 <col:14> 'const char *' <LValueToRValue>
    |   | | | |       `-DeclRefExpr 0x13a1284f0 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |   | | | `-IntegerLiteral 0x13a128540 <col:19> 'int' 0
    |   | | `-BinaryOperator 0x13a128648 <col:24, col:29> 'int' '<'
    |   | |   |-ImplicitCastExpr 0x13a128630 <col:24, col:25> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x13a128618 <col:24, col:25> 'char' <LValueToRValue>
    |   | |   |   `-UnaryOperator 0x13a1285e8 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow
    |   | |   |     `-ImplicitCastExpr 0x13a1285d0 <col:25> 'const char *' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x13a1285b0 <col:25> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |   | |   `-CharacterLiteral 0x13a128600 <col:29> 'int' 32
    |   | `-CompoundStmt 0x13a809a08 <col:34, line:11:9>
    |   |   |-CallExpr 0x13a809978 <line:8:13, line:9:32> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x13a1287e0 <line:8:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'
    |   |   | |-RecoveryExpr 0x13a809918 <col:27> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809938 <col:39> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809958 <col:50> '<dependent type>' contains-errors lvalue
    |   |   | |-RecoveryExpr 0x13a809848 <col:68> '<dependent type>' contains-errors lvalue
    |   |   | `-StringLiteral 0x13a8098b0 <line:9:27> 'char[4]' lvalue "STR"
    |   |   `-ReturnStmt 0x13a8099f8 <line:10:13, col:20>
    |   |     `-RecoveryExpr 0x13a8099d8 <col:20> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13a809d00 <line:12:9, line:17:9>
    |     |-BinaryOperator 0x13a809ae0 <line:12:13, col:19> 'int' '=='
    |     | |-ImplicitCastExpr 0x13a809ac8 <col:13, col:14> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x13a809ab0 <col:13, col:14> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x13a809a80 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x13a809a68 <col:14> 'const char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x13a809a48 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'
    |     | `-CharacterLiteral 0x13a809a98 <col:19> 'int' 92
    |     `-CompoundStmt 0x13a809ce0 <col:25, line:17:9>
    |       |-CallExpr 0x13a809c50 <line:14:13, line:15:32> '<dependent type>' contains-errors
    |       | |-DeclRefExpr 0x13a809b00 <line:14:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'
    |       | |-RecoveryExpr 0x13a809bf0 <col:27> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809c10 <col:39> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809c30 <col:50> '<dependent type>' contains-errors lvalue
    |       | |-RecoveryExpr 0x13a809b68 <col:68> '<dependent type>' contains-errors lvalue
    |       | `-StringLiteral 0x13a809b88 <line:15:27> 'char[4]' lvalue "STR"
    |       `-ReturnStmt 0x13a809cd0 <line:16:13, col:20>
    |         `-RecoveryExpr 0x13a809cb0 <col:20> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13a809db0 <line:20:5, col:12>
      `-RecoveryExpr 0x13a809d90 <col:12> '<dependent type>' contains-errors lvalue
