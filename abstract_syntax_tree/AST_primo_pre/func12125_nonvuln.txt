`-FunctionDecl 0x16100e128  line:1:1 invalid virDomainMigrateUnmanaged 'int (int, const char *, unsigned int, const char *, const char *, const char *, unsigned long long)'
  |-ParmVarDecl 0x16100dcf0 <col:27, col:40> col:40 invalid domain 'int'
  |-ParmVarDecl 0x16100dd70 <line:2:27, col:39> col:39 used xmlin 'const char *'
  |-ParmVarDecl 0x16100ddf0 <line:3:27, col:40> col:40 used flags 'unsigned int'
  |-ParmVarDecl 0x16100de70 <line:4:27, col:39> col:39 used dname 'const char *'
  |-ParmVarDecl 0x16100def0 <line:5:27, col:39> col:39 used dconnuri 'const char *'
  |-ParmVarDecl 0x16100df70 <line:6:27, col:39> col:39 used miguri 'const char *'
  |-ParmVarDecl 0x16100dff0 <line:7:27, col:46> col:46 used bandwidth 'unsigned long long'
  `-CompoundStmt 0x16180b500 <line:8:1, line:37:1>
    |-DeclStmt 0x16100e2c0 <line:9:5, col:17>
    | `-VarDecl 0x16100e220 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x16100e2a8 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x16100e288 <col:16> 'int' 1
    |-DeclStmt 0x16100e378 <line:11:5, col:20>
    | `-VarDecl 0x16100e2f0 <col:5, col:19> col:9 used nparams 'int' cinit
    |   `-IntegerLiteral 0x16100e358 <col:19> 'int' 0
    |-DeclStmt 0x161808e88 <line:12:5, col:22>
    | `-VarDecl 0x161808e00 <col:5, col:21> col:9 used maxparams 'int' cinit
    |   `-IntegerLiteral 0x161808e68 <col:21> 'int' 0
    |-IfStmt 0x161809370 <line:14:5, line:17:14>
    | |-BinaryOperator 0x1618092e8 <line:14:9, line:16:66> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x161808ea0 <line:14:9> 'const char *' lvalue ParmVar 0x16100df70 'miguri' 'const char *'
    | | `-BinaryOperator 0x1618092c8 <line:15:9, line:16:66> 'int' contains-errors '<'
    | |   |-CallExpr 0x161809280 <line:15:9, line:16:62> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x161809020 <line:15:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x161809248 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809228 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x1618090c0 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809070 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x1618090f8 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x1618090d8 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x161809260 <line:16:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809128 <col:56> 'const char *' lvalue ParmVar 0x16100df70 'miguri' 'const char *'
    | |   `-IntegerLiteral 0x161809190 <col:66> 'int' 0
    | `-GotoStmt 0x161809358 <line:17:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809680 <line:18:5, line:21:14>
    | |-BinaryOperator 0x161809648 <line:18:9, line:20:71> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x161809390 <line:18:9> 'const char *' lvalue ParmVar 0x16100de70 'dname' 'const char *'
    | | `-BinaryOperator 0x161809628 <line:19:9, line:20:71> 'int' contains-errors '<'
    | |   |-CallExpr 0x1618095e0 <line:19:9, line:20:67> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x1618093b0 <line:19:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x1618095a8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809588 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x161809420 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809400 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x161809458 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809438 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x1618095c0 <line:20:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809488 <col:62> 'const char *' lvalue ParmVar 0x16100de70 'dname' 'const char *'
    | |   `-IntegerLiteral 0x1618094f0 <col:71> 'int' 0
    | `-GotoStmt 0x161809668 <line:21:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809990 <line:22:5, line:25:14>
    | |-BinaryOperator 0x161809958 <line:22:9, line:24:70> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x1618096a0 <line:22:9> 'const char *' lvalue ParmVar 0x16100dd70 'xmlin' 'const char *'
    | | `-BinaryOperator 0x161809938 <line:23:9, line:24:70> 'int' contains-errors '<'
    | |   |-CallExpr 0x1618098f0 <line:23:9, line:24:66> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x1618096c0 <line:23:9> 'int ()' Function 0x161808f68 'virTypedParamsAddString' 'int ()'
    | |   | |-UnaryOperator 0x1618098b8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | | `-RecoveryExpr 0x161809898 <col:34> '<dependent type>' contains-errors lvalue
    | |   | |-UnaryOperator 0x161809730 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809710 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | |   | |-UnaryOperator 0x161809768 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | |   | | `-DeclRefExpr 0x161809748 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | |   | |-RecoveryExpr 0x1618098d0 <line:24:33> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x161809798 <col:61> 'const char *' lvalue ParmVar 0x16100dd70 'xmlin' 'const char *'
    | |   `-IntegerLiteral 0x161809800 <col:70> 'int' 0
    | `-GotoStmt 0x161809978 <line:25:9, col:14> 'cleanup' 0x161809308
    |-IfStmt 0x161809d20 <line:26:5, line:28:14>
    | |-BinaryOperator 0x161809ce8 <line:26:9, line:27:75> 'int' contains-errors '<'
    | | |-CallExpr 0x161809ca0 <line:26:9, line:27:71> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x161809a90 <line:26:9> 'int ()' Function 0x1618099d8 'virTypedParamsAddULLong' 'int ()'
    | | | |-UnaryOperator 0x161809c68 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x161809c48 <col:34> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x161809b00 <col:42, col:43> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x161809ae0 <col:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    | | | |-UnaryOperator 0x161809b38 <col:52, col:53> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x161809b18 <col:53> 'int' lvalue Var 0x161808e00 'maxparams' 'int'
    | | | |-RecoveryExpr 0x161809c80 <line:27:33> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x161809b68 <col:62> 'unsigned long long' lvalue ParmVar 0x16100dff0 'bandwidth' 'unsigned long long'
    | | `-IntegerLiteral 0x161809bd0 <col:75> 'int' 0
    | `-GotoStmt 0x161809d08 <line:28:9, col:14> 'cleanup' 0x161809308
    |-BinaryOperator 0x16180b240 <line:30:5, line:31:57> 'int' contains-errors '='
    | |-DeclRefExpr 0x161809d40 <line:30:5> 'int' lvalue Var 0x16100e220 'ret' 'int'
    | `-CallExpr 0x16180b1f8 <col:11, line:31:57> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x16180b0b8 <line:30:11> 'int ()' Function 0x16180b000 'virDomainMigrateUnmanagedParams' 'int ()'
    |   |-RecoveryExpr 0x16180b0d8 <col:43> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x16180b0f8 <col:51> 'const char *' lvalue ParmVar 0x16100def0 'dconnuri' 'const char *'
    |   |-DeclRefExpr 0x16180b1d8 <col:61> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   |-DeclRefExpr 0x16180b130 <line:31:43> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   `-DeclRefExpr 0x16180b150 <col:52> 'unsigned int' lvalue ParmVar 0x16100ddf0 'flags' 'unsigned int'
    |-LabelStmt 0x16180b498 <line:33:2, line:34:39> 'cleanup'
    | `-CallExpr 0x16180b438 <col:5, col:39> 'int'
    |   |-ImplicitCastExpr 0x16180b420 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x16180b340 <col:5> 'int ()' Function 0x16180b288 'virTypedParamsFree' 'int ()'
    |   |-ImplicitCastExpr 0x16180b468 <col:24> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x16180b3c8 <col:24> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    |   `-ImplicitCastExpr 0x16180b480 <col:32> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x16180b378 <col:32> 'int' lvalue Var 0x16100e2f0 'nparams' 'int'
    `-ReturnStmt 0x16180b4f0 <line:36:5, col:12>
      `-ImplicitCastExpr 0x16180b4d8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x16180b4b8 <col:12> 'int' lvalue Var 0x16100e220 'ret' 'int'
