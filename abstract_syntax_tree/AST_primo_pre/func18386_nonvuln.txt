`-FunctionDecl 0x14d1281f8  line:1:1 invalid has_next_entry 'int (int *)'
  |-ParmVarDecl 0x14d128128 <col:17, col:30> col:30 invalid demux 'int *'
  `-CompoundStmt 0x14d12ff18 <line:2:1, line:26:1>
    |-DeclStmt 0x14d128340 <line:4:3, col:8>
    | `-VarDecl 0x14d1282d8 <col:3, col:7> col:7 used i 'int'
    |-CallExpr 0x14d128550 <line:6:3, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d1284b0 <col:3> 'int ()' Function 0x14d1283f8 'GST_DEBUG_OBJECT' 'int ()'
    | |-RecoveryExpr 0x14d1284d0 <col:21> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x14d128530 <col:28> 'char[4]' lvalue "STR"
    |-ForStmt 0x14d12fe08 <line:8:3, line:22:3>
    | |-BinaryOperator 0x14d1285c0 <line:8:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x14d128580 <col:8> 'int' lvalue Var 0x14d1282d8 'i' 'int'
    | | `-IntegerLiteral 0x14d1285a0 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14d128668 <col:15, col:26> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14d1285e0 <col:15> 'int' lvalue Var 0x14d1282d8 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x14d128620 <col:19, col:26> '<dependent type>' contains-errors lvalue ->n_streams
    | |   `-RecoveryExpr 0x14d128600 <col:19> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x14d1286a8 <col:37, col:38> 'int' postfix '++'
    | | `-DeclRefExpr 0x14d128688 <col:37> 'int' lvalue Var 0x14d1282d8 'i' 'int'
    | `-CompoundStmt 0x14d12fdd8 <col:42, line:22:3>
    |   |-IfStmt 0x14d12f930 <line:11:5, line:14:5>
    |   | |-BinaryOperator 0x14d12f8c0 <line:11:9, col:34> 'int' contains-errors '=='
    |   | | |-CXXDependentScopeMemberExpr 0x14d12f878 <col:9, col:17> '<dependent type>' contains-errors lvalue ->sample_index
    |   | | | `-RecoveryExpr 0x14d12f858 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-UnaryOperator 0x14d12f820 <col:33, col:34> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x14d12f800 <col:34> 'int' 1
    |   | `-CompoundStmt 0x14d12f920 <col:37, line:14:5>
    |   |-IfStmt 0x14d12fce0 <line:16:5, line:19:5>
    |   | |-BinaryOperator 0x14d12fb00 <line:16:9, col:41> 'int' contains-errors '>='
    |   | | |-CXXDependentScopeMemberExpr 0x14d12fa50 <col:9, col:17> '<dependent type>' contains-errors lvalue ->sample_index
    |   | | | `-RecoveryExpr 0x14d12fa30 <col:9> '<dependent type>' contains-errors lvalue
    |   | | `-CXXDependentScopeMemberExpr 0x14d12fab8 <col:33, col:41> '<dependent type>' contains-errors lvalue ->n_samples
    |   | |   `-RecoveryExpr 0x14d12fa98 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14d12fcc0 <col:52, line:19:5>
    |   |   |-CallExpr 0x14d12fc80 <line:17:7, col:38> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x14d12fc00 <col:7> 'int ()' Function 0x14d12fb48 'GST_LOG_OBJECT' 'int ()'
    |   |   | |-RecoveryExpr 0x14d12fc20 <col:23> '<dependent type>' contains-errors lvalue
    |   |   | |-StringLiteral 0x14d12fc40 <col:30> 'char[4]' lvalue "STR"
    |   |   | `-DeclRefExpr 0x14d12fc60 <col:37> 'int' lvalue Var 0x14d1282d8 'i' 'int'
    |   |   `-ContinueStmt 0x14d12fcb8 <line:18:7>
    |   |-CallExpr 0x14d12fd60 <line:20:5, col:35> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14d12fd00 <col:5> 'int ()' Function 0x14d1283f8 'GST_DEBUG_OBJECT' 'int ()'
    |   | |-RecoveryExpr 0x14d12fd20 <col:23> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x14d12fd40 <col:30> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x14d12fdc8 <line:21:5, col:12>
    |     `-RecoveryExpr 0x14d12fda8 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14d12fea0 <line:24:3, col:33> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14d12fe40 <col:3> 'int ()' Function 0x14d1283f8 'GST_DEBUG_OBJECT' 'int ()'
    | |-RecoveryExpr 0x14d12fe60 <col:21> '<dependent type>' contains-errors lvalue
    | `-StringLiteral 0x14d12fe80 <col:28> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x14d12ff08 <line:25:3, col:10>
      `-RecoveryExpr 0x14d12fee8 <col:10> '<dependent type>' contains-errors lvalue
