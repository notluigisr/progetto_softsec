`-FunctionDecl 0x15100df18  line:1:1 invalid frag6_print 'int (int *, const char *, const char *)'
  |-ParmVarDecl 0x15100dd28 <col:13, col:33> col:33 invalid ndo 'int *'
  |-ParmVarDecl 0x15100dda8 <col:38, col:61> col:61 used bp 'const char *' register
  |-ParmVarDecl 0x15100de28 <col:65, col:88> col:88 used bp2 'const char *' register
  `-CompoundStmt 0x15102ac38 <line:2:1, line:35:1>
    |-DeclStmt 0x15100e1c8 <line:3:2, col:36>
    | |-RecordDecl 0x15100dfd8 <col:17, col:24> col:24 struct ip6_frag
    | `-VarDecl 0x15100e148 <col:2, col:34> col:34 used dp 'const struct ip6_frag *' register
    |-DeclStmt 0x15100e3c8 <line:4:2, col:36>
    | |-RecordDecl 0x15100e1e0 <col:17, col:24> col:24 struct ip6_hdr
    | `-VarDecl 0x15100e348 <col:2, col:33> col:33 used ip6 'const struct ip6_hdr *' register
    |-BinaryOperator 0x1510274e8 <line:6:2, col:32> 'const struct ip6_frag *' '='
    | |-DeclRefExpr 0x15100e3e0 <col:2> 'const struct ip6_frag *' lvalue Var 0x15100e148 'dp' 'const struct ip6_frag *'
    | `-CStyleCastExpr 0x1510274c0 <col:7, col:32> 'const struct ip6_frag *' <BitCast>
    |   `-ImplicitCastExpr 0x1510274a8 <col:32> 'const char *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x151027400 <col:32> 'const char *' lvalue ParmVar 0x15100dda8 'bp' 'const char *'
    |-BinaryOperator 0x151027618 <line:7:2, col:32> 'const struct ip6_hdr *' '='
    | |-DeclRefExpr 0x151027508 <col:2> 'const struct ip6_hdr *' lvalue Var 0x15100e348 'ip6' 'const struct ip6_hdr *'
    | `-CStyleCastExpr 0x1510275f0 <col:8, col:32> 'const struct ip6_hdr *' <BitCast>
    |   `-ImplicitCastExpr 0x1510275d8 <col:32> 'const char *' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x151027528 <col:32> 'const char *' lvalue ParmVar 0x15100de28 'bp2' 'const char *'
    |-CallExpr 0x151027c38 <line:9:2, col:26> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x151027790 <col:2> 'int ()' Function 0x1510276d8 'ND_TCHECK' 'int ()'
    | `-RecoveryExpr 0x151027c10 <col:12, col:16> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1510277b0 <col:12> 'const struct ip6_frag *' lvalue Var 0x15100e148 'dp' 'const struct ip6_frag *'
    |-IfStmt 0x15102a810 <line:11:2, line:22:2> has_else
    | |-CXXDependentScopeMemberExpr 0x151027c80 <line:11:6, col:11> '<dependent type>' contains-errors lvalue ->ndo_vflag
    | | `-RecoveryExpr 0x151027c60 <col:6> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x15102a448 <col:22, line:17:2>
    | `-CompoundStmt 0x15102a800 <col:9, line:22:2>
    |-IfStmt 0x15102aa88 <line:25:2, line:31:2> has_else
    | |-RecoveryExpr 0x15102a920 <line:25:6, col:59> '_Bool' contains-errors
    | |-ReturnStmt 0x15102a978 <line:26:3, col:11>
    | | `-UnaryOperator 0x15102a960 <col:10, col:11> 'int' prefix '-'
    | |   `-IntegerLiteral 0x15102a940 <col:11> 'int' 1
    | `-CompoundStmt 0x15102aa70 <line:28:2, line:31:2>
    |   `-CallExpr 0x15102aa28 <line:29:3, col:24> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x15102a988 <col:3> 'int ()' Function 0x151027cf0 'ND_PRINT' 'int ()'
    |     `-ParenExpr 0x15102aa08 <col:12, col:23> 'char[4]' contains-errors
    |       `-BinaryOperator 0x15102a9e8 <col:13, col:18> 'char[4]' contains-errors ','
    |         |-RecoveryExpr 0x15102a9a8 <col:13> '<dependent type>' contains-errors lvalue
    |         `-StringLiteral 0x15102a9c8 <col:18> 'char[4]' lvalue "STR"
    |-LabelStmt 0x15102abd0 <line:32:1, line:33:23> 'trunc'
    | `-CallExpr 0x15102ab58 <col:2, col:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x15102aab8 <col:2> 'int ()' Function 0x151027cf0 'ND_PRINT' 'int ()'
    |   `-ParenExpr 0x15102ab38 <col:11, col:22> 'char[4]' contains-errors
    |     `-BinaryOperator 0x15102ab18 <col:12, col:17> 'char[4]' contains-errors ','
    |       |-RecoveryExpr 0x15102aad8 <col:12> '<dependent type>' contains-errors lvalue
    |       `-StringLiteral 0x15102aaf8 <col:17> 'char[4]' lvalue "STR"
    `-ReturnStmt 0x15102ac28 <line:34:2, col:10>
      `-UnaryOperator 0x15102ac10 <col:9, col:10> 'int' prefix '-'
        `-IntegerLiteral 0x15102abf0 <col:10> 'int' 1
