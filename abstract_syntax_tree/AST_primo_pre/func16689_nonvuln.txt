`-FunctionDecl 0x156128118  line:1:1 run_exit_trap 'int ()'
  `-CompoundStmt 0x156143098 <line:2:1, line:58:1>
    |-DeclStmt 0x156128288 <line:3:3, col:21>
    | `-VarDecl 0x156128220 <col:3, col:9> col:9 used trap_command 'char *'
    |-DeclStmt 0x156128440 <line:4:3, col:34>
    | |-VarDecl 0x1561282b8 <col:3, col:7> col:7 used code 'int'
    | |-VarDecl 0x156128338 <col:3, col:13> col:13 used function_code 'int'
    | `-VarDecl 0x1561283b8 <col:3, col:28> col:28 used retval 'int'
    |-BinaryOperator 0x1561284c8 <line:13:3, col:19> 'int' '='
    | |-DeclRefExpr 0x156128488 <col:3> 'int' lvalue Var 0x156128338 'function_code' 'int'
    | `-IntegerLiteral 0x1561284a8 <col:19> 'int' 0
    `-IfStmt 0x156143078 <line:16:3, line:52:5>
      |-RecoveryExpr 0x1561285d0 <line:16:7, line:17:63> '_Bool' contains-errors
      `-CompoundStmt 0x156143050 <line:18:5, line:52:5>
        |-BinaryOperator 0x156142858 <line:23:7, col:16> 'int' contains-errors '='
        | |-DeclRefExpr 0x1561287d0 <col:7> 'int' lvalue Var 0x1561283b8 'retval' 'int'
        | `-RecoveryExpr 0x156142838 <col:16> '<dependent type>' contains-errors lvalue
        |-IfStmt 0x156142fb8 <line:32:7, line:37:12> has_else
        | |-BinaryOperator 0x156142b08 <line:32:11, col:41> 'int' '&&'
        | | |-BinaryOperator 0x156142a70 <col:11, col:19> 'int' '=='
        | | | |-ImplicitCastExpr 0x156142a58 <col:11> 'int' <LValueToRValue>
        | | | | `-DeclRefExpr 0x156142a18 <col:11> 'int' lvalue Var 0x1561282b8 'code' 'int'
        | | | `-IntegerLiteral 0x156142a38 <col:19> 'int' 0
        | | `-BinaryOperator 0x156142ae8 <col:24, col:41> 'int' '=='
        | |   |-ImplicitCastExpr 0x156142ad0 <col:24> 'int' <LValueToRValue>
        | |   | `-DeclRefExpr 0x156142a90 <col:24> 'int' lvalue Var 0x156128338 'function_code' 'int'
        | |   `-IntegerLiteral 0x156142ab0 <col:41> 'int' 0
        | |-CompoundStmt 0x156142e20 <line:33:2, line:36:2>
        | | `-CallExpr 0x156142c78 <line:34:4, col:18> 'int'
        | |   `-ImplicitCastExpr 0x156142c60 <col:4> 'int (*)()' <FunctionToPointerDecay>
        | |     `-DeclRefExpr 0x156142c08 <col:4> 'int ()' Function 0x156142b50 'reset_parser' 'int ()'
        | `-NullStmt 0x156142fb0 <line:37:12>
        `-ReturnStmt 0x156143040 <line:51:7, col:14>
          `-ImplicitCastExpr 0x156143028 <col:14> 'int' <LValueToRValue>
            `-DeclRefExpr 0x156143008 <col:14> 'int' lvalue Var 0x1561283b8 'retval' 'int'
