`-FunctionDecl 0x128910258  line:1:1 invalid atol10 'int (const char *, int)'
  |-ParmVarDecl 0x1289100d8 <col:8, col:20> col:20 used p 'const char *'
  |-ParmVarDecl 0x128910170 <col:23, col:30> col:30 invalid char_cnt 'int'
  `-CompoundStmt 0x128929838 <line:2:1, line:13:1>
    |-DeclStmt 0x128910390 <line:4:2, col:11>
    | `-VarDecl 0x128910328 <col:2, col:6> col:6 used digit 'int'
    |-BinaryOperator 0x1289104a0 <line:7:2, col:15> 'int' '='
    | |-DeclRefExpr 0x1289103c8 <col:2> 'int' lvalue Var 0x128910328 'digit' 'int'
    | `-BinaryOperator 0x128910480 <col:10, col:15> 'int' '-'
    |   |-ImplicitCastExpr 0x128910468 <col:10, col:11> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x128910450 <col:10, col:11> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x128910420 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x128910408 <col:11> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1289103e8 <col:11> 'const char *' lvalue ParmVar 0x1289100d8 'p' 'const char *'
    |   `-CharacterLiteral 0x128910438 <col:15> 'int' 48
    `-WhileStmt 0x128929800 <line:8:2, line:11:2>
      |-BinaryOperator 0x128910648 <line:8:9, col:51> 'int' contains-errors '&&'
      | |-BinaryOperator 0x1289105b0 <col:9, col:31> 'int' '&&'
      | | |-BinaryOperator 0x128910518 <col:9, col:18> 'int' '>='
      | | | |-ImplicitCastExpr 0x128910500 <col:9> 'int' <LValueToRValue>
      | | | | `-DeclRefExpr 0x1289104c0 <col:9> 'int' lvalue Var 0x128910328 'digit' 'int'
      | | | `-IntegerLiteral 0x1289104e0 <col:18> 'int' 0
      | | `-BinaryOperator 0x128910590 <col:23, col:31> 'int' '<'
      | |   |-ImplicitCastExpr 0x128910578 <col:23> 'int' <LValueToRValue>
      | |   | `-DeclRefExpr 0x128910538 <col:23> 'int' lvalue Var 0x128910328 'digit' 'int'
      | |   `-IntegerLiteral 0x128910558 <col:31> 'int' 10
      | `-BinaryOperator 0x128910628 <col:38, col:51> 'int' contains-errors '>'
      |   |-UnaryOperator 0x1289105f0 <col:38, col:46> '<dependent type>' contains-errors postfix '--' cannot overflow
      |   | `-RecoveryExpr 0x1289105d0 <col:38> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x128910608 <col:51> 'int' 0
      `-CompoundStmt 0x1289107d8 <col:54, line:11:2>
        `-BinaryOperator 0x1289107b8 <line:10:3, col:18> 'int' '='
          |-DeclRefExpr 0x1289106e0 <col:3> 'int' lvalue Var 0x128910328 'digit' 'int'
          `-BinaryOperator 0x128910798 <col:11, col:18> 'int' '-'
            |-ImplicitCastExpr 0x128910780 <col:11, col:14> 'int' <IntegralCast>
            | `-ImplicitCastExpr 0x128910768 <col:11, col:14> 'char' <LValueToRValue>
            |   `-UnaryOperator 0x128910738 <col:11, col:14> 'const char' lvalue prefix '*' cannot overflow
            |     `-UnaryOperator 0x128910720 <col:12, col:14> 'const char *' prefix '++'
            |       `-DeclRefExpr 0x128910700 <col:14> 'const char *' lvalue ParmVar 0x1289100d8 'p' 'const char *'
            `-CharacterLiteral 0x128910750 <col:18> 'int' 48
