`-FunctionDecl 0x1501283a8  line:1:1 invalid dhcpv6_print 'int (int *, const char *, int, int)'
  |-ParmVarDecl 0x150128128 <col:14, col:34> col:34 invalid ndo 'int *'
  |-ParmVarDecl 0x1501281a8 <line:2:14, col:28> col:28 used cp 'const char *'
  |-ParmVarDecl 0x150128228 <col:32, col:38> col:38 invalid length 'int'
  |-ParmVarDecl 0x1501282a8 <col:46, col:50> col:50 used indent 'int'
  `-CompoundStmt 0x148008e48 <line:3:1, line:47:1>
    |-DeclStmt 0x150128588 <line:5:5, col:30>
    | |-VarDecl 0x150128488 <col:5, col:19> col:19 used tlv 'const char *'
    | `-VarDecl 0x150128508 <col:5, col:25> col:25 used value 'const char *'
    |-WhileStmt 0x148008df8 <line:9:5, line:45:5>
    | |-BinaryOperator 0x150128638 <line:9:12, col:16> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x150128618 <col:12> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1501285d8 <col:16> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x148008dc0 <col:24, line:45:5>
    |   |-BinaryOperator 0x150128730 <line:10:9, col:20> 'const char *' contains-errors '='
    |   | |-DeclRefExpr 0x150128658 <col:9> 'const char *' lvalue Var 0x150128488 'tlv' 'const char *'
    |   | `-BinaryOperator 0x150128710 <col:15, col:20> '<dependent type>' contains-errors '+'
    |   |   |-DeclRefExpr 0x150128678 <col:15> 'const char *' lvalue ParmVar 0x1501281a8 'cp' 'const char *'
    |   |   `-RecoveryExpr 0x1501286f0 <col:20> '<dependent type>' contains-errors lvalue
    |   |-BinaryOperator 0x150141af8 <line:13:9, col:23> 'const char *' '='
    |   | |-DeclRefExpr 0x150141a60 <col:9> 'const char *' lvalue Var 0x150128508 'value' 'const char *'
    |   | `-BinaryOperator 0x150141ad8 <col:17, col:23> 'const char *' '+'
    |   |   |-ImplicitCastExpr 0x150141ac0 <col:17> 'const char *' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x150141a80 <col:17> 'const char *' lvalue Var 0x150128488 'tlv' 'const char *'
    |   |   `-IntegerLiteral 0x150141aa0 <col:23> 'int' 4
    |   |-CallExpr 0x150141ce0 <line:15:9, col:30> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x150141bf8 <col:9> 'int ()' Function 0x150141b40 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x150141cc0 <col:18, col:29> 'char[4]' contains-errors
    |   |   `-BinaryOperator 0x150141ca0 <col:19, col:24> 'char[4]' contains-errors ','
    |   |     |-RecoveryExpr 0x150141c18 <col:19> '<dependent type>' contains-errors lvalue
    |   |     `-StringLiteral 0x150141c80 <col:24> 'char[4]' lvalue "STR"
    |   |-ForStmt 0x150141f28 <line:16:9, line:17:34>
    |   | |-<<<NULL>>>
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x150141dd8 <line:16:26, col:30> 'int' contains-errors '>'
    |   | | |-RecoveryExpr 0x150141db8 <col:26> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x150141d78 <col:30> 'int' 0
    |   | |-UnaryOperator 0x150141e48 <col:33, col:34> '<dependent type>' contains-errors postfix '--' cannot overflow
    |   | | `-RecoveryExpr 0x150141e28 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-CallExpr 0x150141f00 <line:17:13, col:34> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x150141e60 <col:13> 'int ()' Function 0x150141b40 'ND_PRINT' 'int ()'
    |   |   `-ParenExpr 0x150141ee0 <col:22, col:33> 'char[4]' contains-errors
    |   |     `-BinaryOperator 0x150141ec0 <col:23, col:28> 'char[4]' contains-errors ','
    |   |       |-RecoveryExpr 0x150141e80 <col:23> '<dependent type>' contains-errors lvalue
    |   |       `-StringLiteral 0x150141ea0 <col:28> 'char[4]' lvalue "STR"
    |   `-SwitchStmt 0x150142160 <line:22:9, line:42:9>
    |     |-RecoveryExpr 0x150142140 <line:22:17> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x148008d70 <col:23, line:42:9>
    |       |-CompoundStmt 0x1501424e8 <line:24:39, line:31:13>
    |       | `-IfStmt 0x1501422c8 <line:25:17, line:28:17>
    |       |   |-RecoveryExpr 0x1501421c8 <line:25:21, col:36> '_Bool' contains-errors
    |       |   `-CompoundStmt 0x1501422b0 <col:39, line:28:17>
    |       |     `-ReturnStmt 0x1501422a0 <line:27:21, col:29>
    |       |       `-UnaryOperator 0x150142288 <col:28, col:29> 'int' prefix '-'
    |       |         `-IntegerLiteral 0x150142268 <col:29> 'int' 1
    |       |-BreakStmt 0x150142500 <line:32:17>
    |       |-CompoundStmt 0x148008d48 <line:33:38, line:40:13>
    |       | |-DeclStmt 0x1501425a8 <line:34:17, col:41>
    |       | | `-VarDecl 0x150142520 <col:17, col:31> col:31 invalid tp 'const int *'
    |       | `-WhileStmt 0x148008d28 <line:35:17, line:39:17>
    |       |   |-RecoveryExpr 0x150142600 <line:35:24, col:37> '_Bool' contains-errors
    |       |   `-CompoundStmt 0x148008d08 <col:45, line:39:17>
    |       |     |-CallExpr 0x1501426c0 <line:36:21, col:42> '<dependent type>' contains-errors
    |       |     | |-DeclRefExpr 0x150142620 <col:21> 'int ()' Function 0x150141b40 'ND_PRINT' 'int ()'
    |       |     | `-ParenExpr 0x1501426a0 <col:30, col:41> 'char[4]' contains-errors
    |       |     |   `-BinaryOperator 0x150142680 <col:31, col:36> 'char[4]' contains-errors ','
    |       |     |     |-RecoveryExpr 0x150142640 <col:31> '<dependent type>' contains-errors lvalue
    |       |     |     `-StringLiteral 0x150142660 <col:36> 'char[4]' lvalue "STR"
    |       |     `-IfStmt 0x148008ce8 <line:37:21, line:38:33>
    |       |       |-RecoveryExpr 0x148008c80 <line:37:25, col:70> '_Bool' contains-errors
    |       |       `-ReturnStmt 0x148008cd8 <line:38:25, col:33>
    |       |         `-UnaryOperator 0x148008cc0 <col:32, col:33> 'int' prefix '-'
    |       |           `-IntegerLiteral 0x148008ca0 <col:33> 'int' 1
    |       `-BreakStmt 0x148008d68 <line:41:17>
    `-ReturnStmt 0x148008e38 <line:46:5, col:12>
      `-IntegerLiteral 0x148008e18 <col:12> 'int' 0
