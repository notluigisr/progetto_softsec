`-FunctionDecl 0x15500de80  line:2:13 invalid pe_add_heuristic_property 'void (int *, const char *)' static
  |-ParmVarDecl 0x15500dd28 <col:39, col:48> col:48 invalid ctx 'int *'
  |-ParmVarDecl 0x15500dda8 <col:53, col:65> col:65 used key 'const char *'
  `-CompoundStmt 0x155029190 <line:3:1, line:24:44>
    |-DeclStmt 0x15500e128 <line:4:5, col:35>
    | |-RecordDecl 0x15500df38 <col:5, col:12> col:12 struct json_object
    | `-VarDecl 0x15500e0a8 <col:5, col:25> col:25 used heuristics 'struct json_object *'
    |-DeclStmt 0x15500e230 <line:5:5, col:27>
    | `-VarDecl 0x15500e1c8 <col:5, col:25> col:25 used pe 'struct json_object *'
    |-DeclStmt 0x15500e2d8 <line:6:5, col:28>
    | `-VarDecl 0x15500e270 <col:5, col:25> col:25 used str 'struct json_object *'
    |-BinaryOperator 0x155027520 <line:8:5, col:29> 'struct json_object *' contains-errors '='
    | |-DeclRefExpr 0x15500e2f0 <col:5> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'
    | `-CallExpr 0x1550274f8 <col:10, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1550274b8 <col:10> 'int ()' Function 0x155027400 'get_pe_property' 'int ()'
    |   `-RecoveryExpr 0x1550274d8 <col:26> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1550275c0 <line:9:5, line:10:9>
    | |-UnaryOperator 0x155027598 <line:9:9, col:13> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x155027580 <col:10, col:13> 'struct json_object *' <LValueToRValue>
    | |   `-ParenExpr 0x155027560 <col:10, col:13> 'struct json_object *' lvalue
    | |     `-DeclRefExpr 0x155027540 <col:11> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'
    | `-ReturnStmt 0x1550275b0 <line:10:9>
    |-IfStmt 0x155028140 <line:12:5, line:18:5>
    | |-UnaryOperator 0x1550278b0 <line:12:9, col:58> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x155027848 <col:10, col:58> 'int'
    | |   |-ImplicitCastExpr 0x155027830 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1550276c0 <col:10> 'int ()' Function 0x155027608 'json_object_object_get_ex' 'int ()'
    | |   |-ImplicitCastExpr 0x155027880 <col:36> 'struct json_object *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1550276e0 <col:36> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'
    | |   |-ImplicitCastExpr 0x155027898 <col:40> 'char *' <ArrayToPointerDecay>
    | |   | `-StringLiteral 0x155027740 <col:40> 'char[4]' lvalue "STR"
    | |   `-UnaryOperator 0x1550277e0 <col:47, col:48> 'struct json_object **' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x155027760 <col:48> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'
    | `-CompoundStmt 0x155028118 <col:61, line:18:5>
    |   |-BinaryOperator 0x155027e60 <line:13:9, col:44> 'struct json_object *' '='
    |   | |-DeclRefExpr 0x1550278c8 <col:9> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'
    |   | `-ImplicitCastExpr 0x155027a20 <col:22, col:44> 'struct json_object *' <IntegralToPointer>
    |   |   `-CallExpr 0x155027a00 <col:22, col:44> 'int'
    |   |     `-ImplicitCastExpr 0x1550279e8 <col:22> 'int (*)()' <FunctionToPointerDecay>
    |   |       `-DeclRefExpr 0x1550279c8 <col:22> 'int ()' Function 0x155027910 'json_object_new_array' 'int ()'
    |   |-IfStmt 0x155027f00 <line:14:9, line:15:13>
    |   | |-UnaryOperator 0x155027ed8 <line:14:13, col:25> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x155027ec0 <col:14, col:25> 'struct json_object *' <LValueToRValue>
    |   | |   `-ParenExpr 0x155027ea0 <col:14, col:25> 'struct json_object *' lvalue
    |   | |     `-DeclRefExpr 0x155027e80 <col:15> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'
    |   | `-ReturnStmt 0x155027ef0 <line:15:13>
    |   `-CallExpr 0x155028098 <line:17:9, col:53> 'int'
    |     |-ImplicitCastExpr 0x155028080 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x155028000 <col:9> 'int ()' Function 0x155027f48 'json_object_object_add' 'int ()'
    |     |-ImplicitCastExpr 0x1550280d0 <col:32> 'struct json_object *' <LValueToRValue>
    |     | `-DeclRefExpr 0x155028020 <col:32> 'struct json_object *' lvalue Var 0x15500e1c8 'pe' 'struct json_object *'
    |     |-ImplicitCastExpr 0x1550280e8 <col:36> 'char *' <ArrayToPointerDecay>
    |     | `-StringLiteral 0x155028040 <col:36> 'char[4]' lvalue "STR"
    |     `-ImplicitCastExpr 0x155028100 <col:43> 'struct json_object *' <LValueToRValue>
    |       `-DeclRefExpr 0x155028060 <col:43> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'
    |-BinaryOperator 0x155028310 <line:20:5, col:37> 'struct json_object *' '='
    | |-DeclRefExpr 0x155028160 <col:5> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *'
    | `-ImplicitCastExpr 0x1550282f8 <col:11, col:37> 'struct json_object *' <IntegralToPointer>
    |   `-CallExpr 0x1550282b8 <col:11, col:37> 'int'
    |     |-ImplicitCastExpr 0x1550282a0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x155028260 <col:11> 'int ()' Function 0x1550281a8 'json_object_new_string' 'int ()'
    |     `-ImplicitCastExpr 0x1550282e0 <col:34> 'const char *' <LValueToRValue>
    |       `-DeclRefExpr 0x155028280 <col:34> 'const char *' lvalue ParmVar 0x15500dda8 'key' 'const char *'
    |-IfStmt 0x1550283b0 <line:21:5, line:22:9>
    | |-UnaryOperator 0x155028388 <line:21:9, col:14> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x155028370 <col:10, col:14> 'struct json_object *' <LValueToRValue>
    | |   `-ParenExpr 0x155028350 <col:10, col:14> 'struct json_object *' lvalue
    | |     `-DeclRefExpr 0x155028330 <col:11> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *'
    | `-ReturnStmt 0x1550283a0 <line:22:9>
    `-CallExpr 0x155029130 <line:24:5, col:42> 'int'
      |-ImplicitCastExpr 0x155029118 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1550290b8 <col:5> 'int ()' Function 0x155029000 'json_object_array_add' 'int ()'
      |-ImplicitCastExpr 0x155029160 <col:27> 'struct json_object *' <LValueToRValue>
      | `-DeclRefExpr 0x1550290d8 <col:27> 'struct json_object *' lvalue Var 0x15500e0a8 'heuristics' 'struct json_object *'
      `-ImplicitCastExpr 0x155029178 <col:39> 'struct json_object *' <LValueToRValue>
        `-DeclRefExpr 0x1550290f8 <col:39> 'struct json_object *' lvalue Var 0x15500e270 'str' 'struct json_object *'
