`-FunctionDecl 0x14d80e0c8  line:1:20 invalid get_name_len 'int (int, const int *, const int *, const int *, int *, int *)' static
  |-ParmVarDecl 0x14d80dcf0 <col:33, col:37> col:37 used rec_counter 'int'
  |-ParmVarDecl 0x14d80dd70 <col:50, col:68> col:68 invalid pkt 'const int *'
  |-ParmVarDecl 0x14d80ddf0 <line:2:5, col:23> col:23 invalid start 'const int *'
  |-ParmVarDecl 0x14d80de70 <col:30, col:48> col:48 invalid max 'const int *'
  |-ParmVarDecl 0x14d80df28 <line:3:5, col:10> col:10 used parsed_len 'int *'
  |-ParmVarDecl 0x14d80dfa8 <col:22, col:27> col:27 used name_len 'int *'
  `-CompoundStmt 0x14d829700 <line:4:1, line:65:1>
    |-DeclStmt 0x14d80e220 <line:5:5, col:24>
    | `-VarDecl 0x14d80e1b8 <col:5, col:23> col:23 referenced invalid p 'const int *'
    |-IfStmt 0x14d80e310 <line:9:5, line:12:5>
    | |-BinaryOperator 0x14d80e290 <line:9:9, col:23> 'int' '>'
    | | |-ImplicitCastExpr 0x14d80e278 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d80e238 <col:9> 'int' lvalue ParmVar 0x14d80dcf0 'rec_counter' 'int'
    | | `-IntegerLiteral 0x14d80e258 <col:23> 'int' 10
    | `-CompoundStmt 0x14d80e2f8 <col:27, line:12:5>
    |   `-ReturnStmt 0x14d80e2e8 <line:11:2, col:9>
    |     `-RecoveryExpr 0x14d80e2c8 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14d827e20 <line:14:5, col:31> 'int' '='
    | |-UnaryOperator 0x14d80e368 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14d80e350 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d80e330 <col:6> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'
    | `-BinaryOperator 0x14d827e00 <col:17, col:31> 'int' '='
    |   |-UnaryOperator 0x14d80e3b8 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14d80e3a0 <col:18> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x14d80e380 <col:18> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'
    |   `-IntegerLiteral 0x14d80e3d0 <col:31> 'int' 0
    |-BinaryOperator 0x14d827ea8 <line:15:5, col:9> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x14d827e60 <col:5> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x14d827e40 <col:5> 'const int *' lvalue Var 0x14d80e1b8 'p' 'const int *'
    | `-RecoveryExpr 0x14d827e88 <col:9> '<dependent type>' contains-errors lvalue
    |-WhileStmt 0x14d829620 <line:16:5, line:60:5>
    | |-UnaryOperator 0x14d827f00 <line:16:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14d827ee8 <col:13> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x14d827ec8 <col:13> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x14d829608 <col:16, line:60:5>
    |   `-IfStmt 0x14d8295d8 <line:17:2, line:59:2> has_else
    |     |-BinaryOperator 0x14d827fe8 <line:17:6, col:21> 'int' contains-errors '=='
    |     | |-ParenExpr 0x14d827fa8 <col:6, col:16> '<dependent type>' contains-errors
    |     | | `-BinaryOperator 0x14d827f88 <col:7, col:12> '<dependent type>' contains-errors '&'
    |     | |   |-UnaryOperator 0x14d827f50 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | |   | `-ImplicitCastExpr 0x14d827f38 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | |   |   `-RecoveryExpr 0x14d827f18 <col:8> '<dependent type>' contains-errors lvalue
    |     | |   `-IntegerLiteral 0x14d827f68 <col:12> 'int' 192
    |     | `-IntegerLiteral 0x14d827fc8 <col:21> 'int' 192
    |     |-CompoundStmt 0x14d828b80 <col:27, line:42:2>
    |     | |-DeclStmt 0x14d8280a8 <line:19:6, col:21>
    |     | | `-VarDecl 0x14d828020 <col:6, col:20> col:10 used ptr_len 'int' cinit
    |     | |   `-IntegerLiteral 0x14d828088 <col:20> 'int' 0
    |     | |-DeclStmt 0x14d828140 <line:20:6, col:15>
    |     | | `-VarDecl 0x14d8280d8 <col:6, col:10> col:10 used dummy 'int'
    |     | |-CallExpr 0x14d8283b0 <line:24:6, col:29> '<dependent type>' contains-errors
    |     | | |-DeclRefExpr 0x14d8282b0 <col:6> 'int ()' Function 0x14d8281f8 'pj_memcpy' 'int ()'
    |     | | |-UnaryOperator 0x14d828398 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     | | | `-RecoveryExpr 0x14d828378 <col:17> '<dependent type>' contains-errors lvalue
    |     | | |-RecoveryExpr 0x14d828300 <col:25> '<dependent type>' contains-errors lvalue
    |     | | `-IntegerLiteral 0x14d828320 <col:28> 'int' 2
    |     | |-IfStmt 0x14d8287c0 <line:29:6, line:30:10>
    |     | | |-BinaryOperator 0x14d828758 <line:29:10, col:26> 'int' contains-errors '>='
    |     | | | |-RecoveryExpr 0x14d828738 <col:10> '<dependent type>' contains-errors lvalue
    |     | | | `-BinaryOperator 0x14d8286f8 <col:20, col:26> '<dependent type>' contains-errors '-'
    |     | | |   |-RecoveryExpr 0x14d8286b8 <col:20> '<dependent type>' contains-errors lvalue
    |     | | |   `-RecoveryExpr 0x14d8286d8 <col:26> '<dependent type>' contains-errors lvalue
    |     | | `-ReturnStmt 0x14d8287b0 <line:30:3, col:10>
    |     | |   `-RecoveryExpr 0x14d828790 <col:10> '<dependent type>' contains-errors lvalue
    |     | |-CompoundAssignOperator 0x14d828a98 <line:38:6, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     | | |-UnaryOperator 0x14d828a60 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |     | | | `-ImplicitCastExpr 0x14d828a48 <col:7> 'int *' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x14d828a28 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'
    |     | | `-IntegerLiteral 0x14d828a78 <col:21> 'int' 2
    |     | `-CompoundAssignOperator 0x14d828b50 <line:39:6, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |   |-UnaryOperator 0x14d828b00 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x14d828ae8 <col:7> 'int *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x14d828ac8 <col:7> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'
    |     |   `-ImplicitCastExpr 0x14d828b38 <col:19> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x14d828b18 <col:19> 'int' lvalue Var 0x14d828020 'ptr_len' 'int'
    |     `-CompoundStmt 0x14d8295a0 <line:42:9, line:59:2>
    |       |-DeclStmt 0x14d828c90 <line:43:6, col:29>
    |       | `-VarDecl 0x14d828bd8 <col:6, col:28> col:15 used label_len 'unsigned int' cinit
    |       |   `-UnaryOperator 0x14d828c78 <col:27, col:28> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       |     `-ImplicitCastExpr 0x14d828c60 <col:28> '<dependent type>' contains-errors <LValueToRValue>
    |       |       `-RecoveryExpr 0x14d828c40 <col:28> '<dependent type>' contains-errors lvalue
    |       |-CompoundAssignOperator 0x14d829240 <line:49:6, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |       | |-RecoveryExpr 0x14d828d68 <col:6> '<dependent type>' contains-errors lvalue
    |       | | `-DeclRefExpr 0x14d828d48 <col:6> 'const int *' lvalue Var 0x14d80e1b8 'p' 'const int *'
    |       | `-ParenExpr 0x14d829220 <col:11, col:25> 'unsigned int' contains-errors
    |       |   `-BinaryOperator 0x14d829200 <col:12, col:24> 'unsigned int' contains-errors '+'
    |       |     |-ImplicitCastExpr 0x14d828dd0 <col:12> 'unsigned int' contains-errors <LValueToRValue>
    |       |     | `-DeclRefExpr 0x14d828d90 <col:12> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'
    |       |     `-ImplicitCastExpr 0x14d828de8 <col:24> 'unsigned int' <IntegralCast>
    |       |       `-IntegerLiteral 0x14d828db0 <col:24> 'int' 1
    |       |-CompoundAssignOperator 0x14d829370 <line:50:6, col:35> 'int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |       | |-UnaryOperator 0x14d8292a8 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x14d829290 <col:7> 'int *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x14d829270 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'
    |       | `-ParenExpr 0x14d829350 <col:21, col:35> 'unsigned int' contains-errors
    |       |   `-BinaryOperator 0x14d829330 <col:22, col:34> 'unsigned int' contains-errors '+'
    |       |     |-ImplicitCastExpr 0x14d829300 <col:22> 'unsigned int' contains-errors <LValueToRValue>
    |       |     | `-DeclRefExpr 0x14d8292c0 <col:22> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'
    |       |     `-ImplicitCastExpr 0x14d829318 <col:34> 'unsigned int' <IntegralCast>
    |       |       `-IntegerLiteral 0x14d8292e0 <col:34> 'int' 1
    |       |-IfStmt 0x14d829468 <line:52:6, line:53:5>
    |       | |-BinaryOperator 0x14d829410 <line:52:10, col:16> 'int' contains-errors '!='
    |       | | |-UnaryOperator 0x14d8293d8 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow
    |       | | | `-ImplicitCastExpr 0x14d8293c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       | | |   `-RecoveryExpr 0x14d8293a0 <col:11> '<dependent type>' contains-errors lvalue
    |       | | `-IntegerLiteral 0x14d8293f0 <col:16> 'int' 0
    |       | `-UnaryOperator 0x14d829450 <line:53:3, col:5> 'unsigned int' contains-errors prefix '++'
    |       |   `-DeclRefExpr 0x14d829430 <col:5> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'
    |       `-CompoundAssignOperator 0x14d829510 <line:55:6, col:19> 'int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |         |-UnaryOperator 0x14d8294c0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |         | `-ImplicitCastExpr 0x14d8294a8 <col:7> 'int *' <LValueToRValue>
    |         |   `-DeclRefExpr 0x14d829488 <col:7> 'int *' lvalue ParmVar 0x14d80dfa8 'name_len' 'int *'
    |         `-ImplicitCastExpr 0x14d8294f8 <col:19> 'unsigned int' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x14d8294d8 <col:19> 'unsigned int' contains-errors lvalue Var 0x14d828bd8 'label_len' 'unsigned int'
    |-UnaryOperator 0x14d829660 <line:61:5, col:7> '<dependent type>' contains-errors prefix '++' cannot overflow
    | `-RecoveryExpr 0x14d829640 <col:7> '<dependent type>' contains-errors lvalue
    `-UnaryOperator 0x14d8296e8 <line:62:5, col:18> 'int' postfix '++'
      `-ParenExpr 0x14d8296c8 <col:5, col:17> 'int' lvalue
        `-UnaryOperator 0x14d8296b0 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
          `-ImplicitCastExpr 0x14d829698 <col:7> 'int *' <LValueToRValue>
            `-DeclRefExpr 0x14d829678 <col:7> 'int *' lvalue ParmVar 0x14d80df28 'parsed_len' 'int *'
