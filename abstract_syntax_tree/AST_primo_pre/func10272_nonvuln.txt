`-FunctionDecl 0x1428267e8  line:1:12 cma_alloc_port 'int (struct idr *, struct rdma_id_private *, unsigned short)' static
  |-ParmVarDecl 0x14280e248 <col:27, col:39> col:39 used ps 'struct idr *'
  |-ParmVarDecl 0x142826628 <col:43, col:67> col:67 used id_priv 'struct rdma_id_private *'
  |-ParmVarDecl 0x1428266a8 <line:2:6, col:21> col:21 used snum 'unsigned short'
  `-CompoundStmt 0x14282ac90 <line:3:1, line:22:1>
    |-DeclStmt 0x142826ad8 <line:4:2, col:34>
    | |-RecordDecl 0x1428268f0 <col:2, col:9> col:9 struct rdma_bind_list
    | `-VarDecl 0x142826a58 <col:2, col:25> col:25 used bind_list 'struct rdma_bind_list *'
    |-DeclStmt 0x142826b70 <line:5:2, col:9>
    | `-VarDecl 0x142826b08 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x142826e50 <line:8:2, line:9:11>
    | |-UnaryOperator 0x142826d90 <line:8:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x142826d78 <col:7> 'struct rdma_bind_list *' <LValueToRValue>
    | |   `-DeclRefExpr 0x142826d58 <col:7> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    | `-ReturnStmt 0x142826e40 <line:9:3, col:11>
    |   `-UnaryOperator 0x142826e28 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x142826e10 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x142826df0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x142827208 <line:11:2, col:59> 'int' contains-errors '='
    | |-DeclRefExpr 0x142826e70 <col:2> 'int' lvalue Var 0x142826b08 'ret' 'int'
    | `-CallExpr 0x1428271c0 <col:8, col:59> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142826f70 <col:8> 'int ()' Function 0x142826eb8 'idr_alloc' 'int ()'
    |   |-DeclRefExpr 0x142826f90 <col:18> 'struct idr *' lvalue ParmVar 0x14280e248 'ps' 'struct idr *'
    |   |-DeclRefExpr 0x142826fb0 <col:22> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    |   |-DeclRefExpr 0x142826fd0 <col:33> 'unsigned short' lvalue ParmVar 0x1428266a8 'snum' 'unsigned short'
    |   |-BinaryOperator 0x142827180 <col:39, col:46> 'int' '+'
    |   | |-ImplicitCastExpr 0x142827168 <col:39> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x142827150 <col:39> 'unsigned short' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x142826ff0 <col:39> 'unsigned short' lvalue ParmVar 0x1428266a8 'snum' 'unsigned short'
    |   | `-IntegerLiteral 0x142827010 <col:46> 'int' 1
    |   `-RecoveryExpr 0x1428271a0 <col:49> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x142827308 <line:12:2, line:13:8>
    | |-BinaryOperator 0x142827280 <line:12:6, col:12> 'int' '<'
    | | |-ImplicitCastExpr 0x142827268 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x142827228 <col:6> 'int' lvalue Var 0x142826b08 'ret' 'int'
    | | `-IntegerLiteral 0x142827248 <col:12> 'int' 0
    | `-GotoStmt 0x1428272f0 <line:13:3, col:8> 'err' 0x1428272a0
    |-BinaryOperator 0x1428273a8 <line:15:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x142827360 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x142827328 <col:2> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    | `-DeclRefExpr 0x142827388 <col:18> 'struct idr *' lvalue ParmVar 0x14280e248 'ps' 'struct idr *'
    |-BinaryOperator 0x1428274a0 <line:16:2, col:36> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x142827400 <col:2, col:13> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x1428273c8 <col:2> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    | `-CStyleCastExpr 0x142827478 <col:20, col:36> 'unsigned short' <IntegralCast>
    |   `-ImplicitCastExpr 0x142827460 <col:36> 'int' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x142827428 <col:36> 'int' lvalue Var 0x142826b08 'ret' 'int'
    |-CallExpr 0x14282a848 <line:17:2, col:34> 'int'
    | |-ImplicitCastExpr 0x14282a830 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1428275a0 <col:2> 'int ()' Function 0x1428274e8 'cma_bind_port' 'int ()'
    | |-ImplicitCastExpr 0x14282a878 <col:16> 'struct rdma_bind_list *' <LValueToRValue>
    | | `-DeclRefExpr 0x1428275c0 <col:16> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    | `-ImplicitCastExpr 0x14282a890 <col:27> 'struct rdma_id_private *' <LValueToRValue>
    |   `-DeclRefExpr 0x1428275e0 <col:27> 'struct rdma_id_private *' lvalue ParmVar 0x142826628 'id_priv' 'struct rdma_id_private *'
    |-ReturnStmt 0x14282a8c8 <line:18:2, col:9>
    | `-IntegerLiteral 0x14282a8a8 <col:9> 'int' 0
    |-LabelStmt 0x14282aa50 <line:19:1, line:20:17> 'err'
    | `-CallExpr 0x14282aa10 <col:2, col:17> 'int'
    |   |-ImplicitCastExpr 0x14282a9f8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x14282a9b8 <col:2> 'int ()' Function 0x14282a900 'kfree' 'int ()'
    |   `-ImplicitCastExpr 0x14282aa38 <col:8> 'struct rdma_bind_list *' <LValueToRValue>
    |     `-DeclRefExpr 0x14282a9d8 <col:8> 'struct rdma_bind_list *' lvalue Var 0x142826a58 'bind_list' 'struct rdma_bind_list *'
    `-ReturnStmt 0x14282ac80 <line:21:2, col:43>
      `-ConditionalOperator 0x14282ac50 <col:9, col:43> '<dependent type>' contains-errors
        |-BinaryOperator 0x14282abe0 <col:9, col:17> 'int' contains-errors '=='
        | |-DeclRefExpr 0x14282aa70 <col:9> 'int' lvalue Var 0x142826b08 'ret' 'int'
        | `-UnaryOperator 0x14282abc8 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow
        |   `-ImplicitCastExpr 0x14282abb0 <col:17> '<dependent type>' contains-errors <LValueToRValue>
        |     `-RecoveryExpr 0x14282ab90 <col:17> '<dependent type>' contains-errors lvalue
        |-UnaryOperator 0x14282ac38 <col:26, col:27> '<dependent type>' contains-errors prefix '-' cannot overflow
        | `-ImplicitCastExpr 0x14282ac20 <col:27> '<dependent type>' contains-errors <LValueToRValue>
        |   `-RecoveryExpr 0x14282ac00 <col:27> '<dependent type>' contains-errors lvalue
        `-DeclRefExpr 0x14282ab40 <col:43> 'int' lvalue Var 0x142826b08 'ret' 'int'
