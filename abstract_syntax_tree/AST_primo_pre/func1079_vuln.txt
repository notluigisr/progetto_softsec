`-FunctionDecl 0x154928348  line:1:26 invalid ConcatenateImages 'int (int, char **, int *)' static
  |-ParmVarDecl 0x1549280f0 <col:44, col:48> col:48 used argc 'int'
  |-ParmVarDecl 0x1549281a8 <col:53, col:60> col:60 used argv 'char **'
  |-ParmVarDecl 0x154928258 <line:2:6, col:21> col:21 invalid exception 'int *'
  `-CompoundStmt 0x156009138 <line:3:1, line:39:1>
    |-DeclStmt 0x1549284e8 <line:8:3, line:9:6>
    | `-VarDecl 0x154928480 <line:8:3, line:9:5> col:5 used c 'int'
    |-DeclStmt 0x154928580 <line:11:3, line:12:6>
    | `-VarDecl 0x154928518 <line:11:3, line:12:5> col:5 invalid i 'int' register
    |-IfStmt 0x154941d18 <line:14:3, line:16:36>
    | |-BinaryOperator 0x154941930 <line:14:7, col:39> 'int' contains-errors '=='
    | | |-CallExpr 0x1549418e0 <col:7, col:34> 'int'
    | | | |-ImplicitCastExpr 0x1549418c8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1549286f0 <col:7> 'int ()' Function 0x154928638 'ExpandFilenames' 'int ()'
    | | | |-UnaryOperator 0x154928730 <col:23, col:24> 'int *' prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x154928710 <col:24> 'int' lvalue ParmVar 0x1549280f0 'argc' 'int'
    | | | `-UnaryOperator 0x1549287a0 <col:29, col:30> 'char ***' prefix '&' cannot overflow
    | | |   `-DeclRefExpr 0x154928748 <col:30> 'char **' lvalue ParmVar 0x1549281a8 'argv' 'char **'
    | | `-RecoveryExpr 0x154941910 <col:39> '<dependent type>' contains-errors lvalue
    | `-CallExpr 0x154941cd8 <line:15:5, line:16:36> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x154941a30 <line:15:5> 'int ()' Function 0x154941978 'ThrowFileException' 'int ()'
    |   |-RecoveryExpr 0x154941a50 <col:24> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x154941c70 <col:34> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x154941ad0 <col:53> 'char[4]' lvalue "STR"
    |   `-CallExpr 0x154941cb0 <line:16:10, col:35> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x154941bd0 <col:10> 'int ()' Function 0x154941b18 'GetExceptionMessage' 'int ()'
    |     `-RecoveryExpr 0x154941c90 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x154942278 <line:19:3, line:22:3>
    | |-RecoveryExpr 0x154941fd0 <line:19:7, col:26> '_Bool' contains-errors
    | `-CompoundStmt 0x154942260 <col:32, line:22:3>
    |   `-CallExpr 0x154942208 <line:20:5, col:66> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x154941ff0 <col:5> 'int ()' Function 0x154941978 'ThrowFileException' 'int ()'
    |     |-RecoveryExpr 0x154942010 <col:24> '<dependent type>' contains-errors lvalue
    |     |-RecoveryExpr 0x154942178 <col:34> '<dependent type>' contains-errors lvalue
    |     |-StringLiteral 0x154942048 <col:48> 'char[4]' lvalue "STR"
    |     `-ArraySubscriptExpr 0x1549421e8 <col:54, col:65> 'char *' lvalue
    |       |-ImplicitCastExpr 0x1549421d0 <col:54> 'char **' <LValueToRValue>
    |       | `-DeclRefExpr 0x154942068 <col:54> 'char **' lvalue ParmVar 0x1549281a8 'argv' 'char **'
    |       `-BinaryOperator 0x1549421b0 <col:59, col:64> 'int' '-'
    |         |-ImplicitCastExpr 0x154942198 <col:59> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x154942088 <col:59> 'int' lvalue ParmVar 0x1549280f0 'argc' 'int'
    |         `-IntegerLiteral 0x1549420a8 <col:64> 'int' 1
    `-ForStmt 0x1560090e0 <line:23:3, line:36:3>
      |-BinaryOperator 0x1549422d8 <line:23:8, col:10> '<dependent type>' contains-errors '='
      | |-RecoveryExpr 0x154942298 <col:8> '<dependent type>' contains-errors lvalue
      | `-IntegerLiteral 0x1549422b8 <col:10> 'int' 2
      |-<<<NULL>>>
      |-BinaryOperator 0x154942438 <col:13, col:34> 'int' contains-errors '<'
      | |-RecoveryExpr 0x1549422f8 <col:13> '<dependent type>' contains-errors lvalue
      | `-RecoveryExpr 0x154942408 <col:17, col:34> '<dependent type>' contains-errors lvalue
      |   |-ParenExpr 0x154942370 <col:17, col:25> '<overloaded function type>' lvalue
      |   | `-UnresolvedLookupExpr 0x154942330 <col:18> '<overloaded function type>' lvalue (no ADL) = 'ssize_t' empty
      |   `-BinaryOperator 0x1549423e8 <col:28, col:33> 'int' '-'
      |     |-ImplicitCastExpr 0x1549423d0 <col:28> 'int' <LValueToRValue>
      |     | `-DeclRefExpr 0x154942390 <col:28> 'int' lvalue ParmVar 0x1549280f0 'argc' 'int'
      |     `-IntegerLiteral 0x1549423b0 <col:33> 'int' 1
      |-UnaryOperator 0x154942478 <col:37, col:38> '<dependent type>' contains-errors postfix '++' cannot overflow
      | `-RecoveryExpr 0x154942458 <col:37> '<dependent type>' contains-errors lvalue
      `-CompoundStmt 0x1560090c0 <col:42, line:36:3>
        |-IfStmt 0x1549426c0 <line:28:5, line:31:7>
        | |-RecoveryExpr 0x154942590 <line:28:9, col:27> '_Bool' contains-errors
        | `-CompoundStmt 0x1549426a8 <col:33, line:31:7>
        |   `-ContinueStmt 0x1549426a0 <line:30:9>
        `-CStyleCastExpr 0x156009098 <line:35:5, col:31> 'void' contains-errors <ToVoid>
          `-CallExpr 0x156009060 <col:12, col:31> '<dependent type>' contains-errors
            |-DeclRefExpr 0x156008fb0 <col:12> 'int ()' Function 0x156008ef8 'remove_utf8' 'int ()'
            `-ArraySubscriptExpr 0x156009040 <col:24, col:30> '<dependent type>' contains-errors lvalue
              |-ImplicitCastExpr 0x156009010 <col:24> 'char **' <LValueToRValue>
              | `-DeclRefExpr 0x156008fd0 <col:24> 'char **' lvalue ParmVar 0x1549281a8 'argv' 'char **'
              `-ImplicitCastExpr 0x156009028 <col:29> '<dependent type>' contains-errors <LValueToRValue>
                `-RecoveryExpr 0x156008ff0 <col:29> '<dependent type>' contains-errors lvalue
