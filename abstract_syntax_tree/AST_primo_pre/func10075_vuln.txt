`-FunctionDecl 0x124010a38  line:1:1 PHP_METHOD 'int (int, int)'
  |-ParmVarDecl 0x124010958 <col:12> col:12 SoapFault 'int'
  |-ParmVarDecl 0x1240108d8 <col:23> col:23 __toString 'int'
  `-CompoundStmt 0x1230260b8 <line:2:1, line:39:1>
    |-DeclStmt 0x124010c48 <line:4:2, col:11>
    | `-VarDecl 0x124010be0 <col:2, col:8> col:8 used str 'char *'
    |-DeclStmt 0x124010ce0 <line:5:2, col:9>
    | `-VarDecl 0x124010c78 <col:2, col:6> col:6 used len 'int'
    |-IfStmt 0x124010fa8 <line:9:2, line:11:2>
    | |-BinaryOperator 0x124010f60 <line:9:6, col:38> 'int' contains-errors '=='
    | | |-CallExpr 0x124010f20 <col:6, col:33> 'int'
    | | | `-ImplicitCastExpr 0x124010f08 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | |   `-DeclRefExpr 0x124010e10 <col:6> 'int ()' Function 0x124010d58 'zend_parse_parameters_none' 'int ()'
    | | `-RecoveryExpr 0x124010f40 <col:38> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x124010f90 <col:47, line:11:2>
    |   `-ReturnStmt 0x124010f80 <line:10:3>
    `-CallExpr 0x123026050 <line:38:2, col:28> 'int'
      |-ImplicitCastExpr 0x123026038 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x123025fb8 <col:2> 'int ()' Function 0x123025f00 'RETURN_STRINGL' 'int ()'
      |-ImplicitCastExpr 0x123026088 <col:17> 'char *' <LValueToRValue>
      | `-DeclRefExpr 0x123025fd8 <col:17> 'char *' lvalue Var 0x124010be0 'str' 'char *'
      |-ImplicitCastExpr 0x1230260a0 <col:22> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x123025ff8 <col:22> 'int' lvalue Var 0x124010c78 'len' 'int'
      `-IntegerLiteral 0x123026018 <col:27> 'int' 0
