`-FunctionDecl 0x13e928288  line:1:1 strv_have_prefix 'int (char **, const char *)'
  |-ParmVarDecl 0x13e928128 <col:19, col:27> col:27 used strv 'char **'
  |-ParmVarDecl 0x13e9281a8 <line:2:19, col:32> col:32 used prefix 'const char *'
  `-CompoundStmt 0x13f808458 <line:3:1, line:12:1>
    |-DeclStmt 0x13e928408 <line:4:3, col:9>
    | `-VarDecl 0x13e9283a0 <col:3, col:8> col:8 used i 'int'
    |-ForStmt 0x13f8083d8 <line:6:3, line:10:5>
    | |-BinaryOperator 0x13e928460 <line:6:8, col:12> 'int' '='
    | | |-DeclRefExpr 0x13e928420 <col:8> 'int' lvalue Var 0x13e9283a0 'i' 'int'
    | | `-IntegerLiteral 0x13e928440 <col:12> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13e928668 <col:15, col:34> 'int' contains-errors '&&'
    | | |-DeclRefExpr 0x13e928480 <col:15> 'char **' lvalue ParmVar 0x13e928128 'strv' 'char **'
    | | `-BinaryOperator 0x13e928648 <col:23, col:34> 'int' contains-errors '!='
    | |   |-ArraySubscriptExpr 0x13e928608 <col:23, col:29> 'char *' lvalue
    | |   | |-ImplicitCastExpr 0x13e9285d8 <col:23> 'char **' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x13e9284a0 <col:23> 'char **' lvalue ParmVar 0x13e928128 'strv' 'char **'
    | |   | `-ImplicitCastExpr 0x13e9285f0 <col:28> 'int' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x13e9284c0 <col:28> 'int' lvalue Var 0x13e9283a0 'i' 'int'
    | |   `-RecoveryExpr 0x13e928628 <col:34> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x13e9286a8 <col:40, col:41> 'int' postfix '++'
    | | `-DeclRefExpr 0x13e928688 <col:40> 'int' lvalue Var 0x13e9283a0 'i' 'int'
    | `-CompoundStmt 0x13f8083c0 <line:7:5, line:10:5>
    |   `-IfStmt 0x13f8083a0 <line:8:7, line:9:16>
    |     |-CallExpr 0x13f8082f8 <line:8:11, col:44> 'int'
    |     | |-ImplicitCastExpr 0x13f8082e0 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x13e9287d0 <col:11> 'int ()' Function 0x13e928718 'g_str_has_prefix' 'int ()'
    |     | |-ImplicitCastExpr 0x13f808328 <col:29, col:35> 'char *' <LValueToRValue>
    |     | | `-ArraySubscriptExpr 0x13f808270 <col:29, col:35> 'char *' lvalue
    |     | |   |-ImplicitCastExpr 0x13f808240 <col:29> 'char **' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x13f808200 <col:29> 'char **' lvalue ParmVar 0x13e928128 'strv' 'char **'
    |     | |   `-ImplicitCastExpr 0x13f808258 <col:34> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x13f808220 <col:34> 'int' lvalue Var 0x13e9283a0 'i' 'int'
    |     | `-ImplicitCastExpr 0x13f808340 <col:38> 'const char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13f808290 <col:38> 'const char *' lvalue ParmVar 0x13e9281a8 'prefix' 'const char *'
    |     `-ReturnStmt 0x13f808390 <line:9:9, col:16>
    |       `-RecoveryExpr 0x13f808370 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13f808448 <line:11:3, col:10>
      `-RecoveryExpr 0x13f808428 <col:10> '<dependent type>' contains-errors lvalue
