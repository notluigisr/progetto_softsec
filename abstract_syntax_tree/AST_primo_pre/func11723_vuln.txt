`-FunctionDecl 0x12d9281f8  line:1:20 invalid rsa_mgf1_decode 'int *(int *)' static
  |-ParmVarDecl 0x12d928128 <col:36, col:48> col:48 invalid alg 'int *'
  `-CompoundStmt 0x12d941ed8 <line:2:1, line:15:1>
    |-DeclStmt 0x12d928360 <line:3:5, col:27>
    | `-VarDecl 0x12d9282f8 <col:5, col:26> col:26 used p 'const unsigned char *'
    |-DeclStmt 0x12d9283f8 <line:4:5, col:13>
    | `-VarDecl 0x12d928390 <col:5, col:9> col:9 used plen 'int'
    |-IfStmt 0x12d9284f0 <line:5:5, line:6:16>
    | |-BinaryOperator 0x12d928488 <line:5:9, col:16> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12d928410 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d928468 <col:16> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d9284e0 <line:6:9, col:16>
    |   `-RecoveryExpr 0x12d9284c0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d9287e0 <line:7:5, line:8:16>
    | |-BinaryOperator 0x12d928778 <line:7:9, col:40> 'int' contains-errors '!='
    | | |-CallExpr 0x12d9286f8 <col:9, col:35> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x12d928670 <col:9> 'int ()' Function 0x12d9285b8 'OBJ_obj2nid' 'int ()'
    | | | `-CXXDependentScopeMemberExpr 0x12d9286b0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->algorithm
    | | |   `-RecoveryExpr 0x12d928690 <col:21> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d928758 <col:40> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d9287d0 <line:8:9, col:16>
    |   `-RecoveryExpr 0x12d9287b0 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12d941970 <line:9:5, line:10:16>
    | |-BinaryOperator 0x12d941908 <line:9:9, col:33> 'int' contains-errors '!='
    | | |-CXXDependentScopeMemberExpr 0x12d941868 <col:9, col:25> '<dependent type>' contains-errors lvalue ->type
    | | | `-CXXDependentScopeMemberExpr 0x12d941820 <col:9, col:14> '<dependent type>' contains-errors lvalue ->parameter
    | | |   `-RecoveryExpr 0x12d941800 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x12d9418e8 <col:33> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12d941960 <line:10:9, col:16>
    |   `-RecoveryExpr 0x12d941940 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d941af0 <line:12:5, col:41> 'const unsigned char *' contains-errors '='
    | |-DeclRefExpr 0x12d941990 <col:5> 'const unsigned char *' lvalue Var 0x12d9282f8 'p' 'const unsigned char *'
    | `-CXXDependentScopeMemberExpr 0x12d941aa8 <col:9, col:41> '<dependent type>' contains-errors lvalue ->data
    |   `-CXXDependentScopeMemberExpr 0x12d941a60 <col:9, col:31> '<dependent type>' contains-errors lvalue .sequence
    |     `-CXXDependentScopeMemberExpr 0x12d941a18 <col:9, col:25> '<dependent type>' contains-errors lvalue ->value
    |       `-CXXDependentScopeMemberExpr 0x12d9419d0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->parameter
    |         `-RecoveryExpr 0x12d9419b0 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12d941c70 <line:13:5, col:44> 'int' contains-errors '='
    | |-DeclRefExpr 0x12d941b10 <col:5> 'int' lvalue Var 0x12d928390 'plen' 'int'
    | `-CXXDependentScopeMemberExpr 0x12d941c28 <col:12, col:44> '<dependent type>' contains-errors lvalue ->length
    |   `-CXXDependentScopeMemberExpr 0x12d941be0 <col:12, col:34> '<dependent type>' contains-errors lvalue .sequence
    |     `-CXXDependentScopeMemberExpr 0x12d941b98 <col:12, col:28> '<dependent type>' contains-errors lvalue ->value
    |       `-CXXDependentScopeMemberExpr 0x12d941b50 <col:12, col:17> '<dependent type>' contains-errors lvalue ->parameter
    |         `-RecoveryExpr 0x12d941b30 <col:12> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x12d941ec8 <line:14:5, col:41>
      `-CallExpr 0x12d941e90 <col:12, col:41> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12d941d70 <col:12> 'int ()' Function 0x12d941cb8 'd2i_X509_ALGOR' 'int ()'
        |-RecoveryExpr 0x12d941e70 <col:27> '<dependent type>' contains-errors lvalue
        |-UnaryOperator 0x12d941e00 <col:33, col:34> 'const unsigned char **' prefix '&' cannot overflow
        | `-DeclRefExpr 0x12d941da8 <col:34> 'const unsigned char *' lvalue Var 0x12d9282f8 'p' 'const unsigned char *'
        `-DeclRefExpr 0x12d941e18 <col:37> 'int' lvalue Var 0x12d928390 'plen' 'int'
