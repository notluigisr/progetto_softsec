`-FunctionDecl 0x13e00df80  line:1:13 invalid xar_get_checksum_values 'void (int, unsigned char **, int *)' static
  |-ParmVarDecl 0x13e00dcf0 <col:37, col:54> col:54 invalid reader 'int'
  |-ParmVarDecl 0x13e00dde0 <col:62, col:79> col:79 used cksum 'unsigned char **'
  |-ParmVarDecl 0x13e00de98 <col:86, col:92> col:92 used hash 'int *'
  `-CompoundStmt 0x13e0278a8 <line:2:1, line:36:1>
    |-DeclStmt 0x13e00e270 <line:4:5, col:27>
    | `-VarDecl 0x13e00e208 <col:5, col:21> col:21 referenced invalid xmlval 'const int *'
    |-BinaryOperator 0x13e00e390 <line:6:5, col:13> 'int' contains-errors '='
    | |-UnaryOperator 0x13e00e358 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x13e00e340 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13e00e288 <col:6> 'int *' lvalue ParmVar 0x13e00de98 'hash' 'int *'
    | `-RecoveryExpr 0x13e00e370 <col:13> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d923f98 <line:7:5, line:20:5> has_else
    | |-BinaryOperator 0x13d923640 <line:7:9, col:18> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13d923600 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13d923620 <col:18> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x13d923858 <col:24, line:10:5>
    | | `-CallExpr 0x13d923818 <line:8:9, line:9:25> 'int'
    | |   |-ImplicitCastExpr 0x13d923800 <line:8:9> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x13d923740 <col:9> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
    | |   `-ImplicitCastExpr 0x13d923840 <col:20, line:9:20> 'char *' <ArrayToPointerDecay>
    | |     `-StringLiteral 0x13d9237a0 <line:8:20, line:9:20> 'char[7]' lvalue "STRSTR"
    | `-CompoundStmt 0x13d923f78 <line:10:12, line:20:5>
    |   |-CallExpr 0x13d923958 <line:11:9, col:32> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13d923870 <col:9> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
    |   | |-StringLiteral 0x13d9238d0 <col:20> 'char[4]' lvalue "STR"
    |   | `-RecoveryExpr 0x13d923938 <col:27> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x13d923f48 <line:12:9, line:19:9> has_else
    |     |-RecoveryExpr 0x13d923ac0 <line:12:13, col:61> '_Bool' contains-errors
    |     |-CompoundStmt 0x13d923c08 <col:64, line:14:9>
    |     | `-BinaryOperator 0x13d923be8 <line:13:13, col:21> 'int' contains-errors '='
    |     |   |-UnaryOperator 0x13d923bb0 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |     |   | `-ImplicitCastExpr 0x13d923b98 <col:14> 'int *' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x13d923ae0 <col:14> 'int *' lvalue ParmVar 0x13e00de98 'hash' 'int *'
    |     |   `-RecoveryExpr 0x13d923bc8 <col:21> '<dependent type>' contains-errors lvalue
    |     `-IfStmt 0x13d923f18 <line:14:16, line:19:9> has_else
    |       |-RecoveryExpr 0x13d923c78 <line:14:20, col:68> '_Bool' contains-errors
    |       |-CompoundStmt 0x13d923dc0 <col:71, line:16:9>
    |       | `-BinaryOperator 0x13d923da0 <line:15:13, col:21> 'int' contains-errors '='
    |       |   |-UnaryOperator 0x13d923d68 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x13d923d50 <col:14> 'int *' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x13d923c98 <col:14> 'int *' lvalue ParmVar 0x13e00de98 'hash' 'int *'
    |       |   `-RecoveryExpr 0x13d923d80 <col:21> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x13d923f00 <line:16:16, line:19:9>
    |         `-CallExpr 0x13d923e80 <line:17:13, col:36> '<dependent type>' contains-errors
    |           |-DeclRefExpr 0x13d923dd8 <col:13> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
    |           |-StringLiteral 0x13d923df8 <col:24> 'char[4]' lvalue "STR"
    |           `-RecoveryExpr 0x13d923e60 <col:31> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x13e027878 <line:24:5, line:35:25> has_else
      |-RecoveryExpr 0x13d9243b8 <line:24:9, col:76> '_Bool' contains-errors
      |-CompoundStmt 0x13e0277c0 <col:98, line:33:5>
      | |-BinaryOperator 0x13d924568 <line:25:9, col:48> '<dependent type>' contains-errors '='
      | | |-RecoveryExpr 0x13d9243f8 <col:9> '<dependent type>' contains-errors lvalue
      | | | `-DeclRefExpr 0x13d9243d8 <col:9> 'const int *' lvalue Var 0x13e00e208 'xmlval' 'const int *'
      | | `-CallExpr 0x13d924540 <col:18, col:48> '<dependent type>' contains-errors
      | |   |-DeclRefExpr 0x13d924500 <col:18> 'int ()' Function 0x13d924448 'xmlTextReaderConstValue' 'int ()'
      | |   `-RecoveryExpr 0x13d924520 <col:42> '<dependent type>' contains-errors lvalue
      | `-IfStmt 0x13e027790 <line:26:9, line:32:9> has_else
      |   |-RecoveryExpr 0x13d924588 <line:26:13> '<dependent type>' contains-errors lvalue
      |   |-CompoundStmt 0x13e027670 <col:21, line:29:9>
      |   | |-BinaryOperator 0x13e027548 <line:27:13, col:38> 'unsigned char *' contains-errors '='
      |   | | |-UnaryOperator 0x13d9245e0 <col:13, col:14> 'unsigned char *' lvalue prefix '*' cannot overflow
      |   | | | `-ImplicitCastExpr 0x13d9245c8 <col:14> 'unsigned char **' <LValueToRValue>
      |   | | |   `-DeclRefExpr 0x13d9245a8 <col:14> 'unsigned char **' lvalue ParmVar 0x13e00dde0 'cksum' 'unsigned char **'
      |   | | `-CallExpr 0x13e027520 <col:22, col:38> '<dependent type>' contains-errors
      |   | |   |-DeclRefExpr 0x13e0274e0 <col:22> 'int ()' Function 0x13e027428 'xmlStrdup' 'int ()'
      |   | |   `-RecoveryExpr 0x13e027500 <col:32> '<dependent type>' contains-errors lvalue
      |   | `-CallExpr 0x13e027610 <line:28:13, col:37> 'int'
      |   |   |-ImplicitCastExpr 0x13e0275f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
      |   |   | `-DeclRefExpr 0x13e027568 <col:13> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
      |   |   |-ImplicitCastExpr 0x13e027640 <col:24> 'char *' <ArrayToPointerDecay>
      |   |   | `-StringLiteral 0x13e027588 <col:24> 'char[4]' lvalue "STR"
      |   |   `-ImplicitCastExpr 0x13e027658 <col:31, col:32> 'unsigned char *' <LValueToRValue>
      |   |     `-UnaryOperator 0x13e0275e0 <col:31, col:32> 'unsigned char *' lvalue prefix '*' cannot overflow
      |   |       `-ImplicitCastExpr 0x13e0275c8 <col:32> 'unsigned char **' <LValueToRValue>
      |   |         `-DeclRefExpr 0x13e0275a8 <col:32> 'unsigned char **' lvalue ParmVar 0x13e00dde0 'cksum' 'unsigned char **'
      |   `-CompoundStmt 0x13e027778 <line:29:16, line:32:9>
      |     `-CallExpr 0x13e027738 <line:31:13, col:29> 'int'
      |       |-ImplicitCastExpr 0x13e027720 <col:13> 'int (*)()' <FunctionToPointerDecay>
      |       | `-DeclRefExpr 0x13e0276e0 <col:13> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
      |       `-ImplicitCastExpr 0x13e027760 <col:24> 'char *' <ArrayToPointerDecay>
      |         `-StringLiteral 0x13e027700 <col:24> 'char[4]' lvalue "STR"
      `-CallExpr 0x13e027838 <line:35:9, col:25> 'int'
        |-ImplicitCastExpr 0x13e027820 <col:9> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13e0277e0 <col:9> 'int ()' Function 0x13d923688 'cli_dbgmsg' 'int ()'
        `-ImplicitCastExpr 0x13e027860 <col:20> 'char *' <ArrayToPointerDecay>
          `-StringLiteral 0x13e027800 <col:20> 'char[4]' lvalue "STR"
