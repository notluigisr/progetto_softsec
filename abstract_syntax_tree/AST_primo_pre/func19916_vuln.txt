`-FunctionDecl 0x1469281a8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x1469280d8 <col:14> col:14 bcscale 'int'
  `-CompoundStmt 0x15000a2a8 <line:2:1, line:12:1>
    |-DeclStmt 0x146928320 <line:3:2, col:16>
    | `-VarDecl 0x1469282b8 <col:2, col:7> col:7 used new_scale 'long'
    |-IfStmt 0x146928648 <line:5:2, line:7:2>
    | |-RecoveryExpr 0x146928600 <line:5:6, col:77> '_Bool' contains-errors
    | `-CompoundStmt 0x146928630 <col:86, line:7:2>
    |   `-ReturnStmt 0x146928620 <line:6:3>
    `-BinaryOperator 0x15000a288 <line:9:2, col:49> '<dependent type>' contains-errors '='
      |-CallExpr 0x15000a168 <col:2, col:18> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x146928748 <col:2> 'int ()' Function 0x146928690 'BCG' 'int ()'
      | `-RecoveryExpr 0x15000a148 <col:6> '<dependent type>' contains-errors lvalue
      `-ConditionalOperator 0x15000a258 <col:22, col:49> 'long'
        |-ParenExpr 0x15000a208 <col:22, col:41> 'int'
        | `-BinaryOperator 0x15000a1e8 <col:23, col:40> 'int' '<'
        |   |-CStyleCastExpr 0x15000a1c0 <col:23, col:28> 'int' <IntegralCast>
        |   | `-ImplicitCastExpr 0x15000a1a8 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
        |   |   `-DeclRefExpr 0x1469287a8 <col:28> 'long' lvalue Var 0x1469282b8 'new_scale' 'long'
        |   `-IntegerLiteral 0x15000a028 <col:40> 'int' 0
        |-ImplicitCastExpr 0x15000a240 <col:45> 'long' <IntegralCast>
        | `-IntegerLiteral 0x15000a088 <col:45> 'int' 0
        `-ImplicitCastExpr 0x15000a228 <col:49> 'long' <LValueToRValue>
          `-DeclRefExpr 0x15000a0a8 <col:49> 'long' lvalue Var 0x1469282b8 'new_scale' 'long'
