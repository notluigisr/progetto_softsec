`-FunctionDecl 0x14f00df18  line:1:1 invalid lldp_private_8023_print 'int (int *, const char *, int)'
  |-ParmVarDecl 0x14f00dd28 <col:25, col:45> col:45 invalid ndo 'int *'
  |-ParmVarDecl 0x14f00dda8 <line:2:25, col:39> col:39 used tptr 'const char *'
  |-ParmVarDecl 0x14f00de28 <col:45, col:51> col:51 invalid tlv_len 'int'
  `-CompoundStmt 0x14f029ea0 <line:3:1, line:60:1>
    |-DeclStmt 0x14f00e128 <line:4:5, col:33>
    | |-VarDecl 0x14f00dff0 <col:5, col:9> col:9 used subtype 'int'
    | `-VarDecl 0x14f00e070 <col:5, col:28> col:18 used hexdump 'int' cinit
    |   `-RecoveryExpr 0x14f00e0f0 <col:28> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f00e200 <line:6:5, line:8:5>
    | |-BinaryOperator 0x14f00e180 <line:6:9, col:19> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x14f00e140 <col:9> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x14f00e160 <col:19> 'int' 4
    | `-CompoundStmt 0x14f00e1e8 <col:22, line:8:5>
    |   `-ReturnStmt 0x14f00e1d8 <line:7:9, col:16>
    |     `-ImplicitCastExpr 0x14f00e1c0 <col:16> 'int' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x14f00e1a0 <col:16> 'int' contains-errors lvalue Var 0x14f00e070 'hexdump' 'int'
    |-BinaryOperator 0x14f00e320 <line:9:5, col:23> 'int' '='
    | |-DeclRefExpr 0x14f00e220 <col:5> 'int' lvalue Var 0x14f00dff0 'subtype' 'int'
    | `-ImplicitCastExpr 0x14f00e308 <col:15, col:23> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x14f00e2f0 <col:15, col:23> 'char' <LValueToRValue>
    |     `-UnaryOperator 0x14f00e2d8 <col:15, col:23> 'const char' lvalue prefix '*' cannot overflow
    |       `-ParenExpr 0x14f00e2b8 <col:16, col:23> 'const char *'
    |         `-BinaryOperator 0x14f00e298 <col:17, col:22> 'const char *' '+'
    |           |-ImplicitCastExpr 0x14f00e280 <col:17> 'const char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x14f00e240 <col:17> 'const char *' lvalue ParmVar 0x14f00dda8 'tptr' 'const char *'
    |           `-IntegerLiteral 0x14f00e260 <col:22> 'int' 3
    |-SwitchStmt 0x14f0281a8 <line:15:5, line:57:5>
    | |-ImplicitCastExpr 0x14f028190 <line:15:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f028170 <col:13> 'int' lvalue Var 0x14f00dff0 'subtype' 'int'
    | `-CompoundStmt 0x14f029df8 <col:22, line:57:5>
    |   |-IfStmt 0x14f0282a8 <line:17:9, line:19:9>
    |   | |-BinaryOperator 0x14f028228 <line:17:13, col:23> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x14f0281e8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x14f028208 <col:23> 'int' 9
    |   | `-CompoundStmt 0x14f028290 <col:26, line:19:9>
    |   |   `-ReturnStmt 0x14f028280 <line:18:13, col:20>
    |   |     `-ImplicitCastExpr 0x14f028268 <col:20> 'int' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x14f028248 <col:20> 'int' contains-errors lvalue Var 0x14f00e070 'hexdump' 'int'
    |   |-BreakStmt 0x14f028d70 <line:29:9>
    |   |-IfStmt 0x14f029260 <line:32:9, line:34:9>
    |   | |-BinaryOperator 0x14f028dd0 <line:32:13, col:23> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x14f028d90 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x14f028db0 <col:23> 'int' 7
    |   | `-CompoundStmt 0x14f029248 <col:26, line:34:9>
    |   |   `-ReturnStmt 0x14f029238 <line:33:13, col:20>
    |   |     `-ImplicitCastExpr 0x14f029220 <col:20> 'int' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x14f029200 <col:20> 'int' contains-errors lvalue Var 0x14f00e070 'hexdump' 'int'
    |   |-BreakStmt 0x14f029720 <line:39:9>
    |   |-IfStmt 0x14f029800 <line:42:9, line:44:9>
    |   | |-BinaryOperator 0x14f029780 <line:42:13, col:23> 'int' contains-errors '<'
    |   | | |-RecoveryExpr 0x14f029740 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-IntegerLiteral 0x14f029760 <col:23> 'int' 9
    |   | `-CompoundStmt 0x14f0297e8 <col:26, line:44:9>
    |   |   `-ReturnStmt 0x14f0297d8 <line:43:13, col:20>
    |   |     `-ImplicitCastExpr 0x14f0297c0 <col:20> 'int' contains-errors <LValueToRValue>
    |   |       `-DeclRefExpr 0x14f0297a0 <col:20> 'int' contains-errors lvalue Var 0x14f00e070 'hexdump' 'int'
    |   |-BreakStmt 0x14f029bd8 <line:48:9>
    |   |-CallExpr 0x14f029d78 <line:51:9, col:56> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f029be0 <col:9> 'int ()' Function 0x14f027e00 'ND_PRINT' 'int ()'
    |   | `-ParenExpr 0x14f029d58 <col:18, col:55> 'int' contains-errors
    |   |   `-BinaryOperator 0x14f029d38 <col:19, col:54> 'int' contains-errors ','
    |   |     |-BinaryOperator 0x14f029c40 <col:19, col:24> 'char[4]' contains-errors ','
    |   |     | |-RecoveryExpr 0x14f029c00 <col:19> '<dependent type>' contains-errors lvalue
    |   |     | `-StringLiteral 0x14f029c20 <col:24> 'char[4]' lvalue "STR"
    |   |     `-CallExpr 0x14f029d10 <col:31, col:54> 'int'
    |   |       |-ImplicitCastExpr 0x14f029cf8 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x14f029c60 <col:31> 'int ()' Function 0x14f028758 'EXTRACT_16BITS' 'int ()'
    |   |       `-BinaryOperator 0x14f029cd8 <col:46, col:53> 'const char *' '+'
    |   |         |-ImplicitCastExpr 0x14f029cc0 <col:46> 'const char *' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x14f029c80 <col:46> 'const char *' lvalue ParmVar 0x14f00dda8 'tptr' 'const char *'
    |   |         `-IntegerLiteral 0x14f029ca0 <col:53> 'int' 4
    |   |-BreakStmt 0x14f029da0 <line:52:9>
    |   |-DefaultStmt 0x14f029dd0 <line:54:5, col:12>
    |   | `-NullStmt 0x14f029dc8 <col:12>
    |   `-BreakStmt 0x14f029df0 <line:56:9>
    `-ReturnStmt 0x14f029e90 <line:59:5, col:12>
      `-ImplicitCastExpr 0x14f029e78 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x14f029e58 <col:12> 'int' contains-errors lvalue Var 0x14f00e070 'hexdump' 'int'
