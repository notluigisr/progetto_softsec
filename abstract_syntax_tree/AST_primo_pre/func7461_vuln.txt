`-FunctionDecl 0x16000dd38  line:1:13 invalid checkCurl 'int ()' static
  `-CompoundStmt 0x16000e258 <col:25, line:7:1>
    |-DeclStmt 0x16000df00 <line:2:2, col:34>
    | `-VarDecl 0x16000de60 <col:2, col:21> col:13 used nul 'const char[]' cinit
    |   `-RecoveryExpr 0x16000dee0 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x16000e1f0 <line:3:2, line:5:2>
    | |-BinaryOperator 0x16000e1a8 <line:3:6, col:33> 'int' contains-errors '!='
    | | |-CallExpr 0x16000e128 <col:6, col:28> 'int' contains-errors
    | | | |-ImplicitCastExpr 0x16000e110 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x16000e040 <col:6> 'int ()' Function 0x16000df88 'r_sys_cmdf' 'int ()'
    | | | |-ImplicitCastExpr 0x16000e158 <col:18> 'char *' <ArrayToPointerDecay>
    | | | | `-StringLiteral 0x16000e0a0 <col:18> 'char[4]' lvalue "STR"
    | | | `-ImplicitCastExpr 0x16000e170 <col:25> 'const char *' contains-errors <ArrayToPointerDecay>
    | | |   `-DeclRefExpr 0x16000e0c0 <col:25> 'const char[]' contains-errors lvalue Var 0x16000de60 'nul' 'const char[]'
    | | `-IntegerLiteral 0x16000e188 <col:33> 'int' 0
    | `-CompoundStmt 0x16000e1e0 <col:36, line:5:2>
    `-ReturnStmt 0x16000e248 <line:6:2, col:9>
      `-RecoveryExpr 0x16000e228 <col:9> '<dependent type>' contains-errors lvalue
