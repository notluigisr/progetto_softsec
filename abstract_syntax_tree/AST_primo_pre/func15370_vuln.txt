`-FunctionDecl 0x15100df18  line:1:1 invalid datetime_s_parse 'int (int, int *, int)'
  |-ParmVarDecl 0x15100dcd8 <col:18, col:22> col:22 used argc 'int'
  |-ParmVarDecl 0x15100dda8 <col:28, col:35> col:35 referenced invalid argv 'int *'
  |-ParmVarDecl 0x15100de28 <col:41, col:47> col:47 invalid klass 'int'
  `-CompoundStmt 0x151029220 <line:2:1, line:24:1>
    |-CallExpr 0x15100e378 <line:5:5, col:53> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x15100e130 <col:5> 'int ()' Function 0x15100e078 'rb_scan_args' 'int ()'
    | |-DeclRefExpr 0x15100e150 <col:18> 'int' lvalue ParmVar 0x15100dcd8 'argc' 'int'
    | |-RecoveryExpr 0x15100e170 <col:24> '<dependent type>' contains-errors lvalue
    | |-StringLiteral 0x15100e1d0 <col:30> 'char[4]' lvalue "STR"
    | |-UnaryOperator 0x15100e2f0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x15100e2d0 <col:38> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x15100e328 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x15100e308 <col:44> '<dependent type>' contains-errors lvalue
    | `-UnaryOperator 0x15100e360 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x15100e340 <col:51> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x151028800 <line:7:5, line:14:5>
    | |-ImplicitCastExpr 0x15100e3e8 <line:7:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x15100e3c8 <col:13> 'int' lvalue ParmVar 0x15100dcd8 'argc' 'int'
    | `-CompoundStmt 0x151028c68 <col:19, line:14:5>
    |   |-CaseStmt 0x151028860 <line:8:7, <invalid sloc>>
    |   | |-ConstantExpr 0x151028848 <col:12> 'int'
    |   | | `-IntegerLiteral 0x151028828 <col:12> 'int' 0
    |   | `-NullStmt 0x151028a38 <<invalid sloc>>
    |   |-CaseStmt 0x151028a78 <line:10:7, <invalid sloc>>
    |   | |-ConstantExpr 0x151028a60 <col:12> 'int'
    |   | | `-IntegerLiteral 0x151028a40 <col:12> 'int' 1
    |   | `-NullStmt 0x151028ab8 <<invalid sloc>>
    |   `-CaseStmt 0x151028af8 <line:12:7, <invalid sloc>>
    |     |-ConstantExpr 0x151028ae0 <col:12> 'int'
    |     | `-IntegerLiteral 0x151028ac0 <col:12> 'int' 2
    |     `-NullStmt 0x151028c60 <<invalid sloc>>
    `-CompoundStmt 0x151029200 <line:16:5, line:23:5>
      |-BinaryOperator 0x151028df8 <line:19:2, col:13> '<dependent type>' contains-errors '='
      | |-ArraySubscriptExpr 0x151028db8 <col:2, col:9> '<dependent type>' contains-errors lvalue
      | | |-ImplicitCastExpr 0x151028da0 <col:2> '<dependent type>' contains-errors <LValueToRValue>
      | | | `-RecoveryExpr 0x151028cb0 <col:2> '<dependent type>' contains-errors lvalue
      | | |   `-DeclRefExpr 0x151028c90 <col:2> 'int *' lvalue ParmVar 0x15100dda8 'argv' 'int *'
      | | `-IntegerLiteral 0x151028cd8 <col:8> 'int' 0
      | `-RecoveryExpr 0x151028dd8 <col:13> '<dependent type>' contains-errors lvalue
      `-BinaryOperator 0x151028f80 <line:20:2, col:13> '<dependent type>' contains-errors '='
        |-ArraySubscriptExpr 0x151028f40 <col:2, col:9> '<dependent type>' contains-errors lvalue
        | |-ImplicitCastExpr 0x151028f28 <col:2> '<dependent type>' contains-errors <LValueToRValue>
        | | `-RecoveryExpr 0x151028e38 <col:2> '<dependent type>' contains-errors lvalue
        | |   `-DeclRefExpr 0x151028e18 <col:2> 'int *' lvalue ParmVar 0x15100dda8 'argv' 'int *'
        | `-IntegerLiteral 0x151028e60 <col:8> 'int' 1
        `-RecoveryExpr 0x151028f60 <col:13> '<dependent type>' contains-errors lvalue
