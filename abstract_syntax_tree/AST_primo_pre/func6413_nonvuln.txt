`-FunctionDecl 0x13b80dee8  line:1:1 invalid png_write_hIST 'int (int, int, int)'
  |-ParmVarDecl 0x13b80dcf0 <col:16, col:29> col:29 invalid png_ptr 'int'
  |-ParmVarDecl 0x13b80dd70 <col:38, col:57> col:57 invalid hist 'int'
  |-ParmVarDecl 0x13b80ddf0 <col:63, col:67> col:67 used num_hist 'int'
  `-CompoundStmt 0x13c80a7f8 <line:2:1, line:26:1>
    |-DeclStmt 0x13b80e028 <line:3:4, col:9>
    | `-VarDecl 0x13b80dfc0 <col:4, col:8> col:8 used i 'int'
    |-CallExpr 0x13b80e288 <line:6:4, col:22> 'int'
    | |-ImplicitCastExpr 0x13b80e270 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13b80e1a0 <col:4> 'int ()' Function 0x13b80e0e8 'png_debug' 'int ()'
    | |-IntegerLiteral 0x13b80e1c0 <col:14> 'int' 1
    | `-ImplicitCastExpr 0x13b80e2b8 <col:17> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x13b80e220 <col:17> 'char[4]' lvalue "STR"
    |-IfStmt 0x13c809f88 <line:8:4, line:15:4>
    | |-BinaryOperator 0x13b80e3b0 <line:8:8, col:33> 'int' contains-errors '>'
    | | |-ImplicitCastExpr 0x13b80e398 <col:8> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13b80e2d0 <col:8> 'int' lvalue ParmVar 0x13b80ddf0 'num_hist' 'int'
    | | `-CStyleCastExpr 0x13b80e370 <col:19, col:33> 'int' contains-errors <Dependent>
    | |   `-CXXDependentScopeMemberExpr 0x13b80e310 <col:24, col:33> '<dependent type>' contains-errors lvalue ->num_palette
    | |     `-RecoveryExpr 0x13b80e2f0 <col:24> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c809f60 <line:9:4, line:15:4>
    |   |-CallExpr 0x13c809da0 <line:10:7, line:11:31> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13c809cb8 <line:10:7> 'int ()' Function 0x13c809c00 'png_debug2' 'int ()'
    |   | |-IntegerLiteral 0x13c809cd8 <col:18> 'int' 3
    |   | |-StringLiteral 0x13c809cf8 <col:21> 'char[4]' lvalue "STR"
    |   | |-DeclRefExpr 0x13c809d18 <col:28> 'int' lvalue ParmVar 0x13b80ddf0 'num_hist' 'int'
    |   | `-CXXDependentScopeMemberExpr 0x13c809d58 <line:11:11, col:20> '<dependent type>' contains-errors lvalue ->num_palette
    |   |   `-RecoveryExpr 0x13c809d38 <col:11> '<dependent type>' contains-errors lvalue
    |   |-CallExpr 0x13c809f20 <line:13:7, col:33> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x13c809ec0 <col:7> 'int ()' Function 0x13c809e08 'png_warning' 'int ()'
    |   | |-RecoveryExpr 0x13c809ee0 <col:19> '<dependent type>' contains-errors lvalue
    |   | `-StringLiteral 0x13c809f00 <col:28> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x13c809f50 <line:14:7>
    |-ForStmt 0x13c80a678 <line:19:4, line:23:4>
    | |-BinaryOperator 0x13c80a1b0 <line:19:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x13c80a170 <col:9> 'int' lvalue Var 0x13b80dfc0 'i' 'int'
    | | `-IntegerLiteral 0x13c80a190 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x13c80a240 <col:16, col:20> 'int' '<'
    | | |-ImplicitCastExpr 0x13c80a210 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13c80a1d0 <col:16> 'int' lvalue Var 0x13b80dfc0 'i' 'int'
    | | `-ImplicitCastExpr 0x13c80a228 <col:20> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x13c80a1f0 <col:20> 'int' lvalue ParmVar 0x13b80ddf0 'num_hist' 'int'
    | |-UnaryOperator 0x13c80a280 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x13c80a260 <col:30> 'int' lvalue Var 0x13b80dfc0 'i' 'int'
    | `-CompoundStmt 0x13c80a660 <line:20:4, line:23:4>
    |   `-CallExpr 0x13c80a4e0 <line:21:7, col:36> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13c80a378 <col:7> 'int ()' Function 0x13c80a2c0 'png_save_uint_16' 'int ()'
    |     |-RecoveryExpr 0x13c80a470 <col:24> '<dependent type>' contains-errors lvalue
    |     `-ArraySubscriptExpr 0x13c80a4c0 <col:29, col:35> '<dependent type>' contains-errors lvalue
    |       |-ImplicitCastExpr 0x13c80a490 <col:29> '<dependent type>' contains-errors <LValueToRValue>
    |       | `-RecoveryExpr 0x13c80a3b0 <col:29> '<dependent type>' contains-errors lvalue
    |       `-ImplicitCastExpr 0x13c80a4a8 <col:34> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x13c80a3d0 <col:34> 'int' lvalue Var 0x13b80dfc0 'i' 'int'
    `-CallExpr 0x13c80a7d0 <line:25:4, col:31> '<dependent type>' contains-errors
      |-DeclRefExpr 0x13c80a790 <col:4> 'int ()' Function 0x13c80a6d8 'png_write_chunk_end' 'int ()'
      `-RecoveryExpr 0x13c80a7b0 <col:24> '<dependent type>' contains-errors lvalue
