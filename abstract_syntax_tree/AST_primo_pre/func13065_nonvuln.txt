`-FunctionDecl 0x16000de80  line:1:6 invalid prune_partition_set 'void (const int *, int *)'
  |-ParmVarDecl 0x16000dcf0 <col:26, col:39> col:39 invalid table 'const int *'
  |-ParmVarDecl 0x16000dda8 <col:46, col:61> col:61 referenced invalid part_spec 'int *'
  `-CompoundStmt 0x15680a618 <line:2:1, line:26:1>
    |-DeclStmt 0x16000dff0 <line:3:3, col:25>
    | `-VarDecl 0x16000df50 <col:3, col:24> col:7 used last_partition 'int' cinit
    |   `-UnaryOperator 0x16000dfd8 <col:23, col:24> 'int' prefix '-'
    |     `-IntegerLiteral 0x16000dfb8 <col:24> 'int' 1
    |-DeclStmt 0x16000e088 <line:4:3, col:9>
    | `-VarDecl 0x16000e020 <col:3, col:8> col:8 used i 'int'
    |-CallExpr 0x16000e348 <line:7:3, col:19> 'int'
    | |-ImplicitCastExpr 0x16000e330 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x16000e280 <col:3> 'int ()' Function 0x16000e1c8 'DBUG_ENTER' 'int ()'
    | `-ImplicitCastExpr 0x16000e370 <col:14> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x16000e2e0 <col:14> 'char[4]' lvalue "STR"
    |-ForStmt 0x15680a2f8 <line:8:3, line:18:3>
    | |-BinaryOperator 0x156809c48 <line:8:8, col:22> 'int' contains-errors '='
    | | |-DeclRefExpr 0x16000e388 <col:8> 'int' lvalue Var 0x16000e020 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x156809c00 <col:11, col:22> '<dependent type>' contains-errors lvalue ->start_part
    | |   `-RecoveryExpr 0x16000e3a8 <col:11> '<dependent type>' contains-errors lvalue
    | |-<<<NULL>>>
    | |-BinaryOperator 0x156809cf0 <col:34, col:50> 'int' contains-errors '<='
    | | |-DeclRefExpr 0x156809c68 <col:34> 'int' lvalue Var 0x16000e020 'i' 'int'
    | | `-CXXDependentScopeMemberExpr 0x156809ca8 <col:39, col:50> '<dependent type>' contains-errors lvalue ->end_part
    | |   `-RecoveryExpr 0x156809c88 <col:39> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x156809d30 <col:60, col:61> 'int' postfix '++'
    | | `-DeclRefExpr 0x156809d10 <col:60> 'int' lvalue Var 0x16000e020 'i' 'int'
    | `-CompoundStmt 0x15680a2e0 <line:9:3, line:18:3>
    |   `-IfStmt 0x15680a2c0 <line:10:5, line:17:5>
    |     |-RecoveryExpr 0x156809ec8 <line:10:9, col:55> '_Bool' contains-errors
    |     `-CompoundStmt 0x15680a298 <line:11:5, line:17:5>
    |       |-CallExpr 0x15680a040 <line:12:7, col:26> 'int'
    |       | |-ImplicitCastExpr 0x15680a028 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x156809fc8 <col:7> 'int ()' Function 0x156809f10 'DBUG_PRINT' 'int ()'
    |       | |-ImplicitCastExpr 0x15680a070 <col:18> 'char *' <ArrayToPointerDecay>
    |       | | `-StringLiteral 0x156809fe8 <col:18> 'char[4]' lvalue "STR"
    |       | `-ImplicitCastExpr 0x15680a088 <col:25> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x15680a008 <col:25> 'int' lvalue Var 0x16000e020 'i' 'int'
    |       |-IfStmt 0x15680a200 <line:13:7, line:15:32>
    |       | |-BinaryOperator 0x15680a110 <line:13:11, col:30> 'int' '=='
    |       | | |-ImplicitCastExpr 0x15680a0f8 <col:11> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x15680a0a0 <col:11> 'int' lvalue Var 0x16000df50 'last_partition' 'int'
    |       | | `-UnaryOperator 0x15680a0e0 <col:29, col:30> 'int' prefix '-'
    |       | |   `-IntegerLiteral 0x15680a0c0 <col:30> 'int' 1
    |       | `-BinaryOperator 0x15680a1e0 <line:15:9, col:32> '<dependent type>' contains-errors '='
    |       |   |-CXXDependentScopeMemberExpr 0x15680a178 <col:9, col:20> '<dependent type>' contains-errors lvalue ->start_part
    |       |   | `-RecoveryExpr 0x15680a150 <col:9> '<dependent type>' contains-errors lvalue
    |       |   |   `-DeclRefExpr 0x15680a130 <col:9> 'int *' lvalue ParmVar 0x16000dda8 'part_spec' 'int *'
    |       |   `-DeclRefExpr 0x15680a1c0 <col:32> 'int' lvalue Var 0x16000e020 'i' 'int'
    |       `-BinaryOperator 0x15680a278 <line:16:7, col:23> 'int' '='
    |         |-DeclRefExpr 0x15680a220 <col:7> 'int' lvalue Var 0x16000df50 'last_partition' 'int'
    |         `-ImplicitCastExpr 0x15680a260 <col:23> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x15680a240 <col:23> 'int' lvalue Var 0x16000e020 'i' 'int'
    `-IfStmt 0x15680a5e8 <line:19:3, line:23:26> has_else
      |-BinaryOperator 0x15680a3a0 <line:19:7, col:26> 'int' '=='
      | |-ImplicitCastExpr 0x15680a388 <col:7> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x15680a330 <col:7> 'int' lvalue Var 0x16000df50 'last_partition' 'int'
      | `-UnaryOperator 0x15680a370 <col:25, col:26> 'int' prefix '-'
      |   `-IntegerLiteral 0x15680a350 <col:26> 'int' 1
      |-BinaryOperator 0x15680a4f8 <line:21:5, col:50> '<dependent type>' contains-errors '='
      | |-CXXDependentScopeMemberExpr 0x15680a408 <col:5, col:16> '<dependent type>' contains-errors lvalue ->start_part
      | | `-RecoveryExpr 0x15680a3e0 <col:5> '<dependent type>' contains-errors lvalue
      | |   `-DeclRefExpr 0x15680a3c0 <col:5> 'int *' lvalue ParmVar 0x16000dda8 'part_spec' 'int *'
      | `-BinaryOperator 0x15680a4d8 <col:28, col:50> '<dependent type>' contains-errors '+'
      |   |-CXXDependentScopeMemberExpr 0x15680a470 <col:28, col:39> '<dependent type>' contains-errors lvalue ->end_part
      |   | `-RecoveryExpr 0x15680a450 <col:28> '<dependent type>' contains-errors lvalue
      |   `-IntegerLiteral 0x15680a4b8 <col:50> 'int' 1
      `-BinaryOperator 0x15680a5c8 <line:23:5, col:26> '<dependent type>' contains-errors '='
        |-CXXDependentScopeMemberExpr 0x15680a560 <col:5, col:16> '<dependent type>' contains-errors lvalue ->end_part
        | `-RecoveryExpr 0x15680a538 <col:5> '<dependent type>' contains-errors lvalue
        |   `-DeclRefExpr 0x15680a518 <col:5> 'int *' lvalue ParmVar 0x16000dda8 'part_spec' 'int *'
        `-DeclRefExpr 0x15680a5a8 <col:26> 'int' lvalue Var 0x16000df50 'last_partition' 'int'
