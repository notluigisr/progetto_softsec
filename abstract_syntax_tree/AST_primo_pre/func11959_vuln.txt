`-FunctionDecl 0x12f928bf8  line:1:1 invalid gss_krb5int_export_lucid_sec_context 'int (int *, const int, const int, int *)'
  |-ParmVarDecl 0x12f928928 <line:2:5, col:26> col:26 invalid minor_status 'int *'
  |-ParmVarDecl 0x12f9289a8 <line:3:5, col:25> col:25 invalid context_handle 'const int'
  |-ParmVarDecl 0x12f928a28 <line:4:5, col:25> col:25 invalid desired_object 'const int'
  |-ParmVarDecl 0x12f928aa8 <line:5:5, col:26> col:26 invalid data_set 'int *'
  `-CompoundStmt 0x12f942b38 <line:6:1, line:52:1>
    |-DeclStmt 0x12f928d78 <line:10:5, col:37>
    | `-VarDecl 0x12f928cd8 <col:5, col:33> col:26 used lctx 'void *' cinit
    |   `-RecoveryExpr 0x12f928d58 <col:33> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x12f928e30 <line:11:5, col:36>
    | `-VarDecl 0x12f928da8 <col:5, col:35> col:25 used version 'int' cinit
    |   `-IntegerLiteral 0x12f928e10 <col:35> 'int' 0
    |-BinaryOperator 0x12f928ed0 <line:16:5, col:21> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x12f928e98 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12f928e80 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12f928e60 <col:6> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x12f928eb0 <col:21> 'int' 0
    |-BinaryOperator 0x12f942000 <line:17:5, col:17> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x12f928fc0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x12f928fa8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x12f928ef0 <col:6> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x12f928fd8 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12f942460 <line:24:5, line:25:16>
    | |-CallExpr 0x12f9423f0 <line:24:9, col:25> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12f942370 <col:9> 'int ()' Function 0x12f9422b8 'GSS_ERROR' 'int ()'
    | | `-RecoveryExpr 0x12f9423d0 <col:19> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12f942450 <line:25:9, col:16>
    |   `-RecoveryExpr 0x12f942430 <col:16> '<dependent type>' contains-errors lvalue
    |-SwitchStmt 0x12f9424b8 <line:28:5, line:36:5>
    | |-ImplicitCastExpr 0x12f9424a0 <line:28:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x12f942480 <col:13> 'int' lvalue Var 0x12f928da8 'version' 'int'
    | `-CompoundStmt 0x12f942708 <col:22, line:36:5>
    |   |-CaseStmt 0x12f942518 <line:29:5, <invalid sloc>>
    |   | |-ConstantExpr 0x12f942500 <col:10> 'int'
    |   | | `-IntegerLiteral 0x12f9424e0 <col:10> 'int' 1
    |   | `-NullStmt 0x12f9426c8 <<invalid sloc>>
    |   |-BreakStmt 0x12f9426d0 <line:32:9>
    |   |-DefaultStmt 0x12f9426e0 <line:33:5, col:12>
    |   | `-NullStmt 0x12f9426d8 <col:12>
    |   `-BreakStmt 0x12f942700 <line:35:9>
    |-IfStmt 0x12f9427c0 <line:38:5, line:39:14>
    | |-RecoveryExpr 0x12f942738 <line:38:9> '_Bool' contains-errors
    | `-GotoStmt 0x12f9427a8 <line:39:9, col:14> 'error_out' 0x12f942758
    |-IfStmt 0x12f942a10 <line:45:5, line:46:14>
    | |-RecoveryExpr 0x12f9429d8 <line:45:9, col:25> '_Bool' contains-errors
    | `-GotoStmt 0x12f9429f8 <line:46:9, col:14> 'error_out' 0x12f942758
    `-LabelStmt 0x12f942b18 <line:48:1, col:10> 'error_out'
      `-NullStmt 0x12f942b10 <col:10>
