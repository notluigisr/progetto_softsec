`-FunctionDecl 0x13d80dd98  line:1:1 DefragIPv4NoDataTest 'int (void)'
  `-CompoundStmt 0x13e809d68 <line:2:1, line:36:1>
    |-DeclStmt 0x13d80dfa0 <line:5:5, col:16>
    | `-VarDecl 0x13d80df18 <col:5, col:14> col:9 used id 'int' cinit
    |   `-IntegerLiteral 0x13d80df80 <col:14> 'int' 12
    |-DeclStmt 0x13d80e058 <line:6:5, col:16>
    | `-VarDecl 0x13d80dfd0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x13d80e038 <col:15> 'int' 0
    |-CallExpr 0x13d80e1e8 <line:8:5, col:16> 'int'
    | `-ImplicitCastExpr 0x13d80e1d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13d80e180 <col:5> 'int ()' Function 0x13d80e0c8 'DefragInit' 'int ()'
    |-IfStmt 0x13e809268 <line:11:5, line:12:14>
    | |-BinaryOperator 0x13d80e3d0 <line:11:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13d80e390 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13d80e3b0 <col:15> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x13e809250 <line:12:9, col:14> 'end' 0x13e809200
    |-IfStmt 0x13e809560 <line:16:5, line:17:14>
    | |-BinaryOperator 0x13e809528 <line:16:9, col:14> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13e8094e8 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13e809508 <col:14> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x13e809548 <line:17:9, col:14> 'end' 0x13e809200
    |-IfStmt 0x13e809870 <line:20:5, line:21:14>
    | |-BinaryOperator 0x13e809838 <line:20:9, col:40> 'int' contains-errors '!='
    | | |-CallExpr 0x13e8097d8 <col:9, col:35> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13e809660 <col:9> 'int ()' Function 0x13e8095a8 'Defrag' 'int ()'
    | | | |-RecoveryExpr 0x13e809758 <col:16> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x13e809778 <col:22> '<dependent type>' contains-errors lvalue
    | | | |-RecoveryExpr 0x13e809798 <col:28> '<dependent type>' contains-errors lvalue
    | | | `-RecoveryExpr 0x13e8097b8 <col:31> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13e809818 <col:40> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x13e809858 <line:21:9, col:14> 'end' 0x13e809200
    |-IfStmt 0x13e809900 <line:24:5, line:25:16>
    | |-RecoveryExpr 0x13e8098b0 <line:24:9, col:39> '_Bool' contains-errors
    | `-ReturnStmt 0x13e8098f0 <line:25:9, col:16>
    |   `-IntegerLiteral 0x13e8098d0 <col:16> 'int' 0
    |-BinaryOperator 0x13e809960 <line:27:5, col:11> 'int' '='
    | |-DeclRefExpr 0x13e809920 <col:5> 'int' lvalue Var 0x13d80dfd0 'ret' 'int'
    | `-IntegerLiteral 0x13e809940 <col:11> 'int' 1
    |-LabelStmt 0x13e809aa8 <line:28:1, col:4> 'end'
    | `-NullStmt 0x13e809aa0 <col:4>
    |-CallExpr 0x13e809d00 <line:34:5, col:19> 'int'
    | `-ImplicitCastExpr 0x13e809ce8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13e809cc8 <col:5> 'int ()' Function 0x13e809c10 'DefragDestroy' 'int ()'
    `-ReturnStmt 0x13e809d58 <line:35:5, col:12>
      `-ImplicitCastExpr 0x13e809d40 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13e809d20 <col:12> 'int' lvalue Var 0x13d80dfd0 'ret' 'int'
