`-FunctionDecl 0x12400dec8  line:1:12 vfat_ioctl32 'int (unsigned int, unsigned int, unsigned long)' static
  |-ParmVarDecl 0x12400dcd8 <col:25, col:34> col:34 used fd 'unsigned int'
  |-ParmVarDecl 0x12400dd58 <col:38, col:47> col:47 used cmd 'unsigned int'
  |-ParmVarDecl 0x12400ddd8 <col:52, col:66> col:66 arg 'unsigned long'
  `-CompoundStmt 0x12500a848 <line:2:1, line:26:1>
    |-DeclStmt 0x1240267b8 <line:3:2, col:30>
    | |-RecordDecl 0x12400dfd0 <col:2, col:9> col:9 struct compat_dirent
    | `-VarDecl 0x12400e0c8 <col:2, col:23> col:23 invalid __user 'struct compat_dirent'
    |-DeclStmt 0x124026850 <line:4:2, col:9>
    | `-VarDecl 0x1240267e8 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x124026a10 <line:6:2, col:20>
    | |-RecordDecl 0x124026880 <col:2, col:9> col:9 struct dirent
    | `-VarDecl 0x124026990 <col:2, col:16> col:16 invalid d 'int'
    |-SwitchStmt 0x124026a60 <line:8:2, line:16:2>
    | |-ImplicitCastExpr 0x124026a48 <line:8:9> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x124026a28 <col:9> 'unsigned int' lvalue ParmVar 0x12400dd58 'cmd' 'unsigned int'
    | `-CompoundStmt 0x124026bf8 <line:9:2, line:16:2>
    |   |-BinaryOperator 0x124026b18 <line:11:18, col:24> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x124026aa0 <col:18> 'unsigned int' lvalue ParmVar 0x12400dd58 'cmd' 'unsigned int'
    |   | `-RecoveryExpr 0x124026af8 <col:24> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x124026b38 <line:12:18>
    |   |-BinaryOperator 0x124026bd0 <line:14:18, col:24> 'unsigned int' contains-errors '='
    |   | |-DeclRefExpr 0x124026b58 <col:18> 'unsigned int' lvalue ParmVar 0x12400dd58 'cmd' 'unsigned int'
    |   | `-RecoveryExpr 0x124026bb0 <col:24> '<dependent type>' contains-errors lvalue
    |   `-BreakStmt 0x124026bf0 <line:15:18>
    |-CallExpr 0x124026dc0 <line:18:2, col:18> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124026d40 <col:2> 'int ()' Function 0x124026c88 'set_fs' 'int ()'
    | `-RecoveryExpr 0x124026da0 <col:9> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x124027070 <line:19:2, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x124026de8 <col:2> 'int' lvalue Var 0x1240267e8 'ret' 'int'
    | `-CallExpr 0x124027008 <col:8, col:42> 'int' contains-errors
    |   |-ImplicitCastExpr 0x124026ff0 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x124026ee8 <col:8> 'int ()' Function 0x124026e30 'sys_ioctl' 'int ()'
    |   |-ImplicitCastExpr 0x124027040 <col:18> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x124026f08 <col:18> 'unsigned int' lvalue ParmVar 0x12400dcd8 'fd' 'unsigned int'
    |   |-ImplicitCastExpr 0x124027058 <col:21> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x124026f28 <col:21> 'unsigned int' lvalue ParmVar 0x12400dd58 'cmd' 'unsigned int'
    |   `-CStyleCastExpr 0x124026f98 <col:25, col:41> 'unsigned long' contains-errors <Dependent>
    |     `-UnaryOperator 0x124026f68 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       `-RecoveryExpr 0x124026f48 <col:41> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x124027110 <line:20:2, col:14> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x124027090 <col:2> 'int ()' Function 0x124026c88 'set_fs' 'int ()'
    | `-RecoveryExpr 0x1240270f0 <col:9> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12500a7e0 <line:21:2, line:24:2>
    | |-BinaryOperator 0x124027190 <line:21:6, col:13> 'int' '>='
    | | |-ImplicitCastExpr 0x124027178 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x124027138 <col:6> 'int' lvalue Var 0x1240267e8 'ret' 'int'
    | | `-IntegerLiteral 0x124027158 <col:13> 'int' 0
    | `-CompoundStmt 0x12500a7c0 <col:16, line:24:2>
    |   |-CompoundAssignOperator 0x1240274c8 <line:22:3, col:31> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x1240271b0 <col:3> 'int' lvalue Var 0x1240267e8 'ret' 'int'
    |   | `-CallExpr 0x124027498 <col:10, col:31> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1240272b0 <col:10> 'int ()' Function 0x1240271f8 'put_dirent32' 'int ()'
    |   |   |-UnaryOperator 0x124027460 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-ArraySubscriptExpr 0x124027440 <col:24, col:27> '<dependent type>' contains-errors lvalue
    |   |   |   |-ImplicitCastExpr 0x124027428 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |   |   |   | `-RecoveryExpr 0x1240272d0 <col:24> '<dependent type>' contains-errors lvalue
    |   |   |   `-IntegerLiteral 0x1240272f0 <col:26> 'int' 0
    |   |   `-RecoveryExpr 0x124027478 <col:30> '<dependent type>' contains-errors lvalue
    |   `-CompoundAssignOperator 0x12500a790 <line:23:3, col:35> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-DeclRefExpr 0x1240274f8 <col:3> 'int' lvalue Var 0x1240267e8 'ret' 'int'
    |     `-CallExpr 0x12500a760 <col:10, col:35> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x124027518 <col:10> 'int ()' Function 0x1240271f8 'put_dirent32' 'int ()'
    |       |-UnaryOperator 0x12500a708 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-ArraySubscriptExpr 0x12500a6e8 <col:24, col:27> '<dependent type>' contains-errors lvalue
    |       |   |-ImplicitCastExpr 0x12500a6d0 <col:24> '<dependent type>' contains-errors <LValueToRValue>
    |       |   | `-RecoveryExpr 0x124027538 <col:24> '<dependent type>' contains-errors lvalue
    |       |   `-IntegerLiteral 0x124027558 <col:26> 'int' 1
    |       `-BinaryOperator 0x12500a740 <col:30, col:34> '<dependent type>' contains-errors '+'
    |         |-RecoveryExpr 0x12500a720 <col:30> '<dependent type>' contains-errors lvalue
    |         `-IntegerLiteral 0x1240275e0 <col:34> 'int' 1
    `-ReturnStmt 0x12500a838 <line:25:2, col:9>
      `-ImplicitCastExpr 0x12500a820 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12500a800 <col:9> 'int' lvalue Var 0x1240267e8 'ret' 'int'
