`-FunctionDecl 0x11d9281c8  line:1:1 referenced invalid lspci_process 'int (int)'
  |-ParmVarDecl 0x11d9280f0 <col:15, col:22> col:22 invalid s 'int'
  `-CompoundStmt 0x11e00a170 <line:2:1, line:13:1>
    |-DeclStmt 0x11d9282f8 <line:3:2, col:21>
    | `-VarDecl 0x11d928290 <col:2, col:15> col:15 used pkglen 'unsigned int'
    |-DeclStmt 0x11d9283c8 <line:4:2, col:26>
    | `-VarDecl 0x11d928328 <col:2, col:22> col:15 used rest 'char *' static cinit
    |   `-RecoveryExpr 0x11d9283a8 <col:22> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x11d928460 <line:5:2, col:11>
    | `-VarDecl 0x11d9283f8 <col:2, col:8> col:8 used buf 'char *'
    |-BinaryOperator 0x11d928588 <line:7:2, col:23> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x11d928478 <col:2> 'unsigned int' lvalue Var 0x11d928290 'pkglen' 'unsigned int'
    | `-BinaryOperator 0x11d928568 <col:11, col:23> '<dependent type>' contains-errors '-'
    |   |-CXXDependentScopeMemberExpr 0x11d9284b8 <col:11, col:14> '<dependent type>' contains-errors lvalue ->end
    |   | `-RecoveryExpr 0x11d928498 <col:11> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x11d928520 <col:20, col:23> '<dependent type>' contains-errors lvalue ->p
    |     `-RecoveryExpr 0x11d928500 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x11e009a80 <line:9:2, col:26> 'char *' '='
    | |-DeclRefExpr 0x11d9285a8 <col:2> 'char *' lvalue Var 0x11d9283f8 'buf' 'char *'
    | `-ImplicitCastExpr 0x11e009640 <col:8, col:26> 'char *' <IntegralToPointer>
    |   `-CallExpr 0x11e009618 <col:8, col:26> 'int'
    |     |-ImplicitCastExpr 0x11e009600 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x11d928720 <col:8> 'int ()' Function 0x11d928668 'xmalloc' 'int ()'
    |     `-BinaryOperator 0x11d9287b0 <col:16, col:25> 'unsigned int' '+'
    |       |-ImplicitCastExpr 0x11d928780 <col:16> 'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x11d928740 <col:16> 'unsigned int' lvalue Var 0x11d928290 'pkglen' 'unsigned int'
    |       `-ImplicitCastExpr 0x11d928798 <col:25> 'unsigned int' <IntegralCast>
    |         `-IntegerLiteral 0x11d928760 <col:25> 'int' 1
    |-CallExpr 0x11e009d10 <line:10:2, col:40> 'int' contains-errors
    | |-ImplicitCastExpr 0x11e009cf8 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x11e009b80 <col:2> 'int ()' Function 0x11e009ac8 'STRNCPY' 'int ()'
    | |-ImplicitCastExpr 0x11e009d48 <col:10> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x11e009ba0 <col:10> 'char *' lvalue Var 0x11d9283f8 'buf' 'char *'
    | |-CStyleCastExpr 0x11e009c40 <col:15, col:27> 'char *' contains-errors <Dependent>
    | | `-CXXDependentScopeMemberExpr 0x11e009be0 <col:24, col:27> '<dependent type>' contains-errors lvalue ->p
    | |   `-RecoveryExpr 0x11e009bc0 <col:24> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x11e009cd8 <col:30, col:39> 'unsigned int' '+'
    |   |-ImplicitCastExpr 0x11e009ca8 <col:30> 'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x11e009c68 <col:30> 'unsigned int' lvalue Var 0x11d928290 'pkglen' 'unsigned int'
    |   `-ImplicitCastExpr 0x11e009cc0 <col:39> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x11e009c88 <col:39> 'int' 1
    |-CallExpr 0x11e009fb8 <line:11:2, col:55> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e009e40 <col:2> 'int ()' Function 0x11e009d88 'str_handle_lines' 'int ()'
    | |-DeclRefExpr 0x11e009e60 <col:19> 'char *' lvalue Var 0x11d9283f8 'buf' 'char *'
    | |-UnaryOperator 0x11e009ed0 <col:24, col:25> 'char **' contains-errors prefix '&' cannot overflow
    | | `-DeclRefExpr 0x11e009e80 <col:25> 'char *' contains-errors lvalue Var 0x11d928328 'rest' 'char *'
    | |-RecoveryExpr 0x11e009f78 <col:31> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x11e009f98 <col:51> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11e00a130 <line:12:2, col:11> 'int'
      |-ImplicitCastExpr 0x11e00a118 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x11e00a0d8 <col:2> 'int ()' Function 0x11e00a020 'xfree' 'int ()'
      `-ImplicitCastExpr 0x11e00a158 <col:8> 'char *' <LValueToRValue>
        `-DeclRefExpr 0x11e00a0f8 <col:8> 'char *' lvalue Var 0x11d9283f8 'buf' 'char *'
