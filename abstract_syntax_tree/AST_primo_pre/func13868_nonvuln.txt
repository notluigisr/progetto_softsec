`-FunctionDecl 0x148928bf8  line:1:12 invalid internal_verify 'int (int *)' static
  |-ParmVarDecl 0x148928b28 <col:28, col:44> col:44 referenced invalid ctx 'int *'
  `-CompoundStmt 0x148944940 <line:2:1, line:84:1>
    |-DeclStmt 0x148928de0 <line:3:5, col:18>
    | |-VarDecl 0x148928cc0 <col:5, col:14> col:9 used ok 'int' cinit
    | | `-IntegerLiteral 0x148928d28 <col:14> 'int' 0
    | `-VarDecl 0x148928d60 <col:5, col:17> col:17 used n 'int'
    |-DeclStmt 0x148929110 <line:6:5, col:46>
    | `-VarDecl 0x1489290a8 <col:5, col:45> col:11 used cb 'int (*)(int, int *)'
    |-BinaryOperator 0x1489291b0 <line:8:5, col:15> 'int (*)(int, int *)' contains-errors '='
    | |-DeclRefExpr 0x148929128 <col:5> 'int (*)(int, int *)' lvalue Var 0x1489290a8 'cb' 'int (*)(int, int *)'
    | `-CXXDependentScopeMemberExpr 0x148929168 <col:10, col:15> '<dependent type>' contains-errors lvalue ->verify_cb
    |   `-RecoveryExpr 0x148929148 <col:10> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x148942410 <line:10:5, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x1489291d0 <col:5> 'int' lvalue Var 0x148928d60 'n' 'int'
    | `-CallExpr 0x1489423e8 <col:9, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x148942360 <col:9> 'int ()' Function 0x1489422a8 'sk_X509_num' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x1489423a0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->chain
    |     `-RecoveryExpr 0x148942380 <col:21> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x148942538 <line:11:5, col:28> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x148942478 <col:5, col:10> '<dependent type>' contains-errors lvalue ->error_depth
    | | `-RecoveryExpr 0x148942450 <col:5> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x148942430 <col:5> 'int *' lvalue ParmVar 0x148928b28 'ctx' 'int *'
    | `-BinaryOperator 0x148942518 <col:24, col:28> 'int' '-'
    |   |-ImplicitCastExpr 0x148942500 <col:24> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1489424c0 <col:24> 'int' lvalue Var 0x148928d60 'n' 'int'
    |   `-IntegerLiteral 0x1489424e0 <col:28> 'int' 1
    |-UnaryOperator 0x148942578 <line:12:5, col:6> 'int' postfix '--'
    | `-DeclRefExpr 0x148942558 <col:5> 'int' lvalue Var 0x148928d60 'n' 'int'
    |-IfStmt 0x1489430f0 <line:15:5, line:32:5> has_else
    | |-CallExpr 0x148942878 <line:15:9, col:38> '<dependent type>' contains-errors
    | | |-CXXDependentScopeMemberExpr 0x148942768 <col:9, col:14> '<dependent type>' contains-errors lvalue ->check_issued
    | | | `-RecoveryExpr 0x148942748 <col:9> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x1489427b0 <col:27> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x148942838 <col:32> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x148942858 <col:36> '<dependent type>' contains-errors lvalue
    | |-NullStmt 0x1489430e8 <line:16:9>
    | `-CompoundStmt 0x1489430c8 <line:17:10, line:32:5>
    |   |-IfStmt 0x148942a88 <line:18:9, line:21:9>
    |   | |-BinaryOperator 0x1489429d0 <line:18:13, col:33> '<dependent type>' contains-errors '&'
    |   | | |-CXXDependentScopeMemberExpr 0x148942930 <col:13, col:25> '<dependent type>' contains-errors lvalue ->flags
    |   | | | `-CXXDependentScopeMemberExpr 0x1489428e8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->param
    |   | | |   `-RecoveryExpr 0x1489428c8 <col:13> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x1489429b0 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x148942a70 <col:60, line:21:9>
    |   |   `-GotoStmt 0x148942a58 <line:20:13, col:18> 'check_cert' 0x148942a08
    |   `-IfStmt 0x148943098 <line:22:9, line:31:9> has_else
    |     |-BinaryOperator 0x148942b00 <line:22:13, col:18> 'int' '<='
    |     | |-ImplicitCastExpr 0x148942ae8 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x148942aa8 <col:13> 'int' lvalue Var 0x148928d60 'n' 'int'
    |     | `-IntegerLiteral 0x148942ac8 <col:18> 'int' 0
    |     |-CompoundStmt 0x148942e68 <col:21, line:27:9>
    |     | |-BinaryOperator 0x148942c08 <line:23:13, col:26> '<dependent type>' contains-errors '='
    |     | | |-CXXDependentScopeMemberExpr 0x148942b68 <col:13, col:18> '<dependent type>' contains-errors lvalue ->error
    |     | | | `-RecoveryExpr 0x148942b40 <col:13> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x148942b20 <col:13> 'int *' lvalue ParmVar 0x148928b28 'ctx' 'int *'
    |     | | `-RecoveryExpr 0x148942be8 <col:26> '<dependent type>' contains-errors lvalue
    |     | |-BinaryOperator 0x148942d10 <line:24:13, col:33> '<dependent type>' contains-errors '='
    |     | | |-CXXDependentScopeMemberExpr 0x148942c70 <col:13, col:18> '<dependent type>' contains-errors lvalue ->current_cert
    |     | | | `-RecoveryExpr 0x148942c48 <col:13> '<dependent type>' contains-errors lvalue
    |     | | |   `-DeclRefExpr 0x148942c28 <col:13> 'int *' lvalue ParmVar 0x148928b28 'ctx' 'int *'
    |     | | `-RecoveryExpr 0x148942cf0 <col:33> '<dependent type>' contains-errors lvalue
    |     | |-BinaryOperator 0x148942de0 <line:25:13, col:27> 'int' contains-errors '='
    |     | | |-DeclRefExpr 0x148942d30 <col:13> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |     | | `-CallExpr 0x148942db0 <col:18, col:27> '<dependent type>' contains-errors
    |     | |   |-DeclRefExpr 0x148942d50 <col:18> 'int (*)(int, int *)' lvalue Var 0x1489290a8 'cb' 'int (*)(int, int *)'
    |     | |   |-IntegerLiteral 0x148942d70 <col:21> 'int' 0
    |     | |   `-RecoveryExpr 0x148942d90 <col:24> '<dependent type>' contains-errors lvalue
    |     | `-GotoStmt 0x148942e50 <line:26:13, col:18> 'end' 0x148942e00
    |     `-CompoundStmt 0x148943078 <line:27:16, line:31:9>
    |       |-UnaryOperator 0x148942eb8 <line:28:13, col:14> 'int' postfix '--'
    |       | `-DeclRefExpr 0x148942e98 <col:13> 'int' lvalue Var 0x148928d60 'n' 'int'
    |       `-BinaryOperator 0x148942f80 <line:29:13, col:32> '<dependent type>' contains-errors '='
    |         |-CXXDependentScopeMemberExpr 0x148942f18 <col:13, col:18> '<dependent type>' contains-errors lvalue ->error_depth
    |         | `-RecoveryExpr 0x148942ef0 <col:13> '<dependent type>' contains-errors lvalue
    |         |   `-DeclRefExpr 0x148942ed0 <col:13> 'int *' lvalue ParmVar 0x148928b28 'ctx' 'int *'
    |         `-DeclRefExpr 0x148942f60 <col:32> 'int' lvalue Var 0x148928d60 'n' 'int'
    |-WhileStmt 0x148944858 <line:35:5, line:80:5>
    | |-BinaryOperator 0x148943178 <line:35:12, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x148943160 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x148943120 <col:12> 'int' lvalue Var 0x148928d60 'n' 'int'
    | | `-IntegerLiteral 0x148943140 <col:17> 'int' 0
    | `-CompoundStmt 0x148944808 <col:20, line:80:5>
    |   |-BinaryOperator 0x148943668 <line:36:9, col:28> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x148943600 <col:9, col:14> '<dependent type>' contains-errors lvalue ->error_depth
    |   | | `-RecoveryExpr 0x1489431b8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x148943198 <col:9> 'int *' lvalue ParmVar 0x148928b28 'ctx' 'int *'
    |   | `-DeclRefExpr 0x148943648 <col:28> 'int' lvalue Var 0x148928d60 'n' 'int'
    |   |-IfStmt 0x148944128 <line:39:9, line:59:9>
    |   | |-RecoveryExpr 0x148943738 <line:39:13, line:41:72> '_Bool' contains-errors
    |   | `-CompoundStmt 0x148944110 <col:75, line:59:9>
    |   |   `-IfStmt 0x1489440c0 <line:42:13, line:56:13> has_else
    |   |     |-RecoveryExpr 0x148943858 <line:42:17, col:49> '_Bool' contains-errors
    |   |     |-CompoundStmt 0x148943b40 <col:55, line:48:13>
    |   |     | |-BinaryOperator 0x148943a98 <line:45:17, col:35> 'int' contains-errors '='
    |   |     | | |-DeclRefExpr 0x148943998 <col:17> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   |     | | `-CallExpr 0x148943a68 <col:22, col:35> '<dependent type>' contains-errors
    |   |     | |   |-ParenExpr 0x148943a08 <col:22, col:26> 'int (int, int *)'
    |   |     | |   | `-UnaryOperator 0x1489439f0 <col:23, col:24> 'int (int, int *)' prefix '*' cannot overflow
    |   |     | |   |   `-ImplicitCastExpr 0x1489439d8 <col:24> 'int (*)(int, int *)' <LValueToRValue>
    |   |     | |   |     `-DeclRefExpr 0x1489439b8 <col:24> 'int (*)(int, int *)' lvalue Var 0x1489290a8 'cb' 'int (*)(int, int *)'
    |   |     | |   |-IntegerLiteral 0x148943a28 <col:29> 'int' 0
    |   |     | |   `-RecoveryExpr 0x148943a48 <col:32> '<dependent type>' contains-errors lvalue
    |   |     | `-IfStmt 0x148943b20 <line:46:17, line:47:26>
    |   |     |   |-UnaryOperator 0x148943af0 <line:46:21, col:22> 'int' prefix '!' cannot overflow
    |   |     |   | `-ImplicitCastExpr 0x148943ad8 <col:22> 'int' <LValueToRValue>
    |   |     |   |   `-DeclRefExpr 0x148943ab8 <col:22> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   |     |   `-GotoStmt 0x148943b08 <line:47:21, col:26> 'end' 0x148942e00
    |   |     `-IfStmt 0x1489440a0 <line:48:20, line:56:13>
    |   |       |-RecoveryExpr 0x148943c80 <line:48:24, col:49> '_Bool' contains-errors
    |   |       `-CompoundStmt 0x148944080 <col:52, line:56:13>
    |   |         |-BinaryOperator 0x148943ec0 <line:51:17, col:35> 'int' contains-errors '='
    |   |         | |-DeclRefExpr 0x148943dc0 <col:17> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   |         | `-CallExpr 0x148943e90 <col:22, col:35> '<dependent type>' contains-errors
    |   |         |   |-ParenExpr 0x148943e30 <col:22, col:26> 'int (int, int *)'
    |   |         |   | `-UnaryOperator 0x148943e18 <col:23, col:24> 'int (int, int *)' prefix '*' cannot overflow
    |   |         |   |   `-ImplicitCastExpr 0x148943e00 <col:24> 'int (*)(int, int *)' <LValueToRValue>
    |   |         |   |     `-DeclRefExpr 0x148943de0 <col:24> 'int (*)(int, int *)' lvalue Var 0x1489290a8 'cb' 'int (*)(int, int *)'
    |   |         |   |-IntegerLiteral 0x148943e50 <col:29> 'int' 0
    |   |         |   `-RecoveryExpr 0x148943e70 <col:32> '<dependent type>' contains-errors lvalue
    |   |         `-IfStmt 0x148944060 <line:52:17, line:55:17>
    |   |           |-UnaryOperator 0x148943f18 <line:52:21, col:22> 'int' prefix '!' cannot overflow
    |   |           | `-ImplicitCastExpr 0x148943f00 <col:22> 'int' <LValueToRValue>
    |   |           |   `-DeclRefExpr 0x148943ee0 <col:22> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   |           `-CompoundStmt 0x148944048 <col:26, line:55:17>
    |   |             `-GotoStmt 0x148944030 <line:54:21, col:26> 'end' 0x148942e00
    |   |-LabelStmt 0x1489442d0 <line:63:2, col:12> 'check_cert'
    |   | `-NullStmt 0x1489442c8 <col:12>
    |   |-IfStmt 0x148944358 <line:65:9, line:66:18>
    |   | |-UnaryOperator 0x148944328 <line:65:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x148944310 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1489442f0 <col:14> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   | `-GotoStmt 0x148944340 <line:66:13, col:18> 'end' 0x148942e00
    |   |-BinaryOperator 0x148944598 <line:71:9, col:27> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x148944498 <col:9> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   | `-CallExpr 0x148944568 <col:14, col:27> '<dependent type>' contains-errors
    |   |   |-ParenExpr 0x148944508 <col:14, col:18> 'int (int, int *)'
    |   |   | `-UnaryOperator 0x1489444f0 <col:15, col:16> 'int (int, int *)' prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x1489444d8 <col:16> 'int (*)(int, int *)' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1489444b8 <col:16> 'int (*)(int, int *)' lvalue Var 0x1489290a8 'cb' 'int (*)(int, int *)'
    |   |   |-IntegerLiteral 0x148944528 <col:21> 'int' 1
    |   |   `-RecoveryExpr 0x148944548 <col:24> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x148944630 <line:72:9, line:73:18>
    |   | |-UnaryOperator 0x148944600 <line:72:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x1489445d8 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1489445b8 <col:14> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    |   | `-GotoStmt 0x148944618 <line:73:13, col:18> 'end' 0x148942e00
    |   |-UnaryOperator 0x148944670 <line:75:9, col:10> 'int' postfix '--'
    |   | `-DeclRefExpr 0x148944650 <col:9> 'int' lvalue Var 0x148928d60 'n' 'int'
    |   `-IfStmt 0x1489447e8 <line:76:9, line:79:9>
    |     |-BinaryOperator 0x1489446e0 <line:76:13, col:18> 'int' '>='
    |     | |-ImplicitCastExpr 0x1489446c8 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x148944688 <col:13> 'int' lvalue Var 0x148928d60 'n' 'int'
    |     | `-IntegerLiteral 0x1489446a8 <col:18> 'int' 0
    |     `-CompoundStmt 0x1489447d8 <col:21, line:79:9>
    |-BinaryOperator 0x1489448b8 <line:81:5, col:10> 'int' '='
    | |-DeclRefExpr 0x148944878 <col:5> 'int' lvalue Var 0x148928cc0 'ok' 'int'
    | `-IntegerLiteral 0x148944898 <col:10> 'int' 1
    `-LabelStmt 0x148944920 <line:82:2, line:83:12> 'end'
      `-ReturnStmt 0x148944910 <col:5, col:12>
        `-ImplicitCastExpr 0x1489448f8 <col:12> 'int' <LValueToRValue>
          `-DeclRefExpr 0x1489448d8 <col:12> 'int' lvalue Var 0x148928cc0 'ok' 'int'
