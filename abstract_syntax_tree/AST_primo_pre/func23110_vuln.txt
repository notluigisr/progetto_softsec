`-FunctionDecl 0x127928708  line:1:12 invalid send_sub_rect_jpeg 'int (int *, int, int, int, int, int, int, int, int *, int)' static
  |-ParmVarDecl 0x127928128 <col:31, col:41> col:41 invalid vs 'int *'
  |-ParmVarDecl 0x1279281a8 <col:45, col:49> col:49 used x 'int'
  |-ParmVarDecl 0x127928228 <col:52, col:56> col:56 used y 'int'
  |-ParmVarDecl 0x1279282a8 <col:59, col:63> col:63 used w 'int'
  |-ParmVarDecl 0x127928328 <col:66, col:70> col:70 used h 'int'
  |-ParmVarDecl 0x1279283a8 <line:2:31, col:35> col:35 used bg 'int'
  |-ParmVarDecl 0x127928428 <col:39, col:43> col:43 used fg 'int'
  |-ParmVarDecl 0x1279284a8 <col:47, col:51> col:51 used colors 'int'
  |-ParmVarDecl 0x127928528 <line:3:31, col:43> col:43 invalid palette 'int *'
  |-ParmVarDecl 0x1279285a8 <col:52, col:57> col:57 invalid force 'int'
  `-CompoundStmt 0x127943b78 <line:4:1, line:34:1>
    |-DeclStmt 0x127941880 <line:5:5, col:12>
    | `-VarDecl 0x127941818 <col:5, col:9> col:9 used ret 'int'
    |-IfStmt 0x127943b00 <line:7:5, line:32:5> has_else
    | |-BinaryOperator 0x1279418f0 <line:7:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1279418d8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x127941898 <col:9> 'int' lvalue ParmVar 0x1279284a8 'colors' 'int'
    | | `-IntegerLiteral 0x1279418b8 <col:19> 'int' 0
    | |-CompoundStmt 0x127942268 <col:22, line:16:5>
    | | `-IfStmt 0x127942238 <line:8:9, line:15:9> has_else
    | |   |-RecoveryExpr 0x127941c08 <line:8:13, line:9:58> '_Bool' contains-errors
    | |   |-CompoundStmt 0x127941fd8 <col:61, line:13:9>
    | |   | |-DeclStmt 0x127941d70 <line:10:13, col:69>
    | |   | | `-VarDecl 0x127941c40 <col:13, col:17> col:17 used quality 'int'
    | |   | `-BinaryOperator 0x127941fb8 <line:12:13, col:57> 'int' contains-errors '='
    | |   |   |-DeclRefExpr 0x127941d88 <col:13> 'int' lvalue Var 0x127941818 'ret' 'int'
    | |   |   `-CallExpr 0x127941f68 <col:19, col:57> '<dependent type>' contains-errors
    | |   |     |-DeclRefExpr 0x127941e88 <col:19> 'int ()' Function 0x127941dd0 'send_jpeg_rect' 'int ()'
    | |   |     |-RecoveryExpr 0x127941ea8 <col:34> '<dependent type>' contains-errors lvalue
    | |   |     |-DeclRefExpr 0x127941ec8 <col:38> 'int' lvalue ParmVar 0x1279281a8 'x' 'int'
    | |   |     |-DeclRefExpr 0x127941ee8 <col:41> 'int' lvalue ParmVar 0x127928228 'y' 'int'
    | |   |     |-DeclRefExpr 0x127941f08 <col:44> 'int' lvalue ParmVar 0x1279282a8 'w' 'int'
    | |   |     |-DeclRefExpr 0x127941f28 <col:47> 'int' lvalue ParmVar 0x127928328 'h' 'int'
    | |   |     `-DeclRefExpr 0x127941f48 <col:50> 'int' lvalue Var 0x127941c40 'quality' 'int'
    | |   `-CompoundStmt 0x127942220 <line:13:16, line:15:9>
    | |     `-BinaryOperator 0x127942200 <line:14:13, col:54> 'int' contains-errors '='
    | |       |-DeclRefExpr 0x127941ff8 <col:13> 'int' lvalue Var 0x127941818 'ret' 'int'
    | |       `-CallExpr 0x1279421b8 <col:19, col:54> '<dependent type>' contains-errors
    | |         |-DeclRefExpr 0x1279420f8 <col:19> 'int ()' Function 0x127942040 'send_full_color_rect' 'int ()'
    | |         |-RecoveryExpr 0x127942118 <col:40> '<dependent type>' contains-errors lvalue
    | |         |-DeclRefExpr 0x127942138 <col:44> 'int' lvalue ParmVar 0x1279281a8 'x' 'int'
    | |         |-DeclRefExpr 0x127942158 <col:47> 'int' lvalue ParmVar 0x127928228 'y' 'int'
    | |         |-DeclRefExpr 0x127942178 <col:50> 'int' lvalue ParmVar 0x1279282a8 'w' 'int'
    | |         `-DeclRefExpr 0x127942198 <col:53> 'int' lvalue ParmVar 0x127928328 'h' 'int'
    | `-IfStmt 0x127943ad0 <line:16:12, line:32:5> has_else
    |   |-BinaryOperator 0x1279422d8 <line:16:16, col:26> 'int' '=='
    |   | |-ImplicitCastExpr 0x1279422c0 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x127942280 <col:16> 'int' lvalue ParmVar 0x1279284a8 'colors' 'int'
    |   | `-IntegerLiteral 0x1279422a0 <col:26> 'int' 1
    |   |-CompoundStmt 0x127942480 <col:29, line:18:5>
    |   | `-BinaryOperator 0x127942460 <line:17:9, col:33> 'int' contains-errors '='
    |   |   |-DeclRefExpr 0x1279422f8 <col:9> 'int' lvalue Var 0x127941818 'ret' 'int'
    |   |   `-CallExpr 0x127942438 <col:15, col:33> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x1279423f8 <col:15> 'int ()' Function 0x127942340 'send_solid_rect' 'int ()'
    |   |     `-RecoveryExpr 0x127942418 <col:31> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x127943aa0 <line:18:12, line:32:5> has_else
    |     |-BinaryOperator 0x1279424f0 <line:18:16, col:26> 'int' '=='
    |     | |-ImplicitCastExpr 0x1279424d8 <col:16> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x127942498 <col:16> 'int' lvalue ParmVar 0x1279284a8 'colors' 'int'
    |     | `-IntegerLiteral 0x1279424b8 <col:26> 'int' 2
    |     |-CompoundStmt 0x127942788 <col:29, line:20:5>
    |     | `-BinaryOperator 0x127942768 <line:19:9, col:52> 'int' contains-errors '='
    |     |   |-DeclRefExpr 0x127942510 <col:9> 'int' lvalue Var 0x127941818 'ret' 'int'
    |     |   `-CallExpr 0x127942710 <col:15, col:52> '<dependent type>' contains-errors
    |     |     |-DeclRefExpr 0x127942610 <col:15> 'int ()' Function 0x127942558 'send_mono_rect' 'int ()'
    |     |     |-RecoveryExpr 0x127942630 <col:30> '<dependent type>' contains-errors lvalue
    |     |     |-DeclRefExpr 0x127942650 <col:34> 'int' lvalue ParmVar 0x1279281a8 'x' 'int'
    |     |     |-DeclRefExpr 0x127942670 <col:37> 'int' lvalue ParmVar 0x127928228 'y' 'int'
    |     |     |-DeclRefExpr 0x127942690 <col:40> 'int' lvalue ParmVar 0x1279282a8 'w' 'int'
    |     |     |-DeclRefExpr 0x1279426b0 <col:43> 'int' lvalue ParmVar 0x127928328 'h' 'int'
    |     |     |-DeclRefExpr 0x1279426d0 <col:46> 'int' lvalue ParmVar 0x1279283a8 'bg' 'int'
    |     |     `-DeclRefExpr 0x1279426f0 <col:50> 'int' lvalue ParmVar 0x127928428 'fg' 'int'
    |     `-IfStmt 0x127943a70 <line:20:12, line:32:5> has_else
    |       |-BinaryOperator 0x127943200 <line:20:16, col:26> 'int' '<='
    |       | |-ImplicitCastExpr 0x1279427e0 <col:16> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x1279427a0 <col:16> 'int' lvalue ParmVar 0x1279284a8 'colors' 'int'
    |       | `-IntegerLiteral 0x1279427c0 <col:26> 'int' 256
    |       |-CompoundStmt 0x1279439e0 <col:31, line:30:5>
    |       | `-IfStmt 0x1279439b0 <line:21:9, line:29:9> has_else
    |       |   |-RecoveryExpr 0x127943438 <line:21:13, line:23:58> '_Bool' contains-errors
    |       |   |-CompoundStmt 0x127943728 <col:61, line:27:9>
    |       |   | |-DeclStmt 0x1279435a0 <line:24:13, col:69>
    |       |   | | `-VarDecl 0x127943470 <col:13, col:17> col:17 used quality 'int'
    |       |   | `-BinaryOperator 0x127943708 <line:26:13, col:57> 'int' contains-errors '='
    |       |   |   |-DeclRefExpr 0x1279435b8 <col:13> 'int' lvalue Var 0x127941818 'ret' 'int'
    |       |   |   `-CallExpr 0x1279436b8 <col:19, col:57> '<dependent type>' contains-errors
    |       |   |     |-DeclRefExpr 0x1279435d8 <col:19> 'int ()' Function 0x127941dd0 'send_jpeg_rect' 'int ()'
    |       |   |     |-RecoveryExpr 0x1279435f8 <col:34> '<dependent type>' contains-errors lvalue
    |       |   |     |-DeclRefExpr 0x127943618 <col:38> 'int' lvalue ParmVar 0x1279281a8 'x' 'int'
    |       |   |     |-DeclRefExpr 0x127943638 <col:41> 'int' lvalue ParmVar 0x127928228 'y' 'int'
    |       |   |     |-DeclRefExpr 0x127943658 <col:44> 'int' lvalue ParmVar 0x1279282a8 'w' 'int'
    |       |   |     |-DeclRefExpr 0x127943678 <col:47> 'int' lvalue ParmVar 0x127928328 'h' 'int'
    |       |   |     `-DeclRefExpr 0x127943698 <col:50> 'int' lvalue Var 0x127943470 'quality' 'int'
    |       |   `-CompoundStmt 0x127943998 <line:27:16, line:29:9>
    |       |     `-BinaryOperator 0x127943978 <line:28:13, col:60> 'int' contains-errors '='
    |       |       |-DeclRefExpr 0x127943748 <col:13> 'int' lvalue Var 0x127941818 'ret' 'int'
    |       |       `-CallExpr 0x127943928 <col:19, col:60> '<dependent type>' contains-errors
    |       |         |-DeclRefExpr 0x127943848 <col:19> 'int ()' Function 0x127943790 'send_palette_rect' 'int ()'
    |       |         |-RecoveryExpr 0x127943868 <col:37> '<dependent type>' contains-errors lvalue
    |       |         |-DeclRefExpr 0x127943888 <col:41> 'int' lvalue ParmVar 0x1279281a8 'x' 'int'
    |       |         |-DeclRefExpr 0x1279438a8 <col:44> 'int' lvalue ParmVar 0x127928228 'y' 'int'
    |       |         |-DeclRefExpr 0x1279438c8 <col:47> 'int' lvalue ParmVar 0x1279282a8 'w' 'int'
    |       |         |-DeclRefExpr 0x1279438e8 <col:50> 'int' lvalue ParmVar 0x127928328 'h' 'int'
    |       |         `-RecoveryExpr 0x127943908 <col:53> '<dependent type>' contains-errors lvalue
    |       `-CompoundStmt 0x127943a58 <line:30:12, line:32:5>
    |         `-BinaryOperator 0x127943a38 <line:31:9, col:15> 'int' '='
    |           |-DeclRefExpr 0x1279439f8 <col:9> 'int' lvalue Var 0x127941818 'ret' 'int'
    |           `-IntegerLiteral 0x127943a18 <col:15> 'int' 0
    `-ReturnStmt 0x127943b68 <line:33:5, col:12>
      `-ImplicitCastExpr 0x127943b50 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x127943b30 <col:12> 'int' lvalue Var 0x127941818 'ret' 'int'
