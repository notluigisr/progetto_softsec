`-FunctionDecl 0x127928558  line:1:1 invalid calc_enc_length 'int (int, int, int, int *, int, int, int)'
  |-ParmVarDecl 0x1279280f0 <col:18, col:35> col:35 invalid session 'int'
  |-ParmVarDecl 0x127928170 <col:44, col:48> col:48 used data_size 'int'
  |-ParmVarDecl 0x1279281f0 <line:2:18, col:22> col:22 used hash_size 'int'
  |-ParmVarDecl 0x1279282a8 <col:33, col:43> col:43 invalid pad 'int *'
  |-ParmVarDecl 0x127928328 <col:48, col:52> col:52 used random_pad 'int'
  |-ParmVarDecl 0x1279283a8 <line:3:18, col:32> col:32 invalid block_algo 'int'
  |-ParmVarDecl 0x127928428 <col:44, col:53> col:53 invalid blocksize 'int'
  `-CompoundStmt 0x1279432e8 <line:4:1, line:54:1>
    |-DeclStmt 0x127928750 <line:6:3, col:18>
    | |-VarDecl 0x127928650 <col:3, col:7> col:7 used length 'int'
    | `-VarDecl 0x1279286d0 <col:3, col:15> col:15 used ret 'int'
    |-BinaryOperator 0x1279287d8 <line:8:3, col:10> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x1279287a0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x127928788 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x127928768 <col:4> '<dependent type>' contains-errors lvalue
    | `-IntegerLiteral 0x1279287b8 <col:10> 'int' 0
    |-SwitchStmt 0x127941838 <line:10:3, line:51:5>
    | |-ImplicitCastExpr 0x127941820 <line:10:11> '<dependent type>' contains-errors <LValueToRValue>
    | | `-RecoveryExpr 0x127941800 <col:11> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x127943240 <line:11:5, line:51:5>
    |   |-BinaryOperator 0x127941928 <line:13:7, col:28> 'int' '='
    |   | |-DeclRefExpr 0x127941878 <col:7> 'int' lvalue Var 0x127928650 'length' 'int'
    |   | `-BinaryOperator 0x127941908 <col:16, col:28> 'int' '+'
    |   |   |-ImplicitCastExpr 0x1279418d8 <col:16> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x127941898 <col:16> 'int' lvalue ParmVar 0x127928170 'data_size' 'int'
    |   |   `-ImplicitCastExpr 0x1279418f0 <col:28> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1279418b8 <col:28> 'int' lvalue ParmVar 0x1279281f0 'hash_size' 'int'
    |   |-BreakStmt 0x127941948 <line:15:7>
    |   |-BinaryOperator 0x127941c50 <line:17:7, col:51> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x127941968 <col:7> 'int' lvalue Var 0x1279286d0 'ret' 'int'
    |   | `-CallExpr 0x127941c18 <col:13, col:51> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x127941ae0 <col:13> 'int ()' Function 0x127941a28 '_gnutls_rnd' 'int ()'
    |   |   |-RecoveryExpr 0x127941bc0 <col:26> '<dependent type>' contains-errors lvalue
    |   |   |-UnaryOperator 0x127941c00 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   | `-RecoveryExpr 0x127941be0 <col:45> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x127941b48 <col:50> 'int' 1
    |   |-IfStmt 0x127941ec0 <line:18:7, line:22:9>
    |   | |-BinaryOperator 0x127941cc8 <line:18:11, col:17> 'int' '<'
    |   | | |-ImplicitCastExpr 0x127941cb0 <col:11> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x127941c70 <col:11> 'int' lvalue Var 0x1279286d0 'ret' 'int'
    |   | | `-IntegerLiteral 0x127941c90 <col:17> 'int' 0
    |   | `-CompoundStmt 0x127941ea0 <line:19:9, line:22:9>
    |   |   |-CallExpr 0x127941e38 <line:20:11, col:26> 'int'
    |   |   | `-ImplicitCastExpr 0x127941e20 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x127941dc8 <col:11> 'int ()' Function 0x127941d10 'gnutls_assert' 'int ()'
    |   |   `-ReturnStmt 0x127941e90 <line:21:11, col:18>
    |   |     `-ImplicitCastExpr 0x127941e78 <col:18> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x127941e58 <col:18> 'int' lvalue Var 0x1279286d0 'ret' 'int'
    |   |-IfStmt 0x127942268 <line:25:7, line:36:9> has_else
    |   | |-BinaryOperator 0x1279420d8 <line:25:11, line:26:25> 'int' contains-errors '||'
    |   | | |-BinaryOperator 0x127942080 <line:25:11, col:51> 'int' contains-errors '=='
    |   | | | |-CXXDependentScopeMemberExpr 0x127941f48 <col:11, col:40> '<dependent type>' contains-errors lvalue .version
    |   | | | | `-CXXDependentScopeMemberExpr 0x127941f00 <col:11, col:20> '<dependent type>' contains-errors lvalue ->security_parameters
    |   | | | |   `-RecoveryExpr 0x127941ee0 <col:11> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x127942060 <col:51> '<dependent type>' contains-errors lvalue
    |   | | `-BinaryOperator 0x1279420b8 <line:26:11, col:25> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x1279420a0 <col:11> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x127941fc8 <col:11> 'int' lvalue ParmVar 0x127928328 'random_pad' 'int'
    |   | |   `-IntegerLiteral 0x127941fe8 <col:25> 'int' 0
    |   | |-CompoundStmt 0x127942118 <line:27:9, line:29:9>
    |   | `-CompoundStmt 0x127942258 <line:31:9, line:36:9>
    |   |-BinaryOperator 0x127942348 <line:38:7, col:28> 'int' '='
    |   | |-DeclRefExpr 0x127942298 <col:7> 'int' lvalue Var 0x127928650 'length' 'int'
    |   | `-BinaryOperator 0x127942328 <col:16, col:28> 'int' '+'
    |   |   |-ImplicitCastExpr 0x1279422f8 <col:16> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x1279422b8 <col:16> 'int' lvalue ParmVar 0x127928170 'data_size' 'int'
    |   |   `-ImplicitCastExpr 0x127942310 <col:28> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1279422d8 <col:28> 'int' lvalue ParmVar 0x1279281f0 'hash_size' 'int'
    |   |-CompoundAssignOperator 0x127942518 <line:42:7, col:18> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   | |-DeclRefExpr 0x1279424a8 <col:7> 'int' lvalue Var 0x127928650 'length' 'int'
    |   | `-UnaryOperator 0x127942500 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   |   `-ImplicitCastExpr 0x1279424e8 <col:18> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x1279424c8 <col:18> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x127942790 <line:43:7, line:45:19>
    |   | |-CallExpr 0x1279426f8 <line:43:11, line:44:48> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x127942628 <line:43:11> 'int ()' Function 0x127942570 '_gnutls_version_has_explicit_iv' 'int ()'
    |   | | `-CXXDependentScopeMemberExpr 0x1279426b0 <line:44:12, col:41> '<dependent type>' contains-errors lvalue .version
    |   | |   `-CXXDependentScopeMemberExpr 0x127942668 <col:12, col:21> '<dependent type>' contains-errors lvalue ->security_parameters
    |   | |     `-RecoveryExpr 0x127942648 <col:12> '<dependent type>' contains-errors lvalue
    |   | `-CompoundAssignOperator 0x127942760 <line:45:9, col:19> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |   |-DeclRefExpr 0x127942720 <col:9> 'int' lvalue Var 0x127928650 'length' 'int'
    |   |   `-RecoveryExpr 0x127942740 <col:19> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x1279427b0 <line:47:7>
    |   `-DefaultStmt 0x127943220 <line:48:5, line:49:22>
    |     `-CallExpr 0x127943200 <col:7, col:22> 'int'
    |       `-ImplicitCastExpr 0x1279427d8 <col:7> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x1279427b8 <col:7> 'int ()' Function 0x127941d10 'gnutls_assert' 'int ()'
    `-ReturnStmt 0x1279432d8 <line:53:3, col:10>
      `-ImplicitCastExpr 0x1279432c0 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1279432a0 <col:10> 'int' lvalue Var 0x127928650 'length' 'int'
