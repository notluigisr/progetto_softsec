`-FunctionDecl 0x12e00de38  line:1:1 TEST 'int (int, int)'
  |-ParmVarDecl 0x12e00dd58 <col:6> col:6 used GatherNdOpTest 'int'
  |-ParmVarDecl 0x12e00dcd8 <col:22> col:22 Uint8Int64 'int'
  `-CompoundStmt 0x12e027320 <col:34, line:10:1>
    |-ImplicitCastExpr 0x12e00df70 <line:2:3> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x12e00df50 <col:3> 'int' lvalue ParmVar 0x12e00dd58 'GatherNdOpTest' 'int'
    |-BinaryOperator 0x12e026c68 <line:3:3, line:5:41> 'int' contains-errors '>'
    | |-BinaryOperator 0x12e026c48 <line:3:3, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x12e026710 <col:3, col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12e00e0c0 <col:3> 'int ()' Function 0x12e00dfe8 'm' 'int ()'
    | | `-RecoveryExpr 0x12e026c28 <col:14> '<dependent type>' contains-errors lvalue
    | `-StmtExpr 0x12e026be8 <col:22, line:5:41> 'int'
    |   `-CompoundStmt 0x12e026bd0 <line:3:23, line:5:40>
    |     `-BinaryOperator 0x12e026bb0 <line:3:24, line:5:39> 'int' ','
    |       |-BinaryOperator 0x12e026b70 <line:3:24, line:5:36> 'int' ','
    |       | |-BinaryOperator 0x12e026b30 <line:3:24, line:5:33> 'int' ','
    |       | | |-BinaryOperator 0x12e026af0 <line:3:24, line:5:30> 'int' ','
    |       | | | |-BinaryOperator 0x12e026ab0 <line:3:24, line:5:27> 'int' ','
    |       | | | | |-BinaryOperator 0x12e026a70 <line:3:24, line:5:24> 'int' ','
    |       | | | | | |-BinaryOperator 0x12e026a30 <line:3:24, line:4:39> 'int' ','
    |       | | | | | | |-BinaryOperator 0x12e0269f0 <line:3:24, line:4:36> 'int' ','
    |       | | | | | | | |-BinaryOperator 0x12e0269b0 <line:3:24, line:4:33> 'int' ','
    |       | | | | | | | | |-BinaryOperator 0x12e026970 <line:3:24, line:4:30> 'int' ','
    |       | | | | | | | | | |-BinaryOperator 0x12e026930 <line:3:24, line:4:27> 'int' ','
    |       | | | | | | | | | | |-BinaryOperator 0x12e0268f0 <line:3:24, line:4:24> 'int' ','
    |       | | | | | | | | | | | |-BinaryOperator 0x12e0268b0 <line:3:24, col:39> 'int' ','
    |       | | | | | | | | | | | | |-BinaryOperator 0x12e026870 <col:24, col:36> 'int' ','
    |       | | | | | | | | | | | | | |-BinaryOperator 0x12e026830 <col:24, col:33> 'int' ','
    |       | | | | | | | | | | | | | | |-BinaryOperator 0x12e0267f0 <col:24, col:30> 'int' ','
    |       | | | | | | | | | | | | | | | |-BinaryOperator 0x12e0267b0 <col:24, col:27> 'int' ','
    |       | | | | | | | | | | | | | | | | |-IntegerLiteral 0x12e026770 <col:24> 'int' 1
    |       | | | | | | | | | | | | | | | | `-IntegerLiteral 0x12e026790 <col:27> 'int' 1
    |       | | | | | | | | | | | | | | | `-IntegerLiteral 0x12e0267d0 <col:30> 'int' 1
    |       | | | | | | | | | | | | | | `-IntegerLiteral 0x12e026810 <col:33> 'int' 2
    |       | | | | | | | | | | | | | `-IntegerLiteral 0x12e026850 <col:36> 'int' 2
    |       | | | | | | | | | | | | `-IntegerLiteral 0x12e026890 <col:39> 'int' 2
    |       | | | | | | | | | | | `-IntegerLiteral 0x12e0268d0 <line:4:24> 'int' 3
    |       | | | | | | | | | | `-IntegerLiteral 0x12e026910 <col:27> 'int' 3
    |       | | | | | | | | | `-IntegerLiteral 0x12e026950 <col:30> 'int' 3
    |       | | | | | | | | `-IntegerLiteral 0x12e026990 <col:33> 'int' 4
    |       | | | | | | | `-IntegerLiteral 0x12e0269d0 <col:36> 'int' 4
    |       | | | | | | `-IntegerLiteral 0x12e026a10 <col:39> 'int' 4
    |       | | | | | `-IntegerLiteral 0x12e026a50 <line:5:24> 'int' 5
    |       | | | | `-IntegerLiteral 0x12e026a90 <col:27> 'int' 5
    |       | | | `-IntegerLiteral 0x12e026ad0 <col:30> 'int' 5
    |       | | `-IntegerLiteral 0x12e026b10 <col:33> 'int' 6
    |       | `-IntegerLiteral 0x12e026b50 <col:36> 'int' 6
    |       `-IntegerLiteral 0x12e026b90 <col:39> 'int' 6
    |-BinaryOperator 0x12e026e80 <line:6:3, col:39> 'int' contains-errors '>'
    | |-BinaryOperator 0x12e026e60 <col:3, col:18> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x12e026ca8 <col:3, col:5> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12e026c88 <col:3> 'int ()' Function 0x12e00dfe8 'm' 'int ()'
    | | `-RecoveryExpr 0x12e026e40 <col:18> '<dependent type>' contains-errors lvalue
    | `-StmtExpr 0x12e026e00 <col:26, col:39> 'int'
    |   `-CompoundStmt 0x12e026de8 <col:27, col:38>
    |     `-BinaryOperator 0x12e026dc8 <col:28, col:37> 'int' ','
    |       |-BinaryOperator 0x12e026d88 <col:28, col:34> 'int' ','
    |       | |-BinaryOperator 0x12e026d48 <col:28, col:31> 'int' ','
    |       | | |-IntegerLiteral 0x12e026d08 <col:28> 'int' 0
    |       | | `-IntegerLiteral 0x12e026d28 <col:31> 'int' 1
    |       | `-IntegerLiteral 0x12e026d68 <col:34> 'int' 1
    |       `-IntegerLiteral 0x12e026da8 <col:37> 'int' 0
    `-CallExpr 0x12e027070 <line:7:3, col:34> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12e026f80 <col:3> 'int ()' Function 0x12e026ec8 'ASSERT_EQ' 'int ()'
      |-CallExpr 0x12e026fe8 <col:13, col:22> '<dependent type>' contains-errors
      | `-RecoveryExpr 0x12e026fc0 <col:13, col:15> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x12e026fa0 <col:13> 'int ()' Function 0x12e00dfe8 'm' 'int ()'
      `-RecoveryExpr 0x12e027050 <col:25> '<dependent type>' contains-errors lvalue
