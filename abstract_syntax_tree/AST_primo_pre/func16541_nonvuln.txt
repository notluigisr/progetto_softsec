`-FunctionDecl 0x14800df18  line:1:12 invalid check_crl_time 'int (int *, int *, int)' static
  |-ParmVarDecl 0x14800dd28 <col:27, col:43> col:43 referenced invalid ctx 'int *'
  |-ParmVarDecl 0x14800dda8 <col:48, col:58> col:58 invalid crl 'int *'
  |-ParmVarDecl 0x14800de28 <col:63, col:67> col:67 used notify 'int'
  `-CompoundStmt 0x1498099c8 <line:2:1, line:53:1>
    |-DeclStmt 0x14800e070 <line:4:5, col:10>
    | `-VarDecl 0x14800e008 <col:5, col:9> col:9 used i 'int'
    |-IfStmt 0x14800e190 <line:5:5, line:6:28>
    | |-ImplicitCastExpr 0x14800e0a8 <line:5:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14800e088 <col:9> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    | `-BinaryOperator 0x14800e170 <line:6:9, col:28> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x14800e108 <col:9, col:14> '<dependent type>' contains-errors lvalue ->current_crl
    |   | `-RecoveryExpr 0x14800e0e0 <col:9> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x14800e0c0 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |   `-RecoveryExpr 0x14800e150 <col:28> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x150122f80 <line:12:5, col:58> 'int' contains-errors '='
    | |-DeclRefExpr 0x14800e3b8 <col:5> 'int' lvalue Var 0x14800e008 'i' 'int'
    | `-CallExpr 0x150122f50 <col:9, col:58> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x150122d60 <col:9> 'int ()' Function 0x150122ca8 'X509_cmp_time' 'int ()'
    |   |-CallExpr 0x150122ea0 <col:23, col:50> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x150122e60 <col:23> 'int ()' Function 0x150122da8 'X509_CRL_get_lastUpdate' 'int ()'
    |   | `-RecoveryExpr 0x150122e80 <col:47> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x150122f30 <col:53> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x150123328 <line:13:5, line:19:5>
    | |-BinaryOperator 0x150122ff8 <line:13:9, col:14> 'int' '=='
    | | |-ImplicitCastExpr 0x150122fe0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x150122fa0 <col:9> 'int' lvalue Var 0x14800e008 'i' 'int'
    | | `-IntegerLiteral 0x150122fc0 <col:14> 'int' 0
    | `-CompoundStmt 0x150123300 <col:17, line:19:5>
    |   |-IfStmt 0x150123098 <line:14:9, line:15:20>
    |   | |-UnaryOperator 0x150123050 <line:14:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x150123038 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x150123018 <col:14> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    |   | `-ReturnStmt 0x150123088 <line:15:13, col:20>
    |   |   `-IntegerLiteral 0x150123068 <col:20> 'int' 0
    |   |-BinaryOperator 0x1501231a0 <line:16:9, col:22> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x150123100 <col:9, col:14> '<dependent type>' contains-errors lvalue ->error
    |   | | `-RecoveryExpr 0x1501230d8 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x1501230b8 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |   | `-RecoveryExpr 0x150123180 <col:22> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x1501232e0 <line:17:9, line:18:20>
    |     |-UnaryOperator 0x150123298 <line:17:13, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x150123268 <col:14, col:35> '<dependent type>' contains-errors
    |     |   |-CXXDependentScopeMemberExpr 0x1501231e0 <col:14, col:19> '<dependent type>' contains-errors lvalue ->verify_cb
    |     |   | `-RecoveryExpr 0x1501231c0 <col:14> '<dependent type>' contains-errors lvalue
    |     |   |-IntegerLiteral 0x150123228 <col:29> 'int' 0
    |     |   `-RecoveryExpr 0x150123248 <col:32> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x1501232d0 <line:18:13, col:20>
    |       `-IntegerLiteral 0x1501232b0 <col:20> 'int' 0
    |-IfStmt 0x1501236d0 <line:21:5, line:27:5>
    | |-BinaryOperator 0x1501233a0 <line:21:9, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x150123388 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x150123348 <col:9> 'int' lvalue Var 0x14800e008 'i' 'int'
    | | `-IntegerLiteral 0x150123368 <col:13> 'int' 0
    | `-CompoundStmt 0x1501236a8 <col:16, line:27:5>
    |   |-IfStmt 0x150123440 <line:22:9, line:23:20>
    |   | |-UnaryOperator 0x1501233f8 <line:22:13, col:14> 'int' prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x1501233e0 <col:14> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1501233c0 <col:14> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    |   | `-ReturnStmt 0x150123430 <line:23:13, col:20>
    |   |   `-IntegerLiteral 0x150123410 <col:20> 'int' 0
    |   |-BinaryOperator 0x150123548 <line:24:9, col:22> '<dependent type>' contains-errors '='
    |   | |-CXXDependentScopeMemberExpr 0x1501234a8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->error
    |   | | `-RecoveryExpr 0x150123480 <col:9> '<dependent type>' contains-errors lvalue
    |   | |   `-DeclRefExpr 0x150123460 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |   | `-RecoveryExpr 0x150123528 <col:22> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x150123688 <line:25:9, line:26:20>
    |     |-UnaryOperator 0x150123640 <line:25:13, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow
    |     | `-CallExpr 0x150123610 <col:14, col:35> '<dependent type>' contains-errors
    |     |   |-CXXDependentScopeMemberExpr 0x150123588 <col:14, col:19> '<dependent type>' contains-errors lvalue ->verify_cb
    |     |   | `-RecoveryExpr 0x150123568 <col:14> '<dependent type>' contains-errors lvalue
    |     |   |-IntegerLiteral 0x1501235d0 <col:29> 'int' 0
    |     |   `-RecoveryExpr 0x1501235f0 <col:32> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x150123678 <line:26:13, col:20>
    |       `-IntegerLiteral 0x150123658 <col:20> 'int' 0
    |-IfStmt 0x149809818 <line:29:5, line:47:5>
    | |-CallExpr 0x150123810 <line:29:9, col:36> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x1501237d0 <col:9> 'int ()' Function 0x150123718 'X509_CRL_get_nextUpdate' 'int ()'
    | | `-RecoveryExpr 0x1501237f0 <col:33> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1498097f0 <col:39, line:47:5>
    |   |-BinaryOperator 0x150123998 <line:30:9, col:62> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x150123838 <col:9> 'int' lvalue Var 0x14800e008 'i' 'int'
    |   | `-CallExpr 0x150123968 <col:13, col:62> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x150123858 <col:13> 'int ()' Function 0x150122ca8 'X509_cmp_time' 'int ()'
    |   |   |-CallExpr 0x1501238b8 <col:27, col:54> '<dependent type>' contains-errors
    |   |   | |-DeclRefExpr 0x150123878 <col:27> 'int ()' Function 0x150123718 'X509_CRL_get_nextUpdate' 'int ()'
    |   |   | `-RecoveryExpr 0x150123898 <col:51> '<dependent type>' contains-errors lvalue
    |   |   `-RecoveryExpr 0x150123948 <col:57> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x149809348 <line:32:9, line:38:9>
    |   | |-BinaryOperator 0x150123a10 <line:32:13, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1501239f8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1501239b8 <col:13> 'int' lvalue Var 0x14800e008 'i' 'int'
    |   | | `-IntegerLiteral 0x1501239d8 <col:18> 'int' 0
    |   | `-CompoundStmt 0x149809320 <col:21, line:38:9>
    |   |   |-IfStmt 0x150123ab0 <line:33:13, line:34:24>
    |   |   | |-UnaryOperator 0x150123a68 <line:33:17, col:18> 'int' prefix '!' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x150123a50 <col:18> 'int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x150123a30 <col:18> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    |   |   | `-ReturnStmt 0x150123aa0 <line:34:17, col:24>
    |   |   |   `-IntegerLiteral 0x150123a80 <col:24> 'int' 0
    |   |   |-BinaryOperator 0x150123bb8 <line:35:13, col:26> '<dependent type>' contains-errors '='
    |   |   | |-CXXDependentScopeMemberExpr 0x150123b18 <col:13, col:18> '<dependent type>' contains-errors lvalue ->error
    |   |   | | `-RecoveryExpr 0x150123af0 <col:13> '<dependent type>' contains-errors lvalue
    |   |   | |   `-DeclRefExpr 0x150123ad0 <col:13> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |   |   | `-RecoveryExpr 0x150123b98 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-IfStmt 0x149809300 <line:36:13, line:37:24>
    |   |     |-UnaryOperator 0x1498092b8 <line:36:17, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |     | `-CallExpr 0x149809288 <col:18, col:39> '<dependent type>' contains-errors
    |   |     |   |-CXXDependentScopeMemberExpr 0x149809200 <col:18, col:23> '<dependent type>' contains-errors lvalue ->verify_cb
    |   |     |   | `-RecoveryExpr 0x150123bd8 <col:18> '<dependent type>' contains-errors lvalue
    |   |     |   |-IntegerLiteral 0x149809248 <col:33> 'int' 0
    |   |     |   `-RecoveryExpr 0x149809268 <col:36> '<dependent type>' contains-errors lvalue
    |   |     `-ReturnStmt 0x1498092f0 <line:37:17, col:24>
    |   |       `-IntegerLiteral 0x1498092d0 <col:24> 'int' 0
    |   `-IfStmt 0x1498097d0 <line:40:9, line:46:9>
    |     |-RecoveryExpr 0x1498094a0 <line:40:13, col:71> '_Bool' contains-errors
    |     `-CompoundStmt 0x1498097a8 <col:74, line:46:9>
    |       |-IfStmt 0x149809540 <line:41:13, line:42:24>
    |       | |-UnaryOperator 0x1498094f8 <line:41:17, col:18> 'int' prefix '!' cannot overflow
    |       | | `-ImplicitCastExpr 0x1498094e0 <col:18> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1498094c0 <col:18> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    |       | `-ReturnStmt 0x149809530 <line:42:17, col:24>
    |       |   `-IntegerLiteral 0x149809510 <col:24> 'int' 0
    |       |-BinaryOperator 0x149809648 <line:43:13, col:26> '<dependent type>' contains-errors '='
    |       | |-CXXDependentScopeMemberExpr 0x1498095a8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->error
    |       | | `-RecoveryExpr 0x149809580 <col:13> '<dependent type>' contains-errors lvalue
    |       | |   `-DeclRefExpr 0x149809560 <col:13> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |       | `-RecoveryExpr 0x149809628 <col:26> '<dependent type>' contains-errors lvalue
    |       `-IfStmt 0x149809788 <line:44:13, line:45:24>
    |         |-UnaryOperator 0x149809740 <line:44:17, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow
    |         | `-CallExpr 0x149809710 <col:18, col:39> '<dependent type>' contains-errors
    |         |   |-CXXDependentScopeMemberExpr 0x149809688 <col:18, col:23> '<dependent type>' contains-errors lvalue ->verify_cb
    |         |   | `-RecoveryExpr 0x149809668 <col:18> '<dependent type>' contains-errors lvalue
    |         |   |-IntegerLiteral 0x1498096d0 <col:33> 'int' 0
    |         |   `-RecoveryExpr 0x1498096f0 <col:36> '<dependent type>' contains-errors lvalue
    |         `-ReturnStmt 0x149809778 <line:45:17, col:24>
    |           `-IntegerLiteral 0x149809758 <col:24> 'int' 0
    |-IfStmt 0x149809978 <line:49:5, line:50:28>
    | |-ImplicitCastExpr 0x149809858 <line:49:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x149809838 <col:9> 'int' lvalue ParmVar 0x14800de28 'notify' 'int'
    | `-BinaryOperator 0x149809958 <line:50:9, col:28> '<dependent type>' contains-errors '='
    |   |-CXXDependentScopeMemberExpr 0x1498098b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->current_crl
    |   | `-RecoveryExpr 0x149809890 <col:9> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x149809870 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'ctx' 'int *'
    |   `-RecoveryExpr 0x149809938 <col:28> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x1498099b8 <line:52:5, col:12>
      `-IntegerLiteral 0x149809998 <col:12> 'int' 1
