`-FunctionDecl 0x14f00df18  line:1:5 invalid sigprocmask 'int (int, int *, int *)'
  |-ParmVarDecl 0x14f00dcd8 <col:17, col:21> col:21 used how 'int'
  |-ParmVarDecl 0x14f00dda8 <col:26, col:36> col:36 invalid set 'int *'
  |-ParmVarDecl 0x14f00de28 <col:41, col:51> col:51 invalid oldset 'int *'
  `-CompoundStmt 0x14f809628 <line:2:1, line:27:1>
    |-DeclStmt 0x14f00e058 <line:3:2, col:11>
    | `-VarDecl 0x14f00dff0 <col:2, col:6> col:6 used error 'int'
    |-CallExpr 0x14f00e3a0 <line:5:2, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f00e1d0 <col:2> 'int ()' Function 0x14f00e118 'spin_lock_irq' 'int ()'
    | `-UnaryOperator 0x14f00e388 <col:16, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14f00e340 <col:17, col:35> '<dependent type>' contains-errors lvalue ->siglock
    |     `-CXXDependentScopeMemberExpr 0x14f00e2f8 <col:17, col:26> '<dependent type>' contains-errors lvalue ->sighand
    |       `-RecoveryExpr 0x14f00e2d8 <col:17> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14f0275b8 <line:6:2, line:7:22>
    | |-RecoveryExpr 0x14f00e3c8 <line:6:6> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x14f027598 <line:7:3, col:22> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x14f027518 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x14f027500 <col:4> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x14f027400 <col:4> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x14f027550 <col:13, col:22> '<dependent type>' contains-errors lvalue ->blocked
    |     `-RecoveryExpr 0x14f027530 <col:13> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14f027618 <line:9:2, col:10> 'int' '='
    | |-DeclRefExpr 0x14f0275d8 <col:2> 'int' lvalue Var 0x14f00dff0 'error' 'int'
    | `-IntegerLiteral 0x14f0275f8 <col:10> 'int' 0
    |-SwitchStmt 0x14f027670 <line:10:2, line:22:2>
    | |-ImplicitCastExpr 0x14f027658 <line:10:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x14f027638 <col:10> 'int' lvalue ParmVar 0x14f00dcd8 'how' 'int'
    | `-CompoundStmt 0x14f027f60 <col:15, line:22:2>
    |   |-CallExpr 0x14f0279f8 <line:12:3, col:54> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f027790 <col:3> 'int ()' Function 0x14f0276d8 'sigorsets' 'int ()'
    |   | |-UnaryOperator 0x14f027960 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027918 <col:14, col:23> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f0278f8 <col:14> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14f0279e0 <col:32, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027998 <col:33, col:42> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027978 <col:33> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14f0278a0 <col:51> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f027a30 <line:13:3>
    |   |-CallExpr 0x14f027d98 <line:15:3, col:56> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x14f027b30 <col:3> 'int ()' Function 0x14f027a78 'signandsets' 'int ()'
    |   | |-UnaryOperator 0x14f027d00 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027cb8 <col:16, col:25> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027c98 <col:16> '<dependent type>' contains-errors lvalue
    |   | |-UnaryOperator 0x14f027d80 <col:34, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | | `-CXXDependentScopeMemberExpr 0x14f027d38 <col:35, col:44> '<dependent type>' contains-errors lvalue ->blocked
    |   | |   `-RecoveryExpr 0x14f027d18 <col:35> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x14f027c40 <col:53> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x14f027dd0 <line:16:3>
    |   |-BreakStmt 0x14f027e40 <line:19:3>
    |   `-DefaultStmt 0x14f027f40 <line:20:2, line:21:12>
    |     `-BinaryOperator 0x14f027f20 <col:3, col:12> 'int' contains-errors '='
    |       |-DeclRefExpr 0x14f027e48 <col:3> 'int' lvalue Var 0x14f00dff0 'error' 'int'
    |       `-UnaryOperator 0x14f027f08 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow
    |         `-ImplicitCastExpr 0x14f027ef0 <col:12> '<dependent type>' contains-errors <LValueToRValue>
    |           `-RecoveryExpr 0x14f027ed0 <col:12> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x14f0280e8 <line:23:2, col:20> 'int'
    | `-ImplicitCastExpr 0x14f0280d0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x14f028080 <col:2> 'int ()' Function 0x14f027fc8 'recalc_sigpending' 'int ()'
    |-CallExpr 0x14f0283b8 <line:24:2, col:44> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14f0281e8 <col:2> 'int ()' Function 0x14f028130 'spin_unlock_irq' 'int ()'
    | `-UnaryOperator 0x14f0283a0 <col:18, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-CXXDependentScopeMemberExpr 0x14f028358 <col:19, col:37> '<dependent type>' contains-errors lvalue ->siglock
    |     `-CXXDependentScopeMemberExpr 0x14f028310 <col:19, col:28> '<dependent type>' contains-errors lvalue ->sighand
    |       `-RecoveryExpr 0x14f0282f0 <col:19> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x14f809618 <line:26:2, col:9>
      `-ImplicitCastExpr 0x14f809600 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14f0283e0 <col:9> 'int' lvalue Var 0x14f00dff0 'error' 'int'
