`-FunctionDecl 0x12b826918  line:1:12 hidp_queue_event 'int (struct hidp_session *, struct input_dev *, unsigned int, unsigned int, int)' static
  |-ParmVarDecl 0x12b80e248 <col:29, col:50> col:50 used session 'struct hidp_session *'
  |-ParmVarDecl 0x12b826628 <col:59, col:77> col:77 used dev 'struct input_dev *'
  |-ParmVarDecl 0x12b8266a8 <line:2:5, col:18> col:18 used type 'unsigned int'
  |-ParmVarDecl 0x12b826728 <col:24, col:37> col:37 used code 'unsigned int'
  |-ParmVarDecl 0x12b8267a8 <col:43, col:47> col:47 used value 'int'
  `-CompoundStmt 0x12c809c00 <line:3:1, line:38:1>
    |-DeclStmt 0x12b826ab0 <line:4:2, col:23>
    | `-VarDecl 0x12b826a48 <col:2, col:16> col:16 used newleds 'unsigned char'
    |-DeclStmt 0x12b826cb8 <line:5:2, col:21>
    | |-RecordDecl 0x12b826ac8 <col:2, col:9> col:9 struct sk_buff
    | `-VarDecl 0x12b826c38 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    |-CallExpr 0x12b826f48 <line:7:2, col:42> 'int'
    | |-ImplicitCastExpr 0x12b826f30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12b826e00 <col:2> 'int ()' Function 0x12b826d48 'BT_DBG' 'int ()'
    | |-ImplicitCastExpr 0x12b826f90 <col:9> 'char *' <ArrayToPointerDecay>
    | | `-StringLiteral 0x12b826e60 <col:9> 'char[4]' lvalue "STR"
    | |-ImplicitCastExpr 0x12b826fa8 <col:16> 'struct hidp_session *' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826e80 <col:16> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | |-ImplicitCastExpr 0x12b826fc0 <col:25> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826ea0 <col:25> 'unsigned int' lvalue ParmVar 0x12b8266a8 'type' 'unsigned int'
    | |-ImplicitCastExpr 0x12b826fd8 <col:31> 'unsigned int' <LValueToRValue>
    | | `-DeclRefExpr 0x12b826ec0 <col:31> 'unsigned int' lvalue ParmVar 0x12b826728 'code' 'unsigned int'
    | `-ImplicitCastExpr 0x12b826ff0 <col:37> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12b826ee0 <col:37> 'int' lvalue ParmVar 0x12b8267a8 'value' 'int'
    |-IfStmt 0x12b8270e8 <line:9:2, line:10:11>
    | |-BinaryOperator 0x12b827080 <line:9:6, col:14> 'int' contains-errors '!='
    | | |-DeclRefExpr 0x12b827008 <col:6> 'unsigned int' lvalue ParmVar 0x12b8266a8 'type' 'unsigned int'
    | | `-RecoveryExpr 0x12b827060 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x12b8270d8 <line:10:3, col:11>
    |   `-UnaryOperator 0x12b8270c0 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x12b8270a0 <col:11> 'int' 1
    |-IfStmt 0x12c808ac8 <line:18:2, line:19:10>
    | |-BinaryOperator 0x12c808a78 <line:18:6, col:23> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x12c808a30 <col:6, col:15> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12c8089f8 <col:6> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | | `-DeclRefExpr 0x12c808a58 <col:23> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    | `-ReturnStmt 0x12c808ab8 <line:19:3, col:10>
    |   `-IntegerLiteral 0x12c808a98 <col:10> 'int' 0
    |-BinaryOperator 0x12c808b68 <line:21:2, col:18> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c808b20 <col:2, col:11> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x12c808ae8 <col:2> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | `-DeclRefExpr 0x12c808b48 <col:18> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    |-BinaryOperator 0x12c808d80 <line:23:2, col:31> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x12c808b88 <col:2> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | `-CallExpr 0x12c808d50 <col:8, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12c808c88 <col:8> 'int ()' Function 0x12c808bd0 'alloc_skb' 'int ()'
    |   |-IntegerLiteral 0x12c808ca8 <col:18> 'int' 3
    |   `-RecoveryExpr 0x12c808d30 <col:21> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x12c809030 <line:24:2, line:27:2>
    | |-UnaryOperator 0x12c808dd8 <line:24:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x12c808dc0 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c808da0 <col:7> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x12c809010 <col:12, line:27:2>
    |   |-CallExpr 0x12c808f28 <line:25:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x12c808f10 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12c808ed0 <col:3> 'int ()' Function 0x12c808e18 'BT_ERR' 'int ()'
    |   | `-ImplicitCastExpr 0x12c808f50 <col:10> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x12c808ef0 <col:10> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x12c809000 <line:26:3, col:11>
    |     `-UnaryOperator 0x12c808fe8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |       `-ImplicitCastExpr 0x12c808fd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |         `-RecoveryExpr 0x12c808fb0 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x12c809320 <line:30:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c8092d8 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12c809290 <col:3, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12c809278 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12c809218 <col:3> 'int ()' Function 0x12c809078 'skb_put' 'int ()'
    | |   |-ImplicitCastExpr 0x12c8092c0 <col:11> 'struct sk_buff *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c809238 <col:11> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | |   `-IntegerLiteral 0x12c809258 <col:16> 'int' 1
    | `-IntegerLiteral 0x12c809300 <col:21> 'int' 1
    |-BinaryOperator 0x12c809448 <line:31:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x12c809400 <col:2, col:17> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x12c8093b8 <col:3, col:17> 'int'
    | |   |-ImplicitCastExpr 0x12c8093a0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x12c809340 <col:3> 'int ()' Function 0x12c809078 'skb_put' 'int ()'
    | |   |-ImplicitCastExpr 0x12c8093e8 <col:11> 'struct sk_buff *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c809360 <col:11> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    | |   `-IntegerLiteral 0x12c809380 <col:16> 'int' 1
    | `-DeclRefExpr 0x12c809428 <col:21> 'unsigned char' lvalue Var 0x12b826a48 'newleds' 'unsigned char'
    |-CallExpr 0x12c809600 <line:33:2, col:45> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12c809548 <col:2> 'int ()' Function 0x12c809490 'skb_queue_tail' 'int ()'
    | |-UnaryOperator 0x12c8095c8 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x12c8095a0 <col:18, col:27> '<dependent type>' contains-errors lvalue
    | |   `-DeclRefExpr 0x12c809568 <col:18> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    | `-DeclRefExpr 0x12c8095e0 <col:42> 'struct sk_buff *' lvalue Var 0x12b826c38 'skb' 'struct sk_buff *'
    |-CallExpr 0x12c809768 <line:35:2, col:23> 'int'
    | |-ImplicitCastExpr 0x12c809750 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c809710 <col:2> 'int ()' Function 0x12c809658 'hidp_schedule' 'int ()'
    | `-ImplicitCastExpr 0x12c809790 <col:16> 'struct hidp_session *' <LValueToRValue>
    |   `-DeclRefExpr 0x12c809730 <col:16> 'struct hidp_session *' lvalue ParmVar 0x12b80e248 'session' 'struct hidp_session *'
    `-ReturnStmt 0x12c8097c8 <line:37:2, col:9>
      `-IntegerLiteral 0x12c8097a8 <col:9> 'int' 0
