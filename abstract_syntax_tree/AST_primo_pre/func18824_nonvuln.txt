`-FunctionDecl 0x15280dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x15280dcd8 <col:14> col:14 imagecolorallocate 'int'
  `-CompoundStmt 0x1521245c0 <line:2:1, line:21:1>
    |-DeclStmt 0x15280dfa8 <line:6:2, col:15>
    | `-VarDecl 0x15280dee8 <col:2, col:14> col:6 used ct 'int' cinit
    |   `-ParenExpr 0x15280df88 <col:11, col:14> 'int'
    |     `-UnaryOperator 0x15280df70 <col:12, col:13> 'int' prefix '-'
    |       `-IntegerLiteral 0x15280df50 <col:13> 'int' 1
    |-IfStmt 0x152124028 <line:8:2, line:10:2>
    | |-BinaryOperator 0x152123fe0 <line:8:6, col:81> 'int' contains-errors '=='
    | | |-CallExpr 0x152123f70 <col:6, col:76> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x15280e0d0 <col:6> 'int ()' Function 0x15280e018 'zend_parse_parameters' 'int ()'
    | | | |-CallExpr 0x152123e70 <col:28, col:42> 'int'
    | | | | `-ImplicitCastExpr 0x152123e58 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | | |   `-DeclRefExpr 0x15280e1d0 <col:28> 'int ()' Function 0x15280e118 'ZEND_NUM_ARGS' 'int ()'
    | | | |-StringLiteral 0x15280e2a0 <col:45> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x152123eb0 <col:52, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x152123e90 <col:53> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x152123ee8 <col:57, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x152123ec8 <col:58> '<dependent type>' contains-errors lvalue
    | | | |-UnaryOperator 0x152123f20 <col:63, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x152123f00 <col:64> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x152123f58 <col:71, col:72> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x152123f38 <col:72> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x152123fc0 <col:81> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x152124010 <col:90, line:10:2>
    |   `-ReturnStmt 0x152124000 <line:9:3>
    |-IfStmt 0x1521240c0 <line:12:2, line:14:2>
    | |-RecoveryExpr 0x152124090 <line:12:6, col:75> '_Bool' contains-errors
    | `-CompoundStmt 0x1521240b0 <col:81, line:14:2>
    |-BinaryOperator 0x152124380 <line:16:2, col:48> 'int' contains-errors '='
    | |-DeclRefExpr 0x1521240e0 <col:2> 'int' lvalue Var 0x15280dee8 'ct' 'int'
    | `-CallExpr 0x152124340 <col:7, col:48> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1521241e0 <col:7> 'int ()' Function 0x152124128 'gdImageColorAllocate' 'int ()'
    |   |-RecoveryExpr 0x1521242c0 <col:28> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x1521242e0 <col:32> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x152124300 <col:37> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x152124320 <col:44> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x152124428 <line:17:2, line:19:2>
    | |-BinaryOperator 0x1521243f8 <line:17:6, col:11> 'int' '<'
    | | |-ImplicitCastExpr 0x1521243e0 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1521243a0 <col:6> 'int' lvalue Var 0x15280dee8 'ct' 'int'
    | | `-IntegerLiteral 0x1521243c0 <col:11> 'int' 0
    | `-CompoundStmt 0x152124418 <col:14, line:19:2>
    `-CallExpr 0x152124580 <line:20:2, col:16> 'int'
      |-ImplicitCastExpr 0x152124568 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x152124528 <col:2> 'int ()' Function 0x152124470 'RETURN_LONG' 'int ()'
      `-ImplicitCastExpr 0x1521245a8 <col:14> 'int' <LValueToRValue>
        `-DeclRefExpr 0x152124548 <col:14> 'int' lvalue Var 0x15280dee8 'ct' 'int'
