`-FunctionDecl 0x15b00df18  line:1:12 invalid cms_copy_content 'int (int *, int *, unsigned int)' static
  |-ParmVarDecl 0x15b00dd28 <col:29, col:34> col:34 invalid out 'int *'
  |-ParmVarDecl 0x15b00dda8 <col:39, col:44> col:44 invalid in 'int *'
  |-ParmVarDecl 0x15b00de28 <col:48, col:61> col:61 used flags 'unsigned int'
  `-CompoundStmt 0x15a922d50 <line:2:2, line:59:2>
    |-DeclStmt 0x15b00e0f0 <line:3:2, col:25>
    | `-VarDecl 0x15b00e088 <col:2, col:24> col:16 used buf 'unsigned char[4096]'
    |-DeclStmt 0x15b00e240 <line:4:2, col:14>
    | |-VarDecl 0x15b00e120 <col:2, col:10> col:6 used r 'int' cinit
    | | `-IntegerLiteral 0x15b00e188 <col:10> 'int' 0
    | `-VarDecl 0x15b00e1c0 <col:2, col:13> col:13 used i 'int'
    |-IfStmt 0x15b0280e8 <line:7:2, line:15:3> has_else
    | |-BinaryOperator 0x15b00e300 <line:7:6, col:13> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x15b00e288 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x15b00e2e0 <col:13> '<dependent type>' contains-errors lvalue
    | |-NullStmt 0x15b0280e0 <line:8:3>
    | `-IfStmt 0x15b0280b0 <line:9:7, line:15:3> has_else
    |   |-BinaryOperator 0x15b027d00 <line:9:11, col:19> '<dependent type>' contains-errors '&'
    |   | |-DeclRefExpr 0x15b027c88 <col:11> 'unsigned int' lvalue ParmVar 0x15b00de28 'flags' 'unsigned int'
    |   | `-RecoveryExpr 0x15b027ce0 <col:19> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x15b028070 <line:10:3, line:13:3>
    |   | `-CallExpr 0x15b028040 <line:12:3, col:35> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15b027f98 <col:3> 'int ()' Function 0x15b027ee0 'BIO_set_mem_eof_return' 'int ()'
    |   |   |-RecoveryExpr 0x15b028020 <col:26> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x15b027fd0 <col:34> 'int' 0
    |   `-NullStmt 0x15b0280a8 <line:15:3>
    |-IfStmt 0x15b028408 <line:17:2, line:21:3>
    | |-UnaryOperator 0x15b028198 <line:17:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x15b028180 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15b028160 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x15b0283e8 <line:18:3, line:21:3>
    |   |-CallExpr 0x15b028350 <line:19:3, col:53> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x15b028290 <col:3> 'int ()' Function 0x15b0281d8 'CMSerr' 'int ()'
    |   | |-RecoveryExpr 0x15b028310 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x15b028330 <col:33> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x15b0283d0 <line:20:3, col:8> 'err' 0x15b028380
    |-ForStmt 0x15a9228e0 <line:24:2, line:41:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-CompoundStmt 0x15a9228b8 <line:25:2, line:41:2>
    |   |-BinaryOperator 0x15b028620 <line:26:3, col:32> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x15b028428 <col:3> 'int' lvalue Var 0x15b00e1c0 'i' 'int'
    |   | `-CallExpr 0x15b0285e8 <col:5, col:32> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x15b028528 <col:5> 'int ()' Function 0x15b028470 'BIO_read' 'int ()'
    |   |   |-RecoveryExpr 0x15b028548 <col:14> '<dependent type>' contains-errors lvalue
    |   |   |-DeclRefExpr 0x15b028568 <col:17> 'unsigned char[4096]' lvalue Var 0x15b00e088 'buf' 'unsigned char[4096]'
    |   |   `-UnaryExprOrTypeTraitExpr 0x15b0285c8 <col:21, col:31> 'unsigned long' sizeof
    |   |     `-ParenExpr 0x15b0285a8 <col:27, col:31> 'unsigned char[4096]' lvalue
    |   |       `-DeclRefExpr 0x15b028588 <col:28> 'unsigned char[4096]' lvalue Var 0x15b00e088 'buf' 'unsigned char[4096]' non_odr_use_unevaluated
    |   |-IfStmt 0x15a9226e0 <line:27:3, line:37:4>
    |   | |-BinaryOperator 0x15b028698 <line:27:7, col:12> 'int' '<='
    |   | | |-ImplicitCastExpr 0x15b028680 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x15b028640 <col:7> 'int' lvalue Var 0x15b00e1c0 'i' 'int'
    |   | | `-IntegerLiteral 0x15b028660 <col:12> 'int' 0
    |   | `-CompoundStmt 0x15a9226b8 <line:28:4, line:37:4>
    |   |   |-IfStmt 0x15b0289d0 <line:29:4, line:33:5>
    |   |   | |-RecoveryExpr 0x15b028800 <line:29:8, col:31> '_Bool' contains-errors
    |   |   | `-CompoundStmt 0x15b0289b8 <line:30:5, line:33:5>
    |   |   |   `-IfStmt 0x15b028998 <line:31:5, line:32:11>
    |   |   |     |-UnaryOperator 0x15b028968 <line:31:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   |     | `-CallExpr 0x15b028940 <col:10, col:34> '<dependent type>' contains-errors
    |   |   |     |   |-DeclRefExpr 0x15b028900 <col:10> 'int ()' Function 0x15b028848 'BIO_get_cipher_status' 'int ()'
    |   |   |     |   `-RecoveryExpr 0x15b028920 <col:32> '<dependent type>' contains-errors lvalue
    |   |   |     `-GotoStmt 0x15b028980 <line:32:6, col:11> 'err' 0x15b028380
    |   |   |-IfStmt 0x15a922690 <line:34:4, line:35:10>
    |   |   | |-BinaryOperator 0x15a922658 <line:34:8, col:12> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x15a922640 <col:8> 'int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x15a922600 <col:8> 'int' lvalue Var 0x15b00e1c0 'i' 'int'
    |   |   | | `-IntegerLiteral 0x15a922620 <col:12> 'int' 0
    |   |   | `-GotoStmt 0x15a922678 <line:35:5, col:10> 'err' 0x15b028380
    |   |   `-BreakStmt 0x15a9226b0 <line:36:4>
    |   `-IfStmt 0x15a922898 <line:39:3, line:40:9>
    |     |-RecoveryExpr 0x15a922860 <line:39:7, col:48> '_Bool' contains-errors
    |     `-GotoStmt 0x15a922880 <line:40:4, col:9> 'err' 0x15b028380
    |-IfStmt 0x15a922b20 <line:43:2, line:50:3>
    | |-RecoveryExpr 0x15a922938 <line:43:5, col:13> '_Bool' contains-errors
    | `-CompoundStmt 0x15a922b08 <line:44:3, line:50:3>
    |   `-IfStmt 0x15a922ae8 <line:45:3, line:49:4>
    |     |-RecoveryExpr 0x15a922a78 <line:45:6, col:29> '_Bool' contains-errors
    |     `-CompoundStmt 0x15a922ad0 <line:46:4, line:49:4>
    |       `-GotoStmt 0x15a922ab8 <line:48:4, col:9> 'err' 0x15b028380
    |-BinaryOperator 0x15a922b80 <line:52:2, col:6> 'int' '='
    | |-DeclRefExpr 0x15a922b40 <col:2> 'int' lvalue Var 0x15b00e120 'r' 'int'
    | `-IntegerLiteral 0x15a922b60 <col:6> 'int' 1
    |-LabelStmt 0x15a922ce8 <line:54:2, col:5> 'err'
    | `-NullStmt 0x15a922ce0 <col:5>
    `-ReturnStmt 0x15a922d40 <line:57:2, col:9>
      `-ImplicitCastExpr 0x15a922d28 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15a922d08 <col:9> 'int' lvalue Var 0x15b00e120 'r' 'int'
