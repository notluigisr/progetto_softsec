`-FunctionDecl 0x14980de88  line:1:1 invalid string_split 'int (int *, int *)'
  |-ParmVarDecl 0x14980dd28 <col:14, col:30> col:30 invalid self 'int *'
  |-ParmVarDecl 0x14980dda8 <col:36, col:46> col:46 invalid args 'int *'
  `-CompoundStmt 0x149827df0 <line:2:1, line:26:1>
    |-DeclStmt 0x14980e220 <line:5:5, col:51>
    | |-VarDecl 0x14980df58 <col:5, col:44> col:17 used s 'const char *' cinit
    | | `-CallExpr 0x14980e160 <col:21, col:44> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14980e120 <col:21> 'int ()' Function 0x14980e068 'PyString_AS_STRING' 'int ()'
    | |   `-RecoveryExpr 0x14980e140 <col:40> '<dependent type>' contains-errors lvalue
    | `-VarDecl 0x14980e1a0 <col:5, col:48> col:48 used sub 'const char *'
    |-IfStmt 0x1498275c8 <line:8:5, line:9:16>
    | |-UnaryOperator 0x149827568 <line:8:9, col:58> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x149827528 <col:10, col:58> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x14980e348 <col:10> 'int ()' Function 0x14980e290 'PyArg_ParseTuple' 'int ()'
    | |   |-RecoveryExpr 0x14980e368 <col:27> '<dependent type>' contains-errors lvalue
    | |   |-StringLiteral 0x14980e3d0 <col:33> 'char[4]' lvalue "STR"
    | |   |-UnaryOperator 0x1498274d8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x1498274b8 <col:41> '<dependent type>' contains-errors lvalue
    | |   `-UnaryOperator 0x149827510 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x1498274f0 <col:50> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1498275b8 <line:9:9, col:16>
    |   `-RecoveryExpr 0x149827598 <col:16> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x149827c80 <line:14:5, line:22:10> has_else
      |-RecoveryExpr 0x149827980 <line:14:9, col:30> '_Bool' contains-errors
      |-CompoundStmt 0x149827ae0 <col:33, line:17:5>
      `-NullStmt 0x149827c78 <line:22:10>
