`-FunctionDecl 0x13280de58  line:1:12 invalid complete_hosts 'int (char *, int)' static
  |-ParmVarDecl 0x13280dcd8 <col:27, col:33> col:33 used buf 'char *'
  |-ParmVarDecl 0x13280dd70 <col:38, col:45> col:45 invalid buflen 'int'
  `-CompoundStmt 0x132828698 <line:2:1, line:54:1>
    |-DeclStmt 0x13280dfc8 <line:4:3, col:14>
    | `-VarDecl 0x13280df28 <col:3, col:13> col:7 used rc 'int' cinit
    |   `-UnaryOperator 0x13280dfb0 <col:12, col:13> 'int' prefix '-'
    |     `-IntegerLiteral 0x13280df90 <col:13> 'int' 1
    |-UnaryExprOrTypeTraitExpr 0x13280e038 <line:5:3, col:10> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x13280e018 <col:10> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x132826be8 <line:8:3, col:54>
    | |-RecordDecl 0x13280e278 <col:3, col:10> col:10 struct MailboxList
    | `-VarDecl 0x13280e378 <col:3, col:22> col:22 used invalid ml 'struct MailboxList'
    |-CallExpr 0x132826de0 <line:9:3, col:61> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x132826ce0 <col:3> 'int ()' Function 0x132826c28 'neomutt_mailboxlist_get_all' 'int ()'
    | |-UnaryOperator 0x132826d20 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x132826d00 <col:32> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x132826da0 <col:36> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x132826dc0 <col:45> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x132827040 <line:10:3, col:32>
    | |-RecordDecl 0x132826e18 <col:3, col:10> col:10 struct MailboxNode
    | `-VarDecl 0x132826f88 <col:3, col:28> col:23 used np 'struct MailboxNode *' cinit
    |   `-RecoveryExpr 0x132827008 <col:28> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x132827220 <line:11:3, col:34> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x132827138 <col:3> 'int ()' Function 0x132827080 'STAILQ_FOREACH' 'int ()'
    | |-DeclRefExpr 0x132827158 <col:18> 'struct MailboxNode *' contains-errors lvalue Var 0x132826f88 'np' 'struct MailboxNode *'
    | |-UnaryOperator 0x132827198 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | `-RecoveryExpr 0x132827178 <col:23> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x132827200 <col:27> '<dependent type>' contains-errors lvalue
    |-CompoundStmt 0x1328284d8 <line:12:3, line:23:3>
    | `-IfStmt 0x1328284a8 <line:16:5, line:22:7> has_else
    |   |-ImplicitCastExpr 0x132828000 <line:16:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1328275d8 <col:9> 'int' lvalue Var 0x13280df28 'rc' 'int'
    |   |-CompoundStmt 0x132828298 <line:17:5, line:20:5>
    |   | |-CallExpr 0x132828200 <line:18:7, col:62> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x1328280f8 <col:7> 'int ()' Function 0x132828040 'mutt_str_strfcpy' 'int ()'
    |   | | |-DeclRefExpr 0x132828118 <col:24> 'char *' lvalue ParmVar 0x13280dcd8 'buf' 'char *'
    |   | | |-CallExpr 0x1328281b8 <col:29, col:53> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x132828138 <col:29> 'int ()' Function 0x132827380 'mailbox_path' 'int ()'
    |   | | | `-RecoveryExpr 0x132828190 <col:42, col:46> '<dependent type>' contains-errors lvalue
    |   | | |   `-DeclRefExpr 0x132828158 <col:42> 'struct MailboxNode *' contains-errors lvalue Var 0x132826f88 'np' 'struct MailboxNode *'
    |   | | `-RecoveryExpr 0x1328281e0 <col:56> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x132828278 <line:19:7, col:12> 'int' '='
    |   |   |-DeclRefExpr 0x132828238 <col:7> 'int' lvalue Var 0x13280df28 'rc' 'int'
    |   |   `-IntegerLiteral 0x132828258 <col:12> 'int' 0
    |   `-NullStmt 0x1328284a0 <line:22:7>
    |-CallExpr 0x132828628 <line:24:3, col:32> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1328285d0 <col:3> 'int ()' Function 0x132828518 'neomutt_mailboxlist_clear' 'int ()'
    | `-UnaryOperator 0x132828610 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x1328285f0 <col:30> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x132828688 <line:53:3, col:10>
      `-ImplicitCastExpr 0x132828670 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x132828650 <col:10> 'int' lvalue Var 0x13280df28 'rc' 'int'
