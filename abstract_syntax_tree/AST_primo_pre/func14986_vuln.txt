`-FunctionDecl 0x14c00df18  line:1:5 invalid jas_stream_read 'int (int *, void *, int)'
  |-ParmVarDecl 0x14c00dd28 <col:21, col:35> col:35 invalid stream 'int *'
  |-ParmVarDecl 0x14c00dda8 <col:43, col:49> col:49 used buf 'void *'
  |-ParmVarDecl 0x14c00de28 <col:54, col:58> col:58 used cnt 'int'
  `-CompoundStmt 0x14c0277e0 <line:2:1, line:19:1>
    |-DeclStmt 0x14c00e058 <line:3:2, col:7>
    | `-VarDecl 0x14c00dff0 <col:2, col:6> col:6 used n 'int'
    |-DeclStmt 0x14c00e0f0 <line:4:2, col:7>
    | `-VarDecl 0x14c00e088 <col:2, col:6> col:6 used c 'int'
    |-DeclStmt 0x14c00e188 <line:5:2, col:14>
    | `-VarDecl 0x14c00e120 <col:2, col:8> col:8 used bufptr 'char *'
    |-BinaryOperator 0x14c00e210 <line:7:2, col:11> 'char *' '='
    | |-DeclRefExpr 0x14c00e1a0 <col:2> 'char *' lvalue Var 0x14c00e120 'bufptr' 'char *'
    | `-ImplicitCastExpr 0x14c00e1f8 <col:11> 'char *' <BitCast>
    |   `-ImplicitCastExpr 0x14c00e1e0 <col:11> 'void *' <LValueToRValue>
    |     `-DeclRefExpr 0x14c00e1c0 <col:11> 'void *' lvalue ParmVar 0x14c00dda8 'buf' 'void *'
    |-BinaryOperator 0x14c00e270 <line:9:2, col:6> 'int' '='
    | |-DeclRefExpr 0x14c00e230 <col:2> 'int' lvalue Var 0x14c00dff0 'n' 'int'
    | `-IntegerLiteral 0x14c00e250 <col:6> 'int' 0
    |-WhileStmt 0x14c027778 <line:10:2, line:16:2>
    | |-BinaryOperator 0x14c00e300 <line:10:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x14c00e2d0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14c00e290 <col:9> 'int' lvalue Var 0x14c00dff0 'n' 'int'
    | | `-ImplicitCastExpr 0x14c00e2e8 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x14c00e2b0 <col:13> 'int' lvalue ParmVar 0x14c00de28 'cnt' 'int'
    | `-CompoundStmt 0x14c027750 <col:18, line:16:2>
    |   |-IfStmt 0x14c027638 <line:11:3, line:13:3>
    |   | |-BinaryOperator 0x14c0275b8 <line:11:7, col:40> 'int' contains-errors '=='
    |   | | |-ParenExpr 0x14c027540 <col:7, col:35> 'int' contains-errors
    |   | | | `-BinaryOperator 0x14c027520 <col:8, col:34> 'int' contains-errors '='
    |   | | |   |-DeclRefExpr 0x14c00e320 <col:8> 'int' lvalue Var 0x14c00e088 'c' 'int'
    |   | | |   `-CallExpr 0x14c0274f8 <col:12, col:34> '<dependent type>' contains-errors
    |   | | |     |-DeclRefExpr 0x14c0274b8 <col:12> 'int ()' Function 0x14c027400 'jas_stream_getc' 'int ()'
    |   | | |     `-RecoveryExpr 0x14c0274d8 <col:28> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x14c027598 <col:40> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14c027620 <col:45, line:13:3>
    |   |   `-ReturnStmt 0x14c027610 <line:12:4, col:11>
    |   |     `-ImplicitCastExpr 0x14c0275f8 <col:11> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x14c0275d8 <col:11> 'int' lvalue Var 0x14c00dff0 'n' 'int'
    |   |-BinaryOperator 0x14c0276f8 <line:14:3, col:15> 'char' '='
    |   | |-UnaryOperator 0x14c027690 <col:3, col:10> 'char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x14c027678 <col:4, col:10> 'char *' postfix '++'
    |   | |   `-DeclRefExpr 0x14c027658 <col:4> 'char *' lvalue Var 0x14c00e120 'bufptr' 'char *'
    |   | `-ImplicitCastExpr 0x14c0276e0 <col:15> 'char' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x14c0276c8 <col:15> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14c0276a8 <col:15> 'int' lvalue Var 0x14c00e088 'c' 'int'
    |   `-UnaryOperator 0x14c027738 <line:15:3, col:5> 'int' prefix '++'
    |     `-DeclRefExpr 0x14c027718 <col:5> 'int' lvalue Var 0x14c00dff0 'n' 'int'
    `-ReturnStmt 0x14c0277d0 <line:18:2, col:9>
      `-ImplicitCastExpr 0x14c0277b8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14c027798 <col:9> 'int' lvalue Var 0x14c00dff0 'n' 'int'
