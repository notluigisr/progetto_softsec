`-FunctionDecl 0x14e140a00  line:1:13 set_mode 'void (struct vc_data *, int)' static
  |-ParmVarDecl 0x14e128648 <col:22, col:38> col:38 used vc 'struct vc_data *'
  |-ParmVarDecl 0x14e1286c8 <col:42, col:46> col:46 used on_off 'int'
  `-CompoundStmt 0x14e144080 <line:2:1, line:66:1>
    |-DeclStmt 0x14e140b80 <line:3:2, col:7>
    | `-VarDecl 0x14e140b18 <col:2, col:6> col:6 used i 'int'
    `-ForStmt 0x14e144048 <line:5:2, line:65:3>
      |-BinaryOperator 0x14e140bd8 <line:5:7, col:11> 'int' '='
      | |-DeclRefExpr 0x14e140b98 <col:7> 'int' lvalue Var 0x14e140b18 'i' 'int'
      | `-IntegerLiteral 0x14e140bb8 <col:11> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14e140c78 <col:14, col:23> 'int' contains-errors '<='
      | |-DeclRefExpr 0x14e140bf8 <col:14> 'int' lvalue Var 0x14e140b18 'i' 'int'
      | `-RecoveryExpr 0x14e140c50 <col:19, col:23> '<dependent type>' contains-errors lvalue
      |   `-DeclRefExpr 0x14e140c18 <col:19> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
      |-UnaryOperator 0x14e140cb8 <col:32, col:33> 'int' postfix '++'
      | `-DeclRefExpr 0x14e140c98 <col:32> 'int' lvalue Var 0x14e140b18 'i' 'int'
      `-IfStmt 0x14e144018 <line:6:3, line:65:3> has_else
        |-BinaryOperator 0x14e140da0 <line:6:7, col:22> 'int' contains-errors '=='
        | |-RecoveryExpr 0x14e140d08 <col:7, col:11> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x14e140cd0 <col:7> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        | `-RecoveryExpr 0x14e140d80 <col:22> '<dependent type>' contains-errors lvalue
        |-CompoundStmt 0x14e143ba8 <col:29, line:50:3>
        | `-SwitchStmt 0x14e140ea8 <line:7:4, line:49:4>
        |   |-ImplicitCastExpr 0x14e140e90 <line:7:11, col:23> '<dependent type>' contains-errors <LValueToRValue>
        |   | `-ArraySubscriptExpr 0x14e140e70 <col:11, col:23> '<dependent type>' contains-errors lvalue
        |   |   |-ImplicitCastExpr 0x14e140e40 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
        |   |   | `-RecoveryExpr 0x14e140df8 <col:11, col:15> '<dependent type>' contains-errors lvalue
        |   |   |   `-DeclRefExpr 0x14e140dc0 <col:11> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |   |   `-ImplicitCastExpr 0x14e140e58 <col:22> 'int' <LValueToRValue>
        |   |     `-DeclRefExpr 0x14e140e20 <col:22> 'int' lvalue Var 0x14e140b18 'i' 'int'
        |   `-CompoundStmt 0x14e143b08 <col:26, line:49:4>
        |     |-CaseStmt 0x14e140ef0 <line:8:4, line:12:24>
        |     | |-IntegerLiteral 0x14e140ed0 <line:8:9> 'int' 1
        |     | `-IfStmt 0x14e1412f0 <line:9:5, line:12:24> has_else
        |     |   |-ImplicitCastExpr 0x14e140f38 <line:9:9> 'int' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x14e140f18 <col:9> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |   |-CallExpr 0x14e141108 <line:10:6, col:24> '<dependent type>' contains-errors
        |     |   | |-DeclRefExpr 0x14e141060 <col:6> 'int ()' Function 0x14e140fa8 'set_kbd' 'int ()'
        |     |   | |-DeclRefExpr 0x14e141080 <col:14> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   | `-RecoveryExpr 0x14e1410e8 <col:18> '<dependent type>' contains-errors lvalue
        |     |   `-CallExpr 0x14e1412c0 <line:12:6, col:24> '<dependent type>' contains-errors
        |     |     |-DeclRefExpr 0x14e141218 <col:6> 'int ()' Function 0x14e141160 'clr_kbd' 'int ()'
        |     |     |-DeclRefExpr 0x14e141238 <col:14> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |     `-RecoveryExpr 0x14e1412a0 <col:18> '<dependent type>' contains-errors lvalue
        |     |-BreakStmt 0x14e141320 <line:13:5>
        |     |-CaseStmt 0x14e141348 <line:14:4, line:19:5>
        |     | |-IntegerLiteral 0x14e141328 <line:14:9> 'int' 3
        |     | `-BreakStmt 0x14e141370 <line:19:5>
        |     |-CaseStmt 0x14e141398 <line:20:4, line:25:5>
        |     | |-IntegerLiteral 0x14e141378 <line:20:9> 'int' 5
        |     | `-IfStmt 0x14e1418d0 <line:21:5, line:25:5>
        |     |   |-BinaryOperator 0x14e141440 <line:21:9, col:27> 'int' contains-errors '!='
        |     |   | |-RecoveryExpr 0x14e1413f8 <col:9, col:13> '<dependent type>' contains-errors lvalue
        |     |   | | `-DeclRefExpr 0x14e1413c0 <col:9> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   | `-DeclRefExpr 0x14e141420 <col:27> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |   `-CompoundStmt 0x14e1418a8 <col:35, line:25:5>
        |     |     |-BinaryOperator 0x14e1414e0 <line:22:6, col:23> '<dependent type>' contains-errors '='
        |     |     | |-RecoveryExpr 0x14e141498 <col:6, col:10> '<dependent type>' contains-errors lvalue
        |     |     | | `-DeclRefExpr 0x14e141460 <col:6> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |     | `-DeclRefExpr 0x14e1414c0 <col:23> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |     |-CallExpr 0x14e1416c0 <line:23:6, col:51> '<dependent type>' contains-errors
        |     |     | |-DeclRefExpr 0x14e1415e0 <col:6> 'int ()' Function 0x14e141528 'invert_screen' 'int ()'
        |     |     | |-DeclRefExpr 0x14e141600 <col:20> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |     | |-IntegerLiteral 0x14e141620 <col:24> 'int' 0
        |     |     | |-RecoveryExpr 0x14e141678 <col:27, col:31> '<dependent type>' contains-errors lvalue
        |     |     | | `-DeclRefExpr 0x14e141640 <col:27> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |     | `-IntegerLiteral 0x14e1416a0 <col:50> 'int' 0
        |     |     `-CallExpr 0x14e141868 <line:24:6, col:20> 'int'
        |     |       |-ImplicitCastExpr 0x14e141850 <col:6> 'int (*)()' <FunctionToPointerDecay>
        |     |       | `-DeclRefExpr 0x14e1417e0 <col:6> 'int ()' Function 0x14e141728 'update_attr' 'int ()'
        |     |       `-ImplicitCastExpr 0x14e141890 <col:18> 'struct vc_data *' <LValueToRValue>
        |     |         `-DeclRefExpr 0x14e141800 <col:18> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |-BreakStmt 0x14e1418f0 <line:26:5>
        |     |-CaseStmt 0x14e141918 <line:27:4, line:28:20>
        |     | |-IntegerLiteral 0x14e1418f8 <line:27:9> 'int' 6
        |     | `-BinaryOperator 0x14e1419c0 <line:28:5, col:20> '<dependent type>' contains-errors '='
        |     |   |-RecoveryExpr 0x14e141978 <col:5, col:9> '<dependent type>' contains-errors lvalue
        |     |   | `-DeclRefExpr 0x14e141940 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   `-DeclRefExpr 0x14e1419a0 <col:20> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |-CallExpr 0x14e143378 <line:29:5, col:21> 'int'
        |     | |-ImplicitCastExpr 0x14e143360 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |     | | `-DeclRefExpr 0x14e1432e0 <col:5> 'int ()' Function 0x14e143228 'gotoxay' 'int ()'
        |     | |-ImplicitCastExpr 0x14e1433b0 <col:13> 'struct vc_data *' <LValueToRValue>
        |     | | `-DeclRefExpr 0x14e143300 <col:13> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     | |-IntegerLiteral 0x14e143320 <col:17> 'int' 0
        |     | `-IntegerLiteral 0x14e143340 <col:20> 'int' 0
        |     |-BreakStmt 0x14e1433c8 <line:30:5>
        |     |-CaseStmt 0x14e1433f0 <line:31:4, line:32:21>
        |     | |-IntegerLiteral 0x14e1433d0 <line:31:9> 'int' 7
        |     | `-BinaryOperator 0x14e143498 <line:32:5, col:21> '<dependent type>' contains-errors '='
        |     |   |-RecoveryExpr 0x14e143450 <col:5, col:9> '<dependent type>' contains-errors lvalue
        |     |   | `-DeclRefExpr 0x14e143418 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   `-DeclRefExpr 0x14e143478 <col:21> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |-BreakStmt 0x14e1434b8 <line:33:5>
        |     |-CaseStmt 0x14e1434e0 <line:34:4, line:38:24>
        |     | |-IntegerLiteral 0x14e1434c0 <line:34:9> 'int' 8
        |     | `-IfStmt 0x14e1436f0 <line:35:5, line:38:24> has_else
        |     |   |-ImplicitCastExpr 0x14e143528 <line:35:9> 'int' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x14e143508 <col:9> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |   |-CallExpr 0x14e1435e8 <line:36:6, col:24> '<dependent type>' contains-errors
        |     |   | |-DeclRefExpr 0x14e143540 <col:6> 'int ()' Function 0x14e140fa8 'set_kbd' 'int ()'
        |     |   | |-DeclRefExpr 0x14e143560 <col:14> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   | `-RecoveryExpr 0x14e1435c8 <col:18> '<dependent type>' contains-errors lvalue
        |     |   `-CallExpr 0x14e1436c0 <line:38:6, col:24> '<dependent type>' contains-errors
        |     |     |-DeclRefExpr 0x14e143618 <col:6> 'int ()' Function 0x14e141160 'clr_kbd' 'int ()'
        |     |     |-DeclRefExpr 0x14e143638 <col:14> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |     `-RecoveryExpr 0x14e1436a0 <col:18> '<dependent type>' contains-errors lvalue
        |     |-BreakStmt 0x14e143720 <line:39:5>
        |     |-CaseStmt 0x14e143748 <line:40:4, line:41:40>
        |     | |-IntegerLiteral 0x14e143728 <line:40:9> 'int' 9
        |     | `-BinaryOperator 0x14e143878 <line:41:5, col:40> '<dependent type>' contains-errors '='
        |     |   |-RecoveryExpr 0x14e1437a8 <col:5, col:9> '<dependent type>' contains-errors lvalue
        |     |   | `-DeclRefExpr 0x14e143770 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   `-ConditionalOperator 0x14e143848 <col:27, col:40> 'int'
        |     |     |-ImplicitCastExpr 0x14e143830 <col:27> 'int' <LValueToRValue>
        |     |     | `-DeclRefExpr 0x14e1437d0 <col:27> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |     |-IntegerLiteral 0x14e1437f0 <col:36> 'int' 1
        |     |     `-IntegerLiteral 0x14e143810 <col:40> 'int' 0
        |     |-BreakStmt 0x14e143898 <line:42:5>
        |     |-CaseStmt 0x14e1438c0 <line:43:4, line:44:20>
        |     | |-IntegerLiteral 0x14e1438a0 <line:43:9> 'int' 25
        |     | `-BinaryOperator 0x14e143968 <line:44:5, col:20> '<dependent type>' contains-errors '='
        |     |   |-RecoveryExpr 0x14e143920 <col:5, col:9> '<dependent type>' contains-errors lvalue
        |     |   | `-DeclRefExpr 0x14e1438e8 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   `-DeclRefExpr 0x14e143948 <col:20> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |-BreakStmt 0x14e143988 <line:45:5>
        |     |-CaseStmt 0x14e1439b0 <line:46:4, line:47:40>
        |     | |-IntegerLiteral 0x14e143990 <line:46:9> 'int' 1000
        |     | `-BinaryOperator 0x14e143ae0 <line:47:5, col:40> '<dependent type>' contains-errors '='
        |     |   |-RecoveryExpr 0x14e143a10 <col:5, col:9> '<dependent type>' contains-errors lvalue
        |     |   | `-DeclRefExpr 0x14e1439d8 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
        |     |   `-ConditionalOperator 0x14e143ab0 <col:27, col:40> 'int'
        |     |     |-ImplicitCastExpr 0x14e143a98 <col:27> 'int' <LValueToRValue>
        |     |     | `-DeclRefExpr 0x14e143a38 <col:27> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
        |     |     |-IntegerLiteral 0x14e143a58 <col:36> 'int' 2
        |     |     `-IntegerLiteral 0x14e143a78 <col:40> 'int' 0
        |     `-BreakStmt 0x14e143b00 <line:48:5>
        `-CompoundStmt 0x14e144000 <line:50:10, line:65:3>
          `-SwitchStmt 0x14e143ca8 <line:51:4, line:64:4>
            |-ImplicitCastExpr 0x14e143c90 <line:51:11, col:23> '<dependent type>' contains-errors <LValueToRValue>
            | `-ArraySubscriptExpr 0x14e143c70 <col:11, col:23> '<dependent type>' contains-errors lvalue
            |   |-ImplicitCastExpr 0x14e143c40 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>
            |   | `-RecoveryExpr 0x14e143bf8 <col:11, col:15> '<dependent type>' contains-errors lvalue
            |   |   `-DeclRefExpr 0x14e143bc0 <col:11> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
            |   `-ImplicitCastExpr 0x14e143c58 <col:22> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x14e143c20 <col:22> 'int' lvalue Var 0x14e140b18 'i' 'int'
            `-CompoundStmt 0x14e143fc0 <col:26, line:64:4>
              |-CaseStmt 0x14e143cf0 <line:52:4, line:53:24>
              | |-IntegerLiteral 0x14e143cd0 <line:52:9> 'int' 3
              | `-BinaryOperator 0x14e143d98 <line:53:5, col:24> '<dependent type>' contains-errors '='
              |   |-RecoveryExpr 0x14e143d50 <col:5, col:9> '<dependent type>' contains-errors lvalue
              |   | `-DeclRefExpr 0x14e143d18 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
              |   `-DeclRefExpr 0x14e143d78 <col:24> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
              |-BreakStmt 0x14e143db8 <line:54:5>
              |-CaseStmt 0x14e143de0 <line:55:4, line:56:20>
              | |-IntegerLiteral 0x14e143dc0 <line:55:9> 'int' 4
              | `-BinaryOperator 0x14e143e88 <line:56:5, col:20> '<dependent type>' contains-errors '='
              |   |-RecoveryExpr 0x14e143e40 <col:5, col:9> '<dependent type>' contains-errors lvalue
              |   | `-DeclRefExpr 0x14e143e08 <col:5> 'struct vc_data *' lvalue ParmVar 0x14e128648 'vc' 'struct vc_data *'
              |   `-DeclRefExpr 0x14e143e68 <col:20> 'int' lvalue ParmVar 0x14e1286c8 'on_off' 'int'
              |-BreakStmt 0x14e143ea8 <line:57:5>
              |-CaseStmt 0x14e143ed0 <line:58:4, <invalid sloc>>
              | |-IntegerLiteral 0x14e143eb0 <col:9> 'int' 20
              | `-NullStmt 0x14e143fb0 <<invalid sloc>>
              `-BreakStmt 0x14e143fb8 <line:63:5>
