`-FunctionDecl 0x13d144c00  line:1:12 compat_do_replace 'int (struct net *, int)' static
  |-ParmVarDecl 0x13d128648 <col:30, col:42> col:42 used net 'struct net *'
  |-ParmVarDecl 0x13d1286c0 <col:47, col:52> col:52 __user 'int'
  `-CompoundStmt 0x13d149d60 <line:3:1, line:51:1>
    |-DeclStmt 0x13d144d80 <line:4:2, col:9>
    | `-VarDecl 0x13d144d18 <col:2, col:6> col:6 used ret 'int'
    |-DeclStmt 0x13d144f18 <line:5:2, col:32>
    | |-RecordDecl 0x13d144d98 <col:2, col:9> col:9 struct compat_arpt_replace
    | `-VarDecl 0x13d144e98 <col:2, col:29> col:29 invalid tmp 'struct compat_arpt_replace'
    |-DeclStmt 0x13d145118 <line:6:2, col:31>
    | |-RecordDecl 0x13d144f30 <col:2, col:9> col:9 struct xt_table_info
    | `-VarDecl 0x13d145098 <col:2, col:24> col:24 used newinfo 'struct xt_table_info *'
    |-DeclStmt 0x13d1451b0 <line:7:2, col:21>
    | `-VarDecl 0x13d145148 <col:2, col:8> col:8 used loc_cpu_entry 'void *'
    |-DeclStmt 0x13d1453b8 <line:8:2, col:25>
    | |-RecordDecl 0x13d1451c8 <col:2, col:9> col:9 struct arpt_entry
    | `-VarDecl 0x13d145338 <col:2, col:21> col:21 used iter 'struct arpt_entry *'
    |-IfStmt 0x13d145768 <line:10:2, line:11:11>
    | |-BinaryOperator 0x13d1456a0 <line:10:6, col:49> 'int' contains-errors '!='
    | | |-CallExpr 0x13d145668 <col:6, col:44> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13d145500 <col:6> 'int ()' Function 0x13d145448 'copy_from_user' 'int ()'
    | | | |-UnaryOperator 0x13d145540 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x13d145520 <col:22> '<dependent type>' contains-errors lvalue
    | | | |-DeclRefExpr 0x13d145648 <col:27> 'struct arpt_entry *' lvalue Var 0x13d145338 'iter' 'struct arpt_entry *'
    | | | `-UnaryExprOrTypeTraitExpr 0x13d1455b0 <col:33, col:43> 'unsigned long' contains-errors sizeof
    | | |   `-ParenExpr 0x13d145590 <col:39, col:43> '<dependent type>' contains-errors lvalue
    | | |     `-RecoveryExpr 0x13d145570 <col:40> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13d145608 <col:49> 'int' 0
    | `-ReturnStmt 0x13d145758 <line:11:3, col:11>
    |   `-UnaryOperator 0x13d145740 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d145728 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d145708 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d145af8 <line:14:2, line:15:11>
    | |-BinaryOperator 0x13d145a30 <line:14:6, col:46> 'int' contains-errors '>='
    | | |-CXXDependentScopeMemberExpr 0x13d1457a8 <col:6, col:10> '<dependent type>' contains-errors lvalue .size
    | | | `-RecoveryExpr 0x13d145788 <col:6> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x13d145a10 <col:18, col:46> '<dependent type>' contains-errors '/'
    | |   |-RecoveryExpr 0x13d1459b8 <col:18> '<dependent type>' contains-errors lvalue
    | |   `-CallExpr 0x13d1459f0 <col:28, col:46> 'int'
    | |     `-ImplicitCastExpr 0x13d1459d8 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | |       `-DeclRefExpr 0x13d1458e8 <col:28> 'int ()' Function 0x13d145830 'num_possible_cpus' 'int ()'
    | `-ReturnStmt 0x13d145ae8 <line:15:3, col:11>
    |   `-UnaryOperator 0x13d145ad0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d145ab8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d145a98 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d1471c0 <line:16:2, line:17:11>
    | |-RecoveryExpr 0x13d1470f8 <line:16:6, col:61> '_Bool' contains-errors
    | `-ReturnStmt 0x13d1471b0 <line:17:3, col:11>
    |   `-UnaryOperator 0x13d147198 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d147180 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d147160 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d147390 <line:19:2, col:40> 'struct xt_table_info *' contains-errors '='
    | |-DeclRefExpr 0x13d1471e0 <col:2> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    | `-CallExpr 0x13d147368 <col:12, col:40> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d1472e0 <col:12> 'int ()' Function 0x13d147228 'xt_alloc_table_info' 'int ()'
    |   `-CXXDependentScopeMemberExpr 0x13d147320 <col:32, col:36> '<dependent type>' contains-errors lvalue .size
    |     `-RecoveryExpr 0x13d147300 <col:32> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d1474a8 <line:20:2, line:21:11>
    | |-UnaryOperator 0x13d1473e8 <line:20:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x13d1473d0 <col:7> 'struct xt_table_info *' <LValueToRValue>
    | |   `-DeclRefExpr 0x13d1473b0 <col:7> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    | `-ReturnStmt 0x13d147498 <line:21:3, col:11>
    |   `-UnaryOperator 0x13d147480 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13d147468 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13d147448 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13d1476b8 <line:24:2, col:57> 'void *' contains-errors '='
    | |-DeclRefExpr 0x13d1474c8 <col:2> 'void *' lvalue Var 0x13d145148 'loc_cpu_entry' 'void *'
    | `-ArraySubscriptExpr 0x13d147698 <col:18, col:57> '<dependent type>' contains-errors lvalue
    |   |-ImplicitCastExpr 0x13d147680 <col:18, col:27> '<dependent type>' contains-errors <LValueToRValue>
    |   | `-RecoveryExpr 0x13d147520 <col:18, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x13d1474e8 <col:18> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    |   `-CallExpr 0x13d147660 <col:35, col:56> 'int'
    |     `-ImplicitCastExpr 0x13d147648 <col:35> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x13d147628 <col:35> 'int ()' Function 0x13d147570 'raw_smp_processor_id' 'int ()'
    |-IfStmt 0x13d147ae0 <line:25:2, line:28:2>
    | |-BinaryOperator 0x13d147940 <line:25:6, col:69> 'int' contains-errors '!='
    | | |-CallExpr 0x13d147908 <col:6, col:64> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13d1476d8 <col:6> 'int ()' Function 0x13d145448 'copy_from_user' 'int ()'
    | | | |-DeclRefExpr 0x13d1476f8 <col:21> 'void *' lvalue Var 0x13d145148 'loc_cpu_entry' 'void *'
    | | | |-BinaryOperator 0x13d1478e8 <col:36, col:53> '<dependent type>' contains-errors '+'
    | | | | |-RecoveryExpr 0x13d1478c8 <col:36> '<dependent type>' contains-errors lvalue
    | | | | `-UnaryExprOrTypeTraitExpr 0x13d147770 <col:43, col:53> 'unsigned long' contains-errors sizeof
    | | | |   `-ParenExpr 0x13d147750 <col:49, col:53> '<dependent type>' contains-errors lvalue
    | | | |     `-RecoveryExpr 0x13d147730 <col:50> '<dependent type>' contains-errors lvalue
    | | | `-CXXDependentScopeMemberExpr 0x13d1477d0 <col:56, col:60> '<dependent type>' contains-errors lvalue .size
    | | |   `-RecoveryExpr 0x13d1477b0 <col:56> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x13d147850 <col:69> 'int' 0
    | `-CompoundStmt 0x13d147ac0 <col:72, line:28:2>
    |   |-BinaryOperator 0x13d147a38 <line:26:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x13d147960 <col:3> 'int' lvalue Var 0x13d144d18 'ret' 'int'
    |   | `-UnaryOperator 0x13d147a20 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x13d147a08 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x13d1479e8 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x13d147aa8 <line:27:3, col:8> 'free_newinfo' 0x13d147a58
    |-BinaryOperator 0x13d149000 <line:30:2, line:33:23> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d147b00 <line:30:2> 'int' lvalue Var 0x13d144d18 'ret' 'int'
    | `-CallExpr 0x13d147f98 <col:8, line:33:23> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d147c00 <line:30:8> 'int ()' Function 0x13d147b48 'translate_compat_table' 'int ()'
    |   |-CXXDependentScopeMemberExpr 0x13d147c40 <col:31, col:35> '<dependent type>' contains-errors lvalue .name
    |   | `-RecoveryExpr 0x13d147c20 <col:31> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x13d147ca8 <col:41, col:45> '<dependent type>' contains-errors lvalue .valid_hooks
    |   | `-RecoveryExpr 0x13d147c88 <col:41> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x13d147d70 <line:31:10, col:11> 'struct xt_table_info **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x13d147cf0 <col:11> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    |   |-UnaryOperator 0x13d147de0 <col:20, col:21> 'void **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x13d147d88 <col:21> 'void *' lvalue Var 0x13d145148 'loc_cpu_entry' 'void *'
    |   |-CXXDependentScopeMemberExpr 0x13d147e18 <col:36, col:40> '<dependent type>' contains-errors lvalue .size
    |   | `-RecoveryExpr 0x13d147df8 <col:36> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x13d147e80 <line:32:10, col:14> '<dependent type>' contains-errors lvalue .num_entries
    |   | `-RecoveryExpr 0x13d147e60 <col:10> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x13d147ee8 <col:27, col:31> '<dependent type>' contains-errors lvalue .hook_entry
    |   | `-RecoveryExpr 0x13d147ec8 <col:27> '<dependent type>' contains-errors lvalue
    |   `-CXXDependentScopeMemberExpr 0x13d147f50 <line:33:10, col:14> '<dependent type>' contains-errors lvalue .underflow
    |     `-RecoveryExpr 0x13d147f30 <col:10> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d1490b0 <line:34:2, line:35:8>
    | |-BinaryOperator 0x13d149078 <line:34:6, col:13> 'int' '!='
    | | |-ImplicitCastExpr 0x13d149060 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x13d149020 <col:6> 'int' lvalue Var 0x13d144d18 'ret' 'int'
    | | `-IntegerLiteral 0x13d149040 <col:13> 'int' 0
    | `-GotoStmt 0x13d149098 <line:35:3, col:8> 'free_newinfo' 0x13d147a58
    |-CallExpr 0x13d149248 <line:37:2, col:16> 'int'
    | |-ImplicitCastExpr 0x13d149230 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13d1491b0 <col:2> 'int ()' Function 0x13d1490f8 'duprintf' 'int ()'
    | `-ImplicitCastExpr 0x13d149270 <col:11> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x13d149210 <col:11> 'char[4]' lvalue "STR"
    |-BinaryOperator 0x13d149700 <line:39:2, line:40:49> 'int' contains-errors '='
    | |-DeclRefExpr 0x13d149288 <line:39:2> 'int' lvalue Var 0x13d144d18 'ret' 'int'
    | `-CallExpr 0x13d1496b0 <col:8, line:40:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d149388 <line:39:8> 'int ()' Function 0x13d1492d0 '__do_replace' 'int ()'
    |   |-DeclRefExpr 0x13d1493a8 <col:21> 'struct net *' lvalue ParmVar 0x13d128648 'net' 'struct net *'
    |   |-CXXDependentScopeMemberExpr 0x13d1493e8 <col:26, col:30> '<dependent type>' contains-errors lvalue .name
    |   | `-RecoveryExpr 0x13d1493c8 <col:26> '<dependent type>' contains-errors lvalue
    |   |-CXXDependentScopeMemberExpr 0x13d149450 <col:36, col:40> '<dependent type>' contains-errors lvalue .valid_hooks
    |   | `-RecoveryExpr 0x13d149430 <col:36> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13d149498 <col:53> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    |   |-CXXDependentScopeMemberExpr 0x13d1494d8 <line:40:7, col:11> '<dependent type>' contains-errors lvalue .num_counters
    |   | `-RecoveryExpr 0x13d1494b8 <col:7> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x13d149688 <col:25, col:48> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x13d149600 <col:25> 'int ()' Function 0x13d149548 'compat_ptr' 'int ()'
    |     `-CXXDependentScopeMemberExpr 0x13d149640 <col:36, col:40> '<dependent type>' contains-errors lvalue .counters
    |       `-RecoveryExpr 0x13d149620 <col:36> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x13d1497c0 <line:41:2, line:42:8>
    | |-ImplicitCastExpr 0x13d149740 <line:41:6> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x13d149720 <col:6> 'int' lvalue Var 0x13d144d18 'ret' 'int'
    | `-GotoStmt 0x13d1497a8 <line:42:3, col:8> 'free_newinfo_untrans' 0x13d149758
    |-ReturnStmt 0x13d149800 <line:43:2, col:9>
    | `-IntegerLiteral 0x13d1497e0 <col:9> 'int' 0
    |-LabelStmt 0x13d1499e8 <line:45:2, line:46:53> 'free_newinfo_untrans'
    | `-CallExpr 0x13d1499b0 <col:2, col:53> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13d1498f0 <col:2> 'int ()' Function 0x13d149838 'xt_entry_foreach' 'int ()'
    |   |-DeclRefExpr 0x13d149910 <col:19> 'struct arpt_entry *' lvalue Var 0x13d145338 'iter' 'struct arpt_entry *'
    |   |-DeclRefExpr 0x13d149930 <col:25> 'void *' lvalue Var 0x13d145148 'loc_cpu_entry' 'void *'
    |   `-RecoveryExpr 0x13d149988 <col:40, col:49> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13d149950 <col:40> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    |-CallExpr 0x13d149b40 <line:47:3, col:21> 'int'
    | |-ImplicitCastExpr 0x13d149b28 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13d149ae8 <col:3> 'int ()' Function 0x13d149a30 'cleanup_entry' 'int ()'
    | `-ImplicitCastExpr 0x13d149b68 <col:17> 'struct arpt_entry *' <LValueToRValue>
    |   `-DeclRefExpr 0x13d149b08 <col:17> 'struct arpt_entry *' lvalue Var 0x13d145338 'iter' 'struct arpt_entry *'
    |-LabelStmt 0x13d149cf8 <line:48:2, line:49:28> 'free_newinfo'
    | `-CallExpr 0x13d149cb8 <col:2, col:28> 'int'
    |   |-ImplicitCastExpr 0x13d149ca0 <col:2> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x13d149c60 <col:2> 'int ()' Function 0x13d149ba8 'xt_free_table_info' 'int ()'
    |   `-ImplicitCastExpr 0x13d149ce0 <col:21> 'struct xt_table_info *' <LValueToRValue>
    |     `-DeclRefExpr 0x13d149c80 <col:21> 'struct xt_table_info *' lvalue Var 0x13d145098 'newinfo' 'struct xt_table_info *'
    `-ReturnStmt 0x13d149d50 <line:50:2, col:9>
      `-ImplicitCastExpr 0x13d149d38 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13d149d18 <col:9> 'int' lvalue Var 0x13d144d18 'ret' 'int'
