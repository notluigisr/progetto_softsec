`-FunctionDecl 0x140128288  line:1:1 invalid header_put_marker 'int (int *, int)'
  |-ParmVarDecl 0x140128128 <col:20, col:32> col:32 referenced invalid psf 'int *'
  |-ParmVarDecl 0x1401281a8 <col:37, col:41> col:41 used x 'int'
  `-CompoundStmt 0x140141e10 <line:2:1, line:8:1>
    |-IfStmt 0x140141de8 <line:2:3, line:7:3>
    | |-BinaryOperator 0x1401285f0 <line:2:7, col:54> 'int' contains-errors '<'
    | | |-CXXDependentScopeMemberExpr 0x140128360 <col:7, col:12> '<dependent type>' contains-errors lvalue ->headindex
    | | | `-RecoveryExpr 0x140128340 <col:7> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x1401285d0 <col:24, col:54> '<dependent type>' contains-errors '-'
    | |   |-CallExpr 0x140128588 <col:24, col:50> '<dependent type>' contains-errors
    | |   | |-DeclRefExpr 0x140128500 <col:24> 'int ()' Function 0x140128448 'SIGNED_SIZEOF' 'int ()'
    | |   | `-CXXDependentScopeMemberExpr 0x140128540 <col:39, col:44> '<dependent type>' contains-errors lvalue ->header
    | |   |   `-RecoveryExpr 0x140128520 <col:39> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x1401285b0 <col:54> 'int' 4
    | `-CompoundStmt 0x140141db8 <line:3:2, line:7:3>
    |   |-BinaryOperator 0x140128778 <line:3:4, col:37> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x140128738 <col:4, col:33> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x140128720 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x140128658 <col:4, col:9> '<dependent type>' contains-errors lvalue ->header
    |   | | |   `-RecoveryExpr 0x140128630 <col:4> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x140128610 <col:4> 'int *' lvalue ParmVar 0x140128128 'psf' 'int *'
    |   | | `-UnaryOperator 0x140128708 <col:17, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-CXXDependentScopeMemberExpr 0x1401286c0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->headindex
    |   | |     `-RecoveryExpr 0x1401286a0 <col:17> '<dependent type>' contains-errors lvalue
    |   | `-DeclRefExpr 0x140128758 <col:37> 'int' lvalue ParmVar 0x1401281a8 'x' 'int'
    |   |-BinaryOperator 0x140141998 <line:4:3, col:43> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x1401418e0 <col:3, col:32> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x1401418c8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x140141800 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header
    |   | | |   `-RecoveryExpr 0x1401287b8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x140128798 <col:3> 'int *' lvalue ParmVar 0x140128128 'psf' 'int *'
    |   | | `-UnaryOperator 0x1401418b0 <col:16, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-CXXDependentScopeMemberExpr 0x140141868 <col:16, col:21> '<dependent type>' contains-errors lvalue ->headindex
    |   | |     `-RecoveryExpr 0x140141848 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-ParenExpr 0x140141978 <col:36, col:43> 'int'
    |   |   `-BinaryOperator 0x140141958 <col:37, col:42> 'int' '>>'
    |   |     |-ImplicitCastExpr 0x140141940 <col:37> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x140141900 <col:37> 'int' lvalue ParmVar 0x1401281a8 'x' 'int'
    |   |     `-IntegerLiteral 0x140141920 <col:42> 'int' 8
    |   |-BinaryOperator 0x140141b98 <line:5:3, col:44> '<dependent type>' contains-errors '='
    |   | |-ArraySubscriptExpr 0x140141ae0 <col:3, col:32> '<dependent type>' contains-errors lvalue
    |   | | |-ImplicitCastExpr 0x140141ac8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |   | | | `-CXXDependentScopeMemberExpr 0x140141a00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header
    |   | | |   `-RecoveryExpr 0x1401419d8 <col:3> '<dependent type>' contains-errors lvalue
    |   | | |     `-DeclRefExpr 0x1401419b8 <col:3> 'int *' lvalue ParmVar 0x140128128 'psf' 'int *'
    |   | | `-UnaryOperator 0x140141ab0 <col:16, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |   | |   `-CXXDependentScopeMemberExpr 0x140141a68 <col:16, col:21> '<dependent type>' contains-errors lvalue ->headindex
    |   | |     `-RecoveryExpr 0x140141a48 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-ParenExpr 0x140141b78 <col:36, col:44> 'int'
    |   |   `-BinaryOperator 0x140141b58 <col:37, col:42> 'int' '>>'
    |   |     |-ImplicitCastExpr 0x140141b40 <col:37> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x140141b00 <col:37> 'int' lvalue ParmVar 0x1401281a8 'x' 'int'
    |   |     `-IntegerLiteral 0x140141b20 <col:42> 'int' 16
    |   `-BinaryOperator 0x140141d98 <line:6:3, col:44> '<dependent type>' contains-errors '='
    |     |-ArraySubscriptExpr 0x140141ce0 <col:3, col:32> '<dependent type>' contains-errors lvalue
    |     | |-ImplicitCastExpr 0x140141cc8 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>
    |     | | `-CXXDependentScopeMemberExpr 0x140141c00 <col:3, col:8> '<dependent type>' contains-errors lvalue ->header
    |     | |   `-RecoveryExpr 0x140141bd8 <col:3> '<dependent type>' contains-errors lvalue
    |     | |     `-DeclRefExpr 0x140141bb8 <col:3> 'int *' lvalue ParmVar 0x140128128 'psf' 'int *'
    |     | `-UnaryOperator 0x140141cb0 <col:16, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow
    |     |   `-CXXDependentScopeMemberExpr 0x140141c68 <col:16, col:21> '<dependent type>' contains-errors lvalue ->headindex
    |     |     `-RecoveryExpr 0x140141c48 <col:16> '<dependent type>' contains-errors lvalue
    |     `-ParenExpr 0x140141d78 <col:36, col:44> 'int'
    |       `-BinaryOperator 0x140141d58 <col:37, col:42> 'int' '>>'
    |         |-ImplicitCastExpr 0x140141d40 <col:37> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x140141d00 <col:37> 'int' lvalue ParmVar 0x1401281a8 'x' 'int'
    |         `-IntegerLiteral 0x140141d20 <col:42> 'int' 24
    `-NullStmt 0x140141e08 <line:7:5>
