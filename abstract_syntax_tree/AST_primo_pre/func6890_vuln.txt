`-FunctionDecl 0x1478266d8  line:1:1 asn1_length_decode 'int (struct asn1_ctx *, unsigned int *, unsigned int *)'
  |-ParmVarDecl 0x14780e248 <col:20, col:37> col:37 used ctx 'struct asn1_ctx *'
  |-ParmVarDecl 0x14780e2f8 <col:42, col:56> col:56 used def 'unsigned int *'
  |-ParmVarDecl 0x14780e378 <col:61, col:75> col:75 used len 'unsigned int *'
  `-CompoundStmt 0x1478275c8 <line:2:1, line:29:1>
    |-DeclStmt 0x1478268f8 <line:3:2, col:23>
    | |-VarDecl 0x1478267f8 <col:2, col:16> col:16 used ch 'unsigned char'
    | `-VarDecl 0x147826878 <col:2, col:20> col:20 used cnt 'unsigned char'
    |-IfStmt 0x147826bc8 <line:5:2, line:6:10>
    | |-UnaryOperator 0x147826b80 <line:5:6, col:33> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x147826b38 <col:7, col:33> 'int'
    | |   |-ImplicitCastExpr 0x147826b20 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x147826a40 <col:7> 'int ()' Function 0x147826988 'asn1_octet_decode' 'int ()'
    | |   |-ImplicitCastExpr 0x147826b68 <col:25> 'struct asn1_ctx *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x147826a60 <col:25> 'struct asn1_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct asn1_ctx *'
    | |   `-UnaryOperator 0x147826ad0 <col:30, col:31> 'unsigned char *' prefix '&' cannot overflow
    | |     `-DeclRefExpr 0x147826a80 <col:31> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    | `-ReturnStmt 0x147826bb8 <line:6:3, col:10>
    |   `-IntegerLiteral 0x147826b98 <col:10> 'int' 0
    |-IfStmt 0x147827568 <line:8:2, line:27:2> has_else
    | |-BinaryOperator 0x147826c58 <line:8:6, col:12> 'int' '=='
    | | |-ImplicitCastExpr 0x147826c40 <col:6> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x147826c28 <col:6> 'unsigned char' <LValueToRValue>
    | | |   `-DeclRefExpr 0x147826be8 <col:6> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    | | `-IntegerLiteral 0x147826c08 <col:12> 'int' 128
    | |-BinaryOperator 0x147826d00 <line:9:3, col:10> 'unsigned int' '='
    | | |-UnaryOperator 0x147826cb0 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    | | | `-ImplicitCastExpr 0x147826c98 <col:4> 'unsigned int *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x147826c78 <col:4> 'unsigned int *' lvalue ParmVar 0x14780e2f8 'def' 'unsigned int *'
    | | `-ImplicitCastExpr 0x147826ce8 <col:10> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x147826cc8 <col:10> 'int' 0
    | `-CompoundStmt 0x147827548 <line:10:7, line:27:2>
    |   |-BinaryOperator 0x147826da8 <line:11:3, col:10> 'unsigned int' '='
    |   | |-UnaryOperator 0x147826d58 <col:3, col:4> 'unsigned int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x147826d40 <col:4> 'unsigned int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x147826d20 <col:4> 'unsigned int *' lvalue ParmVar 0x14780e2f8 'def' 'unsigned int *'
    |   | `-ImplicitCastExpr 0x147826d90 <col:10> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x147826d70 <col:10> 'int' 1
    |   `-IfStmt 0x147827518 <line:13:3, line:26:3> has_else
    |     |-BinaryOperator 0x147826e38 <line:13:7, col:12> 'int' '<'
    |     | |-ImplicitCastExpr 0x147826e20 <col:7> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x147826e08 <col:7> 'unsigned char' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x147826dc8 <col:7> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    |     | `-IntegerLiteral 0x147826de8 <col:12> 'int' 128
    |     |-BinaryOperator 0x147826ef8 <line:14:4, col:11> 'unsigned int' '='
    |     | |-UnaryOperator 0x147826e90 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
    |     | | `-ImplicitCastExpr 0x147826e78 <col:5> 'unsigned int *' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x147826e58 <col:5> 'unsigned int *' lvalue ParmVar 0x14780e378 'len' 'unsigned int *'
    |     | `-ImplicitCastExpr 0x147826ee0 <col:11> 'unsigned int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x147826ec8 <col:11> 'unsigned char' <LValueToRValue>
    |     |     `-DeclRefExpr 0x147826ea8 <col:11> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    |     `-CompoundStmt 0x1478274f0 <line:15:8, line:26:3>
    |       |-BinaryOperator 0x147827048 <line:16:4, col:36> 'unsigned char' '='
    |       | |-DeclRefExpr 0x147826f18 <col:4> 'unsigned char' lvalue Var 0x147826878 'cnt' 'unsigned char'
    |       | `-CStyleCastExpr 0x147827020 <col:10, col:36> 'unsigned char' <IntegralCast>
    |       |   `-ParenExpr 0x147827000 <col:26, col:36> 'int'
    |       |     `-BinaryOperator 0x147826fa8 <col:27, col:32> 'int' '&'
    |       |       |-ImplicitCastExpr 0x147826f90 <col:27> 'int' <IntegralCast>
    |       |       | `-ImplicitCastExpr 0x147826f78 <col:27> 'unsigned char' <LValueToRValue>
    |       |       |   `-DeclRefExpr 0x147826f38 <col:27> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    |       |       `-IntegerLiteral 0x147826f58 <col:32> 'int' 127
    |       |-BinaryOperator 0x1478270f0 <line:17:4, col:11> 'unsigned int' '='
    |       | |-UnaryOperator 0x1478270a0 <col:4, col:5> 'unsigned int' lvalue prefix '*' cannot overflow
    |       | | `-ImplicitCastExpr 0x147827088 <col:5> 'unsigned int *' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x147827068 <col:5> 'unsigned int *' lvalue ParmVar 0x14780e378 'len' 'unsigned int *'
    |       | `-ImplicitCastExpr 0x1478270d8 <col:11> 'unsigned int' <IntegralCast>
    |       |   `-IntegerLiteral 0x1478270b8 <col:11> 'int' 0
    |       `-WhileStmt 0x1478274d0 <line:19:4, line:25:4>
    |         |-BinaryOperator 0x147827180 <line:19:11, col:17> 'int' '>'
    |         | |-ImplicitCastExpr 0x147827168 <col:11> 'int' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x147827150 <col:11> 'unsigned char' <LValueToRValue>
    |         | |   `-DeclRefExpr 0x147827110 <col:11> 'unsigned char' lvalue Var 0x147826878 'cnt' 'unsigned char'
    |         | `-IntegerLiteral 0x147827130 <col:17> 'int' 0
    |         `-CompoundStmt 0x1478274a0 <col:20, line:25:4>
    |           |-IfStmt 0x1478272c0 <line:20:5, line:21:13>
    |           | |-UnaryOperator 0x147827278 <line:20:9, col:36> 'int' prefix '!' cannot overflow
    |           | | `-CallExpr 0x147827230 <col:10, col:36> 'int'
    |           | |   |-ImplicitCastExpr 0x147827218 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |           | |   | `-DeclRefExpr 0x1478271a0 <col:10> 'int ()' Function 0x147826988 'asn1_octet_decode' 'int ()'
    |           | |   |-ImplicitCastExpr 0x147827260 <col:28> 'struct asn1_ctx *' <LValueToRValue>
    |           | |   | `-DeclRefExpr 0x1478271c0 <col:28> 'struct asn1_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct asn1_ctx *'
    |           | |   `-UnaryOperator 0x147827200 <col:33, col:34> 'unsigned char *' prefix '&' cannot overflow
    |           | |     `-DeclRefExpr 0x1478271e0 <col:34> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    |           | `-ReturnStmt 0x1478272b0 <line:21:6, col:13>
    |           |   `-IntegerLiteral 0x147827290 <col:13> 'int' 0
    |           |-CompoundAssignOperator 0x147827368 <line:22:5, col:14> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |           | |-UnaryOperator 0x147827318 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    |           | | `-ImplicitCastExpr 0x147827300 <col:6> 'unsigned int *' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x1478272e0 <col:6> 'unsigned int *' lvalue ParmVar 0x14780e378 'len' 'unsigned int *'
    |           | `-IntegerLiteral 0x147827330 <col:14> 'int' 8
    |           |-CompoundAssignOperator 0x147827438 <line:23:5, col:13> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |           | |-UnaryOperator 0x1478273d0 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
    |           | | `-ImplicitCastExpr 0x1478273b8 <col:6> 'unsigned int *' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x147827398 <col:6> 'unsigned int *' lvalue ParmVar 0x14780e378 'len' 'unsigned int *'
    |           | `-ImplicitCastExpr 0x147827420 <col:13> 'unsigned int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x147827408 <col:13> 'unsigned char' <LValueToRValue>
    |           |     `-DeclRefExpr 0x1478273e8 <col:13> 'unsigned char' lvalue Var 0x1478267f8 'ch' 'unsigned char'
    |           `-UnaryOperator 0x147827488 <line:24:5, col:8> 'unsigned char' postfix '--' cannot overflow
    |             `-DeclRefExpr 0x147827468 <col:5> 'unsigned char' lvalue Var 0x147826878 'cnt' 'unsigned char'
    `-ReturnStmt 0x1478275b8 <line:28:2, col:9>
      `-IntegerLiteral 0x147827598 <col:9> 'int' 1
