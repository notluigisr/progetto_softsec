`-FunctionDecl 0x149928118  line:1:1 find_available_user 'int ()'
  `-CompoundStmt 0x149941970 <line:2:1, line:17:1>
    |-DeclStmt 0x1499282c0 <line:3:2, col:14>
    | `-VarDecl 0x149928220 <col:2, col:13> col:6 used ret 'int' cinit
    |   `-UnaryOperator 0x1499282a8 <col:12, col:13> 'int' prefix '-'
    |     `-IntegerLiteral 0x149928288 <col:13> 'int' 1
    |-DeclStmt 0x149928358 <line:4:2, col:7>
    | `-VarDecl 0x1499282f0 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x1499418f0 <line:5:2, line:15:2>
    | |-BinaryOperator 0x1499283b0 <line:5:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x149928370 <col:7> 'int' lvalue Var 0x1499282f0 'i' 'int'
    | | `-IntegerLiteral 0x149928390 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x149928460 <col:14, col:18> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x1499283d0 <col:14> 'int' lvalue Var 0x1499282f0 'i' 'int'
    | | `-RecoveryExpr 0x149928440 <col:18> '<dependent type>' contains-errors lvalue
    | |-UnaryOperator 0x1499284a0 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x149928480 <col:29> 'int' lvalue Var 0x1499282f0 'i' 'int'
    | `-CompoundStmt 0x1499418d8 <col:34, line:15:2>
    |   `-IfStmt 0x1499418b8 <line:7:3, line:14:3>
    |     |-RecoveryExpr 0x1499286c0 <line:7:7, col:78> '_Bool' contains-errors
    |     `-CompoundStmt 0x149941898 <col:88, line:14:3>
    |       |-BinaryOperator 0x149941870 <line:12:4, col:10> 'int' '='
    |       | |-DeclRefExpr 0x149941818 <col:4> 'int' lvalue Var 0x149928220 'ret' 'int'
    |       | `-ImplicitCastExpr 0x149941858 <col:10> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x149941838 <col:10> 'int' lvalue Var 0x1499282f0 'i' 'int'
    |       `-BreakStmt 0x149941890 <line:13:4>
    `-ReturnStmt 0x149941960 <line:16:2, col:9>
      `-ImplicitCastExpr 0x149941948 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x149941928 <col:9> 'int' lvalue Var 0x149928220 'ret' 'int'
