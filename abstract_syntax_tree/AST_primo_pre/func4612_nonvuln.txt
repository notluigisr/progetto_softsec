`-FunctionDecl 0x126128758  line:1:20 rpc_proc_name 'const char *(const struct rpc_task *)' static
  |-ParmVarDecl 0x126128648 <col:34, col:57> col:57 used task 'const struct rpc_task *'
  `-CompoundStmt 0x126140f78 <line:2:1, line:12:1>
    |-DeclStmt 0x126140ce0 <line:3:2, col:57>
    | |-RecordDecl 0x126140a50 <col:8, col:15> col:15 struct rpc_procinfo
    | `-VarDecl 0x126140bb8 <col:2, col:49> col:29 used proc 'const struct rpc_procinfo *' cinit
    |   `-CXXDependentScopeMemberExpr 0x126140c80 <col:36, col:49> '<dependent type>' contains-errors lvalue .rpc_proc
    |     `-RecoveryExpr 0x126140c58 <col:36, col:42> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x126140c20 <col:36> 'const struct rpc_task *' lvalue ParmVar 0x126128648 'task' 'const struct rpc_task *'
    `-IfStmt 0x126140f48 <line:5:2, line:11:10> has_else
      |-ImplicitCastExpr 0x126140d18 <line:5:6> 'const struct rpc_procinfo *' contains-errors <LValueToRValue>
      | `-DeclRefExpr 0x126140cf8 <col:6> 'const struct rpc_procinfo *' contains-errors lvalue Var 0x126140bb8 'proc' 'const struct rpc_procinfo *'
      |-CompoundStmt 0x126140ed0 <col:12, line:10:2>
      | `-IfStmt 0x126140ea0 <line:6:3, line:9:11> has_else
      |   |-RecoveryExpr 0x126140d68 <line:6:7, col:13> '<dependent type>' contains-errors lvalue
      |   | `-DeclRefExpr 0x126140d30 <col:7> 'const struct rpc_procinfo *' contains-errors lvalue Var 0x126140bb8 'proc' 'const struct rpc_procinfo *'
      |   |-ReturnStmt 0x126140df0 <line:7:4, col:17>
      |   | `-RecoveryExpr 0x126140dc8 <col:11, col:17> '<dependent type>' contains-errors lvalue
      |   |   `-DeclRefExpr 0x126140d90 <col:11> 'const struct rpc_procinfo *' contains-errors lvalue Var 0x126140bb8 'proc' 'const struct rpc_procinfo *'
      |   `-ReturnStmt 0x126140e90 <line:9:4, col:11>
      |     `-ImplicitCastExpr 0x126140e78 <col:11> 'const char *' <NoOp>
      |       `-ImplicitCastExpr 0x126140e60 <col:11> 'char *' <ArrayToPointerDecay>
      |         `-StringLiteral 0x126140e40 <col:11> 'char[4]' lvalue "STR"
      `-ReturnStmt 0x126140f38 <line:11:3, col:10>
        `-ImplicitCastExpr 0x126140f20 <col:10> 'const char *' <NoOp>
          `-ImplicitCastExpr 0x126140f08 <col:10> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x126140ee8 <col:10> 'char[4]' lvalue "STR"
