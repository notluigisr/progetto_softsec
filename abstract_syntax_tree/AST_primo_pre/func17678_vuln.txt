`-FunctionDecl 0x139928750  line:1:13 ax25_kill_by_device 'void (struct net_device *)' static
  |-ParmVarDecl 0x139928648 <col:33, col:52> col:52 used dev 'struct net_device *'
  `-CompoundStmt 0x139942e20 <line:2:1, line:29:1>
    |-DeclStmt 0x139940c78 <line:5:2, col:17>
    | |-RecordDecl 0x139940a90 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x139940bf8 <col:2, col:15> col:15 used sk 'struct sock *'
    |-IfStmt 0x139940ef0 <line:7:2, line:8:3>
    | |-RecoveryExpr 0x139940ec0 <line:7:6, col:44> '_Bool' contains-errors
    | `-ReturnStmt 0x139940ee0 <line:8:3>
    |-CallExpr 0x1399410a0 <line:10:2, col:30> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x139940ff0 <col:2> 'int ()' Function 0x139940f38 'spin_lock_bh' 'int ()'
    | `-UnaryOperator 0x139941088 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   `-RecoveryExpr 0x139941068 <col:16> '<dependent type>' contains-errors lvalue
    |-LabelStmt 0x139941318 <line:11:1, line:12:29> 'again'
    | `-CallExpr 0x139941298 <col:2, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x1399411a8 <col:2> 'int ()' Function 0x1399410f0 'ax25_for_each' 'int ()'
    |   |-RecoveryExpr 0x139941240 <col:16> '<dependent type>' contains-errors lvalue
    |   `-UnaryOperator 0x139941280 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
    |     `-RecoveryExpr 0x139941260 <col:20> '<dependent type>' contains-errors lvalue
    `-CompoundStmt 0x139942de8 <col:31, line:27:2>
      `-IfStmt 0x139942dc8 <line:13:3, line:26:3>
        |-BinaryOperator 0x139941458 <line:13:7, col:22> 'int' contains-errors '=='
        | |-CXXDependentScopeMemberExpr 0x1399413f0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->ax25_dev
        | | `-RecoveryExpr 0x1399413d0 <col:7> '<dependent type>' contains-errors lvalue
        | `-RecoveryExpr 0x139941438 <col:22> '<dependent type>' contains-errors lvalue
        `-CompoundStmt 0x139942d80 <col:32, line:26:3>
          |-BinaryOperator 0x139941580 <line:14:4, col:12> 'struct sock *' contains-errors '='
          | |-DeclRefExpr 0x139941478 <col:4> 'struct sock *' lvalue Var 0x139940bf8 'sk' 'struct sock *'
          | `-CXXDependentScopeMemberExpr 0x139941538 <col:9, col:12> '<dependent type>' contains-errors lvalue ->sk
          |   `-RecoveryExpr 0x139941518 <col:9> '<dependent type>' contains-errors lvalue
          |-CallExpr 0x1399416d8 <line:15:4, col:16> 'int'
          | |-ImplicitCastExpr 0x1399416c0 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x139941680 <col:4> 'int ()' Function 0x1399415c8 'sock_hold' 'int ()'
          | `-ImplicitCastExpr 0x139941700 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x1399416a0 <col:14> 'struct sock *' lvalue Var 0x139940bf8 'sk' 'struct sock *'
          |-CallExpr 0x1399418a8 <line:16:4, col:34> '<dependent type>' contains-errors
          | |-DeclRefExpr 0x1399417f8 <col:4> 'int ()' Function 0x139941740 'spin_unlock_bh' 'int ()'
          | `-UnaryOperator 0x139941890 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow
          |   `-RecoveryExpr 0x139941870 <col:20> '<dependent type>' contains-errors lvalue
          |-CallExpr 0x139942818 <line:17:4, col:16> 'int'
          | |-ImplicitCastExpr 0x139942800 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x1399419b0 <col:4> 'int ()' Function 0x1399418f8 'lock_sock' 'int ()'
          | `-ImplicitCastExpr 0x139942840 <col:14> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x1399419d0 <col:14> 'struct sock *' lvalue Var 0x139940bf8 'sk' 'struct sock *'
          |-CallExpr 0x139942b90 <line:21:4, col:19> 'int'
          | |-ImplicitCastExpr 0x139942b78 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x139942b38 <col:4> 'int ()' Function 0x139942a80 'release_sock' 'int ()'
          | `-ImplicitCastExpr 0x139942bb8 <col:17> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x139942b58 <col:17> 'struct sock *' lvalue Var 0x139940bf8 'sk' 'struct sock *'
          |-CallExpr 0x139942d28 <line:23:4, col:15> 'int'
          | |-ImplicitCastExpr 0x139942d10 <col:4> 'int (*)()' <FunctionToPointerDecay>
          | | `-DeclRefExpr 0x139942cd0 <col:4> 'int ()' Function 0x139942c18 'sock_put' 'int ()'
          | `-ImplicitCastExpr 0x139942d50 <col:13> 'struct sock *' <LValueToRValue>
          |   `-DeclRefExpr 0x139942cf0 <col:13> 'struct sock *' lvalue Var 0x139940bf8 'sk' 'struct sock *'
          `-GotoStmt 0x139942d68 <line:25:4, col:9> 'again' 0x1399412c8
