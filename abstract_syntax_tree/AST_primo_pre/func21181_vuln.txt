`-FunctionDecl 0x14e80e0a8  line:1:5 invalid ssl_parse_serverhello_tlsext 'int (int *, unsigned char **, unsigned char *, int, int *)'
  |-ParmVarDecl 0x14e80dd28 <col:34, col:39> col:39 referenced invalid s 'int *'
  |-ParmVarDecl 0x14e80de10 <col:42, col:58> col:58 used p 'unsigned char **'
  |-ParmVarDecl 0x14e80de90 <col:61, col:76> col:76 used d 'unsigned char *'
  |-ParmVarDecl 0x14e80df10 <col:79, col:83> col:83 used n 'int'
  |-ParmVarDecl 0x14e80df90 <col:86, col:91> col:91 used al 'int *'
  `-CompoundStmt 0x14d8f7930 <line:2:2, line:65:1>
    |-DeclStmt 0x14e80e1f8 <line:3:2, col:21>
    | `-VarDecl 0x14e80e190 <col:2, col:17> col:17 used type 'unsigned short'
    |-DeclStmt 0x14e80e290 <line:4:2, col:21>
    | `-VarDecl 0x14e80e228 <col:2, col:17> col:17 used size 'unsigned short'
    |-DeclStmt 0x14e80e328 <line:5:2, col:20>
    | `-VarDecl 0x14e80e2c0 <col:2, col:17> col:17 used len 'unsigned short'
    |-DeclStmt 0x14d8f5630 <line:6:2, col:26>
    | `-VarDecl 0x14e80e358 <col:2, col:25> col:17 used data 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x14d8f5618 <col:24, col:25> 'unsigned char *' <LValueToRValue>
    |     `-UnaryOperator 0x14d8f5600 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x14e80e3e0 <col:25> 'unsigned char **' <LValueToRValue>
    |         `-DeclRefExpr 0x14e80e3c0 <col:25> 'unsigned char **' lvalue ParmVar 0x14e80de10 'p' 'unsigned char **'
    |-DeclStmt 0x14d8f56e8 <line:8:2, col:27>
    | `-VarDecl 0x14d8f5660 <col:2, col:26> col:6 used tlsext_servername 'int' cinit
    |   `-IntegerLiteral 0x14d8f56c8 <col:26> 'int' 0
    |-IfStmt 0x14d8f5878 <line:10:2, line:11:10>
    | |-BinaryOperator 0x14d8f5828 <line:10:6, col:20> 'int' '>='
    | | |-ImplicitCastExpr 0x14d8f5810 <col:6> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d8f5700 <col:6> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    | | `-ParenExpr 0x14d8f57f0 <col:14, col:20> 'unsigned char *'
    | |   `-BinaryOperator 0x14d8f57d0 <col:15, col:19> 'unsigned char *' '-'
    | |     |-BinaryOperator 0x14d8f5790 <col:15, col:17> 'unsigned char *' '+'
    | |     | |-ImplicitCastExpr 0x14d8f5760 <col:15> 'unsigned char *' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x14d8f5720 <col:15> 'unsigned char *' lvalue ParmVar 0x14e80de90 'd' 'unsigned char *'
    | |     | `-ImplicitCastExpr 0x14d8f5778 <col:17> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x14d8f5740 <col:17> 'int' lvalue ParmVar 0x14e80df10 'n' 'int'
    | |     `-IntegerLiteral 0x14d8f57b0 <col:19> 'int' 2
    | `-ReturnStmt 0x14d8f5868 <line:11:3, col:10>
    |   `-IntegerLiteral 0x14d8f5848 <col:10> 'int' 1
    |-CallExpr 0x14d8f5a98 <line:13:2, col:14> 'int'
    | |-ImplicitCastExpr 0x14d8f5a80 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14d8f59f0 <col:2> 'int ()' Function 0x14d8f5938 'n2s' 'int ()'
    | |-ImplicitCastExpr 0x14d8f5ac8 <col:6> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x14d8f5a10 <col:6> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    | `-ImplicitCastExpr 0x14d8f5af8 <col:11> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x14d8f5ae0 <col:11> 'unsigned short' <LValueToRValue>
    |     `-DeclRefExpr 0x14d8f5a30 <col:11> 'unsigned short' lvalue Var 0x14e80e2c0 'len' 'unsigned short'
    |-WhileStmt 0x14d8f65a8 <line:15:2, line:34:3>
    | |-BinaryOperator 0x14d8f5c38 <line:15:8, col:22> 'int' '<='
    | | |-ImplicitCastExpr 0x14d8f5c20 <col:8> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d8f5b10 <col:8> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    | | `-ParenExpr 0x14d8f5c00 <col:16, col:22> 'unsigned char *'
    | |   `-BinaryOperator 0x14d8f5be0 <col:17, col:21> 'unsigned char *' '-'
    | |     |-BinaryOperator 0x14d8f5ba0 <col:17, col:19> 'unsigned char *' '+'
    | |     | |-ImplicitCastExpr 0x14d8f5b70 <col:17> 'unsigned char *' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x14d8f5b30 <col:17> 'unsigned char *' lvalue ParmVar 0x14e80de90 'd' 'unsigned char *'
    | |     | `-ImplicitCastExpr 0x14d8f5b88 <col:19> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x14d8f5b50 <col:19> 'int' lvalue ParmVar 0x14e80df10 'n' 'int'
    | |     `-IntegerLiteral 0x14d8f5bc0 <col:21> 'int' 4
    | `-CompoundStmt 0x14d8f6570 <line:16:3, line:34:3>
    |   |-CallExpr 0x14d8f5cd0 <line:17:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x14d8f5cb8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d8f5c58 <col:3> 'int ()' Function 0x14d8f5938 'n2s' 'int ()'
    |   | |-ImplicitCastExpr 0x14d8f5d00 <col:7> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14d8f5c78 <col:7> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x14d8f5d30 <col:12> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x14d8f5d18 <col:12> 'unsigned short' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14d8f5c98 <col:12> 'unsigned short' lvalue Var 0x14e80e190 'type' 'unsigned short'
    |   |-CallExpr 0x14d8f5dc0 <line:18:3, col:16> 'int'
    |   | |-ImplicitCastExpr 0x14d8f5da8 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x14d8f5d48 <col:3> 'int ()' Function 0x14d8f5938 'n2s' 'int ()'
    |   | |-ImplicitCastExpr 0x14d8f5df0 <col:7> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x14d8f5d68 <col:7> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x14d8f5e20 <col:12> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x14d8f5e08 <col:12> 'unsigned short' <LValueToRValue>
    |   |     `-DeclRefExpr 0x14d8f5d88 <col:12> 'unsigned short' lvalue Var 0x14e80e228 'size' 'unsigned short'
    |   |-IfStmt 0x14d8f5fe0 <line:20:3, line:21:14>
    |   | |-BinaryOperator 0x14d8f5f90 <line:20:7, col:23> 'int' '>'
    |   | | |-BinaryOperator 0x14d8f5ec0 <col:7, col:12> 'unsigned char *' '+'
    |   | | | |-ImplicitCastExpr 0x14d8f5e78 <col:7> 'unsigned char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x14d8f5e38 <col:7> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    |   | | | `-ImplicitCastExpr 0x14d8f5ea8 <col:12> 'int' <IntegralCast>
    |   | | |   `-ImplicitCastExpr 0x14d8f5e90 <col:12> 'unsigned short' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x14d8f5e58 <col:12> 'unsigned short' lvalue Var 0x14e80e228 'size' 'unsigned short'
    |   | | `-ParenExpr 0x14d8f5f70 <col:19, col:23> 'unsigned char *'
    |   | |   `-BinaryOperator 0x14d8f5f50 <col:20, col:22> 'unsigned char *' '+'
    |   | |     |-ImplicitCastExpr 0x14d8f5f20 <col:20> 'unsigned char *' <LValueToRValue>
    |   | |     | `-DeclRefExpr 0x14d8f5ee0 <col:20> 'unsigned char *' lvalue ParmVar 0x14e80de90 'd' 'unsigned char *'
    |   | |     `-ImplicitCastExpr 0x14d8f5f38 <col:22> 'int' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x14d8f5f00 <col:22> 'int' lvalue ParmVar 0x14e80df10 'n' 'int'
    |   | `-ReturnStmt 0x14d8f5fd0 <line:21:7, col:14>
    |   |   `-IntegerLiteral 0x14d8f5fb0 <col:14> 'int' 1
    |   |-IfStmt 0x14d8f64b0 <line:23:3, line:31:4>
    |   | |-BinaryOperator 0x14d8f6078 <line:23:7, col:15> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x14d8f6000 <col:7> 'unsigned short' lvalue Var 0x14e80e190 'type' 'unsigned short'
    |   | | `-RecoveryExpr 0x14d8f6058 <col:15> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x14d8f6490 <line:24:4, line:31:4>
    |   |   |-IfStmt 0x14d8f6410 <line:25:4, line:29:5>
    |   |   | |-BinaryOperator 0x14d8f6278 <line:25:8, col:45> 'int' contains-errors '||'
    |   |   | | |-BinaryOperator 0x14d8f6208 <col:8, col:30> 'int' contains-errors '=='
    |   |   | | | |-CXXDependentScopeMemberExpr 0x14d8f60b8 <col:8, col:11> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |   |   | | | | `-RecoveryExpr 0x14d8f6098 <col:8> '<dependent type>' contains-errors lvalue
    |   |   | | | `-RecoveryExpr 0x14d8f61e8 <col:30> '<dependent type>' contains-errors lvalue
    |   |   | | `-BinaryOperator 0x14d8f6258 <col:38, col:45> 'int' '>'
    |   |   | |   |-ImplicitCastExpr 0x14d8f6240 <col:38> 'int' <IntegralCast>
    |   |   | |   | `-ImplicitCastExpr 0x14d8f6228 <col:38> 'unsigned short' <LValueToRValue>
    |   |   | |   |   `-DeclRefExpr 0x14d8f6138 <col:38> 'unsigned short' lvalue Var 0x14e80e228 'size' 'unsigned short'
    |   |   | |   `-IntegerLiteral 0x14d8f6158 <col:45> 'int' 0
    |   |   | `-CompoundStmt 0x14d8f63f0 <line:26:5, line:29:5>
    |   |   |   |-BinaryOperator 0x14d8f63a0 <line:27:5, col:11> 'int' contains-errors '='
    |   |   |   | |-UnaryOperator 0x14d8f6368 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |   |   |   | | `-ImplicitCastExpr 0x14d8f6350 <col:6> 'int *' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x14d8f6298 <col:6> 'int *' lvalue ParmVar 0x14e80df90 'al' 'int *'
    |   |   |   | `-RecoveryExpr 0x14d8f6380 <col:11> '<dependent type>' contains-errors lvalue
    |   |   |   `-ReturnStmt 0x14d8f63e0 <line:28:5, col:12>
    |   |   |     `-IntegerLiteral 0x14d8f63c0 <col:12> 'int' 0
    |   |   `-BinaryOperator 0x14d8f6470 <line:30:4, col:24> 'int' '='
    |   |     |-DeclRefExpr 0x14d8f6430 <col:4> 'int' lvalue Var 0x14d8f5660 'tlsext_servername' 'int'
    |   |     `-IntegerLiteral 0x14d8f6450 <col:24> 'int' 1
    |   `-CompoundAssignOperator 0x14d8f6540 <line:33:3, col:9> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |     |-DeclRefExpr 0x14d8f64d0 <col:3> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    |     `-ImplicitCastExpr 0x14d8f6528 <col:9> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x14d8f6510 <col:9> 'unsigned short' <LValueToRValue>
    |         `-DeclRefExpr 0x14d8f64f0 <col:9> 'unsigned short' lvalue Var 0x14e80e228 'size' 'unsigned short'
    |-IfStmt 0x14d8f6e40 <line:36:2, line:40:3>
    | |-BinaryOperator 0x14d8f6ca8 <line:36:6, col:16> 'int' '!='
    | | |-ImplicitCastExpr 0x14d8f6c90 <col:6> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x14d8f65c8 <col:6> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    | | `-BinaryOperator 0x14d8f6c70 <col:14, col:16> 'unsigned char *' '+'
    | |   |-ImplicitCastExpr 0x14d8f6c40 <col:14> 'unsigned char *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14d8f6c00 <col:14> 'unsigned char *' lvalue ParmVar 0x14e80de90 'd' 'unsigned char *'
    | |   `-ImplicitCastExpr 0x14d8f6c58 <col:16> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x14d8f6c20 <col:16> 'int' lvalue ParmVar 0x14e80df10 'n' 'int'
    | `-CompoundStmt 0x14d8f6e20 <line:37:3, line:40:3>
    |   |-BinaryOperator 0x14d8f6dd0 <line:38:3, col:9> 'int' contains-errors '='
    |   | |-UnaryOperator 0x14d8f6d98 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x14d8f6d80 <col:4> 'int *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x14d8f6cc8 <col:4> 'int *' lvalue ParmVar 0x14e80df90 'al' 'int *'
    |   | `-RecoveryExpr 0x14d8f6db0 <col:9> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x14d8f6e10 <line:39:3, col:10>
    |     `-IntegerLiteral 0x14d8f6df0 <col:10> 'int' 0
    |-IfStmt 0x14d8f7838 <line:42:2, line:61:3>
    | |-BinaryOperator 0x14d8f6f70 <line:42:6, col:38> 'int' contains-errors '&&'
    | | |-UnaryOperator 0x14d8f6ee0 <col:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x14d8f6ec8 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>
    | | |   `-CXXDependentScopeMemberExpr 0x14d8f6e80 <col:7, col:10> '<dependent type>' contains-errors lvalue ->hit
    | | |     `-RecoveryExpr 0x14d8f6e60 <col:7> '<dependent type>' contains-errors lvalue
    | | `-BinaryOperator 0x14d8f6f50 <col:17, col:38> 'int' '=='
    | |   |-ImplicitCastExpr 0x14d8f6f38 <col:17> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x14d8f6ef8 <col:17> 'int' lvalue Var 0x14d8f5660 'tlsext_servername' 'int'
    | |   `-IntegerLiteral 0x14d8f6f18 <col:38> 'int' 1
    | `-CompoundStmt 0x14d8f7820 <line:43:3, line:61:3>
    |   `-IfStmt 0x14d8f7800 <line:44:4, line:60:4>
    |     |-CXXDependentScopeMemberExpr 0x14d8f6fb0 <line:44:8, col:11> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |     | `-RecoveryExpr 0x14d8f6f90 <col:8> '<dependent type>' contains-errors lvalue
    |     `-CompoundStmt 0x14d8f77e8 <line:45:4, line:60:4>
    |       `-IfStmt 0x14d8f77b8 <line:46:4, line:59:5> has_else
    |         |-BinaryOperator 0x14d8f7100 <line:46:8, col:39> 'int' contains-errors '=='
    |         | |-CXXDependentScopeMemberExpr 0x14d8f7060 <col:8, col:20> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |         | | `-CXXDependentScopeMemberExpr 0x14d8f7018 <col:8, col:11> '<dependent type>' contains-errors lvalue ->session
    |         | |   `-RecoveryExpr 0x14d8f6ff8 <col:8> '<dependent type>' contains-errors lvalue
    |         | `-RecoveryExpr 0x14d8f70e0 <col:39> '<dependent type>' contains-errors lvalue
    |         |-CompoundStmt 0x14d8f7620 <line:47:5, line:54:5>
    |         | |-BinaryOperator 0x14d8f7388 <line:48:5, col:64> '<dependent type>' contains-errors '='
    |         | | |-CXXDependentScopeMemberExpr 0x14d8f71b0 <col:5, col:17> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |         | | | `-CXXDependentScopeMemberExpr 0x14d8f7168 <col:5, col:8> '<dependent type>' contains-errors lvalue ->session
    |         | | |   `-RecoveryExpr 0x14d8f7140 <col:5> '<dependent type>' contains-errors lvalue
    |         | | |     `-DeclRefExpr 0x14d8f7120 <col:5> 'int *' lvalue ParmVar 0x14e80dd28 's' 'int *'
    |         | | `-CallExpr 0x14d8f7360 <col:35, col:64> '<dependent type>' contains-errors
    |         | |   |-DeclRefExpr 0x14d8f72d8 <col:35> 'int ()' Function 0x14d8f7220 'BUF_strdup' 'int ()'
    |         | |   `-CXXDependentScopeMemberExpr 0x14d8f7318 <col:46, col:49> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |         | |     `-RecoveryExpr 0x14d8f72f8 <col:46> '<dependent type>' contains-errors lvalue
    |         | `-IfStmt 0x14d8f7600 <line:49:5, line:53:6>
    |         |   |-UnaryOperator 0x14d8f7470 <line:49:9, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x14d8f7458 <col:10, col:22> '<dependent type>' contains-errors <LValueToRValue>
    |         |   |   `-CXXDependentScopeMemberExpr 0x14d8f7410 <col:10, col:22> '<dependent type>' contains-errors lvalue ->tlsext_hostname
    |         |   |     `-CXXDependentScopeMemberExpr 0x14d8f73c8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->session
    |         |   |       `-RecoveryExpr 0x14d8f73a8 <col:10> '<dependent type>' contains-errors lvalue
    |         |   `-CompoundStmt 0x14d8f75e0 <line:50:6, line:53:6>
    |         |     |-BinaryOperator 0x14d8f7590 <line:51:6, col:12> 'int' contains-errors '='
    |         |     | |-UnaryOperator 0x14d8f7558 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
    |         |     | | `-ImplicitCastExpr 0x14d8f7540 <col:7> 'int *' <LValueToRValue>
    |         |     | |   `-DeclRefExpr 0x14d8f7488 <col:7> 'int *' lvalue ParmVar 0x14e80df90 'al' 'int *'
    |         |     | `-RecoveryExpr 0x14d8f7570 <col:12> '<dependent type>' contains-errors lvalue
    |         |     `-ReturnStmt 0x14d8f75d0 <line:52:6, col:13>
    |         |       `-IntegerLiteral 0x14d8f75b0 <col:13> 'int' 0
    |         `-CompoundStmt 0x14d8f7798 <line:56:5, line:59:5>
    |           |-BinaryOperator 0x14d8f7748 <line:57:5, col:11> 'int' contains-errors '='
    |           | |-UnaryOperator 0x14d8f7710 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |           | | `-ImplicitCastExpr 0x14d8f76f8 <col:6> 'int *' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x14d8f7640 <col:6> 'int *' lvalue ParmVar 0x14e80df90 'al' 'int *'
    |           | `-RecoveryExpr 0x14d8f7728 <col:11> '<dependent type>' contains-errors lvalue
    |           `-ReturnStmt 0x14d8f7788 <line:58:5, col:12>
    |             `-IntegerLiteral 0x14d8f7768 <col:12> 'int' 0
    |-BinaryOperator 0x14d8f78e0 <line:63:2, col:7> 'unsigned char *' '='
    | |-UnaryOperator 0x14d8f7890 <col:2, col:3> 'unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x14d8f7878 <col:3> 'unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x14d8f7858 <col:3> 'unsigned char **' lvalue ParmVar 0x14e80de10 'p' 'unsigned char **'
    | `-ImplicitCastExpr 0x14d8f78c8 <col:7> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x14d8f78a8 <col:7> 'unsigned char *' lvalue Var 0x14e80e358 'data' 'unsigned char *'
    `-ReturnStmt 0x14d8f7920 <line:64:2, col:9>
      `-IntegerLiteral 0x14d8f7900 <col:9> 'int' 1
