`-FunctionDecl 0x135928198  line:1:12 interpret_errors 'int (void)' static
  `-CompoundStmt 0x135942a70 <line:2:1, line:48:1>
    |-DeclStmt 0x135928300 <line:3:2, col:10>
    | `-VarDecl 0x135928298 <col:2, col:7> col:7 used bad 'char'
    |-IfStmt 0x135928670 <line:5:2, line:9:2>
    | |-BinaryOperator 0x1359283a8 <line:5:6, col:13> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x135928388 <col:6> '<dependent type>' contains-errors lvalue
    | | `-IntegerLiteral 0x135928348 <col:13> 'int' 7
    | `-CompoundStmt 0x135928650 <col:16, line:9:2>
    |   |-CallExpr 0x1359285a8 <line:6:3, col:15> 'int'
    |   | |-ImplicitCastExpr 0x135928590 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1359284e0 <col:3> 'int ()' Function 0x135928428 'DPRINT' 'int ()'
    |   | `-ImplicitCastExpr 0x1359285d0 <col:10> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x135928540 <col:10> 'char[4]' lvalue "STR"
    |   `-ReturnStmt 0x135928640 <line:8:3, col:10>
    |     `-IntegerLiteral 0x135928620 <col:10> 'int' 1
    `-SwitchStmt 0x1359286f8 <line:12:2, line:47:2>
      |-RecoveryExpr 0x1359286d8 <line:12:10, col:30> 'int' contains-errors
      `-CompoundStmt 0x135942a18 <col:40, line:47:2>
        |-CaseStmt 0x135928758 <line:13:2, line:15:11>
        | |-ConstantExpr 0x135928740 <line:13:7> 'int'
        | | `-IntegerLiteral 0x135928720 <col:7> 'int' 64
        | `-IfStmt 0x135941e30 <line:14:3, line:15:11>
        |   |-RecoveryExpr 0x1359287c8 <line:14:7, col:27> '_Bool' contains-errors
        |   `-ReturnStmt 0x135941e20 <line:15:4, col:11>
        |     `-IntegerLiteral 0x135941e00 <col:11> 'int' 0
        |-BinaryOperator 0x135941ea8 <line:16:3, col:9> 'char' '='
        | |-DeclRefExpr 0x135941e50 <col:3> 'char' lvalue Var 0x135928298 'bad' 'char'
        | `-ImplicitCastExpr 0x135941e90 <col:9> 'char' <IntegralCast>
        |   `-IntegerLiteral 0x135941e70 <col:9> 'int' 1
        |-IfStmt 0x1359426a8 <line:17:3, line:32:3> has_else
        | |-RecoveryExpr 0x135941f10 <line:17:7, col:27> '_Bool' contains-errors
        | |-CompoundStmt 0x1359421a8 <col:35, line:23:3>
        | | |-CallExpr 0x135941f88 <line:18:4, col:16> 'int'
        | | | |-ImplicitCastExpr 0x135941f70 <col:4> 'int (*)()' <FunctionToPointerDecay>
        | | | | `-DeclRefExpr 0x135941f30 <col:4> 'int ()' Function 0x135928428 'DPRINT' 'int ()'
        | | | `-ImplicitCastExpr 0x135941fb0 <col:11> 'char *' <ArrayToPointerDecay>
        | | |   `-StringLiteral 0x135941f50 <col:11> 'char[4]' lvalue "STR"
        | | `-BinaryOperator 0x135942188 <line:22:4, col:10> 'char' '='
        | |   |-DeclRefExpr 0x135942130 <col:4> 'char' lvalue Var 0x135928298 'bad' 'char'
        | |   `-ImplicitCastExpr 0x135942170 <col:10> 'char' <IntegralCast>
        | |     `-IntegerLiteral 0x135942150 <col:10> 'int' 2
        | `-IfStmt 0x135942678 <line:23:10, line:32:3> has_else
        |   |-RecoveryExpr 0x1359421f8 <line:23:14, col:34> '_Bool' contains-errors
        |   |-CompoundStmt 0x135942318 <col:42, line:26:3>
        |   `-IfStmt 0x135942648 <col:10, line:32:3> has_else
        |     |-RecoveryExpr 0x135942328 <line:26:14, col:34> '_Bool' contains-errors
        |     |-CompoundStmt 0x135942498 <col:42, line:30:3>
        |     | |-IfStmt 0x135942400 <line:27:4, line:28:17>
        |     | | |-RecoveryExpr 0x135942348 <line:27:8, col:44> '_Bool' contains-errors
        |     | | `-CallExpr 0x1359423c0 <line:28:5, col:17> 'int'
        |     | |   |-ImplicitCastExpr 0x1359423a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
        |     | |   | `-DeclRefExpr 0x135942368 <col:5> 'int ()' Function 0x135928428 'DPRINT' 'int ()'
        |     | |   `-ImplicitCastExpr 0x1359423e8 <col:12> 'char *' <ArrayToPointerDecay>
        |     | |     `-StringLiteral 0x135942388 <col:12> 'char[4]' lvalue "STR"
        |     | `-BinaryOperator 0x135942478 <line:29:4, col:10> 'char' '='
        |     |   |-DeclRefExpr 0x135942420 <col:4> 'char' lvalue Var 0x135928298 'bad' 'char'
        |     |   `-ImplicitCastExpr 0x135942460 <col:10> 'char' <IntegralCast>
        |     |     `-IntegerLiteral 0x135942440 <col:10> 'int' 0
        |     `-IfStmt 0x135942628 <line:30:10, line:32:3>
        |       |-RecoveryExpr 0x1359424b8 <line:30:14, col:64> '_Bool' contains-errors
        |       `-CompoundStmt 0x135942610 <col:75, line:32:3>
        |         `-CallExpr 0x1359425f0 <line:31:4, col:17> 'int'
        |           `-ImplicitCastExpr 0x1359425d8 <col:4> 'int (*)()' <FunctionToPointerDecay>
        |             `-DeclRefExpr 0x1359425b8 <col:4> 'int ()' Function 0x135942500 'print_errors' 'int ()'
        |-ReturnStmt 0x135942748 <line:36:3, col:10>
        | `-ImplicitCastExpr 0x135942730 <col:10> 'int' <IntegralCast>
        |   `-ImplicitCastExpr 0x135942718 <col:10> 'char' <LValueToRValue>
        |     `-DeclRefExpr 0x1359426f8 <col:10> 'char' lvalue Var 0x135928298 'bad' 'char'
        |-CaseStmt 0x135942790 <line:37:2, line:38:15>
        | |-ConstantExpr 0x135942778 <line:37:7> 'int'
        | | `-IntegerLiteral 0x135942758 <col:7> 'int' 128
        | `-CallExpr 0x135942810 <line:38:3, col:15> 'int'
        |   |-ImplicitCastExpr 0x1359427f8 <col:3> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x1359427b8 <col:3> 'int ()' Function 0x135928428 'DPRINT' 'int ()'
        |   `-ImplicitCastExpr 0x135942838 <col:10> 'char *' <ArrayToPointerDecay>
        |     `-StringLiteral 0x1359427d8 <col:10> 'char[4]' lvalue "STR"
        |-ReturnStmt 0x135942890 <line:40:3, col:10>
        | `-IntegerLiteral 0x135942870 <col:10> 'int' 2
        |-CaseStmt 0x1359428d8 <line:41:2, line:42:15>
        | |-ConstantExpr 0x1359428c0 <line:41:7> 'int'
        | | `-IntegerLiteral 0x1359428a0 <col:7> 'int' 192
        | `-CallExpr 0x135942958 <line:42:3, col:15> 'int'
        |   |-ImplicitCastExpr 0x135942940 <col:3> 'int (*)()' <FunctionToPointerDecay>
        |   | `-DeclRefExpr 0x135942900 <col:3> 'int ()' Function 0x135928428 'DPRINT' 'int ()'
        |   `-ImplicitCastExpr 0x135942980 <col:10> 'char *' <ArrayToPointerDecay>
        |     `-StringLiteral 0x135942920 <col:10> 'char[4]' lvalue "STR"
        |-ReturnStmt 0x1359429b8 <line:44:3, col:10>
        | `-IntegerLiteral 0x135942998 <col:10> 'int' 2
        `-DefaultStmt 0x1359429f8 <line:45:2, line:46:10>
          `-ReturnStmt 0x1359429e8 <col:3, col:10>
            `-IntegerLiteral 0x1359429c8 <col:10> 'int' 0
