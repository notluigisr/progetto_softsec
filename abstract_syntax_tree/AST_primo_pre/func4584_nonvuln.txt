`-FunctionDecl 0x11e00df10  line:1:13 invalid invalidLens 'void (int *, int *, const char *)' static
  |-ParmVarDecl 0x11e00dd28 <col:25, col:33> col:33 invalid tc 'int *'
  |-ParmVarDecl 0x11e00dda8 <col:37, col:45> col:45 invalid aug 'int *'
  |-ParmVarDecl 0x11e00de28 <col:50, col:62> col:62 used lens 'const char *'
  `-CompoundStmt 0x11e027ca0 <col:68, line:15:1>
    |-DeclStmt 0x11e00e0e8 <line:2:5, col:20>
    | |-VarDecl 0x11e00dfe8 <col:5, col:9> col:9 used r 'int'
    | `-VarDecl 0x11e00e068 <col:5, col:12> col:12 used nmatches 'int'
    |-BinaryOperator 0x11e00e378 <line:4:5, col:33> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e00e100 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    | `-CallExpr 0x11e00e340 <col:9, col:33> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e00e280 <col:9> 'int ()' Function 0x11e00e1c8 'aug_set' 'int ()'
    |   |-RecoveryExpr 0x11e00e2a0 <col:17> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x11e00e300 <col:22> 'char[4]' lvalue "STR"
    |   `-DeclRefExpr 0x11e00e320 <col:29> 'const char *' lvalue ParmVar 0x11e00de28 'lens' 'const char *'
    |-CallExpr 0x11e027518 <line:5:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e0274b8 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x11e0274d8 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x11e0274f8 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    |-BinaryOperator 0x11e0275f8 <line:7:5, col:27> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e027548 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    | `-CallExpr 0x11e0275c8 <col:9, col:27> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e027568 <col:9> 'int ()' Function 0x11e00e1c8 'aug_set' 'int ()'
    |   |-RecoveryExpr 0x11e027588 <col:17> '<dependent type>' contains-errors lvalue
    |   `-StringLiteral 0x11e0275a8 <col:22> 'char[4]' lvalue "STR"
    |-CallExpr 0x11e027678 <line:8:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e027618 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x11e027638 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x11e027658 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    |-BinaryOperator 0x11e027810 <line:10:5, col:21> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e0276a8 <col:5> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    | `-CallExpr 0x11e0277e8 <col:9, col:21> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e0277a8 <col:9> 'int ()' Function 0x11e0276f0 'aug_load' 'int ()'
    |   `-RecoveryExpr 0x11e0277c8 <col:18> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x11e027890 <line:11:5, col:29> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x11e027830 <col:5> 'int ()' Function 0x11e027400 'CuAssertRetSuccess' 'int ()'
    | |-RecoveryExpr 0x11e027850 <col:24> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x11e027870 <col:28> 'int' lvalue Var 0x11e00dfe8 'r' 'int'
    |-BinaryOperator 0x11e027ae8 <line:13:5, col:42> 'int' contains-errors '='
    | |-DeclRefExpr 0x11e0278c0 <col:5> 'int' lvalue Var 0x11e00e068 'nmatches' 'int'
    | `-CallExpr 0x11e027ab0 <col:16, col:42> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x11e0279c0 <col:16> 'int ()' Function 0x11e027908 'aug_match' 'int ()'
    |   |-RecoveryExpr 0x11e0279e0 <col:26> '<dependent type>' contains-errors lvalue
    |   |-StringLiteral 0x11e027a00 <col:31> 'char[4]' lvalue "STR"
    |   `-RecoveryExpr 0x11e027a90 <col:38> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x11e027c68 <line:14:5, col:38> '<dependent type>' contains-errors
      |-DeclRefExpr 0x11e027be8 <col:5> 'int ()' Function 0x11e027b30 'CuAssertIntEquals' 'int ()'
      |-RecoveryExpr 0x11e027c08 <col:23> '<dependent type>' contains-errors lvalue
      |-IntegerLiteral 0x11e027c28 <col:27> 'int' 1
      `-DeclRefExpr 0x11e027c48 <col:30> 'int' lvalue Var 0x11e00e068 'nmatches' 'int'
