`-FunctionDecl 0x128822a88  line:1:12 invalid llcp_sock_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static
  |-ParmVarDecl 0x10500e248 <col:30, col:44> col:44 iocb 'struct kiocb *'
  |-ParmVarDecl 0x128822628 <col:50, col:65> col:65 used sock 'struct socket *'
  |-ParmVarDecl 0x1288227f8 <line:2:9, col:24> col:24 used msg 'struct msghdr *'
  |-ParmVarDecl 0x128822890 <col:29, col:36> col:36 invalid len 'int'
  |-ParmVarDecl 0x128822910 <col:41, col:45> col:45 used flags 'int'
  `-CompoundStmt 0x128111fc0 <line:3:1, line:88:1>
    |-DeclStmt 0x128822c70 <line:4:2, col:36>
    | `-VarDecl 0x128822b70 <col:2, col:24> col:6 used noblock 'int' cinit
    |   `-BinaryOperator 0x128822c50 <col:16, col:24> '<dependent type>' contains-errors '&'
    |     |-DeclRefExpr 0x128822bd8 <col:16> 'int' lvalue ParmVar 0x128822910 'flags' 'int'
    |     `-RecoveryExpr 0x128822c30 <col:24> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x128822ed8 <line:5:2, col:28>
    | |-RecordDecl 0x128822c88 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x128822df8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x128822e98 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x128822e60 <col:20> 'struct socket *' lvalue ParmVar 0x128822628 'sock' 'struct socket *'
    |-DeclStmt 0x128823008 <line:6:2, col:27>
    | |-VarDecl 0x128822f08 <col:2, col:15> col:15 used copied 'unsigned int'
    | `-VarDecl 0x128822f88 <col:2, col:23> col:23 used rlen 'unsigned int'
    |-DeclStmt 0x1288232a0 <line:7:2, col:28>
    | |-RecordDecl 0x128823020 <col:2, col:9> col:9 struct sk_buff
    | |-VarDecl 0x128823188 <col:2, col:18> col:18 used skb 'struct sk_buff *'
    | `-VarDecl 0x128823218 <col:2, col:24> col:24 used cskb 'struct sk_buff *'
    |-DeclStmt 0x128823358 <line:8:2, col:13>
    | `-VarDecl 0x1288232d0 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x128823338 <col:12> 'int' 0
    |-CallExpr 0x128823590 <line:10:2, col:25> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x1288234d0 <col:2> 'int ()' Function 0x128823418 'pr_debug' 'int ()'
    | |-StringLiteral 0x128823530 <col:11> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x128823550 <col:18> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x128823570 <col:22> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x128815b48 <line:12:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x128815b30 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128815ab8 <col:2> 'int ()' Function 0x128815a00 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x128815b70 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x128815ad8 <col:12> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |-IfStmt 0x128816008 <line:14:2, line:18:2>
    | |-BinaryOperator 0x128815e20 <line:14:6, line:15:43> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x128815e00 <line:14:6, col:22> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x128815bc0 <col:6, col:10> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x128815b88 <col:6> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    | | | `-RecoveryExpr 0x128815de0 <col:22> '<dependent type>' contains-errors lvalue
    | | `-CallExpr 0x128815d98 <line:15:6, col:43> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x128815d00 <col:6> 'int ()' Function 0x128815c48 'skb_queue_empty' 'int ()'
    | |   `-UnaryOperator 0x128815d80 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x128815d58 <col:23, col:27> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x128815d20 <col:23> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    | `-CompoundStmt 0x128815fe8 <col:46, line:18:2>
    |   |-CallExpr 0x128815f78 <line:16:3, col:18> 'int' contains-errors
    |   | |-ImplicitCastExpr 0x128815f60 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x128815f20 <col:3> 'int ()' Function 0x128815e68 'release_sock' 'int ()'
    |   | `-ImplicitCastExpr 0x128815fa0 <col:16> 'struct sock *' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x128815f40 <col:16> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |   `-ReturnStmt 0x128815fd8 <line:17:3, col:10>
    |     `-IntegerLiteral 0x128815fb8 <col:10> 'int' 0
    |-CallExpr 0x128816080 <line:20:2, col:17> 'int' contains-errors
    | |-ImplicitCastExpr 0x128816068 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x128816028 <col:2> 'int ()' Function 0x128815e68 'release_sock' 'int ()'
    | `-ImplicitCastExpr 0x1288160a8 <col:15> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x128816048 <col:15> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |-IfStmt 0x1288161c0 <line:22:2, line:23:11>
    | |-RecoveryExpr 0x1288160f8 <line:22:6, col:22> '_Bool' contains-errors
    | `-ReturnStmt 0x1288161b0 <line:23:3, col:11>
    |   `-UnaryOperator 0x128816198 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x128816180 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x128816160 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x128816480 <line:25:2, col:50> 'struct sk_buff *' contains-errors '='
    | |-DeclRefExpr 0x1288161e0 <col:2> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x128816468 <col:8, col:50> 'struct sk_buff *' contains-errors <IntegralToPointer>
    |   `-CallExpr 0x1288163e0 <col:8, col:50> 'int' contains-errors
    |     |-ImplicitCastExpr 0x1288163c8 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1288162e0 <col:8> 'int ()' Function 0x128816228 'skb_recv_datagram' 'int ()'
    |     |-ImplicitCastExpr 0x128816420 <col:26> 'struct sock *' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x128816300 <col:26> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |     |-ImplicitCastExpr 0x128816438 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x128816320 <col:30> 'int' lvalue ParmVar 0x128822910 'flags' 'int'
    |     |-ImplicitCastExpr 0x128816450 <col:37> 'int' contains-errors <LValueToRValue>
    |     | `-DeclRefExpr 0x128816340 <col:37> 'int' contains-errors lvalue Var 0x128822b70 'noblock' 'int'
    |     `-UnaryOperator 0x1288163b0 <col:46, col:47> 'int *' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x128816360 <col:47> 'int' lvalue Var 0x1288232d0 'err' 'int'
    |-IfStmt 0x1288169e0 <line:26:2, line:34:2>
    | |-UnaryOperator 0x1288164d8 <line:26:6, col:7> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1288164c0 <col:7> 'struct sk_buff *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1288164a0 <col:7> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x1288169b8 <col:12, line:34:2>
    |   |-CallExpr 0x128816808 <line:27:3, line:28:43> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1288165d0 <line:27:3> 'int ()' Function 0x128816518 'pr_err' 'int ()'
    |   | |-StringLiteral 0x1288165f0 <col:10> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x128816648 <line:28:10, col:14> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x128816610 <col:10> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |   | |-DeclRefExpr 0x128816670 <col:24> 'int' lvalue Var 0x1288232d0 'err' 'int'
    |   | `-CallExpr 0x1288167c8 <col:29, col:42> 'int' contains-errors
    |   |   |-ImplicitCastExpr 0x1288167b0 <col:29> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x128816770 <col:29> 'int ()' Function 0x1288166b8 'sock_error' 'int ()'
    |   |   `-ImplicitCastExpr 0x1288167f0 <col:40> 'struct sock *' contains-errors <LValueToRValue>
    |   |     `-DeclRefExpr 0x128816790 <col:40> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |   |-IfStmt 0x128816950 <line:30:3, line:31:11>
    |   | |-BinaryOperator 0x128816900 <line:30:7, col:25> '<dependent type>' contains-errors '&'
    |   | | |-RecoveryExpr 0x128816880 <col:7, col:11> '<dependent type>' contains-errors lvalue
    |   | | | `-DeclRefExpr 0x128816848 <col:7> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |   | | `-RecoveryExpr 0x1288168e0 <col:25> '<dependent type>' contains-errors lvalue
    |   | `-ReturnStmt 0x128816940 <line:31:4, col:11>
    |   |   `-IntegerLiteral 0x128816920 <col:11> 'int' 0
    |   `-ReturnStmt 0x1288169a8 <line:33:3, col:10>
    |     `-ImplicitCastExpr 0x128816990 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x128816970 <col:10> 'int' lvalue Var 0x1288232d0 'err' 'int'
    |-BinaryOperator 0x12810f280 <line:36:2, col:14> 'unsigned int' contains-errors '='
    | |-DeclRefExpr 0x12810f200 <col:2> 'unsigned int' lvalue Var 0x128822f88 'rlen' 'unsigned int'
    | `-RecoveryExpr 0x12810f258 <col:9, col:14> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x12810f220 <col:9> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |-BinaryOperator 0x12810f458 <line:39:2, col:9> 'struct sk_buff *' '='
    | |-DeclRefExpr 0x12810f400 <col:2> 'struct sk_buff *' lvalue Var 0x128823218 'cskb' 'struct sk_buff *'
    | `-ImplicitCastExpr 0x12810f440 <col:9> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x12810f420 <col:9> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |-IfStmt 0x12810f8b8 <line:40:2, line:44:2>
    | |-CallExpr 0x12810f638 <line:40:6, col:59> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x12810f558 <col:6> 'int ()' Function 0x12810f4a0 'skb_copy_datagram_iovec' 'int ()'
    | | |-DeclRefExpr 0x12810f578 <col:30> 'struct sk_buff *' lvalue Var 0x128823218 'cskb' 'struct sk_buff *'
    | | |-IntegerLiteral 0x12810f598 <col:36> 'int' 0
    | | |-RecoveryExpr 0x12810f5f0 <col:39, col:44> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x12810f5b8 <col:39> 'struct msghdr *' lvalue ParmVar 0x1288227f8 'msg' 'struct msghdr *'
    | | `-DeclRefExpr 0x12810f618 <col:53> 'unsigned int' lvalue Var 0x128822f08 'copied' 'unsigned int'
    | `-CompoundStmt 0x12810f8a0 <col:62, line:44:2>
    |   `-IfStmt 0x12810f880 <line:41:3, line:42:45>
    |     |-RecoveryExpr 0x12810f698 <line:41:7, col:25> '_Bool' contains-errors
    |     `-CallExpr 0x12810f850 <line:42:4, col:45> '<dependent type>' contains-errors
    |       |-DeclRefExpr 0x12810f798 <col:4> 'int ()' Function 0x12810f6e0 'skb_queue_head' 'int ()'
    |       |-UnaryOperator 0x12810f818 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    |       | `-RecoveryExpr 0x12810f7f0 <col:20, col:24> '<dependent type>' contains-errors lvalue
    |       |   `-DeclRefExpr 0x12810f7b8 <col:20> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |       `-DeclRefExpr 0x12810f830 <col:42> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |-CallExpr 0x12810fa50 <line:46:2, col:34> 'int' contains-errors
    | |-ImplicitCastExpr 0x12810fa38 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12810f9b8 <col:2> 'int ()' Function 0x12810f900 'sock_recv_timestamp' 'int ()'
    | |-ImplicitCastExpr 0x12810fa88 <col:22> 'struct msghdr *' <LValueToRValue>
    | | `-DeclRefExpr 0x12810f9d8 <col:22> 'struct msghdr *' lvalue ParmVar 0x1288227f8 'msg' 'struct msghdr *'
    | |-ImplicitCastExpr 0x12810faa0 <col:27> 'struct sock *' contains-errors <LValueToRValue>
    | | `-DeclRefExpr 0x12810f9f8 <col:27> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    | `-ImplicitCastExpr 0x12810fab8 <col:31> 'struct sk_buff *' <LValueToRValue>
    |   `-DeclRefExpr 0x12810fa18 <col:31> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |-IfStmt 0x1281116c8 <line:48:2, line:61:2>
    | |-RecoveryExpr 0x12810fb90 <line:48:6, col:40> '_Bool' contains-errors
    | `-CompoundStmt 0x128111690 <col:50, line:61:2>
    |   |-DeclStmt 0x12810ff28 <line:49:3, col:57>
    |   | |-RecordDecl 0x12810fbb0 <col:3, col:10> col:10 struct nfc_llcp_ui_cb
    |   | `-VarDecl 0x12810fd18 <col:3, col:56> col:26 used ui_cb 'struct nfc_llcp_ui_cb *' cinit
    |   |   `-ImplicitCastExpr 0x12810fef8 <col:34, col:56> 'struct nfc_llcp_ui_cb *' <IntegralToPointer>
    |   |     `-CallExpr 0x12810feb8 <col:34, col:56> 'int'
    |   |       |-ImplicitCastExpr 0x12810fea0 <col:34> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12810fe60 <col:34> 'int ()' Function 0x12810fda8 'nfc_llcp_ui_skb_cb' 'int ()'
    |   |       `-ImplicitCastExpr 0x12810fee0 <col:53> 'struct sk_buff *' <LValueToRValue>
    |   |         `-DeclRefExpr 0x12810fe80 <col:53> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |   |-DeclStmt 0x128111240 <line:50:3, line:51:46>
    |   | |-RecordDecl 0x12810ff40 <line:50:3, col:10> col:10 struct sockaddr_nfc_llcp
    |   | `-VarDecl 0x1281100a8 <col:3, line:51:38> line:50:29 used sockaddr 'struct sockaddr_nfc_llcp *' cinit
    |   |   `-CStyleCastExpr 0x128111200 <line:51:4, col:38> 'struct sockaddr_nfc_llcp *' contains-errors <Dependent>
    |   |     `-RecoveryExpr 0x128110148 <col:33, col:38> '<dependent type>' contains-errors lvalue
    |   |       `-DeclRefExpr 0x128110110 <col:33> 'struct msghdr *' lvalue ParmVar 0x1288227f8 'msg' 'struct msghdr *'
    |   |-CallExpr 0x1281113d8 <line:55:3, col:43> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x1281112d8 <col:3> 'int ()' Function 0x128823418 'pr_debug' 'int ()'
    |   | |-StringLiteral 0x1281112f8 <col:12> 'char[4]' lvalue "STR"
    |   | |-RecoveryExpr 0x128111350 <col:19, col:26> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x128111318 <col:19> 'struct nfc_llcp_ui_cb *' lvalue Var 0x12810fd18 'ui_cb' 'struct nfc_llcp_ui_cb *'
    |   | `-RecoveryExpr 0x1281113b0 <col:32, col:39> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x128111378 <col:32> 'struct nfc_llcp_ui_cb *' lvalue Var 0x12810fd18 'ui_cb' 'struct nfc_llcp_ui_cb *'
    |   |-BinaryOperator 0x128111590 <line:59:3, col:27> '<dependent type>' contains-errors '='
    |   | |-RecoveryExpr 0x128111508 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |   | | `-DeclRefExpr 0x1281114d0 <col:3> 'struct sockaddr_nfc_llcp *' contains-errors lvalue Var 0x1281100a8 'sockaddr' 'struct sockaddr_nfc_llcp *'
    |   | `-RecoveryExpr 0x128111568 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |   |   `-DeclRefExpr 0x128111530 <col:20> 'struct nfc_llcp_ui_cb *' lvalue Var 0x12810fd18 'ui_cb' 'struct nfc_llcp_ui_cb *'
    |   `-BinaryOperator 0x128111670 <line:60:3, col:27> '<dependent type>' contains-errors '='
    |     |-RecoveryExpr 0x1281115e8 <col:3, col:13> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x1281115b0 <col:3> 'struct sockaddr_nfc_llcp *' contains-errors lvalue Var 0x1281100a8 'sockaddr' 'struct sockaddr_nfc_llcp *'
    |     `-RecoveryExpr 0x128111648 <col:20, col:27> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x128111610 <col:20> 'struct nfc_llcp_ui_cb *' lvalue Var 0x12810fd18 'ui_cb' 'struct nfc_llcp_ui_cb *'
    |-IfStmt 0x128111de8 <line:64:2, line:78:2>
    | |-RecoveryExpr 0x128111708 <line:64:6, col:24> '_Bool' contains-errors
    | `-CompoundStmt 0x128111dc8 <col:27, line:78:2>
    |   |-IfStmt 0x128111c30 <line:67:3, line:75:3>
    |   | |-RecoveryExpr 0x128111848 <line:67:7, line:69:22> '_Bool' contains-errors
    |   | `-CompoundStmt 0x128111c10 <col:32, line:75:3>
    |   |   |-CallExpr 0x1281119c0 <line:70:4, col:24> 'int'
    |   |   | |-ImplicitCastExpr 0x1281119a8 <col:4> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x128111948 <col:4> 'int ()' Function 0x128111890 'skb_pull' 'int ()'
    |   |   | |-ImplicitCastExpr 0x1281119f0 <col:13> 'struct sk_buff *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x128111968 <col:13> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |   |   | `-ImplicitCastExpr 0x128111a08 <col:18> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x128111988 <col:18> 'unsigned int' lvalue Var 0x128822f08 'copied' 'unsigned int'
    |   |   `-IfStmt 0x128111bf0 <line:71:4, line:74:4>
    |   |     |-RecoveryExpr 0x128111a58 <line:71:8, col:13> '<dependent type>' contains-errors lvalue
    |   |     | `-DeclRefExpr 0x128111a20 <col:8> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |   |     `-CompoundStmt 0x128111bd0 <col:18, line:74:4>
    |   |       |-CallExpr 0x128111b38 <line:72:5, col:46> '<dependent type>' contains-errors
    |   |       | |-DeclRefExpr 0x128111a80 <col:5> 'int ()' Function 0x12810f6e0 'skb_queue_head' 'int ()'
    |   |       | |-UnaryOperator 0x128111b00 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |       | | `-RecoveryExpr 0x128111ad8 <col:21, col:25> '<dependent type>' contains-errors lvalue
    |   |       | |   `-DeclRefExpr 0x128111aa0 <col:21> 'struct sock *' contains-errors lvalue Var 0x128822df8 'sk' 'struct sock *'
    |   |       | `-DeclRefExpr 0x128111b18 <col:43> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |   |       `-GotoStmt 0x128111bb8 <line:73:5, col:10> 'done' 0x128111b68
    |   `-CallExpr 0x128111d88 <line:77:3, col:16> 'int'
    |     |-ImplicitCastExpr 0x128111d70 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x128111d30 <col:3> 'int ()' Function 0x128111c78 'kfree_skb' 'int ()'
    |     `-ImplicitCastExpr 0x128111db0 <col:13> 'struct sk_buff *' <LValueToRValue>
    |       `-DeclRefExpr 0x128111d50 <col:13> 'struct sk_buff *' lvalue Var 0x128823188 'skb' 'struct sk_buff *'
    |-LabelStmt 0x128111f40 <line:82:1, line:85:12> 'done'
    | `-IfStmt 0x128111f20 <line:84:2, line:85:12>
    |   |-RecoveryExpr 0x128111e88 <line:84:6, col:57> '_Bool' contains-errors
    |   `-BinaryOperator 0x128111f00 <line:85:3, col:12> 'unsigned int' '='
    |     |-DeclRefExpr 0x128111ea8 <col:3> 'unsigned int' lvalue Var 0x128822f08 'copied' 'unsigned int'
    |     `-ImplicitCastExpr 0x128111ee8 <col:12> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x128111ec8 <col:12> 'unsigned int' lvalue Var 0x128822f88 'rlen' 'unsigned int'
    `-ReturnStmt 0x128111fb0 <line:87:2, col:9>
      `-ImplicitCastExpr 0x128111f98 <col:9> 'int' <IntegralCast>
        `-ImplicitCastExpr 0x128111f80 <col:9> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x128111f60 <col:9> 'unsigned int' lvalue Var 0x128822f08 'copied' 'unsigned int'
