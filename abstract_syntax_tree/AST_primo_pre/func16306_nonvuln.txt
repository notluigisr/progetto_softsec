`-FunctionDecl 0x10300df18  line:1:5 invalid zmalloc_get_allocator_info 'int (int *, int *, int *)'
  |-ParmVarDecl 0x10300dd28 <col:32, col:40> col:40 invalid allocated 'int *'
  |-ParmVarDecl 0x10300dda8 <line:2:32, col:40> col:40 invalid active 'int *'
  |-ParmVarDecl 0x10300de28 <line:3:32, col:40> col:40 invalid resident 'int *'
  `-CompoundStmt 0x10300e178 <col:50, line:6:1>
    |-BinaryOperator 0x10300e128 <line:4:5, col:40> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x10300e010 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x10300dff8 <col:6> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x10300dfd8 <col:6> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x10300e108 <col:18, col:40> '<dependent type>' contains-errors '='
    |   |-UnaryOperator 0x10300e060 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x10300e048 <col:19> '<dependent type>' contains-errors <LValueToRValue>
    |   |   `-RecoveryExpr 0x10300e028 <col:19> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x10300e0e8 <col:30, col:40> '<dependent type>' contains-errors '='
    |     |-UnaryOperator 0x10300e0b0 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x10300e098 <col:31> '<dependent type>' contains-errors <LValueToRValue>
    |     |   `-RecoveryExpr 0x10300e078 <col:31> '<dependent type>' contains-errors lvalue
    |     `-IntegerLiteral 0x10300e0c8 <col:40> 'int' 0
    `-ReturnStmt 0x10300e168 <line:5:5, col:12>
      `-IntegerLiteral 0x10300e148 <col:12> 'int' 1
