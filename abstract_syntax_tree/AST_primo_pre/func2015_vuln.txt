`-FunctionDecl 0x12f928208  line:1:13 invalid is_legal_file 'int (const int)' static
  |-ParmVarDecl 0x12f9280f0 <col:27, <invalid sloc>> col:36 invalid 'const int'
  `-CompoundStmt 0x139009358 <line:2:1, line:21:1>
    |-IfStmt 0x12f928470 <line:5:2, line:8:2>
    | |-CallExpr 0x12f928408 <line:5:6, col:21> '<dependent type>' contains-errors
    | | `-CXXDependentScopeMemberExpr 0x12f9283c0 <col:6, col:15> '<dependent type>' contains-errors lvalue .empty
    | |   `-RecoveryExpr 0x12f9283a0 <col:6> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f928460 <col:24, line:8:2>
    |-IfStmt 0x12f928688 <line:10:2, line:13:2>
    | |-BinaryOperator 0x12f928620 <line:10:6, col:30> 'int' contains-errors '!='
    | | |-CallExpr 0x12f9285d8 <col:6, col:25> '<dependent type>' contains-errors
    | | | |-CXXDependentScopeMemberExpr 0x12f928590 <col:6, col:15> '<dependent type>' contains-errors lvalue .find
    | | | | `-RecoveryExpr 0x12f928570 <col:6> '<dependent type>' contains-errors lvalue
    | | | `-StringLiteral 0x12f9284f0 <col:20> 'char[4]' lvalue "STR"
    | | `-RecoveryExpr 0x12f928600 <col:30> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x12f928678 <col:49, line:13:2>
    `-IfStmt 0x139009338 <line:15:2, line:18:2>
      |-CallExpr 0x1390092a8 <line:15:6, col:31> '<dependent type>' contains-errors
      | |-DeclRefExpr 0x139009200 <col:6> 'int ()' Function 0x12f928748 'ends_with' 'int ()'
      | |-RecoveryExpr 0x139009288 <col:16> '<dependent type>' contains-errors lvalue
      | `-StringLiteral 0x139009238 <col:26> 'char[4]' lvalue "STR"
      `-CompoundStmt 0x139009328 <col:34, line:18:2>
