`-FunctionDecl 0x133128a58  line:1:1 invalid xsltParseStylesheetImport 'int (int, int)'
  |-ParmVarDecl 0x1331288f0 <col:27, col:45> col:45 referenced invalid style 'int'
  |-ParmVarDecl 0x133128970 <col:52, col:63> col:63 invalid cur 'int'
  `-CompoundStmt 0x133144c00 <col:68, line:83:1>
    |-DeclStmt 0x133128bc8 <line:2:5, col:17>
    | `-VarDecl 0x133128b28 <col:5, col:16> col:9 used ret 'int' cinit
    |   `-UnaryOperator 0x133128bb0 <col:15, col:16> 'int' prefix '-'
    |     `-IntegerLiteral 0x133128b90 <col:16> 'int' 1
    |-IfStmt 0x133128d90 <line:10:5, line:11:13>
    | |-RecoveryExpr 0x133128d08 <line:10:9, col:40> '_Bool' contains-errors
    | `-ReturnStmt 0x133128d80 <line:11:2, col:13>
    |   `-ImplicitCastExpr 0x133128d68 <col:9, col:13> 'int' <LValueToRValue>
    |     `-ParenExpr 0x133128d48 <col:9, col:13> 'int' lvalue
    |       `-DeclRefExpr 0x133128d28 <col:10> 'int' lvalue Var 0x133128b28 'ret' 'int'
    |-IfStmt 0x133142200 <line:14:5, line:18:5>
    | |-RecoveryExpr 0x133128f50 <line:14:9, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x1331421e8 <col:25, line:18:5>
    |   `-GotoStmt 0x1331421d0 <line:17:2, col:7> 'error' 0x133142180
    |-IfStmt 0x1331425a8 <line:22:5, line:26:5>
    | |-RecoveryExpr 0x1331424d8 <line:22:9, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x133142590 <col:22, line:26:5>
    |   `-GotoStmt 0x133142578 <line:25:2, col:7> 'error' 0x133142180
    |-WhileStmt 0x133142860 <line:29:5, line:38:5>
    | |-RecoveryExpr 0x1331425e8 <line:29:12, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x133142840 <col:25, line:38:5>
    |   |-IfStmt 0x133142630 <line:30:9, line:31:6>
    |   | |-RecoveryExpr 0x133142608 <line:30:13, col:25> '_Bool' contains-errors
    |   | `-BreakStmt 0x133142628 <line:31:6>
    |   `-IfStmt 0x133142820 <line:32:2, line:36:2>
    |     |-RecoveryExpr 0x133142750 <line:32:6, col:36> '_Bool' contains-errors
    |     `-CompoundStmt 0x133142808 <col:39, line:36:2>
    |       `-GotoStmt 0x1331427f0 <line:35:6, col:11> 'error' 0x133142180
    |-IfStmt 0x133142ce8 <line:42:5, line:52:5>
    | |-RecoveryExpr 0x1331429e8 <line:42:9, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x133142cc8 <col:22, line:52:5>
    |   |-DeclStmt 0x133142a88 <line:43:2, col:12>
    |   | `-VarDecl 0x133142a20 <col:2, col:6> col:6 used secres 'int'
    |   `-IfStmt 0x133142ca8 <line:46:2, line:51:2>
    |     |-BinaryOperator 0x133142c18 <line:46:6, col:16> 'int' '=='
    |     | |-ImplicitCastExpr 0x133142c00 <col:6> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x133142bc0 <col:6> 'int' lvalue Var 0x133142a20 'secres' 'int'
    |     | `-IntegerLiteral 0x133142be0 <col:16> 'int' 0
    |     `-CompoundStmt 0x133142c90 <col:19, line:51:2>
    |       `-GotoStmt 0x133142c78 <line:50:6, col:11> 'error' 0x133142180
    |-IfStmt 0x133142fe0 <line:56:5, line:60:5>
    | |-RecoveryExpr 0x133142f10 <line:56:9, col:19> '_Bool' contains-errors
    | `-CompoundStmt 0x133142fc8 <col:25, line:60:5>
    |   `-GotoStmt 0x133142fb0 <line:59:2, col:7> 'error' 0x133142180
    |-IfStmt 0x1331449a0 <line:63:5, line:72:2> has_else
    | |-RecoveryExpr 0x133144520 <line:63:9, col:16> '_Bool' contains-errors
    | |-CompoundStmt 0x133144870 <col:22, line:70:5>
    | | |-IfStmt 0x1331447f0 <line:66:2, line:68:2>
    | | | |-RecoveryExpr 0x1331446a0 <line:66:6, col:23> '_Bool' contains-errors
    | | | `-CompoundStmt 0x1331447e0 <col:29, line:68:2>
    | | `-BinaryOperator 0x133144850 <line:69:2, col:8> 'int' '='
    | |   |-DeclRefExpr 0x133144810 <col:2> 'int' lvalue Var 0x133128b28 'ret' 'int'
    | |   `-IntegerLiteral 0x133144830 <col:8> 'int' 0
    | `-CompoundStmt 0x133144990 <line:70:12, line:72:2>
    |-LabelStmt 0x133144af8 <line:74:1, col:6> 'error'
    | `-NullStmt 0x133144af0 <col:6>
    `-ReturnStmt 0x133144bf0 <line:82:5, col:16>
      `-ImplicitCastExpr 0x133144bd8 <col:12, col:16> 'int' <LValueToRValue>
        `-ParenExpr 0x133144bb8 <col:12, col:16> 'int' lvalue
          `-DeclRefExpr 0x133144b98 <col:13> 'int' lvalue Var 0x133128b28 'ret' 'int'
