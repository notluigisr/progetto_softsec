`-FunctionDecl 0x11d128358  line:1:1 xmlSchemaCheckParticleRangeOK 'int (int, int, int, int)'
  |-ParmVarDecl 0x11d1280d8 <col:31, col:35> col:35 used rmin 'int'
  |-ParmVarDecl 0x11d128158 <col:41, col:45> col:45 used rmax 'int'
  |-ParmVarDecl 0x11d1281d8 <line:2:10, col:14> col:14 used bmin 'int'
  |-ParmVarDecl 0x11d128258 <col:20, col:24> col:24 used bmax 'int'
  `-CompoundStmt 0x11d128768 <line:3:1, line:10:1>
    |-IfStmt 0x11d128548 <line:4:5, line:5:11>
    | |-BinaryOperator 0x11d1284d8 <line:4:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x11d1284a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x11d128468 <col:9> 'int' lvalue ParmVar 0x11d1280d8 'rmin' 'int'
    | | `-ImplicitCastExpr 0x11d1284c0 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x11d128488 <col:16> 'int' lvalue ParmVar 0x11d1281d8 'bmin' 'int'
    | `-ReturnStmt 0x11d128538 <line:5:2, col:11>
    |   `-ParenExpr 0x11d128518 <col:9, col:11> 'int'
    |     `-IntegerLiteral 0x11d1284f8 <col:10> 'int' 1
    |-IfStmt 0x11d1286f8 <line:6:5, line:8:11>
    | |-RecoveryExpr 0x11d128688 <line:6:9, line:7:14> '_Bool' contains-errors
    | `-ReturnStmt 0x11d1286e8 <line:8:2, col:11>
    |   `-ParenExpr 0x11d1286c8 <col:9, col:11> 'int'
    |     `-IntegerLiteral 0x11d1286a8 <col:10> 'int' 1
    `-ReturnStmt 0x11d128758 <line:9:5, col:14>
      `-ParenExpr 0x11d128738 <col:12, col:14> 'int'
        `-IntegerLiteral 0x11d128718 <col:13> 'int' 0
