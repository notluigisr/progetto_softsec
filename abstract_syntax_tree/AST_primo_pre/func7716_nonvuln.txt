`-FunctionDecl 0x158140a00  line:2:12 io_register_iowq_aff 'int (struct io_ring_ctx *, int)' static
  |-ParmVarDecl 0x158128648 <col:33, col:53> col:53 ctx 'struct io_ring_ctx *'
  |-ParmVarDecl 0x1581286c0 <col:58, col:63> col:63 __user 'int'
  `-CompoundStmt 0x158142af0 <line:4:1, line:26:13>
    |-DeclStmt 0x158140dc8 <line:5:2, col:48>
    | |-RecordDecl 0x158140b00 <col:2, col:9> col:9 struct io_uring_task
    | `-VarDecl 0x158140c68 <col:2, col:40> col:24 used tctx 'struct io_uring_task *' cinit
    |   `-CXXDependentScopeMemberExpr 0x158140d68 <col:31, col:40> '<dependent type>' contains-errors lvalue ->io_uring
    |     `-RecoveryExpr 0x158140d48 <col:31> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x158140e60 <line:7:2, col:9>
    | `-VarDecl 0x158140df8 <col:2, col:6> col:6 used ret 'int'
    |-IfStmt 0x158141020 <line:9:2, line:10:11>
    | |-BinaryOperator 0x158140f58 <line:9:6, col:22> 'int' contains-errors '||'
    | | |-UnaryOperator 0x158140eb0 <col:6, col:7> 'int' contains-errors prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x158140e98 <col:7> 'struct io_uring_task *' contains-errors <LValueToRValue>
    | | |   `-DeclRefExpr 0x158140e78 <col:7> 'struct io_uring_task *' contains-errors lvalue Var 0x158140c68 'tctx' 'struct io_uring_task *'
    | | `-UnaryOperator 0x158140f40 <col:15, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x158140f28 <col:16, col:22> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x158140f00 <col:16, col:22> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x158140ec8 <col:16> 'struct io_uring_task *' contains-errors lvalue Var 0x158140c68 'tctx' 'struct io_uring_task *'
    | `-ReturnStmt 0x158141010 <line:10:3, col:11>
    |   `-UnaryOperator 0x158140ff8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x158140fe0 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x158140fc0 <col:11> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x158141348 <line:12:2, line:13:11>
    | |-UnaryOperator 0x158141288 <line:12:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x158141258 <col:7, col:46> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x158141150 <col:7> 'int ()' Function 0x158141098 'alloc_cpumask_var' 'int ()'
    | |   |-UnaryOperator 0x158141220 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | `-RecoveryExpr 0x158141200 <col:26> '<dependent type>' contains-errors lvalue
    | |   `-RecoveryExpr 0x158141238 <col:36> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x158141338 <line:13:3, col:11>
    |   `-UnaryOperator 0x158141320 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x158141308 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x1581412e8 <col:11> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x1581414c8 <line:15:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x158141448 <col:2> 'int ()' Function 0x158141390 'cpumask_clear' 'int ()'
    | `-RecoveryExpr 0x1581414a8 <col:16> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1581428e8 <line:19:2, line:22:2>
    | |-CallExpr 0x158141948 <line:19:6, col:39> '<dependent type>' contains-errors
    | | |-DeclRefExpr 0x158141848 <col:6> 'int ()' Function 0x158141790 'copy_from_user' 'int ()'
    | | |-RecoveryExpr 0x1581418e8 <col:21> '<dependent type>' contains-errors lvalue
    | | |-RecoveryExpr 0x158141908 <col:31> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x158141928 <col:36> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1581428d8 <col:42, line:22:2>
    `-ReturnStmt 0x158142ae0 <line:26:2, col:9>
      `-ImplicitCastExpr 0x158142ac8 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x158142aa8 <col:9> 'int' lvalue Var 0x158140df8 'ret' 'int'
