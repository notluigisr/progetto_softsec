`-FunctionDecl 0x13600dda8  line:1:1 PHP_FUNCTION 'int (int)'
  |-ParmVarDecl 0x13600dcd8 <col:14> col:14 unserialize 'int'
  `-CompoundStmt 0x135924908 <line:2:1, line:60:1>
    |-DeclStmt 0x13600df70 <line:3:2, col:18>
    | `-VarDecl 0x13600deb8 <col:2, col:14> col:8 used buf 'char *' cinit
    |   `-RecoveryExpr 0x13600df50 <col:14> '<dependent type>' contains-errors lvalue
    |-UnaryExprOrTypeTraitExpr 0x13600dfe0 <line:4:2, col:9> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x13600dfc0 <col:9> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13600e0b0 <line:5:2, col:24>
    | `-VarDecl 0x13600e048 <col:2, col:23> col:23 used p 'const unsigned char *'
    |-IfStmt 0x136027d90 <line:10:2, line:12:2>
    | |-BinaryOperator 0x136027d60 <line:10:6, col:81> 'int' contains-errors '=='
    | | |-CallExpr 0x136027cf8 <col:6, col:76> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x13600e2c0 <col:6> 'int ()' Function 0x13600e208 'zend_parse_parameters' 'int ()'
    | | | |-CallExpr 0x136027c68 <col:28, col:42> 'int'
    | | | | `-ImplicitCastExpr 0x136027c50 <col:28> 'int (*)()' <FunctionToPointerDecay>
    | | | |   `-DeclRefExpr 0x13600e3c0 <col:28> 'int ()' Function 0x13600e308 'ZEND_NUM_ARGS' 'int ()'
    | | | |-StringLiteral 0x136027ab0 <col:45> 'char[4]' lvalue "STR"
    | | | |-UnaryOperator 0x136027b20 <col:52, col:53> 'char **' contains-errors prefix '&' cannot overflow
    | | | | `-DeclRefExpr 0x136027ad0 <col:53> 'char *' contains-errors lvalue Var 0x13600deb8 'buf' 'char *'
    | | | |-UnaryOperator 0x136027ca8 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | | | `-RecoveryExpr 0x136027c88 <col:59> '<dependent type>' contains-errors lvalue
    | | | `-UnaryOperator 0x136027ce0 <col:68, col:69> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   `-RecoveryExpr 0x136027cc0 <col:69> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x136027d40 <col:81> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x136027d80 <col:90, line:12:2>
    |-IfStmt 0x136027e00 <line:14:2, line:16:2>
    | |-RecoveryExpr 0x136027dd0 <line:14:6, col:17> '_Bool' contains-errors
    | `-CompoundStmt 0x136027df0 <col:20, line:16:2>
    |-BinaryOperator 0x136027eb8 <line:18:2, col:29> 'const unsigned char *' contains-errors '='
    | |-DeclRefExpr 0x136027e20 <col:2> 'const unsigned char *' lvalue Var 0x13600e048 'p' 'const unsigned char *'
    | `-CStyleCastExpr 0x136027e90 <col:6, col:29> 'const unsigned char *' contains-errors <BitCast>
    |   `-ImplicitCastExpr 0x136027e78 <col:29> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x136027e40 <col:29> 'char *' contains-errors lvalue Var 0x13600deb8 'buf' 'char *'
    |-IfStmt 0x1360289b8 <line:20:2, line:37:2>
    | |-RecoveryExpr 0x136027fd8 <line:20:5, col:16> '_Bool' contains-errors
    | `-CompoundStmt 0x136028998 <col:22, line:37:2>
    |   |-IfStmt 0x1360287e8 <line:22:3, line:25:3>
    |   | |-RecoveryExpr 0x136028438 <line:22:6, col:73> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1360287d8 <col:76, line:25:3>
    |   `-IfStmt 0x136028978 <line:26:3, line:36:3>
    |     |-RecoveryExpr 0x136028828 <line:26:6, col:41> '_Bool' contains-errors
    |     `-CompoundStmt 0x136028968 <col:51, line:36:3>
    |-IfStmt 0x135924738 <line:39:2, line:51:2>
    | |-RecoveryExpr 0x135923f68 <line:39:6, col:82> '_Bool' contains-errors
    | `-CompoundStmt 0x135924718 <col:85, line:51:2>
    |   |-IfStmt 0x1359242b8 <line:41:3, line:44:3>
    |   | |-RecoveryExpr 0x135924088 <line:41:7> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1359242a8 <col:19, line:44:3>
    |   `-IfStmt 0x1359246f8 <line:46:3, line:49:3>
    |     |-RecoveryExpr 0x1359244d8 <line:46:7, col:20> '_Bool' contains-errors
    |     `-CompoundStmt 0x1359246e8 <col:23, line:49:3>
    `-IfStmt 0x1359248e8 <line:56:2, line:59:2>
      |-RecoveryExpr 0x135924878 <line:56:6> '_Bool' contains-errors
      `-CompoundStmt 0x1359248d8 <col:18, line:59:2>
