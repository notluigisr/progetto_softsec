`-FunctionDecl 0x12b00de88  line:1:1 invalid f_mzeval 'int (int *, int *)'
  |-ParmVarDecl 0x12b00dd28 <col:10, col:20> col:20 invalid argvars 'int *'
  |-ParmVarDecl 0x12b00dda8 <col:29, col:39> col:39 invalid rettv 'int *'
  `-CompoundStmt 0x12b027890 <line:2:1, line:8:1>
    |-DeclStmt 0x12b00dfc0 <line:3:5, col:16>
    | `-VarDecl 0x12b00df58 <col:5, col:13> col:13 used str 'char *'
    |-DeclStmt 0x12b00e068 <line:4:5, col:26>
    | `-VarDecl 0x12b00e000 <col:5, col:12> col:12 invalid buf 'char'
    |-BinaryOperator 0x12b00e300 <line:6:5, col:45> 'char *' contains-errors '='
    | |-DeclRefExpr 0x12b00e080 <col:5> 'char *' lvalue Var 0x12b00df58 'str' 'char *'
    | `-CallExpr 0x12b00e2d0 <col:11, col:45> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x12b00e200 <col:11> 'int ()' Function 0x12b00e148 'tv_get_string_buf' 'int ()'
    |   |-UnaryOperator 0x12b00e298 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-ArraySubscriptExpr 0x12b00e278 <col:30, col:39> '<dependent type>' contains-errors lvalue
    |   |   |-ImplicitCastExpr 0x12b00e260 <col:30> '<dependent type>' contains-errors <LValueToRValue>
    |   |   | `-RecoveryExpr 0x12b00e220 <col:30> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x12b00e240 <col:38> 'int' 0
    |   `-RecoveryExpr 0x12b00e2b0 <col:42> '<dependent type>' contains-errors lvalue
    `-CallExpr 0x12b027860 <line:7:5, col:25> '<dependent type>' contains-errors
      |-DeclRefExpr 0x12b027800 <col:5> 'int ()' Function 0x12b00e348 'do_mzeval' 'int ()'
      |-DeclRefExpr 0x12b027820 <col:15> 'char *' lvalue Var 0x12b00df58 'str' 'char *'
      `-RecoveryExpr 0x12b027840 <col:20> '<dependent type>' contains-errors lvalue
