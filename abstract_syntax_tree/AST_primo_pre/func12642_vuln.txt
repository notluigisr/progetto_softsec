`-FunctionDecl 0x1249281a8  line:1:5 mingw_rmdir 'int (const char *)'
  |-ParmVarDecl 0x1249280d8 <col:17, col:29> col:29 used pathname 'const char *'
  `-CompoundStmt 0x12500ad88 <line:2:1, line:26:1>
    |-DeclStmt 0x1249283d8 <line:3:2, col:20>
    | |-VarDecl 0x1249282b8 <col:2, col:6> col:6 used ret 'int'
    | `-VarDecl 0x124928338 <col:2, col:19> col:11 used tries 'int' cinit
    |   `-IntegerLiteral 0x1249283a0 <col:19> 'int' 0
    |-IfStmt 0x124928720 <line:5:2, line:6:11>
    | |-BinaryOperator 0x1249286b8 <line:5:6, col:44> 'int' '<'
    | | |-CallExpr 0x124928658 <col:6, col:40> 'int'
    | | | |-ImplicitCastExpr 0x124928640 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x124928520 <col:6> 'int ()' Function 0x124928468 'xutftowcs_path' 'int ()'
    | | | |-ImplicitCastExpr 0x124928688 <col:21> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1249285e8 <col:21> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'
    | | | `-ImplicitCastExpr 0x1249286a0 <col:32> 'const char *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x124928558 <col:32> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'
    | | `-IntegerLiteral 0x1249285a8 <col:44> 'int' 0
    | `-ReturnStmt 0x124928710 <line:6:3, col:11>
    |   `-UnaryOperator 0x1249286f8 <col:10, col:11> 'int' prefix '-'
    |     `-IntegerLiteral 0x1249286d8 <col:11> 'int' 1
    |-WhileStmt 0x125009cb8 <line:8:2, line:20:2>
    | |-BinaryOperator 0x1250093c0 <line:8:9, col:69> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x125009338 <col:9, col:40> 'int' '=='
    | | | |-ParenExpr 0x125009318 <col:9, col:34> 'int'
    | | | | `-BinaryOperator 0x1250092f8 <col:10, col:33> 'int' '='
    | | | |   |-DeclRefExpr 0x124928740 <col:10> 'int' lvalue Var 0x1249282b8 'ret' 'int'
    | | | |   `-CallExpr 0x1250092b8 <col:16, col:33> 'int'
    | | | |     |-ImplicitCastExpr 0x1250092a0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    | | | |     | `-DeclRefExpr 0x125008eb8 <col:16> 'int ()' Function 0x125008e00 '_wrmdir' 'int ()'
    | | | |     `-ImplicitCastExpr 0x1250092e0 <col:24> 'const char *' <LValueToRValue>
    | | | |       `-DeclRefExpr 0x125008f38 <col:24> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'
    | | | `-UnaryOperator 0x125009010 <col:39, col:40> 'int' prefix '-'
    | | |   `-IntegerLiteral 0x125008ff0 <col:40> 'int' 1
    | | `-BinaryOperator 0x1250093a0 <col:45, col:69> 'int' contains-errors '<'
    | |   |-DeclRefExpr 0x125009048 <col:45> 'int' lvalue Var 0x124928338 'tries' 'int'
    | |   `-CallExpr 0x125009378 <col:53, col:69> '<dependent type>' contains-errors
    | |     |-DeclRefExpr 0x125009148 <col:53> 'int ()' Function 0x125009090 'ARRAY_SIZE' 'int ()'
    | |     `-RecoveryExpr 0x125009358 <col:64> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x125009c90 <col:72, line:20:2>
    |   |-IfStmt 0x1250098c0 <line:11:3, line:12:4>
    |   | |-BinaryOperator 0x125009898 <line:11:7, col:16> 'int' contains-errors '!='
    |   | | |-RecoveryExpr 0x125009858 <col:7> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x125009878 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-BreakStmt 0x1250098b8 <line:12:4>
    |   |-IfStmt 0x125009b00 <line:13:3, line:16:3>
    |   | |-UnaryOperator 0x125009ab0 <line:13:7, col:30> 'int' prefix '!' cannot overflow
    |   | | `-CallExpr 0x125009a70 <col:8, col:30> 'int'
    |   | |   |-ImplicitCastExpr 0x125009a58 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |   | |   | `-DeclRefExpr 0x1250099c0 <col:8> 'int ()' Function 0x125009908 'is_dir_empty' 'int ()'
    |   | |   `-ImplicitCastExpr 0x125009a98 <col:21> 'const char *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x125009a38 <col:21> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'
    |   | `-CompoundStmt 0x125009ae8 <col:33, line:16:3>
    |   |   `-BreakStmt 0x125009ae0 <line:15:4>
    |   `-UnaryOperator 0x125009c78 <line:19:3, col:8> 'int' postfix '++'
    |     `-DeclRefExpr 0x125009c58 <col:3> 'int' lvalue Var 0x124928338 'tries' 'int'
    `-ReturnStmt 0x12500ad78 <line:25:2, col:9>
      `-ImplicitCastExpr 0x12500ad60 <col:9> 'int' <LValueToRValue>
        `-DeclRefExpr 0x12500ad40 <col:9> 'int' lvalue Var 0x1249282b8 'ret' 'int'
