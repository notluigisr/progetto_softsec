`-FunctionDecl 0x13e008688  line:1:5 invalid bt_sock_stream_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)'
  |-ParmVarDecl 0x13c891248 <col:28, col:42> col:42 iocb 'struct kiocb *'
  |-ParmVarDecl 0x13e008228 <col:48, col:63> col:63 used sock 'struct socket *'
  |-ParmVarDecl 0x13e0083f8 <line:2:11, col:26> col:26 used msg 'struct msghdr *'
  |-ParmVarDecl 0x13e008490 <col:31, col:38> col:38 referenced invalid size 'int'
  |-ParmVarDecl 0x13e008510 <col:44, col:48> col:48 used flags 'int'
  `-CompoundStmt 0x13d0a4860 <line:3:1, line:105:1>
    |-DeclStmt 0x13e0089a8 <line:4:2, col:28>
    | |-RecordDecl 0x13e008758 <col:2, col:9> col:9 struct sock
    | `-VarDecl 0x13e0088c8 <col:2, col:26> col:15 used sk 'struct sock *' cinit
    |   `-RecoveryExpr 0x13e008968 <col:20, col:26> '<dependent type>' contains-errors lvalue
    |     `-DeclRefExpr 0x13e008930 <col:20> 'struct socket *' lvalue ParmVar 0x13e008228 'sock' 'struct socket *'
    |-DeclStmt 0x13e008a60 <line:5:2, col:13>
    | `-VarDecl 0x13e0089d8 <col:2, col:12> col:6 used err 'int' cinit
    |   `-IntegerLiteral 0x13e008a40 <col:12> 'int' 0
    |-BinaryOperator 0x13e008bc0 <line:6:2, col:26> '<dependent type>' contains-errors ','
    | |-UnaryExprOrTypeTraitExpr 0x13e008b60 <col:2, col:9> 'unsigned long' contains-errors sizeof
    | | `-RecoveryExpr 0x13e008b40 <col:9> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x13e008ba0 <col:17, col:26> '<dependent type>' contains-errors '='
    |   |-RecoveryExpr 0x13e008b80 <col:17> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x13e008ae0 <col:26> 'int' 0
    |-DeclStmt 0x13e008c60 <line:7:2, col:12>
    | `-VarDecl 0x13e008bf8 <col:2, col:7> col:7 used timeo 'long'
    |-IfStmt 0x13e008de8 <line:9:2, line:10:11>
    | |-BinaryOperator 0x13e008cf0 <line:9:6, col:14> '<dependent type>' contains-errors '&'
    | | |-DeclRefExpr 0x13e008c78 <col:6> 'int' lvalue ParmVar 0x13e008510 'flags' 'int'
    | | `-RecoveryExpr 0x13e008cd0 <col:14> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13e008dd8 <line:10:3, col:11>
    |   `-UnaryOperator 0x13e008dc0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow
    |     `-ImplicitCastExpr 0x13e008da8 <col:11> '<dependent type>' contains-errors <LValueToRValue>
    |       `-RecoveryExpr 0x13e008d58 <col:11> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x13e008e88 <line:12:2, col:21> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x13e008e40 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x13e008e08 <col:2> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'
    | `-IntegerLiteral 0x13e008e68 <col:21> 'int' 0
    |-CallExpr 0x13e0090c0 <line:14:2, col:24> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13e009000 <col:2> 'int ()' Function 0x13e008f48 'BT_DBG' 'int ()'
    | |-StringLiteral 0x13e009060 <col:9> 'char[4]' lvalue "STR"
    | |-DeclRefExpr 0x13e009080 <col:16> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | `-RecoveryExpr 0x13e0090a0 <col:20> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13e00fc68 <line:16:2, col:14> 'int' contains-errors
    | |-ImplicitCastExpr 0x13e00fc50 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x13e0091d8 <col:2> 'int ()' Function 0x13e009120 'lock_sock' 'int ()'
    | `-ImplicitCastExpr 0x13e00fc90 <col:12> 'struct sock *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x13e00fc00 <col:12> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    |-BinaryOperator 0x13e0100d0 <line:19:2, col:49> 'long' contains-errors '='
    | |-DeclRefExpr 0x13e00fe78 <col:2> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'
    | `-CallExpr 0x13e0100a0 <col:11, col:49> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13e00ff78 <col:11> 'int ()' Function 0x13e00fec0 'sock_rcvtimeo' 'int ()'
    |   |-DeclRefExpr 0x13e00ff98 <col:25> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    |   `-BinaryOperator 0x13e010080 <col:29, col:37> '<dependent type>' contains-errors '&'
    |     |-DeclRefExpr 0x13e00ffb8 <col:29> 'int' lvalue ParmVar 0x13e008510 'flags' 'int'
    |     `-RecoveryExpr 0x13e010060 <col:37> '<dependent type>' contains-errors lvalue
    |-DoStmt 0x13d0a4688 <line:21:2, line:100:15>
    | |-CompoundStmt 0x13d0a4618 <line:21:5, line:100:2>
    | | |-DeclStmt 0x13e0102d8 <line:22:3, col:22>
    | | | |-RecordDecl 0x13e0100f0 <col:3, col:10> col:10 struct sk_buff
    | | | `-VarDecl 0x13e010258 <col:3, col:19> col:19 used skb 'struct sk_buff *'
    | | |-DeclStmt 0x13e010370 <line:23:3, col:12>
    | | | `-VarDecl 0x13e010308 <col:3, col:7> col:7 used chunk 'int'
    | | |-BinaryOperator 0x13e010548 <line:25:3, col:42> 'struct sk_buff *' contains-errors '='
    | | | |-DeclRefExpr 0x13e010388 <col:3> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | | | `-CallExpr 0x13e010520 <col:9, col:42> '<dependent type>' contains-errors
    | | |   |-DeclRefExpr 0x13e010488 <col:9> 'int ()' Function 0x13e0103d0 'skb_dequeue' 'int ()'
    | | |   `-UnaryOperator 0x13e010508 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |     `-RecoveryExpr 0x13e0104e0 <col:22, col:26> '<dependent type>' contains-errors lvalue
    | | |       `-DeclRefExpr 0x13e0104a8 <col:22> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | | |-IfStmt 0x13d0a27d8 <line:26:3, line:47:3>
    | | | |-UnaryOperator 0x13e0105a0 <line:26:7, col:8> 'int' prefix '!' cannot overflow
    | | | | `-ImplicitCastExpr 0x13e010588 <col:8> 'struct sk_buff *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x13e010568 <col:8> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | | | `-CompoundStmt 0x13d0a2788 <col:13, line:47:3>
    | | |   |-IfStmt 0x13e010670 <line:27:4, line:28:5>
    | | |   | |-BinaryOperator 0x13e010648 <line:27:8, col:18> 'int' contains-errors '>='
    | | |   | | |-RecoveryExpr 0x13e010608 <col:8> '<dependent type>' contains-errors lvalue
    | | |   | | `-RecoveryExpr 0x13e010628 <col:18> '<dependent type>' contains-errors lvalue
    | | |   | `-BreakStmt 0x13e010668 <line:28:5>
    | | |   |-BinaryOperator 0x13e010828 <line:30:4, col:23> 'int' contains-errors '='
    | | |   | |-DeclRefExpr 0x13e010690 <col:4> 'int' lvalue Var 0x13e0089d8 'err' 'int'
    | | |   | `-CallExpr 0x13e0107e8 <col:10, col:23> 'int' contains-errors
    | | |   |   |-ImplicitCastExpr 0x13e0107d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    | | |   |   | `-DeclRefExpr 0x13e010790 <col:10> 'int ()' Function 0x13e0106d8 'sock_error' 'int ()'
    | | |   |   `-ImplicitCastExpr 0x13e010810 <col:21> 'struct sock *' contains-errors <LValueToRValue>
    | | |   |     `-DeclRefExpr 0x13e0107b0 <col:21> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | | |   |-IfStmt 0x13e010888 <line:31:4, line:32:5>
    | | |   | |-ImplicitCastExpr 0x13e010868 <line:31:8> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x13e010848 <col:8> 'int' lvalue Var 0x13e0089d8 'err' 'int'
    | | |   | `-BreakStmt 0x13e010880 <line:32:5>
    | | |   |-IfStmt 0x13e010930 <line:33:4, line:34:5>
    | | |   | |-RecoveryExpr 0x13e010908 <line:33:8, col:26> '_Bool' contains-errors
    | | |   | `-BreakStmt 0x13e010928 <line:34:5>
    | | |   |-IfStmt 0x13e0109c8 <line:37:4, line:38:5>
    | | |   | |-UnaryOperator 0x13e0109a8 <line:37:8, col:9> 'int' prefix '!' cannot overflow
    | | |   | | `-ImplicitCastExpr 0x13e010990 <col:9> 'long' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x13e010970 <col:9> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'
    | | |   | `-BreakStmt 0x13e0109c0 <line:38:5>
    | | |   |-BinaryOperator 0x13e010bd8 <line:40:4, col:39> 'long' contains-errors '='
    | | |   | |-DeclRefExpr 0x13e0109e8 <col:4> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'
    | | |   | `-ImplicitCastExpr 0x13e010bc0 <col:12, col:39> 'long' contains-errors <IntegralCast>
    | | |   |   `-CallExpr 0x13e010b60 <col:12, col:39> 'int' contains-errors
    | | |   |     |-ImplicitCastExpr 0x13e010b48 <col:12> 'int (*)()' <FunctionToPointerDecay>
    | | |   |     | `-DeclRefExpr 0x13e010ae8 <col:12> 'int ()' Function 0x13e010a30 'bt_sock_data_wait' 'int ()'
    | | |   |     |-ImplicitCastExpr 0x13e010b90 <col:30> 'struct sock *' contains-errors <LValueToRValue>
    | | |   |     | `-DeclRefExpr 0x13e010b08 <col:30> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | | |   |     `-ImplicitCastExpr 0x13e010ba8 <col:34> 'long' <LValueToRValue>
    | | |   |       `-DeclRefExpr 0x13e010b28 <col:34> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'
    | | |   |-IfStmt 0x13d0a2760 <line:42:4, line:45:4>
    | | |   | |-RecoveryExpr 0x13d0a2500 <line:42:8, col:30> '_Bool' contains-errors
    | | |   | `-CompoundStmt 0x13d0a2740 <col:33, line:45:4>
    | | |   |   |-BinaryOperator 0x13d0a26b8 <line:43:5, col:32> 'int' '='
    | | |   |   | |-DeclRefExpr 0x13d0a2520 <col:5> 'int' lvalue Var 0x13e0089d8 'err' 'int'
    | | |   |   | `-CallExpr 0x13d0a2678 <col:11, col:32> 'int'
    | | |   |   |   |-ImplicitCastExpr 0x13d0a2660 <col:11> 'int (*)()' <FunctionToPointerDecay>
    | | |   |   |   | `-DeclRefExpr 0x13d0a2620 <col:11> 'int ()' Function 0x13d0a2568 'sock_intr_errno' 'int ()'
    | | |   |   |   `-ImplicitCastExpr 0x13d0a26a0 <col:27> 'long' <LValueToRValue>
    | | |   |   |     `-DeclRefExpr 0x13d0a2640 <col:27> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'
    | | |   |   `-GotoStmt 0x13d0a2728 <line:44:5, col:10> 'out' 0x13d0a26d8
    | | |   `-ContinueStmt 0x13d0a2780 <line:46:4>
    | | |-IfStmt 0x13d0a2da8 <line:50:3, line:55:3>
    | | | |-CallExpr 0x13d0a2b58 <line:50:7, col:58> '<dependent type>' contains-errors
    | | | | |-DeclRefExpr 0x13d0a2a78 <col:7> 'int ()' Function 0x13d0a29c0 'skb_copy_datagram_iovec' 'int ()'
    | | | | |-DeclRefExpr 0x13d0a2a98 <col:31> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | | | | |-IntegerLiteral 0x13d0a2ab8 <col:36> 'int' 0
    | | | | |-RecoveryExpr 0x13d0a2b10 <col:39, col:44> '<dependent type>' contains-errors lvalue
    | | | | | `-DeclRefExpr 0x13d0a2ad8 <col:39> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'
    | | | | `-DeclRefExpr 0x13d0a2b38 <col:53> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | | | `-CompoundStmt 0x13d0a2d88 <col:61, line:55:3>
    | | |   |-CallExpr 0x13d0a2d30 <line:51:4, col:45> '<dependent type>' contains-errors
    | | |   | |-DeclRefExpr 0x13d0a2c78 <col:4> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'
    | | |   | |-UnaryOperator 0x13d0a2cf8 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | | |   | | `-RecoveryExpr 0x13d0a2cd0 <col:20, col:24> '<dependent type>' contains-errors lvalue
    | | |   | |   `-DeclRefExpr 0x13d0a2c98 <col:20> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | | |   | `-DeclRefExpr 0x13d0a2d10 <col:42> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | | |   `-BreakStmt 0x13d0a2d80 <line:54:4>
    | | |-CompoundAssignOperator 0x13d0a2e50 <line:57:3, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | | | |-RecoveryExpr 0x13d0a2e08 <col:3> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x13d0a2de8 <col:3> 'int' lvalue ParmVar 0x13e008490 'size' 'int'
    | | | `-DeclRefExpr 0x13d0a2e30 <col:13> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | | |-CallExpr 0x13d0a2ff8 <line:59:3, col:38> 'int' contains-errors
    | | | |-ImplicitCastExpr 0x13d0a2fe0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x13d0a2f60 <col:3> 'int ()' Function 0x13d0a2ea8 'sock_recv_ts_and_drops' 'int ()'
    | | | |-ImplicitCastExpr 0x13d0a3030 <col:26> 'struct msghdr *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13d0a2f80 <col:26> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'
    | | | |-ImplicitCastExpr 0x13d0a3048 <col:31> 'struct sock *' contains-errors <LValueToRValue>
    | | | | `-DeclRefExpr 0x13d0a2fa0 <col:31> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | | | `-ImplicitCastExpr 0x13d0a3060 <col:35> 'struct sk_buff *' <LValueToRValue>
    | | |   `-DeclRefExpr 0x13d0a2fc0 <col:35> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | | `-IfStmt 0x13d0a45e8 <line:61:3, line:99:3> has_else
    | |   |-RecoveryExpr 0x13d0a3098 <line:61:7, col:25> '_Bool' contains-errors
    | |   |-CompoundStmt 0x13d0a44a8 <col:28, line:95:3>
    | |   | |-DeclStmt 0x13d0a32b0 <line:62:4, col:34>
    | |   | | `-VarDecl 0x13d0a30d0 <col:4, col:33> col:8 used skb_len 'int' cinit
    | |   | |   `-CallExpr 0x13d0a3270 <col:18, col:33> 'int'
    | |   | |     |-ImplicitCastExpr 0x13d0a3258 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |   | |     | `-DeclRefExpr 0x13d0a3218 <col:18> 'int ()' Function 0x13d0a3160 'skb_headlen' 'int ()'
    | |   | |     `-ImplicitCastExpr 0x13d0a3298 <col:30> 'struct sk_buff *' <LValueToRValue>
    | |   | |       `-DeclRefExpr 0x13d0a3238 <col:30> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |-IfStmt 0x13d0a4170 <line:64:4, line:87:4> has_else
    | |   | | |-BinaryOperator 0x13d0a3338 <line:64:8, col:17> 'int' '<='
    | |   | | | |-ImplicitCastExpr 0x13d0a3308 <col:8> 'int' <LValueToRValue>
    | |   | | | | `-DeclRefExpr 0x13d0a32c8 <col:8> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | | | `-ImplicitCastExpr 0x13d0a3320 <col:17> 'int' <LValueToRValue>
    | |   | | |   `-DeclRefExpr 0x13d0a32e8 <col:17> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'
    | |   | | |-CompoundStmt 0x13d0a3590 <col:26, line:66:4>
    | |   | | | `-CallExpr 0x13d0a3530 <line:65:5, col:26> 'int'
    | |   | | |   |-ImplicitCastExpr 0x13d0a3518 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | |   | | |   | `-DeclRefExpr 0x13d0a34b8 <col:5> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'
    | |   | | |   |-ImplicitCastExpr 0x13d0a3560 <col:16> 'struct sk_buff *' <LValueToRValue>
    | |   | | |   | `-DeclRefExpr 0x13d0a34d8 <col:16> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | | |   `-ImplicitCastExpr 0x13d0a3578 <col:21> 'int' <LValueToRValue>
    | |   | | |     `-DeclRefExpr 0x13d0a34f8 <col:21> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | | `-CompoundStmt 0x13d0a4138 <line:66:11, line:87:4>
    | |   | |   |-DeclStmt 0x13d0a36a0 <line:67:5, col:25>
    | |   | |   | `-VarDecl 0x13d0a3638 <col:5, col:21> col:21 used frag 'struct sk_buff *'
    | |   | |   |-CallExpr 0x13d0a3730 <line:69:5, col:28> 'int'
    | |   | |   | |-ImplicitCastExpr 0x13d0a3718 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | |   | |   | | `-DeclRefExpr 0x13d0a36b8 <col:5> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'
    | |   | |   | |-ImplicitCastExpr 0x13d0a3760 <col:16> 'struct sk_buff *' <LValueToRValue>
    | |   | |   | | `-DeclRefExpr 0x13d0a36d8 <col:16> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |   | `-ImplicitCastExpr 0x13d0a3778 <col:21> 'int' <LValueToRValue>
    | |   | |   |   `-DeclRefExpr 0x13d0a36f8 <col:21> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'
    | |   | |   |-CompoundAssignOperator 0x13d0a37e8 <line:70:5, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
    | |   | |   | |-DeclRefExpr 0x13d0a3790 <col:5> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |   | `-ImplicitCastExpr 0x13d0a37d0 <col:14> 'int' <LValueToRValue>
    | |   | |   |   `-DeclRefExpr 0x13d0a37b0 <col:14> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'
    | |   | |   |-CallExpr 0x13d0a3970 <line:72:5, col:29> 'int'
    | |   | |   | |-ImplicitCastExpr 0x13d0a3958 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | |   | |   | | `-DeclRefExpr 0x13d0a38f8 <col:5> 'int ()' Function 0x13d0a3840 'skb_walk_frags' 'int ()'
    | |   | |   | |-ImplicitCastExpr 0x13d0a39a0 <col:20> 'struct sk_buff *' <LValueToRValue>
    | |   | |   | | `-DeclRefExpr 0x13d0a3918 <col:20> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |   | `-ImplicitCastExpr 0x13d0a39b8 <col:25> 'struct sk_buff *' <LValueToRValue>
    | |   | |   |   `-DeclRefExpr 0x13d0a3938 <col:25> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |   `-CompoundStmt 0x13d0a4120 <col:31, line:86:5>
    | |   | |     `-IfStmt 0x13d0a40f0 <line:73:6, line:85:6> has_else
    | |   | |       |-BinaryOperator 0x13d0a3a50 <line:73:10, col:25> 'int' contains-errors '<='
    | |   | |       | |-DeclRefExpr 0x13d0a39d0 <col:10> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |       | `-RecoveryExpr 0x13d0a3a28 <col:19, col:25> '<dependent type>' contains-errors lvalue
    | |   | |       |   `-DeclRefExpr 0x13d0a39f0 <col:19> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |       |-CompoundStmt 0x13d0a3cb0 <col:30, line:79:6>
    | |   | |       | |-CompoundAssignOperator 0x13d0a3af0 <line:75:7, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |       | | |-RecoveryExpr 0x13d0a3aa8 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |       | | | `-DeclRefExpr 0x13d0a3a70 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |       | | `-DeclRefExpr 0x13d0a3ad0 <col:19> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |       | |-CompoundAssignOperator 0x13d0a3ba0 <line:76:7, col:24> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |       | | |-RecoveryExpr 0x13d0a3b58 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |       | | | `-DeclRefExpr 0x13d0a3b20 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |       | | `-DeclRefExpr 0x13d0a3b80 <col:24> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |       | |-CallExpr 0x13d0a3c48 <line:77:7, col:29> 'int'
    | |   | |       | | |-ImplicitCastExpr 0x13d0a3c30 <col:7> 'int (*)()' <FunctionToPointerDecay>
    | |   | |       | | | `-DeclRefExpr 0x13d0a3bd0 <col:7> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'
    | |   | |       | | |-ImplicitCastExpr 0x13d0a3c78 <col:18> 'struct sk_buff *' <LValueToRValue>
    | |   | |       | | | `-DeclRefExpr 0x13d0a3bf0 <col:18> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |       | | `-ImplicitCastExpr 0x13d0a3c90 <col:24> 'int' <LValueToRValue>
    | |   | |       | |   `-DeclRefExpr 0x13d0a3c10 <col:24> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |       | `-BreakStmt 0x13d0a3ca8 <line:78:7>
    | |   | |       `-IfStmt 0x13d0a40d0 <line:79:13, line:85:6>
    | |   | |         |-RecoveryExpr 0x13d0a3d18 <line:79:17, col:23> '<dependent type>' contains-errors lvalue
    | |   | |         | `-DeclRefExpr 0x13d0a3ce0 <col:17> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |         `-CompoundStmt 0x13d0a40a0 <col:28, line:85:6>
    | |   | |           |-CompoundAssignOperator 0x13d0a3dc0 <line:81:7, col:22> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |           | |-DeclRefExpr 0x13d0a3d40 <col:7> 'int' lvalue Var 0x13e010308 'chunk' 'int'
    | |   | |           | `-RecoveryExpr 0x13d0a3d98 <col:16, col:22> '<dependent type>' contains-errors lvalue
    | |   | |           |   `-DeclRefExpr 0x13d0a3d60 <col:16> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |           |-CompoundAssignOperator 0x13d0a3eb0 <line:82:7, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |           | |-RecoveryExpr 0x13d0a3e28 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |           | | `-DeclRefExpr 0x13d0a3df0 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |           | `-RecoveryExpr 0x13d0a3e88 <col:19, col:25> '<dependent type>' contains-errors lvalue
    | |   | |           |   `-DeclRefExpr 0x13d0a3e50 <col:19> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |           |-CompoundAssignOperator 0x13d0a3fa0 <line:83:7, col:30> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |   | |           | |-RecoveryExpr 0x13d0a3f18 <col:7, col:12> '<dependent type>' contains-errors lvalue
    | |   | |           | | `-DeclRefExpr 0x13d0a3ee0 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |           | `-RecoveryExpr 0x13d0a3f78 <col:24, col:30> '<dependent type>' contains-errors lvalue
    | |   | |           |   `-DeclRefExpr 0x13d0a3f40 <col:24> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |           `-CallExpr 0x13d0a4070 <line:84:7, col:33> '<dependent type>' contains-errors
    | |   | |             |-DeclRefExpr 0x13d0a3fd0 <col:7> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'
    | |   | |             |-DeclRefExpr 0x13d0a3ff0 <col:18> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |             `-RecoveryExpr 0x13d0a4048 <col:24, col:30> '<dependent type>' contains-errors lvalue
    | |   | |               `-DeclRefExpr 0x13d0a4010 <col:24> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'
    | |   | |-IfStmt 0x13d0a4310 <line:89:4, line:92:4>
    | |   | | |-RecoveryExpr 0x13d0a41d8 <line:89:8, col:13> '<dependent type>' contains-errors lvalue
    | |   | | | `-DeclRefExpr 0x13d0a41a0 <col:8> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | | `-CompoundStmt 0x13d0a42f0 <col:18, line:92:4>
    | |   | |   |-CallExpr 0x13d0a42b8 <line:90:5, col:46> '<dependent type>' contains-errors
    | |   | |   | |-DeclRefExpr 0x13d0a4200 <col:5> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'
    | |   | |   | |-UnaryOperator 0x13d0a4280 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |   | |   | | `-RecoveryExpr 0x13d0a4258 <col:21, col:25> '<dependent type>' contains-errors lvalue
    | |   | |   | |   `-DeclRefExpr 0x13d0a4220 <col:21> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | |   | |   | `-DeclRefExpr 0x13d0a4298 <col:43> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   | |   `-BreakStmt 0x13d0a42e8 <line:91:5>
    | |   | `-CallExpr 0x13d0a4468 <line:93:4, col:17> 'int'
    | |   |   |-ImplicitCastExpr 0x13d0a4450 <col:4> 'int (*)()' <FunctionToPointerDecay>
    | |   |   | `-DeclRefExpr 0x13d0a4410 <col:4> 'int ()' Function 0x13d0a4358 'kfree_skb' 'int ()'
    | |   |   `-ImplicitCastExpr 0x13d0a4490 <col:14> 'struct sk_buff *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x13d0a4430 <col:14> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |   `-CompoundStmt 0x13d0a45c8 <line:95:10, line:99:3>
    | |     |-CallExpr 0x13d0a4590 <line:97:4, col:45> '<dependent type>' contains-errors
    | |     | |-DeclRefExpr 0x13d0a44d8 <col:4> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'
    | |     | |-UnaryOperator 0x13d0a4558 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     | | `-RecoveryExpr 0x13d0a4530 <col:20, col:24> '<dependent type>' contains-errors lvalue
    | |     | |   `-DeclRefExpr 0x13d0a44f8 <col:20> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
    | |     | `-DeclRefExpr 0x13d0a4570 <col:42> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'
    | |     `-BreakStmt 0x13d0a45c0 <line:98:4>
    | `-RecoveryExpr 0x13d0a4668 <line:100:11> '<dependent type>' contains-errors lvalue
    `-LabelStmt 0x13d0a4820 <line:102:1, line:103:17> 'out'
      `-CallExpr 0x13d0a47e0 <col:2, col:17> 'int' contains-errors
        |-ImplicitCastExpr 0x13d0a47c8 <col:2> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x13d0a4788 <col:2> 'int ()' Function 0x13d0a46d0 'release_sock' 'int ()'
        `-ImplicitCastExpr 0x13d0a4808 <col:15> 'struct sock *' contains-errors <LValueToRValue>
          `-DeclRefExpr 0x13d0a47a8 <col:15> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'
