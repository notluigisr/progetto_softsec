`-FunctionDecl 0x13200de88  line:1:12 invalid cms_RecipientInfo_ktri_decrypt 'int (int *, int *)' static
  |-ParmVarDecl 0x13200dd28 <col:43, col:60> col:60 invalid cms 'int *'
  |-ParmVarDecl 0x13200dda8 <line:2:43, col:62> col:62 invalid ri 'int *'
  `-CompoundStmt 0x132029080 <line:3:1, line:65:1>
    |-DeclStmt 0x13200e168 <line:6:5, col:29>
    | `-VarDecl 0x13200e0c8 <col:5, col:25> col:20 used ek 'unsigned char *' cinit
    |   `-RecoveryExpr 0x13200e148 <col:25> '<dependent type>' contains-errors lvalue
    |-UnaryExprOrTypeTraitExpr 0x13200e1d8 <line:7:5, col:12> 'unsigned long' contains-errors sizeof
    | `-RecoveryExpr 0x13200e1b8 <col:12> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x13200e298 <line:8:5, col:16>
    | `-VarDecl 0x13200e210 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x13200e278 <col:15> 'int' 0
    |-IfStmt 0x1320277c0 <line:12:5, line:15:5>
    | |-BinaryOperator 0x132027508 <line:12:9, col:23> 'int' contains-errors '=='
    | | |-CXXDependentScopeMemberExpr 0x1320274a0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->pkey
    | | | `-RecoveryExpr 0x132027480 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x1320274e8 <col:23> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x1320277a0 <col:29, line:15:5>
    |   |-CallExpr 0x132027740 <line:13:9, col:74> '<dependent type>' contains-errors
    |   | |-DeclRefExpr 0x132027680 <col:9> 'int ()' Function 0x1320275c8 'CMSerr' 'int ()'
    |   | |-RecoveryExpr 0x132027700 <col:16> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x132027720 <col:54> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x132027790 <line:14:9, col:16>
    |     `-IntegerLiteral 0x132027770 <col:16> 'int' 0
    |-IfStmt 0x132027930 <line:18:5, line:19:16>
    | |-RecoveryExpr 0x1320278e0 <line:18:9, col:23> '_Bool' contains-errors
    | `-ReturnStmt 0x132027920 <line:19:9, col:16>
    |   `-IntegerLiteral 0x132027900 <col:16> 'int' 0
    |-IfStmt 0x132027af8 <line:21:5, line:22:14>
    | |-RecoveryExpr 0x132027a70 <line:21:9, col:46> '_Bool' contains-errors
    | `-GotoStmt 0x132027ae0 <line:22:9, col:14> 'err' 0x132027a90
    |-IfStmt 0x132027cb8 <line:24:5, line:25:14>
    | |-UnaryOperator 0x132027c88 <line:24:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow
    | | `-CallExpr 0x132027c58 <col:10, col:33> '<dependent type>' contains-errors
    | |   |-DeclRefExpr 0x132027bf8 <col:10> 'int ()' Function 0x132027b40 'cms_env_asn1_ctrl' 'int ()'
    | |   |-RecoveryExpr 0x132027c18 <col:28> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x132027c38 <col:32> 'int' 1
    | `-GotoStmt 0x132027ca0 <line:25:9, col:14> 'err' 0x132027a90
    |-IfStmt 0x132027ee0 <line:27:5, line:31:5>
    | |-RecoveryExpr 0x132027e70 <line:27:9, line:28:64> '_Bool' contains-errors
    | `-CompoundStmt 0x132027ec8 <col:67, line:31:5>
    |   `-GotoStmt 0x132027eb0 <line:30:9, col:14> 'err' 0x132027a90
    |-IfStmt 0x132028058 <line:33:5, line:36:14>
    | |-RecoveryExpr 0x132028020 <line:33:9, line:35:57> '_Bool' contains-errors
    | `-GotoStmt 0x132028040 <line:36:9, col:14> 'err' 0x132027a90
    |-IfStmt 0x132028228 <line:40:5, line:43:5>
    | |-RecoveryExpr 0x1320281b8 <line:40:9, col:15> '_Bool' contains-errors
    | `-CompoundStmt 0x132028210 <col:21, line:43:5>
    |   `-GotoStmt 0x1320281f8 <line:42:9, col:14> 'err' 0x132027a90
    |-IfStmt 0x132028318 <line:45:5, line:50:5>
    | |-RecoveryExpr 0x1320282a8 <line:45:9, line:47:57> '_Bool' contains-errors
    | `-CompoundStmt 0x132028300 <col:60, line:50:5>
    |   `-GotoStmt 0x1320282e8 <line:49:9, col:14> 'err' 0x132027a90
    |-BinaryOperator 0x132028378 <line:52:5, col:11> 'int' '='
    | |-DeclRefExpr 0x132028338 <col:5> 'int' lvalue Var 0x13200e210 'ret' 'int'
    | `-IntegerLiteral 0x132028358 <col:11> 'int' 1
    |-LabelStmt 0x132028e00 <line:58:2, col:5> 'err'
    | `-NullStmt 0x132028df8 <col:5>
    |-IfStmt 0x132029018 <line:61:5, line:62:24>
    | |-UnaryOperator 0x132028e58 <line:61:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x132028e40 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x132028e20 <col:10> 'int' lvalue Var 0x13200e210 'ret' 'int'
    | `-CallExpr 0x132028fd8 <line:62:9, col:24> 'int' contains-errors
    |   |-ImplicitCastExpr 0x132028fc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x132028f50 <col:9> 'int ()' Function 0x132028e98 'OPENSSL_free' 'int ()'
    |   `-ImplicitCastExpr 0x132029000 <col:22> 'unsigned char *' contains-errors <LValueToRValue>
    |     `-DeclRefExpr 0x132028f70 <col:22> 'unsigned char *' contains-errors lvalue Var 0x13200e0c8 'ek' 'unsigned char *'
    `-ReturnStmt 0x132029070 <line:64:5, col:12>
      `-ImplicitCastExpr 0x132029058 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x132029038 <col:12> 'int' lvalue Var 0x13200e210 'ret' 'int'
