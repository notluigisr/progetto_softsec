`-FunctionDecl 0x11f120958  line:2:5 skb_crc32c_csum_help 'int (struct sk_buff *)'
  |-ParmVarDecl 0x11f120848 <col:26, col:42> col:42 used skb 'struct sk_buff *'
  `-CompoundStmt 0x11e80fe18 <line:3:1, line:38:13>
    |-DeclStmt 0x11f138e28 <line:5:2, col:28>
    | |-VarDecl 0x11f138c80 <col:2, col:12> col:6 used ret 'int' cinit
    | | `-IntegerLiteral 0x11f138ce8 <col:12> 'int' 0
    | |-VarDecl 0x11f138d20 <col:2, col:15> col:15 used offset 'int'
    | `-VarDecl 0x11f138da0 <col:2, col:23> col:23 used start 'int'
    |-IfStmt 0x11f138f80 <line:7:2, line:8:8>
    | |-BinaryOperator 0x11f138ef8 <line:7:6, col:24> 'int' contains-errors '!='
    | | |-RecoveryExpr 0x11f138e78 <col:6, col:11> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x11f138e40 <col:6> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    | | `-RecoveryExpr 0x11f138ed8 <col:24> '<dependent type>' contains-errors lvalue
    | `-GotoStmt 0x11f138f68 <line:8:3, col:8> 'out' 0x11f138f18
    |-IfStmt 0x11f1392d0 <line:10:2, line:11:8>
    | |-CallExpr 0x11f139290 <line:10:6, col:30> 'int'
    | | |-ImplicitCastExpr 0x11f139278 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x11f1390b0 <col:6> 'int ()' Function 0x11f138ff8 'unlikely' 'int ()'
    | | `-CallExpr 0x11f139238 <col:15, col:29> 'int'
    | |   |-ImplicitCastExpr 0x11f139220 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x11f1391b0 <col:15> 'int ()' Function 0x11f1390f8 'skb_is_gso' 'int ()'
    | |   `-ImplicitCastExpr 0x11f139260 <col:26> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11f1391d0 <col:26> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    | `-GotoStmt 0x11f1392b8 <line:11:3, col:8> 'out' 0x11f138f18
    |-IfStmt 0x11f139710 <line:14:2, line:18:2>
    | |-CallExpr 0x11f1394a0 <line:14:6, col:39> 'int'
    | | |-ImplicitCastExpr 0x11f139488 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x11f1392f0 <col:6> 'int ()' Function 0x11f138ff8 'unlikely' 'int ()'
    | | `-CallExpr 0x11f139448 <col:15, col:38> 'int'
    | |   |-ImplicitCastExpr 0x11f139430 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x11f1393f0 <col:15> 'int ()' Function 0x11f139338 'skb_has_shared_frag' 'int ()'
    | |   `-ImplicitCastExpr 0x11f139470 <col:35> 'struct sk_buff *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11f139410 <col:35> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x11f1396f0 <col:42, line:18:2>
    |   |-BinaryOperator 0x11f139660 <line:15:3, col:28> 'int' '='
    |   | |-DeclRefExpr 0x11f1394c8 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'
    |   | `-CallExpr 0x11f139620 <col:9, col:28> 'int'
    |   |   |-ImplicitCastExpr 0x11f139608 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x11f1395c8 <col:9> 'int ()' Function 0x11f139510 '__skb_linearize' 'int ()'
    |   |   `-ImplicitCastExpr 0x11f139648 <col:25> 'struct sk_buff *' <LValueToRValue>
    |   |     `-DeclRefExpr 0x11f1395e8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    |   `-IfStmt 0x11f1396d0 <line:16:3, line:17:9>
    |     |-ImplicitCastExpr 0x11f1396a0 <line:16:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11f139680 <col:7> 'int' lvalue Var 0x11f138c80 'ret' 'int'
    |     `-GotoStmt 0x11f1396b8 <line:17:4, col:9> 'out' 0x11f138f18
    |-BinaryOperator 0x11f1398c8 <line:19:2, col:39> 'int' '='
    | |-DeclRefExpr 0x11f139730 <col:2> 'int' lvalue Var 0x11f138da0 'start' 'int'
    | `-CallExpr 0x11f139888 <col:10, col:39> 'int'
    |   |-ImplicitCastExpr 0x11f139870 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x11f139830 <col:10> 'int ()' Function 0x11f139778 'skb_checksum_start_offset' 'int ()'
    |   `-ImplicitCastExpr 0x11f1398b0 <col:36> 'struct sk_buff *' <LValueToRValue>
    |     `-DeclRefExpr 0x11f139850 <col:36> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    |-IfStmt 0x11e80f2f8 <line:21:2, line:24:2>
    | |-CallExpr 0x11e80f1a0 <line:21:6, col:45> 'int'
    | | |-ImplicitCastExpr 0x11e80f188 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x11f139b20 <col:6> 'int ()' Function 0x11f139a68 'WARN_ON_ONCE' 'int ()'
    | | `-BinaryOperator 0x11e80f168 <col:19, col:44> 'int' '>='
    | |   |-ImplicitCastExpr 0x11e80f150 <col:19> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x11f139b40 <col:19> 'int' lvalue Var 0x11f138d20 'offset' 'int'
    | |   `-CallExpr 0x11e80f110 <col:29, col:44> 'int'
    | |     |-ImplicitCastExpr 0x11e80f0f8 <col:29> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x11e80f0b8 <col:29> 'int ()' Function 0x11e80f000 'skb_headlen' 'int ()'
    | |     `-ImplicitCastExpr 0x11e80f138 <col:41> 'struct sk_buff *' <LValueToRValue>
    | |       `-DeclRefExpr 0x11e80f0d8 <col:41> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    | `-CompoundStmt 0x11e80f2d8 <col:48, line:24:2>
    |   |-BinaryOperator 0x11e80f2a0 <line:22:3, col:10> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e80f1c8 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'
    |   | `-UnaryOperator 0x11e80f288 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |   `-ImplicitCastExpr 0x11e80f270 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   |     `-RecoveryExpr 0x11e80f250 <col:10> '<dependent type>' contains-errors lvalue
    |   `-GotoStmt 0x11e80f2c0 <line:23:3, col:8> 'out' 0x11f138f18
    |-IfStmt 0x11e80f910 <line:25:2, line:30:2>
    | |-RecoveryExpr 0x11e80f5e8 <line:25:6, line:26:54> '_Bool' contains-errors
    | `-CompoundStmt 0x11e80f8f0 <col:57, line:30:2>
    |   |-BinaryOperator 0x11e80f860 <line:27:3, col:47> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x11e80f608 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'
    |   | `-CallExpr 0x11e80f820 <col:9, col:47> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x11e80f708 <col:9> 'int ()' Function 0x11e80f650 'pskb_expand_head' 'int ()'
    |   |   |-DeclRefExpr 0x11e80f728 <col:26> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    |   |   |-IntegerLiteral 0x11e80f748 <col:31> 'int' 0
    |   |   |-IntegerLiteral 0x11e80f768 <col:34> 'int' 0
    |   |   `-RecoveryExpr 0x11e80f800 <col:37> '<dependent type>' contains-errors lvalue
    |   `-IfStmt 0x11e80f8d0 <line:28:3, line:29:9>
    |     |-ImplicitCastExpr 0x11e80f8a0 <line:28:7> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x11e80f880 <col:7> 'int' lvalue Var 0x11f138c80 'ret' 'int'
    |     `-GotoStmt 0x11e80f8b8 <line:29:4, col:9> 'out' 0x11f138f18
    |-BinaryOperator 0x11e80fd90 <line:36:2, col:23> '<dependent type>' contains-errors '='
    | |-RecoveryExpr 0x11e80fd48 <col:2, col:7> '<dependent type>' contains-errors lvalue
    | | `-DeclRefExpr 0x11e80fd10 <col:2> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'
    | `-IntegerLiteral 0x11e80fd70 <col:23> 'int' 0
    `-LabelStmt 0x11e80fdf8 <line:37:1, line:38:9> 'out'
      `-ReturnStmt 0x11e80fde8 <col:2, col:9>
        `-ImplicitCastExpr 0x11e80fdd0 <col:9> 'int' <LValueToRValue>
          `-DeclRefExpr 0x11e80fdb0 <col:9> 'int' lvalue Var 0x11f138c80 'ret' 'int'
