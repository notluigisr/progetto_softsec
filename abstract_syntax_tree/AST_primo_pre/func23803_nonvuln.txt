`-FunctionDecl 0x14a940a38  line:1:1 dccp_timeout_obj_to_nlattr 'int (struct sk_buff *, const void *)'
  |-ParmVarDecl 0x14a928648 <col:28, col:44> col:44 used skb 'struct sk_buff *'
  |-ParmVarDecl 0x14a9286f8 <col:49, col:61> col:61 used data 'const void *'
  `-CompoundStmt 0x14a941578 <line:2:1, line:14:1>
    |-DeclStmt 0x14a940c40 <line:3:9, col:44>
    | `-VarDecl 0x14a940b88 <col:9, col:40> col:29 used timeouts 'const unsigned int *' cinit
    |   `-ImplicitCastExpr 0x14a940c28 <col:40> 'const unsigned int *' <BitCast>
    |     `-ImplicitCastExpr 0x14a940c10 <col:40> 'const void *' <LValueToRValue>
    |       `-DeclRefExpr 0x14a940bf0 <col:40> 'const void *' lvalue ParmVar 0x14a9286f8 'data' 'const void *'
    |-DeclStmt 0x14a940cd8 <line:4:2, col:7>
    | `-VarDecl 0x14a940c70 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x14a941448 <line:6:2, line:9:2>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x14a940e78 <line:6:36, col:59> 'int' contains-errors '<'
    | | |-DeclRefExpr 0x14a940da0 <col:36> 'int' lvalue Var 0x14a940c70 'i' 'int'
    | | `-BinaryOperator 0x14a940e58 <col:38, col:59> '<dependent type>' contains-errors '+'
    | |   |-RecoveryExpr 0x14a940e38 <col:38> '<dependent type>' contains-errors lvalue
    | |   `-IntegerLiteral 0x14a940dd8 <col:59> 'int' 1
    | |-UnaryOperator 0x14a940eb8 <col:62, col:63> 'int' postfix '++'
    | | `-DeclRefExpr 0x14a940e98 <col:62> 'int' lvalue Var 0x14a940c70 'i' 'int'
    | `-CompoundStmt 0x14a941430 <col:67, line:9:2>
    |   `-IfStmt 0x14a941410 <line:7:3, line:8:9>
    |     |-CallExpr 0x14a941370 <line:7:7, col:51> '<dependent type>' contains-errors
    |     | |-DeclRefExpr 0x14a940fe0 <col:7> 'int ()' Function 0x14a940f28 'nla_put_be32' 'int ()'
    |     | |-DeclRefExpr 0x14a941000 <col:20> 'struct sk_buff *' lvalue ParmVar 0x14a928648 'skb' 'struct sk_buff *'
    |     | |-DeclRefExpr 0x14a941020 <col:25> 'int' lvalue Var 0x14a940c70 'i' 'int'
    |     | `-CallExpr 0x14a941348 <col:28, col:50> '<dependent type>' contains-errors
    |     |   |-DeclRefExpr 0x14a941120 <col:28> 'int ()' Function 0x14a941068 'htonl' 'int ()'
    |     |   `-BinaryOperator 0x14a941328 <col:34, col:48> '<dependent type>' contains-errors '/'
    |     |     |-ArraySubscriptExpr 0x14a9412e8 <col:34, col:44> 'const unsigned int' lvalue
    |     |     | |-ImplicitCastExpr 0x14a9412b8 <col:34> 'const unsigned int *' <LValueToRValue>
    |     |     | | `-DeclRefExpr 0x14a941140 <col:34> 'const unsigned int *' lvalue Var 0x14a940b88 'timeouts' 'const unsigned int *'
    |     |     | `-ImplicitCastExpr 0x14a9412d0 <col:43> 'int' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x14a941160 <col:43> 'int' lvalue Var 0x14a940c70 'i' 'int'
    |     |     `-RecoveryExpr 0x14a941308 <col:48> '<dependent type>' contains-errors lvalue
    |     `-GotoStmt 0x14a9413f8 <line:8:4, col:9> 'nla_put_failure' 0x14a9413a8
    |-ReturnStmt 0x14a9414a0 <line:10:2, col:9>
    | `-IntegerLiteral 0x14a941480 <col:9> 'int' 0
    `-LabelStmt 0x14a941558 <line:12:1, line:13:10> 'nla_put_failure'
      `-ReturnStmt 0x14a941548 <col:2, col:10>
        `-UnaryOperator 0x14a941530 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow
          `-ImplicitCastExpr 0x14a941518 <col:10> '<dependent type>' contains-errors <LValueToRValue>
            `-RecoveryExpr 0x14a9414f8 <col:10> '<dependent type>' contains-errors lvalue
