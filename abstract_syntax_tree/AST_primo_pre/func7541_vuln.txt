`-FunctionDecl 0x126141b38  line:1:1 invalid LookupModMask 'int (struct xkb_context *, const void *, int, enum expr_value_type, int *)'
  |-ParmVarDecl 0x126128648 <col:15, col:35> col:35 used ctx 'struct xkb_context *'
  |-ParmVarDecl 0x1261286f8 <col:40, col:52> col:52 used priv 'const void *'
  |-ParmVarDecl 0x126128790 <col:58, col:69> col:69 invalid field 'int'
  |-ParmVarDecl 0x126141918 <line:2:15, col:36> col:36 referenced invalid type 'enum expr_value_type'
  |-ParmVarDecl 0x1261419c8 <col:42, col:58> col:58 invalid val_rtrn 'int *'
  `-CompoundStmt 0x126142e28 <line:3:1, line:31:1>
    |-DeclStmt 0x126141c88 <line:4:5, col:20>
    | `-VarDecl 0x126141c20 <col:5, col:17> col:17 used str 'const char *'
    |-DeclStmt 0x126141d40 <line:6:5, col:40>
    | `-VarDecl 0x126141cb8 <col:5, col:30> col:30 invalid arg 'const int *'
    |-DeclStmt 0x126141fb0 <line:7:5, col:47>
    | |-RecordDecl 0x126141d58 <col:11, col:18> col:18 struct xkb_mod_set
    | `-VarDecl 0x126141ec8 <col:5, col:43> col:31 used mods 'const struct xkb_mod_set *' cinit
    |   `-CXXDependentScopeMemberExpr 0x126141f50 <col:38, col:43> '<dependent type>' contains-errors lvalue ->mods
    |     `-RecoveryExpr 0x126141f30 <col:38> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x1261421d0 <line:8:5, col:43>
    | |-EnumDecl 0x126141fc8 <col:5, col:10> col:10 mod_type
    | `-VarDecl 0x1261420e8 <col:5, col:19> col:19 invalid mod_type 'enum mod_type'
    |-BinaryOperator 0x1261424a0 <line:13:5, col:35> 'const char *' contains-errors '='
    | |-DeclRefExpr 0x126142298 <col:5> 'const char *' lvalue Var 0x126141c20 'str' 'const char *'
    | `-CallExpr 0x126142470 <col:11, col:35> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x126142410 <col:11> 'int ()' Function 0x126142358 'xkb_atom_text' 'int ()'
    |   |-DeclRefExpr 0x126142430 <col:25> 'struct xkb_context *' lvalue ParmVar 0x126128648 'ctx' 'struct xkb_context *'
    |   `-RecoveryExpr 0x126142450 <col:30> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1261428a8 <line:15:5, line:18:5>
    | |-CallExpr 0x126142688 <line:15:9, col:26> 'int'
    | | |-ImplicitCastExpr 0x126142670 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1261425a0 <col:9> 'int ()' Function 0x1261424e8 'istreq' 'int ()'
    | | |-ImplicitCastExpr 0x1261426b8 <col:16> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1261425c0 <col:16> 'const char *' lvalue Var 0x126141c20 'str' 'const char *'
    | | `-ImplicitCastExpr 0x1261426d0 <col:21> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x126142620 <col:21> 'char[4]' lvalue "STR"
    | `-CompoundStmt 0x126142888 <col:29, line:18:5>
    |   |-BinaryOperator 0x126142800 <line:16:9, col:22> '<dependent type>' contains-errors '='
    |   | |-UnaryOperator 0x1261427b8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
    |   | | `-ImplicitCastExpr 0x1261427a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |   `-RecoveryExpr 0x1261426e8 <col:10> '<dependent type>' contains-errors lvalue
    |   | `-RecoveryExpr 0x1261427d0 <col:22> '<dependent type>' contains-errors lvalue
    |   `-ReturnStmt 0x126142878 <line:17:9, col:16>
    |     `-RecoveryExpr 0x126142858 <col:16> '<dependent type>' contains-errors lvalue
    `-IfStmt 0x126142b08 <line:20:5, line:23:5>
      |-CallExpr 0x126142940 <line:20:9, col:26> 'int'
      | |-ImplicitCastExpr 0x126142928 <col:9> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x1261428c8 <col:9> 'int ()' Function 0x1261424e8 'istreq' 'int ()'
      | |-ImplicitCastExpr 0x126142970 <col:16> 'const char *' <LValueToRValue>
      | | `-DeclRefExpr 0x1261428e8 <col:16> 'const char *' lvalue Var 0x126141c20 'str' 'const char *'
      | `-ImplicitCastExpr 0x126142988 <col:21> 'char *' <ArrayToPointerDecay>
      |   `-StringLiteral 0x126142908 <col:21> 'char[4]' lvalue "STR"
      `-CompoundStmt 0x126142ae8 <col:29, line:23:5>
        |-BinaryOperator 0x126142a60 <line:21:9, col:21> '<dependent type>' contains-errors '='
        | |-UnaryOperator 0x126142a48 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow
        | | `-ImplicitCastExpr 0x126142a30 <col:10> '<dependent type>' contains-errors <LValueToRValue>
        | |   `-RecoveryExpr 0x1261429a0 <col:10> '<dependent type>' contains-errors lvalue
        | `-IntegerLiteral 0x1261429f0 <col:21> 'int' 0
        `-ReturnStmt 0x126142ad8 <line:22:9, col:16>
          `-RecoveryExpr 0x126142ab8 <col:16> '<dependent type>' contains-errors lvalue
