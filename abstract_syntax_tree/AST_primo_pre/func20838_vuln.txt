`-FunctionDecl 0x103008958  line:1:1 invalid wl_map_insert_at 'int (struct wl_map *, int, int, void *)'
  |-ParmVarDecl 0x120128648 <col:18, col:33> col:33 used map 'struct wl_map *'
  |-ParmVarDecl 0x1201286e0 <col:38, col:47> col:47 invalid flags 'int'
  |-ParmVarDecl 0x120128760 <col:54, col:63> col:63 referenced invalid i 'int'
  |-ParmVarDecl 0x103008800 <col:66, col:72> col:72 used data 'void *'
  `-CompoundStmt 0x102809880 <line:2:1, line:30:1>
    |-DeclStmt 0x103008c08 <line:3:2, col:24>
    | |-RecordDecl 0x103008a20 <col:2, col:8> col:8 union map_entry
    | `-VarDecl 0x103008b88 <col:2, col:19> col:19 used start 'union map_entry *'
    |-DeclStmt 0x103008e08 <line:5:2, col:26>
    | |-RecordDecl 0x103008c20 <col:2, col:9> col:9 struct wl_array
    | `-VarDecl 0x103008d88 <col:2, col:19> col:19 used entries 'struct wl_array *'
    |-IfStmt 0x103009140 <line:7:2, line:12:2> has_else
    | |-BinaryOperator 0x103008e98 <line:7:6, col:10> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x103008e20 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x103008e78 <col:10> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x103008f70 <col:30, line:9:2>
    | | `-BinaryOperator 0x103008f50 <line:8:3, col:19> 'struct wl_array *' contains-errors '='
    | |   |-DeclRefExpr 0x103008eb8 <col:3> 'struct wl_array *' lvalue Var 0x103008d88 'entries' 'struct wl_array *'
    | |   `-UnaryOperator 0x103008f38 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    | |     `-RecoveryExpr 0x103008f10 <col:14, col:19> '<dependent type>' contains-errors lvalue
    | |       `-DeclRefExpr 0x103008ed8 <col:14> 'struct wl_map *' lvalue ParmVar 0x120128648 'map' 'struct wl_map *'
    | `-CompoundStmt 0x103009120 <line:9:9, line:12:2>
    |   |-BinaryOperator 0x103009020 <line:10:3, col:19> 'struct wl_array *' contains-errors '='
    |   | |-DeclRefExpr 0x103008f88 <col:3> 'struct wl_array *' lvalue Var 0x103008d88 'entries' 'struct wl_array *'
    |   | `-UnaryOperator 0x103009008 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   |   `-RecoveryExpr 0x103008fe0 <col:14, col:19> '<dependent type>' contains-errors lvalue
    |   |     `-DeclRefExpr 0x103008fa8 <col:14> 'struct wl_map *' lvalue ParmVar 0x120128648 'map' 'struct wl_map *'
    |   `-CompoundAssignOperator 0x1030090f0 <line:11:3, col:8> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |     |-RecoveryExpr 0x103009060 <col:3> '<dependent type>' contains-errors lvalue
    |     | `-DeclRefExpr 0x103009040 <col:3> 'int' lvalue ParmVar 0x120128760 'i' 'int'
    |     `-RecoveryExpr 0x1030090d0 <col:8> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x103009330 <line:15:2, line:18:2>
    | |-BinaryOperator 0x103009298 <line:15:6, col:14> 'int' contains-errors '<'
    | | |-RecoveryExpr 0x103009278 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x103009238 <col:14> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x103009318 <col:17, line:18:2>
    |   `-ReturnStmt 0x103009308 <line:17:3, col:11>
    |     `-UnaryOperator 0x1030092f0 <col:10, col:11> 'int' prefix '-'
    |       `-IntegerLiteral 0x1030092d0 <col:11> 'int' 1
    |-IfStmt 0x103009670 <line:20:2, line:23:2>
    | |-BinaryOperator 0x1030093c8 <line:20:6, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x1030093a8 <col:6> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x103009368 <col:15> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x103009658 <col:18, line:23:2>
    |   `-IfStmt 0x103009638 <line:21:3, line:22:12>
    |     |-RecoveryExpr 0x1030095d0 <line:21:7, col:43> '_Bool' contains-errors
    |     `-ReturnStmt 0x103009628 <line:22:4, col:12>
    |       `-UnaryOperator 0x103009610 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x1030095f0 <col:12> 'int' 1
    |-BinaryOperator 0x103009710 <line:25:2, col:19> 'union map_entry *' contains-errors '='
    | |-DeclRefExpr 0x103009690 <col:2> 'union map_entry *' lvalue Var 0x103008b88 'start' 'union map_entry *'
    | `-RecoveryExpr 0x1030096e8 <col:10, col:19> '<dependent type>' contains-errors lvalue
    |   `-DeclRefExpr 0x1030096b0 <col:10> 'struct wl_array *' lvalue Var 0x103008d88 'entries' 'struct wl_array *'
    |-BinaryOperator 0x102809668 <line:26:2, col:18> '<dependent type>' contains-errors '='
    | |-CXXDependentScopeMemberExpr 0x102809600 <col:2, col:11> '<dependent type>' contains-errors lvalue .data
    | | `-ArraySubscriptExpr 0x1030097a0 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x103009770 <col:2> 'union map_entry *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x103009730 <col:2> 'union map_entry *' lvalue Var 0x103008b88 'start' 'union map_entry *'
    | |   `-ImplicitCastExpr 0x103009788 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x103009750 <col:8> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x102809648 <col:18> 'void *' lvalue ParmVar 0x103008800 'data' 'void *'
    |-CompoundAssignOperator 0x102809820 <line:27:2, col:36> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    | |-CXXDependentScopeMemberExpr 0x102809718 <col:2, col:11> '<dependent type>' contains-errors lvalue .next
    | | `-ArraySubscriptExpr 0x1028096f8 <col:2, col:9> '<dependent type>' contains-errors lvalue
    | |   |-ImplicitCastExpr 0x1028096c8 <col:2> 'union map_entry *' <LValueToRValue>
    | |   | `-DeclRefExpr 0x102809688 <col:2> 'union map_entry *' lvalue Var 0x103008b88 'start' 'union map_entry *'
    | |   `-ImplicitCastExpr 0x1028096e0 <col:8> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-RecoveryExpr 0x1028096a8 <col:8> '<dependent type>' contains-errors lvalue
    | `-BinaryOperator 0x102809800 <col:19, col:36> '<dependent type>' contains-errors '<<'
    |   |-ParenExpr 0x1028097c0 <col:19, col:31> '<dependent type>' contains-errors
    |   | `-BinaryOperator 0x1028097a0 <col:20, col:28> '<dependent type>' contains-errors '&'
    |   |   |-RecoveryExpr 0x102809760 <col:20> '<dependent type>' contains-errors lvalue
    |   |   `-IntegerLiteral 0x102809780 <col:28> 'int' 1
    |   `-IntegerLiteral 0x1028097e0 <col:36> 'int' 1
    `-ReturnStmt 0x102809870 <line:29:2, col:9>
      `-IntegerLiteral 0x102809850 <col:9> 'int' 0
