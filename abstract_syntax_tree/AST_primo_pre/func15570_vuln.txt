`-FunctionDecl 0x134128238  line:1:5 mutt_from_base64 'int (char *, const char *)'
  |-ParmVarDecl 0x1341280d8 <col:23, col:29> col:29 used out 'char *'
  |-ParmVarDecl 0x134128158 <col:34, col:46> col:46 used in 'const char *'
  `-CompoundStmt 0x134143698 <line:2:1, line:39:1>
    |-DeclStmt 0x1341283d8 <line:3:3, col:14>
    | `-VarDecl 0x134128350 <col:3, col:13> col:7 used len 'int' cinit
    |   `-IntegerLiteral 0x1341283b8 <col:13> 'int' 0
    |-DeclStmt 0x134128618 <line:4:3, col:56>
    | |-VarDecl 0x134128408 <col:3, col:26> col:26 used digit1 'unsigned char' register
    | |-VarDecl 0x134128488 <col:3, col:34> col:34 used digit2 'unsigned char' register
    | |-VarDecl 0x134128508 <col:3, col:42> col:42 used digit3 'unsigned char' register
    | `-VarDecl 0x134128588 <col:3, col:50> col:50 used digit4 'unsigned char' register
    |-DoStmt 0x134143630 <line:6:3, line:36:30>
    | |-CompoundStmt 0x134143498 <line:7:3, line:35:3>
    | | |-BinaryOperator 0x1341286f8 <line:8:5, col:18> 'unsigned char' '='
    | | | |-DeclRefExpr 0x134128630 <col:5> 'unsigned char' lvalue Var 0x134128408 'digit1' 'unsigned char'
    | | | `-ImplicitCastExpr 0x1341286e0 <col:14, col:18> 'unsigned char' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x1341286c8 <col:14, col:18> 'char' <LValueToRValue>
    | | |     `-ArraySubscriptExpr 0x1341286a8 <col:14, col:18> 'const char' lvalue
    | | |       |-ImplicitCastExpr 0x134128690 <col:14> 'const char *' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x134128650 <col:14> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    | | |       `-IntegerLiteral 0x134128670 <col:17> 'int' 0
    | | |-IfStmt 0x134141c40 <line:9:5, line:10:15>
    | | | |-BinaryOperator 0x134141bd8 <line:9:9, col:47> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x134141b08 <col:9, col:18> 'int' '>'
    | | | | | |-ImplicitCastExpr 0x134141af0 <col:9> 'int' <IntegralCast>
    | | | | | | `-ImplicitCastExpr 0x134141ad8 <col:9> 'unsigned char' <LValueToRValue>
    | | | | | |   `-DeclRefExpr 0x134128718 <col:9> 'unsigned char' lvalue Var 0x134128408 'digit1' 'unsigned char'
    | | | | | `-IntegerLiteral 0x134128738 <col:18> 'int' 127
    | | | | `-BinaryOperator 0x134141bb8 <col:25, col:47> 'int' contains-errors '=='
    | | | |   |-CallExpr 0x134141b40 <col:25, col:42> 'int'
    | | | |   | |-ImplicitCastExpr 0x134141b28 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | | | |   | | `-DeclRefExpr 0x1341418e0 <col:25> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | | | |   | `-ImplicitCastExpr 0x134141b80 <col:36> 'int' <IntegralCast>
    | | | |   |   `-ImplicitCastExpr 0x134141b68 <col:36> 'unsigned char' <LValueToRValue>
    | | | |   |     `-DeclRefExpr 0x134141900 <col:36> 'unsigned char' lvalue Var 0x134128408 'digit1' 'unsigned char'
    | | | |   `-RecoveryExpr 0x134141b98 <col:47> '<dependent type>' contains-errors lvalue
    | | | `-ReturnStmt 0x134141c30 <line:10:7, col:15>
    | | |   `-UnaryOperator 0x134141c18 <col:14, col:15> 'int' prefix '-'
    | | |     `-IntegerLiteral 0x134141bf8 <col:15> 'int' 1
    | | |-BinaryOperator 0x134141d28 <line:11:5, col:18> 'unsigned char' '='
    | | | |-DeclRefExpr 0x134141c60 <col:5> 'unsigned char' lvalue Var 0x134128488 'digit2' 'unsigned char'
    | | | `-ImplicitCastExpr 0x134141d10 <col:14, col:18> 'unsigned char' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x134141cf8 <col:14, col:18> 'char' <LValueToRValue>
    | | |     `-ArraySubscriptExpr 0x134141cd8 <col:14, col:18> 'const char' lvalue
    | | |       |-ImplicitCastExpr 0x134141cc0 <col:14> 'const char *' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x134141c80 <col:14> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    | | |       `-IntegerLiteral 0x134141ca0 <col:17> 'int' 1
    | | |-IfStmt 0x134142108 <line:12:5, line:13:15>
    | | | |-BinaryOperator 0x1341420a0 <line:12:9, col:47> 'int' contains-errors '||'
    | | | | |-BinaryOperator 0x134141fd0 <col:9, col:18> 'int' '>'
    | | | | | |-ImplicitCastExpr 0x134141fb8 <col:9> 'int' <IntegralCast>
    | | | | | | `-ImplicitCastExpr 0x134141fa0 <col:9> 'unsigned char' <LValueToRValue>
    | | | | | |   `-DeclRefExpr 0x134141d48 <col:9> 'unsigned char' lvalue Var 0x134128488 'digit2' 'unsigned char'
    | | | | | `-IntegerLiteral 0x134141d68 <col:18> 'int' 127
    | | | | `-BinaryOperator 0x134142080 <col:25, col:47> 'int' contains-errors '=='
    | | | |   |-CallExpr 0x134142008 <col:25, col:42> 'int'
    | | | |   | |-ImplicitCastExpr 0x134141ff0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    | | | |   | | `-DeclRefExpr 0x134141dd8 <col:25> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | | | |   | `-ImplicitCastExpr 0x134142048 <col:36> 'int' <IntegralCast>
    | | | |   |   `-ImplicitCastExpr 0x134142030 <col:36> 'unsigned char' <LValueToRValue>
    | | | |   |     `-DeclRefExpr 0x134141df8 <col:36> 'unsigned char' lvalue Var 0x134128488 'digit2' 'unsigned char'
    | | | |   `-RecoveryExpr 0x134142060 <col:47> '<dependent type>' contains-errors lvalue
    | | | `-ReturnStmt 0x1341420f8 <line:13:7, col:15>
    | | |   `-UnaryOperator 0x1341420e0 <col:14, col:15> 'int' prefix '-'
    | | |     `-IntegerLiteral 0x1341420c0 <col:15> 'int' 1
    | | |-BinaryOperator 0x1341421f0 <line:14:5, col:18> 'unsigned char' '='
    | | | |-DeclRefExpr 0x134142128 <col:5> 'unsigned char' lvalue Var 0x134128508 'digit3' 'unsigned char'
    | | | `-ImplicitCastExpr 0x1341421d8 <col:14, col:18> 'unsigned char' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x1341421c0 <col:14, col:18> 'char' <LValueToRValue>
    | | |     `-ArraySubscriptExpr 0x1341421a0 <col:14, col:18> 'const char' lvalue
    | | |       |-ImplicitCastExpr 0x134142188 <col:14> 'const char *' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x134142148 <col:14> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    | | |       `-IntegerLiteral 0x134142168 <col:17> 'int' 2
    | | |-IfStmt 0x134142508 <line:15:5, line:16:15>
    | | | |-RecoveryExpr 0x1341424a0 <line:15:9, col:72> '_Bool' contains-errors
    | | | `-ReturnStmt 0x1341424f8 <line:16:7, col:15>
    | | |   `-UnaryOperator 0x1341424e0 <col:14, col:15> 'int' prefix '-'
    | | |     `-IntegerLiteral 0x1341424c0 <col:15> 'int' 1
    | | |-BinaryOperator 0x1341425f0 <line:17:5, col:18> 'unsigned char' '='
    | | | |-DeclRefExpr 0x134142528 <col:5> 'unsigned char' lvalue Var 0x134128588 'digit4' 'unsigned char'
    | | | `-ImplicitCastExpr 0x1341425d8 <col:14, col:18> 'unsigned char' <IntegralCast>
    | | |   `-ImplicitCastExpr 0x1341425c0 <col:14, col:18> 'char' <LValueToRValue>
    | | |     `-ArraySubscriptExpr 0x1341425a0 <col:14, col:18> 'const char' lvalue
    | | |       |-ImplicitCastExpr 0x134142588 <col:14> 'const char *' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x134142548 <col:14> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    | | |       `-IntegerLiteral 0x134142568 <col:17> 'int' 3
    | | |-IfStmt 0x134142910 <line:18:5, line:19:15>
    | | | |-RecoveryExpr 0x1341428a8 <line:18:9, col:72> '_Bool' contains-errors
    | | | `-ReturnStmt 0x134142900 <line:19:7, col:15>
    | | |   `-UnaryOperator 0x1341428e8 <col:14, col:15> 'int' prefix '-'
    | | |     `-IntegerLiteral 0x1341428c8 <col:15> 'int' 1
    | | |-CompoundAssignOperator 0x134142970 <line:20:5, col:11> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
    | | | |-DeclRefExpr 0x134142930 <col:5> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    | | | `-IntegerLiteral 0x134142950 <col:11> 'int' 4
    | | |-BinaryOperator 0x134142c48 <line:23:5, col:64> 'char' '='
    | | | |-UnaryOperator 0x1341429d8 <col:5, col:9> 'char' lvalue prefix '*' cannot overflow
    | | | | `-UnaryOperator 0x1341429c0 <col:6, col:9> 'char *' postfix '++'
    | | | |   `-DeclRefExpr 0x1341429a0 <col:6> 'char *' lvalue ParmVar 0x1341280d8 'out' 'char *'
    | | | `-ImplicitCastExpr 0x134142c30 <col:14, col:64> 'char' <IntegralCast>
    | | |   `-BinaryOperator 0x134142c10 <col:14, col:64> 'int' '|'
    | | |     |-ParenExpr 0x134142ae0 <col:14, col:37> 'int'
    | | |     | `-BinaryOperator 0x134142ac0 <col:15, col:36> 'int' '<<'
    | | |     |   |-CallExpr 0x134142a48 <col:15, col:31> 'int'
    | | |     |   | |-ImplicitCastExpr 0x134142a30 <col:15> 'int (*)()' <FunctionToPointerDecay>
    | | |     |   | | `-DeclRefExpr 0x1341429f0 <col:15> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | | |     |   | `-ImplicitCastExpr 0x134142a88 <col:25> 'int' <IntegralCast>
    | | |     |   |   `-ImplicitCastExpr 0x134142a70 <col:25> 'unsigned char' <LValueToRValue>
    | | |     |   |     `-DeclRefExpr 0x134142a10 <col:25> 'unsigned char' lvalue Var 0x134128408 'digit1' 'unsigned char'
    | | |     |   `-IntegerLiteral 0x134142aa0 <col:36> 'int' 2
    | | |     `-ParenExpr 0x134142bf0 <col:41, col:64> 'int'
    | | |       `-BinaryOperator 0x134142bd0 <col:42, col:63> 'int' '>>'
    | | |         |-CallExpr 0x134142b58 <col:42, col:58> 'int'
    | | |         | |-ImplicitCastExpr 0x134142b40 <col:42> 'int (*)()' <FunctionToPointerDecay>
    | | |         | | `-DeclRefExpr 0x134142b00 <col:42> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | | |         | `-ImplicitCastExpr 0x134142b98 <col:52> 'int' <IntegralCast>
    | | |         |   `-ImplicitCastExpr 0x134142b80 <col:52> 'unsigned char' <LValueToRValue>
    | | |         |     `-DeclRefExpr 0x134142b20 <col:52> 'unsigned char' lvalue Var 0x134128488 'digit2' 'unsigned char'
    | | |         `-IntegerLiteral 0x134142bb0 <col:63> 'int' 4
    | | |-UnaryOperator 0x134142c88 <line:24:5, col:8> 'int' postfix '++'
    | | | `-DeclRefExpr 0x134142c68 <col:5> 'int' lvalue Var 0x134128350 'len' 'int'
    | | `-IfStmt 0x134143478 <line:25:5, line:34:5>
    | |   |-BinaryOperator 0x134142d08 <line:25:9, col:19> 'int' '!='
    | |   | |-ImplicitCastExpr 0x134142cf0 <col:9> 'int' <IntegralCast>
    | |   | | `-ImplicitCastExpr 0x134142cd8 <col:9> 'unsigned char' <LValueToRValue>
    | |   | |   `-DeclRefExpr 0x134142ca0 <col:9> 'unsigned char' lvalue Var 0x134128508 'digit3' 'unsigned char'
    | |   | `-CharacterLiteral 0x134142cc0 <col:19> 'int' 61
    | |   `-CompoundStmt 0x134143450 <line:26:5, line:34:5>
    | |     |-BinaryOperator 0x134143030 <line:27:7, col:75> 'char' '='
    | |     | |-UnaryOperator 0x134142d60 <col:7, col:11> 'char' lvalue prefix '*' cannot overflow
    | |     | | `-UnaryOperator 0x134142d48 <col:8, col:11> 'char *' postfix '++'
    | |     | |   `-DeclRefExpr 0x134142d28 <col:8> 'char *' lvalue ParmVar 0x1341280d8 'out' 'char *'
    | |     | `-ImplicitCastExpr 0x134143018 <col:16, col:75> 'char' <IntegralCast>
    | |     |   `-BinaryOperator 0x134142ff8 <col:16, col:75> 'int' '|'
    | |     |     |-ParenExpr 0x134142ec8 <col:16, col:48> 'int'
    | |     |     | `-BinaryOperator 0x134142ea8 <col:17, col:44> 'int' '&'
    | |     |     |   |-ParenExpr 0x134142e68 <col:17, col:40> 'int'
    | |     |     |   | `-BinaryOperator 0x134142e48 <col:18, col:39> 'int' '<<'
    | |     |     |   |   |-CallExpr 0x134142dd0 <col:18, col:34> 'int'
    | |     |     |   |   | |-ImplicitCastExpr 0x134142db8 <col:18> 'int (*)()' <FunctionToPointerDecay>
    | |     |     |   |   | | `-DeclRefExpr 0x134142d78 <col:18> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | |     |     |   |   | `-ImplicitCastExpr 0x134142e10 <col:28> 'int' <IntegralCast>
    | |     |     |   |   |   `-ImplicitCastExpr 0x134142df8 <col:28> 'unsigned char' <LValueToRValue>
    | |     |     |   |   |     `-DeclRefExpr 0x134142d98 <col:28> 'unsigned char' lvalue Var 0x134128488 'digit2' 'unsigned char'
    | |     |     |   |   `-IntegerLiteral 0x134142e28 <col:39> 'int' 4
    | |     |     |   `-IntegerLiteral 0x134142e88 <col:44> 'int' 240
    | |     |     `-ParenExpr 0x134142fd8 <col:52, col:75> 'int'
    | |     |       `-BinaryOperator 0x134142fb8 <col:53, col:74> 'int' '>>'
    | |     |         |-CallExpr 0x134142f40 <col:53, col:69> 'int'
    | |     |         | |-ImplicitCastExpr 0x134142f28 <col:53> 'int (*)()' <FunctionToPointerDecay>
    | |     |         | | `-DeclRefExpr 0x134142ee8 <col:53> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | |     |         | `-ImplicitCastExpr 0x134142f80 <col:63> 'int' <IntegralCast>
    | |     |         |   `-ImplicitCastExpr 0x134142f68 <col:63> 'unsigned char' <LValueToRValue>
    | |     |         |     `-DeclRefExpr 0x134142f08 <col:63> 'unsigned char' lvalue Var 0x134128508 'digit3' 'unsigned char'
    | |     |         `-IntegerLiteral 0x134142f98 <col:74> 'int' 2
    | |     |-UnaryOperator 0x134143070 <line:28:7, col:10> 'int' postfix '++'
    | |     | `-DeclRefExpr 0x134143050 <col:7> 'int' lvalue Var 0x134128350 'len' 'int'
    | |     `-IfStmt 0x134143430 <line:29:7, line:33:7>
    | |       |-BinaryOperator 0x1341430f0 <line:29:11, col:21> 'int' '!='
    | |       | |-ImplicitCastExpr 0x1341430d8 <col:11> 'int' <IntegralCast>
    | |       | | `-ImplicitCastExpr 0x1341430c0 <col:11> 'unsigned char' <LValueToRValue>
    | |       | |   `-DeclRefExpr 0x134143088 <col:11> 'unsigned char' lvalue Var 0x134128588 'digit4' 'unsigned char'
    | |       | `-CharacterLiteral 0x1341430a8 <col:21> 'int' 61
    | |       `-CompoundStmt 0x134143410 <line:30:7, line:33:7>
    | |         |-BinaryOperator 0x1341433b8 <line:31:2, col:63> 'char' '='
    | |         | |-UnaryOperator 0x134143148 <col:2, col:6> 'char' lvalue prefix '*' cannot overflow
    | |         | | `-UnaryOperator 0x134143130 <col:3, col:6> 'char *' postfix '++'
    | |         | |   `-DeclRefExpr 0x134143110 <col:3> 'char *' lvalue ParmVar 0x1341280d8 'out' 'char *'
    | |         | `-ImplicitCastExpr 0x1341433a0 <col:11, col:63> 'char' <IntegralCast>
    | |         |   `-BinaryOperator 0x134143380 <col:11, col:63> 'int' '|'
    | |         |     |-ParenExpr 0x1341432b0 <col:11, col:43> 'int'
    | |         |     | `-BinaryOperator 0x134143290 <col:12, col:39> 'int' '&'
    | |         |     |   |-ParenExpr 0x134143250 <col:12, col:35> 'int'
    | |         |     |   | `-BinaryOperator 0x134143230 <col:13, col:34> 'int' '<<'
    | |         |     |   |   |-CallExpr 0x1341431b8 <col:13, col:29> 'int'
    | |         |     |   |   | |-ImplicitCastExpr 0x1341431a0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |         |     |   |   | | `-DeclRefExpr 0x134143160 <col:13> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | |         |     |   |   | `-ImplicitCastExpr 0x1341431f8 <col:23> 'int' <IntegralCast>
    | |         |     |   |   |   `-ImplicitCastExpr 0x1341431e0 <col:23> 'unsigned char' <LValueToRValue>
    | |         |     |   |   |     `-DeclRefExpr 0x134143180 <col:23> 'unsigned char' lvalue Var 0x134128508 'digit3' 'unsigned char'
    | |         |     |   |   `-IntegerLiteral 0x134143210 <col:34> 'int' 6
    | |         |     |   `-IntegerLiteral 0x134143270 <col:39> 'int' 192
    | |         |     `-CallExpr 0x134143328 <col:47, col:63> 'int'
    | |         |       |-ImplicitCastExpr 0x134143310 <col:47> 'int (*)()' <FunctionToPointerDecay>
    | |         |       | `-DeclRefExpr 0x1341432d0 <col:47> 'int ()' Function 0x134141828 'base64val' 'int ()'
    | |         |       `-ImplicitCastExpr 0x134143368 <col:57> 'int' <IntegralCast>
    | |         |         `-ImplicitCastExpr 0x134143350 <col:57> 'unsigned char' <LValueToRValue>
    | |         |           `-DeclRefExpr 0x1341432f0 <col:57> 'unsigned char' lvalue Var 0x134128588 'digit4' 'unsigned char'
    | |         `-UnaryOperator 0x1341433f8 <line:32:2, col:5> 'int' postfix '++'
    | |           `-DeclRefExpr 0x1341433d8 <col:2> 'int' lvalue Var 0x134128350 'len' 'int'
    | `-BinaryOperator 0x134143610 <line:36:10, col:27> 'int' '&&'
    |   |-ImplicitCastExpr 0x1341435f8 <col:10, col:11> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x1341435e0 <col:10, col:11> 'char' <LValueToRValue>
    |   |   `-UnaryOperator 0x134143540 <col:10, col:11> 'const char' lvalue prefix '*' cannot overflow
    |   |     `-ImplicitCastExpr 0x134143528 <col:11> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x134143508 <col:11> 'const char *' lvalue ParmVar 0x134128158 'in' 'const char *'
    |   `-BinaryOperator 0x1341435c0 <col:17, col:27> 'int' '!='
    |     |-ImplicitCastExpr 0x1341435a8 <col:17> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x134143590 <col:17> 'unsigned char' <LValueToRValue>
    |     |   `-DeclRefExpr 0x134143558 <col:17> 'unsigned char' lvalue Var 0x134128588 'digit4' 'unsigned char'
    |     `-CharacterLiteral 0x134143578 <col:27> 'int' 61
    `-ReturnStmt 0x134143688 <line:38:3, col:10>
      `-ImplicitCastExpr 0x134143670 <col:10> 'int' <LValueToRValue>
        `-DeclRefExpr 0x134143650 <col:10> 'int' lvalue Var 0x134128350 'len' 'int'
