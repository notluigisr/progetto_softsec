`-FunctionDecl 0x14c929038  line:1:1 invalid CheckSetDeviceIndicators 'int (char *, int, int, int *, int)'
  |-ParmVarDecl 0x14c928cd8 <col:26, col:32> col:32 wire 'char *'
  |-ParmVarDecl 0x14c928d70 <line:2:26, col:39> col:39 invalid dev 'int'
  |-ParmVarDecl 0x14c928df0 <line:3:26, col:30> col:30 used num 'int'
  |-ParmVarDecl 0x14c928ea8 <col:35, col:40> col:40 used status_rtrn 'int *'
  |-ParmVarDecl 0x14c928f28 <col:53, col:63> col:63 invalid client 'int'
  `-CompoundStmt 0x14d009538 <line:4:1, line:69:1>
    |-DeclStmt 0x14c9291a0 <line:6:5, col:10>
    | `-VarDecl 0x14c929138 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x14d009500 <line:10:5, line:67:5>
      |-BinaryOperator 0x14c929210 <line:10:10, col:14> 'int' '='
      | |-DeclRefExpr 0x14c9291d0 <col:10> 'int' lvalue Var 0x14c929138 'i' 'int'
      | `-IntegerLiteral 0x14c9291f0 <col:14> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x14c9292a0 <col:17, col:21> 'int' '<'
      | |-ImplicitCastExpr 0x14c929270 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x14c929230 <col:17> 'int' lvalue Var 0x14c929138 'i' 'int'
      | `-ImplicitCastExpr 0x14c929288 <col:21> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x14c929250 <col:21> 'int' lvalue ParmVar 0x14c928df0 'num' 'int'
      |-UnaryOperator 0x14c9292e0 <col:26, col:27> 'int' postfix '++'
      | `-DeclRefExpr 0x14c9292c0 <col:26> 'int' lvalue Var 0x14c929138 'i' 'int'
      `-CompoundStmt 0x14d0094e0 <col:31, line:67:5>
        |-IfStmt 0x14c942d00 <line:11:9, line:17:9>
        | |-CXXDependentScopeMemberExpr 0x14c929318 <line:11:13, col:21> '<dependent type>' contains-errors lvalue ->swapped
        | | `-RecoveryExpr 0x14c9292f8 <col:13> '<dependent type>' contains-errors lvalue
        | `-CompoundStmt 0x14c942cc8 <col:30, line:17:9>
        |   |-CallExpr 0x14c942620 <line:12:13, col:37> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x14c9424e0 <col:13> 'int ()' Function 0x14c942428 'swaps' 'int ()'
        |   | `-UnaryOperator 0x14c942608 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-CXXDependentScopeMemberExpr 0x14c9425c0 <col:20, col:29> '<dependent type>' contains-errors lvalue ->ledClass
        |   |     `-RecoveryExpr 0x14c9425a0 <col:20> '<dependent type>' contains-errors lvalue
        |   |-CallExpr 0x14c942788 <line:13:13, col:34> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x14c942648 <col:13> 'int ()' Function 0x14c942428 'swaps' 'int ()'
        |   | `-UnaryOperator 0x14c942770 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-CXXDependentScopeMemberExpr 0x14c942728 <col:20, col:29> '<dependent type>' contains-errors lvalue ->ledID
        |   |     `-RecoveryExpr 0x14c942708 <col:20> '<dependent type>' contains-errors lvalue
        |   |-CallExpr 0x14c9429d0 <line:14:13, col:41> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x14c942890 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'
        |   | `-UnaryOperator 0x14c9429b8 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-CXXDependentScopeMemberExpr 0x14c942970 <col:20, col:29> '<dependent type>' contains-errors lvalue ->namesPresent
        |   |     `-RecoveryExpr 0x14c942950 <col:20> '<dependent type>' contains-errors lvalue
        |   |-CallExpr 0x14c942b38 <line:15:13, col:40> '<dependent type>' contains-errors
        |   | |-DeclRefExpr 0x14c9429f8 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'
        |   | `-UnaryOperator 0x14c942b20 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   |   `-CXXDependentScopeMemberExpr 0x14c942ad8 <col:20, col:29> '<dependent type>' contains-errors lvalue ->mapsPresent
        |   |     `-RecoveryExpr 0x14c942ab8 <col:20> '<dependent type>' contains-errors lvalue
        |   `-CallExpr 0x14c942ca0 <line:16:13, col:43> '<dependent type>' contains-errors
        |     |-DeclRefExpr 0x14c942b60 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'
        |     `-UnaryOperator 0x14c942c88 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow
        |       `-CXXDependentScopeMemberExpr 0x14c942c40 <col:20, col:29> '<dependent type>' contains-errors lvalue ->physIndicators
        |         `-RecoveryExpr 0x14c942c20 <col:20> '<dependent type>' contains-errors lvalue
        `-IfStmt 0x14d0094b0 <line:21:9, line:66:9> has_else
          |-RecoveryExpr 0x14c942f58 <line:21:13, col:20> '_Bool' contains-errors
          |-CompoundStmt 0x14d009460 <col:26, line:62:9>
          | |-DeclStmt 0x14c942ff8 <line:22:13, col:27>
          | | `-VarDecl 0x14c942f90 <col:13, col:26> col:26 used n 'int' register
          | |-DeclStmt 0x14c943090 <line:23:13, col:34>
          | | `-VarDecl 0x14c943028 <col:13, col:31> col:31 used bit 'unsigned int' register
          | |-DeclStmt 0x14c9431c0 <line:24:13, col:30>
          | | |-VarDecl 0x14c9430c0 <col:13, col:17> col:17 used nMaps 'int'
          | | `-VarDecl 0x14c943140 <col:13, col:24> col:24 used nNames 'int'
          | |-BinaryOperator 0x14c943258 <line:28:13, col:30> 'int' '='
          | | |-DeclRefExpr 0x14c9431d8 <col:13> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'
          | | `-BinaryOperator 0x14c943238 <col:21, col:30> 'int' '='
          | |   |-DeclRefExpr 0x14c9431f8 <col:21> 'int' lvalue Var 0x14c943140 'nNames' 'int'
          | |   `-IntegerLiteral 0x14c943218 <col:30> 'int' 0
          | |-IfStmt 0x14d008e70 <line:36:13, line:45:13>
          | | |-BinaryOperator 0x14d008a50 <line:36:17, col:26> 'int' '>'
          | | | |-ImplicitCastExpr 0x14d008a38 <col:17> 'int' <LValueToRValue>
          | | | | `-DeclRefExpr 0x14d0089f8 <col:17> 'int' lvalue Var 0x14c943140 'nNames' 'int'
          | | | `-IntegerLiteral 0x14d008a18 <col:26> 'int' 0
          | | `-CompoundStmt 0x14d008e58 <col:29, line:45:13>
          | |   `-ForStmt 0x14d008e20 <line:37:17, line:44:17>
          | |     |-BinaryOperator 0x14d008ab0 <line:37:22, col:26> 'int' '='
          | |     | |-DeclRefExpr 0x14d008a70 <col:22> 'int' lvalue Var 0x14c942f90 'n' 'int'
          | |     | `-IntegerLiteral 0x14d008a90 <col:26> 'int' 0
          | |     |-<<<NULL>>>
          | |     |-BinaryOperator 0x14d008b40 <col:29, col:33> 'int' '<'
          | |     | |-ImplicitCastExpr 0x14d008b10 <col:29> 'int' <LValueToRValue>
          | |     | | `-DeclRefExpr 0x14d008ad0 <col:29> 'int' lvalue Var 0x14c942f90 'n' 'int'
          | |     | `-ImplicitCastExpr 0x14d008b28 <col:33> 'int' <LValueToRValue>
          | |     |   `-DeclRefExpr 0x14d008af0 <col:33> 'int' lvalue Var 0x14c943140 'nNames' 'int'
          | |     |-UnaryOperator 0x14d008b80 <col:41, col:42> 'int' postfix '++'
          | |     | `-DeclRefExpr 0x14d008b60 <col:41> 'int' lvalue Var 0x14c942f90 'n' 'int'
          | |     `-CompoundStmt 0x14d008e08 <col:46, line:44:17>
          | |       `-IfStmt 0x14d008c30 <line:38:21, line:40:21>
          | |         |-CXXDependentScopeMemberExpr 0x14d008bb8 <line:38:25, col:33> '<dependent type>' contains-errors lvalue ->swapped
          | |         | `-RecoveryExpr 0x14d008b98 <col:25> '<dependent type>' contains-errors lvalue
          | |         `-CompoundStmt 0x14d008c20 <col:42, line:40:21>
          | `-IfStmt 0x14d009440 <line:47:13, line:60:13>
          |   |-BinaryOperator 0x14d008ee8 <line:47:17, col:25> 'int' '>'
          |   | |-ImplicitCastExpr 0x14d008ed0 <col:17> 'int' <LValueToRValue>
          |   | | `-DeclRefExpr 0x14d008e90 <col:17> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'
          |   | `-IntegerLiteral 0x14d008eb0 <col:25> 'int' 0
          |   `-CompoundStmt 0x14d009428 <col:28, line:60:13>
          |     `-ForStmt 0x14d0093f0 <line:48:17, line:59:17>
          |       |-BinaryOperator 0x14d008f48 <line:48:22, col:26> 'int' '='
          |       | |-DeclRefExpr 0x14d008f08 <col:22> 'int' lvalue Var 0x14c942f90 'n' 'int'
          |       | `-IntegerLiteral 0x14d008f28 <col:26> 'int' 0
          |       |-<<<NULL>>>
          |       |-BinaryOperator 0x14d008fd8 <col:29, col:33> 'int' '<'
          |       | |-ImplicitCastExpr 0x14d008fa8 <col:29> 'int' <LValueToRValue>
          |       | | `-DeclRefExpr 0x14d008f68 <col:29> 'int' lvalue Var 0x14c942f90 'n' 'int'
          |       | `-ImplicitCastExpr 0x14d008fc0 <col:33> 'int' <LValueToRValue>
          |       |   `-DeclRefExpr 0x14d008f88 <col:33> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'
          |       |-UnaryOperator 0x14d009018 <col:40, col:41> 'int' postfix '++'
          |       | `-DeclRefExpr 0x14d008ff8 <col:40> 'int' lvalue Var 0x14c942f90 'n' 'int'
          |       `-CompoundStmt 0x14d0093d8 <col:45, line:59:17>
          |         `-IfStmt 0x14d0090e8 <line:49:21, line:52:21>
          |           |-CXXDependentScopeMemberExpr 0x14d009050 <line:49:25, col:33> '<dependent type>' contains-errors lvalue ->swapped
          |           | `-RecoveryExpr 0x14d009030 <col:25> '<dependent type>' contains-errors lvalue
          |           `-CompoundStmt 0x14d0090d8 <col:42, line:52:21>
          `-CompoundStmt 0x14d0094a0 <line:63:14, line:66:9>
