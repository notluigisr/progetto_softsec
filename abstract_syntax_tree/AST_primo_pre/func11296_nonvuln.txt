`-FunctionDecl 0x125128438  line:1:1 invalid qf_add_entries 'int (int *, int, int *, char *, int)'
  |-ParmVarDecl 0x125128128 <line:2:2, col:13> col:13 invalid qi 'int *'
  |-ParmVarDecl 0x1251281a8 <line:3:2, col:7> col:7 used qf_idx 'int'
  |-ParmVarDecl 0x125128228 <line:4:2, col:11> col:11 invalid list 'int *'
  |-ParmVarDecl 0x1251282a8 <line:5:2, col:11> col:11 used title 'char *'
  |-ParmVarDecl 0x125128328 <line:6:2, col:7> col:7 used action 'int'
  `-CompoundStmt 0x125142708 <line:7:1, line:66:1>
    |-DeclStmt 0x125141838 <line:12:5, col:21>
    | `-VarDecl 0x125128788 <col:5, col:19> col:10 used retval 'int' cinit
    |   `-RecoveryExpr 0x125141818 <col:19> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x125141908 <line:13:5, col:29>
    | `-VarDecl 0x125141868 <col:5, col:24> col:10 valid_entry 'int' cinit
    |   `-RecoveryExpr 0x1251418e8 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1251422f0 <line:15:5, line:29:5> has_else
    | |-BinaryOperator 0x125141a38 <line:15:9, col:40> 'int' contains-errors '||'
    | | |-BinaryOperator 0x125141970 <col:9, col:19> 'int' '=='
    | | | |-ImplicitCastExpr 0x125141958 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x125141920 <col:9> 'int' lvalue ParmVar 0x125128328 'action' 'int'
    | | | `-CharacterLiteral 0x125141940 <col:19> 'int' 32
    | | `-BinaryOperator 0x125141a18 <col:26, col:40> 'int' contains-errors '=='
    | |   |-DeclRefExpr 0x125141990 <col:26> 'int' lvalue ParmVar 0x1251281a8 'qf_idx' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x1251419d0 <col:36, col:40> '<dependent type>' contains-errors lvalue ->qf_listcount
    | |     `-RecoveryExpr 0x1251419b0 <col:36> '<dependent type>' contains-errors lvalue
    | |-CompoundStmt 0x125141d00 <line:16:5, line:21:5>
    | | |-CallExpr 0x125141b98 <line:18:2, col:23> '<dependent type>' contains-errors
    | | | |-DeclRefExpr 0x125141b38 <col:2> 'int ()' Function 0x125141a80 'qf_new_list' 'int ()'
    | | | |-RecoveryExpr 0x125141b58 <col:14> '<dependent type>' contains-errors lvalue
    | | | `-DeclRefExpr 0x125141b78 <col:18> 'char *' lvalue ParmVar 0x1251282a8 'title' 'char *'
    | | `-BinaryOperator 0x125141c50 <line:19:2, col:15> 'int' contains-errors '='
    | |   |-DeclRefExpr 0x125141bc8 <col:2> 'int' lvalue ParmVar 0x1251281a8 'qf_idx' 'int'
    | |   `-CXXDependentScopeMemberExpr 0x125141c08 <col:11, col:15> '<dependent type>' contains-errors lvalue ->qf_curlist
    | |     `-RecoveryExpr 0x125141be8 <col:11> '<dependent type>' contains-errors lvalue
    | `-IfStmt 0x1251422c0 <line:22:10, line:29:5> has_else
    |   |-BinaryOperator 0x125141fd8 <line:22:14, col:49> 'int' contains-errors '&&'
    |   | |-BinaryOperator 0x125141f58 <col:14, col:24> 'int' '=='
    |   | | |-ImplicitCastExpr 0x125141f40 <col:14> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x125141d20 <col:14> 'int' lvalue ParmVar 0x125128328 'action' 'int'
    |   | | `-CharacterLiteral 0x125141d40 <col:24> 'int' 97
    |   | `-UnaryOperator 0x125141fc0 <col:31, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow
    |   |   `-CallExpr 0x125141f98 <col:32, col:49> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x125141e70 <col:32> 'int ()' Function 0x125141db8 'qf_list_empty' 'int ()'
    |   |     `-RecoveryExpr 0x125141f78 <col:46> '<dependent type>' contains-errors lvalue
    |   |-NullStmt 0x1251422b8 <line:24:2>
    |   `-IfStmt 0x125142298 <line:25:10, line:29:5>
    |     |-BinaryOperator 0x125142048 <line:25:14, col:24> 'int' '=='
    |     | |-ImplicitCastExpr 0x125142030 <col:14> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x125141ff8 <col:14> 'int' lvalue ParmVar 0x125128328 'action' 'int'
    |     | `-CharacterLiteral 0x125142018 <col:24> 'int' 114
    |     `-CompoundStmt 0x125142288 <line:26:5, line:29:5>
    `-ReturnStmt 0x1251426f8 <line:65:5, col:12>
      `-ImplicitCastExpr 0x1251426e0 <col:12> 'int' contains-errors <LValueToRValue>
        `-DeclRefExpr 0x1251426c0 <col:12> 'int' contains-errors lvalue Var 0x125128788 'retval' 'int'
