`-FunctionDecl 0x13c128718  line:1:12 invalid ras_getcmap 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x13c128528 <col:24, col:38> col:38 invalid in 'int *'
  |-ParmVarDecl 0x13c1285a8 <col:42, col:53> col:53 invalid hdr 'int *'
  |-ParmVarDecl 0x13c128628 <col:58, col:70> col:70 referenced invalid cmap 'int *'
  `-CompoundStmt 0x13c143bf0 <line:2:1, line:54:1>
    |-DeclStmt 0x13c128858 <line:3:2, col:7>
    | `-VarDecl 0x13c1287f0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x13c1288f0 <line:4:2, col:7>
    | `-VarDecl 0x13c128888 <col:2, col:6> col:6 used j 'int'
    |-DeclStmt 0x13c128988 <line:5:2, col:7>
    | `-VarDecl 0x13c128920 <col:2, col:6> col:6 used x 'int'
    |-DeclStmt 0x13c128a20 <line:6:2, col:7>
    | `-VarDecl 0x13c1289b8 <col:2, col:6> col:6 used c 'int'
    |-DeclStmt 0x13c128ab8 <line:7:2, col:15>
    | `-VarDecl 0x13c128a50 <col:2, col:6> col:6 used numcolors 'int'
    |-DeclStmt 0x13c128b50 <line:8:2, col:21>
    | `-VarDecl 0x13c128ae8 <col:2, col:6> col:6 used actualnumcolors 'int'
    |-SwitchStmt 0x13c141c00 <line:10:2, line:51:2>
    | |-ImplicitCastExpr 0x13c128bd0 <line:10:10, col:15> '<dependent type>' contains-errors <LValueToRValue>
    | | `-CXXDependentScopeMemberExpr 0x13c128b88 <col:10, col:15> '<dependent type>' contains-errors lvalue ->maptype
    | |   `-RecoveryExpr 0x13c128b68 <col:10> '<dependent type>' contains-errors lvalue
    | `-CompoundStmt 0x13c143b88 <col:24, line:51:2>
    |   |-BreakStmt 0x13c141c40 <line:12:3>
    |   |-CompoundStmt 0x13c143ac8 <line:14:3, line:46:3>
    |   | |-CallExpr 0x13c141e88 <line:15:3, col:20> 'int'
    |   | | |-ImplicitCastExpr 0x13c141e70 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x13c141dc0 <col:3> 'int ()' Function 0x13c141d08 'jas_eprintf' 'int ()'
    |   | | `-ImplicitCastExpr 0x13c141eb0 <col:15> 'char *' <ArrayToPointerDecay>
    |   | |   `-StringLiteral 0x13c141e20 <col:15> 'char[4]' lvalue "STR"
    |   | |-BinaryOperator 0x13c141f90 <line:16:3, col:25> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x13c141ec8 <col:3> 'int' lvalue Var 0x13c128a50 'numcolors' 'int'
    |   | | `-BinaryOperator 0x13c141f70 <col:15, col:25> '<dependent type>' contains-errors '<<'
    |   | |   |-IntegerLiteral 0x13c141ee8 <col:15> 'int' 1
    |   | |   `-CXXDependentScopeMemberExpr 0x13c141f28 <col:20, col:25> '<dependent type>' contains-errors lvalue ->depth
    |   | |     `-RecoveryExpr 0x13c141f08 <col:20> '<dependent type>' contains-errors lvalue
    |   | |-CallExpr 0x13c142170 <line:17:3, col:38> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x13c142090 <col:3> 'int ()' Function 0x13c141fd8 'assert' 'int ()'
    |   | | `-BinaryOperator 0x13c142150 <col:10, col:23> 'int' contains-errors '<='
    |   | |   |-DeclRefExpr 0x13c1420b0 <col:10> 'int' lvalue Var 0x13c128a50 'numcolors' 'int'
    |   | |   `-RecoveryExpr 0x13c142130 <col:23> '<dependent type>' contains-errors lvalue
    |   | |-BinaryOperator 0x13c142260 <line:18:3, col:38> 'int' contains-errors '='
    |   | | |-DeclRefExpr 0x13c142198 <col:3> 'int' lvalue Var 0x13c128ae8 'actualnumcolors' 'int'
    |   | | `-BinaryOperator 0x13c142240 <col:21, col:38> '<dependent type>' contains-errors '/'
    |   | |   |-CXXDependentScopeMemberExpr 0x13c1421d8 <col:21, col:26> '<dependent type>' contains-errors lvalue ->maplength
    |   | |   | `-RecoveryExpr 0x13c1421b8 <col:21> '<dependent type>' contains-errors lvalue
    |   | |   `-IntegerLiteral 0x13c142220 <col:38> 'int' 3
    |   | |-ForStmt 0x13c142500 <line:19:3, line:21:3>
    |   | | |-BinaryOperator 0x13c1422c0 <line:19:8, col:12> 'int' '='
    |   | | | |-DeclRefExpr 0x13c142280 <col:8> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   | | | `-IntegerLiteral 0x13c1422a0 <col:12> 'int' 0
    |   | | |-<<<NULL>>>
    |   | | |-BinaryOperator 0x13c142350 <col:15, col:19> 'int' '<'
    |   | | | |-ImplicitCastExpr 0x13c142320 <col:15> 'int' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x13c1422e0 <col:15> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   | | | `-ImplicitCastExpr 0x13c142338 <col:19> 'int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x13c142300 <col:19> 'int' lvalue Var 0x13c128a50 'numcolors' 'int'
    |   | | |-UnaryOperator 0x13c142390 <col:30, col:31> 'int' postfix '++'
    |   | | | `-DeclRefExpr 0x13c142370 <col:30> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   | | `-CompoundStmt 0x13c1424e8 <col:35, line:21:3>
    |   | |   `-BinaryOperator 0x13c1424c8 <line:20:4, col:20> '<dependent type>' contains-errors '='
    |   | |     |-ArraySubscriptExpr 0x13c142488 <col:4, col:16> '<dependent type>' contains-errors lvalue
    |   | |     | |-ImplicitCastExpr 0x13c142458 <col:4, col:10> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     | | `-CXXDependentScopeMemberExpr 0x13c1423f0 <col:4, col:10> '<dependent type>' contains-errors lvalue ->data
    |   | |     | |   `-RecoveryExpr 0x13c1423c8 <col:4> '<dependent type>' contains-errors lvalue
    |   | |     | |     `-DeclRefExpr 0x13c1423a8 <col:4> 'int *' lvalue ParmVar 0x13c128628 'cmap' 'int *'
    |   | |     | `-ImplicitCastExpr 0x13c142470 <col:15> 'int' <LValueToRValue>
    |   | |     |   `-DeclRefExpr 0x13c142438 <col:15> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   | |     `-IntegerLiteral 0x13c1424a8 <col:20> 'int' 0
    |   | |-IfStmt 0x13c142848 <line:22:3, line:25:3>
    |   | | |-BinaryOperator 0x13c1427c8 <line:22:7, line:23:26> 'int' contains-errors '||'
    |   | | | |-BinaryOperator 0x13c1426a8 <line:22:7, col:48> 'int' contains-errors '||'
    |   | | | | |-ParenExpr 0x13c1425e0 <col:7, col:26> '<dependent type>' contains-errors
    |   | | | | | `-BinaryOperator 0x13c1425c0 <col:8, col:25> '<dependent type>' contains-errors '%'
    |   | | | | |   |-CXXDependentScopeMemberExpr 0x13c142558 <col:8, col:13> '<dependent type>' contains-errors lvalue ->maplength
    |   | | | | |   | `-RecoveryExpr 0x13c142538 <col:8> '<dependent type>' contains-errors lvalue
    |   | | | | |   `-IntegerLiteral 0x13c1425a0 <col:25> 'int' 3
    |   | | | | `-BinaryOperator 0x13c142688 <col:31, col:48> 'int' contains-errors '<'
    |   | | | |   |-CXXDependentScopeMemberExpr 0x13c142620 <col:31, col:36> '<dependent type>' contains-errors lvalue ->maplength
    |   | | | |   | `-RecoveryExpr 0x13c142600 <col:31> '<dependent type>' contains-errors lvalue
    |   | | | |   `-IntegerLiteral 0x13c142668 <col:48> 'int' 0
    |   | | | `-BinaryOperator 0x13c1427a8 <line:23:5, col:26> 'int' contains-errors '>'
    |   | | |   |-CXXDependentScopeMemberExpr 0x13c1426e8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->maplength
    |   | | |   | `-RecoveryExpr 0x13c1426c8 <col:5> '<dependent type>' contains-errors lvalue
    |   | | |   `-BinaryOperator 0x13c142788 <col:22, col:26> 'int' '*'
    |   | | |     |-IntegerLiteral 0x13c142730 <col:22> 'int' 3
    |   | | |     `-ImplicitCastExpr 0x13c142770 <col:26> 'int' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x13c142750 <col:26> 'int' lvalue Var 0x13c128a50 'numcolors' 'int'
    |   | | `-CompoundStmt 0x13c142830 <col:37, line:25:3>
    |   | |   `-ReturnStmt 0x13c142820 <line:24:4, col:12>
    |   | |     `-UnaryOperator 0x13c142808 <col:11, col:12> 'int' prefix '-'
    |   | |       `-IntegerLiteral 0x13c1427e8 <col:12> 'int' 1
    |   | `-ForStmt 0x13c143a90 <line:26:3, line:45:3>
    |   |   |-BinaryOperator 0x13c1428a8 <line:26:8, col:12> 'int' '='
    |   |   | |-DeclRefExpr 0x13c142868 <col:8> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   |   | `-IntegerLiteral 0x13c142888 <col:12> 'int' 0
    |   |   |-<<<NULL>>>
    |   |   |-BinaryOperator 0x13c142920 <col:15, col:19> 'int' '<'
    |   |   | |-ImplicitCastExpr 0x13c142908 <col:15> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x13c1428c8 <col:15> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   |   | `-IntegerLiteral 0x13c1428e8 <col:19> 'int' 3
    |   |   |-UnaryOperator 0x13c142960 <col:22, col:23> 'int' postfix '++'
    |   |   | `-DeclRefExpr 0x13c142940 <col:22> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   |   `-CompoundStmt 0x13c143a78 <col:27, line:45:3>
    |   |     `-ForStmt 0x13c143a40 <line:27:4, line:44:4>
    |   |       |-BinaryOperator 0x13c1429b8 <line:27:9, col:13> 'int' '='
    |   |       | |-DeclRefExpr 0x13c142978 <col:9> 'int' lvalue Var 0x13c128888 'j' 'int'
    |   |       | `-IntegerLiteral 0x13c142998 <col:13> 'int' 0
    |   |       |-<<<NULL>>>
    |   |       |-BinaryOperator 0x13c142a48 <col:16, col:20> 'int' '<'
    |   |       | |-ImplicitCastExpr 0x13c142a18 <col:16> 'int' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x13c1429d8 <col:16> 'int' lvalue Var 0x13c128888 'j' 'int'
    |   |       | `-ImplicitCastExpr 0x13c142a30 <col:20> 'int' <LValueToRValue>
    |   |       |   `-DeclRefExpr 0x13c1429f8 <col:20> 'int' lvalue Var 0x13c128ae8 'actualnumcolors' 'int'
    |   |       |-UnaryOperator 0x13c142a88 <col:37, col:38> 'int' postfix '++'
    |   |       | `-DeclRefExpr 0x13c142a68 <col:37> 'int' lvalue Var 0x13c128888 'j' 'int'
    |   |       `-CompoundStmt 0x13c143a10 <col:42, line:44:4>
    |   |         |-IfStmt 0x13c143140 <line:28:5, line:30:5>
    |   |         | |-BinaryOperator 0x13c1430c0 <line:28:9, col:38> 'int' contains-errors '=='
    |   |         | | |-ParenExpr 0x13c143048 <col:9, col:33> 'int' contains-errors
    |   |         | | | `-BinaryOperator 0x13c143028 <col:10, col:32> 'int' contains-errors '='
    |   |         | | |   |-DeclRefExpr 0x13c142aa0 <col:10> 'int' lvalue Var 0x13c1289b8 'c' 'int'
    |   |         | | |   `-CallExpr 0x13c143000 <col:14, col:32> '<dependent type>' contains-errors
    |   |         | | |     |-DeclRefExpr 0x13c142ba0 <col:14> 'int ()' Function 0x13c142ae8 'jas_stream_getc' 'int ()'
    |   |         | | |     `-RecoveryExpr 0x13c142bc0 <col:30> '<dependent type>' contains-errors lvalue
    |   |         | | `-RecoveryExpr 0x13c1430a0 <col:38> '<dependent type>' contains-errors lvalue
    |   |         | `-CompoundStmt 0x13c143128 <col:43, line:30:5>
    |   |         |   `-ReturnStmt 0x13c143118 <line:29:6, col:14>
    |   |         |     `-UnaryOperator 0x13c143100 <col:13, col:14> 'int' prefix '-'
    |   |         |       `-IntegerLiteral 0x13c1430e0 <col:14> 'int' 1
    |   |         |-BinaryOperator 0x13c1431a0 <line:31:5, col:9> 'int' '='
    |   |         | |-DeclRefExpr 0x13c143160 <col:5> 'int' lvalue Var 0x13c128920 'x' 'int'
    |   |         | `-IntegerLiteral 0x13c143180 <col:9> 'int' 0
    |   |         |-SwitchStmt 0x13c1431f8 <line:32:5, line:42:5>
    |   |         | |-ImplicitCastExpr 0x13c1431e0 <line:32:13> 'int' <LValueToRValue>
    |   |         | | `-DeclRefExpr 0x13c1431c0 <col:13> 'int' lvalue Var 0x13c1287f0 'i' 'int'
    |   |         | `-CompoundStmt 0x13c143880 <col:16, line:42:5>
    |   |         |   |-CaseStmt 0x13c143258 <line:33:5, line:34:19>
    |   |         |   | |-ConstantExpr 0x13c143240 <line:33:10> 'int'
    |   |         |   | | `-IntegerLiteral 0x13c143220 <col:10> 'int' 0
    |   |         |   | `-BinaryOperator 0x13c143418 <line:34:6, col:19> 'int' '='
    |   |         |   |   |-DeclRefExpr 0x13c143280 <col:6> 'int' lvalue Var 0x13c128920 'x' 'int'
    |   |         |   |   `-CallExpr 0x13c1433d8 <col:10, col:19> 'int'
    |   |         |   |     |-ImplicitCastExpr 0x13c1433c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |         |   |     | `-DeclRefExpr 0x13c143380 <col:10> 'int ()' Function 0x13c1432c8 'RAS_RED' 'int ()'
    |   |         |   |     `-ImplicitCastExpr 0x13c143400 <col:18> 'int' <LValueToRValue>
    |   |         |   |       `-DeclRefExpr 0x13c1433a0 <col:18> 'int' lvalue Var 0x13c1289b8 'c' 'int'
    |   |         |   |-BreakStmt 0x13c143438 <line:35:6>
    |   |         |   |-CaseStmt 0x13c143478 <line:36:5, line:37:21>
    |   |         |   | |-ConstantExpr 0x13c143460 <line:36:10> 'int'
    |   |         |   | | `-IntegerLiteral 0x13c143440 <col:10> 'int' 1
    |   |         |   | `-BinaryOperator 0x13c143638 <line:37:6, col:21> 'int' '='
    |   |         |   |   |-DeclRefExpr 0x13c1434a0 <col:6> 'int' lvalue Var 0x13c128920 'x' 'int'
    |   |         |   |   `-CallExpr 0x13c1435f8 <col:10, col:21> 'int'
    |   |         |   |     |-ImplicitCastExpr 0x13c1435e0 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |         |   |     | `-DeclRefExpr 0x13c1435a0 <col:10> 'int ()' Function 0x13c1434e8 'RAS_GREEN' 'int ()'
    |   |         |   |     `-ImplicitCastExpr 0x13c143620 <col:20> 'int' <LValueToRValue>
    |   |         |   |       `-DeclRefExpr 0x13c1435c0 <col:20> 'int' lvalue Var 0x13c1289b8 'c' 'int'
    |   |         |   |-BreakStmt 0x13c143658 <line:38:6>
    |   |         |   |-CaseStmt 0x13c143698 <line:39:5, line:40:20>
    |   |         |   | |-ConstantExpr 0x13c143680 <line:39:10> 'int'
    |   |         |   | | `-IntegerLiteral 0x13c143660 <col:10> 'int' 2
    |   |         |   | `-BinaryOperator 0x13c143858 <line:40:6, col:20> 'int' '='
    |   |         |   |   |-DeclRefExpr 0x13c1436c0 <col:6> 'int' lvalue Var 0x13c128920 'x' 'int'
    |   |         |   |   `-CallExpr 0x13c143818 <col:10, col:20> 'int'
    |   |         |   |     |-ImplicitCastExpr 0x13c143800 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   |         |   |     | `-DeclRefExpr 0x13c1437c0 <col:10> 'int ()' Function 0x13c143708 'RAS_BLUE' 'int ()'
    |   |         |   |     `-ImplicitCastExpr 0x13c143840 <col:19> 'int' <LValueToRValue>
    |   |         |   |       `-DeclRefExpr 0x13c1437e0 <col:19> 'int' lvalue Var 0x13c1289b8 'c' 'int'
    |   |         |   `-BreakStmt 0x13c143878 <line:41:6>
    |   |         `-CompoundAssignOperator 0x13c1439e0 <line:43:5, col:22> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'
    |   |           |-ArraySubscriptExpr 0x13c1439a0 <col:5, col:17> '<dependent type>' contains-errors lvalue
    |   |           | |-ImplicitCastExpr 0x13c143970 <col:5, col:11> '<dependent type>' contains-errors <LValueToRValue>
    |   |           | | `-CXXDependentScopeMemberExpr 0x13c143908 <col:5, col:11> '<dependent type>' contains-errors lvalue ->data
    |   |           | |   `-RecoveryExpr 0x13c1438e0 <col:5> '<dependent type>' contains-errors lvalue
    |   |           | |     `-DeclRefExpr 0x13c1438c0 <col:5> 'int *' lvalue ParmVar 0x13c128628 'cmap' 'int *'
    |   |           | `-ImplicitCastExpr 0x13c143988 <col:16> 'int' <LValueToRValue>
    |   |           |   `-DeclRefExpr 0x13c143950 <col:16> 'int' lvalue Var 0x13c128888 'j' 'int'
    |   |           `-DeclRefExpr 0x13c1439c0 <col:22> 'int' lvalue Var 0x13c128920 'x' 'int'
    |   |-BreakStmt 0x13c143b10 <line:47:3>
    |   |-DefaultStmt 0x13c143b60 <line:48:2, line:49:11>
    |   | `-ReturnStmt 0x13c143b50 <col:3, col:11>
    |   |   `-UnaryOperator 0x13c143b38 <col:10, col:11> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x13c143b18 <col:11> 'int' 1
    |   `-BreakStmt 0x13c143b80 <line:50:3>
    `-ReturnStmt 0x13c143be0 <line:53:2, col:9>
      `-IntegerLiteral 0x13c143bc0 <col:9> 'int' 0
