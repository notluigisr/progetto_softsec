`-FunctionDecl 0x12500de88  line:1:1 invalid RGB_to_HWB 'int (int, int *)'
  |-ParmVarDecl 0x12500dcf0 <col:13, col:21> col:21 invalid RGB 'int'
  |-ParmVarDecl 0x12500dda8 <col:26, col:36> col:36 invalid HWB 'int *'
  `-CompoundStmt 0x124924d40 <line:2:1, line:18:1>
    |-DeclStmt 0x124922640 <line:6:2, col:51>
    | |-VarDecl 0x12500df58 <col:2, col:16> col:8 used R 'float' cinit
    | | `-CXXDependentScopeMemberExpr 0x12500dfe0 <col:12, col:16> '<dependent type>' contains-errors lvalue .R
    | |   `-RecoveryExpr 0x12500dfc0 <col:12> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x12500e040 <col:2, col:27> col:19 used G 'float' cinit
    | | `-CXXDependentScopeMemberExpr 0x12500e0c8 <col:23, col:27> '<dependent type>' contains-errors lvalue .G
    | |   `-RecoveryExpr 0x12500e0a8 <col:23> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x12500e128 <col:2, col:38> col:30 used B 'float' cinit
    | | `-CXXDependentScopeMemberExpr 0x12500e1b0 <col:34, col:38> '<dependent type>' contains-errors lvalue .B
    | |   `-RecoveryExpr 0x12500e190 <col:34> '<dependent type>' contains-errors lvalue
    | |-VarDecl 0x12500e210 <col:2, col:41> col:41 used w 'float'
    | |-VarDecl 0x12500e290 <col:2, col:44> col:44 used v 'float'
    | |-VarDecl 0x12500e310 <col:2, col:47> col:47 used b 'float'
    | `-VarDecl 0x12500e390 <col:2, col:50> col:50 used f 'float'
    |-DeclStmt 0x1249226d8 <line:7:2, col:7>
    | `-VarDecl 0x124922670 <col:2, col:6> col:6 used i 'int'
    |-BinaryOperator 0x124922a18 <line:9:2, col:19> 'float' contains-errors '='
    | |-DeclRefExpr 0x1249226f0 <col:2> 'float' lvalue Var 0x12500e210 'w' 'float'
    | `-ImplicitCastExpr 0x124922a00 <col:6, col:19> 'float' contains-errors <IntegralToFloating>
    |   `-CallExpr 0x124922938 <col:6, col:19> 'int' contains-errors
    |     |-ImplicitCastExpr 0x124922920 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124922870 <col:6> 'int ()' Function 0x1249227b8 'MIN3' 'int ()'
    |     |-ImplicitCastExpr 0x124922988 <col:12> 'double' contains-errors <FloatingCast>
    |     | `-ImplicitCastExpr 0x124922970 <col:12> 'float' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x124922890 <col:12> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |     |-ImplicitCastExpr 0x1249229b8 <col:15> 'double' contains-errors <FloatingCast>
    |     | `-ImplicitCastExpr 0x1249229a0 <col:15> 'float' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x1249228b0 <col:15> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |     `-ImplicitCastExpr 0x1249229e8 <col:18> 'double' contains-errors <FloatingCast>
    |       `-ImplicitCastExpr 0x1249229d0 <col:18> 'float' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x1249228d0 <col:18> 'float' contains-errors lvalue Var 0x12500e128 'B' 'float'
    |-BinaryOperator 0x124922cb0 <line:10:2, col:19> 'float' contains-errors '='
    | |-DeclRefExpr 0x124922a38 <col:2> 'float' lvalue Var 0x12500e290 'v' 'float'
    | `-ImplicitCastExpr 0x124922c98 <col:6, col:19> 'float' contains-errors <IntegralToFloating>
    |   `-CallExpr 0x124922bd0 <col:6, col:19> 'int' contains-errors
    |     |-ImplicitCastExpr 0x124922bb8 <col:6> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x124922b38 <col:6> 'int ()' Function 0x124922a80 'MAX3' 'int ()'
    |     |-ImplicitCastExpr 0x124922c20 <col:12> 'double' contains-errors <FloatingCast>
    |     | `-ImplicitCastExpr 0x124922c08 <col:12> 'float' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x124922b58 <col:12> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |     |-ImplicitCastExpr 0x124922c50 <col:15> 'double' contains-errors <FloatingCast>
    |     | `-ImplicitCastExpr 0x124922c38 <col:15> 'float' contains-errors <LValueToRValue>
    |     |   `-DeclRefExpr 0x124922b78 <col:15> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |     `-ImplicitCastExpr 0x124922c80 <col:18> 'double' contains-errors <FloatingCast>
    |       `-ImplicitCastExpr 0x124922c68 <col:18> 'float' contains-errors <LValueToRValue>
    |         `-DeclRefExpr 0x124922b98 <col:18> 'float' contains-errors lvalue Var 0x12500e128 'B' 'float'
    |-BinaryOperator 0x124922d80 <line:11:2, col:10> 'float' '='
    | |-DeclRefExpr 0x124922cd0 <col:2> 'float' lvalue Var 0x12500e310 'b' 'float'
    | `-BinaryOperator 0x124922d60 <col:6, col:10> 'float' '-'
    |   |-ImplicitCastExpr 0x124922d48 <col:6> 'float' <IntegralToFloating>
    |   | `-IntegerLiteral 0x124922cf0 <col:6> 'int' 1
    |   `-ImplicitCastExpr 0x124922d30 <col:10> 'float' <LValueToRValue>
    |     `-DeclRefExpr 0x124922d10 <col:10> 'float' lvalue Var 0x12500e290 'v' 'float'
    |-IfStmt 0x124923018 <line:12:2, line:13:34>
    | |-BinaryOperator 0x124922e10 <line:12:6, col:11> 'int' '=='
    | | |-ImplicitCastExpr 0x124922de0 <col:6> 'float' <LValueToRValue>
    | | | `-DeclRefExpr 0x124922da0 <col:6> 'float' lvalue Var 0x12500e290 'v' 'float'
    | | `-ImplicitCastExpr 0x124922df8 <col:11> 'float' <LValueToRValue>
    | |   `-DeclRefExpr 0x124922dc0 <col:11> 'float' lvalue Var 0x12500e210 'w' 'float'
    | `-CallExpr 0x124922fe0 <line:13:3, col:34> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x124922f10 <col:3> 'int ()' Function 0x124922e58 'RETURN_HWB' 'int ()'
    |   |-RecoveryExpr 0x124922fc0 <col:15> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x124922f48 <col:30> 'float' lvalue Var 0x12500e210 'w' 'float'
    |   `-DeclRefExpr 0x124922f68 <col:33> 'float' lvalue Var 0x12500e310 'b' 'float'
    |-BinaryOperator 0x1249233e8 <line:14:2, col:50> 'float' contains-errors '='
    | |-DeclRefExpr 0x124923038 <col:2> 'float' lvalue Var 0x12500e390 'f' 'float'
    | `-ConditionalOperator 0x1249233b8 <col:6, col:50> 'float' contains-errors
    |   |-ParenExpr 0x1249230e8 <col:6, col:13> 'int' contains-errors
    |   | `-BinaryOperator 0x1249230c8 <col:7, col:12> 'int' contains-errors '=='
    |   |   |-ImplicitCastExpr 0x124923098 <col:7> 'float' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x124923058 <col:7> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |   |   `-ImplicitCastExpr 0x1249230b0 <col:12> 'float' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124923078 <col:12> 'float' lvalue Var 0x12500e210 'w' 'float'
    |   |-BinaryOperator 0x124923178 <col:17, col:21> 'float' contains-errors '-'
    |   | |-ImplicitCastExpr 0x124923148 <col:17> 'float' contains-errors <LValueToRValue>
    |   | | `-DeclRefExpr 0x124923108 <col:17> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |   | `-ImplicitCastExpr 0x124923160 <col:21> 'float' contains-errors <LValueToRValue>
    |   |   `-DeclRefExpr 0x124923128 <col:21> 'float' contains-errors lvalue Var 0x12500e128 'B' 'float'
    |   `-ParenExpr 0x124923398 <col:25, col:50> 'float' contains-errors
    |     `-ConditionalOperator 0x124923368 <col:26, col:49> 'float' contains-errors
    |       |-ParenExpr 0x124923228 <col:26, col:33> 'int' contains-errors
    |       | `-BinaryOperator 0x124923208 <col:27, col:32> 'int' contains-errors '=='
    |       |   |-ImplicitCastExpr 0x1249231d8 <col:27> 'float' contains-errors <LValueToRValue>
    |       |   | `-DeclRefExpr 0x124923198 <col:27> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |       |   `-ImplicitCastExpr 0x1249231f0 <col:32> 'float' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1249231b8 <col:32> 'float' lvalue Var 0x12500e210 'w' 'float'
    |       |-BinaryOperator 0x1249232b8 <col:37, col:41> 'float' contains-errors '-'
    |       | |-ImplicitCastExpr 0x124923288 <col:37> 'float' contains-errors <LValueToRValue>
    |       | | `-DeclRefExpr 0x124923248 <col:37> 'float' contains-errors lvalue Var 0x12500e128 'B' 'float'
    |       | `-ImplicitCastExpr 0x1249232a0 <col:41> 'float' contains-errors <LValueToRValue>
    |       |   `-DeclRefExpr 0x124923268 <col:41> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |       `-BinaryOperator 0x124923348 <col:45, col:49> 'float' contains-errors '-'
    |         |-ImplicitCastExpr 0x124923318 <col:45> 'float' contains-errors <LValueToRValue>
    |         | `-DeclRefExpr 0x1249232d8 <col:45> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |         `-ImplicitCastExpr 0x124923330 <col:49> 'float' contains-errors <LValueToRValue>
    |           `-DeclRefExpr 0x1249232f8 <col:49> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |-BinaryOperator 0x124924a80 <line:15:2, col:38> 'int' contains-errors '='
    | |-DeclRefExpr 0x124923408 <col:2> 'int' lvalue Var 0x124922670 'i' 'int'
    | `-ConditionalOperator 0x124924a50 <col:6, col:38> 'int' contains-errors
    |   |-ParenExpr 0x1249234b8 <col:6, col:13> 'int' contains-errors
    |   | `-BinaryOperator 0x124923498 <col:7, col:12> 'int' contains-errors '=='
    |   |   |-ImplicitCastExpr 0x124923468 <col:7> 'float' contains-errors <LValueToRValue>
    |   |   | `-DeclRefExpr 0x124923428 <col:7> 'float' contains-errors lvalue Var 0x12500df58 'R' 'float'
    |   |   `-ImplicitCastExpr 0x124923480 <col:12> 'float' <LValueToRValue>
    |   |     `-DeclRefExpr 0x124923448 <col:12> 'float' lvalue Var 0x12500e210 'w' 'float'
    |   |-IntegerLiteral 0x1249234d8 <col:17> 'int' 3
    |   `-ParenExpr 0x124924a30 <col:21, col:38> 'int' contains-errors
    |     `-ConditionalOperator 0x124924a00 <col:22, col:37> 'int' contains-errors
    |       |-ParenExpr 0x124923588 <col:22, col:29> 'int' contains-errors
    |       | `-BinaryOperator 0x124923568 <col:23, col:28> 'int' contains-errors '=='
    |       |   |-ImplicitCastExpr 0x124923538 <col:23> 'float' contains-errors <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1249234f8 <col:23> 'float' contains-errors lvalue Var 0x12500e040 'G' 'float'
    |       |   `-ImplicitCastExpr 0x124923550 <col:28> 'float' <LValueToRValue>
    |       |     `-DeclRefExpr 0x124923518 <col:28> 'float' lvalue Var 0x12500e210 'w' 'float'
    |       |-IntegerLiteral 0x1249235a8 <col:33> 'int' 5
    |       `-IntegerLiteral 0x1249235c8 <col:37> 'int' 1
    `-CallExpr 0x124924c90 <line:16:2, col:35> 'int'
      |-ImplicitCastExpr 0x124924c78 <col:2> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x124924aa0 <col:2> 'int ()' Function 0x124922e58 'RETURN_HWB' 'int ()'
      |-ImplicitCastExpr 0x124924cc8 <col:14, col:28> 'double' <FloatingCast>
      | `-BinaryOperator 0x124924c18 <col:14, col:28> 'float' '-'
      |   |-ImplicitCastExpr 0x124924c00 <col:14> 'float' <IntegralToFloating>
      |   | `-ImplicitCastExpr 0x124924be8 <col:14> 'int' <LValueToRValue>
      |   |   `-DeclRefExpr 0x124924ac0 <col:14> 'int' lvalue Var 0x124922670 'i' 'int'
      |   `-BinaryOperator 0x124924bc8 <col:18, col:28> 'float' '/'
      |     |-ImplicitCastExpr 0x124924bb0 <col:18> 'float' <LValueToRValue>
      |     | `-DeclRefExpr 0x124924ae0 <col:18> 'float' lvalue Var 0x12500e390 'f' 'float'
      |     `-ParenExpr 0x124924b90 <col:22, col:28> 'float'
      |       `-BinaryOperator 0x124924b70 <col:23, col:27> 'float' '-'
      |         |-ImplicitCastExpr 0x124924b40 <col:23> 'float' <LValueToRValue>
      |         | `-DeclRefExpr 0x124924b00 <col:23> 'float' lvalue Var 0x12500e290 'v' 'float'
      |         `-ImplicitCastExpr 0x124924b58 <col:27> 'float' <LValueToRValue>
      |           `-DeclRefExpr 0x124924b20 <col:27> 'float' lvalue Var 0x12500e210 'w' 'float'
      |-ImplicitCastExpr 0x124924cf8 <col:31> 'double' <FloatingCast>
      | `-ImplicitCastExpr 0x124924ce0 <col:31> 'float' <LValueToRValue>
      |   `-DeclRefExpr 0x124924c38 <col:31> 'float' lvalue Var 0x12500e210 'w' 'float'
      `-ImplicitCastExpr 0x124924d28 <col:34> 'double' <FloatingCast>
        `-ImplicitCastExpr 0x124924d10 <col:34> 'float' <LValueToRValue>
          `-DeclRefExpr 0x124924c58 <col:34> 'float' lvalue Var 0x12500e310 'b' 'float'
