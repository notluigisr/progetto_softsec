`-FunctionDecl 0x1351284d8  line:1:5 diskutil_dd2 'int (const char *, const char *, const int, const long long, const long long, const long long)'
  |-ParmVarDecl 0x1351280d8 <col:18, col:30> col:30 used in 'const char *'
  |-ParmVarDecl 0x135128158 <col:34, col:46> col:46 used out 'const char *'
  |-ParmVarDecl 0x1351281d8 <col:51, col:61> col:61 used bs 'const int'
  |-ParmVarDecl 0x135128258 <col:65, col:81> col:81 used count 'const long long'
  |-ParmVarDecl 0x1351282d8 <col:88, col:104> col:104 used seek 'const long long'
  |-ParmVarDecl 0x135128358 <col:110, col:126> col:126 used skip 'const long long'
  `-CompoundStmt 0x1351427c0 <line:2:1, line:23:1>
    |-DeclStmt 0x1351286c8 <line:3:5, col:24>
    | `-VarDecl 0x135128610 <col:5, col:20> col:11 used output 'char *' cinit
    |   `-RecoveryExpr 0x1351286a8 <col:20> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x1351423f0 <line:5:5, line:19:5>
    | |-BinaryOperator 0x135128750 <line:5:9, col:15> 'int' '&&'
    | | |-ImplicitCastExpr 0x135128720 <col:9> 'const char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1351286e0 <col:9> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    | | `-ImplicitCastExpr 0x135128738 <col:15> 'const char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x135128700 <col:15> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    | `-CompoundStmt 0x1351423b8 <col:20, line:19:5>
    |   |-CallExpr 0x1351419a8 <line:6:9, col:26> 'int'
    |   | |-ImplicitCastExpr 0x135141990 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1351418b8 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x1351419d8 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141920 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x1351419f0 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141940 <col:24> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    |   |-CallExpr 0x135141a80 <line:7:9, col:27> 'int'
    |   | |-ImplicitCastExpr 0x135141a68 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141a08 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x135141ab0 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141a28 <col:17> 'char[4]' lvalue "STR"
    |   | `-ImplicitCastExpr 0x135141ac8 <col:24> 'const char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141a48 <col:24> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    |   |-CallExpr 0x135141bb8 <line:8:9, col:45> 'int'
    |   | |-ImplicitCastExpr 0x135141ba0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x135141ae0 <col:9> 'int ()' Function 0x135141800 'LOGINFO' 'int ()'
    |   | |-ImplicitCastExpr 0x135141c00 <col:17> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x135141b00 <col:17> 'char[4]' lvalue "STR"
    |   | |-ImplicitCastExpr 0x135141c18 <col:24> 'long long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b20 <col:24> 'const long long' lvalue ParmVar 0x135128258 'count' 'const long long'
    |   | |-ImplicitCastExpr 0x135141c30 <col:31> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b40 <col:31> 'const int' lvalue ParmVar 0x1351281d8 'bs' 'const int'
    |   | |-ImplicitCastExpr 0x135141c48 <col:35> 'long long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x135141b60 <col:35> 'const long long' lvalue ParmVar 0x1351282d8 'seek' 'const long long'
    |   | `-ImplicitCastExpr 0x135141c60 <col:41> 'long long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x135141b80 <col:41> 'const long long' lvalue ParmVar 0x135128358 'skip' 'const long long'
    |   |-IfStmt 0x135142208 <line:11:9, line:15:9>
    |   | |-UnaryOperator 0x135141f28 <line:11:13, col:14> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x135141f10 <col:14> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x135141ef0 <col:14> 'char *' contains-errors lvalue Var 0x135128610 'output' 'char *'
    |   | `-CompoundStmt 0x1351421e8 <col:22, line:15:9>
    |   |   |-CallExpr 0x135142098 <line:12:13, col:31> 'int'
    |   |   | |-ImplicitCastExpr 0x135142080 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | `-DeclRefExpr 0x135142020 <col:13> 'int ()' Function 0x135141f68 'LOGERROR' 'int ()'
    |   |   | |-ImplicitCastExpr 0x1351420c8 <col:22> 'char *' <ArrayToPointerDecay>
    |   |   | | `-StringLiteral 0x135142040 <col:22> 'char[4]' lvalue "STR"
    |   |   | `-ImplicitCastExpr 0x1351420e0 <col:29> 'const char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x135142060 <col:29> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
    |   |   `-CallExpr 0x135142170 <line:13:13, col:32> 'int'
    |   |     |-ImplicitCastExpr 0x135142158 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1351420f8 <col:13> 'int ()' Function 0x135141f68 'LOGERROR' 'int ()'
    |   |     |-ImplicitCastExpr 0x1351421a0 <col:22> 'char *' <ArrayToPointerDecay>
    |   |     | `-StringLiteral 0x135142118 <col:22> 'char[4]' lvalue "STR"
    |   |     `-ImplicitCastExpr 0x1351421b8 <col:29> 'const char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x135142138 <col:29> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
    |   `-CallExpr 0x135142360 <line:17:9, col:25> 'int' contains-errors
    |     |-ImplicitCastExpr 0x135142348 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x135142308 <col:9> 'int ()' Function 0x135142250 'EUCA_FREE' 'int ()'
    |     `-ImplicitCastExpr 0x135142388 <col:19> 'char *' contains-errors <LValueToRValue>
    |       `-DeclRefExpr 0x135142328 <col:19> 'char *' contains-errors lvalue Var 0x135128610 'output' 'char *'
    `-CallExpr 0x135142758 <line:21:5, col:35> 'int'
      |-ImplicitCastExpr 0x135142740 <col:5> 'int (*)()' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x1351424f0 <col:5> 'int ()' Function 0x135142438 'LOGWARN' 'int ()'
      |-ImplicitCastExpr 0x135142790 <col:13> 'char *' <ArrayToPointerDecay>
      | `-StringLiteral 0x135142510 <col:13> 'char[4]' lvalue "STR"
      |-CallExpr 0x135142668 <col:20, col:25> 'int'
      | |-ImplicitCastExpr 0x135142650 <col:20> 'int (*)()' <FunctionToPointerDecay>
      | | `-DeclRefExpr 0x135142610 <col:20> 'int ()' Function 0x135142558 'SP' 'int ()'
      | `-ImplicitCastExpr 0x135142690 <col:23> 'const char *' <LValueToRValue>
      |   `-DeclRefExpr 0x135142630 <col:23> 'const char *' lvalue ParmVar 0x1351280d8 'in' 'const char *'
      `-CallExpr 0x135142700 <col:28, col:34> 'int'
        |-ImplicitCastExpr 0x1351426e8 <col:28> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x1351426a8 <col:28> 'int ()' Function 0x135142558 'SP' 'int ()'
        `-ImplicitCastExpr 0x135142728 <col:31> 'const char *' <LValueToRValue>
          `-DeclRefExpr 0x1351426c8 <col:31> 'const char *' lvalue ParmVar 0x135128158 'out' 'const char *'
