`-FunctionDecl 0x12a881480  line:1:13 invalid do_free_upto 'void (int *, int *)' static
  |-ParmVarDecl 0x12a881328 <col:26, col:31> col:31 referenced invalid f 'int *'
  |-ParmVarDecl 0x12a8813a8 <col:34, col:39> col:39 invalid upto 'int *'
  `-CompoundStmt 0x12a89ab78 <line:2:1, line:13:1>
    `-IfStmt 0x12a89ab48 <line:3:5, line:12:23> has_else
      |-RecoveryExpr 0x12a881538 <line:3:9> '<dependent type>' contains-errors lvalue
      |-CompoundStmt 0x12a8819e0 <col:15, line:11:5>
      | `-DoStmt 0x12a8819c0 <line:5:9, line:10:25>
      |   |-CompoundStmt 0x12a881940 <line:5:12, line:9:9>
      |   | |-CallExpr 0x12a881858 <line:7:13, col:23> '<dependent type>' contains-errors
      |   | | |-DeclRefExpr 0x12a881818 <col:13> 'int ()' Function 0x12a881760 'BIO_free' 'int ()'
      |   | | `-RecoveryExpr 0x12a881838 <col:22> '<dependent type>' contains-errors lvalue
      |   | `-BinaryOperator 0x12a881920 <line:8:13, col:17> '<dependent type>' contains-errors '='
      |   |   |-RecoveryExpr 0x12a8818a0 <col:13> '<dependent type>' contains-errors lvalue
      |   |   | `-DeclRefExpr 0x12a881880 <col:13> 'int *' lvalue ParmVar 0x12a881328 'f' 'int *'
      |   |   `-RecoveryExpr 0x12a881900 <col:17> '<dependent type>' contains-errors lvalue
      |   `-BinaryOperator 0x12a8819a0 <line:10:16, col:21> 'int' contains-errors '!='
      |     |-RecoveryExpr 0x12a881960 <col:16> '<dependent type>' contains-errors lvalue
      |     `-RecoveryExpr 0x12a881980 <col:21> '<dependent type>' contains-errors lvalue
      `-CallExpr 0x12a89ab20 <line:12:9, col:23> '<dependent type>' contains-errors
        |-DeclRefExpr 0x12a89aae0 <col:9> 'int ()' Function 0x12a89aa28 'BIO_free_all' 'int ()'
        `-RecoveryExpr 0x12a89ab00 <col:22> '<dependent type>' contains-errors lvalue
