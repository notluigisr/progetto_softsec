`-FunctionDecl 0x15a80df18  line:1:12 invalid jas_iccgetuint 'int (int *, int, int *)' static
  |-ParmVarDecl 0x15a80dd28 <col:27, col:41> col:41 invalid in 'int *'
  |-ParmVarDecl 0x15a80dda8 <col:45, col:49> col:49 used n 'int'
  |-ParmVarDecl 0x15a80de28 <col:52, col:63> col:63 invalid val 'int *'
  `-CompoundStmt 0x15a827d88 <line:2:1, line:14:1>
    |-DeclStmt 0x15a80e058 <line:3:2, col:7>
    | `-VarDecl 0x15a80dff0 <col:2, col:6> col:6 used i 'int'
    |-DeclStmt 0x15a80e0f0 <line:4:2, col:7>
    | `-VarDecl 0x15a80e088 <col:2, col:6> col:6 used c 'int'
    |-ForStmt 0x15a827bf8 <line:7:2, line:11:2>
    | |-BinaryOperator 0x15a80e180 <line:7:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x15a80e128 <col:7> 'int' lvalue Var 0x15a80dff0 'i' 'int'
    | | `-ImplicitCastExpr 0x15a80e168 <col:11> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x15a80e148 <col:11> 'int' lvalue ParmVar 0x15a80dda8 'n' 'int'
    | |-<<<NULL>>>
    | |-BinaryOperator 0x15a80e1f8 <col:14, col:18> 'int' '>'
    | | |-ImplicitCastExpr 0x15a80e1e0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x15a80e1a0 <col:14> 'int' lvalue Var 0x15a80dff0 'i' 'int'
    | | `-IntegerLiteral 0x15a80e1c0 <col:18> 'int' 0
    | |-UnaryOperator 0x15a80e238 <col:21, col:23> 'int' prefix '--'
    | | `-DeclRefExpr 0x15a80e218 <col:23> 'int' lvalue Var 0x15a80dff0 'i' 'int'
    | `-CompoundStmt 0x15a827be0 <col:26, line:11:2>
    |   `-IfStmt 0x15a827b48 <line:8:3, line:9:12>
    |     |-BinaryOperator 0x15a827ae0 <line:8:7, col:36> 'int' contains-errors '=='
    |     | |-ParenExpr 0x15a827a68 <col:7, col:31> 'int' contains-errors
    |     | | `-BinaryOperator 0x15a827a48 <col:8, col:30> 'int' contains-errors '='
    |     | |   |-DeclRefExpr 0x15a80e250 <col:8> 'int' lvalue Var 0x15a80e088 'c' 'int'
    |     | |   `-CallExpr 0x15a827a20 <col:12, col:30> '<dependent type>' contains-errors
    |     | |     |-DeclRefExpr 0x15a80e3d0 <col:12> 'int ()' Function 0x15a80e318 'jas_stream_getc' 'int ()'
    |     | |     `-RecoveryExpr 0x15a827a00 <col:28> '<dependent type>' contains-errors lvalue
    |     | `-RecoveryExpr 0x15a827ac0 <col:36> '<dependent type>' contains-errors lvalue
    |     `-ReturnStmt 0x15a827b38 <line:9:4, col:12>
    |       `-UnaryOperator 0x15a827b20 <col:11, col:12> 'int' prefix '-'
    |         `-IntegerLiteral 0x15a827b00 <col:12> 'int' 1
    |-BinaryOperator 0x15a827d38 <line:12:2, col:9> '<dependent type>' contains-errors '='
    | |-UnaryOperator 0x15a827d00 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x15a827ce8 <col:3> '<dependent type>' contains-errors <LValueToRValue>
    | |   `-RecoveryExpr 0x15a827c30 <col:3> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x15a827d18 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x15a827d78 <line:13:2, col:9>
      `-IntegerLiteral 0x15a827d58 <col:9> 'int' 0
