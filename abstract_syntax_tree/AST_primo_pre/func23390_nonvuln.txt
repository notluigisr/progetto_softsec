`-FunctionDecl 0x13b9282e8  line:1:1 invalid register_cfunc 'int (int, int, void *)'
  |-ParmVarDecl 0x13b9280f0 <col:16, col:24> col:24 invalid cb 'int'
  |-ParmVarDecl 0x13b928170 <col:28, col:41> col:41 invalid cb_free 'int'
  |-ParmVarDecl 0x13b9281f0 <col:50, col:56> col:56 used state 'void *'
  `-CompoundStmt 0x13b942450 <line:2:1, line:24:1>
    |-DeclStmt 0x13b941a70 <line:3:5, col:37>
    | `-VarDecl 0x13b9283c0 <col:5, col:36> col:13 used name 'char *' cinit
    |   `-ImplicitCastExpr 0x13b928608 <col:20, col:36> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x13b9285e8 <col:20, col:36> 'int'
    |       `-ImplicitCastExpr 0x13b9285d0 <col:20> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x13b928580 <col:20> 'int ()' Function 0x13b9284c8 'get_lambda_name' 'int ()'
    |-IfStmt 0x13b941ff8 <line:7:5, line:8:9>
    | |-BinaryOperator 0x13b941f90 <line:7:9, col:15> 'int' contains-errors '=='
    | | |-RecoveryExpr 0x13b941f50 <col:9> '<dependent type>' contains-errors lvalue
    | | `-RecoveryExpr 0x13b941f70 <col:15> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x13b941fe8 <line:8:2, col:9>
    |   `-RecoveryExpr 0x13b941fc8 <col:9> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x13b942440 <line:23:5, col:12>
      `-ImplicitCastExpr 0x13b942428 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x13b942410 <col:12> 'char *' <LValueToRValue>
          `-DeclRefExpr 0x13b9423f0 <col:12> 'char *' lvalue Var 0x13b9283c0 'name' 'char *'
