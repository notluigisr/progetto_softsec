`-FunctionDecl 0x127868688  line:1:1 vim_stat 'int (const char *, int *)'
  |-ParmVarDecl 0x1278684d8 <col:10, col:22> col:22 used name 'const char *'
  |-ParmVarDecl 0x1278685a8 <col:28, col:36> col:36 used stp 'int *'
  `-CompoundStmt 0x127868b98 <line:2:1, line:6:1>
    `-ReturnStmt 0x127868b88 <line:5:5, col:53>
      `-ConditionalOperator 0x127868b58 <col:12, col:53> 'int'
        |-CallExpr 0x127868928 <col:12, col:30> 'int'
        | |-ImplicitCastExpr 0x127868910 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1278688a0 <col:12> 'int ()' Function 0x1278687e8 'illegal_slash' 'int ()'
        | `-ImplicitCastExpr 0x127868950 <col:26> 'const char *' <LValueToRValue>
        |   `-DeclRefExpr 0x1278688c0 <col:26> 'const char *' lvalue ParmVar 0x1278684d8 'name' 'const char *'
        |-UnaryOperator 0x127868988 <col:34, col:35> 'int' prefix '-'
        | `-IntegerLiteral 0x127868968 <col:35> 'int' 1
        `-CallExpr 0x127868af8 <col:39, col:53> 'int'
          |-ImplicitCastExpr 0x127868ae0 <col:39> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x127868a80 <col:39> 'int ()' Function 0x1278689c8 'stat' 'int ()'
          |-ImplicitCastExpr 0x127868b28 <col:44> 'const char *' <LValueToRValue>
          | `-DeclRefExpr 0x127868aa0 <col:44> 'const char *' lvalue ParmVar 0x1278684d8 'name' 'const char *'
          `-ImplicitCastExpr 0x127868b40 <col:50> 'int *' <LValueToRValue>
            `-DeclRefExpr 0x127868ac0 <col:50> 'int *' lvalue ParmVar 0x1278685a8 'stp' 'int *'
