`-FunctionDecl 0x142144d68  line:1:19 jffs2_get_acl 'struct posix_acl *(struct inode *, int)'
  |-ParmVarDecl 0x1421286e8 <col:33, col:47> col:47 used inode 'struct inode *'
  |-ParmVarDecl 0x142128768 <col:54, col:58> col:58 used type 'int'
  `-CompoundStmt 0x142147bf8 <line:2:1, line:33:1>
    |-DeclStmt 0x142144f60 <line:3:2, col:23>
    | `-VarDecl 0x142144ef8 <col:2, col:20> col:20 used acl 'struct posix_acl *'
    |-DeclStmt 0x142145048 <line:4:2, col:20>
    | `-VarDecl 0x142144f90 <col:2, col:16> col:8 used value 'char *' cinit
    |   `-RecoveryExpr 0x142145028 <col:16> '<dependent type>' contains-errors lvalue
    |-DeclStmt 0x142145178 <line:5:2, col:17>
    | |-VarDecl 0x142145078 <col:2, col:6> col:6 used rc 'int'
    | `-VarDecl 0x1421450f8 <col:2, col:10> col:10 used xprefix 'int'
    |-SwitchStmt 0x1421451c8 <line:7:2, line:16:2>
    | |-ImplicitCastExpr 0x1421451b0 <line:7:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x142145190 <col:10> 'int' lvalue ParmVar 0x142128768 'type' 'int'
    | `-CompoundStmt 0x142145518 <col:16, line:16:2>
    |   |-BinaryOperator 0x142145280 <line:9:3, col:13> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x142145208 <col:3> 'int' lvalue Var 0x1421450f8 'xprefix' 'int'
    |   | `-RecoveryExpr 0x142145260 <col:13> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x1421452a0 <line:10:3>
    |   |-BinaryOperator 0x142145338 <line:12:3, col:13> 'int' contains-errors '='
    |   | |-DeclRefExpr 0x1421452c0 <col:3> 'int' lvalue Var 0x1421450f8 'xprefix' 'int'
    |   | `-RecoveryExpr 0x142145318 <col:13> '<dependent type>' contains-errors lvalue
    |   |-BreakStmt 0x142145358 <line:13:3>
    |   `-DefaultStmt 0x1421454f8 <line:14:2, line:15:7>
    |     `-CallExpr 0x1421454d8 <col:3, col:7> 'int'
    |       `-ImplicitCastExpr 0x1421454c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x142145470 <col:3> 'int ()' Function 0x1421453b8 'BUG' 'int ()'
    |-BinaryOperator 0x142145810 <line:17:2, col:52> 'int' contains-errors '='
    | |-DeclRefExpr 0x142145550 <col:2> 'int' lvalue Var 0x142145078 'rc' 'int'
    | `-CallExpr 0x1421457c8 <col:7, col:52> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x142145650 <col:7> 'int ()' Function 0x142145598 'do_jffs2_getxattr' 'int ()'
    |   |-DeclRefExpr 0x142145670 <col:25> 'struct inode *' lvalue ParmVar 0x1421286e8 'inode' 'struct inode *'
    |   |-DeclRefExpr 0x142145690 <col:32> 'int' lvalue Var 0x1421450f8 'xprefix' 'int'
    |   |-StringLiteral 0x1421456f0 <col:41> 'char[1]' lvalue ""
    |   |-RecoveryExpr 0x1421457a8 <col:45> '<dependent type>' contains-errors lvalue
    |   `-IntegerLiteral 0x142145720 <col:51> 'int' 0
    |-IfStmt 0x142147330 <line:18:2, line:23:2>
    | |-BinaryOperator 0x142145888 <line:18:6, col:11> 'int' '>'
    | | |-ImplicitCastExpr 0x142145870 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x142145830 <col:6> 'int' lvalue Var 0x142145078 'rc' 'int'
    | | `-IntegerLiteral 0x142145850 <col:11> 'int' 0
    | `-CompoundStmt 0x142147308 <col:14, line:23:2>
    |   |-BinaryOperator 0x142145aa0 <line:19:3, col:33> 'char *' contains-errors '='
    |   | |-DeclRefExpr 0x1421458a8 <col:3> 'char *' contains-errors lvalue Var 0x142144f90 'value' 'char *'
    |   | `-CallExpr 0x142145a70 <col:11, col:33> '<dependent type>' contains-errors
    |   |   |-DeclRefExpr 0x1421459a8 <col:11> 'int ()' Function 0x1421458f0 'kmalloc' 'int ()'
    |   |   |-DeclRefExpr 0x1421459c8 <col:19> 'int' lvalue Var 0x142145078 'rc' 'int'
    |   |   `-RecoveryExpr 0x142145a50 <col:23> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x142147118 <line:20:3, line:21:26>
    |   | |-UnaryOperator 0x142145af8 <line:20:7, col:8> 'int' contains-errors prefix '!' cannot overflow
    |   | | `-ImplicitCastExpr 0x142145ae0 <col:8> 'char *' contains-errors <LValueToRValue>
    |   | |   `-DeclRefExpr 0x142145ac0 <col:8> 'char *' contains-errors lvalue Var 0x142144f90 'value' 'char *'
    |   | `-ReturnStmt 0x142147108 <line:21:4, col:26>
    |   |   `-CallExpr 0x1421470e0 <col:11, col:26> '<dependent type>' contains-errors
    |   |     |-DeclRefExpr 0x142147000 <col:11> 'int ()' Function 0x142145b38 'ERR_PTR' 'int ()'
    |   |     `-UnaryOperator 0x1421470c8 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |       `-ImplicitCastExpr 0x1421470b0 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   |         `-RecoveryExpr 0x142147090 <col:20> '<dependent type>' contains-errors lvalue
    |   `-BinaryOperator 0x1421472e8 <line:22:3, col:55> 'int' contains-errors '='
    |     |-DeclRefExpr 0x142147138 <col:3> 'int' lvalue Var 0x142145078 'rc' 'int'
    |     `-CallExpr 0x142147228 <col:8, col:55> 'int' contains-errors
    |       |-ImplicitCastExpr 0x142147210 <col:8> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x142147158 <col:8> 'int ()' Function 0x142145598 'do_jffs2_getxattr' 'int ()'
    |       |-ImplicitCastExpr 0x142147270 <col:26> 'struct inode *' <LValueToRValue>
    |       | `-DeclRefExpr 0x142147178 <col:26> 'struct inode *' lvalue ParmVar 0x1421286e8 'inode' 'struct inode *'
    |       |-ImplicitCastExpr 0x142147288 <col:33> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x142147198 <col:33> 'int' lvalue Var 0x1421450f8 'xprefix' 'int'
    |       |-ImplicitCastExpr 0x1421472a0 <col:42> 'char *' <ArrayToPointerDecay>
    |       | `-StringLiteral 0x1421471b8 <col:42> 'char[1]' lvalue ""
    |       |-ImplicitCastExpr 0x1421472b8 <col:46> 'char *' contains-errors <LValueToRValue>
    |       | `-DeclRefExpr 0x1421471d0 <col:46> 'char *' contains-errors lvalue Var 0x142144f90 'value' 'char *'
    |       `-ImplicitCastExpr 0x1421472d0 <col:53> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x1421471f0 <col:53> 'int' lvalue Var 0x142145078 'rc' 'int'
    |-IfStmt 0x142147a08 <line:24:2, line:30:2> has_else
    | |-BinaryOperator 0x1421473a8 <line:24:6, col:11> 'int' '>'
    | | |-ImplicitCastExpr 0x142147390 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x142147350 <col:6> 'int' lvalue Var 0x142145078 'rc' 'int'
    | | `-IntegerLiteral 0x142147370 <col:11> 'int' 0
    | |-CompoundStmt 0x1421475d8 <col:14, line:26:2>
    | | `-BinaryOperator 0x1421475b8 <line:25:3, col:40> 'struct posix_acl *' contains-errors '='
    | |   |-DeclRefExpr 0x1421473c8 <col:3> 'struct posix_acl *' lvalue Var 0x142144ef8 'acl' 'struct posix_acl *'
    | |   `-ImplicitCastExpr 0x1421475a0 <col:9, col:40> 'struct posix_acl *' contains-errors <IntegralToPointer>
    | |     `-CallExpr 0x142147540 <col:9, col:40> 'int' contains-errors
    | |       |-ImplicitCastExpr 0x142147528 <col:9> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x1421474c8 <col:9> 'int ()' Function 0x142147410 'jffs2_acl_from_medium' 'int ()'
    | |       |-ImplicitCastExpr 0x142147570 <col:31> 'char *' contains-errors <LValueToRValue>
    | |       | `-DeclRefExpr 0x1421474e8 <col:31> 'char *' contains-errors lvalue Var 0x142144f90 'value' 'char *'
    | |       `-ImplicitCastExpr 0x142147588 <col:38> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x142147508 <col:38> 'int' lvalue Var 0x142145078 'rc' 'int'
    | `-IfStmt 0x1421479d8 <line:26:9, line:30:2> has_else
    |   |-BinaryOperator 0x142147800 <line:26:13, col:38> 'int' contains-errors '||'
    |   | |-BinaryOperator 0x142147770 <col:13, col:20> 'int' contains-errors '=='
    |   | | |-DeclRefExpr 0x1421475f0 <col:13> 'int' lvalue Var 0x142145078 'rc' 'int'
    |   | | `-UnaryOperator 0x142147758 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   | |   `-ImplicitCastExpr 0x142147740 <col:20> '<dependent type>' contains-errors <LValueToRValue>
    |   | |     `-RecoveryExpr 0x142147720 <col:20> '<dependent type>' contains-errors lvalue
    |   | `-BinaryOperator 0x1421477e0 <col:31, col:38> 'int' contains-errors '=='
    |   |   |-DeclRefExpr 0x142147678 <col:31> 'int' lvalue Var 0x142145078 'rc' 'int'
    |   |   `-UnaryOperator 0x1421477c8 <col:37, col:38> '<dependent type>' contains-errors prefix '-' cannot overflow
    |   |     `-ImplicitCastExpr 0x1421477b0 <col:38> '<dependent type>' contains-errors <LValueToRValue>
    |   |       `-RecoveryExpr 0x142147790 <col:38> '<dependent type>' contains-errors lvalue
    |   |-CompoundStmt 0x1421478b8 <col:46, line:28:2>
    |   | `-BinaryOperator 0x142147898 <line:27:3, col:9> 'struct posix_acl *' contains-errors '='
    |   |   |-DeclRefExpr 0x142147820 <col:3> 'struct posix_acl *' lvalue Var 0x142144ef8 'acl' 'struct posix_acl *'
    |   |   `-RecoveryExpr 0x142147878 <col:9> '<dependent type>' contains-errors lvalue
    |   `-CompoundStmt 0x1421479c0 <line:28:9, line:30:2>
    |     `-BinaryOperator 0x1421479a0 <line:29:3, col:19> 'struct posix_acl *' '='
    |       |-DeclRefExpr 0x1421478d0 <col:3> 'struct posix_acl *' lvalue Var 0x142144ef8 'acl' 'struct posix_acl *'
    |       `-ImplicitCastExpr 0x142147988 <col:9, col:19> 'struct posix_acl *' <IntegralToPointer>
    |         `-CallExpr 0x142147948 <col:9, col:19> 'int'
    |           |-ImplicitCastExpr 0x142147930 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x1421478f0 <col:9> 'int ()' Function 0x142145b38 'ERR_PTR' 'int ()'
    |           `-ImplicitCastExpr 0x142147970 <col:17> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x142147910 <col:17> 'int' lvalue Var 0x142145078 'rc' 'int'
    |-CallExpr 0x142147b70 <line:31:2, col:13> 'int' contains-errors
    | |-ImplicitCastExpr 0x142147b58 <col:2> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x142147b18 <col:2> 'int ()' Function 0x142147a60 'kfree' 'int ()'
    | `-ImplicitCastExpr 0x142147b98 <col:8> 'char *' contains-errors <LValueToRValue>
    |   `-DeclRefExpr 0x142147b38 <col:8> 'char *' contains-errors lvalue Var 0x142144f90 'value' 'char *'
    `-ReturnStmt 0x142147be8 <line:32:2, col:9>
      `-ImplicitCastExpr 0x142147bd0 <col:9> 'struct posix_acl *' <LValueToRValue>
        `-DeclRefExpr 0x142147bb0 <col:9> 'struct posix_acl *' lvalue Var 0x142144ef8 'acl' 'struct posix_acl *'
