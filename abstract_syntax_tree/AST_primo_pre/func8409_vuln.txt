`-FunctionDecl 0x14b00ddf8  line:1:1 referenced invalid zsetstrokecolor 'int (int *)'
  |-ParmVarDecl 0x14b00dd28 <col:17, col:27> col:27 invalid i_ctx_p 'int *'
  `-CompoundStmt 0x14b028288 <line:2:1, line:21:1>
    |-DeclStmt 0x14b00df28 <line:3:5, col:13>
    | `-VarDecl 0x14b00dec0 <col:5, col:9> col:9 used code 'int'
    |-BinaryOperator 0x14b00e128 <line:5:5, col:31> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b00df40 <col:5> 'int' lvalue Var 0x14b00dec0 'code' 'int'
    | `-CallExpr 0x14b00e100 <col:12, col:31> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b00e0c0 <col:12> 'int ()' Function 0x14b00e008 'zswapcolors' 'int ()'
    |   `-RecoveryExpr 0x14b00e0e0 <col:24> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b00e208 <line:6:5, line:7:16>
    | |-BinaryOperator 0x14b00e1a0 <line:6:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x14b00e188 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b00e148 <col:9> 'int' lvalue Var 0x14b00dec0 'code' 'int'
    | | `-IntegerLiteral 0x14b00e168 <col:16> 'int' 0
    | `-ReturnStmt 0x14b00e1f8 <line:7:9, col:16>
    |   `-ImplicitCastExpr 0x14b00e1e0 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x14b00e1c0 <col:16> 'int' lvalue Var 0x14b00dec0 'code' 'int'
    |-CallExpr 0x14b00e398 <line:11:5, col:19> 'int'
    | |-ImplicitCastExpr 0x14b00e380 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x14b00e308 <col:5> 'int ()' Function 0x14b00e250 'check_estack' 'int ()'
    | `-IntegerLiteral 0x14b00e328 <col:18> 'int' 1
    |-CallExpr 0x14b027b58 <line:13:5, col:39> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x14b027ab8 <col:5> 'int ()' Function 0x14b027a00 'push_op_estack' 'int ()'
    | `-RecoveryExpr 0x14b027b38 <col:20> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x14b027ce8 <line:15:5, col:29> 'int' contains-errors '='
    | |-DeclRefExpr 0x14b027b80 <col:5> 'int' lvalue Var 0x14b00dec0 'code' 'int'
    | `-CallExpr 0x14b027cc0 <col:12, col:29> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x14b027c80 <col:12> 'int ()' Function 0x14b027bc8 'zsetcolor' 'int ()'
    |   `-RecoveryExpr 0x14b027ca0 <col:22> '<dependent type>' contains-errors lvalue
    |-IfStmt 0x14b028220 <line:17:5, line:18:16>
    | |-BinaryOperator 0x14b027d60 <line:17:9, col:17> 'int' '>='
    | | |-ImplicitCastExpr 0x14b027d48 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x14b027d08 <col:9> 'int' lvalue Var 0x14b00dec0 'code' 'int'
    | | `-IntegerLiteral 0x14b027d28 <col:17> 'int' 0
    | `-ReturnStmt 0x14b028210 <line:18:9, col:16>
    |   `-ImplicitCastExpr 0x14b027dd0 <col:16> 'int' <PointerToIntegral>
    |     `-ImplicitCastExpr 0x14b027db8 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x14b027d98 <col:16> 'int ()' Function 0x14b027a00 'push_op_estack' 'int ()'
    `-ReturnStmt 0x14b028278 <line:20:5, col:12>
      `-ImplicitCastExpr 0x14b028260 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x14b028240 <col:12> 'int' lvalue Var 0x14b00dec0 'code' 'int'
