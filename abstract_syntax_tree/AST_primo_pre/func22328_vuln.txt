`-FunctionDecl 0x148940b48  line:1:1 validate_event 'int (struct pmu_hw_events *, struct perf_event *)'
  |-ParmVarDecl 0x148928648 <col:16, col:38> col:38 used hw_events 'struct pmu_hw_events *'
  |-ParmVarDecl 0x148940a28 <line:2:9, col:28> col:28 used event 'struct perf_event *'
  `-CompoundStmt 0x148941cb0 <line:3:1, line:18:1>
    |-DeclStmt 0x148941010 <line:4:2, col:49>
    | |-RecordDecl 0x148940c48 <col:2, col:9> col:9 struct arm_pmu
    | `-VarDecl 0x148940db8 <col:2, col:48> col:18 used armpmu 'struct arm_pmu *' cinit
    |   `-CallExpr 0x148940fd0 <col:27, col:48> '<dependent type>' contains-errors
    |     |-DeclRefExpr 0x148940f50 <col:27> 'int ()' Function 0x148940e98 'to_arm_pmu' 'int ()'
    |     `-RecoveryExpr 0x148940fa8 <col:38, col:45> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x148940f70 <col:38> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    |-DeclStmt 0x148941208 <line:5:2, col:45>
    | |-RecordDecl 0x148941028 <col:2, col:9> col:9 struct hw_perf_event
    | `-VarDecl 0x148941128 <col:2, col:23> col:23 invalid fake_event 'struct hw_perf_event'
    |-DeclStmt 0x1489414b0 <line:6:2, col:51>
    | |-RecordDecl 0x148941220 <col:2, col:9> col:9 struct pmu
    | `-VarDecl 0x148941388 <col:2, col:48> col:14 used leader_pmu 'struct pmu *' cinit
    |   `-CXXDependentScopeMemberExpr 0x148941450 <col:27, col:48> '<dependent type>' contains-errors lvalue ->pmu
    |     `-RecoveryExpr 0x148941428 <col:27, col:34> '<dependent type>' contains-errors lvalue
    |       `-DeclRefExpr 0x1489413f0 <col:27> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    |-IfStmt 0x1489416a8 <line:8:2, line:9:10>
    | |-CallExpr 0x148941638 <line:8:6, col:29> 'int'
    | | |-ImplicitCastExpr 0x148941620 <col:6> 'int (*)()' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x1489415a8 <col:6> 'int ()' Function 0x1489414f0 'is_software_event' 'int ()'
    | | `-ImplicitCastExpr 0x148941660 <col:24> 'struct perf_event *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1489415c8 <col:24> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    | `-ReturnStmt 0x148941698 <line:9:3, col:10>
    |   `-IntegerLiteral 0x148941678 <col:10> 'int' 1
    |-IfStmt 0x1489418b0 <line:11:2, line:12:10>
    | |-BinaryOperator 0x148941860 <line:11:6, col:49> 'int' contains-errors '||'
    | | |-BinaryOperator 0x148941748 <col:6, col:20> 'int' contains-errors '!='
    | | | |-RecoveryExpr 0x148941700 <col:6, col:13> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1489416c8 <col:6> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    | | | `-DeclRefExpr 0x148941728 <col:20> 'struct pmu *' contains-errors lvalue Var 0x148941388 'leader_pmu' 'struct pmu *'
    | | `-BinaryOperator 0x148941840 <col:34, col:49> 'int' contains-errors '<'
    | |   |-RecoveryExpr 0x1489417a0 <col:34, col:41> '<dependent type>' contains-errors lvalue
    | |   | `-DeclRefExpr 0x148941768 <col:34> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    | |   `-RecoveryExpr 0x148941820 <col:49> '<dependent type>' contains-errors lvalue
    | `-ReturnStmt 0x1489418a0 <line:12:3, col:10>
    |   `-IntegerLiteral 0x148941880 <col:10> 'int' 1
    |-IfStmt 0x148941b58 <line:14:2, line:15:10>
    | |-BinaryOperator 0x148941b08 <line:14:6, col:59> 'int' contains-errors '&&'
    | | |-BinaryOperator 0x148941ab8 <col:6, col:22> 'int' contains-errors '=='
    | | | |-RecoveryExpr 0x148941908 <col:6, col:13> '<dependent type>' contains-errors lvalue
    | | | | `-DeclRefExpr 0x1489418d0 <col:6> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    | | | `-RecoveryExpr 0x148941a98 <col:22> '<dependent type>' contains-errors lvalue
    | | `-UnaryOperator 0x148941af0 <col:46, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x148941ad8 <col:47, col:59> '<dependent type>' contains-errors <LValueToRValue>
    | |     `-CXXDependentScopeMemberExpr 0x148941a00 <col:47, col:59> '<dependent type>' contains-errors lvalue .enable_on_exec
    | |       `-RecoveryExpr 0x1489419a0 <col:47, col:54> '<dependent type>' contains-errors lvalue
    | |         `-DeclRefExpr 0x148941968 <col:47> 'struct perf_event *' lvalue ParmVar 0x148940a28 'event' 'struct perf_event *'
    | `-ReturnStmt 0x148941b48 <line:15:3, col:10>
    |   `-IntegerLiteral 0x148941b28 <col:10> 'int' 1
    `-ReturnStmt 0x148941ca0 <line:17:2, col:58>
      `-BinaryOperator 0x148941c80 <col:9, col:58> 'int' contains-errors '>='
        |-CallExpr 0x148941c30 <col:9, col:53> '<dependent type>' contains-errors
        | |-RecoveryExpr 0x148941bb0 <col:9, col:17> '<dependent type>' contains-errors lvalue
        | | `-DeclRefExpr 0x148941b78 <col:9> 'struct arm_pmu *' contains-errors lvalue Var 0x148940db8 'armpmu' 'struct arm_pmu *'
        | |-DeclRefExpr 0x148941bd8 <col:31> 'struct pmu_hw_events *' lvalue ParmVar 0x148928648 'hw_events' 'struct pmu_hw_events *'
        | `-UnaryOperator 0x148941c18 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow
        |   `-RecoveryExpr 0x148941bf8 <col:43> '<dependent type>' contains-errors lvalue
        `-IntegerLiteral 0x148941c60 <col:58> 'int' 0
