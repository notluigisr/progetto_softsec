`-FunctionDecl 0x13b128438  line:1:1 invalid dissect_kafka_alter_replica_log_dirs_request 'int (int *, int *, int *, int, int)'
  |-ParmVarDecl 0x13b128128 <col:46, col:56> col:56 invalid tvb 'int *'
  |-ParmVarDecl 0x13b1281a8 <col:61, col:74> col:74 invalid pinfo 'int *'
  |-ParmVarDecl 0x13b128228 <col:81, col:93> col:93 invalid tree 'int *'
  |-ParmVarDecl 0x13b1282a8 <col:99, col:103> col:103 used offset 'int'
  |-ParmVarDecl 0x13b128328 <line:2:37, col:57> col:57 invalid api_version 'int'
  `-CompoundStmt 0x13b141e20 <line:3:1, line:16:1>
    |-BinaryOperator 0x13b141bd0 <line:10:5, line:11:93> 'int' contains-errors '='
    | |-DeclRefExpr 0x13b141858 <line:10:5> 'int' lvalue ParmVar 0x13b1282a8 'offset' 'int'
    | `-CallExpr 0x13b141b70 <col:14, line:11:93> '<dependent type>' contains-errors
    |   |-DeclRefExpr 0x13b141958 <line:10:14> 'int ()' Function 0x13b1418a0 'dissect_kafka_array' 'int ()'
    |   |-RecoveryExpr 0x13b141af8 <col:34> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13b141990 <col:43> '<dependent type>' contains-errors lvalue
    |   |-RecoveryExpr 0x13b1419b0 <col:48> '<dependent type>' contains-errors lvalue
    |   |-DeclRefExpr 0x13b1419d0 <col:55> 'int' lvalue ParmVar 0x13b1282a8 'offset' 'int'
    |   |-IntegerLiteral 0x13b1419f0 <col:63> 'int' 0
    |   |-RecoveryExpr 0x13b141a10 <col:66> '<dependent type>' contains-errors lvalue
    |   |-UnaryOperator 0x13b141b38 <line:11:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow
    |   | `-RecoveryExpr 0x13b141b18 <col:35> '<dependent type>' contains-errors lvalue
    |   `-RecoveryExpr 0x13b141b50 <col:89> '<dependent type>' contains-errors lvalue
    |-CallExpr 0x13b141da0 <line:13:5, col:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x13b141cd0 <col:5> 'int ()' Function 0x13b141c18 'proto_item_set_end' 'int ()'
    | |-RecoveryExpr 0x13b141d80 <col:24> '<dependent type>' contains-errors lvalue
    | |-RecoveryExpr 0x13b141d08 <col:31> '<dependent type>' contains-errors lvalue
    | `-DeclRefExpr 0x13b141d28 <col:36> 'int' lvalue ParmVar 0x13b1282a8 'offset' 'int'
    `-ReturnStmt 0x13b141e10 <line:15:5, col:12>
      `-ImplicitCastExpr 0x13b141df8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13b141dd8 <col:12> 'int' lvalue ParmVar 0x13b1282a8 'offset' 'int'
