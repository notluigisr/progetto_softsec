`-FunctionDecl 0x1479154c8  line:1:1 invalid parse_cosine_hex_dump 'int (int, struct wtap_pkthdr *, int, int *, int *, char **)'
  |-ParmVarDecl 0x1478fbaf0 <col:23, col:30> col:30 invalid fh 'int'
  |-ParmVarDecl 0x1478fc0e8 <col:34, col:54> col:54 used phdr 'struct wtap_pkthdr *'
  |-ParmVarDecl 0x1478fc168 <col:60, col:64> col:64 used pkt_len 'int'
  |-ParmVarDecl 0x147915218 <line:2:5, col:13> col:13 invalid buf 'int *'
  |-ParmVarDecl 0x147915298 <col:18, col:23> col:23 used err 'int *'
  |-ParmVarDecl 0x147915348 <col:28, col:36> col:36 used err_info 'char **'
  `-CompoundStmt 0x147917868 <line:3:1, line:35:1>
    |-DeclStmt 0x147915648 <line:5:2, col:32>
    | `-VarDecl 0x1479155e0 <col:2, col:8> col:8 invalid line 'char'
    |-DeclStmt 0x1479158a8 <line:6:2, col:33>
    | |-VarDecl 0x147915678 <col:2, col:6> col:6 used i 'int'
    | |-VarDecl 0x1479156f8 <col:2, col:9> col:9 used hex_lines 'int'
    | |-VarDecl 0x147915778 <col:2, col:20> col:20 used n 'int'
    | `-VarDecl 0x1479157f8 <col:2, col:32> col:23 used caplen 'int' cinit
    |   `-IntegerLiteral 0x147915860 <col:32> 'int' 0
    |-CallExpr 0x147915ac8 <line:9:2, col:51> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x147915a20 <col:2> 'int ()' Function 0x147915968 'ws_buffer_assure_space' 'int ()'
    | |-RecoveryExpr 0x147915a40 <col:25> '<dependent type>' contains-errors lvalue
    | `-RecoveryExpr 0x147915aa8 <col:30> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x147915e20 <line:13:2, col:52> 'int' '='
    | |-DeclRefExpr 0x147915c40 <col:2> 'int' lvalue Var 0x1479156f8 'hex_lines' 'int'
    | `-BinaryOperator 0x147915e00 <col:14, col:52> 'int' '+'
    |   |-BinaryOperator 0x147915cb8 <col:14, col:24> 'int' '/'
    |   | |-ImplicitCastExpr 0x147915ca0 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x147915c60 <col:14> 'int' lvalue ParmVar 0x1478fc168 'pkt_len' 'int'
    |   | `-IntegerLiteral 0x147915c80 <col:24> 'int' 16
    |   `-ParenExpr 0x147915de0 <col:29, col:52> 'int'
    |     `-ConditionalOperator 0x147915db0 <col:30, col:51> 'int'
    |       |-ParenExpr 0x147915d50 <col:30, col:43> 'int'
    |       | `-BinaryOperator 0x147915d30 <col:31, col:41> 'int' '%'
    |       |   |-ImplicitCastExpr 0x147915d18 <col:31> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x147915cd8 <col:31> 'int' lvalue ParmVar 0x1478fc168 'pkt_len' 'int'
    |       |   `-IntegerLiteral 0x147915cf8 <col:41> 'int' 16
    |       |-IntegerLiteral 0x147915d70 <col:47> 'int' 1
    |       `-IntegerLiteral 0x147915d90 <col:51> 'int' 0
    |-ForStmt 0x147917790 <line:15:2, line:32:2>
    | |-BinaryOperator 0x147915e80 <line:15:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x147915e40 <col:7> 'int' lvalue Var 0x147915678 'i' 'int'
    | | `-IntegerLiteral 0x147915e60 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x147915f10 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x147915ee0 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x147915ea0 <col:14> 'int' lvalue Var 0x147915678 'i' 'int'
    | | `-ImplicitCastExpr 0x147915ef8 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x147915ec0 <col:18> 'int' lvalue Var 0x1479156f8 'hex_lines' 'int'
    | |-UnaryOperator 0x147915f50 <col:29, col:30> 'int' postfix '++'
    | | `-DeclRefExpr 0x147915f30 <col:29> 'int' lvalue Var 0x147915678 'i' 'int'
    | `-CompoundStmt 0x147917760 <col:34, line:32:2>
    |   |-IfStmt 0x147917020 <line:16:3, line:22:3>
    |   | |-BinaryOperator 0x1479161a8 <line:16:7, col:50> 'int' contains-errors '=='
    |   | | |-CallExpr 0x147916150 <col:7, col:45> '<dependent type>' contains-errors
    |   | | | |-DeclRefExpr 0x147916048 <col:7> 'int ()' Function 0x147915f90 'file_gets' 'int ()'
    |   | | | |-RecoveryExpr 0x147916068 <col:17> '<dependent type>' contains-errors lvalue
    |   | | | |-RecoveryExpr 0x147916130 <col:23> '<dependent type>' contains-errors lvalue
    |   | | | `-RecoveryExpr 0x1479160a0 <col:43> '<dependent type>' contains-errors lvalue
    |   | | `-RecoveryExpr 0x147916188 <col:50> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x147916ff8 <col:56, line:22:3>
    |   |   |-BinaryOperator 0x147916d88 <line:17:4, col:34> 'int' contains-errors '='
    |   |   | |-UnaryOperator 0x147916c00 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x1479161e8 <col:5> 'int *' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x1479161c8 <col:5> 'int *' lvalue ParmVar 0x147915298 'err' 'int *'
    |   |   | `-CallExpr 0x147916d58 <col:11, col:34> '<dependent type>' contains-errors
    |   |   |   |-DeclRefExpr 0x147916cf8 <col:11> 'int ()' Function 0x147916c40 'file_error' 'int ()'
    |   |   |   |-RecoveryExpr 0x147916d18 <col:22> '<dependent type>' contains-errors lvalue
    |   |   |   `-DeclRefExpr 0x147916d38 <col:26> 'char **' lvalue ParmVar 0x147915348 'err_info' 'char **'
    |   |   |-IfStmt 0x147916f90 <line:18:4, line:20:4>
    |   |   | |-BinaryOperator 0x147916e30 <line:18:8, col:16> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x147916e18 <col:8, col:9> 'int' <LValueToRValue>
    |   |   | | | `-UnaryOperator 0x147916de0 <col:8, col:9> 'int' lvalue prefix '*' cannot overflow
    |   |   | | |   `-ImplicitCastExpr 0x147916dc8 <col:9> 'int *' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x147916da8 <col:9> 'int *' lvalue ParmVar 0x147915298 'err' 'int *'
    |   |   | | `-IntegerLiteral 0x147916df8 <col:16> 'int' 0
    |   |   | `-CompoundStmt 0x147916f78 <col:19, line:20:4>
    |   |   |   `-BinaryOperator 0x147916f58 <line:19:5, col:12> 'int' contains-errors '='
    |   |   |     |-UnaryOperator 0x147916f20 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    |   |   |     | `-ImplicitCastExpr 0x147916f08 <col:6> 'int *' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x147916e50 <col:6> 'int *' lvalue ParmVar 0x147915298 'err' 'int *'
    |   |   |     `-RecoveryExpr 0x147916f38 <col:12> '<dependent type>' contains-errors lvalue
    |   |   `-ReturnStmt 0x147916fe8 <line:21:4, col:11>
    |   |     `-RecoveryExpr 0x147916fc8 <col:11> '<dependent type>' contains-errors lvalue
    |   |-IfStmt 0x1479171a8 <line:23:3, line:25:3>
    |   | |-CallExpr 0x147917160 <line:23:7, col:22> '<dependent type>' contains-errors
    |   | | |-DeclRefExpr 0x147917120 <col:7> 'int ()' Function 0x147917068 'empty_line' 'int ()'
    |   | | `-RecoveryExpr 0x147917140 <col:18> '<dependent type>' contains-errors lvalue
    |   | `-CompoundStmt 0x147917190 <col:25, line:25:3>
    |   |   `-BreakStmt 0x147917188 <line:24:4>
    |   |-IfStmt 0x1479176b8 <line:26:3, line:30:3>
    |   | |-RecoveryExpr 0x1479173b8 <line:26:7, col:60> '_Bool' contains-errors
    |   | `-CompoundStmt 0x1479176a0 <col:63, line:30:3>
    |   |   `-BinaryOperator 0x147917680 <line:28:4, col:30> 'char *' '='
    |   |     |-UnaryOperator 0x147917460 <col:4, col:5> 'char *' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x147917448 <col:5> 'char **' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x147917428 <col:5> 'char **' lvalue ParmVar 0x147915348 'err_info' 'char **'
    |   |     `-ImplicitCastExpr 0x147917668 <col:16, col:30> 'char *' <IntegralToPointer>
    |   |       `-CallExpr 0x147917628 <col:16, col:30> 'int'
    |   |         |-ImplicitCastExpr 0x147917610 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |         | `-DeclRefExpr 0x147917558 <col:16> 'int ()' Function 0x1479174a0 'g_strdup' 'int ()'
    |   |         `-ImplicitCastExpr 0x147917650 <col:25> 'char *' <ArrayToPointerDecay>
    |   |           `-StringLiteral 0x1479175c0 <col:25> 'char[4]' lvalue "STR"
    |   `-CompoundAssignOperator 0x147917730 <line:31:3, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1479176d8 <col:3> 'int' lvalue Var 0x1479157f8 'caplen' 'int'
    |     `-ImplicitCastExpr 0x147917718 <col:13> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1479176f8 <col:13> 'int' lvalue Var 0x147915778 'n' 'int'
    `-BinaryOperator 0x147917848 <line:33:2, col:17> '<dependent type>' contains-errors '='
      |-RecoveryExpr 0x147917800 <col:2, col:8> '<dependent type>' contains-errors lvalue
      | `-DeclRefExpr 0x1479177c8 <col:2> 'struct wtap_pkthdr *' lvalue ParmVar 0x1478fc0e8 'phdr' 'struct wtap_pkthdr *'
      `-DeclRefExpr 0x147917828 <col:17> 'int' lvalue Var 0x1479157f8 'caplen' 'int'
