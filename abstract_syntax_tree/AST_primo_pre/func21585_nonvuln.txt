`-FunctionDecl 0x1490267e8  line:1:1 lys_find_path 'int (const struct lys_module *, const struct lys_node *, const char *)'
  |-ParmVarDecl 0x14900e248 <col:15, col:40> col:40 used cur_module 'const struct lys_module *'
  |-ParmVarDecl 0x149026628 <col:52, col:75> col:75 used cur_node 'const struct lys_node *'
  |-ParmVarDecl 0x1490266a8 <col:85, col:97> col:97 used path 'const char *'
  `-CompoundStmt 0x149027270 <line:2:1, line:16:1>
    |-DeclStmt 0x149026ad8 <line:3:5, col:23>
    | |-RecordDecl 0x1490268f0 <col:5, col:12> col:12 struct ly_set
    | `-VarDecl 0x149026a58 <col:5, col:20> col:20 used ret 'struct ly_set *'
    |-DeclStmt 0x149026b70 <line:4:5, col:11>
    | `-VarDecl 0x149026b08 <col:5, col:9> col:9 used rc 'int'
    |-IfStmt 0x149026d50 <line:6:5, line:8:5>
    | |-BinaryOperator 0x149026cb8 <line:6:9, col:40> 'int' '||'
    | | |-ParenExpr 0x149026c48 <col:9, col:34> 'int'
    | | | `-BinaryOperator 0x149026c28 <col:10, col:26> 'int' '&&'
    | | |   |-UnaryOperator 0x149026bc0 <col:10, col:11> 'int' prefix '!' cannot overflow
    | | |   | `-ImplicitCastExpr 0x149026ba8 <col:11> 'const struct lys_module *' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x149026b88 <col:11> 'const struct lys_module *' lvalue ParmVar 0x14900e248 'cur_module' 'const struct lys_module *'
    | | |   `-UnaryOperator 0x149026c10 <col:25, col:26> 'int' prefix '!' cannot overflow
    | | |     `-ImplicitCastExpr 0x149026bf8 <col:26> 'const struct lys_node *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x149026bd8 <col:26> 'const struct lys_node *' lvalue ParmVar 0x149026628 'cur_node' 'const struct lys_node *'
    | | `-UnaryOperator 0x149026ca0 <col:39, col:40> 'int' prefix '!' cannot overflow
    | |   `-ImplicitCastExpr 0x149026c88 <col:40> 'const char *' <LValueToRValue>
    | |     `-DeclRefExpr 0x149026c68 <col:40> 'const char *' lvalue ParmVar 0x1490266a8 'path' 'const char *'
    | `-CompoundStmt 0x149026d38 <col:46, line:8:5>
    |   `-ReturnStmt 0x149026d28 <line:7:9, col:16>
    |     `-RecoveryExpr 0x149026d08 <col:16> '<dependent type>' contains-errors lvalue
    |-BinaryOperator 0x1490270e0 <line:10:5, col:70> 'int' '='
    | |-DeclRefExpr 0x149026d70 <col:5> 'int' lvalue Var 0x149026b08 'rc' 'int'
    | `-CallExpr 0x149027048 <col:10, col:70> 'int'
    |   |-ImplicitCastExpr 0x149027030 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x149026ea0 <col:10> 'int ()' Function 0x149026de8 'resolve_schema_nodeid' 'int ()'
    |   |-ImplicitCastExpr 0x149027098 <col:32> 'const char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x149026ec0 <col:32> 'const char *' lvalue ParmVar 0x1490266a8 'path' 'const char *'
    |   |-ImplicitCastExpr 0x1490270b0 <col:38> 'const struct lys_node *' <LValueToRValue>
    |   | `-DeclRefExpr 0x149026ee0 <col:38> 'const struct lys_node *' lvalue ParmVar 0x149026628 'cur_node' 'const struct lys_node *'
    |   |-ImplicitCastExpr 0x1490270c8 <col:48> 'const struct lys_module *' <LValueToRValue>
    |   | `-DeclRefExpr 0x149026f00 <col:48> 'const struct lys_module *' lvalue ParmVar 0x14900e248 'cur_module' 'const struct lys_module *'
    |   |-UnaryOperator 0x149026fa0 <col:60, col:61> 'struct ly_set **' prefix '&' cannot overflow
    |   | `-DeclRefExpr 0x149026f20 <col:61> 'struct ly_set *' lvalue Var 0x149026a58 'ret' 'struct ly_set *'
    |   |-IntegerLiteral 0x149026fb8 <col:66> 'int' 1
    |   `-IntegerLiteral 0x149026fd8 <col:69> 'int' 1
    |-IfStmt 0x1490271f0 <line:11:5, line:13:5>
    | |-BinaryOperator 0x149027170 <line:11:9, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x149027158 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x149027100 <col:9> 'int' lvalue Var 0x149026b08 'rc' 'int'
    | | `-UnaryOperator 0x149027140 <col:15, col:16> 'int' prefix '-'
    | |   `-IntegerLiteral 0x149027120 <col:16> 'int' 1
    | `-CompoundStmt 0x1490271d8 <col:19, line:13:5>
    |   `-ReturnStmt 0x1490271c8 <line:12:9, col:16>
    |     `-RecoveryExpr 0x1490271a8 <col:16> '<dependent type>' contains-errors lvalue
    `-ReturnStmt 0x149027260 <line:15:5, col:12>
      `-ImplicitCastExpr 0x149027248 <col:12> 'int' <PointerToIntegral>
        `-ImplicitCastExpr 0x149027230 <col:12> 'struct ly_set *' <LValueToRValue>
          `-DeclRefExpr 0x149027210 <col:12> 'struct ly_set *' lvalue Var 0x149026a58 'ret' 'struct ly_set *'
