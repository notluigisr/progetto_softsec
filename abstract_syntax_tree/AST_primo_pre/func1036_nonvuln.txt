`-FunctionDecl 0x12200de98  line:1:10 invalid Init 'int (int, const int)'
  |-ParmVarDecl 0x12200dcf0 <col:15, col:24> col:24 invalid input_type 'int'
  |-ParmVarDecl 0x12200dd70 <col:36, <invalid sloc>> col:48 invalid 'const int'
  `-CompoundStmt 0x122029000 <line:3:38, line:13:3>
    |-CallExpr 0x122028278 <line:4:5, line:11:42> '<dependent type>' contains-errors
    | |-DeclRefExpr 0x12200e0b0 <line:4:5> 'int ()' Function 0x12200dff8 'TF_CHECK_OK' 'int ()'
    | `-CallExpr 0x122028250 <col:17, line:11:41> '<dependent type>' contains-errors
    |   |-CXXDependentScopeMemberExpr 0x1220281d0 <line:4:17, line:11:22> '<dependent type>' contains-errors lvalue .Finalize
    |   | `-CallExpr 0x1220281a0 <line:4:17, line:10:39> '<dependent type>' contains-errors
    |   |   |-CXXDependentScopeMemberExpr 0x122028138 <line:4:17, line:10:22> '<dependent type>' contains-errors lvalue .Attr
    |   |   | `-CallExpr 0x122028108 <line:4:17, line:9:42> '<dependent type>' contains-errors
    |   |   |   |-CXXDependentScopeMemberExpr 0x1220280a0 <line:4:17, line:9:22> '<dependent type>' contains-errors lvalue .Attr
    |   |   |   | `-CallExpr 0x122028070 <line:4:17, line:8:44> '<dependent type>' contains-errors
    |   |   |   |   |-CXXDependentScopeMemberExpr 0x122028008 <line:4:17, line:8:22> '<dependent type>' contains-errors lvalue .Attr
    |   |   |   |   | `-CallExpr 0x122027fd8 <line:4:17, line:7:43> '<dependent type>' contains-errors
    |   |   |   |   |   |-CXXDependentScopeMemberExpr 0x122027f70 <line:4:17, line:7:22> '<dependent type>' contains-errors lvalue .Attr
    |   |   |   |   |   | `-CallExpr 0x122027f40 <line:4:17, line:6:38> '<dependent type>' contains-errors
    |   |   |   |   |   |   |-CXXDependentScopeMemberExpr 0x122027ed8 <line:4:17, line:6:22> '<dependent type>' contains-errors lvalue .Attr
    |   |   |   |   |   |   | `-CallExpr 0x122027eb0 <line:4:17, line:5:49> '<dependent type>' contains-errors
    |   |   |   |   |   |   |   |-RecoveryExpr 0x122027e88 <line:4:17, line:5:22> '<dependent type>' contains-errors lvalue
    |   |   |   |   |   |   |   | `-CallExpr 0x122027e48 <line:4:17, col:37> 'int'
    |   |   |   |   |   |   |   |   |-ImplicitCastExpr 0x122027e30 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   |   |   |   |   |   |   | `-DeclRefExpr 0x12200e1b0 <col:17> 'int ()' Function 0x12200e0f8 'NodeDefBuilder' 'int ()'
    |   |   |   |   |   |   |   |   `-ImplicitCastExpr 0x122027e70 <col:32> 'char *' <ArrayToPointerDecay>
    |   |   |   |   |   |   |   |     `-StringLiteral 0x12200e210 <col:32> 'char[4]' lvalue "STR"
    |   |   |   |   |   |   |   `-CallExpr 0x122027848 <line:5:28, col:48> '<dependent type>' contains-errors
    |   |   |   |   |   |   |     |-DeclRefExpr 0x122027808 <col:28> 'int ()' Function 0x122027750 'FakeInput' 'int ()'
    |   |   |   |   |   |   |     `-RecoveryExpr 0x122027828 <col:38> '<dependent type>' contains-errors lvalue
    |   |   |   |   |   |   |-StringLiteral 0x1220278e0 <line:6:27> 'char[4]' lvalue "STR"
    |   |   |   |   |   |   `-RecoveryExpr 0x122027f20 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |   |   |   |-StringLiteral 0x122027990 <line:7:27> 'char[4]' lvalue "STR"
    |   |   |   |   |   `-RecoveryExpr 0x122027fb8 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |   |   |-StringLiteral 0x122027a40 <line:8:27> 'char[4]' lvalue "STR"
    |   |   |   |   `-RecoveryExpr 0x122028050 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |   |-StringLiteral 0x122027af0 <line:9:27> 'char[4]' lvalue "STR"
    |   |   |   `-RecoveryExpr 0x1220280e8 <col:34> '<dependent type>' contains-errors lvalue
    |   |   |-StringLiteral 0x122027ba0 <line:10:27> 'char[4]' lvalue "STR"
    |   |   `-RecoveryExpr 0x122028180 <col:34> '<dependent type>' contains-errors lvalue
    |   `-CallExpr 0x122028230 <line:11:31, col:40> 'int'
    |     `-ImplicitCastExpr 0x122028218 <col:31> 'int (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x122027d30 <col:31> 'int ()' Function 0x122027c78 'node_def' 'int ()'
    `-ReturnStmt 0x1220283d8 <line:12:5, col:19>
      `-CallExpr 0x1220283b8 <col:12, col:19> 'int'
        `-ImplicitCastExpr 0x1220283a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
          `-DeclRefExpr 0x122028380 <col:12> 'int ()' Function 0x1220282c8 'InitOp' 'int ()'
